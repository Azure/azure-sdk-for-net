// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.IoT.DeviceUpdate.Models
{
    /// <summary> Update metadata. </summary>
    public partial class Update
    {
        /// <summary> Initializes a new instance of Update. </summary>
        /// <param name="updateId"> Update identity. </param>
        /// <param name="updateType"> Update type. </param>
        /// <param name="installedCriteria"> String interpreted by Device Update client to determine if the update is installed on the device. </param>
        /// <param name="compatibility"> List of update compatibility information. </param>
        /// <param name="manifestVersion"> Schema version of manifest used to import the update. </param>
        /// <param name="importedDateTime"> Date and time in UTC when the update was imported. </param>
        /// <param name="createdDateTime"> Date and time in UTC when the update was created. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="updateId"/>, <paramref name="updateType"/>, <paramref name="installedCriteria"/>, <paramref name="compatibility"/>, or <paramref name="manifestVersion"/> is null. </exception>
        internal Update(UpdateId updateId, string updateType, string installedCriteria, IEnumerable<Compatibility> compatibility, string manifestVersion, DateTimeOffset importedDateTime, DateTimeOffset createdDateTime)
        {
            if (updateId == null)
            {
                throw new ArgumentNullException(nameof(updateId));
            }
            if (updateType == null)
            {
                throw new ArgumentNullException(nameof(updateType));
            }
            if (installedCriteria == null)
            {
                throw new ArgumentNullException(nameof(installedCriteria));
            }
            if (compatibility == null)
            {
                throw new ArgumentNullException(nameof(compatibility));
            }
            if (manifestVersion == null)
            {
                throw new ArgumentNullException(nameof(manifestVersion));
            }

            UpdateId = updateId;
            UpdateType = updateType;
            InstalledCriteria = installedCriteria;
            Compatibility = compatibility.ToList();
            ManifestVersion = manifestVersion;
            ImportedDateTime = importedDateTime;
            CreatedDateTime = createdDateTime;
        }

        /// <summary> Initializes a new instance of Update. </summary>
        /// <param name="updateId"> Update identity. </param>
        /// <param name="updateType"> Update type. </param>
        /// <param name="installedCriteria"> String interpreted by Device Update client to determine if the update is installed on the device. </param>
        /// <param name="compatibility"> List of update compatibility information. </param>
        /// <param name="manifestVersion"> Schema version of manifest used to import the update. </param>
        /// <param name="importedDateTime"> Date and time in UTC when the update was imported. </param>
        /// <param name="createdDateTime"> Date and time in UTC when the update was created. </param>
        /// <param name="etag"> Update ETag. </param>
        internal Update(UpdateId updateId, string updateType, string installedCriteria, IReadOnlyList<Compatibility> compatibility, string manifestVersion, DateTimeOffset importedDateTime, DateTimeOffset createdDateTime, string etag)
        {
            UpdateId = updateId;
            UpdateType = updateType;
            InstalledCriteria = installedCriteria;
            Compatibility = compatibility;
            ManifestVersion = manifestVersion;
            ImportedDateTime = importedDateTime;
            CreatedDateTime = createdDateTime;
            Etag = etag;
        }

        /// <summary> Update identity. </summary>
        public UpdateId UpdateId { get; }
        /// <summary> Update type. </summary>
        public string UpdateType { get; }
        /// <summary> String interpreted by Device Update client to determine if the update is installed on the device. </summary>
        public string InstalledCriteria { get; }
        /// <summary> List of update compatibility information. </summary>
        public IReadOnlyList<Compatibility> Compatibility { get; }
        /// <summary> Schema version of manifest used to import the update. </summary>
        public string ManifestVersion { get; }
        /// <summary> Date and time in UTC when the update was imported. </summary>
        public DateTimeOffset ImportedDateTime { get; }
        /// <summary> Date and time in UTC when the update was created. </summary>
        public DateTimeOffset CreatedDateTime { get; }
        /// <summary> Update ETag. </summary>
        public string Etag { get; }
    }
}
