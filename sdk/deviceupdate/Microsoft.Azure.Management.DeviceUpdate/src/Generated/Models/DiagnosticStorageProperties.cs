// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DeviceUpdate.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Customer-initiated diagnostic log collection storage properties
    /// </summary>
    public partial class DiagnosticStorageProperties
    {
        /// <summary>
        /// Initializes a new instance of the DiagnosticStorageProperties
        /// class.
        /// </summary>
        public DiagnosticStorageProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DiagnosticStorageProperties
        /// class.
        /// </summary>
        /// <param name="resourceId">ResourceId of the diagnostic storage
        /// account</param>
        /// <param name="connectionString">ConnectionString of the diagnostic
        /// storage account</param>
        public DiagnosticStorageProperties(string resourceId, string connectionString = default(string))
        {
            ConnectionString = connectionString;
            ResourceId = resourceId;
            CustomInit();
        }
        /// <summary>
        /// Static constructor for DiagnosticStorageProperties class.
        /// </summary>
        static DiagnosticStorageProperties()
        {
            AuthenticationType = "KeyBased";
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets connectionString of the diagnostic storage account
        /// </summary>
        [JsonProperty(PropertyName = "connectionString")]
        public string ConnectionString { get; set; }

        /// <summary>
        /// Gets or sets resourceId of the diagnostic storage account
        /// </summary>
        [JsonProperty(PropertyName = "resourceId")]
        public string ResourceId { get; set; }

        /// <summary>
        /// Authentication Type
        /// </summary>
        [JsonProperty(PropertyName = "authenticationType")]
        public static string AuthenticationType { get; private set; }

    }
}
