// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.SecurityDevOps.Models
{
    public partial class AzureDevOpsConnectorProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(ProvisioningState))
            {
                writer.WritePropertyName("provisioningState");
                writer.WriteStringValue(ProvisioningState.Value.ToString());
            }
            if (Optional.IsDefined(Authorization))
            {
                writer.WritePropertyName("authorization");
                writer.WriteObjectValue(Authorization);
            }
            if (Optional.IsCollectionDefined(Orgs))
            {
                writer.WritePropertyName("orgs");
                writer.WriteStartArray();
                foreach (var item in Orgs)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static AzureDevOpsConnectorProperties DeserializeAzureDevOpsConnectorProperties(JsonElement element)
        {
            Optional<ProvisioningState> provisioningState = default;
            Optional<AuthorizationInfo> authorization = default;
            Optional<IList<AzureDevOpsOrgMetadata>> orgs = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("provisioningState"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    provisioningState = new ProvisioningState(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("authorization"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    authorization = AuthorizationInfo.DeserializeAuthorizationInfo(property.Value);
                    continue;
                }
                if (property.NameEquals("orgs"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<AzureDevOpsOrgMetadata> array = new List<AzureDevOpsOrgMetadata>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(AzureDevOpsOrgMetadata.DeserializeAzureDevOpsOrgMetadata(item));
                    }
                    orgs = array;
                    continue;
                }
            }
            return new AzureDevOpsConnectorProperties(Optional.ToNullable(provisioningState), authorization.Value, Optional.ToList(orgs));
        }
    }
}
