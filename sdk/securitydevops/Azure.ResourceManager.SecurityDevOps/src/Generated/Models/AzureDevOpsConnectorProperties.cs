// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.SecurityDevOps.Models
{
    /// <summary> The AzureDevOpsConnectorProperties. </summary>
    public partial class AzureDevOpsConnectorProperties
    {
        /// <summary> Initializes a new instance of <see cref="AzureDevOpsConnectorProperties"/>. </summary>
        public AzureDevOpsConnectorProperties()
        {
            Orgs = new ChangeTrackingList<AzureDevOpsOrgMetadata>();
        }

        /// <summary> Initializes a new instance of <see cref="AzureDevOpsConnectorProperties"/>. </summary>
        /// <param name="provisioningState"></param>
        /// <param name="authorization"></param>
        /// <param name="orgs"> Gets or sets org onboarding information. </param>
        internal AzureDevOpsConnectorProperties(ProvisioningState? provisioningState, AuthorizationInfo authorization, IList<AzureDevOpsOrgMetadata> orgs)
        {
            ProvisioningState = provisioningState;
            Authorization = authorization;
            Orgs = orgs;
        }

        /// <summary> Gets or sets the provisioning state. </summary>
        public ProvisioningState? ProvisioningState { get; set; }
        /// <summary> Gets or sets the authorization. </summary>
        internal AuthorizationInfo Authorization { get; set; }
        /// <summary> Gets or sets one-time OAuth code to exchange for refresh and access tokens. </summary>
        public string AuthorizationCode
        {
            get => Authorization is null ? default : Authorization.Code;
            set
            {
                if (Authorization is null)
                    Authorization = new AuthorizationInfo();
                Authorization.Code = value;
            }
        }

        /// <summary> Gets or sets org onboarding information. </summary>
        public IList<AzureDevOpsOrgMetadata> Orgs { get; }
    }
}
