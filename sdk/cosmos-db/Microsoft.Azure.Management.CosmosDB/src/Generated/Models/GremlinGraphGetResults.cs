// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.CosmosDB.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// An Azure Cosmos DB Gremlin graph.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class GremlinGraphGetResults : ARMResourceProperties
    {
        /// <summary>
        /// Initializes a new instance of the GremlinGraphGetResults class.
        /// </summary>
        public GremlinGraphGetResults()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GremlinGraphGetResults class.
        /// </summary>
        /// <param name="gremlinGraphGetResultsId">Name of the Cosmos DB
        /// Gremlin graph</param>
        /// <param name="id">The unique resource identifier of the ARM
        /// resource.</param>
        /// <param name="name">The name of the ARM resource.</param>
        /// <param name="type">The type of Azure resource.</param>
        /// <param name="location">The location of the resource group to which
        /// the resource belongs.</param>
        /// <param name="indexingPolicy">The configuration of the indexing
        /// policy. By default, the indexing is automatic for all document
        /// paths within the graph</param>
        /// <param name="partitionKey">The configuration of the partition key
        /// to be used for partitioning data into multiple partitions</param>
        /// <param name="defaultTtl">Default time to live</param>
        /// <param name="uniqueKeyPolicy">The unique key policy configuration
        /// for specifying uniqueness constraints on documents in the
        /// collection in the Azure Cosmos DB service.</param>
        /// <param name="conflictResolutionPolicy">The conflict resolution
        /// policy for the graph.</param>
        /// <param name="_rid">A system generated property. A unique
        /// identifier.</param>
        /// <param name="_ts">A system generated property that denotes the last
        /// updated timestamp of the resource.</param>
        /// <param name="_etag">A system generated property representing the
        /// resource etag required for optimistic concurrency control.</param>
        public GremlinGraphGetResults(string gremlinGraphGetResultsId, string id = default(string), string name = default(string), string type = default(string), string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), IndexingPolicy indexingPolicy = default(IndexingPolicy), ContainerPartitionKey partitionKey = default(ContainerPartitionKey), int? defaultTtl = default(int?), UniqueKeyPolicy uniqueKeyPolicy = default(UniqueKeyPolicy), ConflictResolutionPolicy conflictResolutionPolicy = default(ConflictResolutionPolicy), string _rid = default(string), object _ts = default(object), string _etag = default(string))
            : base(id, name, type, location, tags)
        {
            GremlinGraphGetResultsId = gremlinGraphGetResultsId;
            IndexingPolicy = indexingPolicy;
            PartitionKey = partitionKey;
            DefaultTtl = defaultTtl;
            UniqueKeyPolicy = uniqueKeyPolicy;
            ConflictResolutionPolicy = conflictResolutionPolicy;
            this._rid = _rid;
            this._ts = _ts;
            this._etag = _etag;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the Cosmos DB Gremlin graph
        /// </summary>
        [JsonProperty(PropertyName = "properties.id")]
        public string GremlinGraphGetResultsId { get; set; }

        /// <summary>
        /// Gets or sets the configuration of the indexing policy. By default,
        /// the indexing is automatic for all document paths within the graph
        /// </summary>
        [JsonProperty(PropertyName = "properties.indexingPolicy")]
        public IndexingPolicy IndexingPolicy { get; set; }

        /// <summary>
        /// Gets or sets the configuration of the partition key to be used for
        /// partitioning data into multiple partitions
        /// </summary>
        [JsonProperty(PropertyName = "properties.partitionKey")]
        public ContainerPartitionKey PartitionKey { get; set; }

        /// <summary>
        /// Gets or sets default time to live
        /// </summary>
        [JsonProperty(PropertyName = "properties.defaultTtl")]
        public int? DefaultTtl { get; set; }

        /// <summary>
        /// Gets or sets the unique key policy configuration for specifying
        /// uniqueness constraints on documents in the collection in the Azure
        /// Cosmos DB service.
        /// </summary>
        [JsonProperty(PropertyName = "properties.uniqueKeyPolicy")]
        public UniqueKeyPolicy UniqueKeyPolicy { get; set; }

        /// <summary>
        /// Gets or sets the conflict resolution policy for the graph.
        /// </summary>
        [JsonProperty(PropertyName = "properties.conflictResolutionPolicy")]
        public ConflictResolutionPolicy ConflictResolutionPolicy { get; set; }

        /// <summary>
        /// Gets a system generated property. A unique identifier.
        /// </summary>
        [JsonProperty(PropertyName = "properties._rid")]
        public string _rid { get; private set; }

        /// <summary>
        /// Gets a system generated property that denotes the last updated
        /// timestamp of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties._ts")]
        public object _ts { get; private set; }

        /// <summary>
        /// Gets a system generated property representing the resource etag
        /// required for optimistic concurrency control.
        /// </summary>
        [JsonProperty(PropertyName = "properties._etag")]
        public string _etag { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (GremlinGraphGetResultsId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "GremlinGraphGetResultsId");
            }
            if (PartitionKey != null)
            {
                PartitionKey.Validate();
            }
        }
    }
}
