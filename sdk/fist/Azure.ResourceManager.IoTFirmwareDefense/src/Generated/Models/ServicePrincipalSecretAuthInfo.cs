// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.IoTFirmwareDefense.Models
{
    /// <summary> The authentication info when authType is servicePrincipal secret. </summary>
    public partial class ServicePrincipalSecretAuthInfo : AuthInfoBase
    {
        /// <summary> Initializes a new instance of ServicePrincipalSecretAuthInfo. </summary>
        /// <param name="clientId"> ServicePrincipal application clientId for servicePrincipal auth. </param>
        /// <param name="principalId"> Principal Id for servicePrincipal auth. </param>
        /// <param name="secret"> Secret for servicePrincipal auth. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="clientId"/>, <paramref name="principalId"/> or <paramref name="secret"/> is null. </exception>
        public ServicePrincipalSecretAuthInfo(string clientId, string principalId, string secret)
        {
            Argument.AssertNotNull(clientId, nameof(clientId));
            Argument.AssertNotNull(principalId, nameof(principalId));
            Argument.AssertNotNull(secret, nameof(secret));

            ClientId = clientId;
            PrincipalId = principalId;
            Secret = secret;
            Roles = new ChangeTrackingList<string>();
            AuthType = AuthType.ServicePrincipalSecret;
        }

        /// <summary> Initializes a new instance of ServicePrincipalSecretAuthInfo. </summary>
        /// <param name="authType"> The authentication type. </param>
        /// <param name="clientId"> ServicePrincipal application clientId for servicePrincipal auth. </param>
        /// <param name="principalId"> Principal Id for servicePrincipal auth. </param>
        /// <param name="secret"> Secret for servicePrincipal auth. </param>
        /// <param name="deleteOrUpdateBehavior"> Indicates whether to clean up previous operation when Linker is updating or deleting. </param>
        /// <param name="roles"> Optional, this value specifies the Azure roles to be assigned. Automatically. </param>
        /// <param name="userName"> Username created in the database which is mapped to a user in AAD. </param>
        internal ServicePrincipalSecretAuthInfo(AuthType authType, string clientId, string principalId, string secret, DeleteOrUpdateBehavior? deleteOrUpdateBehavior, IList<string> roles, string userName) : base(authType)
        {
            ClientId = clientId;
            PrincipalId = principalId;
            Secret = secret;
            DeleteOrUpdateBehavior = deleteOrUpdateBehavior;
            Roles = roles;
            UserName = userName;
            AuthType = authType;
        }

        /// <summary> ServicePrincipal application clientId for servicePrincipal auth. </summary>
        public string ClientId { get; set; }
        /// <summary> Principal Id for servicePrincipal auth. </summary>
        public string PrincipalId { get; set; }
        /// <summary> Secret for servicePrincipal auth. </summary>
        public string Secret { get; set; }
        /// <summary> Indicates whether to clean up previous operation when Linker is updating or deleting. </summary>
        public DeleteOrUpdateBehavior? DeleteOrUpdateBehavior { get; set; }
        /// <summary> Optional, this value specifies the Azure roles to be assigned. Automatically. </summary>
        public IList<string> Roles { get; }
        /// <summary> Username created in the database which is mapped to a user in AAD. </summary>
        public string UserName { get; set; }
    }
}
