// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.IoTFirmwareDefense.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.IoTFirmwareDefense
{
    /// <summary>
    /// A class representing the DryrunResource data model.
    /// a dryrun job resource
    /// </summary>
    public partial class DryrunResourceData : ResourceData
    {
        /// <summary> Initializes a new instance of DryrunResourceData. </summary>
        public DryrunResourceData()
        {
            PrerequisiteResults = new ChangeTrackingList<DryrunPrerequisiteResult>();
            OperationPreviews = new ChangeTrackingList<DryrunOperationPreview>();
        }

        /// <summary> Initializes a new instance of DryrunResourceData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="parameters">
        /// The parameters of the dryrun
        /// Please note <see cref="DryrunParameters"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="CreateOrUpdateDryrunParameters"/>.
        /// </param>
        /// <param name="prerequisiteResults">
        /// the result of the dryrun
        /// Please note <see cref="DryrunPrerequisiteResult"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="BasicErrorDryrunPrerequisiteResult"/> and <see cref="PermissionsMissingDryrunPrerequisiteResult"/>.
        /// </param>
        /// <param name="operationPreviews"> the preview of the operations for creation. </param>
        /// <param name="provisioningState"> The provisioning state. </param>
        internal DryrunResourceData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, DryrunParameters parameters, IReadOnlyList<DryrunPrerequisiteResult> prerequisiteResults, IReadOnlyList<DryrunOperationPreview> operationPreviews, string provisioningState) : base(id, name, resourceType, systemData)
        {
            Parameters = parameters;
            PrerequisiteResults = prerequisiteResults;
            OperationPreviews = operationPreviews;
            ProvisioningState = provisioningState;
        }

        /// <summary>
        /// The parameters of the dryrun
        /// Please note <see cref="DryrunParameters"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="CreateOrUpdateDryrunParameters"/>.
        /// </summary>
        public DryrunParameters Parameters { get; set; }
        /// <summary>
        /// the result of the dryrun
        /// Please note <see cref="DryrunPrerequisiteResult"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="BasicErrorDryrunPrerequisiteResult"/> and <see cref="PermissionsMissingDryrunPrerequisiteResult"/>.
        /// </summary>
        public IReadOnlyList<DryrunPrerequisiteResult> PrerequisiteResults { get; }
        /// <summary> the preview of the operations for creation. </summary>
        public IReadOnlyList<DryrunOperationPreview> OperationPreviews { get; }
        /// <summary> The provisioning state. </summary>
        public string ProvisioningState { get; }
    }
}
