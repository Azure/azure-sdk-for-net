// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.WorkloadsVirtualInstance.Models
{
    /// <summary> Defines the possible values for system lifecycle stage. </summary>
    public readonly partial struct SystemLifecycleStage : IEquatable<SystemLifecycleStage>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="SystemLifecycleStage"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public SystemLifecycleStage(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string ActiveValue = "Active";
        private const string InActiveValue = "InActive";
        private const string InBuildValue = "InBuild";

        /// <summary> The stage indicating that the workload system is fully built, and is up &amp; running. </summary>
        public static SystemLifecycleStage Active { get; } = new SystemLifecycleStage(ActiveValue);
        /// <summary> The stage indicating that the workload system is fully built but either not running or being decommissioned. </summary>
        public static SystemLifecycleStage InActive { get; } = new SystemLifecycleStage(InActiveValue);
        /// <summary> The stage indicating that the workload system is being built. </summary>
        public static SystemLifecycleStage InBuild { get; } = new SystemLifecycleStage(InBuildValue);
        /// <summary> Determines if two <see cref="SystemLifecycleStage"/> values are the same. </summary>
        public static bool operator ==(SystemLifecycleStage left, SystemLifecycleStage right) => left.Equals(right);
        /// <summary> Determines if two <see cref="SystemLifecycleStage"/> values are not the same. </summary>
        public static bool operator !=(SystemLifecycleStage left, SystemLifecycleStage right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="SystemLifecycleStage"/>. </summary>
        public static implicit operator SystemLifecycleStage(string value) => new SystemLifecycleStage(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is SystemLifecycleStage other && Equals(other);
        /// <inheritdoc />
        public bool Equals(SystemLifecycleStage other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
