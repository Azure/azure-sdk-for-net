// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Monitor.OpenTelemetry.Exporter.Models
{
    internal partial class TelemetryItem : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Version.HasValue)
            {
                writer.WritePropertyName("ver"u8);
                writer.WriteNumberValue(Version.Value);
            }
            writer.WritePropertyName("name"u8);
            writer.WriteStringValue(Name);
            writer.WritePropertyName("time"u8);
            writer.WriteStringValue(Time, "O");
            if (SampleRate.HasValue)
            {
                writer.WritePropertyName("sampleRate"u8);
                writer.WriteNumberValue(SampleRate.Value);
            }
            if (Sequence != null)
            {
                writer.WritePropertyName("seq"u8);
                writer.WriteStringValue(Sequence);
            }
            if (InstrumentationKey != null)
            {
                writer.WritePropertyName("iKey"u8);
                writer.WriteStringValue(InstrumentationKey);
            }
            if (!(Tags is ChangeTrackingDictionary<string, string> collection && collection.IsUndefined))
            {
                writer.WritePropertyName("tags"u8);
                writer.WriteStartObject();
                foreach (var item in Tags)
                {
                    writer.WritePropertyName(item.Key);
                    writer.WriteStringValue(item.Value);
                }
                writer.WriteEndObject();
            }
            if (Data != null)
            {
                writer.WritePropertyName("data"u8);
                writer.WriteObjectValue(Data);
            }
            writer.WriteEndObject();
        }
    }
}
