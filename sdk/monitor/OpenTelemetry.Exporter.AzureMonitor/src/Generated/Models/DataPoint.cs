// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace OpenTelemetry.Exporter.AzureMonitor.Models
{
    /// <summary> Metric data single measurement. </summary>
    public partial class DataPoint
    {
        /// <summary> Initializes a new instance of DataPoint. </summary>
        /// <param name="name"> Name of the metric. </param>
        /// <param name="value"> Single value for measurement. Sum of individual measurements for the aggregation. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> is null. </exception>
        public DataPoint(string name, double value)
        {
            if (name == null)
            {
                throw new ArgumentNullException(nameof(name));
            }

            Name = name;
            Value = value;
        }

        /// <summary> Initializes a new instance of DataPoint. </summary>
        /// <param name="ns"> Namespace of the metric. </param>
        /// <param name="name"> Name of the metric. </param>
        /// <param name="kind"> Metric type. Single measurement or the aggregated value. TODO: add default. </param>
        /// <param name="value"> Single value for measurement. Sum of individual measurements for the aggregation. </param>
        /// <param name="count"> Metric weight of the aggregated metric. Should not be set for a measurement. </param>
        /// <param name="min"> Minimum value of the aggregated metric. Should not be set for a measurement. </param>
        /// <param name="max"> Maximum value of the aggregated metric. Should not be set for a measurement. </param>
        /// <param name="stdDev"> Standard deviation of the aggregated metric. Should not be set for a measurement. </param>
        internal DataPoint(string ns, string name, DataPointType? kind, double value, int? count, double? min, double? max, double? stdDev)
        {
            Ns = ns;
            Name = name;
            Kind = kind;
            Value = value;
            Count = count;
            Min = min;
            Max = max;
            StdDev = stdDev;
        }

        /// <summary> Namespace of the metric. </summary>
        public string Ns { get; set; }
        /// <summary> Name of the metric. </summary>
        public string Name { get; set; }
        /// <summary> Metric type. Single measurement or the aggregated value. TODO: add default. </summary>
        public DataPointType? Kind { get; set; }
        /// <summary> Single value for measurement. Sum of individual measurements for the aggregation. </summary>
        public double Value { get; set; }
        /// <summary> Metric weight of the aggregated metric. Should not be set for a measurement. </summary>
        public int? Count { get; set; }
        /// <summary> Minimum value of the aggregated metric. Should not be set for a measurement. </summary>
        public double? Min { get; set; }
        /// <summary> Maximum value of the aggregated metric. Should not be set for a measurement. </summary>
        public double? Max { get; set; }
        /// <summary> Standard deviation of the aggregated metric. Should not be set for a measurement. </summary>
        public double? StdDev { get; set; }
    }
}
