// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Monitor.OpenTelemetry.LiveMetrics.Models
{
    /// <summary> A collection of filters for a specificy telemetry type. </summary>
    internal partial class DocumentFilterConjunctionGroupInfo
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="DocumentFilterConjunctionGroupInfo"/>. </summary>
        internal DocumentFilterConjunctionGroupInfo()
        {
        }

        /// <summary> Initializes a new instance of <see cref="DocumentFilterConjunctionGroupInfo"/>. </summary>
        /// <param name="telemetryType"> Telemetry type. </param>
        /// <param name="filters"> An AND-connected group of FilterInfo objects. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal DocumentFilterConjunctionGroupInfo(DocumentFilterConjunctionGroupInfoTelemetryType? telemetryType, FilterConjunctionGroupInfo filters, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            TelemetryType = telemetryType;
            Filters = filters;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Telemetry type. </summary>
        public DocumentFilterConjunctionGroupInfoTelemetryType? TelemetryType { get; }
        /// <summary> An AND-connected group of FilterInfo objects. </summary>
        public FilterConjunctionGroupInfo Filters { get; }
    }
}
