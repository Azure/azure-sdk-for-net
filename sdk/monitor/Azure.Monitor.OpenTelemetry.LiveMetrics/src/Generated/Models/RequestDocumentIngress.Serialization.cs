// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Monitor.OpenTelemetry.LiveMetrics.Models
{
    internal partial class RequestDocumentIngress : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Name))
            {
                writer.WritePropertyName("Name"u8);
                writer.WriteStringValue(Name);
            }
            if (Optional.IsDefined(Url))
            {
                writer.WritePropertyName("Url"u8);
                writer.WriteStringValue(Url);
            }
            if (Optional.IsDefined(ResponseCode))
            {
                writer.WritePropertyName("ResponseCode"u8);
                writer.WriteStringValue(ResponseCode);
            }
            if (Optional.IsDefined(Duration))
            {
                writer.WritePropertyName("Duration"u8);
                writer.WriteStringValue(Duration);
            }
            if (Optional.IsDefined(DocumentType))
            {
                writer.WritePropertyName("DocumentType"u8);
                writer.WriteStringValue(DocumentType.Value.ToString());
            }
            if (Optional.IsCollectionDefined(DocumentStreamIds))
            {
                writer.WritePropertyName("DocumentStreamIds"u8);
                writer.WriteStartArray();
                foreach (var item in DocumentStreamIds)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(Properties))
            {
                writer.WritePropertyName("Properties"u8);
                writer.WriteStartArray();
                foreach (var item in Properties)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }
    }
}
