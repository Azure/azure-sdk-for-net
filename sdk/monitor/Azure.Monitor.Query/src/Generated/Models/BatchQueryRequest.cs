// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Monitor.Query.Models
{
    /// <summary> An single request in a batch. </summary>
    internal partial class BatchQueryRequest
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="BatchQueryRequest"/>. </summary>
        /// <param name="id"> Unique ID corresponding to each request in the batch. </param>
        /// <param name="body"> The Analytics query. Learn more about the [Analytics query syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/). </param>
        /// <param name="workspace"> Primary Workspace ID of the query. This is the Workspace ID from the Properties blade in the Azure portal. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/>, <paramref name="body"/> or <paramref name="workspace"/> is null. </exception>
        public BatchQueryRequest(string id, QueryBody body, string workspace)
        {
            Argument.AssertNotNull(id, nameof(id));
            Argument.AssertNotNull(body, nameof(body));
            Argument.AssertNotNull(workspace, nameof(workspace));

            Id = id;
            Headers = new ChangeTrackingDictionary<string, string>();
            Body = body;
            Path = "/query";
            Method = "POST";
            Workspace = workspace;
        }

        /// <summary> Initializes a new instance of <see cref="BatchQueryRequest"/>. </summary>
        /// <param name="id"> Unique ID corresponding to each request in the batch. </param>
        /// <param name="headers"> Headers of the request. Can use prefer header to set server timeout and to query statistics and visualization information. </param>
        /// <param name="body"> The Analytics query. Learn more about the [Analytics query syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/). </param>
        /// <param name="path"> The query path of a single request in a batch, defaults to /query. </param>
        /// <param name="method"> The method of a single request in a batch, defaults to POST. </param>
        /// <param name="workspace"> Primary Workspace ID of the query. This is the Workspace ID from the Properties blade in the Azure portal. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal BatchQueryRequest(string id, IDictionary<string, string> headers, QueryBody body, string path, string method, string workspace, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Id = id;
            Headers = headers;
            Body = body;
            Path = path;
            Method = method;
            Workspace = workspace;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="BatchQueryRequest"/> for deserialization. </summary>
        internal BatchQueryRequest()
        {
        }

        /// <summary> Unique ID corresponding to each request in the batch. </summary>
        public string Id { get; }
        /// <summary> Headers of the request. Can use prefer header to set server timeout and to query statistics and visualization information. </summary>
        public IDictionary<string, string> Headers { get; }
        /// <summary> The Analytics query. Learn more about the [Analytics query syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/). </summary>
        public QueryBody Body { get; }
        /// <summary> The query path of a single request in a batch, defaults to /query. </summary>
        public string Path { get; }
        /// <summary> The method of a single request in a batch, defaults to POST. </summary>
        public string Method { get; }
        /// <summary> Primary Workspace ID of the query. This is the Workspace ID from the Properties blade in the Azure portal. </summary>
        public string Workspace { get; }
    }
}
