// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Monitor.Query.Models
{
    public partial class Metric
    {
        internal static Metric DeserializeMetric(JsonElement element)
        {
            string id = default;
            string type = default;
            LocalizableString name = default;
            MetricUnit unit = default;
            IReadOnlyList<TimeSeriesElement> timeseries = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = LocalizableString.DeserializeLocalizableString(property.Value);
                    continue;
                }
                if (property.NameEquals("unit"))
                {
                    unit = property.Value.GetString().ToMetricUnit();
                    continue;
                }
                if (property.NameEquals("timeseries"))
                {
                    List<TimeSeriesElement> array = new List<TimeSeriesElement>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(TimeSeriesElement.DeserializeTimeSeriesElement(item));
                    }
                    timeseries = array;
                    continue;
                }
            }
            return new Metric(id, type, name, unit, timeseries);
        }
    }
}
