// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.Monitor.Query.Models
{
    /// <summary> Represents collection of metric namespaces. </summary>
    internal partial class MetricNamespaceCollection
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="MetricNamespaceCollection"/>. </summary>
        /// <param name="value"> The values for the metric namespaces. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        internal MetricNamespaceCollection(IEnumerable<MetricNamespace> value)
        {
            Argument.AssertNotNull(value, nameof(value));

            Value = value.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="MetricNamespaceCollection"/>. </summary>
        /// <param name="value"> The values for the metric namespaces. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal MetricNamespaceCollection(IReadOnlyList<MetricNamespace> value, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Value = value;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="MetricNamespaceCollection"/> for deserialization. </summary>
        internal MetricNamespaceCollection()
        {
        }

        /// <summary> The values for the metric namespaces. </summary>
        public IReadOnlyList<MetricNamespace> Value { get; }
    }
}
