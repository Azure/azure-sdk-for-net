// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.Monitor.Query.Metrics.Models
{
    /// <summary> The metric data response for a resource. </summary>
    public partial class MetricsQueryResult
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="MetricsQueryResult"/>. </summary>
        /// <param name="startTime"> The start time, in datetime format, for which the data was retrieved. </param>
        /// <param name="endTime"> The end time, in datetime format, for which the data was retrieved. </param>
        /// <param name="metrics"> The value of the collection. </param>
        internal MetricsQueryResult(string startTime, string endTime, IEnumerable<MetricResult> metrics)
        {
            StartTime = startTime;
            EndTime = endTime;
            Metrics = metrics.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="MetricsQueryResult"/>. </summary>
        /// <param name="startTime"> The start time, in datetime format, for which the data was retrieved. </param>
        /// <param name="endTime"> The end time, in datetime format, for which the data was retrieved. </param>
        /// <param name="granularity">
        /// The interval (window size) for which the metric data was returned in ISO 8601
        /// duration format with a special case for 'FULL' value that returns single
        /// datapoint for entire time span requested (*Examples: PT15M, PT1H, P1D, FULL*).
        /// This may be adjusted and different from what was originally requested if
        /// AutoAdjustTimegrain=true is specified.
        /// </param>
        /// <param name="namespace"> The namespace of the metrics been queried. </param>
        /// <param name="resourceRegion"> The region of the resource been queried for metrics. </param>
        /// <param name="resourceId"> The resource that has been queried for metrics. </param>
        /// <param name="metrics"> The value of the collection. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal MetricsQueryResult(string startTime, string endTime, string granularity, string @namespace, string resourceRegion, string resourceId, IList<MetricResult> metrics, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            StartTime = startTime;
            EndTime = endTime;
            Granularity = granularity;
            Namespace = @namespace;
            ResourceRegion = resourceRegion;
            ResourceId = resourceId;
            Metrics = metrics;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary>
        /// The interval (window size) for which the metric data was returned in ISO 8601
        /// duration format with a special case for 'FULL' value that returns single
        /// datapoint for entire time span requested (*Examples: PT15M, PT1H, P1D, FULL*).
        /// This may be adjusted and different from what was originally requested if
        /// AutoAdjustTimegrain=true is specified.
        /// </summary>
        public string Granularity { get; }

        /// <summary> The namespace of the metrics been queried. </summary>
        public string Namespace { get; }

        /// <summary> The region of the resource been queried for metrics. </summary>
        public string ResourceRegion { get; }

        /// <summary> The value of the collection. </summary>
        public IList<MetricResult> Metrics { get; }
    }
}
