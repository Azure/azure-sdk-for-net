// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ClientModel.Primitives;
using System.Threading;
using System.Threading.Tasks;
using Azure.Core;

namespace Azure.ResourceManager.Monitor
{
    internal class MonitorPrivateEndpointConnectionOperationSource : IOperationSource<MonitorPrivateEndpointConnectionResource>
    {
        private readonly ArmClient _client;

        internal MonitorPrivateEndpointConnectionOperationSource(ArmClient client)
        {
            _client = client;
        }

        MonitorPrivateEndpointConnectionResource IOperationSource<MonitorPrivateEndpointConnectionResource>.CreateResult(Response response, CancellationToken cancellationToken)
        {
            var data = ModelReaderWriter.Read<MonitorPrivateEndpointConnectionData>(new BinaryData(response.ContentStream));
            return new MonitorPrivateEndpointConnectionResource(_client, data);
        }

        async ValueTask<MonitorPrivateEndpointConnectionResource> IOperationSource<MonitorPrivateEndpointConnectionResource>.CreateResultAsync(Response response, CancellationToken cancellationToken)
        {
            var data = ModelReaderWriter.Read<MonitorPrivateEndpointConnectionData>(new BinaryData(response.ContentStream));
            return await Task.FromResult(new MonitorPrivateEndpointConnectionResource(_client, data)).ConfigureAwait(false);
        }
    }
}
