// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Monitor.Models
{
    public partial class ConditionFailingPeriods : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(NumberOfEvaluationPeriods))
            {
                writer.WritePropertyName("numberOfEvaluationPeriods");
                writer.WriteNumberValue(NumberOfEvaluationPeriods.Value);
            }
            if (Optional.IsDefined(MinFailingPeriodsToAlert))
            {
                writer.WritePropertyName("minFailingPeriodsToAlert");
                writer.WriteNumberValue(MinFailingPeriodsToAlert.Value);
            }
            writer.WriteEndObject();
        }

        internal static ConditionFailingPeriods DeserializeConditionFailingPeriods(JsonElement element)
        {
            Optional<long> numberOfEvaluationPeriods = default;
            Optional<long> minFailingPeriodsToAlert = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("numberOfEvaluationPeriods"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    numberOfEvaluationPeriods = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("minFailingPeriodsToAlert"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    minFailingPeriodsToAlert = property.Value.GetInt64();
                    continue;
                }
            }
            return new ConditionFailingPeriods(Optional.ToNullable(numberOfEvaluationPeriods), Optional.ToNullable(minFailingPeriodsToAlert));
        }
    }
}
