// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Monitor.Models
{
    public partial class RuleResolveConfiguration : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(AutoResolved))
            {
                writer.WritePropertyName("autoResolved");
                writer.WriteBooleanValue(AutoResolved.Value);
            }
            if (Optional.IsDefined(TimeToResolve))
            {
                writer.WritePropertyName("timeToResolve");
                writer.WriteStringValue(TimeToResolve.Value, "P");
            }
            writer.WriteEndObject();
        }

        internal static RuleResolveConfiguration DeserializeRuleResolveConfiguration(JsonElement element)
        {
            Optional<bool> autoResolved = default;
            Optional<TimeSpan> timeToResolve = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("autoResolved"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    autoResolved = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("timeToResolve"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    timeToResolve = property.Value.GetTimeSpan("P");
                    continue;
                }
            }
            return new RuleResolveConfiguration(Optional.ToNullable(autoResolved), Optional.ToNullable(timeToResolve));
        }
    }
}
