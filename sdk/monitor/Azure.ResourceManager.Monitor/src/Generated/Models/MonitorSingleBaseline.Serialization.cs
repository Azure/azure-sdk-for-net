// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;

namespace Azure.ResourceManager.Monitor.Models
{
    public partial class MonitorSingleBaseline
    {
        internal static MonitorSingleBaseline DeserializeMonitorSingleBaseline(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            MonitorBaselineSensitivity sensitivity = default;
            IReadOnlyList<double> lowThresholds = default;
            IReadOnlyList<double> highThresholds = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("sensitivity"u8))
                {
                    sensitivity = new MonitorBaselineSensitivity(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("lowThresholds"u8))
                {
                    List<double> array = new List<double>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetDouble());
                    }
                    lowThresholds = array;
                    continue;
                }
                if (property.NameEquals("highThresholds"u8))
                {
                    List<double> array = new List<double>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetDouble());
                    }
                    highThresholds = array;
                    continue;
                }
            }
            return new MonitorSingleBaseline(sensitivity, lowThresholds, highThresholds);
        }
    }
}
