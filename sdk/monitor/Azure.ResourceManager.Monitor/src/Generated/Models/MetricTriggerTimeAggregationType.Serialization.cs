// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.Monitor.Models
{
    internal static partial class MetricTriggerTimeAggregationTypeExtensions
    {
        public static string ToSerialString(this MetricTriggerTimeAggregationType value) => value switch
        {
            MetricTriggerTimeAggregationType.Average => "Average",
            MetricTriggerTimeAggregationType.Minimum => "Minimum",
            MetricTriggerTimeAggregationType.Maximum => "Maximum",
            MetricTriggerTimeAggregationType.Total => "Total",
            MetricTriggerTimeAggregationType.Count => "Count",
            MetricTriggerTimeAggregationType.Last => "Last",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown MetricTriggerTimeAggregationType value.")
        };

        public static MetricTriggerTimeAggregationType ToMetricTriggerTimeAggregationType(this string value)
        {
            if (string.Equals(value, "Average", StringComparison.InvariantCultureIgnoreCase)) return MetricTriggerTimeAggregationType.Average;
            if (string.Equals(value, "Minimum", StringComparison.InvariantCultureIgnoreCase)) return MetricTriggerTimeAggregationType.Minimum;
            if (string.Equals(value, "Maximum", StringComparison.InvariantCultureIgnoreCase)) return MetricTriggerTimeAggregationType.Maximum;
            if (string.Equals(value, "Total", StringComparison.InvariantCultureIgnoreCase)) return MetricTriggerTimeAggregationType.Total;
            if (string.Equals(value, "Count", StringComparison.InvariantCultureIgnoreCase)) return MetricTriggerTimeAggregationType.Count;
            if (string.Equals(value, "Last", StringComparison.InvariantCultureIgnoreCase)) return MetricTriggerTimeAggregationType.Last;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown MetricTriggerTimeAggregationType value.");
        }
    }
}
