// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.ResourceManager.Monitor.Models
{
    /// <summary> Represents collection of events. </summary>
    internal partial class EventDataCollection
    {
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="EventDataCollection"/>. </summary>
        /// <param name="value"> this list that includes the Azure audit logs. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        internal EventDataCollection(IEnumerable<EventDataInfo> value)
        {
            Argument.AssertNotNull(value, nameof(value));

            Value = value.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="EventDataCollection"/>. </summary>
        /// <param name="value"> this list that includes the Azure audit logs. </param>
        /// <param name="nextLink"> Provides the link to retrieve the next set of events. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal EventDataCollection(IReadOnlyList<EventDataInfo> value, string nextLink, Dictionary<string, BinaryData> rawData)
        {
            Value = value;
            NextLink = nextLink;
            _rawData = rawData;
        }

        /// <summary> Initializes a new instance of <see cref="EventDataCollection"/> for deserialization. </summary>
        internal EventDataCollection()
        {
        }

        /// <summary> this list that includes the Azure audit logs. </summary>
        public IReadOnlyList<EventDataInfo> Value { get; }
        /// <summary> Provides the link to retrieve the next set of events. </summary>
        public string NextLink { get; }
    }
}
