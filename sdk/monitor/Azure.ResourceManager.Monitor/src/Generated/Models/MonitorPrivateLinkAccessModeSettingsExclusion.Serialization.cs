// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Monitor.Models
{
    public partial class MonitorPrivateLinkAccessModeSettingsExclusion : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(PrivateEndpointConnectionName))
            {
                writer.WritePropertyName("privateEndpointConnectionName");
                writer.WriteStringValue(PrivateEndpointConnectionName);
            }
            if (Optional.IsDefined(QueryAccessMode))
            {
                writer.WritePropertyName("queryAccessMode");
                writer.WriteStringValue(QueryAccessMode.Value.ToString());
            }
            if (Optional.IsDefined(IngestionAccessMode))
            {
                writer.WritePropertyName("ingestionAccessMode");
                writer.WriteStringValue(IngestionAccessMode.Value.ToString());
            }
            writer.WriteEndObject();
        }

        internal static MonitorPrivateLinkAccessModeSettingsExclusion DeserializeMonitorPrivateLinkAccessModeSettingsExclusion(JsonElement element)
        {
            Optional<string> privateEndpointConnectionName = default;
            Optional<MonitorPrivateLinkAccessMode> queryAccessMode = default;
            Optional<MonitorPrivateLinkAccessMode> ingestionAccessMode = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("privateEndpointConnectionName"))
                {
                    privateEndpointConnectionName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("queryAccessMode"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    queryAccessMode = new MonitorPrivateLinkAccessMode(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("ingestionAccessMode"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    ingestionAccessMode = new MonitorPrivateLinkAccessMode(property.Value.GetString());
                    continue;
                }
            }
            return new MonitorPrivateLinkAccessModeSettingsExclusion(privateEndpointConnectionName.Value, Optional.ToNullable(queryAccessMode), Optional.ToNullable(ingestionAccessMode));
        }
    }
}
