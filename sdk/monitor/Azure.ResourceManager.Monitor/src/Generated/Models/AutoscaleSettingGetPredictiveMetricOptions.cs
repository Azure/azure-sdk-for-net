// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.ResourceManager.Monitor.Models
{
    /// <summary> A class representing the query and header parameters in GetPredictiveMetric method. </summary>
    public partial class AutoscaleSettingGetPredictiveMetricOptions
    {
        /// <summary> Initializes a new instance of AutoscaleSettingGetPredictiveMetricOptions. </summary>
        /// <param name="timespan"> The timespan of the query. It is a string with the following format &apos;startDateTime_ISO/endDateTime_ISO&apos;. </param>
        /// <param name="interval"> The interval (i.e. timegrain) of the query. </param>
        /// <param name="metricNamespace"> Metric namespace to query metric definitions for. </param>
        /// <param name="metricName"> The names of the metrics (comma separated) to retrieve. Special case: If a metricname itself has a comma in it then use %2 to indicate it. Eg: &apos;Metric,Name1&apos; should be **&apos;Metric%2Name1&apos;**. </param>
        /// <param name="aggregation"> The list of aggregation types (comma separated) to retrieve. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="timespan"/>, <paramref name="metricNamespace"/>, <paramref name="metricName"/> or <paramref name="aggregation"/> is null. </exception>
        public AutoscaleSettingGetPredictiveMetricOptions(string timespan, TimeSpan interval, string metricNamespace, string metricName, string aggregation)
        {
            Argument.AssertNotNull(timespan, nameof(timespan));
            Argument.AssertNotNull(metricNamespace, nameof(metricNamespace));
            Argument.AssertNotNull(metricName, nameof(metricName));
            Argument.AssertNotNull(aggregation, nameof(aggregation));

            Timespan = timespan;
            Interval = interval;
            MetricNamespace = metricNamespace;
            MetricName = metricName;
            Aggregation = aggregation;
        }

        /// <summary> The timespan of the query. It is a string with the following format &apos;startDateTime_ISO/endDateTime_ISO&apos;. </summary>
        public string Timespan { get; }
        /// <summary> The interval (i.e. timegrain) of the query. </summary>
        public TimeSpan Interval { get; }
        /// <summary> Metric namespace to query metric definitions for. </summary>
        public string MetricNamespace { get; }
        /// <summary> The names of the metrics (comma separated) to retrieve. Special case: If a metricname itself has a comma in it then use %2 to indicate it. Eg: &apos;Metric,Name1&apos; should be **&apos;Metric%2Name1&apos;**. </summary>
        public string MetricName { get; }
        /// <summary> The list of aggregation types (comma separated) to retrieve. </summary>
        public string Aggregation { get; }
    }
}
