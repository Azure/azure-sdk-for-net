// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Monitor.Models
{
    /// <summary> JsonArrayMapper destination field used to describe the field to which the parsed output will be written. </summary>
    public partial class PipelineGroupJsonMapperDestinationField
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="PipelineGroupJsonMapperDestinationField"/>. </summary>
        public PipelineGroupJsonMapperDestinationField()
        {
        }

        /// <summary> Initializes a new instance of <see cref="PipelineGroupJsonMapperDestinationField"/>. </summary>
        /// <param name="destination"> Define the destination's element. The element is the body or the attributes of the message, to which the json array mapper will write the output map. </param>
        /// <param name="fieldName"> Define a destination field name under the given element. Leaving this empty, means the root of the element. In case element=attributes and fieldName is empty, the object's attributes themselves will contain the key value output pairs. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal PipelineGroupJsonMapperDestinationField(PipelineGroupJsonMapperElement? destination, string fieldName, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Destination = destination;
            FieldName = fieldName;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Define the destination's element. The element is the body or the attributes of the message, to which the json array mapper will write the output map. </summary>
        public PipelineGroupJsonMapperElement? Destination { get; set; }
        /// <summary> Define a destination field name under the given element. Leaving this empty, means the root of the element. In case element=attributes and fieldName is empty, the object's attributes themselves will contain the key value output pairs. </summary>
        public string FieldName { get; set; }
    }
}
