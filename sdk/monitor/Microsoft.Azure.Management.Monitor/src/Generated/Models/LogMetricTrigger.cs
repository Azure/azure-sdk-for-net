// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Monitor.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// A log metrics trigger descriptor.
    /// </summary>
    public partial class LogMetricTrigger
    {
        /// <summary>
        /// Initializes a new instance of the LogMetricTrigger class.
        /// </summary>
        public LogMetricTrigger()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LogMetricTrigger class.
        /// </summary>
        /// <param name="thresholdOperator">Evaluation operation for Metric
        /// -'GreaterThan' or 'LessThan' or 'Equal'. Possible values include:
        /// 'GreaterThanOrEqual', 'LessThanOrEqual', 'GreaterThan', 'LessThan',
        /// 'Equal'</param>
        /// <param name="threshold">The threshold of the metric
        /// trigger.</param>
        /// <param name="metricTriggerType">Metric Trigger Type - 'Consecutive'
        /// or 'Total'. Possible values include: 'Consecutive', 'Total'</param>
        /// <param name="metricColumn">Evaluation of metric on a particular
        /// column</param>
        public LogMetricTrigger(string thresholdOperator = default(string), double? threshold = default(double?), string metricTriggerType = default(string), string metricColumn = default(string))
        {
            ThresholdOperator = thresholdOperator;
            Threshold = threshold;
            MetricTriggerType = metricTriggerType;
            MetricColumn = metricColumn;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets evaluation operation for Metric -'GreaterThan' or
        /// 'LessThan' or 'Equal'. Possible values include:
        /// 'GreaterThanOrEqual', 'LessThanOrEqual', 'GreaterThan', 'LessThan',
        /// 'Equal'
        /// </summary>
        [JsonProperty(PropertyName = "thresholdOperator")]
        public string ThresholdOperator { get; set; }

        /// <summary>
        /// Gets or sets the threshold of the metric trigger.
        /// </summary>
        [JsonProperty(PropertyName = "threshold")]
        public double? Threshold { get; set; }

        /// <summary>
        /// Gets or sets metric Trigger Type - 'Consecutive' or 'Total'.
        /// Possible values include: 'Consecutive', 'Total'
        /// </summary>
        [JsonProperty(PropertyName = "metricTriggerType")]
        public string MetricTriggerType { get; set; }

        /// <summary>
        /// Gets or sets evaluation of metric on a particular column
        /// </summary>
        [JsonProperty(PropertyName = "metricColumn")]
        public string MetricColumn { get; set; }

    }
}
