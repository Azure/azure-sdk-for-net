// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Monitor.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Definition of what monitoring data to collect and where that data
    /// should be sent.
    /// </summary>
    public partial class DataCollectionRule
    {
        /// <summary>
        /// Initializes a new instance of the DataCollectionRule class.
        /// </summary>
        public DataCollectionRule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DataCollectionRule class.
        /// </summary>
        /// <param name="description">Description of the data collection
        /// rule.</param>
        /// <param name="immutableId">The immutable ID of this data collection
        /// rule. This property is READ-ONLY.</param>
        /// <param name="dataCollectionEndpointId">The resource ID of the data
        /// collection endpoint that this rule can be used with.</param>
        /// <param name="metadata">Metadata about the resource</param>
        /// <param name="streamDeclarations">Declaration of custom streams used
        /// in this rule.</param>
        /// <param name="dataSources">The specification of data sources.
        /// This property is optional and can be omitted if the rule is meant
        /// to be used via direct calls to the provisioned endpoint.</param>
        /// <param name="destinations">The specification of
        /// destinations.</param>
        /// <param name="dataFlows">The specification of data flows.</param>
        /// <param name="provisioningState">The resource provisioning state.
        /// Possible values include: 'Creating', 'Updating', 'Deleting',
        /// 'Succeeded', 'Failed'</param>
        public DataCollectionRule(string description = default(string), string immutableId = default(string), string dataCollectionEndpointId = default(string), DataCollectionRuleMetadata metadata = default(DataCollectionRuleMetadata), IDictionary<string, StreamDeclaration> streamDeclarations = default(IDictionary<string, StreamDeclaration>), DataCollectionRuleDataSources dataSources = default(DataCollectionRuleDataSources), DataCollectionRuleDestinations destinations = default(DataCollectionRuleDestinations), IList<DataFlow> dataFlows = default(IList<DataFlow>), string provisioningState = default(string))
        {
            Description = description;
            ImmutableId = immutableId;
            DataCollectionEndpointId = dataCollectionEndpointId;
            Metadata = metadata;
            StreamDeclarations = streamDeclarations;
            DataSources = dataSources;
            Destinations = destinations;
            DataFlows = dataFlows;
            ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets description of the data collection rule.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets the immutable ID of this data collection rule. This property
        /// is READ-ONLY.
        /// </summary>
        [JsonProperty(PropertyName = "immutableId")]
        public string ImmutableId { get; private set; }

        /// <summary>
        /// Gets or sets the resource ID of the data collection endpoint that
        /// this rule can be used with.
        /// </summary>
        [JsonProperty(PropertyName = "dataCollectionEndpointId")]
        public string DataCollectionEndpointId { get; set; }

        /// <summary>
        /// Gets metadata about the resource
        /// </summary>
        [JsonProperty(PropertyName = "metadata")]
        public DataCollectionRuleMetadata Metadata { get; private set; }

        /// <summary>
        /// Gets or sets declaration of custom streams used in this rule.
        /// </summary>
        [JsonProperty(PropertyName = "streamDeclarations")]
        public IDictionary<string, StreamDeclaration> StreamDeclarations { get; set; }

        /// <summary>
        /// Gets or sets the specification of data sources.
        /// This property is optional and can be omitted if the rule is meant
        /// to be used via direct calls to the provisioned endpoint.
        /// </summary>
        [JsonProperty(PropertyName = "dataSources")]
        public DataCollectionRuleDataSources DataSources { get; set; }

        /// <summary>
        /// Gets or sets the specification of destinations.
        /// </summary>
        [JsonProperty(PropertyName = "destinations")]
        public DataCollectionRuleDestinations Destinations { get; set; }

        /// <summary>
        /// Gets or sets the specification of data flows.
        /// </summary>
        [JsonProperty(PropertyName = "dataFlows")]
        public IList<DataFlow> DataFlows { get; set; }

        /// <summary>
        /// Gets the resource provisioning state. Possible values include:
        /// 'Creating', 'Updating', 'Deleting', 'Succeeded', 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; private set; }

    }
}
