// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Monitor.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Specification of data sources that will be collected.
    /// </summary>
    public partial class DataSourcesSpec
    {
        /// <summary>
        /// Initializes a new instance of the DataSourcesSpec class.
        /// </summary>
        public DataSourcesSpec()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DataSourcesSpec class.
        /// </summary>
        /// <param name="performanceCounters">The list of performance counter
        /// data source configurations.</param>
        /// <param name="windowsEventLogs">The list of Windows Event Log data
        /// source configurations.</param>
        /// <param name="syslog">The list of Syslog data source
        /// configurations.</param>
        /// <param name="extensions">The list of Azure VM extension data source
        /// configurations.</param>
        /// <param name="logFiles">The list of Log files source
        /// configurations.</param>
        /// <param name="iisLogs">The list of IIS logs source
        /// configurations.</param>
        public DataSourcesSpec(IList<PerfCounterDataSource> performanceCounters = default(IList<PerfCounterDataSource>), IList<WindowsEventLogDataSource> windowsEventLogs = default(IList<WindowsEventLogDataSource>), IList<SyslogDataSource> syslog = default(IList<SyslogDataSource>), IList<ExtensionDataSource> extensions = default(IList<ExtensionDataSource>), IList<LogFilesDataSource> logFiles = default(IList<LogFilesDataSource>), IList<IisLogsDataSource> iisLogs = default(IList<IisLogsDataSource>))
        {
            PerformanceCounters = performanceCounters;
            WindowsEventLogs = windowsEventLogs;
            Syslog = syslog;
            Extensions = extensions;
            LogFiles = logFiles;
            IisLogs = iisLogs;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the list of performance counter data source
        /// configurations.
        /// </summary>
        [JsonProperty(PropertyName = "performanceCounters")]
        public IList<PerfCounterDataSource> PerformanceCounters { get; set; }

        /// <summary>
        /// Gets or sets the list of Windows Event Log data source
        /// configurations.
        /// </summary>
        [JsonProperty(PropertyName = "windowsEventLogs")]
        public IList<WindowsEventLogDataSource> WindowsEventLogs { get; set; }

        /// <summary>
        /// Gets or sets the list of Syslog data source configurations.
        /// </summary>
        [JsonProperty(PropertyName = "syslog")]
        public IList<SyslogDataSource> Syslog { get; set; }

        /// <summary>
        /// Gets or sets the list of Azure VM extension data source
        /// configurations.
        /// </summary>
        [JsonProperty(PropertyName = "extensions")]
        public IList<ExtensionDataSource> Extensions { get; set; }

        /// <summary>
        /// Gets or sets the list of Log files source configurations.
        /// </summary>
        [JsonProperty(PropertyName = "logFiles")]
        public IList<LogFilesDataSource> LogFiles { get; set; }

        /// <summary>
        /// Gets or sets the list of IIS logs source configurations.
        /// </summary>
        [JsonProperty(PropertyName = "iisLogs")]
        public IList<IisLogsDataSource> IisLogs { get; set; }

    }
}
