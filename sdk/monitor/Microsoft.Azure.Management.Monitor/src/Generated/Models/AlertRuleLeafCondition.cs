// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Monitor.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// An Activity Log Alert rule condition that is met by comparing the field
    /// and value of an Activity Log event.
    /// This condition must contain 'field' and either 'equals' or
    /// 'containsAny'.
    /// </summary>
    public partial class AlertRuleLeafCondition
    {
        /// <summary>
        /// Initializes a new instance of the AlertRuleLeafCondition class.
        /// </summary>
        public AlertRuleLeafCondition()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AlertRuleLeafCondition class.
        /// </summary>
        /// <param name="field">The name of the Activity Log event's field that
        /// this condition will examine.
        /// The possible values for this field are (case-insensitive):
        /// 'resourceId', 'category', 'caller', 'level', 'operationName',
        /// 'resourceGroup', 'resourceProvider', 'status', 'subStatus',
        /// 'resourceType', or anything beginning with 'properties'.</param>
        /// <param name="equals">The value of the event's field will be
        /// compared to this value (case-insensitive) to determine if the
        /// condition is met.</param>
        /// <param name="containsAny">The value of the event's field will be
        /// compared to the values in this array (case-insensitive) to
        /// determine if the condition is met.</param>
        public AlertRuleLeafCondition(string field = default(string), string equals = default(string), IList<string> containsAny = default(IList<string>))
        {
            Field = field;
            Equals = equals;
            ContainsAny = containsAny;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the Activity Log event's field that this
        /// condition will examine.
        /// The possible values for this field are (case-insensitive):
        /// 'resourceId', 'category', 'caller', 'level', 'operationName',
        /// 'resourceGroup', 'resourceProvider', 'status', 'subStatus',
        /// 'resourceType', or anything beginning with 'properties'.
        /// </summary>
        [JsonProperty(PropertyName = "field")]
        public string Field { get; set; }

        /// <summary>
        /// Gets or sets the value of the event's field will be compared to
        /// this value (case-insensitive) to determine if the condition is met.
        /// </summary>
        [JsonProperty(PropertyName = "equals")]
        public string Equals { get; set; }

        /// <summary>
        /// Gets or sets the value of the event's field will be compared to the
        /// values in this array (case-insensitive) to determine if the
        /// condition is met.
        /// </summary>
        [JsonProperty(PropertyName = "containsAny")]
        public IList<string> ContainsAny { get; set; }

    }
}
