// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Monitor.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The time series info needed for calculating the baseline.
    /// </summary>
    public partial class TimeSeriesInformation
    {
        /// <summary>
        /// Initializes a new instance of the TimeSeriesInformation class.
        /// </summary>
        public TimeSeriesInformation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TimeSeriesInformation class.
        /// </summary>
        /// <param name="sensitivities">the list of sensitivities for
        /// calculating the baseline.</param>
        /// <param name="values">The metric values to calculate the
        /// baseline.</param>
        /// <param name="timestamps">the array of timestamps of the
        /// baselines.</param>
        public TimeSeriesInformation(IList<string> sensitivities, IList<double?> values, IList<System.DateTime?> timestamps = default(IList<System.DateTime?>))
        {
            Sensitivities = sensitivities;
            Values = values;
            Timestamps = timestamps;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the list of sensitivities for calculating the
        /// baseline.
        /// </summary>
        [JsonProperty(PropertyName = "sensitivities")]
        public IList<string> Sensitivities { get; set; }

        /// <summary>
        /// Gets or sets the metric values to calculate the baseline.
        /// </summary>
        [JsonProperty(PropertyName = "values")]
        public IList<double?> Values { get; set; }

        /// <summary>
        /// Gets or sets the array of timestamps of the baselines.
        /// </summary>
        [JsonProperty(PropertyName = "timestamps")]
        public IList<System.DateTime?> Timestamps { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Sensitivities == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Sensitivities");
            }
            if (Values == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Values");
            }
        }
    }
}
