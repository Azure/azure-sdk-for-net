// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Monitor.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Information about a Log Analytics Workspace.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class WorkspaceInfo
    {
        /// <summary>
        /// Initializes a new instance of the WorkspaceInfo class.
        /// </summary>
        public WorkspaceInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WorkspaceInfo class.
        /// </summary>
        /// <param name="id">Azure Resource Manager identifier of the Log
        /// Analytics Workspace.</param>
        /// <param name="location">Location of the Log Analytics
        /// workspace.</param>
        /// <param name="customerId">Log Analytics workspace
        /// identifier.</param>
        public WorkspaceInfo(string id, string location, string customerId)
        {
            Id = id;
            Location = location;
            CustomerId = customerId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets azure Resource Manager identifier of the Log Analytics
        /// Workspace.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets location of the Log Analytics workspace.
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public string Location { get; set; }

        /// <summary>
        /// Gets or sets log Analytics workspace identifier.
        /// </summary>
        [JsonProperty(PropertyName = "properties.customerId")]
        public string CustomerId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Id == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Id");
            }
            if (Location == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Location");
            }
            if (CustomerId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CustomerId");
            }
        }
    }
}
