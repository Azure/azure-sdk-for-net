// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Monitor.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Enables IIS logs to be collected by this data collection rule.
    /// </summary>
    public partial class IisLogsDataSource
    {
        /// <summary>
        /// Initializes a new instance of the IisLogsDataSource class.
        /// </summary>
        public IisLogsDataSource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IisLogsDataSource class.
        /// </summary>
        /// <param name="streams">IIS streams</param>
        /// <param name="logDirectories">Absolute paths file location</param>
        /// <param name="name">A friendly name for the data source.
        /// This name should be unique across all data sources (regardless of
        /// type) within the data collection rule.</param>
        public IisLogsDataSource(IList<string> streams, IList<string> logDirectories = default(IList<string>), string name = default(string))
        {
            Streams = streams;
            LogDirectories = logDirectories;
            Name = name;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets IIS streams
        /// </summary>
        [JsonProperty(PropertyName = "streams")]
        public IList<string> Streams { get; set; }

        /// <summary>
        /// Gets or sets absolute paths file location
        /// </summary>
        [JsonProperty(PropertyName = "logDirectories")]
        public IList<string> LogDirectories { get; set; }

        /// <summary>
        /// Gets or sets a friendly name for the data source.
        /// This name should be unique across all data sources (regardless of
        /// type) within the data collection rule.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Streams == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Streams");
            }
        }
    }
}
