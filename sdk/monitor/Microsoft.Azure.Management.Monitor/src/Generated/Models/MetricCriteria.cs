// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Monitor.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Criterion to filter metrics.
    /// </summary>
    [Newtonsoft.Json.JsonObject("StaticThresholdCriterion")]
    public partial class MetricCriteria : MultiMetricCriteria
    {
        /// <summary>
        /// Initializes a new instance of the MetricCriteria class.
        /// </summary>
        public MetricCriteria()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MetricCriteria class.
        /// </summary>
        /// <param name="name">Name of the criteria.</param>
        /// <param name="metricName">Name of the metric.</param>
        /// <param name="timeAggregation">the criteria time aggregation
        /// types.</param>
        /// <param name="operatorProperty">the criteria operator. Possible
        /// values include: 'Equals', 'NotEquals', 'GreaterThan',
        /// 'GreaterThanOrEqual', 'LessThan', 'LessThanOrEqual'</param>
        /// <param name="threshold">the criteria threshold value that activates
        /// the alert.</param>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="metricNamespace">Namespace of the metric.</param>
        /// <param name="dimensions">List of dimension conditions.</param>
        /// <param name="skipMetricValidation">Allows creating an alert rule on
        /// a custom metric that isn't yet emitted, by causing the metric
        /// validation to be skipped.</param>
        public MetricCriteria(string name, string metricName, object timeAggregation, string operatorProperty, double threshold, IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), string metricNamespace = default(string), IList<MetricDimension> dimensions = default(IList<MetricDimension>), bool? skipMetricValidation = default(bool?))
            : base(name, metricName, timeAggregation, additionalProperties, metricNamespace, dimensions, skipMetricValidation)
        {
            OperatorProperty = operatorProperty;
            Threshold = threshold;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the criteria operator. Possible values include:
        /// 'Equals', 'NotEquals', 'GreaterThan', 'GreaterThanOrEqual',
        /// 'LessThan', 'LessThanOrEqual'
        /// </summary>
        [JsonProperty(PropertyName = "operator")]
        public string OperatorProperty { get; set; }

        /// <summary>
        /// Gets or sets the criteria threshold value that activates the alert.
        /// </summary>
        [JsonProperty(PropertyName = "threshold")]
        public double Threshold { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (OperatorProperty == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "OperatorProperty");
            }
        }
    }
}
