// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Monitor.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// An Activity Log Alert rule resource.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ActivityLogAlertResource : AzureResource
    {
        /// <summary>
        /// Initializes a new instance of the ActivityLogAlertResource class.
        /// </summary>
        public ActivityLogAlertResource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ActivityLogAlertResource class.
        /// </summary>
        /// <param name="location">Resource location</param>
        /// <param name="scopes">A list of resource IDs that will be used as
        /// prefixes. The alert will only apply to Activity Log events with
        /// resource IDs that fall under one of these prefixes. This list must
        /// include at least one item.</param>
        /// <param name="condition">The condition that will cause this alert to
        /// activate.</param>
        /// <param name="actions">The actions that will activate when the
        /// condition is met.</param>
        /// <param name="id">Azure resource Id</param>
        /// <param name="name">Azure resource name</param>
        /// <param name="type">Azure resource type</param>
        /// <param name="kind">Azure resource kind</param>
        /// <param name="identity">Azure resource identity</param>
        /// <param name="tags">Resource tags</param>
        /// <param name="enabled">Indicates whether this Activity Log Alert
        /// rule is enabled. If an Activity Log Alert rule is not enabled, then
        /// none of its actions will be activated.</param>
        /// <param name="description">A description of this Activity Log Alert
        /// rule.</param>
        public ActivityLogAlertResource(string location, IList<string> scopes, AlertRuleAllOfCondition condition, ActionList actions, string id = default(string), string name = default(string), string type = default(string), string kind = default(string), string identity = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), bool? enabled = default(bool?), string description = default(string))
            : base(location, id, name, type, kind, identity, tags)
        {
            Scopes = scopes;
            Condition = condition;
            Actions = actions;
            Enabled = enabled;
            Description = description;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets a list of resource IDs that will be used as prefixes.
        /// The alert will only apply to Activity Log events with resource IDs
        /// that fall under one of these prefixes. This list must include at
        /// least one item.
        /// </summary>
        [JsonProperty(PropertyName = "properties.scopes")]
        public IList<string> Scopes { get; set; }

        /// <summary>
        /// Gets or sets the condition that will cause this alert to activate.
        /// </summary>
        [JsonProperty(PropertyName = "properties.condition")]
        public AlertRuleAllOfCondition Condition { get; set; }

        /// <summary>
        /// Gets or sets the actions that will activate when the condition is
        /// met.
        /// </summary>
        [JsonProperty(PropertyName = "properties.actions")]
        public ActionList Actions { get; set; }

        /// <summary>
        /// Gets or sets indicates whether this Activity Log Alert rule is
        /// enabled. If an Activity Log Alert rule is not enabled, then none of
        /// its actions will be activated.
        /// </summary>
        [JsonProperty(PropertyName = "properties.enabled")]
        public bool? Enabled { get; set; }

        /// <summary>
        /// Gets or sets a description of this Activity Log Alert rule.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (Scopes == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Scopes");
            }
            if (Condition == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Condition");
            }
            if (Actions == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Actions");
            }
            if (Condition != null)
            {
                Condition.Validate();
            }
        }
    }
}
