// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Monitor.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// An Activity Log Alert rule condition that is met when all its member
    /// conditions are met.
    /// Each condition can be of one of the following types:
    /// __Important__: Each type has its unique subset of properties.
    /// Properties from different types CANNOT exist in one condition.
    /// * __Leaf Condition -__ must contain 'field' and either 'equals' or
    /// 'containsAny'.
    /// _Please note, 'anyOf' should __not__ be set in a Leaf Condition._
    /// * __AnyOf Condition -__ must contain __only__ 'anyOf' (which is an
    /// array of Leaf Conditions).
    /// _Please note, 'field', 'equals' and 'containsAny' should __not__ be set
    /// in an AnyOf Condition._
    ///
    /// </summary>
    public partial class AlertRuleAnyOfOrLeafCondition : AlertRuleLeafCondition
    {
        /// <summary>
        /// Initializes a new instance of the AlertRuleAnyOfOrLeafCondition
        /// class.
        /// </summary>
        public AlertRuleAnyOfOrLeafCondition()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AlertRuleAnyOfOrLeafCondition
        /// class.
        /// </summary>
        /// <param name="field">The name of the Activity Log event's field that
        /// this condition will examine.
        /// The possible values for this field are (case-insensitive):
        /// 'resourceId', 'category', 'caller', 'level', 'operationName',
        /// 'resourceGroup', 'resourceProvider', 'status', 'subStatus',
        /// 'resourceType', or anything beginning with 'properties'.</param>
        /// <param name="equals">The value of the event's field will be
        /// compared to this value (case-insensitive) to determine if the
        /// condition is met.</param>
        /// <param name="containsAny">The value of the event's field will be
        /// compared to the values in this array (case-insensitive) to
        /// determine if the condition is met.</param>
        /// <param name="anyOf">An Activity Log Alert rule 'anyOf'
        /// condition.</param>
        public AlertRuleAnyOfOrLeafCondition(string field = default(string), string equals = default(string), IList<string> containsAny = default(IList<string>), IList<AlertRuleLeafCondition> anyOf = default(IList<AlertRuleLeafCondition>))
            : base(field, equals, containsAny)
        {
            AnyOf = anyOf;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets an Activity Log Alert rule 'anyOf' condition.
        /// </summary>
        /// <remarks>
        /// An Activity Log Alert rule condition that is met when at least one
        /// of its member leaf conditions are met.
        /// </remarks>
        [JsonProperty(PropertyName = "anyOf")]
        public IList<AlertRuleLeafCondition> AnyOf { get; set; }

    }
}
