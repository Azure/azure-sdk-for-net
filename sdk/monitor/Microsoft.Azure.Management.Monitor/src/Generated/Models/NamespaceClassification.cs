// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Monitor.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for NamespaceClassification.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum NamespaceClassification
    {
        [EnumMember(Value = "Platform")]
        Platform,
        [EnumMember(Value = "Custom")]
        Custom,
        [EnumMember(Value = "Qos")]
        Qos
    }
    internal static class NamespaceClassificationEnumExtension
    {
        internal static string ToSerializedValue(this NamespaceClassification? value)
        {
            return value == null ? null : ((NamespaceClassification)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this NamespaceClassification value)
        {
            switch( value )
            {
                case NamespaceClassification.Platform:
                    return "Platform";
                case NamespaceClassification.Custom:
                    return "Custom";
                case NamespaceClassification.Qos:
                    return "Qos";
            }
            return null;
        }

        internal static NamespaceClassification? ParseNamespaceClassification(this string value)
        {
            switch( value )
            {
                case "Platform":
                    return NamespaceClassification.Platform;
                case "Custom":
                    return NamespaceClassification.Custom;
                case "Qos":
                    return NamespaceClassification.Qos;
            }
            return null;
        }
    }
}
