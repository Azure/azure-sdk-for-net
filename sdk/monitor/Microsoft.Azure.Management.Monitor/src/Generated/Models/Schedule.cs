// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Monitor.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Defines how often to run the search and the time interval.
    /// </summary>
    public partial class Schedule
    {
        /// <summary>
        /// Initializes a new instance of the Schedule class.
        /// </summary>
        public Schedule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Schedule class.
        /// </summary>
        /// <param name="frequencyInMinutes">frequency (in minutes) at which
        /// rule condition should be evaluated.</param>
        /// <param name="timeWindowInMinutes">Time window for which data needs
        /// to be fetched for query (should be greater than or equal to
        /// frequencyInMinutes).</param>
        public Schedule(int frequencyInMinutes, int timeWindowInMinutes)
        {
            FrequencyInMinutes = frequencyInMinutes;
            TimeWindowInMinutes = timeWindowInMinutes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets frequency (in minutes) at which rule condition should
        /// be evaluated.
        /// </summary>
        [JsonProperty(PropertyName = "frequencyInMinutes")]
        public int FrequencyInMinutes { get; set; }

        /// <summary>
        /// Gets or sets time window for which data needs to be fetched for
        /// query (should be greater than or equal to frequencyInMinutes).
        /// </summary>
        [JsonProperty(PropertyName = "timeWindowInMinutes")]
        public int TimeWindowInMinutes { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
