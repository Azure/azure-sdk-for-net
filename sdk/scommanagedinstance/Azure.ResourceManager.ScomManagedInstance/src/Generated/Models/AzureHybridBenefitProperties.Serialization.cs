// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ScomManagedInstance.Models
{
    public partial class AzureHybridBenefitProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(ScomLicenseType))
            {
                writer.WritePropertyName("scomLicenseType"u8);
                writer.WriteStringValue(ScomLicenseType.Value.ToString());
            }
            if (Optional.IsDefined(WindowsServerLicenseType))
            {
                writer.WritePropertyName("windowsServerLicenseType"u8);
                writer.WriteStringValue(WindowsServerLicenseType.Value.ToString());
            }
            if (Optional.IsDefined(SqlServerLicenseType))
            {
                writer.WritePropertyName("sqlServerLicenseType"u8);
                writer.WriteStringValue(SqlServerLicenseType.Value.ToString());
            }
            writer.WriteEndObject();
        }

        internal static AzureHybridBenefitProperties DeserializeAzureHybridBenefitProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<HybridLicenseType> scomLicenseType = default;
            Optional<HybridLicenseType> windowsServerLicenseType = default;
            Optional<HybridLicenseType> sqlServerLicenseType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("scomLicenseType"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    scomLicenseType = new HybridLicenseType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("windowsServerLicenseType"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    windowsServerLicenseType = new HybridLicenseType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("sqlServerLicenseType"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    sqlServerLicenseType = new HybridLicenseType(property.Value.GetString());
                    continue;
                }
            }
            return new AzureHybridBenefitProperties(Optional.ToNullable(scomLicenseType), Optional.ToNullable(windowsServerLicenseType), Optional.ToNullable(sqlServerLicenseType));
        }
    }
}
