// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ScomManagedInstance.Models
{
    public partial class DatabaseInstanceProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(DatabaseInstanceId))
            {
                writer.WritePropertyName("databaseInstanceId"u8);
                writer.WriteStringValue(DatabaseInstanceId);
            }
            writer.WriteEndObject();
        }

        internal static DatabaseInstanceProperties DeserializeDatabaseInstanceProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> databaseInstanceId = default;
            Optional<string> databaseFqdn = default;
            Optional<string> dwDatabaseName = default;
            Optional<string> operationalDatabaseId = default;
            Optional<string> dwDatabaseId = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("databaseInstanceId"u8))
                {
                    databaseInstanceId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("databaseFqdn"u8))
                {
                    databaseFqdn = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("dwDatabaseName"u8))
                {
                    dwDatabaseName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("operationalDatabaseId"u8))
                {
                    operationalDatabaseId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("dwDatabaseId"u8))
                {
                    dwDatabaseId = property.Value.GetString();
                    continue;
                }
            }
            return new DatabaseInstanceProperties(databaseInstanceId.Value, databaseFqdn.Value, dwDatabaseName.Value, operationalDatabaseId.Value, dwDatabaseId.Value);
        }
    }
}
