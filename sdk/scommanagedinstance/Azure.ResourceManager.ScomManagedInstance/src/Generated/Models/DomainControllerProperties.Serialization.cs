// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ScomManagedInstance.Models
{
    public partial class DomainControllerProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(DomainName))
            {
                writer.WritePropertyName("domainName"u8);
                writer.WriteStringValue(DomainName);
            }
            if (Optional.IsDefined(DnsServer))
            {
                writer.WritePropertyName("dnsServer"u8);
                writer.WriteStringValue(DnsServer);
            }
            if (Optional.IsDefined(OuPath))
            {
                writer.WritePropertyName("ouPath"u8);
                writer.WriteStringValue(OuPath);
            }
            writer.WriteEndObject();
        }

        internal static DomainControllerProperties DeserializeDomainControllerProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> domainName = default;
            Optional<string> dnsServer = default;
            Optional<string> ouPath = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("domainName"u8))
                {
                    domainName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("dnsServer"u8))
                {
                    dnsServer = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("ouPath"u8))
                {
                    ouPath = property.Value.GetString();
                    continue;
                }
            }
            return new DomainControllerProperties(domainName.Value, dnsServer.Value, ouPath.Value);
        }
    }
}
