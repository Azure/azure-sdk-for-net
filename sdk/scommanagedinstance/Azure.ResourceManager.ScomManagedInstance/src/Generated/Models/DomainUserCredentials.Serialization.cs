// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ScomManagedInstance.Models
{
    public partial class DomainUserCredentials : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(KeyVaultUri))
            {
                writer.WritePropertyName("keyVaultUrl"u8);
                writer.WriteStringValue(KeyVaultUri.AbsoluteUri);
            }
            if (Optional.IsDefined(UserNameSecret))
            {
                writer.WritePropertyName("userNameSecret"u8);
                writer.WriteStringValue(UserNameSecret);
            }
            if (Optional.IsDefined(PasswordSecret))
            {
                writer.WritePropertyName("passwordSecret"u8);
                writer.WriteStringValue(PasswordSecret);
            }
            writer.WriteEndObject();
        }

        internal static DomainUserCredentials DeserializeDomainUserCredentials(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<Uri> keyVaultUrl = default;
            Optional<string> userNameSecret = default;
            Optional<string> passwordSecret = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("keyVaultUrl"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    keyVaultUrl = new Uri(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("userNameSecret"u8))
                {
                    userNameSecret = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("passwordSecret"u8))
                {
                    passwordSecret = property.Value.GetString();
                    continue;
                }
            }
            return new DomainUserCredentials(keyVaultUrl.Value, userNameSecret.Value, passwordSecret.Value);
        }
    }
}
