// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ScomManagedInstance.Models
{
    public partial class MonitoringInstanceProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(VNetSubnetId))
            {
                writer.WritePropertyName("vNetSubnetId"u8);
                writer.WriteStringValue(VNetSubnetId);
            }
            if (Optional.IsDefined(DatabaseInstance))
            {
                writer.WritePropertyName("databaseInstance"u8);
                writer.WriteObjectValue(DatabaseInstance);
            }
            if (Optional.IsDefined(DomainController))
            {
                writer.WritePropertyName("domainController"u8);
                writer.WriteObjectValue(DomainController);
            }
            if (Optional.IsDefined(DomainUserCredentials))
            {
                writer.WritePropertyName("domainUserCredentials"u8);
                writer.WriteObjectValue(DomainUserCredentials);
            }
            if (Optional.IsDefined(GmsaDetails))
            {
                writer.WritePropertyName("gmsaDetails"u8);
                writer.WriteObjectValue(GmsaDetails);
            }
            if (Optional.IsDefined(AzureHybridBenefit))
            {
                writer.WritePropertyName("azureHybridBenefit"u8);
                writer.WriteObjectValue(AzureHybridBenefit);
            }
            writer.WriteEndObject();
        }

        internal static MonitoringInstanceProperties DeserializeMonitoringInstanceProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> productVersion = default;
            Optional<string> vNetSubnetId = default;
            Optional<IReadOnlyList<ManagementServerProperties>> managementEndpoints = default;
            Optional<DatabaseInstanceProperties> databaseInstance = default;
            Optional<DomainControllerProperties> domainController = default;
            Optional<DomainUserCredentials> domainUserCredentials = default;
            Optional<GmsaDetails> gmsaDetails = default;
            Optional<AzureHybridBenefitProperties> azureHybridBenefit = default;
            Optional<string> provisioningState = default;
            Optional<LogAnalyticsConfiguration> logAnalyticsProperties = default;
            Optional<IReadOnlyList<ManagedInstanceOperationStatus>> operationsStatus = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("productVersion"u8))
                {
                    productVersion = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("vNetSubnetId"u8))
                {
                    vNetSubnetId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("managementEndpoints"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<ManagementServerProperties> array = new List<ManagementServerProperties>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ManagementServerProperties.DeserializeManagementServerProperties(item));
                    }
                    managementEndpoints = array;
                    continue;
                }
                if (property.NameEquals("databaseInstance"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    databaseInstance = DatabaseInstanceProperties.DeserializeDatabaseInstanceProperties(property.Value);
                    continue;
                }
                if (property.NameEquals("domainController"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    domainController = DomainControllerProperties.DeserializeDomainControllerProperties(property.Value);
                    continue;
                }
                if (property.NameEquals("domainUserCredentials"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    domainUserCredentials = DomainUserCredentials.DeserializeDomainUserCredentials(property.Value);
                    continue;
                }
                if (property.NameEquals("gmsaDetails"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    gmsaDetails = GmsaDetails.DeserializeGmsaDetails(property.Value);
                    continue;
                }
                if (property.NameEquals("azureHybridBenefit"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    azureHybridBenefit = AzureHybridBenefitProperties.DeserializeAzureHybridBenefitProperties(property.Value);
                    continue;
                }
                if (property.NameEquals("provisioningState"u8))
                {
                    provisioningState = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("logAnalyticsProperties"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    logAnalyticsProperties = LogAnalyticsConfiguration.DeserializeLogAnalyticsConfiguration(property.Value);
                    continue;
                }
                if (property.NameEquals("operationsStatus"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<ManagedInstanceOperationStatus> array = new List<ManagedInstanceOperationStatus>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ManagedInstanceOperationStatus.DeserializeManagedInstanceOperationStatus(item));
                    }
                    operationsStatus = array;
                    continue;
                }
            }
            return new MonitoringInstanceProperties(productVersion.Value, vNetSubnetId.Value, Optional.ToList(managementEndpoints), databaseInstance.Value, domainController.Value, domainUserCredentials.Value, gmsaDetails.Value, azureHybridBenefit.Value, provisioningState.Value, logAnalyticsProperties.Value, Optional.ToList(operationsStatus));
        }
    }
}
