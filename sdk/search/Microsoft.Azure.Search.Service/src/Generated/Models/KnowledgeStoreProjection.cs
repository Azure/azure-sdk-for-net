// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Search.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class KnowledgeStoreProjection
    {
        /// <summary>
        /// Initializes a new instance of the KnowledgeStoreProjection class.
        /// </summary>
        public KnowledgeStoreProjection()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the KnowledgeStoreProjection class.
        /// </summary>
        public KnowledgeStoreProjection(IList<KnowledgeStoreTableProjectionSelector> tables = default(IList<KnowledgeStoreTableProjectionSelector>), IList<KnowledgeStoreObjectProjectionSelector> objects = default(IList<KnowledgeStoreObjectProjectionSelector>), IList<KnowledgeStoreFileProjectionSelector> files = default(IList<KnowledgeStoreFileProjectionSelector>))
        {
            Tables = tables;
            Objects = objects;
            Files = files;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tables")]
        public IList<KnowledgeStoreTableProjectionSelector> Tables { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "objects")]
        public IList<KnowledgeStoreObjectProjectionSelector> Objects { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "files")]
        public IList<KnowledgeStoreFileProjectionSelector> Files { get; set; }

    }
}
