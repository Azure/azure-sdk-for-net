// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Search.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for EntityCategory.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum EntityCategory
    {
        [EnumMember(Value = "location")]
        Location,
        [EnumMember(Value = "organization")]
        Organization,
        [EnumMember(Value = "person")]
        Person,
        [EnumMember(Value = "quantity")]
        Quantity,
        [EnumMember(Value = "datetime")]
        Datetime,
        [EnumMember(Value = "url")]
        Url,
        [EnumMember(Value = "email")]
        Email
    }
    internal static class EntityCategoryEnumExtension
    {
        internal static string ToSerializedValue(this EntityCategory? value)
        {
            return value == null ? null : ((EntityCategory)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this EntityCategory value)
        {
            switch( value )
            {
                case EntityCategory.Location:
                    return "location";
                case EntityCategory.Organization:
                    return "organization";
                case EntityCategory.Person:
                    return "person";
                case EntityCategory.Quantity:
                    return "quantity";
                case EntityCategory.Datetime:
                    return "datetime";
                case EntityCategory.Url:
                    return "url";
                case EntityCategory.Email:
                    return "email";
            }
            return null;
        }

        internal static EntityCategory? ParseEntityCategory(this string value)
        {
            switch( value )
            {
                case "location":
                    return EntityCategory.Location;
                case "organization":
                    return EntityCategory.Organization;
                case "person":
                    return EntityCategory.Person;
                case "quantity":
                    return EntityCategory.Quantity;
                case "datetime":
                    return EntityCategory.Datetime;
                case "url":
                    return EntityCategory.Url;
                case "email":
                    return EntityCategory.Email;
            }
            return null;
        }
    }
}
