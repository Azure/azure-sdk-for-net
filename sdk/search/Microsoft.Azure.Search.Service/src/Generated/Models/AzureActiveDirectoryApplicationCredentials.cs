// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Search.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Credentials of a registered application created for your search
    /// service, used for authenticated access to the encryption keys stored in
    /// Azure Key Vault.
    /// </summary>
    public partial class AzureActiveDirectoryApplicationCredentials
    {
        /// <summary>
        /// Initializes a new instance of the
        /// AzureActiveDirectoryApplicationCredentials class.
        /// </summary>
        public AzureActiveDirectoryApplicationCredentials()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// AzureActiveDirectoryApplicationCredentials class.
        /// </summary>
        /// <param name="applicationId">An AAD Application ID that was granted
        /// the required access permissions to the Azure Key Vault that is to
        /// be used when encrypting your data at rest. The Application ID
        /// should not be confused with the Object ID for your AAD
        /// Application.</param>
        /// <param name="applicationSecret">The authentication key of the
        /// specified AAD application.</param>
        public AzureActiveDirectoryApplicationCredentials(string applicationId, string applicationSecret = default(string))
        {
            ApplicationId = applicationId;
            ApplicationSecret = applicationSecret;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets an AAD Application ID that was granted the required
        /// access permissions to the Azure Key Vault that is to be used when
        /// encrypting your data at rest. The Application ID should not be
        /// confused with the Object ID for your AAD Application.
        /// </summary>
        [JsonProperty(PropertyName = "applicationId")]
        public string ApplicationId { get; set; }

        /// <summary>
        /// Gets or sets the authentication key of the specified AAD
        /// application.
        /// </summary>
        [JsonProperty(PropertyName = "applicationSecret")]
        public string ApplicationSecret { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ApplicationId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ApplicationId");
            }
        }
    }
}
