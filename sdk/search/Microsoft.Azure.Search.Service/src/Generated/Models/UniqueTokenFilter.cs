// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Search.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Filters out tokens with same text as the previous token. This token
    /// filter is implemented using Apache Lucene.
    /// <see
    /// href="http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/RemoveDuplicatesTokenFilter.html"
    /// />
    /// </summary>
    [Newtonsoft.Json.JsonObject("#Microsoft.Azure.Search.UniqueTokenFilter")]
    public partial class UniqueTokenFilter : TokenFilter
    {
        /// <summary>
        /// Initializes a new instance of the UniqueTokenFilter class.
        /// </summary>
        public UniqueTokenFilter()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UniqueTokenFilter class.
        /// </summary>
        /// <param name="name">The name of the token filter. It must only
        /// contain letters, digits, spaces, dashes or underscores, can only
        /// start and end with alphanumeric characters, and is limited to 128
        /// characters.</param>
        /// <param name="onlyOnSamePosition">A value indicating whether to
        /// remove duplicates only at the same position. Default is
        /// false.</param>
        public UniqueTokenFilter(string name, bool? onlyOnSamePosition = default(bool?))
            : base(name)
        {
            OnlyOnSamePosition = onlyOnSamePosition;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets a value indicating whether to remove duplicates only
        /// at the same position. Default is false.
        /// </summary>
        [JsonProperty(PropertyName = "onlyOnSamePosition")]
        public bool? OnlyOnSamePosition { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
