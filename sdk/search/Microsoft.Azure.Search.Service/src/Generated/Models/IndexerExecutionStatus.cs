// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Search.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for IndexerExecutionStatus.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum IndexerExecutionStatus
    {
        [EnumMember(Value = "transientFailure")]
        TransientFailure,
        [EnumMember(Value = "success")]
        Success,
        [EnumMember(Value = "inProgress")]
        InProgress,
        [EnumMember(Value = "reset")]
        Reset
    }
    internal static class IndexerExecutionStatusEnumExtension
    {
        internal static string ToSerializedValue(this IndexerExecutionStatus? value)
        {
            return value == null ? null : ((IndexerExecutionStatus)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this IndexerExecutionStatus value)
        {
            switch( value )
            {
                case IndexerExecutionStatus.TransientFailure:
                    return "transientFailure";
                case IndexerExecutionStatus.Success:
                    return "success";
                case IndexerExecutionStatus.InProgress:
                    return "inProgress";
                case IndexerExecutionStatus.Reset:
                    return "reset";
            }
            return null;
        }

        internal static IndexerExecutionStatus? ParseIndexerExecutionStatus(this string value)
        {
            switch( value )
            {
                case "transientFailure":
                    return IndexerExecutionStatus.TransientFailure;
                case "success":
                    return IndexerExecutionStatus.Success;
                case "inProgress":
                    return IndexerExecutionStatus.InProgress;
                case "reset":
                    return IndexerExecutionStatus.Reset;
            }
            return null;
        }
    }
}
