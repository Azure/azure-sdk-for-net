// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Search.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for KeyPhraseExtractionSkillLanguage.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum KeyPhraseExtractionSkillLanguage
    {
        [EnumMember(Value = "da")]
        Da,
        [EnumMember(Value = "nl")]
        Nl,
        [EnumMember(Value = "en")]
        En,
        [EnumMember(Value = "fi")]
        Fi,
        [EnumMember(Value = "fr")]
        Fr,
        [EnumMember(Value = "de")]
        De,
        [EnumMember(Value = "it")]
        It,
        [EnumMember(Value = "ja")]
        Ja,
        [EnumMember(Value = "ko")]
        Ko,
        [EnumMember(Value = "no")]
        No,
        [EnumMember(Value = "pl")]
        Pl,
        [EnumMember(Value = "pt-PT")]
        PtPT,
        [EnumMember(Value = "pt-BR")]
        PtBR,
        [EnumMember(Value = "ru")]
        Ru,
        [EnumMember(Value = "es")]
        Es,
        [EnumMember(Value = "sv")]
        Sv
    }
    internal static class KeyPhraseExtractionSkillLanguageEnumExtension
    {
        internal static string ToSerializedValue(this KeyPhraseExtractionSkillLanguage? value)
        {
            return value == null ? null : ((KeyPhraseExtractionSkillLanguage)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this KeyPhraseExtractionSkillLanguage value)
        {
            switch( value )
            {
                case KeyPhraseExtractionSkillLanguage.Da:
                    return "da";
                case KeyPhraseExtractionSkillLanguage.Nl:
                    return "nl";
                case KeyPhraseExtractionSkillLanguage.En:
                    return "en";
                case KeyPhraseExtractionSkillLanguage.Fi:
                    return "fi";
                case KeyPhraseExtractionSkillLanguage.Fr:
                    return "fr";
                case KeyPhraseExtractionSkillLanguage.De:
                    return "de";
                case KeyPhraseExtractionSkillLanguage.It:
                    return "it";
                case KeyPhraseExtractionSkillLanguage.Ja:
                    return "ja";
                case KeyPhraseExtractionSkillLanguage.Ko:
                    return "ko";
                case KeyPhraseExtractionSkillLanguage.No:
                    return "no";
                case KeyPhraseExtractionSkillLanguage.Pl:
                    return "pl";
                case KeyPhraseExtractionSkillLanguage.PtPT:
                    return "pt-PT";
                case KeyPhraseExtractionSkillLanguage.PtBR:
                    return "pt-BR";
                case KeyPhraseExtractionSkillLanguage.Ru:
                    return "ru";
                case KeyPhraseExtractionSkillLanguage.Es:
                    return "es";
                case KeyPhraseExtractionSkillLanguage.Sv:
                    return "sv";
            }
            return null;
        }

        internal static KeyPhraseExtractionSkillLanguage? ParseKeyPhraseExtractionSkillLanguage(this string value)
        {
            switch( value )
            {
                case "da":
                    return KeyPhraseExtractionSkillLanguage.Da;
                case "nl":
                    return KeyPhraseExtractionSkillLanguage.Nl;
                case "en":
                    return KeyPhraseExtractionSkillLanguage.En;
                case "fi":
                    return KeyPhraseExtractionSkillLanguage.Fi;
                case "fr":
                    return KeyPhraseExtractionSkillLanguage.Fr;
                case "de":
                    return KeyPhraseExtractionSkillLanguage.De;
                case "it":
                    return KeyPhraseExtractionSkillLanguage.It;
                case "ja":
                    return KeyPhraseExtractionSkillLanguage.Ja;
                case "ko":
                    return KeyPhraseExtractionSkillLanguage.Ko;
                case "no":
                    return KeyPhraseExtractionSkillLanguage.No;
                case "pl":
                    return KeyPhraseExtractionSkillLanguage.Pl;
                case "pt-PT":
                    return KeyPhraseExtractionSkillLanguage.PtPT;
                case "pt-BR":
                    return KeyPhraseExtractionSkillLanguage.PtBR;
                case "ru":
                    return KeyPhraseExtractionSkillLanguage.Ru;
                case "es":
                    return KeyPhraseExtractionSkillLanguage.Es;
                case "sv":
                    return KeyPhraseExtractionSkillLanguage.Sv;
            }
            return null;
        }
    }
}
