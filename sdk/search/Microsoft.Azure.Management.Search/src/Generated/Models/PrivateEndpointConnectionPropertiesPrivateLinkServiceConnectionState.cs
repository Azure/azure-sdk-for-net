// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Search.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Describes the current state of an existing Private Link Service
    /// connection to the Azure Private Endpoint.
    /// </summary>
    public partial class PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionState
    {
        /// <summary>
        /// Initializes a new instance of the
        /// PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionState
        /// class.
        /// </summary>
        public PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionState()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionState
        /// class.
        /// </summary>
        /// <param name="status">Status of the the private link service
        /// connection. Can be Pending, Approved, Rejected, or Disconnected.
        /// Possible values include: 'Pending', 'Approved', 'Rejected',
        /// 'Disconnected'</param>
        /// <param name="description">The description for the private link
        /// service connection state.</param>
        /// <param name="actionsRequired">A description of any extra actions
        /// that may be required.</param>
        public PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionState(PrivateLinkServiceConnectionStatus? status = default(PrivateLinkServiceConnectionStatus?), string description = default(string), string actionsRequired = default(string))
        {
            Status = status;
            Description = description;
            ActionsRequired = actionsRequired;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets status of the the private link service connection. Can
        /// be Pending, Approved, Rejected, or Disconnected. Possible values
        /// include: 'Pending', 'Approved', 'Rejected', 'Disconnected'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public PrivateLinkServiceConnectionStatus? Status { get; set; }

        /// <summary>
        /// Gets or sets the description for the private link service
        /// connection state.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets a description of any extra actions that may be
        /// required.
        /// </summary>
        [JsonProperty(PropertyName = "actionsRequired")]
        public string ActionsRequired { get; set; }

    }
}
