{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "baseName": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "The base resource name."
            }
        },
        "tenantId": {
            "type": "string",
            "defaultValue": "72f988bf-86f1-41af-91ab-2d7cd011db47",
            "metadata": {
                "description": "The tenant ID to which the application and resources belong."
            }
        },
        "testApplicationId": {
            "type": "string",
            "metadata": {
                "description": "The application client ID used to run tests."
            }
        },
        "testApplicationSecret": {
            "type": "string",
            "metadata": {
                "description": "The application client secret used to run tests."
            }
        },
        "testApplicationOid": {
            "type": "string",
            "metadata": {
                "description": "The client OID to grant access to test resources."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "The location of the resource. By default, this is the same as the resource group."
            }
        },
        "searchSku": {
            "type": "string",
            "defaultValue": "basic",
            "allowedValues": [
                "free",
                "basic",
                "standard"
            ],
            "metadata": {
                "description": "The Search service SKU to create."
            }
        }
    },
    "variables": {
        "searchServiceName": "[concat('azs-net-', parameters('baseName'))]",
        "searchApiVersion": "2020-03-13",
        "searchEncryptionLocations": [
            "westus2",
            "eastus2",
            "southcentralus",
            "usgovvirginia",
            "usgovarizona"
        ],
        "storageAccountName": "[concat(parameters('baseName'), 'stg')]",
        "storageApiVersion": "2019-06-01",
        "cognitiveServicesAccountName": "[concat(parameters('baseName'), 'cog')]",
        "cognitiveServicesApiVersion": "2017-04-18",
        "keyVaultName": "[concat(parameters('baseName'), 'kv')]",
        "keyVaultApiVersion": "2016-10-01"
    },
    "resources": [
        {
            "name": "[variables('searchServiceName')]",
            "type": "Microsoft.Search/searchServices",
            "apiVersion": "[variables('searchApiVersion')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('searchSku')]"
            },
            "properties": {
                "replicaCount": 1,
                "partitionCount": 1,
                "hostingMode": "Default",
                "publicNetworkAccess": "Enabled",
                "networkRuleSet": {
                    "ipRules": []
                }
            }
        },
        {
            "name": "[variables('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "[variables('storageApiVersion')]",
            "location": "[parameters('location')]",
            "properties": {
                "accessTier": "Hot",
                "supportsHttpsTrafficOnly": true
            },
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "BlobStorage"
        },
        {
            "name": "[variables('cognitiveServicesAccountName')]",
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "[variables('cognitiveServicesApiVersion')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "S0"
            },
            "kind": "CognitiveServices",
            "properties": {
                "apiProperties": { },
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "[variables('keyVaultApiVersion')]",
            "name": "[variables('keyVaultName')]",
            "condition": "[and(contains(variables('searchEncryptionLocations'), parameters('location')), not(equals(parameters('searchSku'), 'free')))]",
            "location": "[parameters('location')]",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "standard"
                },
                "tenantId": "[parameters('tenantId')]",
                "accessPolicies": [
                    {
                        "tenantId": "[parameters('tenantId')]",
                        "objectId": "[parameters('testApplicationOid')]",
                        "permissions": {
                            "certificates": [
                                "get"
                            ],
                            "keys": [
                                "create",
                                "get",
                                "purge",
                                "unwrapKey",
                                "wrapKey"
                            ],
                            "secrets": [
                                "get"
                            ]
                        }
                    }
                ],
                "enablePurgeProtection": true,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 7
            }
        }
    ],
    "outputs": {
        "SEARCH_SERVICE_NAME": {
            "type": "string",
            "value": "[variables('searchServiceName')]"
        },
        "SEARCH_ADMIN_API_KEY": {
            "type": "string",
            "value": "[listAdminKeys(variables('searchServiceName'), variables('searchApiVersion')).primaryKey]"
        },
        "SEARCH_QUERY_API_KEY": {
            "type": "string",
            "value": "[listQueryKeys(variables('searchServiceName'), variables('searchApiVersion')).value[0].key]"
        },
        "SEARCH_STORAGE_NAME": {
            "type": "string",
            "value": "[variables('storageAccountName')]"
        },
        "SEARCH_STORAGE_KEY": {
            "type": "string",
            "value": "[listKeys(variables('storageAccountName'), variables('storageApiVersion')).keys[0].value]"
        },
        "SEARCH_COGNITIVE_KEY": {
            "type": "string",
            "value": "[listKeys(variables('cognitiveServicesAccountName'), variables('cognitiveServicesApiVersion')).key1]"
        },
        "SEARCH_KEYVAULT_URL": {
            "type": "string",
            "condition": "[and(contains(variables('searchEncryptionLocations'), parameters('location')), not(equals(parameters('searchSku'), 'free')))]",
            "value": "[reference(variables('keyVaultName')).vaultUri]"
        }
    }
}