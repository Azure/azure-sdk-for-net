// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Search.Documents.Indexes.Models;

namespace Azure.Search.Documents.Models
{
    /// <summary> Model factory for read-only models. </summary>
    public static partial class SearchModelFactory
    {

        /// <summary> Initializes new instance of AnswerResult class. </summary>
        /// <param name="score"> The score value represents how relevant the answer is to the the query relative to other answers returned for the query. </param>
        /// <param name="key"> The key of the document the answer was extracted from. </param>
        /// <param name="text"> The text passage extracted from the document contents as the answer. </param>
        /// <param name="highlights"> Same text passage as in the Text property with highlighted text phrases most relevant to the query. </param>
        /// <param name="additionalProperties"> Additional Properties. </param>
        /// <returns> A new <see cref="Models.AnswerResult"/> instance for mocking. </returns>
        public static AnswerResult AnswerResult(double? score = default, string key = default, string text = default, string highlights = default, IReadOnlyDictionary<string, object> additionalProperties = default)
        {
            additionalProperties ??= new Dictionary<string, object>();
            return new AnswerResult(score, key, text, highlights, additionalProperties);
        }

        /// <summary> Initializes new instance of CaptionResult class. </summary>
        /// <param name="text"> A representative text passage extracted from the document most relevant to the search query. </param>
        /// <param name="highlights"> Same text passage as in the Text property with highlighted phrases most relevant to the query. </param>
        /// <param name="additionalProperties"> Additional Properties. </param>
        /// <returns> A new <see cref="Models.CaptionResult"/> instance for mocking. </returns>
        public static CaptionResult CaptionResult(string text = default, string highlights = default, IReadOnlyDictionary<string, object> additionalProperties = default)
        {
            additionalProperties ??= new Dictionary<string, object>();
            return new CaptionResult(text, highlights, additionalProperties);
        }
    }
}
