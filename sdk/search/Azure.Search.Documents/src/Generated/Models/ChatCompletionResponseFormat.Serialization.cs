// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;
using Azure.Search.Documents.Models;

namespace Azure.Search.Documents.Indexes.Models
{
    public partial class ChatCompletionResponseFormat : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Type))
            {
                writer.WritePropertyName("type"u8);
                writer.WriteStringValue(Type.Value.ToString());
            }
            if (Optional.IsDefined(ChatCompletionSchemaProperties))
            {
                if (ChatCompletionSchemaProperties != null)
                {
                    writer.WritePropertyName("jsonSchemaProperties"u8);
                    writer.WriteObjectValue(ChatCompletionSchemaProperties);
                }
                else
                {
                    writer.WriteNull("jsonSchemaProperties");
                }
            }
            writer.WriteEndObject();
        }

        internal static ChatCompletionResponseFormat DeserializeChatCompletionResponseFormat(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            ChatCompletionResponseFormatType? type = default;
            ChatCompletionResponseFormatJsonSchemaProperties jsonSchemaProperties = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("type"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    type = new ChatCompletionResponseFormatType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("jsonSchemaProperties"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        jsonSchemaProperties = null;
                        continue;
                    }
                    jsonSchemaProperties = ChatCompletionResponseFormatJsonSchemaProperties.DeserializeChatCompletionResponseFormatJsonSchemaProperties(property.Value);
                    continue;
                }
            }
            return new ChatCompletionResponseFormat(type, jsonSchemaProperties);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static ChatCompletionResponseFormat FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content, ModelSerializationExtensions.JsonDocumentOptions);
            return DeserializeChatCompletionResponseFormat(document.RootElement);
        }

        /// <summary> Convert into a <see cref="RequestContent"/>. </summary>
        internal virtual RequestContent ToRequestContent()
        {
            var content = new Utf8JsonRequestContent();
            content.JsonWriter.WriteObjectValue(this);
            return content;
        }
    }
}
