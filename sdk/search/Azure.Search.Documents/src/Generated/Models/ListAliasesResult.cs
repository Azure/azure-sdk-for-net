// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.Search.Documents.Indexes.Models
{
    /// <summary> Response from a List Aliases request. If successful, it includes the associated index mappings for all aliases. </summary>
    internal partial class ListAliasesResult
    {
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="ListAliasesResult"/>. </summary>
        /// <param name="aliases"> The aliases in the Search service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="aliases"/> is null. </exception>
        internal ListAliasesResult(IEnumerable<SearchAlias> aliases)
        {
            Argument.AssertNotNull(aliases, nameof(aliases));

            Aliases = aliases.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="ListAliasesResult"/>. </summary>
        /// <param name="aliases"> The aliases in the Search service. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal ListAliasesResult(IReadOnlyList<SearchAlias> aliases, Dictionary<string, BinaryData> rawData)
        {
            Aliases = aliases;
            _rawData = rawData;
        }

        /// <summary> Initializes a new instance of <see cref="ListAliasesResult"/> for deserialization. </summary>
        internal ListAliasesResult()
        {
        }

        /// <summary> The aliases in the Search service. </summary>
        public IReadOnlyList<SearchAlias> Aliases { get; }
    }
}
