// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Search.Documents.Models
{
    internal static class EntityCategoryExtensions
    {
        public static string ToSerialString(this EntityCategory value) => value switch
        {
            EntityCategory.Location => "location",
            EntityCategory.Organization => "organization",
            EntityCategory.Person => "person",
            EntityCategory.Quantity => "quantity",
            EntityCategory.Datetime => "datetime",
            EntityCategory.Url => "url",
            EntityCategory.Email => "email",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown EntityCategory value.")
        };

        public static EntityCategory ToEntityCategory(this string value)
        {
            if (string.Equals(value, "location", StringComparison.InvariantCultureIgnoreCase)) return EntityCategory.Location;
            if (string.Equals(value, "organization", StringComparison.InvariantCultureIgnoreCase)) return EntityCategory.Organization;
            if (string.Equals(value, "person", StringComparison.InvariantCultureIgnoreCase)) return EntityCategory.Person;
            if (string.Equals(value, "quantity", StringComparison.InvariantCultureIgnoreCase)) return EntityCategory.Quantity;
            if (string.Equals(value, "datetime", StringComparison.InvariantCultureIgnoreCase)) return EntityCategory.Datetime;
            if (string.Equals(value, "url", StringComparison.InvariantCultureIgnoreCase)) return EntityCategory.Url;
            if (string.Equals(value, "email", StringComparison.InvariantCultureIgnoreCase)) return EntityCategory.Email;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown EntityCategory value.");
        }
    }
}
