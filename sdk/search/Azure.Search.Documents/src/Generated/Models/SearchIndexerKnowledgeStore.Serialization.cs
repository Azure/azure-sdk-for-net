// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Search.Documents.Indexes.Models
{
    public partial class SearchIndexerKnowledgeStore : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("storageConnectionString");
            writer.WriteStringValue(StorageConnectionString);
            writer.WritePropertyName("projections");
            writer.WriteStartArray();
            foreach (var item in Projections)
            {
                writer.WriteObjectValue(item);
            }
            writer.WriteEndArray();
            writer.WriteEndObject();
        }

        internal static SearchIndexerKnowledgeStore DeserializeSearchIndexerKnowledgeStore(JsonElement element)
        {
            string storageConnectionString = default;
            IList<SearchIndexerKnowledgeStoreProjection> projections = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("storageConnectionString"))
                {
                    storageConnectionString = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("projections"))
                {
                    List<SearchIndexerKnowledgeStoreProjection> array = new List<SearchIndexerKnowledgeStoreProjection>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(SearchIndexerKnowledgeStoreProjection.DeserializeSearchIndexerKnowledgeStoreProjection(item));
                    }
                    projections = array;
                    continue;
                }
            }
            return new SearchIndexerKnowledgeStore(storageConnectionString, projections);
        }
    }
}
