// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.Search.Documents.Models
{
    /// <summary> Abstract base class for functions that can modify document scores during ranking. </summary>
    public partial class ScoringFunction
    {
        /// <summary> Initializes a new instance of ScoringFunction. </summary>
        public ScoringFunction()
        {
            Type = null;
        }

        /// <summary> Initializes a new instance of ScoringFunction. </summary>
        /// <param name="type"> Required for scoring functions. Indicates the type of function to use. Valid values include magnitude, freshness, distance, and tag. You can include more than one function in each scoring profile. The function name must be lower case. </param>
        /// <param name="fieldName"> The name of the field used as input to the scoring function. </param>
        /// <param name="boost"> A multiplier for the raw score. Must be a positive number not equal to 1.0. </param>
        /// <param name="interpolation"> A value indicating how boosting will be interpolated across document scores; defaults to &quot;Linear&quot;. </param>
        internal ScoringFunction(string type, string fieldName, double boost, ScoringFunctionInterpolation? interpolation)
        {
            Type = type;
            FieldName = fieldName;
            Boost = boost;
            Interpolation = interpolation;
            Type = null;
        }

        /// <summary> Required for scoring functions. Indicates the type of function to use. Valid values include magnitude, freshness, distance, and tag. You can include more than one function in each scoring profile. The function name must be lower case. </summary>
        public string Type { get; internal set; }
        /// <summary> The name of the field used as input to the scoring function. </summary>
        public string FieldName { get; set; }
        /// <summary> A multiplier for the raw score. Must be a positive number not equal to 1.0. </summary>
        public double Boost { get; set; }
        /// <summary> A value indicating how boosting will be interpolated across document scores; defaults to &quot;Linear&quot;. </summary>
        public ScoringFunctionInterpolation? Interpolation { get; set; }
    }
}
