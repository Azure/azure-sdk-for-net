// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Search.Documents.Indexes.Models
{
    internal static partial class TokenCharacterKindExtensions
    {
        public static string ToSerialString(this TokenCharacterKind value) => value switch
        {
            TokenCharacterKind.Letter => "letter",
            TokenCharacterKind.Digit => "digit",
            TokenCharacterKind.Whitespace => "whitespace",
            TokenCharacterKind.Punctuation => "punctuation",
            TokenCharacterKind.Symbol => "symbol",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown TokenCharacterKind value.")
        };

        public static TokenCharacterKind ToTokenCharacterKind(this string value)
        {
            if (string.Equals(value, "letter", StringComparison.InvariantCultureIgnoreCase)) return TokenCharacterKind.Letter;
            if (string.Equals(value, "digit", StringComparison.InvariantCultureIgnoreCase)) return TokenCharacterKind.Digit;
            if (string.Equals(value, "whitespace", StringComparison.InvariantCultureIgnoreCase)) return TokenCharacterKind.Whitespace;
            if (string.Equals(value, "punctuation", StringComparison.InvariantCultureIgnoreCase)) return TokenCharacterKind.Punctuation;
            if (string.Equals(value, "symbol", StringComparison.InvariantCultureIgnoreCase)) return TokenCharacterKind.Symbol;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown TokenCharacterKind value.");
        }
    }
}
