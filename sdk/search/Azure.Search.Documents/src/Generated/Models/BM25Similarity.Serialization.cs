// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Search.Documents.Indexes.Models
{
    public partial class BM25Similarity : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(K1))
            {
                writer.WritePropertyName("k1");
                writer.WriteNumberValue(K1.Value);
            }
            if (Optional.IsDefined(B))
            {
                writer.WritePropertyName("b");
                writer.WriteNumberValue(B.Value);
            }
            writer.WritePropertyName("@odata.type");
            writer.WriteStringValue(ODataType);
            writer.WriteEndObject();
        }

        internal static BM25Similarity DeserializeBM25Similarity(JsonElement element)
        {
            Optional<double> k1 = default;
            Optional<double> b = default;
            string odataType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("k1"))
                {
                    k1 = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("b"))
                {
                    b = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("@odata.type"))
                {
                    odataType = property.Value.GetString();
                    continue;
                }
            }
            return new BM25Similarity(odataType, k1.HasValue ? k1.Value : (double?)null, b.HasValue ? b.Value : (double?)null);
        }
    }
}
