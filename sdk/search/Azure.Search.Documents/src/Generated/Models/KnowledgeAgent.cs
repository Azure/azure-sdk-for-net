// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.Search.Documents.Indexes.Models
{
    /// <summary> The KnowledgeAgent. </summary>
    public partial class KnowledgeAgent
    {
        /// <summary> Initializes a new instance of <see cref="KnowledgeAgent"/>. </summary>
        /// <param name="name"> The name of the knowledge agent. </param>
        /// <param name="models">
        /// Contains configuration options on how to connect to AI models.
        /// Please note <see cref="KnowledgeAgentModel"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="KnowledgeAgentAzureOpenAIModel"/>.
        /// </param>
        /// <param name="targetIndexes"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/>, <paramref name="models"/> or <paramref name="targetIndexes"/> is null. </exception>
        public KnowledgeAgent(string name, IEnumerable<KnowledgeAgentModel> models, IEnumerable<KnowledgeAgentTargetIndex> targetIndexes)
        {
            Argument.AssertNotNull(name, nameof(name));
            Argument.AssertNotNull(models, nameof(models));
            Argument.AssertNotNull(targetIndexes, nameof(targetIndexes));

            Name = name;
            Models = models.ToList();
            TargetIndexes = targetIndexes.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="KnowledgeAgent"/>. </summary>
        /// <param name="name"> The name of the knowledge agent. </param>
        /// <param name="models">
        /// Contains configuration options on how to connect to AI models.
        /// Please note <see cref="KnowledgeAgentModel"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="KnowledgeAgentAzureOpenAIModel"/>.
        /// </param>
        /// <param name="targetIndexes"></param>
        /// <param name="requestLimits"> Guardrails to limit how much resources are utilized for a single agent retrieval request. </param>
        /// <param name="eTag"> The ETag of the agent. </param>
        /// <param name="encryptionKey"> A description of an encryption key that you create in Azure Key Vault. This key is used to provide an additional level of encryption-at-rest for your agent definition when you want full assurance that no one, not even Microsoft, can decrypt them. Once you have encrypted your agent definition, it will always remain encrypted. The search service will ignore attempts to set this property to null. You can change this property as needed if you want to rotate your encryption key; Your agent definition will be unaffected. Encryption with customer-managed keys is not available for free search services, and is only available for paid services created on or after January 1, 2019. </param>
        /// <param name="description"> The description of the agent. </param>
        internal KnowledgeAgent(string name, IList<KnowledgeAgentModel> models, IList<KnowledgeAgentTargetIndex> targetIndexes, KnowledgeAgentRequestLimits requestLimits, string eTag, SearchResourceEncryptionKey encryptionKey, string description)
        {
            Name = name;
            Models = models;
            TargetIndexes = targetIndexes;
            RequestLimits = requestLimits;
            _eTag = eTag;
            EncryptionKey = encryptionKey;
            Description = description;
        }

        /// <summary> The name of the knowledge agent. </summary>
        public string Name { get; set; }
        /// <summary>
        /// Contains configuration options on how to connect to AI models.
        /// Please note <see cref="KnowledgeAgentModel"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="KnowledgeAgentAzureOpenAIModel"/>.
        /// </summary>
        public IList<KnowledgeAgentModel> Models { get; }
        /// <summary> Gets the target indexes. </summary>
        public IList<KnowledgeAgentTargetIndex> TargetIndexes { get; }
        /// <summary> Guardrails to limit how much resources are utilized for a single agent retrieval request. </summary>
        public KnowledgeAgentRequestLimits RequestLimits { get; set; }
        /// <summary> A description of an encryption key that you create in Azure Key Vault. This key is used to provide an additional level of encryption-at-rest for your agent definition when you want full assurance that no one, not even Microsoft, can decrypt them. Once you have encrypted your agent definition, it will always remain encrypted. The search service will ignore attempts to set this property to null. You can change this property as needed if you want to rotate your encryption key; Your agent definition will be unaffected. Encryption with customer-managed keys is not available for free search services, and is only available for paid services created on or after January 1, 2019. </summary>
        public SearchResourceEncryptionKey EncryptionKey { get; set; }
        /// <summary> The description of the agent. </summary>
        public string Description { get; set; }
    }
}
