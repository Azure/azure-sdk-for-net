// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure;
using Azure.Core;
using Azure.Core.Serialization;

namespace Azure.Search.Documents.Indexes.Models
{
    public partial class CustomEntityLookupSkill : IUtf8JsonSerializable, IModelJsonSerializable<CustomEntityLookupSkill>
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer) => ((IModelJsonSerializable<CustomEntityLookupSkill>)this).Serialize(writer, ModelSerializerOptions.DefaultWireOptions);

        void IModelJsonSerializable<CustomEntityLookupSkill>.Serialize(Utf8JsonWriter writer, ModelSerializerOptions options)
        {
            ModelSerializerHelper.ValidateFormat<CustomEntityLookupSkill>(this, options.Format);

            writer.WriteStartObject();
            if (Optional.IsDefined(DefaultLanguageCode))
            {
                if (DefaultLanguageCode != null)
                {
                    writer.WritePropertyName("defaultLanguageCode"u8);
                    writer.WriteStringValue(DefaultLanguageCode.Value.ToString());
                }
                else
                {
                    writer.WriteNull("defaultLanguageCode");
                }
            }
            if (Optional.IsDefined(EntitiesDefinitionUri))
            {
                if (EntitiesDefinitionUri != null)
                {
                    writer.WritePropertyName("entitiesDefinitionUri"u8);
                    writer.WriteStringValue(EntitiesDefinitionUri.AbsoluteUri);
                }
                else
                {
                    writer.WriteNull("entitiesDefinitionUri");
                }
            }
            if (Optional.IsCollectionDefined(InlineEntitiesDefinition))
            {
                if (InlineEntitiesDefinition != null)
                {
                    writer.WritePropertyName("inlineEntitiesDefinition"u8);
                    writer.WriteStartArray();
                    foreach (var item in InlineEntitiesDefinition)
                    {
                        if (item is null)
                        {
                            writer.WriteNullValue();
                        }
                        else
                        {
                            ((IModelJsonSerializable<CustomEntity>)item).Serialize(writer, options);
                        }
                    }
                    writer.WriteEndArray();
                }
                else
                {
                    writer.WriteNull("inlineEntitiesDefinition");
                }
            }
            if (Optional.IsDefined(GlobalDefaultCaseSensitive))
            {
                if (GlobalDefaultCaseSensitive != null)
                {
                    writer.WritePropertyName("globalDefaultCaseSensitive"u8);
                    writer.WriteBooleanValue(GlobalDefaultCaseSensitive.Value);
                }
                else
                {
                    writer.WriteNull("globalDefaultCaseSensitive");
                }
            }
            if (Optional.IsDefined(GlobalDefaultAccentSensitive))
            {
                if (GlobalDefaultAccentSensitive != null)
                {
                    writer.WritePropertyName("globalDefaultAccentSensitive"u8);
                    writer.WriteBooleanValue(GlobalDefaultAccentSensitive.Value);
                }
                else
                {
                    writer.WriteNull("globalDefaultAccentSensitive");
                }
            }
            if (Optional.IsDefined(GlobalDefaultFuzzyEditDistance))
            {
                if (GlobalDefaultFuzzyEditDistance != null)
                {
                    writer.WritePropertyName("globalDefaultFuzzyEditDistance"u8);
                    writer.WriteNumberValue(GlobalDefaultFuzzyEditDistance.Value);
                }
                else
                {
                    writer.WriteNull("globalDefaultFuzzyEditDistance");
                }
            }
            writer.WritePropertyName("@odata.type"u8);
            writer.WriteStringValue(ODataType);
            if (Optional.IsDefined(Name))
            {
                writer.WritePropertyName("name"u8);
                writer.WriteStringValue(Name);
            }
            if (Optional.IsDefined(Description))
            {
                writer.WritePropertyName("description"u8);
                writer.WriteStringValue(Description);
            }
            if (Optional.IsDefined(Context))
            {
                writer.WritePropertyName("context"u8);
                writer.WriteStringValue(Context);
            }
            writer.WritePropertyName("inputs"u8);
            writer.WriteStartArray();
            foreach (var item in Inputs)
            {
                if (item is null)
                {
                    writer.WriteNullValue();
                }
                else
                {
                    ((IModelJsonSerializable<InputFieldMappingEntry>)item).Serialize(writer, options);
                }
            }
            writer.WriteEndArray();
            writer.WritePropertyName("outputs"u8);
            writer.WriteStartArray();
            foreach (var item in Outputs)
            {
                if (item is null)
                {
                    writer.WriteNullValue();
                }
                else
                {
                    ((IModelJsonSerializable<OutputFieldMappingEntry>)item).Serialize(writer, options);
                }
            }
            writer.WriteEndArray();
            if (_rawData is not null && options.Format == ModelSerializerFormat.Json)
            {
                foreach (var property in _rawData)
                {
                    writer.WritePropertyName(property.Key);
#if NET6_0_OR_GREATER
				writer.WriteRawValue(property.Value);
#else
                    JsonSerializer.Serialize(writer, JsonDocument.Parse(property.Value.ToString()).RootElement);
#endif
                }
            }
            writer.WriteEndObject();
        }

        internal static CustomEntityLookupSkill DeserializeCustomEntityLookupSkill(JsonElement element, ModelSerializerOptions options = default)
        {
            options ??= ModelSerializerOptions.DefaultWireOptions;

            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<CustomEntityLookupSkillLanguage?> defaultLanguageCode = default;
            Optional<Uri> entitiesDefinitionUri = default;
            Optional<IList<CustomEntity>> inlineEntitiesDefinition = default;
            Optional<bool?> globalDefaultCaseSensitive = default;
            Optional<bool?> globalDefaultAccentSensitive = default;
            Optional<int?> globalDefaultFuzzyEditDistance = default;
            string odataType = default;
            Optional<string> name = default;
            Optional<string> description = default;
            Optional<string> context = default;
            IList<InputFieldMappingEntry> inputs = default;
            IList<OutputFieldMappingEntry> outputs = default;
            Dictionary<string, BinaryData> rawData = new Dictionary<string, BinaryData>();
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("defaultLanguageCode"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        defaultLanguageCode = null;
                        continue;
                    }
                    defaultLanguageCode = new CustomEntityLookupSkillLanguage(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("entitiesDefinitionUri"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        entitiesDefinitionUri = null;
                        continue;
                    }
                    entitiesDefinitionUri = new Uri(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("inlineEntitiesDefinition"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        inlineEntitiesDefinition = null;
                        continue;
                    }
                    List<CustomEntity> array = new List<CustomEntity>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(CustomEntity.DeserializeCustomEntity(item));
                    }
                    inlineEntitiesDefinition = array;
                    continue;
                }
                if (property.NameEquals("globalDefaultCaseSensitive"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        globalDefaultCaseSensitive = null;
                        continue;
                    }
                    globalDefaultCaseSensitive = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("globalDefaultAccentSensitive"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        globalDefaultAccentSensitive = null;
                        continue;
                    }
                    globalDefaultAccentSensitive = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("globalDefaultFuzzyEditDistance"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        globalDefaultFuzzyEditDistance = null;
                        continue;
                    }
                    globalDefaultFuzzyEditDistance = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("@odata.type"u8))
                {
                    odataType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("name"u8))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("description"u8))
                {
                    description = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("context"u8))
                {
                    context = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("inputs"u8))
                {
                    List<InputFieldMappingEntry> array = new List<InputFieldMappingEntry>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(InputFieldMappingEntry.DeserializeInputFieldMappingEntry(item));
                    }
                    inputs = array;
                    continue;
                }
                if (property.NameEquals("outputs"u8))
                {
                    List<OutputFieldMappingEntry> array = new List<OutputFieldMappingEntry>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(OutputFieldMappingEntry.DeserializeOutputFieldMappingEntry(item));
                    }
                    outputs = array;
                    continue;
                }
                if (options.Format == ModelSerializerFormat.Json)
                {
                    rawData.Add(property.Name, BinaryData.FromString(property.Value.GetRawText()));
                    continue;
                }
            }
            return new CustomEntityLookupSkill(odataType, name.Value, description.Value, context.Value, inputs, outputs, Optional.ToNullable(defaultLanguageCode), entitiesDefinitionUri.Value, Optional.ToList(inlineEntitiesDefinition), Optional.ToNullable(globalDefaultCaseSensitive), Optional.ToNullable(globalDefaultAccentSensitive), Optional.ToNullable(globalDefaultFuzzyEditDistance), rawData);
        }

        CustomEntityLookupSkill IModelJsonSerializable<CustomEntityLookupSkill>.Deserialize(ref Utf8JsonReader reader, ModelSerializerOptions options)
        {
            ModelSerializerHelper.ValidateFormat<CustomEntityLookupSkill>(this, options.Format);

            using var doc = JsonDocument.ParseValue(ref reader);
            return DeserializeCustomEntityLookupSkill(doc.RootElement, options);
        }

        BinaryData IModelSerializable<CustomEntityLookupSkill>.Serialize(ModelSerializerOptions options)
        {
            ModelSerializerHelper.ValidateFormat<CustomEntityLookupSkill>(this, options.Format);

            return ModelSerializer.SerializeCore(this, options);
        }

        CustomEntityLookupSkill IModelSerializable<CustomEntityLookupSkill>.Deserialize(BinaryData data, ModelSerializerOptions options)
        {
            ModelSerializerHelper.ValidateFormat<CustomEntityLookupSkill>(this, options.Format);

            using var doc = JsonDocument.Parse(data);
            return DeserializeCustomEntityLookupSkill(doc.RootElement, options);
        }

        /// <summary> Converts a <see cref="CustomEntityLookupSkill"/> into a <see cref="RequestContent"/>. </summary>
        /// <param name="model"> The <see cref="CustomEntityLookupSkill"/> to convert. </param>
        public static implicit operator RequestContent(CustomEntityLookupSkill model)
        {
            if (model is null)
            {
                return null;
            }

            return RequestContent.Create(model, ModelSerializerOptions.DefaultWireOptions);
        }

        /// <summary> Converts a <see cref="Response"/> into a <see cref="CustomEntityLookupSkill"/>. </summary>
        /// <param name="response"> The <see cref="Response"/> to convert. </param>
        public static explicit operator CustomEntityLookupSkill(Response response)
        {
            if (response is null)
            {
                return null;
            }

            using JsonDocument doc = JsonDocument.Parse(response.ContentStream);
            return DeserializeCustomEntityLookupSkill(doc.RootElement, ModelSerializerOptions.DefaultWireOptions);
        }
    }
}
