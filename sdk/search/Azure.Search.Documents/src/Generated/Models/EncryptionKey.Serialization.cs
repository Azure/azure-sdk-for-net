// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Search.Documents.Models
{
    public partial class EncryptionKey : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("keyVaultKeyName");
            writer.WriteStringValue(KeyVaultKeyName);
            writer.WritePropertyName("keyVaultKeyVersion");
            writer.WriteStringValue(KeyVaultKeyVersion);
            writer.WritePropertyName("keyVaultUri");
            writer.WriteStringValue(KeyVaultUri);
            if (AccessCredentials != null)
            {
                writer.WritePropertyName("accessCredentials");
                writer.WriteObjectValue(AccessCredentials);
            }
            writer.WriteEndObject();
        }

        internal static EncryptionKey DeserializeEncryptionKey(JsonElement element)
        {
            EncryptionKey result = new EncryptionKey();
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("keyVaultKeyName"))
                {
                    result.KeyVaultKeyName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("keyVaultKeyVersion"))
                {
                    result.KeyVaultKeyVersion = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("keyVaultUri"))
                {
                    result.KeyVaultUri = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("accessCredentials"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.AccessCredentials = AzureActiveDirectoryApplicationCredentials.DeserializeAzureActiveDirectoryApplicationCredentials(property.Value);
                    continue;
                }
            }
            return result;
        }
    }
}
