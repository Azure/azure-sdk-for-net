// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Search.Documents.Agents.Models
{
    /// <summary>
    /// Represents a retrieval activity record.
    /// Please note <see cref="KnowledgeAgentRetrievalActivityRecord"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
    /// The available derived classes include <see cref="KnowledgeAgentAzureBlobActivityRecord"/> and <see cref="KnowledgeAgentSearchIndexActivityRecord"/>.
    /// </summary>
    public partial class KnowledgeAgentRetrievalActivityRecord : KnowledgeAgentActivityRecord
    {
        /// <summary> Initializes a new instance of <see cref="KnowledgeAgentRetrievalActivityRecord"/>. </summary>
        /// <param name="id"> The ID of the activity record. </param>
        internal KnowledgeAgentRetrievalActivityRecord(int id) : base(id)
        {
            Type = "KnowledgeAgentRetrievalActivityRecord";
        }

        /// <summary> Initializes a new instance of <see cref="KnowledgeAgentRetrievalActivityRecord"/>. </summary>
        /// <param name="id"> The ID of the activity record. </param>
        /// <param name="type"> The type of the activity record. </param>
        /// <param name="elapsedMs"> The elapsed time in milliseconds for the retrieval activity. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="knowledgeSourceName"> The knowledge source for the retrieval activity. </param>
        /// <param name="queryTime"> The query time for this retrieval activity. </param>
        /// <param name="count"> The count of documents retrieved that were sufficiently relevant to pass the reranker threshold. </param>
        internal KnowledgeAgentRetrievalActivityRecord(int id, string type, int? elapsedMs, IDictionary<string, BinaryData> serializedAdditionalRawData, string knowledgeSourceName, DateTimeOffset? queryTime, int? count) : base(id, type, elapsedMs, serializedAdditionalRawData)
        {
            KnowledgeSourceName = knowledgeSourceName;
            QueryTime = queryTime;
            Count = count;
            Type = type ?? "KnowledgeAgentRetrievalActivityRecord";
        }

        /// <summary> Initializes a new instance of <see cref="KnowledgeAgentRetrievalActivityRecord"/> for deserialization. </summary>
        internal KnowledgeAgentRetrievalActivityRecord()
        {
        }

        /// <summary> The knowledge source for the retrieval activity. </summary>
        public string KnowledgeSourceName { get; }
        /// <summary> The query time for this retrieval activity. </summary>
        public DateTimeOffset? QueryTime { get; }
        /// <summary> The count of documents retrieved that were sufficiently relevant to pass the reranker threshold. </summary>
        public int? Count { get; }
    }
}
