// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;

namespace Azure.Search.Documents.Models
{
    /// <summary> A token filter that only keeps tokens with text contained in a specified list of words. This token filter is implemented using Apache Lucene. </summary>
    public partial class KeepTokenFilter : TokenFilter
    {
        /// <summary> Initializes a new instance of KeepTokenFilter. </summary>
        public KeepTokenFilter()
        {
            ODataType = "#Microsoft.Azure.Search.KeepTokenFilter";
        }

        /// <summary> Initializes a new instance of KeepTokenFilter. </summary>
        /// <param name="keepWords"> The list of words to keep. </param>
        /// <param name="lowerCaseKeepWords"> A value indicating whether to lower case all words first. Default is false. </param>
        /// <param name="oDataType"> The model type. </param>
        /// <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
        internal KeepTokenFilter(IList<string> keepWords, bool? lowerCaseKeepWords, string oDataType, string name) : base(oDataType, name)
        {
            KeepWords = keepWords;
            LowerCaseKeepWords = lowerCaseKeepWords;
            ODataType = "#Microsoft.Azure.Search.KeepTokenFilter";
        }

        /// <summary> The list of words to keep. </summary>
        public IList<string> KeepWords { get; set; } = new List<string>();
        /// <summary> A value indicating whether to lower case all words first. Default is false. </summary>
        public bool? LowerCaseKeepWords { get; set; }
    }
}
