// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Search.Documents.Agents.Models
{
    /// <summary> The output contract for the retrieval response. </summary>
    public partial class KnowledgeAgentRetrievalResponse
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="KnowledgeAgentRetrievalResponse"/>. </summary>
        internal KnowledgeAgentRetrievalResponse()
        {
            Response = new ChangeTrackingList<KnowledgeAgentMessage>();
            Activity = new ChangeTrackingList<KnowledgeAgentActivityRecord>();
            References = new ChangeTrackingList<KnowledgeAgentReference>();
        }

        /// <summary> Initializes a new instance of <see cref="KnowledgeAgentRetrievalResponse"/>. </summary>
        /// <param name="response"></param>
        /// <param name="activity">
        /// The activity records for tracking progress and billing implications.
        /// Please note <see cref="KnowledgeAgentActivityRecord"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="KnowledgeAgentSearchActivityRecord"/>, <see cref="KnowledgeAgentSemanticRankerActivityRecord"/> and <see cref="KnowledgeAgentModelQueryPlanningActivityRecord"/>.
        /// </param>
        /// <param name="references">
        /// The references for the retrieval data used in the response.
        /// Please note <see cref="KnowledgeAgentReference"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="KnowledgeAgentAzureSearchDocReference"/>.
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal KnowledgeAgentRetrievalResponse(IReadOnlyList<KnowledgeAgentMessage> response, IReadOnlyList<KnowledgeAgentActivityRecord> activity, IReadOnlyList<KnowledgeAgentReference> references, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Response = response;
            Activity = activity;
            References = references;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Gets the response. </summary>
        public IReadOnlyList<KnowledgeAgentMessage> Response { get; }
        /// <summary>
        /// The activity records for tracking progress and billing implications.
        /// Please note <see cref="KnowledgeAgentActivityRecord"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="KnowledgeAgentSearchActivityRecord"/>, <see cref="KnowledgeAgentSemanticRankerActivityRecord"/> and <see cref="KnowledgeAgentModelQueryPlanningActivityRecord"/>.
        /// </summary>
        public IReadOnlyList<KnowledgeAgentActivityRecord> Activity { get; }
        /// <summary>
        /// The references for the retrieval data used in the response.
        /// Please note <see cref="KnowledgeAgentReference"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="KnowledgeAgentAzureSearchDocReference"/>.
        /// </summary>
        public IReadOnlyList<KnowledgeAgentReference> References { get; }
    }
}
