// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.Search.Documents.Indexes.Models
{
    /// <summary> Specifies how 'extraParameters' should be handled by Azure AI Foundry. Defaults to 'error'. </summary>
    public readonly partial struct ChatCompletionExtraParametersBehavior : IEquatable<ChatCompletionExtraParametersBehavior>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="ChatCompletionExtraParametersBehavior"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ChatCompletionExtraParametersBehavior(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string PassThroughValue = "passThrough";
        private const string DropValue = "drop";
        private const string ErrorValue = "error";

        /// <summary> Passes any extra parameters directly to the model. </summary>
        public static ChatCompletionExtraParametersBehavior PassThrough { get; } = new ChatCompletionExtraParametersBehavior(PassThroughValue);
        /// <summary> Drops all extra parameters. </summary>
        public static ChatCompletionExtraParametersBehavior Drop { get; } = new ChatCompletionExtraParametersBehavior(DropValue);
        /// <summary> Raises an error if any extra parameter is present. </summary>
        public static ChatCompletionExtraParametersBehavior Error { get; } = new ChatCompletionExtraParametersBehavior(ErrorValue);
        /// <summary> Determines if two <see cref="ChatCompletionExtraParametersBehavior"/> values are the same. </summary>
        public static bool operator ==(ChatCompletionExtraParametersBehavior left, ChatCompletionExtraParametersBehavior right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ChatCompletionExtraParametersBehavior"/> values are not the same. </summary>
        public static bool operator !=(ChatCompletionExtraParametersBehavior left, ChatCompletionExtraParametersBehavior right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="ChatCompletionExtraParametersBehavior"/>. </summary>
        public static implicit operator ChatCompletionExtraParametersBehavior(string value) => new ChatCompletionExtraParametersBehavior(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ChatCompletionExtraParametersBehavior other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ChatCompletionExtraParametersBehavior other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
