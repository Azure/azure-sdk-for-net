// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Search.Documents.Indexes.Models
{
    public partial class KnowledgeAgentTargetIndex : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("indexName"u8);
            writer.WriteStringValue(IndexName);
            if (Optional.IsDefined(DefaultRerankerThreshold))
            {
                writer.WritePropertyName("defaultRerankerThreshold"u8);
                writer.WriteNumberValue(DefaultRerankerThreshold.Value);
            }
            if (Optional.IsDefined(DefaultIncludeReferenceSourceData))
            {
                writer.WritePropertyName("defaultIncludeReferenceSourceData"u8);
                writer.WriteBooleanValue(DefaultIncludeReferenceSourceData.Value);
            }
            if (Optional.IsDefined(DefaultMaxDocsForReranker))
            {
                writer.WritePropertyName("defaultMaxDocsForReranker"u8);
                writer.WriteNumberValue(DefaultMaxDocsForReranker.Value);
            }
            writer.WriteEndObject();
        }

        internal static KnowledgeAgentTargetIndex DeserializeKnowledgeAgentTargetIndex(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            string indexName = default;
            float? defaultRerankerThreshold = default;
            bool? defaultIncludeReferenceSourceData = default;
            int? defaultMaxDocsForReranker = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("indexName"u8))
                {
                    indexName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("defaultRerankerThreshold"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    defaultRerankerThreshold = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("defaultIncludeReferenceSourceData"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    defaultIncludeReferenceSourceData = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("defaultMaxDocsForReranker"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    defaultMaxDocsForReranker = property.Value.GetInt32();
                    continue;
                }
            }
            return new KnowledgeAgentTargetIndex(indexName, defaultRerankerThreshold, defaultIncludeReferenceSourceData, defaultMaxDocsForReranker);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static KnowledgeAgentTargetIndex FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content, ModelSerializationExtensions.JsonDocumentOptions);
            return DeserializeKnowledgeAgentTargetIndex(document.RootElement);
        }

        /// <summary> Convert into a <see cref="RequestContent"/>. </summary>
        internal virtual RequestContent ToRequestContent()
        {
            var content = new Utf8JsonRequestContent();
            content.JsonWriter.WriteObjectValue(this);
            return content;
        }
    }
}
