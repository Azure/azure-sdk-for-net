// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.Search.Documents.Indexes.Models
{
    /// <summary> Definition of additional projections to azure blob, table, or files, of enriched data. </summary>
    public partial class SearchIndexerKnowledgeStore
    {
        /// <summary> Initializes a new instance of SearchIndexerKnowledgeStore. </summary>
        /// <param name="storageConnectionString"> The connection string to the storage account projections will be stored in. </param>
        /// <param name="projections"> A list of additional projections to perform during indexing. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="storageConnectionString"/> or <paramref name="projections"/> is null. </exception>
        public SearchIndexerKnowledgeStore(string storageConnectionString, IEnumerable<SearchIndexerKnowledgeStoreProjection> projections)
        {
            if (storageConnectionString == null)
            {
                throw new ArgumentNullException(nameof(storageConnectionString));
            }
            if (projections == null)
            {
                throw new ArgumentNullException(nameof(projections));
            }

            StorageConnectionString = storageConnectionString;
            Projections = projections.ToList();
        }

        /// <summary> Initializes a new instance of SearchIndexerKnowledgeStore. </summary>
        /// <param name="storageConnectionString"> The connection string to the storage account projections will be stored in. </param>
        /// <param name="projections"> A list of additional projections to perform during indexing. </param>
        internal SearchIndexerKnowledgeStore(string storageConnectionString, IList<SearchIndexerKnowledgeStoreProjection> projections)
        {
            StorageConnectionString = storageConnectionString;
            Projections = projections;
        }

        /// <summary> The connection string to the storage account projections will be stored in. </summary>
        public string StorageConnectionString { get; set; }
        /// <summary> A list of additional projections to perform during indexing. </summary>
        public IList<SearchIndexerKnowledgeStoreProjection> Projections { get; }
    }
}
