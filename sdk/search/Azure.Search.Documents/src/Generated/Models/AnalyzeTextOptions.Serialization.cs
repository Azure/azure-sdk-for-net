// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Search.Documents.Indexes.Models
{
    public partial class AnalyzeTextOptions : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("text"u8);
            writer.WriteStringValue(Text);
            if (AnalyzerName.HasValue)
            {
                writer.WritePropertyName("analyzer"u8);
                writer.WriteStringValue(AnalyzerName.Value.ToString());
            }
            if (TokenizerName.HasValue)
            {
                writer.WritePropertyName("tokenizer"u8);
                writer.WriteStringValue(TokenizerName.Value.ToString());
            }
            if (NormalizerName.HasValue)
            {
                writer.WritePropertyName("normalizer"u8);
                writer.WriteStringValue(NormalizerName.Value.ToString());
            }
            if (!(TokenFilters is ChangeTrackingList<TokenFilterName> collection && collection.IsUndefined))
            {
                writer.WritePropertyName("tokenFilters"u8);
                writer.WriteStartArray();
                foreach (var item in TokenFilters)
                {
                    writer.WriteStringValue(item.ToString());
                }
                writer.WriteEndArray();
            }
            if (!(CharFilters is ChangeTrackingList<string> collection0 && collection0.IsUndefined))
            {
                writer.WritePropertyName("charFilters"u8);
                writer.WriteStartArray();
                foreach (var item in CharFilters)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }
    }
}
