// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Search.Documents.Indexes.Models
{
    /// <summary> Configuration for Azure Blob Storage knowledge source. </summary>
    public partial class AzureBlobKnowledgeSource : KnowledgeSource
    {
        /// <summary> Initializes a new instance of <see cref="AzureBlobKnowledgeSource"/>. </summary>
        /// <param name="name"> The name of the knowledge source. </param>
        /// <param name="azureBlobParameters"> The type of the knowledge source. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> or <paramref name="azureBlobParameters"/> is null. </exception>
        public AzureBlobKnowledgeSource(string name, AzureBlobKnowledgeSourceParameters azureBlobParameters) : base(name)
        {
            Argument.AssertNotNull(name, nameof(name));
            Argument.AssertNotNull(azureBlobParameters, nameof(azureBlobParameters));

            AzureBlobParameters = azureBlobParameters;
            Kind = KnowledgeSourceKind.AzureBlob;
        }

        /// <summary> Initializes a new instance of <see cref="AzureBlobKnowledgeSource"/>. </summary>
        /// <param name="name"> The name of the knowledge source. </param>
        /// <param name="description"> Optional user-defined description. </param>
        /// <param name="kind"> The type of the knowledge source. </param>
        /// <param name="eTag"> The ETag of the agent. </param>
        /// <param name="encryptionKey"> A description of an encryption key that you create in Azure Key Vault. This key is used to provide an additional level of encryption-at-rest for your agent definition when you want full assurance that no one, not even Microsoft, can decrypt them. Once you have encrypted your agent definition, it will always remain encrypted. The search service will ignore attempts to set this property to null. You can change this property as needed if you want to rotate your encryption key; Your agent definition will be unaffected. Encryption with customer-managed keys is not available for free search services, and is only available for paid services created on or after January 1, 2019. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="azureBlobParameters"> The type of the knowledge source. </param>
        internal AzureBlobKnowledgeSource(string name, string description, KnowledgeSourceKind kind, string eTag, SearchResourceEncryptionKey encryptionKey, IDictionary<string, BinaryData> serializedAdditionalRawData, AzureBlobKnowledgeSourceParameters azureBlobParameters) : base(name, description, kind, eTag, encryptionKey, serializedAdditionalRawData)
        {
            AzureBlobParameters = azureBlobParameters;
            Kind = kind;
        }

        /// <summary> Initializes a new instance of <see cref="AzureBlobKnowledgeSource"/> for deserialization. </summary>
        internal AzureBlobKnowledgeSource()
        {
        }

        /// <summary> The type of the knowledge source. </summary>
        public AzureBlobKnowledgeSourceParameters AzureBlobParameters { get; set; }
    }
}
