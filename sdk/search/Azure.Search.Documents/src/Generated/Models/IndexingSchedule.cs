// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Search.Documents.Indexes.Models
{
    /// <summary> Represents a schedule for indexer execution. </summary>
    public partial class IndexingSchedule
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="IndexingSchedule"/>. </summary>
        /// <param name="interval"> The interval of time between indexer executions. </param>
        public IndexingSchedule(TimeSpan interval)
        {
            Interval = interval;
        }

        /// <summary> Initializes a new instance of <see cref="IndexingSchedule"/>. </summary>
        /// <param name="interval"> The interval of time between indexer executions. </param>
        /// <param name="startTime"> The time when an indexer should start running. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal IndexingSchedule(TimeSpan interval, DateTimeOffset? startTime, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Interval = interval;
            StartTime = startTime;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="IndexingSchedule"/> for deserialization. </summary>
        internal IndexingSchedule()
        {
        }

        /// <summary> The interval of time between indexer executions. </summary>
        public TimeSpan Interval { get; set; }
        /// <summary> The time when an indexer should start running. </summary>
        public DateTimeOffset? StartTime { get; set; }
    }
}
