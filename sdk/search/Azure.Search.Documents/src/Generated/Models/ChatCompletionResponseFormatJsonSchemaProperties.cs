// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Search.Documents.Indexes.Models;

namespace Azure.Search.Documents.Models
{
    /// <summary> An open dictionary for extended properties. Required if 'type' == 'json_schema'. </summary>
    public partial class ChatCompletionResponseFormatJsonSchemaProperties
    {
        /// <summary> Initializes a new instance of <see cref="ChatCompletionResponseFormatJsonSchemaProperties"/>. </summary>
        public ChatCompletionResponseFormatJsonSchemaProperties()
        {
        }

        /// <summary> Initializes a new instance of <see cref="ChatCompletionResponseFormatJsonSchemaProperties"/>. </summary>
        /// <param name="name"> Name of the json schema the model will adhere to. </param>
        /// <param name="description"> Description of the json schema the model will adhere to. </param>
        /// <param name="strict"> Whether or not the model's response should use structured outputs. Default is true. </param>
        /// <param name="schema"> Object defining the custom schema the model will use to structure its output. </param>
        internal ChatCompletionResponseFormatJsonSchemaProperties(string name, string description, bool? strict, ChatCompletionSchema schema)
        {
            Name = name;
            Description = description;
            Strict = strict;
            Schema = schema;
        }

        /// <summary> Name of the json schema the model will adhere to. </summary>
        public string Name { get; set; }
        /// <summary> Description of the json schema the model will adhere to. </summary>
        public string Description { get; set; }
        /// <summary> Whether or not the model's response should use structured outputs. Default is true. </summary>
        public bool? Strict { get; set; }
        /// <summary> Object defining the custom schema the model will use to structure its output. </summary>
        public ChatCompletionSchema Schema { get; set; }
    }
}
