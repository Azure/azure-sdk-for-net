// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;
using Azure.Search.Documents.Models;

namespace Azure.Search.Documents
{
    public partial class AutocompleteOptions : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (SearchText != null)
            {
                writer.WritePropertyName("search");
                writer.WriteStringValue(SearchText);
            }
            else
            {
                writer.WriteNull("search");
            }
            if (Mode != null)
            {
                writer.WritePropertyName("autocompleteMode");
                writer.WriteStringValue(Mode.Value.ToSerialString());
            }
            if (Filter != null)
            {
                writer.WritePropertyName("filter");
                writer.WriteStringValue(Filter);
            }
            if (UseFuzzyMatching != null)
            {
                writer.WritePropertyName("fuzzy");
                writer.WriteBooleanValue(UseFuzzyMatching.Value);
            }
            if (HighlightPostTag != null)
            {
                writer.WritePropertyName("highlightPostTag");
                writer.WriteStringValue(HighlightPostTag);
            }
            if (HighlightPreTag != null)
            {
                writer.WritePropertyName("highlightPreTag");
                writer.WriteStringValue(HighlightPreTag);
            }
            if (MinimumCoverage != null)
            {
                writer.WritePropertyName("minimumCoverage");
                writer.WriteNumberValue(MinimumCoverage.Value);
            }
            if (SearchFieldsRaw != null)
            {
                writer.WritePropertyName("searchFields");
                writer.WriteStringValue(SearchFieldsRaw);
            }
            if (SuggesterName != null)
            {
                writer.WritePropertyName("suggesterName");
                writer.WriteStringValue(SuggesterName);
            }
            else
            {
                writer.WriteNull("suggesterName");
            }
            if (Size != null)
            {
                writer.WritePropertyName("top");
                writer.WriteNumberValue(Size.Value);
            }
            writer.WriteEndObject();
        }
    }
}
