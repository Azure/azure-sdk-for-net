// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Migrate.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Defines the network interface resource settings.
    /// </summary>
    [Newtonsoft.Json.JsonObject("Microsoft.Network/networkInterfaces")]
    public partial class NetworkInterfaceResourceSettings : ResourceSettings
    {
        /// <summary>
        /// Initializes a new instance of the NetworkInterfaceResourceSettings
        /// class.
        /// </summary>
        public NetworkInterfaceResourceSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NetworkInterfaceResourceSettings
        /// class.
        /// </summary>
        /// <param name="targetResourceName">Gets or sets the target Resource
        /// name.</param>
        /// <param name="ipConfigurations">Gets or sets the IP configurations
        /// of the NIC.</param>
        /// <param name="enableAcceleratedNetworking">Gets or sets a value
        /// indicating whether accelerated networking is enabled.</param>
        public NetworkInterfaceResourceSettings(string targetResourceName, IList<NicIpConfigurationResourceSettings> ipConfigurations = default(IList<NicIpConfigurationResourceSettings>), bool? enableAcceleratedNetworking = default(bool?))
            : base(targetResourceName)
        {
            IpConfigurations = ipConfigurations;
            EnableAcceleratedNetworking = enableAcceleratedNetworking;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the IP configurations of the NIC.
        /// </summary>
        [JsonProperty(PropertyName = "ipConfigurations")]
        public IList<NicIpConfigurationResourceSettings> IpConfigurations { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether accelerated networking is
        /// enabled.
        /// </summary>
        [JsonProperty(PropertyName = "enableAcceleratedNetworking")]
        public bool? EnableAcceleratedNetworking { get; set; }

    }
}
