// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Migrate.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Defines the dependency of the move resource.
    /// </summary>
    public partial class MoveResourceDependency
    {
        /// <summary>
        /// Initializes a new instance of the MoveResourceDependency class.
        /// </summary>
        public MoveResourceDependency()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MoveResourceDependency class.
        /// </summary>
        /// <param name="id">Gets the source ARM ID of the dependent
        /// resource.</param>
        /// <param name="resolutionStatus">Gets the dependency resolution
        /// status.</param>
        /// <param name="resolutionType">Possible values include: 'Manual',
        /// 'Automatic'</param>
        /// <param name="dependencyType">Possible values include:
        /// 'RequiredForPrepare', 'RequiredForMove'</param>
        /// <param name="isOptional">Gets or sets a value indicating whether
        /// the dependency is optional.</param>
        public MoveResourceDependency(string id = default(string), string resolutionStatus = default(string), string resolutionType = default(string), string dependencyType = default(string), ManualResolutionProperties manualResolution = default(ManualResolutionProperties), AutomaticResolutionProperties automaticResolution = default(AutomaticResolutionProperties), string isOptional = default(string))
        {
            Id = id;
            ResolutionStatus = resolutionStatus;
            ResolutionType = resolutionType;
            DependencyType = dependencyType;
            ManualResolution = manualResolution;
            AutomaticResolution = automaticResolution;
            IsOptional = isOptional;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the source ARM ID of the dependent resource.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets the dependency resolution status.
        /// </summary>
        [JsonProperty(PropertyName = "resolutionStatus")]
        public string ResolutionStatus { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Manual', 'Automatic'
        /// </summary>
        [JsonProperty(PropertyName = "resolutionType")]
        public string ResolutionType { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'RequiredForPrepare',
        /// 'RequiredForMove'
        /// </summary>
        [JsonProperty(PropertyName = "dependencyType")]
        public string DependencyType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "manualResolution")]
        public ManualResolutionProperties ManualResolution { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "automaticResolution")]
        public AutomaticResolutionProperties AutomaticResolution { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether the dependency is optional.
        /// </summary>
        [JsonProperty(PropertyName = "isOptional")]
        public string IsOptional { get; set; }

    }
}
