// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.Dns.Models
{
    /// <summary> An SOA record. </summary>
    public partial class DnsSoaRecordInfo
    {
        /// <summary> Initializes a new instance of <see cref="DnsSoaRecordInfo"/>. </summary>
        public DnsSoaRecordInfo()
        {
        }

        /// <summary> Initializes a new instance of <see cref="DnsSoaRecordInfo"/>. </summary>
        /// <param name="host"> The domain name of the authoritative name server for this SOA record. </param>
        /// <param name="email"> The email contact for this SOA record. </param>
        /// <param name="serialNumber"> The serial number for this SOA record. </param>
        /// <param name="refreshTimeInSeconds"> The refresh value for this SOA record. </param>
        /// <param name="retryTimeInSeconds"> The retry time for this SOA record. </param>
        /// <param name="expireTimeInSeconds"> The expire time for this SOA record. </param>
        /// <param name="minimumTtlInSeconds"> The minimum value for this SOA record. By convention this is used to determine the negative caching duration. </param>
        internal DnsSoaRecordInfo(string host, string email, long? serialNumber, long? refreshTimeInSeconds, long? retryTimeInSeconds, long? expireTimeInSeconds, long? minimumTtlInSeconds)
        {
            Host = host;
            Email = email;
            SerialNumber = serialNumber;
            RefreshTimeInSeconds = refreshTimeInSeconds;
            RetryTimeInSeconds = retryTimeInSeconds;
            ExpireTimeInSeconds = expireTimeInSeconds;
            MinimumTtlInSeconds = minimumTtlInSeconds;
        }

        /// <summary> The domain name of the authoritative name server for this SOA record. </summary>
        public string Host { get; set; }
        /// <summary> The email contact for this SOA record. </summary>
        public string Email { get; set; }
        /// <summary> The serial number for this SOA record. </summary>
        public long? SerialNumber { get; set; }
        /// <summary> The refresh value for this SOA record. </summary>
        public long? RefreshTimeInSeconds { get; set; }
        /// <summary> The retry time for this SOA record. </summary>
        public long? RetryTimeInSeconds { get; set; }
        /// <summary> The expire time for this SOA record. </summary>
        public long? ExpireTimeInSeconds { get; set; }
        /// <summary> The minimum value for this SOA record. By convention this is used to determine the negative caching duration. </summary>
        public long? MinimumTtlInSeconds { get; set; }
    }
}
