// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.Playwright.Models;
using Azure.ResourceManager.Resources;
using NUnit.Framework;

namespace Azure.ResourceManager.Playwright.Samples
{
    public partial class Sample_PlaywrightWorkspaceCollection
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateOrUpdate_PlaywrightWorkspacesCreateOrUpdate()
        {
            // Generated from example definition: 2025-09-01/PlaywrightWorkspaces_CreateOrUpdate.json
            // this example is just showing the usage of "PlaywrightWorkspace_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "dummyrg";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // get the collection of this PlaywrightWorkspaceResource
            PlaywrightWorkspaceCollection collection = resourceGroupResource.GetPlaywrightWorkspaces();

            // invoke the operation
            string playwrightWorkspaceName = "myWorkspace";
            PlaywrightWorkspaceData data = new PlaywrightWorkspaceData(new AzureLocation("westus3"))
            {
                Properties = new PlaywrightWorkspaceProperties
                {
                    RegionalAffinity = PlaywrightEnablementStatus.Enabled,
                    LocalAuth = PlaywrightEnablementStatus.Enabled,
                },
                Tags =
{
["Team"] = "Dev Exp"
},
            };
            ArmOperation<PlaywrightWorkspaceResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, playwrightWorkspaceName, data);
            PlaywrightWorkspaceResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            PlaywrightWorkspaceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_PlaywrightWorkspacesGet()
        {
            // Generated from example definition: 2025-09-01/PlaywrightWorkspaces_Get.json
            // this example is just showing the usage of "PlaywrightWorkspace_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "dummyrg";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // get the collection of this PlaywrightWorkspaceResource
            PlaywrightWorkspaceCollection collection = resourceGroupResource.GetPlaywrightWorkspaces();

            // invoke the operation
            string playwrightWorkspaceName = "myWorkspace";
            PlaywrightWorkspaceResource result = await collection.GetAsync(playwrightWorkspaceName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            PlaywrightWorkspaceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetAll_PlaywrightWorkspacesListByResourceGroup()
        {
            // Generated from example definition: 2025-09-01/PlaywrightWorkspaces_ListByResourceGroup.json
            // this example is just showing the usage of "PlaywrightWorkspace_ListByResourceGroup" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "dummyrg";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // get the collection of this PlaywrightWorkspaceResource
            PlaywrightWorkspaceCollection collection = resourceGroupResource.GetPlaywrightWorkspaces();

            // invoke the operation and iterate over the result
            await foreach (PlaywrightWorkspaceResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                PlaywrightWorkspaceData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Exists_PlaywrightWorkspacesGet()
        {
            // Generated from example definition: 2025-09-01/PlaywrightWorkspaces_Get.json
            // this example is just showing the usage of "PlaywrightWorkspace_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "dummyrg";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // get the collection of this PlaywrightWorkspaceResource
            PlaywrightWorkspaceCollection collection = resourceGroupResource.GetPlaywrightWorkspaces();

            // invoke the operation
            string playwrightWorkspaceName = "myWorkspace";
            bool result = await collection.ExistsAsync(playwrightWorkspaceName);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetIfExists_PlaywrightWorkspacesGet()
        {
            // Generated from example definition: 2025-09-01/PlaywrightWorkspaces_Get.json
            // this example is just showing the usage of "PlaywrightWorkspace_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "dummyrg";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // get the collection of this PlaywrightWorkspaceResource
            PlaywrightWorkspaceCollection collection = resourceGroupResource.GetPlaywrightWorkspaces();

            // invoke the operation
            string playwrightWorkspaceName = "myWorkspace";
            NullableResponse<PlaywrightWorkspaceResource> response = await collection.GetIfExistsAsync(playwrightWorkspaceName);
            PlaywrightWorkspaceResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine("Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                PlaywrightWorkspaceData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }
    }
}
