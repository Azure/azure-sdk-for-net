// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.Playwright.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.Playwright.Samples
{
    public partial class Sample_PlaywrightWorkspaceResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_PlaywrightWorkspacesDelete()
        {
            // Generated from example definition: 2025-07-01-preview/PlaywrightWorkspaces_Delete.json
            // this example is just showing the usage of "PlaywrightWorkspace_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this PlaywrightWorkspaceResource created on azure
            // for more information of creating PlaywrightWorkspaceResource, please refer to the document of PlaywrightWorkspaceResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "dummyrg";
            string playwrightWorkspaceName = "myWorkspace";
            ResourceIdentifier playwrightWorkspaceResourceId = PlaywrightWorkspaceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, playwrightWorkspaceName);
            PlaywrightWorkspaceResource playwrightWorkspace = client.GetPlaywrightWorkspaceResource(playwrightWorkspaceResourceId);

            // invoke the operation
            await playwrightWorkspace.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_PlaywrightWorkspacesUpdate()
        {
            // Generated from example definition: 2025-07-01-preview/PlaywrightWorkspaces_Update.json
            // this example is just showing the usage of "PlaywrightWorkspace_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this PlaywrightWorkspaceResource created on azure
            // for more information of creating PlaywrightWorkspaceResource, please refer to the document of PlaywrightWorkspaceResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "dummyrg";
            string playwrightWorkspaceName = "myWorkspace";
            ResourceIdentifier playwrightWorkspaceResourceId = PlaywrightWorkspaceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, playwrightWorkspaceName);
            PlaywrightWorkspaceResource playwrightWorkspace = client.GetPlaywrightWorkspaceResource(playwrightWorkspaceResourceId);

            // invoke the operation
            PlaywrightWorkspacePatch patch = new PlaywrightWorkspacePatch
            {
                Tags =
{
["Team"] = "Dev Exp",
["Division"] = "LT"
},
                Properties = new PlaywrightWorkspaceUpdateProperties
                {
                    RegionalAffinity = PlaywrightEnablementStatus.Disabled,
                },
            };
            PlaywrightWorkspaceResource result = await playwrightWorkspace.UpdateAsync(patch);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            PlaywrightWorkspaceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
