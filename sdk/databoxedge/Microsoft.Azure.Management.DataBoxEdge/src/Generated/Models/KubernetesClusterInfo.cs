// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataBoxEdge.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Kubernetes cluster configuration
    /// </summary>
    public partial class KubernetesClusterInfo
    {
        /// <summary>
        /// Initializes a new instance of the KubernetesClusterInfo class.
        /// </summary>
        public KubernetesClusterInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the KubernetesClusterInfo class.
        /// </summary>
        /// <param name="version">Kubernetes cluster version</param>
        /// <param name="etcdInfo">Etcd configuration</param>
        /// <param name="nodes">Kubernetes cluster nodes</param>
        public KubernetesClusterInfo(string version, EtcdInfo etcdInfo = default(EtcdInfo), IList<NodeInfo> nodes = default(IList<NodeInfo>))
        {
            EtcdInfo = etcdInfo;
            Nodes = nodes;
            Version = version;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets etcd configuration
        /// </summary>
        [JsonProperty(PropertyName = "etcdInfo")]
        public EtcdInfo EtcdInfo { get; private set; }

        /// <summary>
        /// Gets kubernetes cluster nodes
        /// </summary>
        [JsonProperty(PropertyName = "nodes")]
        public IList<NodeInfo> Nodes { get; private set; }

        /// <summary>
        /// Gets or sets kubernetes cluster version
        /// </summary>
        [JsonProperty(PropertyName = "version")]
        public string Version { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Version == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Version");
            }
        }
    }
}
