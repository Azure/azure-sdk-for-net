// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataBoxEdge.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Metric specification version 1.
    /// </summary>
    public partial class MetricSpecificationV1
    {
        /// <summary>
        /// Initializes a new instance of the MetricSpecificationV1 class.
        /// </summary>
        public MetricSpecificationV1()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MetricSpecificationV1 class.
        /// </summary>
        /// <param name="name">Name of the metric.</param>
        /// <param name="displayName">Display name of the metric.</param>
        /// <param name="displayDescription">Description of the metric to be
        /// displayed.</param>
        /// <param name="unit">Metric units. Possible values include:
        /// 'NotSpecified', 'Percent', 'Count', 'Seconds', 'Milliseconds',
        /// 'Bytes', 'BytesPerSecond', 'CountPerSecond'</param>
        /// <param name="aggregationType">Metric aggregation type. Possible
        /// values include: 'NotSpecified', 'None', 'Average', 'Minimum',
        /// 'Maximum', 'Total', 'Count'</param>
        /// <param name="dimensions">Metric dimensions, other than default
        /// dimension which is resource.</param>
        /// <param name="fillGapWithZero">Set true to fill the gaps with
        /// zero.</param>
        /// <param name="category">Metric category. Possible values include:
        /// 'Capacity', 'Transaction'</param>
        /// <param name="resourceIdDimensionNameOverride">Resource name
        /// override.</param>
        /// <param name="supportedTimeGrainTypes">Support granularity of
        /// metrics.</param>
        /// <param name="supportedAggregationTypes">Support metric aggregation
        /// type.</param>
        public MetricSpecificationV1(string name = default(string), string displayName = default(string), string displayDescription = default(string), string unit = default(string), string aggregationType = default(string), IList<MetricDimensionV1> dimensions = default(IList<MetricDimensionV1>), bool? fillGapWithZero = default(bool?), string category = default(string), string resourceIdDimensionNameOverride = default(string), IList<string> supportedTimeGrainTypes = default(IList<string>), IList<string> supportedAggregationTypes = default(IList<string>))
        {
            Name = name;
            DisplayName = displayName;
            DisplayDescription = displayDescription;
            Unit = unit;
            AggregationType = aggregationType;
            Dimensions = dimensions;
            FillGapWithZero = fillGapWithZero;
            Category = category;
            ResourceIdDimensionNameOverride = resourceIdDimensionNameOverride;
            SupportedTimeGrainTypes = supportedTimeGrainTypes;
            SupportedAggregationTypes = supportedAggregationTypes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the metric.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets display name of the metric.
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets description of the metric to be displayed.
        /// </summary>
        [JsonProperty(PropertyName = "displayDescription")]
        public string DisplayDescription { get; set; }

        /// <summary>
        /// Gets or sets metric units. Possible values include: 'NotSpecified',
        /// 'Percent', 'Count', 'Seconds', 'Milliseconds', 'Bytes',
        /// 'BytesPerSecond', 'CountPerSecond'
        /// </summary>
        [JsonProperty(PropertyName = "unit")]
        public string Unit { get; set; }

        /// <summary>
        /// Gets or sets metric aggregation type. Possible values include:
        /// 'NotSpecified', 'None', 'Average', 'Minimum', 'Maximum', 'Total',
        /// 'Count'
        /// </summary>
        [JsonProperty(PropertyName = "aggregationType")]
        public string AggregationType { get; set; }

        /// <summary>
        /// Gets or sets metric dimensions, other than default dimension which
        /// is resource.
        /// </summary>
        [JsonProperty(PropertyName = "dimensions")]
        public IList<MetricDimensionV1> Dimensions { get; set; }

        /// <summary>
        /// Gets or sets set true to fill the gaps with zero.
        /// </summary>
        [JsonProperty(PropertyName = "fillGapWithZero")]
        public bool? FillGapWithZero { get; set; }

        /// <summary>
        /// Gets or sets metric category. Possible values include: 'Capacity',
        /// 'Transaction'
        /// </summary>
        [JsonProperty(PropertyName = "category")]
        public string Category { get; set; }

        /// <summary>
        /// Gets or sets resource name override.
        /// </summary>
        [JsonProperty(PropertyName = "resourceIdDimensionNameOverride")]
        public string ResourceIdDimensionNameOverride { get; set; }

        /// <summary>
        /// Gets or sets support granularity of metrics.
        /// </summary>
        [JsonProperty(PropertyName = "supportedTimeGrainTypes")]
        public IList<string> SupportedTimeGrainTypes { get; set; }

        /// <summary>
        /// Gets or sets support metric aggregation type.
        /// </summary>
        [JsonProperty(PropertyName = "supportedAggregationTypes")]
        public IList<string> SupportedAggregationTypes { get; set; }

    }
}
