// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataBoxEdge.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The Sku information.
    /// </summary>
    public partial class DataBoxEdgeSku
    {
        /// <summary>
        /// Initializes a new instance of the DataBoxEdgeSku class.
        /// </summary>
        public DataBoxEdgeSku()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DataBoxEdgeSku class.
        /// </summary>
        /// <param name="resourceType">The type of the resource.</param>
        /// <param name="name">The Sku name. Possible values include:
        /// 'Gateway', 'Edge', 'TEA_1Node', 'TEA_1Node_UPS',
        /// 'TEA_1Node_Heater', 'TEA_1Node_UPS_Heater', 'TEA_4Node_Heater',
        /// 'TEA_4Node_UPS_Heater', 'TMA', 'TDC', 'TCA_Small', 'GPU',
        /// 'TCA_Large', 'EdgeP_Base', 'EdgeP_High', 'EdgePR_Base',
        /// 'EdgePR_Base_UPS', 'EP2_64_1VPU_W', 'EP2_128_1T4_Mx1_W',
        /// 'EP2_256_2T4_W', 'EdgeMR_Mini', 'RCA_Small', 'RCA_Large', 'RDC',
        /// 'Management'</param>
        /// <param name="kind">The Sku kind.</param>
        /// <param name="tier">The Sku tier. Possible values include:
        /// 'Standard'</param>
        /// <param name="size">The Sku kind.</param>
        /// <param name="family">The Sku family.</param>
        /// <param name="locations">Availability of the Sku for the
        /// region.</param>
        /// <param name="apiVersions">The API versions in which Sku is
        /// available.</param>
        /// <param name="locationInfo">Availability of the Sku for the
        /// location/zone/site.</param>
        /// <param name="costs">The pricing info of the Sku.</param>
        /// <param name="signupOption">Sku can be signed up by customer or not.
        /// Possible values include: 'None', 'Available'</param>
        /// <param name="version">Availability of the Sku as preview/stable.
        /// Possible values include: 'Stable', 'Preview'</param>
        /// <param name="availability">Links to the next set of results.
        /// Possible values include: 'Available', 'Unavailable'</param>
        /// <param name="shipmentTypes">List of Shipment Types supported by
        /// this SKU</param>
        /// <param name="capabilities">The capability info of the SKU.</param>
        public DataBoxEdgeSku(string resourceType = default(string), string name = default(string), string kind = default(string), string tier = default(string), string size = default(string), string family = default(string), IList<string> locations = default(IList<string>), IList<string> apiVersions = default(IList<string>), IList<SkuLocationInfo> locationInfo = default(IList<SkuLocationInfo>), IList<SkuCost> costs = default(IList<SkuCost>), string signupOption = default(string), string version = default(string), string availability = default(string), IList<string> shipmentTypes = default(IList<string>), IList<SkuCapability> capabilities = default(IList<SkuCapability>))
        {
            ResourceType = resourceType;
            Name = name;
            Kind = kind;
            Tier = tier;
            Size = size;
            Family = family;
            Locations = locations;
            ApiVersions = apiVersions;
            LocationInfo = locationInfo;
            Costs = costs;
            SignupOption = signupOption;
            Version = version;
            Availability = availability;
            ShipmentTypes = shipmentTypes;
            Capabilities = capabilities;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the type of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "resourceType")]
        public string ResourceType { get; private set; }

        /// <summary>
        /// Gets the Sku name. Possible values include: 'Gateway', 'Edge',
        /// 'TEA_1Node', 'TEA_1Node_UPS', 'TEA_1Node_Heater',
        /// 'TEA_1Node_UPS_Heater', 'TEA_4Node_Heater', 'TEA_4Node_UPS_Heater',
        /// 'TMA', 'TDC', 'TCA_Small', 'GPU', 'TCA_Large', 'EdgeP_Base',
        /// 'EdgeP_High', 'EdgePR_Base', 'EdgePR_Base_UPS', 'EP2_64_1VPU_W',
        /// 'EP2_128_1T4_Mx1_W', 'EP2_256_2T4_W', 'EdgeMR_Mini', 'RCA_Small',
        /// 'RCA_Large', 'RDC', 'Management'
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets the Sku kind.
        /// </summary>
        [JsonProperty(PropertyName = "kind")]
        public string Kind { get; private set; }

        /// <summary>
        /// Gets the Sku tier. Possible values include: 'Standard'
        /// </summary>
        [JsonProperty(PropertyName = "tier")]
        public string Tier { get; private set; }

        /// <summary>
        /// Gets the Sku kind.
        /// </summary>
        [JsonProperty(PropertyName = "size")]
        public string Size { get; private set; }

        /// <summary>
        /// Gets the Sku family.
        /// </summary>
        [JsonProperty(PropertyName = "family")]
        public string Family { get; private set; }

        /// <summary>
        /// Gets availability of the Sku for the region.
        /// </summary>
        [JsonProperty(PropertyName = "locations")]
        public IList<string> Locations { get; private set; }

        /// <summary>
        /// Gets the API versions in which Sku is available.
        /// </summary>
        [JsonProperty(PropertyName = "apiVersions")]
        public IList<string> ApiVersions { get; private set; }

        /// <summary>
        /// Gets availability of the Sku for the location/zone/site.
        /// </summary>
        [JsonProperty(PropertyName = "locationInfo")]
        public IList<SkuLocationInfo> LocationInfo { get; private set; }

        /// <summary>
        /// Gets the pricing info of the Sku.
        /// </summary>
        [JsonProperty(PropertyName = "costs")]
        public IList<SkuCost> Costs { get; private set; }

        /// <summary>
        /// Gets sku can be signed up by customer or not. Possible values
        /// include: 'None', 'Available'
        /// </summary>
        [JsonProperty(PropertyName = "signupOption")]
        public string SignupOption { get; private set; }

        /// <summary>
        /// Gets availability of the Sku as preview/stable. Possible values
        /// include: 'Stable', 'Preview'
        /// </summary>
        [JsonProperty(PropertyName = "version")]
        public string Version { get; private set; }

        /// <summary>
        /// Gets links to the next set of results. Possible values include:
        /// 'Available', 'Unavailable'
        /// </summary>
        [JsonProperty(PropertyName = "availability")]
        public string Availability { get; private set; }

        /// <summary>
        /// Gets list of Shipment Types supported by this SKU
        /// </summary>
        [JsonProperty(PropertyName = "shipmentTypes")]
        public IList<string> ShipmentTypes { get; private set; }

        /// <summary>
        /// Gets the capability info of the SKU.
        /// </summary>
        [JsonProperty(PropertyName = "capabilities")]
        public IList<SkuCapability> Capabilities { get; private set; }

    }
}
