// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataBoxEdge.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The order details.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class Order : ARMBaseModel
    {
        /// <summary>
        /// Initializes a new instance of the Order class.
        /// </summary>
        public Order()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Order class.
        /// </summary>
        /// <param name="contactInformation">The contact details.</param>
        /// <param name="shippingAddress">The shipping address.</param>
        /// <param name="id">The path ID that uniquely identifies the
        /// object.</param>
        /// <param name="name">The object name.</param>
        /// <param name="type">The hierarchical type of the object.</param>
        /// <param name="currentStatus">Current status of the order.</param>
        /// <param name="orderHistory">List of status changes in the
        /// order.</param>
        /// <param name="serialNumber">Serial number of the device.</param>
        /// <param name="deliveryTrackingInfo">Tracking information for the
        /// package delivered to the customer whether it has an original or a
        /// replacement device.</param>
        /// <param name="returnTrackingInfo">Tracking information for the
        /// package returned from the customer whether it has an original or a
        /// replacement device.</param>
        public Order(ContactDetails contactInformation, Address shippingAddress, string id = default(string), string name = default(string), string type = default(string), OrderStatus currentStatus = default(OrderStatus), IList<OrderStatus> orderHistory = default(IList<OrderStatus>), string serialNumber = default(string), IList<TrackingInfo> deliveryTrackingInfo = default(IList<TrackingInfo>), IList<TrackingInfo> returnTrackingInfo = default(IList<TrackingInfo>))
            : base(id, name, type)
        {
            ContactInformation = contactInformation;
            ShippingAddress = shippingAddress;
            CurrentStatus = currentStatus;
            OrderHistory = orderHistory;
            SerialNumber = serialNumber;
            DeliveryTrackingInfo = deliveryTrackingInfo;
            ReturnTrackingInfo = returnTrackingInfo;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the contact details.
        /// </summary>
        [JsonProperty(PropertyName = "properties.contactInformation")]
        public ContactDetails ContactInformation { get; set; }

        /// <summary>
        /// Gets or sets the shipping address.
        /// </summary>
        [JsonProperty(PropertyName = "properties.shippingAddress")]
        public Address ShippingAddress { get; set; }

        /// <summary>
        /// Gets or sets current status of the order.
        /// </summary>
        [JsonProperty(PropertyName = "properties.currentStatus")]
        public OrderStatus CurrentStatus { get; set; }

        /// <summary>
        /// Gets list of status changes in the order.
        /// </summary>
        [JsonProperty(PropertyName = "properties.orderHistory")]
        public IList<OrderStatus> OrderHistory { get; private set; }

        /// <summary>
        /// Gets serial number of the device.
        /// </summary>
        [JsonProperty(PropertyName = "properties.serialNumber")]
        public string SerialNumber { get; private set; }

        /// <summary>
        /// Gets tracking information for the package delivered to the customer
        /// whether it has an original or a replacement device.
        /// </summary>
        [JsonProperty(PropertyName = "properties.deliveryTrackingInfo")]
        public IList<TrackingInfo> DeliveryTrackingInfo { get; private set; }

        /// <summary>
        /// Gets tracking information for the package returned from the
        /// customer whether it has an original or a replacement device.
        /// </summary>
        [JsonProperty(PropertyName = "properties.returnTrackingInfo")]
        public IList<TrackingInfo> ReturnTrackingInfo { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ContactInformation == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ContactInformation");
            }
            if (ShippingAddress == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ShippingAddress");
            }
            if (ContactInformation != null)
            {
                ContactInformation.Validate();
            }
            if (ShippingAddress != null)
            {
                ShippingAddress.Validate();
            }
            if (CurrentStatus != null)
            {
                CurrentStatus.Validate();
            }
            if (OrderHistory != null)
            {
                foreach (var element in OrderHistory)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
