// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataBoxEdge.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Sku information
    /// </summary>
    public partial class SkuInformation
    {
        /// <summary>
        /// Initializes a new instance of the SkuInformation class.
        /// </summary>
        public SkuInformation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SkuInformation class.
        /// </summary>
        /// <param name="name">The sku name.</param>
        /// <param name="tier">The sku tier.</param>
        /// <param name="kind">The sku kind.</param>
        /// <param name="family">The Sku family.</param>
        /// <param name="costs">The pricing info of the Sku.</param>
        /// <param name="locations">The locations where Sku is
        /// available.</param>
        /// <param name="locationInfo">The locations where Sku is available
        /// with zones and sites info</param>
        /// <param name="requiredQuotaIds">The required quotaIds for the sku to
        /// be available.</param>
        /// <param name="requiredFeatures">The required features for the sku to
        /// be available.</param>
        public SkuInformation(string name = default(string), string tier = default(string), string kind = default(string), string family = default(string), IList<SkuCost> costs = default(IList<SkuCost>), IList<string> locations = default(IList<string>), IList<SkuLocationInfo> locationInfo = default(IList<SkuLocationInfo>), IList<string> requiredQuotaIds = default(IList<string>), IList<string> requiredFeatures = default(IList<string>))
        {
            Name = name;
            Tier = tier;
            Kind = kind;
            Family = family;
            Costs = costs;
            Locations = locations;
            LocationInfo = locationInfo;
            RequiredQuotaIds = requiredQuotaIds;
            RequiredFeatures = requiredFeatures;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the sku name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets the sku tier.
        /// </summary>
        [JsonProperty(PropertyName = "tier")]
        public string Tier { get; private set; }

        /// <summary>
        /// Gets the sku kind.
        /// </summary>
        [JsonProperty(PropertyName = "kind")]
        public string Kind { get; private set; }

        /// <summary>
        /// Gets the Sku family.
        /// </summary>
        [JsonProperty(PropertyName = "family")]
        public string Family { get; private set; }

        /// <summary>
        /// Gets the pricing info of the Sku.
        /// </summary>
        [JsonProperty(PropertyName = "costs")]
        public IList<SkuCost> Costs { get; private set; }

        /// <summary>
        /// Gets the locations where Sku is available.
        /// </summary>
        [JsonProperty(PropertyName = "locations")]
        public IList<string> Locations { get; private set; }

        /// <summary>
        /// Gets the locations where Sku is available with zones and sites info
        /// </summary>
        [JsonProperty(PropertyName = "locationInfo")]
        public IList<SkuLocationInfo> LocationInfo { get; private set; }

        /// <summary>
        /// Gets the required quotaIds for the sku to be available.
        /// </summary>
        [JsonProperty(PropertyName = "requiredQuotaIds")]
        public IList<string> RequiredQuotaIds { get; private set; }

        /// <summary>
        /// Gets the required features for the sku to be available.
        /// </summary>
        [JsonProperty(PropertyName = "requiredFeatures")]
        public IList<string> RequiredFeatures { get; private set; }

    }
}
