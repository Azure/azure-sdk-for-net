// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataBoxEdge.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Arc Addon.
    /// </summary>
    [Newtonsoft.Json.JsonObject("ArcForKubernetes")]
    [Rest.Serialization.JsonTransformation]
    public partial class ArcAddon : Addon
    {
        /// <summary>
        /// Initializes a new instance of the ArcAddon class.
        /// </summary>
        public ArcAddon()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ArcAddon class.
        /// </summary>
        /// <param name="subscriptionId">Arc resource subscription Id</param>
        /// <param name="resourceGroupName">Arc resource group name</param>
        /// <param name="resourceName">Arc resource Name</param>
        /// <param name="resourceLocation">Arc resource location</param>
        /// <param name="id">The path ID that uniquely identifies the
        /// object.</param>
        /// <param name="name">The object name.</param>
        /// <param name="type">The hierarchical type of the object.</param>
        /// <param name="systemData">Addon type</param>
        /// <param name="version">Arc resource version</param>
        /// <param name="hostPlatform">Host OS supported by the Arc addon.
        /// Possible values include: 'Windows', 'Linux'</param>
        /// <param name="hostPlatformType">Platform where the runtime is
        /// hosted. Possible values include: 'KubernetesCluster',
        /// 'LinuxVM'</param>
        /// <param name="provisioningState">Addon Provisioning State. Possible
        /// values include: 'Invalid', 'Creating', 'Created', 'Updating',
        /// 'Reconfiguring', 'Failed', 'Deleting'</param>
        public ArcAddon(string subscriptionId, string resourceGroupName, string resourceName, string resourceLocation, string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), string version = default(string), string hostPlatform = default(string), string hostPlatformType = default(string), string provisioningState = default(string))
            : base(id, name, type, systemData)
        {
            SubscriptionId = subscriptionId;
            ResourceGroupName = resourceGroupName;
            ResourceName = resourceName;
            ResourceLocation = resourceLocation;
            Version = version;
            HostPlatform = hostPlatform;
            HostPlatformType = hostPlatformType;
            ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets arc resource subscription Id
        /// </summary>
        [JsonProperty(PropertyName = "properties.subscriptionId")]
        public string SubscriptionId { get; set; }

        /// <summary>
        /// Gets or sets arc resource group name
        /// </summary>
        [JsonProperty(PropertyName = "properties.resourceGroupName")]
        public string ResourceGroupName { get; set; }

        /// <summary>
        /// Gets or sets arc resource Name
        /// </summary>
        [JsonProperty(PropertyName = "properties.resourceName")]
        public string ResourceName { get; set; }

        /// <summary>
        /// Gets or sets arc resource location
        /// </summary>
        [JsonProperty(PropertyName = "properties.resourceLocation")]
        public string ResourceLocation { get; set; }

        /// <summary>
        /// Gets arc resource version
        /// </summary>
        [JsonProperty(PropertyName = "properties.version")]
        public string Version { get; private set; }

        /// <summary>
        /// Gets host OS supported by the Arc addon. Possible values include:
        /// 'Windows', 'Linux'
        /// </summary>
        [JsonProperty(PropertyName = "properties.hostPlatform")]
        public string HostPlatform { get; private set; }

        /// <summary>
        /// Gets platform where the runtime is hosted. Possible values include:
        /// 'KubernetesCluster', 'LinuxVM'
        /// </summary>
        [JsonProperty(PropertyName = "properties.hostPlatformType")]
        public string HostPlatformType { get; private set; }

        /// <summary>
        /// Gets addon Provisioning State. Possible values include: 'Invalid',
        /// 'Creating', 'Created', 'Updating', 'Reconfiguring', 'Failed',
        /// 'Deleting'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (SubscriptionId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SubscriptionId");
            }
            if (ResourceGroupName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ResourceGroupName");
            }
            if (ResourceName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ResourceName");
            }
            if (ResourceLocation == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ResourceLocation");
            }
        }
    }
}
