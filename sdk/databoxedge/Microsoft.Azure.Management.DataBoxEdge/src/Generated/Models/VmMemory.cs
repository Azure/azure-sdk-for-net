// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataBoxEdge.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// VmMemory Data.
    /// </summary>
    public partial class VmMemory
    {
        /// <summary>
        /// Initializes a new instance of the VmMemory class.
        /// </summary>
        public VmMemory()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VmMemory class.
        /// </summary>
        /// <param name="startupMemoryMB">The total amount of RAM in the
        /// virtual machine, as seen by the guest  operating system. For a
        /// virtual machine with dynamic memory enabled, this represents the
        /// initial memory available at startup.</param>
        /// <param name="currentMemoryUsageMB">The current memory used by the
        /// virtual machine.</param>
        public VmMemory(long? startupMemoryMB = default(long?), long? currentMemoryUsageMB = default(long?))
        {
            StartupMemoryMB = startupMemoryMB;
            CurrentMemoryUsageMB = currentMemoryUsageMB;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the total amount of RAM in the virtual machine, as
        /// seen by the guest  operating system. For a virtual machine with
        /// dynamic memory enabled, this represents the initial memory
        /// available at startup.
        /// </summary>
        [JsonProperty(PropertyName = "startupMemoryMB")]
        public long? StartupMemoryMB { get; set; }

        /// <summary>
        /// Gets or sets the current memory used by the virtual machine.
        /// </summary>
        [JsonProperty(PropertyName = "currentMemoryUsageMB")]
        public long? CurrentMemoryUsageMB { get; set; }

    }
}
