// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataBoxEdge.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Used in activation key generation flow.
    /// </summary>
    public partial class GenerateCertResponse
    {
        /// <summary>
        /// Initializes a new instance of the GenerateCertResponse class.
        /// </summary>
        public GenerateCertResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GenerateCertResponse class.
        /// </summary>
        /// <param name="publicKey">Gets or sets base64 encoded certificate raw
        /// data,
        /// this is the public part needed to be uploaded to cert vault</param>
        /// <param name="privateKey">Gets or sets base64 encoded private part
        /// of the certificate,
        /// needed to form the activation key</param>
        /// <param name="expiryTimeInUTC">Gets or sets expiry time in
        /// UTC</param>
        public GenerateCertResponse(string publicKey = default(string), string privateKey = default(string), string expiryTimeInUTC = default(string))
        {
            PublicKey = publicKey;
            PrivateKey = privateKey;
            ExpiryTimeInUTC = expiryTimeInUTC;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets base64 encoded certificate raw data,
        /// this is the public part needed to be uploaded to cert vault
        /// </summary>
        [JsonProperty(PropertyName = "publicKey")]
        public string PublicKey { get; set; }

        /// <summary>
        /// Gets or sets base64 encoded private part of the certificate,
        /// needed to form the activation key
        /// </summary>
        [JsonProperty(PropertyName = "privateKey")]
        public string PrivateKey { get; set; }

        /// <summary>
        /// Gets or sets expiry time in UTC
        /// </summary>
        [JsonProperty(PropertyName = "expiryTimeInUTC")]
        public string ExpiryTimeInUTC { get; set; }

    }
}
