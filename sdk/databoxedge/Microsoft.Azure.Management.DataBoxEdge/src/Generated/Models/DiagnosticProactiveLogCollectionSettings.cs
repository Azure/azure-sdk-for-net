// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataBoxEdge.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The diagnostic proactive log collection settings of a device.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class DiagnosticProactiveLogCollectionSettings : ARMBaseModel
    {
        /// <summary>
        /// Initializes a new instance of the
        /// DiagnosticProactiveLogCollectionSettings class.
        /// </summary>
        public DiagnosticProactiveLogCollectionSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// DiagnosticProactiveLogCollectionSettings class.
        /// </summary>
        /// <param name="userConsent">Proactive diagnostic collection consent
        /// flag. Possible values include: 'Enabled', 'Disabled'</param>
        /// <param name="id">The path ID that uniquely identifies the
        /// object.</param>
        /// <param name="name">The object name.</param>
        /// <param name="type">The hierarchical type of the object.</param>
        /// <param
        /// name="systemData">DiagnosticProactiveLogCollectionSettings</param>
        public DiagnosticProactiveLogCollectionSettings(string userConsent, string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData))
            : base(id, name, type)
        {
            SystemData = systemData;
            UserConsent = userConsent;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets diagnosticProactiveLogCollectionSettings
        /// </summary>
        [JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData { get; set; }

        /// <summary>
        /// Gets or sets proactive diagnostic collection consent flag. Possible
        /// values include: 'Enabled', 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "properties.userConsent")]
        public string UserConsent { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (UserConsent == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "UserConsent");
            }
        }
    }
}
