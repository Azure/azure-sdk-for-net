// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataBoxEdge.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Represents a Storage Account on the  Data Box Edge/Gateway device.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class StorageAccount : ARMBaseModel
    {
        /// <summary>
        /// Initializes a new instance of the StorageAccount class.
        /// </summary>
        public StorageAccount()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the StorageAccount class.
        /// </summary>
        /// <param name="id">The path ID that uniquely identifies the
        /// object.</param>
        /// <param name="name">The object name.</param>
        /// <param name="type">The hierarchical type of the object.</param>
        /// <param name="description">Description for the storage
        /// Account.</param>
        /// <param name="storageAccountStatus">Current status of the storage
        /// account. Possible values include: 'OK', 'Offline', 'Unknown',
        /// 'Updating', 'NeedsAttention'</param>
        /// <param name="dataPolicy">Data policy of the storage Account.
        /// Possible values include: 'Cloud', 'Local'</param>
        /// <param name="storageAccountCredentialId">Storage Account Credential
        /// Id</param>
        /// <param name="blobEndpoint">BlobEndpoint of Storage Account</param>
        /// <param name="containerCount">The Container Count. Present only for
        /// Storage Accounts with DataPolicy set to Cloud.</param>
        public StorageAccount(string id = default(string), string name = default(string), string type = default(string), string description = default(string), string storageAccountStatus = default(string), string dataPolicy = default(string), string storageAccountCredentialId = default(string), string blobEndpoint = default(string), int? containerCount = default(int?))
            : base(id, name, type)
        {
            Description = description;
            StorageAccountStatus = storageAccountStatus;
            DataPolicy = dataPolicy;
            StorageAccountCredentialId = storageAccountCredentialId;
            BlobEndpoint = blobEndpoint;
            ContainerCount = containerCount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets description for the storage Account.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets current status of the storage account. Possible values
        /// include: 'OK', 'Offline', 'Unknown', 'Updating', 'NeedsAttention'
        /// </summary>
        [JsonProperty(PropertyName = "properties.storageAccountStatus")]
        public string StorageAccountStatus { get; set; }

        /// <summary>
        /// Gets or sets data policy of the storage Account. Possible values
        /// include: 'Cloud', 'Local'
        /// </summary>
        [JsonProperty(PropertyName = "properties.dataPolicy")]
        public string DataPolicy { get; set; }

        /// <summary>
        /// Gets or sets storage Account Credential Id
        /// </summary>
        [JsonProperty(PropertyName = "properties.storageAccountCredentialId")]
        public string StorageAccountCredentialId { get; set; }

        /// <summary>
        /// Gets blobEndpoint of Storage Account
        /// </summary>
        [JsonProperty(PropertyName = "properties.blobEndpoint")]
        public string BlobEndpoint { get; private set; }

        /// <summary>
        /// Gets the Container Count. Present only for Storage Accounts with
        /// DataPolicy set to Cloud.
        /// </summary>
        [JsonProperty(PropertyName = "properties.containerCount")]
        public int? ContainerCount { get; private set; }

    }
}
