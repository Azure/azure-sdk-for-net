// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataBoxEdge.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Subscription details for the Edge Profile
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class EdgeProfileSubscription
    {
        /// <summary>
        /// Initializes a new instance of the EdgeProfileSubscription class.
        /// </summary>
        public EdgeProfileSubscription()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EdgeProfileSubscription class.
        /// </summary>
        /// <param name="registrationId">Edge Subscription Registration
        /// ID</param>
        /// <param name="id">ARM ID of the subscription</param>
        /// <param name="state">Possible values include: 'Registered',
        /// 'Warned', 'Suspended', 'Deleted', 'Unregistered'</param>
        public EdgeProfileSubscription(string registrationId = default(string), string id = default(string), string state = default(string), string registrationDate = default(string), string subscriptionId = default(string), string tenantId = default(string), string locationPlacementId = default(string), string quotaId = default(string), string serializedDetails = default(string), IList<SubscriptionRegisteredFeatures> registeredFeatures = default(IList<SubscriptionRegisteredFeatures>))
        {
            RegistrationId = registrationId;
            Id = id;
            State = state;
            RegistrationDate = registrationDate;
            SubscriptionId = subscriptionId;
            TenantId = tenantId;
            LocationPlacementId = locationPlacementId;
            QuotaId = quotaId;
            SerializedDetails = serializedDetails;
            RegisteredFeatures = registeredFeatures;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets edge Subscription Registration ID
        /// </summary>
        [JsonProperty(PropertyName = "registrationId")]
        public string RegistrationId { get; set; }

        /// <summary>
        /// Gets or sets ARM ID of the subscription
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Registered', 'Warned',
        /// 'Suspended', 'Deleted', 'Unregistered'
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public string State { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "registrationDate")]
        public string RegistrationDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "subscriptionId")]
        public string SubscriptionId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.tenantId")]
        public string TenantId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.locationPlacementId")]
        public string LocationPlacementId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.quotaId")]
        public string QuotaId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.serializedDetails")]
        public string SerializedDetails { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.registeredFeatures")]
        public IList<SubscriptionRegisteredFeatures> RegisteredFeatures { get; set; }

    }
}
