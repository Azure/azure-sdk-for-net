// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataBoxEdge.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Kubernetes role storage resource
    /// </summary>
    public partial class KubernetesRoleStorage
    {
        /// <summary>
        /// Initializes a new instance of the KubernetesRoleStorage class.
        /// </summary>
        public KubernetesRoleStorage()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the KubernetesRoleStorage class.
        /// </summary>
        /// <param name="storageClasses">Kubernetes storage class info.</param>
        /// <param name="endpoints">Mount points of shares in role(s).</param>
        public KubernetesRoleStorage(IList<KubernetesRoleStorageClassInfo> storageClasses = default(IList<KubernetesRoleStorageClassInfo>), IList<MountPointMap> endpoints = default(IList<MountPointMap>))
        {
            StorageClasses = storageClasses;
            Endpoints = endpoints;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets kubernetes storage class info.
        /// </summary>
        [JsonProperty(PropertyName = "storageClasses")]
        public IList<KubernetesRoleStorageClassInfo> StorageClasses { get; private set; }

        /// <summary>
        /// Gets or sets mount points of shares in role(s).
        /// </summary>
        [JsonProperty(PropertyName = "endpoints")]
        public IList<MountPointMap> Endpoints { get; set; }

    }
}
