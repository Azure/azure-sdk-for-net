// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataBoxEdge.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Kubernetes node info
    /// </summary>
    public partial class NodeInfo
    {
        /// <summary>
        /// Initializes a new instance of the NodeInfo class.
        /// </summary>
        public NodeInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NodeInfo class.
        /// </summary>
        /// <param name="name">Node name.</param>
        /// <param name="type">Node type - Master/Worker. Possible values
        /// include: 'Invalid', 'Master', 'Worker'</param>
        /// <param name="ipConfiguration">IP Configuration of the Kubernetes
        /// node.</param>
        public NodeInfo(string name = default(string), string type = default(string), IList<KubernetesIPConfiguration> ipConfiguration = default(IList<KubernetesIPConfiguration>))
        {
            Name = name;
            Type = type;
            IpConfiguration = ipConfiguration;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets node name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets node type - Master/Worker. Possible values include: 'Invalid',
        /// 'Master', 'Worker'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

        /// <summary>
        /// Gets or sets IP Configuration of the Kubernetes node.
        /// </summary>
        [JsonProperty(PropertyName = "ipConfiguration")]
        public IList<KubernetesIPConfiguration> IpConfiguration { get; set; }

    }
}
