// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataBoxEdge.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Alert on the data box edge/gateway device.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class Alert : ARMBaseModel
    {
        /// <summary>
        /// Initializes a new instance of the Alert class.
        /// </summary>
        public Alert()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Alert class.
        /// </summary>
        /// <param name="id">The path ID that uniquely identifies the
        /// object.</param>
        /// <param name="name">The object name.</param>
        /// <param name="type">The hierarchical type of the object.</param>
        /// <param name="title">Alert title.</param>
        /// <param name="alertType">Alert type.</param>
        /// <param name="appearedAtDateTime">UTC time when the alert
        /// appeared.</param>
        /// <param name="recommendation">Alert recommendation.</param>
        /// <param name="severity">Severity of the alert. Possible values
        /// include: 'Informational', 'Warning', 'Critical'</param>
        /// <param name="errorDetails">Error details of the alert.</param>
        /// <param name="detailedInformation">Alert details.</param>
        public Alert(string id = default(string), string name = default(string), string type = default(string), string title = default(string), string alertType = default(string), System.DateTime? appearedAtDateTime = default(System.DateTime?), string recommendation = default(string), string severity = default(string), AlertErrorDetails errorDetails = default(AlertErrorDetails), IDictionary<string, string> detailedInformation = default(IDictionary<string, string>))
            : base(id, name, type)
        {
            Title = title;
            AlertType = alertType;
            AppearedAtDateTime = appearedAtDateTime;
            Recommendation = recommendation;
            Severity = severity;
            ErrorDetails = errorDetails;
            DetailedInformation = detailedInformation;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets alert title.
        /// </summary>
        [JsonProperty(PropertyName = "properties.title")]
        public string Title { get; private set; }

        /// <summary>
        /// Gets alert type.
        /// </summary>
        [JsonProperty(PropertyName = "properties.alertType")]
        public string AlertType { get; private set; }

        /// <summary>
        /// Gets UTC time when the alert appeared.
        /// </summary>
        [JsonProperty(PropertyName = "properties.appearedAtDateTime")]
        public System.DateTime? AppearedAtDateTime { get; private set; }

        /// <summary>
        /// Gets alert recommendation.
        /// </summary>
        [JsonProperty(PropertyName = "properties.recommendation")]
        public string Recommendation { get; private set; }

        /// <summary>
        /// Gets severity of the alert. Possible values include:
        /// 'Informational', 'Warning', 'Critical'
        /// </summary>
        [JsonProperty(PropertyName = "properties.severity")]
        public string Severity { get; private set; }

        /// <summary>
        /// Gets error details of the alert.
        /// </summary>
        [JsonProperty(PropertyName = "properties.errorDetails")]
        public AlertErrorDetails ErrorDetails { get; private set; }

        /// <summary>
        /// Gets alert details.
        /// </summary>
        [JsonProperty(PropertyName = "properties.detailedInformation")]
        public IDictionary<string, string> DetailedInformation { get; private set; }

    }
}
