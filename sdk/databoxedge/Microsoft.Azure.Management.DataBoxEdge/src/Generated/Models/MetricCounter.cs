// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataBoxEdge.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The metric counter
    /// </summary>
    public partial class MetricCounter
    {
        /// <summary>
        /// Initializes a new instance of the MetricCounter class.
        /// </summary>
        public MetricCounter()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MetricCounter class.
        /// </summary>
        /// <param name="name">The counter name.</param>
        /// <param name="instance">The instance from which counter should be
        /// collected.</param>
        /// <param name="dimensionFilter">The dimension filter.</param>
        /// <param name="additionalDimensions">The additional dimensions to be
        /// added to metric.</param>
        public MetricCounter(string name, string instance = default(string), IList<MetricDimension> dimensionFilter = default(IList<MetricDimension>), IList<MetricDimension> additionalDimensions = default(IList<MetricDimension>))
        {
            Name = name;
            Instance = instance;
            DimensionFilter = dimensionFilter;
            AdditionalDimensions = additionalDimensions;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the counter name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the instance from which counter should be collected.
        /// </summary>
        [JsonProperty(PropertyName = "instance")]
        public string Instance { get; set; }

        /// <summary>
        /// Gets or sets the dimension filter.
        /// </summary>
        [JsonProperty(PropertyName = "dimensionFilter")]
        public IList<MetricDimension> DimensionFilter { get; set; }

        /// <summary>
        /// Gets or sets the additional dimensions to be added to metric.
        /// </summary>
        [JsonProperty(PropertyName = "additionalDimensions")]
        public IList<MetricDimension> AdditionalDimensions { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (DimensionFilter != null)
            {
                foreach (var element in DimensionFilter)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (AdditionalDimensions != null)
            {
                foreach (var element1 in AdditionalDimensions)
                {
                    if (element1 != null)
                    {
                        element1.Validate();
                    }
                }
            }
        }
    }
}
