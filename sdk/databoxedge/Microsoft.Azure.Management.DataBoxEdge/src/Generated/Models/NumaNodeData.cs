// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataBoxEdge.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// NUMA node data.
    /// </summary>
    public partial class NumaNodeData
    {
        /// <summary>
        /// Initializes a new instance of the NumaNodeData class.
        /// </summary>
        public NumaNodeData()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NumaNodeData class.
        /// </summary>
        /// <param name="numaNodeIndex">The NUMA node index.</param>
        /// <param name="totalMemoryInMb">The total memory on the NUMA
        /// node.</param>
        /// <param name="logicalCoreCountPerCore">The logical cores per core
        /// count.</param>
        /// <param name="effectiveAvailableMemoryInMb">The effective available
        /// memory on the NUMA node in MB.</param>
        /// <param name="freeVCpuIndexesForHpn">The free VCPU indices for the
        /// Hpn VMs.</param>
        /// <param name="vCpuIndexesForHpn">The VCPU indices for Hpn
        /// VMs</param>
        /// <param name="vCpuIndexesForRoot">The VCPU indices for the
        /// root.</param>
        public NumaNodeData(int? numaNodeIndex = default(int?), long? totalMemoryInMb = default(long?), int? logicalCoreCountPerCore = default(int?), long? effectiveAvailableMemoryInMb = default(long?), IList<int?> freeVCpuIndexesForHpn = default(IList<int?>), IList<int?> vCpuIndexesForHpn = default(IList<int?>), IList<int?> vCpuIndexesForRoot = default(IList<int?>))
        {
            NumaNodeIndex = numaNodeIndex;
            TotalMemoryInMb = totalMemoryInMb;
            LogicalCoreCountPerCore = logicalCoreCountPerCore;
            EffectiveAvailableMemoryInMb = effectiveAvailableMemoryInMb;
            FreeVCpuIndexesForHpn = freeVCpuIndexesForHpn;
            VCpuIndexesForHpn = vCpuIndexesForHpn;
            VCpuIndexesForRoot = vCpuIndexesForRoot;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the NUMA node index.
        /// </summary>
        [JsonProperty(PropertyName = "numaNodeIndex")]
        public int? NumaNodeIndex { get; set; }

        /// <summary>
        /// Gets or sets the total memory on the NUMA node.
        /// </summary>
        [JsonProperty(PropertyName = "totalMemoryInMb")]
        public long? TotalMemoryInMb { get; set; }

        /// <summary>
        /// Gets or sets the logical cores per core count.
        /// </summary>
        [JsonProperty(PropertyName = "logicalCoreCountPerCore")]
        public int? LogicalCoreCountPerCore { get; set; }

        /// <summary>
        /// Gets or sets the effective available memory on the NUMA node in MB.
        /// </summary>
        [JsonProperty(PropertyName = "effectiveAvailableMemoryInMb")]
        public long? EffectiveAvailableMemoryInMb { get; set; }

        /// <summary>
        /// Gets or sets the free VCPU indices for the Hpn VMs.
        /// </summary>
        [JsonProperty(PropertyName = "freeVCpuIndexesForHpn")]
        public IList<int?> FreeVCpuIndexesForHpn { get; set; }

        /// <summary>
        /// Gets or sets the VCPU indices for Hpn VMs
        /// </summary>
        [JsonProperty(PropertyName = "vCpuIndexesForHpn")]
        public IList<int?> VCpuIndexesForHpn { get; set; }

        /// <summary>
        /// Gets or sets the VCPU indices for the root.
        /// </summary>
        [JsonProperty(PropertyName = "vCpuIndexesForRoot")]
        public IList<int?> VCpuIndexesForRoot { get; set; }

    }
}
