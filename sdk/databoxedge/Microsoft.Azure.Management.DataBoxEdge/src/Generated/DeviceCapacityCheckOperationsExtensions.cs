// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataBoxEdge
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for DeviceCapacityCheckOperations.
    /// </summary>
    public static partial class DeviceCapacityCheckOperationsExtensions
    {
            /// <summary>
            /// Posts the device capacity request info to check feasibility.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='deviceName'>
            /// The device name.
            /// </param>
            /// <param name='deviceCapacityRequestInfo'>
            /// The device capacity request info.
            /// </param>
            /// <param name='capacityName'>
            /// The capacity name.
            /// </param>
            public static void CheckResourceCreationFeasibility(this IDeviceCapacityCheckOperations operations, string resourceGroupName, string deviceName, DeviceCapacityRequestInfo deviceCapacityRequestInfo, string capacityName = default(string))
            {
                operations.CheckResourceCreationFeasibilityAsync(resourceGroupName, deviceName, deviceCapacityRequestInfo, capacityName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Posts the device capacity request info to check feasibility.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='deviceName'>
            /// The device name.
            /// </param>
            /// <param name='deviceCapacityRequestInfo'>
            /// The device capacity request info.
            /// </param>
            /// <param name='capacityName'>
            /// The capacity name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task CheckResourceCreationFeasibilityAsync(this IDeviceCapacityCheckOperations operations, string resourceGroupName, string deviceName, DeviceCapacityRequestInfo deviceCapacityRequestInfo, string capacityName = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.CheckResourceCreationFeasibilityWithHttpMessagesAsync(resourceGroupName, deviceName, deviceCapacityRequestInfo, capacityName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Posts the device capacity request info to check feasibility.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='deviceName'>
            /// The device name.
            /// </param>
            /// <param name='deviceCapacityRequestInfo'>
            /// The device capacity request info.
            /// </param>
            /// <param name='capacityName'>
            /// The capacity name.
            /// </param>
            public static void BeginCheckResourceCreationFeasibility(this IDeviceCapacityCheckOperations operations, string resourceGroupName, string deviceName, DeviceCapacityRequestInfo deviceCapacityRequestInfo, string capacityName = default(string))
            {
                operations.BeginCheckResourceCreationFeasibilityAsync(resourceGroupName, deviceName, deviceCapacityRequestInfo, capacityName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Posts the device capacity request info to check feasibility.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='deviceName'>
            /// The device name.
            /// </param>
            /// <param name='deviceCapacityRequestInfo'>
            /// The device capacity request info.
            /// </param>
            /// <param name='capacityName'>
            /// The capacity name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginCheckResourceCreationFeasibilityAsync(this IDeviceCapacityCheckOperations operations, string resourceGroupName, string deviceName, DeviceCapacityRequestInfo deviceCapacityRequestInfo, string capacityName = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginCheckResourceCreationFeasibilityWithHttpMessagesAsync(resourceGroupName, deviceName, deviceCapacityRequestInfo, capacityName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
