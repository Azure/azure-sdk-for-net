// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataBoxEdge
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for SupportPackagesOperations.
    /// </summary>
    public static partial class SupportPackagesOperationsExtensions
    {
            /// <summary>
            /// Triggers support package on the device
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='deviceName'>
            /// The device name.
            /// </param>
            /// <param name='triggerSupportPackageRequest'>
            /// The trigger support package request object
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            public static void TriggerSupportPackage(this ISupportPackagesOperations operations, string deviceName, TriggerSupportPackageRequest triggerSupportPackageRequest, string resourceGroupName)
            {
                operations.TriggerSupportPackageAsync(deviceName, triggerSupportPackageRequest, resourceGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Triggers support package on the device
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='deviceName'>
            /// The device name.
            /// </param>
            /// <param name='triggerSupportPackageRequest'>
            /// The trigger support package request object
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task TriggerSupportPackageAsync(this ISupportPackagesOperations operations, string deviceName, TriggerSupportPackageRequest triggerSupportPackageRequest, string resourceGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.TriggerSupportPackageWithHttpMessagesAsync(deviceName, triggerSupportPackageRequest, resourceGroupName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Triggers support package on the device
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='deviceName'>
            /// The device name.
            /// </param>
            /// <param name='triggerSupportPackageRequest'>
            /// The trigger support package request object
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            public static void BeginTriggerSupportPackage(this ISupportPackagesOperations operations, string deviceName, TriggerSupportPackageRequest triggerSupportPackageRequest, string resourceGroupName)
            {
                operations.BeginTriggerSupportPackageAsync(deviceName, triggerSupportPackageRequest, resourceGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Triggers support package on the device
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='deviceName'>
            /// The device name.
            /// </param>
            /// <param name='triggerSupportPackageRequest'>
            /// The trigger support package request object
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginTriggerSupportPackageAsync(this ISupportPackagesOperations operations, string deviceName, TriggerSupportPackageRequest triggerSupportPackageRequest, string resourceGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginTriggerSupportPackageWithHttpMessagesAsync(deviceName, triggerSupportPackageRequest, resourceGroupName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
