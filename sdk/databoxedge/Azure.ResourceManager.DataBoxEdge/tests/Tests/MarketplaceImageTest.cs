// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.Core;
using Azure.ResourceManager.Resources;
using NUnit.Framework;
using Azure.ResourceManager.DataBoxEdge.Models;

namespace Azure.ResourceManager.DataBoxEdge.Tests.Tests
{
    public class MarketplaceImageTest : DataBoxEdgeManagementTestBase
    {
        public MarketplaceImageTest(bool isAsync)
                : base(isAsync)//)
        {
        }

        [TestCase]
        [RecordedTest]
        public async Task TestMarketPlaceImageVersionCRUDOperations()
        {
            SubscriptionResource subscription = await Client.GetDefaultSubscriptionAsync();
            ResourceIdentifier resourceGroupResourceId = DataBoxEdgeDeviceResource.CreateResourceIdentifier(subscription.Id.SubscriptionId, TestConstants.DefaultResourceGroupName, TestConstants.EdgeResourceName);
            ResourceIdentifier resourceGroupResourceMIVId = MarketplaceImageVersionResource.CreateResourceIdentifier(subscription.Id.SubscriptionId, TestConstants.DefaultResourceGroupName, TestConstants.EdgeResourceName, "microsoftwindowsserver", "windowsserver", "2022-datacenter-azure-edition", "20348.1006.220908");

            try
            {
                //MarketplaceImageOffer_ListOffers
                //error:
                //The requested API version -'2021-06-01' is not supported.
                //Ensure that the client is using a supported API version-'2022-12-01-preview
                AsyncPageable<MarketplaceImageOffer> marketPlaceOperations = Client.GetDataBoxEdgeDeviceResource(resourceGroupResourceId).GetOffersMarketplaceImageOffersAsync();
                List<MarketplaceImageOffer> listmarketImageOffer = await marketPlaceOperations.ToEnumerableAsync();
                Assert.IsNotNull(listmarketImageOffer);

                //MarketplaceImageOffer_ListOffersbyPublisher
                AsyncPageable<MarketplaceImageOffer> offerPublishersOperations = Client.GetDataBoxEdgeDeviceResource(resourceGroupResourceId).GetOffersbyPublisherMarketplaceImageOffersAsync("microsoftwindowsserver");
                List<MarketplaceImageOffer> listOfOfferPublisher = await offerPublishersOperations.ToEnumerableAsync();
                Assert.IsNotNull(listOfOfferPublisher);

                //MarketplaceImagePublisher_ListPublishers
                AsyncPageable<MarketplaceImagePublisher> publishersOperations = Client.GetDataBoxEdgeDeviceResource(resourceGroupResourceId).GetPublishersMarketplaceImagePublishersAsync();
                List<MarketplaceImagePublisher> listOfPublisher = await publishersOperations.ToEnumerableAsync();
                Assert.IsNotNull(listOfPublisher);

                //MarketplaceImageSasToken_GetSASToken
                var sasTokenOperations = Client.GetMarketplaceImageVersionResource(resourceGroupResourceMIVId).GetSASTokenMarketplaceImageSasTokenAsync(WaitUntil.Completed);
                Assert.IsTrue(sasTokenOperations.IsCompleted);

                //MarketplaceImageSku_ListSKUsWithinOffer
                AsyncPageable<MarketplaceImageSku> imageSKUOperations = Client.GetDataBoxEdgeDeviceResource(resourceGroupResourceId).GetSKUsWithinOfferMarketplaceImageSkusAsync("microsoftwindowsserver", "windowsserver");
                List<MarketplaceImageSku> listOfImageSKUs = await imageSKUOperations.ToEnumerableAsync();
                Assert.IsNotNull(listOfImageSKUs);

                //MarketplaceImageVersion_ListVersionswithinSKU
                AsyncPageable<MarketplaceImageVersionResource> imageVersionResourceOperations = Client.GetDataBoxEdgeDeviceResource(resourceGroupResourceId).GetMarketplaceImageVersions("microsoftwindowsserver", "windowsserver", "2022-datacenter-azure-edition").GetAllAsync();
                List<MarketplaceImageVersionResource> listOfImageVersionResourceSKUs = await imageVersionResourceOperations.ToEnumerableAsync();
                Assert.IsNotNull(listOfImageVersionResourceSKUs);

                //MarketplaceImageVersion_GetParticularImage
                Response<bool> isExistResponse = await Client.GetDataBoxEdgeDeviceResource(resourceGroupResourceId).GetMarketplaceImageVersions("microsoftwindowsserver", "windowsserver", "2022-datacenter-azure-edition").ExistsAsync("20348.1006.220908");
                bool isExist = isExistResponse.Value;
                Assert.IsTrue(isExist);

                Response<MarketplaceImageVersionResource> marketplaceImageVersionResourceResponse = await Client.GetDataBoxEdgeDeviceResource(resourceGroupResourceId).GetMarketplaceImageVersions("microsoftwindowsserver", "windowsserver", "2022-datacenter-azure-edition").GetAsync("20348.1006.220908");
                MarketplaceImageVersionResource marketplaceImageVersionResourceResult = marketplaceImageVersionResourceResponse.Value;
                Assert.IsNotNull(marketplaceImageVersionResourceResult);
            }
            catch (Exception ex) { Console.WriteLine(ex.Message); }


        }
    }
}
