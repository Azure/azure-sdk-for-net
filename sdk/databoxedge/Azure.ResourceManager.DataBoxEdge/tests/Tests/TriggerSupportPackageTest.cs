
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.Core;
using Azure.ResourceManager.Resources;
using NUnit.Framework;
using Azure.ResourceManager.DataBoxEdge.Models;

namespace Azure.ResourceManager.DataBoxEdge.Tests.Tests
{
    public class TriggerSupportPackageTest : DataBoxEdgeManagementTestBase
    {
        public TriggerSupportPackageTest(bool isAsync)
          : base(isAsync)//)
        {
        }

        [TestCase]
        [RecordedTest]
        public async Task TriggerSupportPackageTests()
        {
            try
            {
                SubscriptionResource subscription = await Client.GetDefaultSubscriptionAsync();

                ResourceIdentifier resourceGroupResourceId = DataBoxEdgeDeviceResource.CreateResourceIdentifier(subscription.Id.SubscriptionId, TestConstants.DefaultResourceGroupName, TestConstants.EdgeResourceName);
                SupportPackageRequestProperties properties = new SupportPackageRequestProperties()
                {
                    Include = "Default",
                    MaximumTimeStamp = Convert.ToDateTime("2023-04-06T21:51:55.4068366Z"),
                    MinimumTimeStamp = Convert.ToDateTime("2023-04-06T21:46:55.4068366Z")
                };
                {
                    TriggerSupportPackageContent triggerSupportPackageContent = new TriggerSupportPackageContent(properties);
                    var triggerSupportPackage = await Client.GetDataBoxEdgeDeviceResource(resourceGroupResourceId).TriggerSupportPackageAsync(WaitUntil.Completed, triggerSupportPackageContent);
                    Assert.IsTrue(triggerSupportPackage.HasCompleted);
                }
            }
            catch (Exception ex) { Console.Write(ex.Message); }
        }
    }
}
