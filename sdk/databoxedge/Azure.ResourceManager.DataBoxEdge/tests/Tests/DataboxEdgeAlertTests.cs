
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.Design;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Resources;
using Castle.Components.DictionaryAdapter.Xml;
using NUnit.Framework;

namespace Azure.ResourceManager.DataBoxEdge.Tests.Tests
{
    public class DataboxEdgeAlertTests : DataBoxEdgeManagementTestBase
    {
        public DataboxEdgeAlertTests(bool isAsync)
           : base((isAsync), RecordedTestMode.Record)
        {
        }

        [TestCase]
        [RecordedTest]
        public async Task Test_Alerts()
        {
            SubscriptionResource subscription = await Client.GetDefaultSubscriptionAsync();
            string deviceName = "demo-edge-sdk6-2023";
            ResourceIdentifier resourceGroupResourceId = DataBoxEdgeDeviceResource.CreateResourceIdentifier(subscription.Id.SubscriptionId, TestConstants.DefaultResourceGroupName, deviceName);

            //List of alerts
            AsyncPageable<DataBoxEdgeAlertResource> alerts = Client.GetDataBoxEdgeDeviceResource(resourceGroupResourceId).GetDataBoxEdgeAlerts().GetAllAsync();
            List<DataBoxEdgeAlertResource> alertsResult = await alerts.ToEnumerableAsync();
            DataBoxEdgeAlertResource alert = alertsResult.FirstOrDefault();

            ResourceIdentifier resourceGroupResourceAlertId = DataBoxEdgeAlertResource.CreateResourceIdentifier(subscription.Id.SubscriptionId, TestConstants.DefaultResourceGroupName, deviceName, alert.Data.Name);
            Response<DataBoxEdgeAlertResource> getAlertResponse = await Client.GetDataBoxEdgeAlertResource(resourceGroupResourceAlertId).GetAsync();
            DataBoxEdgeAlertResource dataBoxEdgeAlertResource = getAlertResponse.Value;

            Assert.IsNotNull(dataBoxEdgeAlertResource);
            
        }
    }
}
