// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataBoxEdge.Models
{
    public partial class EdgeClusterCapacityViewInfo : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Fqdn))
            {
                writer.WritePropertyName("fqdn"u8);
                writer.WriteStringValue(Fqdn);
            }
            if (Optional.IsDefined(GpuCapacity))
            {
                writer.WritePropertyName("gpuCapacity"u8);
                writer.WriteObjectValue(GpuCapacity);
            }
            if (Optional.IsDefined(MemoryCapacity))
            {
                writer.WritePropertyName("memoryCapacity"u8);
                writer.WriteObjectValue(MemoryCapacity);
            }
            if (Optional.IsDefined(LastRefreshedOn))
            {
                writer.WritePropertyName("lastRefreshedTime"u8);
                writer.WriteStringValue(LastRefreshedOn.Value, "O");
            }
            if (Optional.IsDefined(TotalProvisionedNonHpnCores))
            {
                writer.WritePropertyName("totalProvisionedNonHpnCores"u8);
                writer.WriteNumberValue(TotalProvisionedNonHpnCores.Value);
            }
            writer.WriteEndObject();
        }

        internal static EdgeClusterCapacityViewInfo DeserializeEdgeClusterCapacityViewInfo(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> fqdn = default;
            Optional<EdgeClusterGpuCapacity> gpuCapacity = default;
            Optional<EdgeClusterMemoryCapacity> memoryCapacity = default;
            Optional<DateTimeOffset> lastRefreshedTime = default;
            Optional<long> totalProvisionedNonHpnCores = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("fqdn"u8))
                {
                    fqdn = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("gpuCapacity"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    gpuCapacity = EdgeClusterGpuCapacity.DeserializeEdgeClusterGpuCapacity(property.Value);
                    continue;
                }
                if (property.NameEquals("memoryCapacity"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    memoryCapacity = EdgeClusterMemoryCapacity.DeserializeEdgeClusterMemoryCapacity(property.Value);
                    continue;
                }
                if (property.NameEquals("lastRefreshedTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    lastRefreshedTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("totalProvisionedNonHpnCores"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    totalProvisionedNonHpnCores = property.Value.GetInt64();
                    continue;
                }
            }
            return new EdgeClusterCapacityViewInfo(fqdn.Value, gpuCapacity.Value, memoryCapacity.Value, Optional.ToNullable(lastRefreshedTime), Optional.ToNullable(totalProvisionedNonHpnCores));
        }
    }
}
