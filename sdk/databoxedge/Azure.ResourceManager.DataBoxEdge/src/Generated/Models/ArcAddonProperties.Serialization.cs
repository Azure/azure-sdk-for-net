// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataBoxEdge.Models
{
    public partial class ArcAddonProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("subscriptionId"u8);
            writer.WriteStringValue(SubscriptionId);
            writer.WritePropertyName("resourceGroupName"u8);
            writer.WriteStringValue(ResourceGroupName);
            writer.WritePropertyName("resourceName"u8);
            writer.WriteStringValue(ResourceName);
            writer.WritePropertyName("resourceLocation"u8);
            writer.WriteStringValue(ResourceLocation);
            if (Optional.IsDefined(CustomLocationsObjectId))
            {
                if (CustomLocationsObjectId != null)
                {
                    writer.WritePropertyName("customLocationsObjectId"u8);
                    writer.WriteStringValue(CustomLocationsObjectId);
                }
                else
                {
                    writer.WriteNull("customLocationsObjectId");
                }
            }
            writer.WriteEndObject();
        }

        internal static ArcAddonProperties DeserializeArcAddonProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            string subscriptionId = default;
            string resourceGroupName = default;
            string resourceName = default;
            AzureLocation resourceLocation = default;
            Optional<string> version = default;
            Optional<DataBoxEdgeOSPlatformType?> hostPlatform = default;
            Optional<HostPlatformType?> hostPlatformType = default;
            Optional<string> customLocationsObjectId = default;
            Optional<DataBoxEdgeRoleAddonProvisioningState> provisioningState = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("subscriptionId"u8))
                {
                    subscriptionId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("resourceGroupName"u8))
                {
                    resourceGroupName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("resourceName"u8))
                {
                    resourceName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("resourceLocation"u8))
                {
                    resourceLocation = new AzureLocation(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("version"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        version = null;
                        continue;
                    }
                    version = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("hostPlatform"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        hostPlatform = null;
                        continue;
                    }
                    hostPlatform = new DataBoxEdgeOSPlatformType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("hostPlatformType"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        hostPlatformType = null;
                        continue;
                    }
                    hostPlatformType = new HostPlatformType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("customLocationsObjectId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        customLocationsObjectId = null;
                        continue;
                    }
                    customLocationsObjectId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("provisioningState"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    provisioningState = new DataBoxEdgeRoleAddonProvisioningState(property.Value.GetString());
                    continue;
                }
            }
            return new ArcAddonProperties(subscriptionId, resourceGroupName, resourceName, resourceLocation, version.Value, Optional.ToNullable(hostPlatform), Optional.ToNullable(hostPlatformType), customLocationsObjectId.Value, Optional.ToNullable(provisioningState));
        }
    }
}
