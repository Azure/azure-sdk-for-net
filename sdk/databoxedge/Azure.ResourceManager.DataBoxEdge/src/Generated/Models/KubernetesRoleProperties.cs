// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.ResourceManager.DataBoxEdge.Models
{
    /// <summary> Kubernetes role properties. </summary>
    public partial class KubernetesRoleProperties
    {
        /// <summary> Initializes a new instance of KubernetesRoleProperties. </summary>
        /// <param name="hostPlatform"> Host OS supported by the Kubernetes role. </param>
        /// <param name="kubernetesClusterInfo"> Kubernetes cluster configuration. </param>
        /// <param name="kubernetesRoleResources"> Kubernetes role resoures. </param>
        /// <param name="roleStatus"> Role status. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="kubernetesClusterInfo"/> or <paramref name="kubernetesRoleResources"/> is null. </exception>
        public KubernetesRoleProperties(DataBoxEdgeOSPlatformType hostPlatform, EdgeKubernetesClusterInfo kubernetesClusterInfo, EdgeKubernetesRoleResources kubernetesRoleResources, DataBoxEdgeRoleStatus roleStatus)
        {
            Argument.AssertNotNull(kubernetesClusterInfo, nameof(kubernetesClusterInfo));
            Argument.AssertNotNull(kubernetesRoleResources, nameof(kubernetesRoleResources));

            HostPlatform = hostPlatform;
            KubernetesClusterInfo = kubernetesClusterInfo;
            KubernetesRoleResources = kubernetesRoleResources;
            RoleStatus = roleStatus;
        }

        /// <summary> Initializes a new instance of KubernetesRoleProperties. </summary>
        /// <param name="hostPlatform"> Host OS supported by the Kubernetes role. </param>
        /// <param name="provisioningState"> State of Kubernetes deployment. </param>
        /// <param name="hostPlatformType"> Platform where the runtime is hosted. </param>
        /// <param name="kubernetesClusterInfo"> Kubernetes cluster configuration. </param>
        /// <param name="kubernetesRoleResources"> Kubernetes role resoures. </param>
        /// <param name="roleStatus"> Role status. </param>
        internal KubernetesRoleProperties(DataBoxEdgeOSPlatformType hostPlatform, EdgeKubernetesState? provisioningState, HostPlatformType? hostPlatformType, EdgeKubernetesClusterInfo kubernetesClusterInfo, EdgeKubernetesRoleResources kubernetesRoleResources, DataBoxEdgeRoleStatus roleStatus)
        {
            HostPlatform = hostPlatform;
            ProvisioningState = provisioningState;
            HostPlatformType = hostPlatformType;
            KubernetesClusterInfo = kubernetesClusterInfo;
            KubernetesRoleResources = kubernetesRoleResources;
            RoleStatus = roleStatus;
        }

        /// <summary> Host OS supported by the Kubernetes role. </summary>
        public DataBoxEdgeOSPlatformType HostPlatform { get; set; }
        /// <summary> State of Kubernetes deployment. </summary>
        public EdgeKubernetesState? ProvisioningState { get; }
        /// <summary> Platform where the runtime is hosted. </summary>
        public HostPlatformType? HostPlatformType { get; }
        /// <summary> Kubernetes cluster configuration. </summary>
        public EdgeKubernetesClusterInfo KubernetesClusterInfo { get; set; }
        /// <summary> Kubernetes role resoures. </summary>
        public EdgeKubernetesRoleResources KubernetesRoleResources { get; set; }
        /// <summary> Role status. </summary>
        public DataBoxEdgeRoleStatus RoleStatus { get; set; }
    }
}
