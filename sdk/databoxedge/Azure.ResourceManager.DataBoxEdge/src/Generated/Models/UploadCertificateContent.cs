// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.DataBoxEdge.Models
{
    /// <summary> The upload certificate request. </summary>
    public partial class UploadCertificateContent
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="UploadCertificateContent"/>. </summary>
        /// <param name="certificate"> The base64 encoded certificate raw data. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="certificate"/> is null. </exception>
        public UploadCertificateContent(string certificate)
        {
            Argument.AssertNotNull(certificate, nameof(certificate));

            Certificate = certificate;
        }

        /// <summary> Initializes a new instance of <see cref="UploadCertificateContent"/>. </summary>
        /// <param name="authenticationType"> The authentication type. </param>
        /// <param name="certificate"> The base64 encoded certificate raw data. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal UploadCertificateContent(DataBoxEdgeAuthenticationType? authenticationType, string certificate, Dictionary<string, BinaryData> rawData)
        {
            AuthenticationType = authenticationType;
            Certificate = certificate;
            _rawData = rawData;
        }

        /// <summary> Initializes a new instance of <see cref="UploadCertificateContent"/> for deserialization. </summary>
        internal UploadCertificateContent()
        {
        }

        /// <summary> The authentication type. </summary>
        public DataBoxEdgeAuthenticationType? AuthenticationType { get; set; }
        /// <summary> The base64 encoded certificate raw data. </summary>
        public string Certificate { get; }
    }
}
