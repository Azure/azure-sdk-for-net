// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataBoxEdge.Models
{
    public partial class UpdateSummaryProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(DeviceVersionNumber))
            {
                if (DeviceVersionNumber != null)
                {
                    writer.WritePropertyName("deviceVersionNumber"u8);
                    writer.WriteStringValue(DeviceVersionNumber);
                }
                else
                {
                    writer.WriteNull("deviceVersionNumber");
                }
            }
            if (Optional.IsDefined(FriendlyDeviceVersionName))
            {
                if (FriendlyDeviceVersionName != null)
                {
                    writer.WritePropertyName("friendlyDeviceVersionName"u8);
                    writer.WriteStringValue(FriendlyDeviceVersionName);
                }
                else
                {
                    writer.WriteNull("friendlyDeviceVersionName");
                }
            }
            if (Optional.IsDefined(DeviceLastScannedOn))
            {
                if (DeviceLastScannedOn != null)
                {
                    writer.WritePropertyName("deviceLastScannedDateTime"u8);
                    writer.WriteStringValue(DeviceLastScannedOn.Value, "O");
                }
                else
                {
                    writer.WriteNull("deviceLastScannedDateTime");
                }
            }
            if (Optional.IsDefined(LastCompletedScanJobOn))
            {
                if (LastCompletedScanJobOn != null)
                {
                    writer.WritePropertyName("lastCompletedScanJobDateTime"u8);
                    writer.WriteStringValue(LastCompletedScanJobOn.Value, "O");
                }
                else
                {
                    writer.WriteNull("lastCompletedScanJobDateTime");
                }
            }
            if (Optional.IsDefined(LastSuccessfulScanJobOn))
            {
                if (LastSuccessfulScanJobOn != null)
                {
                    writer.WritePropertyName("lastSuccessfulScanJobTime"u8);
                    writer.WriteStringValue(LastSuccessfulScanJobOn.Value, "O");
                }
                else
                {
                    writer.WriteNull("lastSuccessfulScanJobTime");
                }
            }
            if (Optional.IsDefined(LastSuccessfulInstallJobOn))
            {
                if (LastSuccessfulInstallJobOn != null)
                {
                    writer.WritePropertyName("lastSuccessfulInstallJobDateTime"u8);
                    writer.WriteStringValue(LastSuccessfulInstallJobOn.Value, "O");
                }
                else
                {
                    writer.WriteNull("lastSuccessfulInstallJobDateTime");
                }
            }
            writer.WriteEndObject();
        }

        internal static UpdateSummaryProperties DeserializeUpdateSummaryProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> deviceVersionNumber = default;
            Optional<string> friendlyDeviceVersionName = default;
            Optional<DateTimeOffset?> deviceLastScannedDateTime = default;
            Optional<DateTimeOffset?> lastCompletedScanJobDateTime = default;
            Optional<DateTimeOffset?> lastSuccessfulScanJobTime = default;
            Optional<DateTimeOffset?> lastCompletedDownloadJobDateTime = default;
            Optional<ResourceIdentifier> lastCompletedDownloadJobId = default;
            Optional<DataBoxEdgeJobStatus> lastDownloadJobStatus = default;
            Optional<DateTimeOffset?> lastSuccessfulInstallJobDateTime = default;
            Optional<DateTimeOffset?> lastCompletedInstallJobDateTime = default;
            Optional<ResourceIdentifier> lastCompletedInstallJobId = default;
            Optional<DataBoxEdgeJobStatus> lastInstallJobStatus = default;
            Optional<int> totalNumberOfUpdatesAvailable = default;
            Optional<int> totalNumberOfUpdatesPendingDownload = default;
            Optional<int> totalNumberOfUpdatesPendingInstall = default;
            Optional<InstallRebootBehavior> rebootBehavior = default;
            Optional<DataBoxEdgeUpdateOperation> ongoingUpdateOperation = default;
            Optional<ResourceIdentifier> inProgressDownloadJobId = default;
            Optional<ResourceIdentifier> inProgressInstallJobId = default;
            Optional<DateTimeOffset?> inProgressDownloadJobStartedDateTime = default;
            Optional<DateTimeOffset?> inProgressInstallJobStartedDateTime = default;
            Optional<IReadOnlyList<string>> updateTitles = default;
            Optional<IReadOnlyList<DataBoxEdgeUpdateDetails>> updates = default;
            Optional<double> totalUpdateSizeInBytes = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("deviceVersionNumber"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        deviceVersionNumber = null;
                        continue;
                    }
                    deviceVersionNumber = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("friendlyDeviceVersionName"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        friendlyDeviceVersionName = null;
                        continue;
                    }
                    friendlyDeviceVersionName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("deviceLastScannedDateTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        deviceLastScannedDateTime = null;
                        continue;
                    }
                    deviceLastScannedDateTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("lastCompletedScanJobDateTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        lastCompletedScanJobDateTime = null;
                        continue;
                    }
                    lastCompletedScanJobDateTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("lastSuccessfulScanJobTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        lastSuccessfulScanJobTime = null;
                        continue;
                    }
                    lastSuccessfulScanJobTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("lastCompletedDownloadJobDateTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        lastCompletedDownloadJobDateTime = null;
                        continue;
                    }
                    lastCompletedDownloadJobDateTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("lastCompletedDownloadJobId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        lastCompletedDownloadJobId = null;
                        continue;
                    }
                    lastCompletedDownloadJobId = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("lastDownloadJobStatus"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    lastDownloadJobStatus = new DataBoxEdgeJobStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("lastSuccessfulInstallJobDateTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        lastSuccessfulInstallJobDateTime = null;
                        continue;
                    }
                    lastSuccessfulInstallJobDateTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("lastCompletedInstallJobDateTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        lastCompletedInstallJobDateTime = null;
                        continue;
                    }
                    lastCompletedInstallJobDateTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("lastCompletedInstallJobId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        lastCompletedInstallJobId = null;
                        continue;
                    }
                    lastCompletedInstallJobId = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("lastInstallJobStatus"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    lastInstallJobStatus = new DataBoxEdgeJobStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("totalNumberOfUpdatesAvailable"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    totalNumberOfUpdatesAvailable = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("totalNumberOfUpdatesPendingDownload"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    totalNumberOfUpdatesPendingDownload = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("totalNumberOfUpdatesPendingInstall"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    totalNumberOfUpdatesPendingInstall = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("rebootBehavior"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    rebootBehavior = new InstallRebootBehavior(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("ongoingUpdateOperation"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    ongoingUpdateOperation = new DataBoxEdgeUpdateOperation(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("inProgressDownloadJobId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        inProgressDownloadJobId = null;
                        continue;
                    }
                    inProgressDownloadJobId = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("inProgressInstallJobId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        inProgressInstallJobId = null;
                        continue;
                    }
                    inProgressInstallJobId = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("inProgressDownloadJobStartedDateTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        inProgressDownloadJobStartedDateTime = null;
                        continue;
                    }
                    inProgressDownloadJobStartedDateTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("inProgressInstallJobStartedDateTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        inProgressInstallJobStartedDateTime = null;
                        continue;
                    }
                    inProgressInstallJobStartedDateTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("updateTitles"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        updateTitles = null;
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    updateTitles = array;
                    continue;
                }
                if (property.NameEquals("updates"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        updates = null;
                        continue;
                    }
                    List<DataBoxEdgeUpdateDetails> array = new List<DataBoxEdgeUpdateDetails>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(DataBoxEdgeUpdateDetails.DeserializeDataBoxEdgeUpdateDetails(item));
                    }
                    updates = array;
                    continue;
                }
                if (property.NameEquals("totalUpdateSizeInBytes"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    totalUpdateSizeInBytes = property.Value.GetDouble();
                    continue;
                }
            }
            return new UpdateSummaryProperties(deviceVersionNumber.Value, friendlyDeviceVersionName.Value, Optional.ToNullable(deviceLastScannedDateTime), Optional.ToNullable(lastCompletedScanJobDateTime), Optional.ToNullable(lastSuccessfulScanJobTime), Optional.ToNullable(lastCompletedDownloadJobDateTime), lastCompletedDownloadJobId.Value, Optional.ToNullable(lastDownloadJobStatus), Optional.ToNullable(lastSuccessfulInstallJobDateTime), Optional.ToNullable(lastCompletedInstallJobDateTime), lastCompletedInstallJobId.Value, Optional.ToNullable(lastInstallJobStatus), Optional.ToNullable(totalNumberOfUpdatesAvailable), Optional.ToNullable(totalNumberOfUpdatesPendingDownload), Optional.ToNullable(totalNumberOfUpdatesPendingInstall), Optional.ToNullable(rebootBehavior), Optional.ToNullable(ongoingUpdateOperation), inProgressDownloadJobId.Value, inProgressInstallJobId.Value, Optional.ToNullable(inProgressDownloadJobStartedDateTime), Optional.ToNullable(inProgressInstallJobStartedDateTime), Optional.ToList(updateTitles), Optional.ToList(updates), Optional.ToNullable(totalUpdateSizeInBytes));
        }
    }
}
