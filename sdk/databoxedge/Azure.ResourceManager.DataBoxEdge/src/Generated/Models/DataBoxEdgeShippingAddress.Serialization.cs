// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataBoxEdge.Models
{
    public partial class DataBoxEdgeShippingAddress : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(AddressLine1))
            {
                if (AddressLine1 != null)
                {
                    writer.WritePropertyName("addressLine1"u8);
                    writer.WriteStringValue(AddressLine1);
                }
                else
                {
                    writer.WriteNull("addressLine1");
                }
            }
            if (Optional.IsDefined(AddressLine2))
            {
                if (AddressLine2 != null)
                {
                    writer.WritePropertyName("addressLine2"u8);
                    writer.WriteStringValue(AddressLine2);
                }
                else
                {
                    writer.WriteNull("addressLine2");
                }
            }
            if (Optional.IsDefined(AddressLine3))
            {
                if (AddressLine3 != null)
                {
                    writer.WritePropertyName("addressLine3"u8);
                    writer.WriteStringValue(AddressLine3);
                }
                else
                {
                    writer.WriteNull("addressLine3");
                }
            }
            if (Optional.IsDefined(PostalCode))
            {
                if (PostalCode != null)
                {
                    writer.WritePropertyName("postalCode"u8);
                    writer.WriteStringValue(PostalCode);
                }
                else
                {
                    writer.WriteNull("postalCode");
                }
            }
            if (Optional.IsDefined(City))
            {
                if (City != null)
                {
                    writer.WritePropertyName("city"u8);
                    writer.WriteStringValue(City);
                }
                else
                {
                    writer.WriteNull("city");
                }
            }
            if (Optional.IsDefined(State))
            {
                if (State != null)
                {
                    writer.WritePropertyName("state"u8);
                    writer.WriteStringValue(State);
                }
                else
                {
                    writer.WriteNull("state");
                }
            }
            writer.WritePropertyName("country"u8);
            writer.WriteStringValue(Country);
            writer.WriteEndObject();
        }

        internal static DataBoxEdgeShippingAddress DeserializeDataBoxEdgeShippingAddress(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> addressLine1 = default;
            Optional<string> addressLine2 = default;
            Optional<string> addressLine3 = default;
            Optional<string> postalCode = default;
            Optional<string> city = default;
            Optional<string> state = default;
            string country = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("addressLine1"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        addressLine1 = null;
                        continue;
                    }
                    addressLine1 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("addressLine2"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        addressLine2 = null;
                        continue;
                    }
                    addressLine2 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("addressLine3"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        addressLine3 = null;
                        continue;
                    }
                    addressLine3 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("postalCode"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        postalCode = null;
                        continue;
                    }
                    postalCode = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("city"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        city = null;
                        continue;
                    }
                    city = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("state"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        state = null;
                        continue;
                    }
                    state = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("country"u8))
                {
                    country = property.Value.GetString();
                    continue;
                }
            }
            return new DataBoxEdgeShippingAddress(addressLine1.Value, addressLine2.Value, addressLine3.Value, postalCode.Value, city.Value, state.Value, country);
        }
    }
}
