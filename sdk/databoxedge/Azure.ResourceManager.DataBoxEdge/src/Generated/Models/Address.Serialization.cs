// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataBoxEdge.Models
{
    public partial class Address : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(AddressLine1))
            {
                writer.WritePropertyName("addressLine1");
                writer.WriteStringValue(AddressLine1);
            }
            if (Optional.IsDefined(AddressLine2))
            {
                writer.WritePropertyName("addressLine2");
                writer.WriteStringValue(AddressLine2);
            }
            if (Optional.IsDefined(AddressLine3))
            {
                writer.WritePropertyName("addressLine3");
                writer.WriteStringValue(AddressLine3);
            }
            if (Optional.IsDefined(PostalCode))
            {
                writer.WritePropertyName("postalCode");
                writer.WriteStringValue(PostalCode);
            }
            if (Optional.IsDefined(City))
            {
                writer.WritePropertyName("city");
                writer.WriteStringValue(City);
            }
            if (Optional.IsDefined(State))
            {
                writer.WritePropertyName("state");
                writer.WriteStringValue(State);
            }
            writer.WritePropertyName("country");
            writer.WriteStringValue(Country);
            writer.WriteEndObject();
        }

        internal static Address DeserializeAddress(JsonElement element)
        {
            Optional<string> addressLine1 = default;
            Optional<string> addressLine2 = default;
            Optional<string> addressLine3 = default;
            Optional<string> postalCode = default;
            Optional<string> city = default;
            Optional<string> state = default;
            string country = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("addressLine1"))
                {
                    addressLine1 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("addressLine2"))
                {
                    addressLine2 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("addressLine3"))
                {
                    addressLine3 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("postalCode"))
                {
                    postalCode = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("city"))
                {
                    city = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("state"))
                {
                    state = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("country"))
                {
                    country = property.Value.GetString();
                    continue;
                }
            }
            return new Address(addressLine1.Value, addressLine2.Value, addressLine3.Value, postalCode.Value, city.Value, state.Value, country);
        }
    }
}
