// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.ResourceManager.DataBoxEdge;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.DataBoxEdge.Models
{
    /// <summary> Trigger details. </summary>
    public partial class FileEventTrigger : TriggerData
    {
        /// <summary> Initializes a new instance of FileEventTrigger. </summary>
        /// <param name="sourceInfo"> File event source details. </param>
        /// <param name="sinkInfo"> Role sink info. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="sourceInfo"/> or <paramref name="sinkInfo"/> is null. </exception>
        public FileEventTrigger(FileSourceInfo sourceInfo, RoleSinkInfo sinkInfo)
        {
            if (sourceInfo == null)
            {
                throw new ArgumentNullException(nameof(sourceInfo));
            }
            if (sinkInfo == null)
            {
                throw new ArgumentNullException(nameof(sinkInfo));
            }

            SourceInfo = sourceInfo;
            SinkInfo = sinkInfo;
            Kind = TriggerEventType.FileEvent;
        }

        /// <summary> Initializes a new instance of FileEventTrigger. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="kind"> Trigger Kind. </param>
        /// <param name="sourceInfo"> File event source details. </param>
        /// <param name="sinkInfo"> Role sink info. </param>
        /// <param name="customContextTag"> A custom context tag typically used to correlate the trigger against its usage. For example, if a periodic timer trigger is intended for certain specific IoT modules in the device, the tag can be the name or the image URL of the module. </param>
        internal FileEventTrigger(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, TriggerEventType kind, FileSourceInfo sourceInfo, RoleSinkInfo sinkInfo, string customContextTag) : base(id, name, resourceType, systemData, kind)
        {
            SourceInfo = sourceInfo;
            SinkInfo = sinkInfo;
            CustomContextTag = customContextTag;
            Kind = kind;
        }

        /// <summary> File event source details. </summary>
        internal FileSourceInfo SourceInfo { get; set; }
        /// <summary> File share ID. </summary>
        public string SourceInfoShareId
        {
            get => SourceInfo is null ? default : SourceInfo.ShareId;
            set => SourceInfo = new FileSourceInfo(value);
        }

        /// <summary> Role sink info. </summary>
        internal RoleSinkInfo SinkInfo { get; set; }
        /// <summary> Compute role ID. </summary>
        public string SinkInfoRoleId
        {
            get => SinkInfo is null ? default : SinkInfo.RoleId;
            set => SinkInfo = new RoleSinkInfo(value);
        }

        /// <summary> A custom context tag typically used to correlate the trigger against its usage. For example, if a periodic timer trigger is intended for certain specific IoT modules in the device, the tag can be the name or the image URL of the module. </summary>
        public string CustomContextTag { get; set; }
    }
}
