// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataBoxEdge.Models
{
    public partial class UserProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(EncryptedPassword))
            {
                writer.WritePropertyName("encryptedPassword"u8);
                writer.WriteObjectValue(EncryptedPassword);
            }
            if (Optional.IsDefined(UserType))
            {
                if (UserType != null)
                {
                    writer.WritePropertyName("userType"u8);
                    writer.WriteStringValue(UserType.Value.ToString());
                }
                else
                {
                    writer.WriteNull("userType");
                }
            }
            writer.WriteEndObject();
        }

        internal static UserProperties DeserializeUserProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<AsymmetricEncryptedSecret> encryptedPassword = default;
            Optional<IReadOnlyList<ShareAccessRight>> shareAccessRights = default;
            Optional<DataBoxEdgeUserType?> userType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("encryptedPassword"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    encryptedPassword = AsymmetricEncryptedSecret.DeserializeAsymmetricEncryptedSecret(property.Value);
                    continue;
                }
                if (property.NameEquals("shareAccessRights"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        shareAccessRights = null;
                        continue;
                    }
                    List<ShareAccessRight> array = new List<ShareAccessRight>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ShareAccessRight.DeserializeShareAccessRight(item));
                    }
                    shareAccessRights = array;
                    continue;
                }
                if (property.NameEquals("userType"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        userType = null;
                        continue;
                    }
                    userType = new DataBoxEdgeUserType(property.Value.GetString());
                    continue;
                }
            }
            return new UserProperties(encryptedPassword.Value, Optional.ToList(shareAccessRights), Optional.ToNullable(userType));
        }
    }
}
