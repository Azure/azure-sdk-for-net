// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataBoxEdge.Models
{
    public partial class DataBoxEdgeDeviceExtendedInfoPatch : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(ClientSecretStoreId))
            {
                if (ClientSecretStoreId != null)
                {
                    writer.WritePropertyName("clientSecretStoreId"u8);
                    writer.WriteStringValue(ClientSecretStoreId);
                }
                else
                {
                    writer.WriteNull("clientSecretStoreId");
                }
            }
            if (Optional.IsDefined(ClientSecretStoreUri))
            {
                if (ClientSecretStoreUri != null)
                {
                    writer.WritePropertyName("clientSecretStoreUrl"u8);
                    writer.WriteStringValue(ClientSecretStoreUri.AbsoluteUri);
                }
                else
                {
                    writer.WriteNull("clientSecretStoreUrl");
                }
            }
            if (Optional.IsDefined(ChannelIntegrityKeyName))
            {
                if (ChannelIntegrityKeyName != null)
                {
                    writer.WritePropertyName("channelIntegrityKeyName"u8);
                    writer.WriteStringValue(ChannelIntegrityKeyName);
                }
                else
                {
                    writer.WriteNull("channelIntegrityKeyName");
                }
            }
            if (Optional.IsDefined(ChannelIntegrityKeyVersion))
            {
                if (ChannelIntegrityKeyVersion != null)
                {
                    writer.WritePropertyName("channelIntegrityKeyVersion"u8);
                    writer.WriteStringValue(ChannelIntegrityKeyVersion);
                }
                else
                {
                    writer.WriteNull("channelIntegrityKeyVersion");
                }
            }
            if (Optional.IsDefined(SyncStatus))
            {
                if (SyncStatus != null)
                {
                    writer.WritePropertyName("syncStatus"u8);
                    writer.WriteStringValue(SyncStatus.Value.ToString());
                }
                else
                {
                    writer.WriteNull("syncStatus");
                }
            }
            writer.WriteEndObject();
        }
    }
}
