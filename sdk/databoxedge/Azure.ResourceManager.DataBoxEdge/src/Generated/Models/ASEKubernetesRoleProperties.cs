// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.ResourceManager.DataBoxEdge.Models
{
    /// <summary> Kubernetes role properties. </summary>
    public partial class ASEKubernetesRoleProperties
    {
        /// <summary> Initializes a new instance of ASEKubernetesRoleProperties. </summary>
        /// <param name="kubernetesRoleResources"> ASEKubernetes Role resources. </param>
        /// <param name="roleStatus"> Role status. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="kubernetesRoleResources"/> is null. </exception>
        public ASEKubernetesRoleProperties(ASEKubernetesRoleResources kubernetesRoleResources, DataBoxEdgeRoleStatus roleStatus)
        {
            Argument.AssertNotNull(kubernetesRoleResources, nameof(kubernetesRoleResources));

            KubernetesRoleResources = kubernetesRoleResources;
            RoleStatus = roleStatus;
        }

        /// <summary> Initializes a new instance of ASEKubernetesRoleProperties. </summary>
        /// <param name="hostPlatform"> Platform where the runtime is hosted. </param>
        /// <param name="provisioningState"> State of Kubernetes deployment. </param>
        /// <param name="hostPlatformType"> Host OS supported by the Kubernetes role. </param>
        /// <param name="kubernetesRoleResources"> ASEKubernetes Role resources. </param>
        /// <param name="roleStatus"> Role status. </param>
        internal ASEKubernetesRoleProperties(DataBoxEdgeOSPlatformType? hostPlatform, EdgeKubernetesState? provisioningState, HostPlatformType? hostPlatformType, ASEKubernetesRoleResources kubernetesRoleResources, DataBoxEdgeRoleStatus roleStatus)
        {
            HostPlatform = hostPlatform;
            ProvisioningState = provisioningState;
            HostPlatformType = hostPlatformType;
            KubernetesRoleResources = kubernetesRoleResources;
            RoleStatus = roleStatus;
        }

        /// <summary> Platform where the runtime is hosted. </summary>
        public DataBoxEdgeOSPlatformType? HostPlatform { get; }
        /// <summary> State of Kubernetes deployment. </summary>
        public EdgeKubernetesState? ProvisioningState { get; }
        /// <summary> Host OS supported by the Kubernetes role. </summary>
        public HostPlatformType? HostPlatformType { get; }
        /// <summary> ASEKubernetes Role resources. </summary>
        public ASEKubernetesRoleResources KubernetesRoleResources { get; set; }
        /// <summary> Role status. </summary>
        public DataBoxEdgeRoleStatus RoleStatus { get; set; }
    }
}
