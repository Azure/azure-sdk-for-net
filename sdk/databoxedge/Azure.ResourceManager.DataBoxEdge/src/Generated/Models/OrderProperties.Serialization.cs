// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataBoxEdge.Models
{
    public partial class OrderProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(ContactInformation))
            {
                writer.WritePropertyName("contactInformation"u8);
                writer.WriteObjectValue(ContactInformation);
            }
            if (Optional.IsDefined(ShippingAddress))
            {
                writer.WritePropertyName("shippingAddress"u8);
                writer.WriteObjectValue(ShippingAddress);
            }
            if (Optional.IsDefined(CurrentStatus))
            {
                writer.WritePropertyName("currentStatus"u8);
                writer.WriteObjectValue(CurrentStatus);
            }
            if (Optional.IsDefined(ShipmentType))
            {
                if (ShipmentType != null)
                {
                    writer.WritePropertyName("shipmentType"u8);
                    writer.WriteStringValue(ShipmentType.Value.ToString());
                }
                else
                {
                    writer.WriteNull("shipmentType");
                }
            }
            writer.WriteEndObject();
        }

        internal static OrderProperties DeserializeOrderProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> orderId = default;
            Optional<DataBoxEdgeContactDetails> contactInformation = default;
            Optional<DataBoxEdgeShippingAddress> shippingAddress = default;
            Optional<DataBoxEdgeOrderStatus> currentStatus = default;
            Optional<IReadOnlyList<DataBoxEdgeOrderStatus>> orderHistory = default;
            Optional<string> serialNumber = default;
            Optional<IReadOnlyList<DataBoxEdgeTrackingInfo>> deliveryTrackingInfo = default;
            Optional<IReadOnlyList<DataBoxEdgeTrackingInfo>> returnTrackingInfo = default;
            Optional<DataBoxEdgeShipmentType?> shipmentType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("orderId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        orderId = null;
                        continue;
                    }
                    orderId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("contactInformation"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    contactInformation = DataBoxEdgeContactDetails.DeserializeDataBoxEdgeContactDetails(property.Value);
                    continue;
                }
                if (property.NameEquals("shippingAddress"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    shippingAddress = DataBoxEdgeShippingAddress.DeserializeDataBoxEdgeShippingAddress(property.Value);
                    continue;
                }
                if (property.NameEquals("currentStatus"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    currentStatus = DataBoxEdgeOrderStatus.DeserializeDataBoxEdgeOrderStatus(property.Value);
                    continue;
                }
                if (property.NameEquals("orderHistory"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        orderHistory = null;
                        continue;
                    }
                    List<DataBoxEdgeOrderStatus> array = new List<DataBoxEdgeOrderStatus>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(DataBoxEdgeOrderStatus.DeserializeDataBoxEdgeOrderStatus(item));
                    }
                    orderHistory = array;
                    continue;
                }
                if (property.NameEquals("serialNumber"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        serialNumber = null;
                        continue;
                    }
                    serialNumber = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("deliveryTrackingInfo"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        deliveryTrackingInfo = null;
                        continue;
                    }
                    List<DataBoxEdgeTrackingInfo> array = new List<DataBoxEdgeTrackingInfo>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(DataBoxEdgeTrackingInfo.DeserializeDataBoxEdgeTrackingInfo(item));
                    }
                    deliveryTrackingInfo = array;
                    continue;
                }
                if (property.NameEquals("returnTrackingInfo"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        returnTrackingInfo = null;
                        continue;
                    }
                    List<DataBoxEdgeTrackingInfo> array = new List<DataBoxEdgeTrackingInfo>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(DataBoxEdgeTrackingInfo.DeserializeDataBoxEdgeTrackingInfo(item));
                    }
                    returnTrackingInfo = array;
                    continue;
                }
                if (property.NameEquals("shipmentType"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        shipmentType = null;
                        continue;
                    }
                    shipmentType = new DataBoxEdgeShipmentType(property.Value.GetString());
                    continue;
                }
            }
            return new OrderProperties(orderId.Value, contactInformation.Value, shippingAddress.Value, currentStatus.Value, Optional.ToList(orderHistory), serialNumber.Value, Optional.ToList(deliveryTrackingInfo), Optional.ToList(returnTrackingInfo), Optional.ToNullable(shipmentType));
        }
    }
}
