// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.DataBoxEdge.Models
{
    /// <summary> Cluster Compute Data. </summary>
    public partial class EdgeClusterCapacityViewInfo
    {
        /// <summary> Initializes a new instance of EdgeClusterCapacityViewInfo. </summary>
        public EdgeClusterCapacityViewInfo()
        {
        }

        /// <summary> Initializes a new instance of EdgeClusterCapacityViewInfo. </summary>
        /// <param name="fqdn"> The FQDN of the cluster. </param>
        /// <param name="gpuCapacity"> Cluster GPU Data. </param>
        /// <param name="memoryCapacity"> NodeCapacityInfo defines the required information to determine the placement of a VM. </param>
        /// <param name="lastRefreshedOn"> The last time at which the ClusterCapacityViewData was set. </param>
        /// <param name="totalProvisionedNonHpnCores"> The total # of vCPUs provisioned by non-HPN VM per appliance. </param>
        internal EdgeClusterCapacityViewInfo(string fqdn, EdgeClusterGpuCapacity gpuCapacity, EdgeClusterMemoryCapacity memoryCapacity, DateTimeOffset? lastRefreshedOn, long? totalProvisionedNonHpnCores)
        {
            Fqdn = fqdn;
            GpuCapacity = gpuCapacity;
            MemoryCapacity = memoryCapacity;
            LastRefreshedOn = lastRefreshedOn;
            TotalProvisionedNonHpnCores = totalProvisionedNonHpnCores;
        }

        /// <summary> The FQDN of the cluster. </summary>
        public string Fqdn { get; set; }
        /// <summary> Cluster GPU Data. </summary>
        public EdgeClusterGpuCapacity GpuCapacity { get; set; }
        /// <summary> NodeCapacityInfo defines the required information to determine the placement of a VM. </summary>
        public EdgeClusterMemoryCapacity MemoryCapacity { get; set; }
        /// <summary> The last time at which the ClusterCapacityViewData was set. </summary>
        public DateTimeOffset? LastRefreshedOn { get; set; }
        /// <summary> The total # of vCPUs provisioned by non-HPN VM per appliance. </summary>
        public long? TotalProvisionedNonHpnCores { get; set; }
    }
}
