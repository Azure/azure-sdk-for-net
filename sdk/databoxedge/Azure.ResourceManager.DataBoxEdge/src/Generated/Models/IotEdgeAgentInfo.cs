// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.DataBoxEdge.Models
{
    /// <summary> IoT edge agent details is optional, this will be used for download system Agent module while bootstrapping IoT Role if specified. </summary>
    public partial class IotEdgeAgentInfo
    {
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="IotEdgeAgentInfo"/>. </summary>
        /// <param name="imageName"> Name of the IoT edge agent image. </param>
        /// <param name="tag"> Image Tag. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="imageName"/> or <paramref name="tag"/> is null. </exception>
        public IotEdgeAgentInfo(string imageName, string tag)
        {
            Argument.AssertNotNull(imageName, nameof(imageName));
            Argument.AssertNotNull(tag, nameof(tag));

            ImageName = imageName;
            Tag = tag;
        }

        /// <summary> Initializes a new instance of <see cref="IotEdgeAgentInfo"/>. </summary>
        /// <param name="imageName"> Name of the IoT edge agent image. </param>
        /// <param name="tag"> Image Tag. </param>
        /// <param name="imageRepository"> Image repository details. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal IotEdgeAgentInfo(string imageName, string tag, ImageRepositoryCredential imageRepository, Dictionary<string, BinaryData> rawData)
        {
            ImageName = imageName;
            Tag = tag;
            ImageRepository = imageRepository;
            _rawData = rawData;
        }

        /// <summary> Initializes a new instance of <see cref="IotEdgeAgentInfo"/> for deserialization. </summary>
        internal IotEdgeAgentInfo()
        {
        }

        /// <summary> Name of the IoT edge agent image. </summary>
        public string ImageName { get; set; }
        /// <summary> Image Tag. </summary>
        public string Tag { get; set; }
        /// <summary> Image repository details. </summary>
        public ImageRepositoryCredential ImageRepository { get; set; }
    }
}
