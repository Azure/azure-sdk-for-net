// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataBoxEdge.Models
{
    public partial class IotRoleProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("hostPlatform"u8);
            writer.WriteStringValue(HostPlatform.ToString());
            writer.WritePropertyName("ioTDeviceDetails"u8);
            writer.WriteObjectValue(IotDeviceDetails);
            writer.WritePropertyName("ioTEdgeDeviceDetails"u8);
            writer.WriteObjectValue(IotEdgeDeviceDetails);
            if (Optional.IsCollectionDefined(ShareMappings))
            {
                if (ShareMappings != null)
                {
                    writer.WritePropertyName("shareMappings"u8);
                    writer.WriteStartArray();
                    foreach (var item in ShareMappings)
                    {
                        writer.WriteObjectValue(item);
                    }
                    writer.WriteEndArray();
                }
                else
                {
                    writer.WriteNull("shareMappings");
                }
            }
            if (Optional.IsDefined(IotEdgeAgentInfo))
            {
                writer.WritePropertyName("ioTEdgeAgentInfo"u8);
                writer.WriteObjectValue(IotEdgeAgentInfo);
            }
            if (Optional.IsDefined(ComputeResource))
            {
                writer.WritePropertyName("computeResource"u8);
                writer.WriteObjectValue(ComputeResource);
            }
            writer.WritePropertyName("roleStatus"u8);
            writer.WriteStringValue(RoleStatus.ToString());
            writer.WriteEndObject();
        }

        internal static IotRoleProperties DeserializeIotRoleProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            DataBoxEdgeOSPlatformType hostPlatform = default;
            EdgeIotDeviceInfo iotDeviceDetails = default;
            EdgeIotDeviceInfo iotEdgeDeviceDetails = default;
            Optional<IList<DataBoxEdgeMountPointMap>> shareMappings = default;
            Optional<IotEdgeAgentInfo> iotEdgeAgentInfo = default;
            Optional<HostPlatformType?> hostPlatformType = default;
            Optional<EdgeComputeResourceInfo> computeResource = default;
            DataBoxEdgeRoleStatus roleStatus = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("hostPlatform"u8))
                {
                    hostPlatform = new DataBoxEdgeOSPlatformType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("ioTDeviceDetails"u8))
                {
                    iotDeviceDetails = EdgeIotDeviceInfo.DeserializeEdgeIotDeviceInfo(property.Value);
                    continue;
                }
                if (property.NameEquals("ioTEdgeDeviceDetails"u8))
                {
                    iotEdgeDeviceDetails = EdgeIotDeviceInfo.DeserializeEdgeIotDeviceInfo(property.Value);
                    continue;
                }
                if (property.NameEquals("shareMappings"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        shareMappings = null;
                        continue;
                    }
                    List<DataBoxEdgeMountPointMap> array = new List<DataBoxEdgeMountPointMap>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(DataBoxEdgeMountPointMap.DeserializeDataBoxEdgeMountPointMap(item));
                    }
                    shareMappings = array;
                    continue;
                }
                if (property.NameEquals("ioTEdgeAgentInfo"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    iotEdgeAgentInfo = IotEdgeAgentInfo.DeserializeIotEdgeAgentInfo(property.Value);
                    continue;
                }
                if (property.NameEquals("hostPlatformType"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        hostPlatformType = null;
                        continue;
                    }
                    hostPlatformType = new HostPlatformType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("computeResource"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    computeResource = EdgeComputeResourceInfo.DeserializeEdgeComputeResourceInfo(property.Value);
                    continue;
                }
                if (property.NameEquals("roleStatus"u8))
                {
                    roleStatus = new DataBoxEdgeRoleStatus(property.Value.GetString());
                    continue;
                }
            }
            return new IotRoleProperties(hostPlatform, iotDeviceDetails, iotEdgeDeviceDetails, Optional.ToList(shareMappings), iotEdgeAgentInfo.Value, Optional.ToNullable(hostPlatformType), computeResource.Value, roleStatus);
        }
    }
}
