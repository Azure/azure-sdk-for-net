// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataBoxEdge.Models
{
    public partial class MarketplaceImageOfferProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(PublisherId))
            {
                if (PublisherId != null)
                {
                    writer.WritePropertyName("publisherId"u8);
                    writer.WriteStringValue(PublisherId);
                }
                else
                {
                    writer.WriteNull("publisherId");
                }
            }
            if (Optional.IsDefined(Content))
            {
                if (Content != null)
                {
                    writer.WritePropertyName("content"u8);
                    writer.WriteStringValue(Content);
                }
                else
                {
                    writer.WriteNull("content");
                }
            }
            if (Optional.IsDefined(ContentVersion))
            {
                if (ContentVersion != null)
                {
                    writer.WritePropertyName("contentVersion"u8);
                    writer.WriteStringValue(ContentVersion);
                }
                else
                {
                    writer.WriteNull("contentVersion");
                }
            }
            if (Optional.IsDefined(ProvisioningState))
            {
                if (ProvisioningState != null)
                {
                    writer.WritePropertyName("provisioningState"u8);
                    writer.WriteStringValue(ProvisioningState);
                }
                else
                {
                    writer.WriteNull("provisioningState");
                }
            }
            if (Optional.IsCollectionDefined(SkuMappings))
            {
                if (SkuMappings != null)
                {
                    writer.WritePropertyName("skuMappings"u8);
                    writer.WriteStartArray();
                    foreach (var item in SkuMappings)
                    {
                        writer.WriteObjectValue(item);
                    }
                    writer.WriteEndArray();
                }
                else
                {
                    writer.WriteNull("skuMappings");
                }
            }
            writer.WriteEndObject();
        }

        internal static MarketplaceImageOfferProperties DeserializeMarketplaceImageOfferProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> publisherId = default;
            Optional<string> content = default;
            Optional<string> contentVersion = default;
            Optional<string> provisioningState = default;
            Optional<IList<SkuMapping>> skuMappings = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("publisherId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        publisherId = null;
                        continue;
                    }
                    publisherId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("content"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        content = null;
                        continue;
                    }
                    content = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("contentVersion"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        contentVersion = null;
                        continue;
                    }
                    contentVersion = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("provisioningState"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        provisioningState = null;
                        continue;
                    }
                    provisioningState = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("skuMappings"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        skuMappings = null;
                        continue;
                    }
                    List<SkuMapping> array = new List<SkuMapping>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(SkuMapping.DeserializeSkuMapping(item));
                    }
                    skuMappings = array;
                    continue;
                }
            }
            return new MarketplaceImageOfferProperties(publisherId.Value, content.Value, contentVersion.Value, provisioningState.Value, Optional.ToList(skuMappings));
        }
    }
}
