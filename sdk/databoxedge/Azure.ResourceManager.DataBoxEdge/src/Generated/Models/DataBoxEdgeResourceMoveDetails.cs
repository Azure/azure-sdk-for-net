// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.DataBoxEdge.Models
{
    /// <summary> Fields for tracking resource move. </summary>
    public partial class DataBoxEdgeResourceMoveDetails
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="DataBoxEdgeResourceMoveDetails"/>. </summary>
        internal DataBoxEdgeResourceMoveDetails()
        {
        }

        /// <summary> Initializes a new instance of <see cref="DataBoxEdgeResourceMoveDetails"/>. </summary>
        /// <param name="operationInProgress"> Denotes whether move operation is in progress. </param>
        /// <param name="operationInProgressLockTimeoutInUtc"> Denotes the timeout of the operation to finish. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal DataBoxEdgeResourceMoveDetails(DataBoxEdgeResourceMoveStatus? operationInProgress, DateTimeOffset? operationInProgressLockTimeoutInUtc, Dictionary<string, BinaryData> rawData)
        {
            OperationInProgress = operationInProgress;
            OperationInProgressLockTimeoutInUtc = operationInProgressLockTimeoutInUtc;
            _rawData = rawData;
        }

        /// <summary> Denotes whether move operation is in progress. </summary>
        public DataBoxEdgeResourceMoveStatus? OperationInProgress { get; }
        /// <summary> Denotes the timeout of the operation to finish. </summary>
        public DateTimeOffset? OperationInProgressLockTimeoutInUtc { get; }
    }
}
