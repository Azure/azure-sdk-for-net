// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataBoxEdge.Models
{
    public partial class ClusterCapacityViewData : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Fqdn))
            {
                writer.WritePropertyName("fqdn");
                writer.WriteStringValue(Fqdn);
            }
            if (Optional.IsDefined(GpuCapacity))
            {
                writer.WritePropertyName("gpuCapacity");
                writer.WriteObjectValue(GpuCapacity);
            }
            if (Optional.IsDefined(MemoryCapacity))
            {
                writer.WritePropertyName("memoryCapacity");
                writer.WriteObjectValue(MemoryCapacity);
            }
            if (Optional.IsDefined(LastRefreshedOn))
            {
                writer.WritePropertyName("lastRefreshedTime");
                writer.WriteStringValue(LastRefreshedOn.Value, "O");
            }
            if (Optional.IsDefined(TotalProvisionedNonHpnCores))
            {
                writer.WritePropertyName("totalProvisionedNonHpnCores");
                writer.WriteNumberValue(TotalProvisionedNonHpnCores.Value);
            }
            writer.WriteEndObject();
        }

        internal static ClusterCapacityViewData DeserializeClusterCapacityViewData(JsonElement element)
        {
            Optional<string> fqdn = default;
            Optional<ClusterGpuCapacity> gpuCapacity = default;
            Optional<ClusterMemoryCapacity> memoryCapacity = default;
            Optional<DateTimeOffset> lastRefreshedTime = default;
            Optional<long> totalProvisionedNonHpnCores = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("fqdn"))
                {
                    fqdn = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("gpuCapacity"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    gpuCapacity = ClusterGpuCapacity.DeserializeClusterGpuCapacity(property.Value);
                    continue;
                }
                if (property.NameEquals("memoryCapacity"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    memoryCapacity = ClusterMemoryCapacity.DeserializeClusterMemoryCapacity(property.Value);
                    continue;
                }
                if (property.NameEquals("lastRefreshedTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    lastRefreshedTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("totalProvisionedNonHpnCores"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    totalProvisionedNonHpnCores = property.Value.GetInt64();
                    continue;
                }
            }
            return new ClusterCapacityViewData(fqdn.Value, gpuCapacity.Value, memoryCapacity.Value, Optional.ToNullable(lastRefreshedTime), Optional.ToNullable(totalProvisionedNonHpnCores));
        }
    }
}
