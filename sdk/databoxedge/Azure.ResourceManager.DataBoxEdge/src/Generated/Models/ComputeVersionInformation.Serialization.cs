// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataBoxEdge.Models
{
    public partial class ComputeVersionInformation : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(KubernetesVersion))
            {
                if (KubernetesVersion != null)
                {
                    writer.WritePropertyName("kubernetesVersion"u8);
                    writer.WriteStringValue(KubernetesVersion);
                }
                else
                {
                    writer.WriteNull("kubernetesVersion");
                }
            }
            if (Optional.IsDefined(IotEdgeVersion))
            {
                if (IotEdgeVersion != null)
                {
                    writer.WritePropertyName("iotEdgeVersion"u8);
                    writer.WriteStringValue(IotEdgeVersion);
                }
                else
                {
                    writer.WriteNull("iotEdgeVersion");
                }
            }
            if (Optional.IsDefined(AzureArcVersion))
            {
                if (AzureArcVersion != null)
                {
                    writer.WritePropertyName("azureArcVersion"u8);
                    writer.WriteStringValue(AzureArcVersion);
                }
                else
                {
                    writer.WriteNull("azureArcVersion");
                }
            }
            writer.WriteEndObject();
        }

        internal static ComputeVersionInformation DeserializeComputeVersionInformation(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> kubernetesVersion = default;
            Optional<string> iotEdgeVersion = default;
            Optional<string> azureArcVersion = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("kubernetesVersion"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        kubernetesVersion = null;
                        continue;
                    }
                    kubernetesVersion = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("iotEdgeVersion"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        iotEdgeVersion = null;
                        continue;
                    }
                    iotEdgeVersion = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("azureArcVersion"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        azureArcVersion = null;
                        continue;
                    }
                    azureArcVersion = property.Value.GetString();
                    continue;
                }
            }
            return new ComputeVersionInformation(kubernetesVersion.Value, iotEdgeVersion.Value, azureArcVersion.Value);
        }
    }
}
