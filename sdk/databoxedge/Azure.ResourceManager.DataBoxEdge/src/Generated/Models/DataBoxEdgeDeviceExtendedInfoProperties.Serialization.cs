// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataBoxEdge.Models
{
    public partial class DataBoxEdgeDeviceExtendedInfoProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(EncryptionKeyThumbprint))
            {
                if (EncryptionKeyThumbprint != null)
                {
                    writer.WritePropertyName("encryptionKeyThumbprint"u8);
                    writer.WriteStringValue(EncryptionKeyThumbprint);
                }
                else
                {
                    writer.WriteNull("encryptionKeyThumbprint");
                }
            }
            if (Optional.IsDefined(EncryptionKey))
            {
                if (EncryptionKey != null)
                {
                    writer.WritePropertyName("encryptionKey"u8);
                    writer.WriteStringValue(EncryptionKey);
                }
                else
                {
                    writer.WriteNull("encryptionKey");
                }
            }
            if (Optional.IsDefined(ClientSecretStoreId))
            {
                if (ClientSecretStoreId != null)
                {
                    writer.WritePropertyName("clientSecretStoreId"u8);
                    writer.WriteStringValue(ClientSecretStoreId);
                }
                else
                {
                    writer.WriteNull("clientSecretStoreId");
                }
            }
            if (Optional.IsDefined(ClientSecretStoreUri))
            {
                if (ClientSecretStoreUri != null)
                {
                    writer.WritePropertyName("clientSecretStoreUrl"u8);
                    writer.WriteStringValue(ClientSecretStoreUri.AbsoluteUri);
                }
                else
                {
                    writer.WriteNull("clientSecretStoreUrl");
                }
            }
            if (Optional.IsDefined(ChannelIntegrityKeyName))
            {
                if (ChannelIntegrityKeyName != null)
                {
                    writer.WritePropertyName("channelIntegrityKeyName"u8);
                    writer.WriteStringValue(ChannelIntegrityKeyName);
                }
                else
                {
                    writer.WriteNull("channelIntegrityKeyName");
                }
            }
            if (Optional.IsDefined(ChannelIntegrityKeyVersion))
            {
                if (ChannelIntegrityKeyVersion != null)
                {
                    writer.WritePropertyName("channelIntegrityKeyVersion"u8);
                    writer.WriteStringValue(ChannelIntegrityKeyVersion);
                }
                else
                {
                    writer.WriteNull("channelIntegrityKeyVersion");
                }
            }
            if (Optional.IsDefined(KeyVaultSyncStatus))
            {
                if (KeyVaultSyncStatus != null)
                {
                    writer.WritePropertyName("keyVaultSyncStatus"u8);
                    writer.WriteStringValue(KeyVaultSyncStatus.Value.ToString());
                }
                else
                {
                    writer.WriteNull("keyVaultSyncStatus");
                }
            }
            writer.WriteEndObject();
        }

        internal static DataBoxEdgeDeviceExtendedInfoProperties DeserializeDataBoxEdgeDeviceExtendedInfoProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> encryptionKeyThumbprint = default;
            Optional<string> encryptionKey = default;
            Optional<string> resourceKey = default;
            Optional<ResourceIdentifier> clientSecretStoreId = default;
            Optional<Uri> clientSecretStoreUrl = default;
            Optional<string> channelIntegrityKeyName = default;
            Optional<string> channelIntegrityKeyVersion = default;
            Optional<EdgeKeyVaultSyncStatus?> keyVaultSyncStatus = default;
            Optional<IReadOnlyDictionary<string, DataBoxEdgeDeviceSecret>> deviceSecrets = default;
            Optional<EdgeClusterWitnessType> clusterWitnessType = default;
            Optional<string> fileShareWitnessLocation = default;
            Optional<string> fileShareWitnessUsername = default;
            Optional<string> cloudWitnessStorageAccountName = default;
            Optional<string> cloudWitnessContainerName = default;
            Optional<string> cloudWitnessStorageEndpoint = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("encryptionKeyThumbprint"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        encryptionKeyThumbprint = null;
                        continue;
                    }
                    encryptionKeyThumbprint = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("encryptionKey"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        encryptionKey = null;
                        continue;
                    }
                    encryptionKey = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("resourceKey"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        resourceKey = null;
                        continue;
                    }
                    resourceKey = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("clientSecretStoreId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        clientSecretStoreId = null;
                        continue;
                    }
                    clientSecretStoreId = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("clientSecretStoreUrl"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        clientSecretStoreUrl = null;
                        continue;
                    }
                    clientSecretStoreUrl = new Uri(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("channelIntegrityKeyName"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        channelIntegrityKeyName = null;
                        continue;
                    }
                    channelIntegrityKeyName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("channelIntegrityKeyVersion"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        channelIntegrityKeyVersion = null;
                        continue;
                    }
                    channelIntegrityKeyVersion = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("keyVaultSyncStatus"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        keyVaultSyncStatus = null;
                        continue;
                    }
                    keyVaultSyncStatus = new EdgeKeyVaultSyncStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("deviceSecrets"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        deviceSecrets = null;
                        continue;
                    }
                    Dictionary<string, DataBoxEdgeDeviceSecret> dictionary = new Dictionary<string, DataBoxEdgeDeviceSecret>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, DataBoxEdgeDeviceSecret.DeserializeDataBoxEdgeDeviceSecret(property0.Value));
                    }
                    deviceSecrets = dictionary;
                    continue;
                }
                if (property.NameEquals("clusterWitnessType"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    clusterWitnessType = new EdgeClusterWitnessType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("fileShareWitnessLocation"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        fileShareWitnessLocation = null;
                        continue;
                    }
                    fileShareWitnessLocation = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("fileShareWitnessUsername"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        fileShareWitnessUsername = null;
                        continue;
                    }
                    fileShareWitnessUsername = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("cloudWitnessStorageAccountName"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        cloudWitnessStorageAccountName = null;
                        continue;
                    }
                    cloudWitnessStorageAccountName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("cloudWitnessContainerName"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        cloudWitnessContainerName = null;
                        continue;
                    }
                    cloudWitnessContainerName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("cloudWitnessStorageEndpoint"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        cloudWitnessStorageEndpoint = null;
                        continue;
                    }
                    cloudWitnessStorageEndpoint = property.Value.GetString();
                    continue;
                }
            }
            return new DataBoxEdgeDeviceExtendedInfoProperties(encryptionKeyThumbprint.Value, encryptionKey.Value, resourceKey.Value, clientSecretStoreId.Value, clientSecretStoreUrl.Value, channelIntegrityKeyName.Value, channelIntegrityKeyVersion.Value, Optional.ToNullable(keyVaultSyncStatus), Optional.ToDictionary(deviceSecrets), Optional.ToNullable(clusterWitnessType), fileShareWitnessLocation.Value, fileShareWitnessUsername.Value, cloudWitnessStorageAccountName.Value, cloudWitnessContainerName.Value, cloudWitnessStorageEndpoint.Value);
        }
    }
}
