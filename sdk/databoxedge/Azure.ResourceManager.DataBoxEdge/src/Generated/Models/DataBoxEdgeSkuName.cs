// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.DataBoxEdge.Models
{
    /// <summary> The Sku name. </summary>
    public readonly partial struct DataBoxEdgeSkuName : IEquatable<DataBoxEdgeSkuName>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="DataBoxEdgeSkuName"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public DataBoxEdgeSkuName(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string GatewayValue = "Gateway";
        private const string EdgeValue = "Edge";
        private const string TEA1NodeValue = "TEA_1Node";
        private const string TEA1NodeUPSValue = "TEA_1Node_UPS";
        private const string TEA1NodeHeaterValue = "TEA_1Node_Heater";
        private const string TEA1NodeUPSHeaterValue = "TEA_1Node_UPS_Heater";
        private const string TEA4NodeHeaterValue = "TEA_4Node_Heater";
        private const string TEA4NodeUPSHeaterValue = "TEA_4Node_UPS_Heater";
        private const string TMAValue = "TMA";
        private const string TDCValue = "TDC";
        private const string TCASmallValue = "TCA_Small";
        private const string GPUValue = "GPU";
        private const string TCALargeValue = "TCA_Large";
        private const string EdgePBaseValue = "EdgeP_Base";
        private const string EdgePHighValue = "EdgeP_High";
        private const string EdgePRBaseValue = "EdgePR_Base";
        private const string EdgePRBaseUPSValue = "EdgePR_Base_UPS";
        private const string EP2641VpuWValue = "EP2_64_1VPU_W";
        private const string EP21281T4Mx1WValue = "EP2_128_1T4_Mx1_W";
        private const string EP22562T4WValue = "EP2_256_2T4_W";
        private const string EdgeMRMiniValue = "EdgeMR_Mini";
        private const string RCASmallValue = "RCA_Small";
        private const string RCALargeValue = "RCA_Large";
        private const string RDCValue = "RDC";
        private const string ManagementValue = "Management";
        private const string EP264Mx1WValue = "EP2_64_Mx1_W";
        private const string EP2128GPU1Mx1WValue = "EP2_128_GPU1_Mx1_W";
        private const string EP2256GPU2Mx1Value = "EP2_256_GPU2_Mx1";
        private const string EdgeMRTCPValue = "EdgeMR_TCP";

        /// <summary> Gateway. </summary>
        public static DataBoxEdgeSkuName Gateway { get; } = new DataBoxEdgeSkuName(GatewayValue);
        /// <summary> Edge. </summary>
        public static DataBoxEdgeSkuName Edge { get; } = new DataBoxEdgeSkuName(EdgeValue);
        /// <summary> TEA_1Node. </summary>
        public static DataBoxEdgeSkuName TEA1Node { get; } = new DataBoxEdgeSkuName(TEA1NodeValue);
        /// <summary> TEA_1Node_UPS. </summary>
        public static DataBoxEdgeSkuName TEA1NodeUPS { get; } = new DataBoxEdgeSkuName(TEA1NodeUPSValue);
        /// <summary> TEA_1Node_Heater. </summary>
        public static DataBoxEdgeSkuName TEA1NodeHeater { get; } = new DataBoxEdgeSkuName(TEA1NodeHeaterValue);
        /// <summary> TEA_1Node_UPS_Heater. </summary>
        public static DataBoxEdgeSkuName TEA1NodeUPSHeater { get; } = new DataBoxEdgeSkuName(TEA1NodeUPSHeaterValue);
        /// <summary> TEA_4Node_Heater. </summary>
        public static DataBoxEdgeSkuName TEA4NodeHeater { get; } = new DataBoxEdgeSkuName(TEA4NodeHeaterValue);
        /// <summary> TEA_4Node_UPS_Heater. </summary>
        public static DataBoxEdgeSkuName TEA4NodeUPSHeater { get; } = new DataBoxEdgeSkuName(TEA4NodeUPSHeaterValue);
        /// <summary> TMA. </summary>
        public static DataBoxEdgeSkuName TMA { get; } = new DataBoxEdgeSkuName(TMAValue);
        /// <summary> TDC. </summary>
        public static DataBoxEdgeSkuName TDC { get; } = new DataBoxEdgeSkuName(TDCValue);
        /// <summary> TCA_Small. </summary>
        public static DataBoxEdgeSkuName TCASmall { get; } = new DataBoxEdgeSkuName(TCASmallValue);
        /// <summary> GPU. </summary>
        public static DataBoxEdgeSkuName GPU { get; } = new DataBoxEdgeSkuName(GPUValue);
        /// <summary> TCA_Large. </summary>
        public static DataBoxEdgeSkuName TCALarge { get; } = new DataBoxEdgeSkuName(TCALargeValue);
        /// <summary> EdgeP_Base. </summary>
        public static DataBoxEdgeSkuName EdgePBase { get; } = new DataBoxEdgeSkuName(EdgePBaseValue);
        /// <summary> EdgeP_High. </summary>
        public static DataBoxEdgeSkuName EdgePHigh { get; } = new DataBoxEdgeSkuName(EdgePHighValue);
        /// <summary> EdgePR_Base. </summary>
        public static DataBoxEdgeSkuName EdgePRBase { get; } = new DataBoxEdgeSkuName(EdgePRBaseValue);
        /// <summary> EdgePR_Base_UPS. </summary>
        public static DataBoxEdgeSkuName EdgePRBaseUPS { get; } = new DataBoxEdgeSkuName(EdgePRBaseUPSValue);
        /// <summary> EP2_64_1VPU_W. </summary>
        public static DataBoxEdgeSkuName EP2641VpuW { get; } = new DataBoxEdgeSkuName(EP2641VpuWValue);
        /// <summary> EP2_128_1T4_Mx1_W. </summary>
        public static DataBoxEdgeSkuName EP21281T4Mx1W { get; } = new DataBoxEdgeSkuName(EP21281T4Mx1WValue);
        /// <summary> EP2_256_2T4_W. </summary>
        public static DataBoxEdgeSkuName EP22562T4W { get; } = new DataBoxEdgeSkuName(EP22562T4WValue);
        /// <summary> EdgeMR_Mini. </summary>
        public static DataBoxEdgeSkuName EdgeMRMini { get; } = new DataBoxEdgeSkuName(EdgeMRMiniValue);
        /// <summary> RCA_Small. </summary>
        public static DataBoxEdgeSkuName RCASmall { get; } = new DataBoxEdgeSkuName(RCASmallValue);
        /// <summary> RCA_Large. </summary>
        public static DataBoxEdgeSkuName RCALarge { get; } = new DataBoxEdgeSkuName(RCALargeValue);
        /// <summary> RDC. </summary>
        public static DataBoxEdgeSkuName RDC { get; } = new DataBoxEdgeSkuName(RDCValue);
        /// <summary> Management. </summary>
        public static DataBoxEdgeSkuName Management { get; } = new DataBoxEdgeSkuName(ManagementValue);
        /// <summary> EP2_64_Mx1_W. </summary>
        public static DataBoxEdgeSkuName EP264Mx1W { get; } = new DataBoxEdgeSkuName(EP264Mx1WValue);
        /// <summary> EP2_128_GPU1_Mx1_W. </summary>
        public static DataBoxEdgeSkuName EP2128GPU1Mx1W { get; } = new DataBoxEdgeSkuName(EP2128GPU1Mx1WValue);
        /// <summary> EP2_256_GPU2_Mx1. </summary>
        public static DataBoxEdgeSkuName EP2256GPU2Mx1 { get; } = new DataBoxEdgeSkuName(EP2256GPU2Mx1Value);
        /// <summary> EdgeMR_TCP. </summary>
        public static DataBoxEdgeSkuName EdgeMRTCP { get; } = new DataBoxEdgeSkuName(EdgeMRTCPValue);
        /// <summary> Determines if two <see cref="DataBoxEdgeSkuName"/> values are the same. </summary>
        public static bool operator ==(DataBoxEdgeSkuName left, DataBoxEdgeSkuName right) => left.Equals(right);
        /// <summary> Determines if two <see cref="DataBoxEdgeSkuName"/> values are not the same. </summary>
        public static bool operator !=(DataBoxEdgeSkuName left, DataBoxEdgeSkuName right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="DataBoxEdgeSkuName"/>. </summary>
        public static implicit operator DataBoxEdgeSkuName(string value) => new DataBoxEdgeSkuName(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is DataBoxEdgeSkuName other && Equals(other);
        /// <inheritdoc />
        public bool Equals(DataBoxEdgeSkuName other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
