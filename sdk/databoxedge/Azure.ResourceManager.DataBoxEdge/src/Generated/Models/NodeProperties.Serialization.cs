// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataBoxEdge.Models
{
    public partial class NodeProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WriteEndObject();
        }

        internal static NodeProperties DeserializeNodeProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<DataBoxEdgeNodeStatus> nodeStatus = default;
            Optional<string> nodeChassisSerialNumber = default;
            Optional<string> nodeSerialNumber = default;
            Optional<string> nodeDisplayName = default;
            Optional<string> nodeFriendlySoftwareVersion = default;
            Optional<string> nodeHcsVersion = default;
            Optional<Guid?> nodeInstanceId = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("nodeStatus"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    nodeStatus = new DataBoxEdgeNodeStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("nodeChassisSerialNumber"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        nodeChassisSerialNumber = null;
                        continue;
                    }
                    nodeChassisSerialNumber = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("nodeSerialNumber"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        nodeSerialNumber = null;
                        continue;
                    }
                    nodeSerialNumber = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("nodeDisplayName"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        nodeDisplayName = null;
                        continue;
                    }
                    nodeDisplayName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("nodeFriendlySoftwareVersion"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        nodeFriendlySoftwareVersion = null;
                        continue;
                    }
                    nodeFriendlySoftwareVersion = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("nodeHcsVersion"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        nodeHcsVersion = null;
                        continue;
                    }
                    nodeHcsVersion = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("nodeInstanceId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        nodeInstanceId = null;
                        continue;
                    }
                    nodeInstanceId = property.Value.GetGuid();
                    continue;
                }
            }
            return new NodeProperties(Optional.ToNullable(nodeStatus), nodeChassisSerialNumber.Value, nodeSerialNumber.Value, nodeDisplayName.Value, nodeFriendlySoftwareVersion.Value, nodeHcsVersion.Value, Optional.ToNullable(nodeInstanceId));
        }
    }
}
