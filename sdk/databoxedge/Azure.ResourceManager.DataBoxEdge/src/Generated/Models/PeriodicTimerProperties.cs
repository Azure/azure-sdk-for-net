// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.ResourceManager.DataBoxEdge.Models
{
    /// <summary> Periodic timer trigger properties. </summary>
    public partial class PeriodicTimerProperties
    {
        /// <summary> Initializes a new instance of PeriodicTimerProperties. </summary>
        /// <param name="sourceInfo"> Periodic timer event source. </param>
        /// <param name="sinkInfo"> Compute role against which events will be raised. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="sourceInfo"/> or <paramref name="sinkInfo"/> is null. </exception>
        public PeriodicTimerProperties(PeriodicTimerSourceInfo sourceInfo, DataBoxEdgeRoleSinkInfo sinkInfo)
        {
            Argument.AssertNotNull(sourceInfo, nameof(sourceInfo));
            Argument.AssertNotNull(sinkInfo, nameof(sinkInfo));

            SourceInfo = sourceInfo;
            SinkInfo = sinkInfo;
        }

        /// <summary> Initializes a new instance of PeriodicTimerProperties. </summary>
        /// <param name="sourceInfo"> Periodic timer event source. </param>
        /// <param name="sinkInfo"> Compute role against which events will be raised. </param>
        /// <param name="customContextTag"> A custom context tag typically used to correlate the trigger against its usage. For example, if a periodic timer trigger is intended for certain specific IoT modules in the device, the tag can be the name or the image URL of the module. </param>
        internal PeriodicTimerProperties(PeriodicTimerSourceInfo sourceInfo, DataBoxEdgeRoleSinkInfo sinkInfo, string customContextTag)
        {
            SourceInfo = sourceInfo;
            SinkInfo = sinkInfo;
            CustomContextTag = customContextTag;
        }

        /// <summary> Periodic timer event source. </summary>
        public PeriodicTimerSourceInfo SourceInfo { get; set; }
        /// <summary> Compute role against which events will be raised. </summary>
        internal DataBoxEdgeRoleSinkInfo SinkInfo { get; set; }
        /// <summary> Compute role ID. </summary>
        public ResourceIdentifier SinkInfoRoleId
        {
            get => SinkInfo is null ? default : SinkInfo.RoleId;
            set => SinkInfo = new DataBoxEdgeRoleSinkInfo(value);
        }

        /// <summary> A custom context tag typically used to correlate the trigger against its usage. For example, if a periodic timer trigger is intended for certain specific IoT modules in the device, the tag can be the name or the image URL of the module. </summary>
        public string CustomContextTag { get; set; }
    }
}
