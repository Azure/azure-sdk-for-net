// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.DataBoxEdge.Models
{
    /// <summary> NUMA node data. </summary>
    public partial class NumaNodeInfo
    {
        /// <summary> Initializes a new instance of <see cref="NumaNodeInfo"/>. </summary>
        public NumaNodeInfo()
        {
            FreeVCpuIndexesForHpn = new ChangeTrackingList<int>();
            VCpuIndexesForHpn = new ChangeTrackingList<int>();
            VCpuIndexesForRoot = new ChangeTrackingList<int>();
        }

        /// <summary> Initializes a new instance of <see cref="NumaNodeInfo"/>. </summary>
        /// <param name="numaNodeIndex"> The NUMA node index. </param>
        /// <param name="totalMemoryInMB"> The total memory on the NUMA node. </param>
        /// <param name="logicalCoreCountPerCore"> The logical cores per core count. </param>
        /// <param name="effectiveAvailableMemoryInMB"> The effective available memory on the NUMA node in MB. </param>
        /// <param name="freeVCpuIndexesForHpn"> The free VCPU indices for the Hpn VMs. </param>
        /// <param name="vCpuIndexesForHpn"> The VCPU indices for Hpn VMs. </param>
        /// <param name="vCpuIndexesForRoot"> The VCPU indices for the root. </param>
        internal NumaNodeInfo(int? numaNodeIndex, long? totalMemoryInMB, int? logicalCoreCountPerCore, long? effectiveAvailableMemoryInMB, IList<int> freeVCpuIndexesForHpn, IList<int> vCpuIndexesForHpn, IList<int> vCpuIndexesForRoot)
        {
            NumaNodeIndex = numaNodeIndex;
            TotalMemoryInMB = totalMemoryInMB;
            LogicalCoreCountPerCore = logicalCoreCountPerCore;
            EffectiveAvailableMemoryInMB = effectiveAvailableMemoryInMB;
            FreeVCpuIndexesForHpn = freeVCpuIndexesForHpn;
            VCpuIndexesForHpn = vCpuIndexesForHpn;
            VCpuIndexesForRoot = vCpuIndexesForRoot;
        }

        /// <summary> The NUMA node index. </summary>
        public int? NumaNodeIndex { get; set; }
        /// <summary> The total memory on the NUMA node. </summary>
        public long? TotalMemoryInMB { get; set; }
        /// <summary> The logical cores per core count. </summary>
        public int? LogicalCoreCountPerCore { get; set; }
        /// <summary> The effective available memory on the NUMA node in MB. </summary>
        public long? EffectiveAvailableMemoryInMB { get; set; }
        /// <summary> The free VCPU indices for the Hpn VMs. </summary>
        public IList<int> FreeVCpuIndexesForHpn { get; }
        /// <summary> The VCPU indices for Hpn VMs. </summary>
        public IList<int> VCpuIndexesForHpn { get; }
        /// <summary> The VCPU indices for the root. </summary>
        public IList<int> VCpuIndexesForRoot { get; }
    }
}
