// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataBoxEdge.Models
{
    public partial class EdgeClusterMemoryCapacity : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(ClusterFreeMemoryInMB))
            {
                writer.WritePropertyName("clusterFreeMemoryMb"u8);
                writer.WriteNumberValue(ClusterFreeMemoryInMB.Value);
            }
            if (Core.Optional.IsDefined(ClusterUsedMemoryInMB))
            {
                writer.WritePropertyName("clusterUsedMemoryMb"u8);
                writer.WriteNumberValue(ClusterUsedMemoryInMB.Value);
            }
            if (Core.Optional.IsDefined(ClusterFailoverMemoryInMB))
            {
                writer.WritePropertyName("clusterFailoverMemoryMb"u8);
                writer.WriteNumberValue(ClusterFailoverMemoryInMB.Value);
            }
            if (Core.Optional.IsDefined(ClusterFragmentationMemoryInMB))
            {
                writer.WritePropertyName("clusterFragmentationMemoryMb"u8);
                writer.WriteNumberValue(ClusterFragmentationMemoryInMB.Value);
            }
            if (Core.Optional.IsDefined(ClusterHyperVReserveMemoryMb))
            {
                writer.WritePropertyName("clusterHypervReserveMemoryMb"u8);
                writer.WriteNumberValue(ClusterHyperVReserveMemoryMb.Value);
            }
            if (Core.Optional.IsDefined(ClusterInfraVmMemoryInMB))
            {
                writer.WritePropertyName("clusterInfraVmMemoryMb"u8);
                writer.WriteNumberValue(ClusterInfraVmMemoryInMB.Value);
            }
            if (Core.Optional.IsDefined(ClusterTotalMemoryInMB))
            {
                writer.WritePropertyName("clusterTotalMemoryMb"u8);
                writer.WriteNumberValue(ClusterTotalMemoryInMB.Value);
            }
            if (Core.Optional.IsDefined(ClusterNonFailoverVmInMB))
            {
                writer.WritePropertyName("clusterNonFailoverVmMb"u8);
                writer.WriteNumberValue(ClusterNonFailoverVmInMB.Value);
            }
            if (Core.Optional.IsDefined(ClusterMemoryUsedByVmsInMB))
            {
                writer.WritePropertyName("clusterMemoryUsedByVmsMb"u8);
                writer.WriteNumberValue(ClusterMemoryUsedByVmsInMB.Value);
            }
            writer.WriteEndObject();
        }

        internal static EdgeClusterMemoryCapacity DeserializeEdgeClusterMemoryCapacity(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<double> clusterFreeMemoryMb = default;
            Core.Optional<double> clusterUsedMemoryMb = default;
            Core.Optional<double> clusterFailoverMemoryMb = default;
            Core.Optional<double> clusterFragmentationMemoryMb = default;
            Core.Optional<double> clusterHyperVReserveMemoryMb = default;
            Core.Optional<double> clusterInfraVmMemoryMb = default;
            Core.Optional<double> clusterTotalMemoryMb = default;
            Core.Optional<double> clusterNonFailoverVmMb = default;
            Core.Optional<double> clusterMemoryUsedByVmsMb = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("clusterFreeMemoryMb"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    clusterFreeMemoryMb = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("clusterUsedMemoryMb"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    clusterUsedMemoryMb = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("clusterFailoverMemoryMb"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    clusterFailoverMemoryMb = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("clusterFragmentationMemoryMb"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    clusterFragmentationMemoryMb = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("clusterHypervReserveMemoryMb"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    clusterHyperVReserveMemoryMb = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("clusterInfraVmMemoryMb"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    clusterInfraVmMemoryMb = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("clusterTotalMemoryMb"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    clusterTotalMemoryMb = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("clusterNonFailoverVmMb"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    clusterNonFailoverVmMb = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("clusterMemoryUsedByVmsMb"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    clusterMemoryUsedByVmsMb = property.Value.GetDouble();
                    continue;
                }
            }
            return new EdgeClusterMemoryCapacity(Core.Optional.ToNullable(clusterFreeMemoryMb), Core.Optional.ToNullable(clusterUsedMemoryMb), Core.Optional.ToNullable(clusterFailoverMemoryMb), Core.Optional.ToNullable(clusterFragmentationMemoryMb), Core.Optional.ToNullable(clusterHyperVReserveMemoryMb), Core.Optional.ToNullable(clusterInfraVmMemoryMb), Core.Optional.ToNullable(clusterTotalMemoryMb), Core.Optional.ToNullable(clusterNonFailoverVmMb), Core.Optional.ToNullable(clusterMemoryUsedByVmsMb));
        }
    }
}
