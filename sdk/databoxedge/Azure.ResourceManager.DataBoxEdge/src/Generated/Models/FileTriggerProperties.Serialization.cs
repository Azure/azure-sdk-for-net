// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataBoxEdge.Models
{
    public partial class FileTriggerProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("sourceInfo"u8);
            writer.WriteObjectValue(SourceInfo);
            writer.WritePropertyName("sinkInfo"u8);
            writer.WriteObjectValue(SinkInfo);
            if (Optional.IsDefined(CustomContextTag))
            {
                if (CustomContextTag != null)
                {
                    writer.WritePropertyName("customContextTag"u8);
                    writer.WriteStringValue(CustomContextTag);
                }
                else
                {
                    writer.WriteNull("customContextTag");
                }
            }
            writer.WriteEndObject();
        }

        internal static FileTriggerProperties DeserializeFileTriggerProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            EdgeFileSourceInfo sourceInfo = default;
            DataBoxEdgeRoleSinkInfo sinkInfo = default;
            Optional<string> customContextTag = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("sourceInfo"u8))
                {
                    sourceInfo = EdgeFileSourceInfo.DeserializeEdgeFileSourceInfo(property.Value);
                    continue;
                }
                if (property.NameEquals("sinkInfo"u8))
                {
                    sinkInfo = DataBoxEdgeRoleSinkInfo.DeserializeDataBoxEdgeRoleSinkInfo(property.Value);
                    continue;
                }
                if (property.NameEquals("customContextTag"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        customContextTag = null;
                        continue;
                    }
                    customContextTag = property.Value.GetString();
                    continue;
                }
            }
            return new FileTriggerProperties(sourceInfo, sinkInfo, customContextTag.Value);
        }
    }
}
