// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.DataBoxEdge.Models
{
    /// <summary> ComponentType of the Kubernetes node. </summary>
    public readonly partial struct KubernetesComponentType : IEquatable<KubernetesComponentType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="KubernetesComponentType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public KubernetesComponentType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string InvalidValue = "Invalid";
        private const string ClusterValue = "Cluster";
        private const string NodeValue = "Node";
        private const string EtcdValue = "Etcd";
        private const string CNIValue = "CNI";
        private const string LoadBalancerValue = "LoadBalancer";

        /// <summary> Invalid. </summary>
        public static KubernetesComponentType Invalid { get; } = new KubernetesComponentType(InvalidValue);
        /// <summary> Cluster. </summary>
        public static KubernetesComponentType Cluster { get; } = new KubernetesComponentType(ClusterValue);
        /// <summary> Node. </summary>
        public static KubernetesComponentType Node { get; } = new KubernetesComponentType(NodeValue);
        /// <summary> Etcd. </summary>
        public static KubernetesComponentType Etcd { get; } = new KubernetesComponentType(EtcdValue);
        /// <summary> CNI. </summary>
        public static KubernetesComponentType CNI { get; } = new KubernetesComponentType(CNIValue);
        /// <summary> LoadBalancer. </summary>
        public static KubernetesComponentType LoadBalancer { get; } = new KubernetesComponentType(LoadBalancerValue);
        /// <summary> Determines if two <see cref="KubernetesComponentType"/> values are the same. </summary>
        public static bool operator ==(KubernetesComponentType left, KubernetesComponentType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="KubernetesComponentType"/> values are not the same. </summary>
        public static bool operator !=(KubernetesComponentType left, KubernetesComponentType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="KubernetesComponentType"/>. </summary>
        public static implicit operator KubernetesComponentType(string value) => new KubernetesComponentType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is KubernetesComponentType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(KubernetesComponentType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
