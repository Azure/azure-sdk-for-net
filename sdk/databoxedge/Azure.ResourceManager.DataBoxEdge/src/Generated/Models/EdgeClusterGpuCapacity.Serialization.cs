// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataBoxEdge.Models
{
    public partial class EdgeClusterGpuCapacity : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(GpuType))
            {
                writer.WritePropertyName("gpuType"u8);
                writer.WriteStringValue(GpuType);
            }
            if (Optional.IsDefined(GpuUsedUnitsCount))
            {
                writer.WritePropertyName("gpuUsedUnitsCount"u8);
                writer.WriteNumberValue(GpuUsedUnitsCount.Value);
            }
            if (Optional.IsDefined(GpuFreeUnitsCount))
            {
                writer.WritePropertyName("gpuFreeUnitsCount"u8);
                writer.WriteNumberValue(GpuFreeUnitsCount.Value);
            }
            if (Optional.IsDefined(GpuReservedForFailoverUnitsCount))
            {
                writer.WritePropertyName("gpuReservedForFailoverUnitsCount"u8);
                writer.WriteNumberValue(GpuReservedForFailoverUnitsCount.Value);
            }
            if (Optional.IsDefined(GpuTotalUnitsCount))
            {
                writer.WritePropertyName("gpuTotalUnitsCount"u8);
                writer.WriteNumberValue(GpuTotalUnitsCount.Value);
            }
            writer.WriteEndObject();
        }

        internal static EdgeClusterGpuCapacity DeserializeEdgeClusterGpuCapacity(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> gpuType = default;
            Optional<int> gpuUsedUnitsCount = default;
            Optional<int> gpuFreeUnitsCount = default;
            Optional<int> gpuReservedForFailoverUnitsCount = default;
            Optional<int> gpuTotalUnitsCount = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("gpuType"u8))
                {
                    gpuType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("gpuUsedUnitsCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    gpuUsedUnitsCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("gpuFreeUnitsCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    gpuFreeUnitsCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("gpuReservedForFailoverUnitsCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    gpuReservedForFailoverUnitsCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("gpuTotalUnitsCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    gpuTotalUnitsCount = property.Value.GetInt32();
                    continue;
                }
            }
            return new EdgeClusterGpuCapacity(gpuType.Value, Optional.ToNullable(gpuUsedUnitsCount), Optional.ToNullable(gpuFreeUnitsCount), Optional.ToNullable(gpuReservedForFailoverUnitsCount), Optional.ToNullable(gpuTotalUnitsCount));
        }
    }
}
