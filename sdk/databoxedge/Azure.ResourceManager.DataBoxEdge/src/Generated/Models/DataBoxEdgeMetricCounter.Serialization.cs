// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataBoxEdge.Models
{
    public partial class DataBoxEdgeMetricCounter : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("name");
            writer.WriteStringValue(Name);
            if (Optional.IsDefined(Instance))
            {
                writer.WritePropertyName("instance");
                writer.WriteStringValue(Instance);
            }
            if (Optional.IsCollectionDefined(DimensionFilter))
            {
                writer.WritePropertyName("dimensionFilter");
                writer.WriteStartArray();
                foreach (var item in DimensionFilter)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(AdditionalDimensions))
            {
                writer.WritePropertyName("additionalDimensions");
                writer.WriteStartArray();
                foreach (var item in AdditionalDimensions)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static DataBoxEdgeMetricCounter DeserializeDataBoxEdgeMetricCounter(JsonElement element)
        {
            string name = default;
            Optional<string> instance = default;
            Optional<IList<DataBoxEdgeMetricDimension>> dimensionFilter = default;
            Optional<IList<DataBoxEdgeMetricDimension>> additionalDimensions = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("instance"))
                {
                    instance = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("dimensionFilter"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<DataBoxEdgeMetricDimension> array = new List<DataBoxEdgeMetricDimension>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(DataBoxEdgeMetricDimension.DeserializeDataBoxEdgeMetricDimension(item));
                    }
                    dimensionFilter = array;
                    continue;
                }
                if (property.NameEquals("additionalDimensions"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<DataBoxEdgeMetricDimension> array = new List<DataBoxEdgeMetricDimension>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(DataBoxEdgeMetricDimension.DeserializeDataBoxEdgeMetricDimension(item));
                    }
                    additionalDimensions = array;
                    continue;
                }
            }
            return new DataBoxEdgeMetricCounter(name, instance.Value, Optional.ToList(dimensionFilter), Optional.ToList(additionalDimensions));
        }
    }
}
