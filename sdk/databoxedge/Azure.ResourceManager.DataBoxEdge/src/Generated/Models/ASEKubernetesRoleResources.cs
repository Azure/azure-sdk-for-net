// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;

namespace Azure.ResourceManager.DataBoxEdge.Models
{
    /// <summary> ASEKubernetes Role resources. </summary>
    public partial class ASEKubernetesRoleResources
    {
        /// <summary> Initializes a new instance of ASEKubernetesRoleResources. </summary>
        public ASEKubernetesRoleResources()
        {
        }

        /// <summary> Initializes a new instance of ASEKubernetesRoleResources. </summary>
        /// <param name="storage"> ASEKubernetes role Storage resource. </param>
        /// <param name="compute"> ASEKubernetes role compute resource. </param>
        internal ASEKubernetesRoleResources(ASEKubernetesRoleStorage storage, ASEKubernetesRoleCompute compute)
        {
            Storage = storage;
            Compute = compute;
        }

        /// <summary> ASEKubernetes role Storage resource. </summary>
        internal ASEKubernetesRoleStorage Storage { get; set; }
        /// <summary> Mount points of shares in role(s). </summary>
        public IList<DataBoxEdgeMountPointMap> StorageEndpoints
        {
            get => Storage is null ? default : Storage.Endpoints;
            set
            {
                if (Storage is null)
                    Storage = new ASEKubernetesRoleStorage();
                Storage.Endpoints = value;
            }
        }

        /// <summary> ASEKubernetes role compute resource. </summary>
        public ASEKubernetesRoleCompute Compute { get; set; }
    }
}
