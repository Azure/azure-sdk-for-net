// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.DataBoxEdge.Models
{
    /// <summary>
    /// Represents a single node in a Data box Edge/Gateway device
    /// Gateway devices, standalone Edge devices and a single node cluster Edge device will all have 1 node
    /// Multi-node Edge devices will have more than 1 nodes
    /// </summary>
    public partial class Node : ResourceData
    {
        /// <summary> Initializes a new instance of Node. </summary>
        public Node()
        {
        }

        /// <summary> Initializes a new instance of Node. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="nodeStatus"> The current status of the individual node. </param>
        /// <param name="nodeChassisSerialNumber"> Serial number of the Chassis. </param>
        /// <param name="nodeSerialNumber"> Serial number of the individual node. </param>
        /// <param name="nodeDisplayName"> Display Name of the individual node. </param>
        /// <param name="nodeFriendlySoftwareVersion"> Friendly software version name that is currently installed on the node. </param>
        /// <param name="nodeHcsVersion"> HCS version that is currently installed on the node. </param>
        /// <param name="nodeInstanceId"> Guid instance id of the node. </param>
        internal Node(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, NodeStatus? nodeStatus, string nodeChassisSerialNumber, string nodeSerialNumber, string nodeDisplayName, string nodeFriendlySoftwareVersion, string nodeHcsVersion, string nodeInstanceId) : base(id, name, resourceType, systemData)
        {
            NodeStatus = nodeStatus;
            NodeChassisSerialNumber = nodeChassisSerialNumber;
            NodeSerialNumber = nodeSerialNumber;
            NodeDisplayName = nodeDisplayName;
            NodeFriendlySoftwareVersion = nodeFriendlySoftwareVersion;
            NodeHcsVersion = nodeHcsVersion;
            NodeInstanceId = nodeInstanceId;
        }

        /// <summary> The current status of the individual node. </summary>
        public NodeStatus? NodeStatus { get; }
        /// <summary> Serial number of the Chassis. </summary>
        public string NodeChassisSerialNumber { get; }
        /// <summary> Serial number of the individual node. </summary>
        public string NodeSerialNumber { get; }
        /// <summary> Display Name of the individual node. </summary>
        public string NodeDisplayName { get; }
        /// <summary> Friendly software version name that is currently installed on the node. </summary>
        public string NodeFriendlySoftwareVersion { get; }
        /// <summary> HCS version that is currently installed on the node. </summary>
        public string NodeHcsVersion { get; }
        /// <summary> Guid instance id of the node. </summary>
        public string NodeInstanceId { get; }
    }
}
