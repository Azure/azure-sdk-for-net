// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.DataBoxEdge.Models
{
    /// <summary> IoT role properties. </summary>
    public partial class IotRoleProperties
    {
        /// <summary> Initializes a new instance of IotRoleProperties. </summary>
        /// <param name="hostPlatform"> Host OS supported by the IoT role. </param>
        /// <param name="iotDeviceDetails"> Metadata of IoT device/IoT Edge device to be configured. </param>
        /// <param name="iotEdgeDeviceDetails"> Metadata of IoT device/IoT Edge device to be configured. </param>
        /// <param name="roleStatus"> Role status. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="iotDeviceDetails"/> or <paramref name="iotEdgeDeviceDetails"/> is null. </exception>
        public IotRoleProperties(DataBoxEdgeOSPlatformType hostPlatform, EdgeIotDeviceInfo iotDeviceDetails, EdgeIotDeviceInfo iotEdgeDeviceDetails, DataBoxEdgeRoleStatus roleStatus)
        {
            Argument.AssertNotNull(iotDeviceDetails, nameof(iotDeviceDetails));
            Argument.AssertNotNull(iotEdgeDeviceDetails, nameof(iotEdgeDeviceDetails));

            HostPlatform = hostPlatform;
            IotDeviceDetails = iotDeviceDetails;
            IotEdgeDeviceDetails = iotEdgeDeviceDetails;
            ShareMappings = new ChangeTrackingList<DataBoxEdgeMountPointMap>();
            RoleStatus = roleStatus;
        }

        /// <summary> Initializes a new instance of IotRoleProperties. </summary>
        /// <param name="hostPlatform"> Host OS supported by the IoT role. </param>
        /// <param name="iotDeviceDetails"> Metadata of IoT device/IoT Edge device to be configured. </param>
        /// <param name="iotEdgeDeviceDetails"> Metadata of IoT device/IoT Edge device to be configured. </param>
        /// <param name="shareMappings"> Mount points of shares in role(s). </param>
        /// <param name="iotEdgeAgentInfo"> IoT edge agent details is optional, this will be used for download system Agent module while bootstrapping IoT Role if specified. </param>
        /// <param name="hostPlatformType"> Platform where the Iot runtime is hosted. </param>
        /// <param name="computeResource"> Compute infrastructure Resource. </param>
        /// <param name="roleStatus"> Role status. </param>
        internal IotRoleProperties(DataBoxEdgeOSPlatformType hostPlatform, EdgeIotDeviceInfo iotDeviceDetails, EdgeIotDeviceInfo iotEdgeDeviceDetails, IList<DataBoxEdgeMountPointMap> shareMappings, IotEdgeAgentInfo iotEdgeAgentInfo, HostPlatformType? hostPlatformType, EdgeComputeResourceInfo computeResource, DataBoxEdgeRoleStatus roleStatus)
        {
            HostPlatform = hostPlatform;
            IotDeviceDetails = iotDeviceDetails;
            IotEdgeDeviceDetails = iotEdgeDeviceDetails;
            ShareMappings = shareMappings;
            IotEdgeAgentInfo = iotEdgeAgentInfo;
            HostPlatformType = hostPlatformType;
            ComputeResource = computeResource;
            RoleStatus = roleStatus;
        }

        /// <summary> Host OS supported by the IoT role. </summary>
        public DataBoxEdgeOSPlatformType HostPlatform { get; set; }
        /// <summary> Metadata of IoT device/IoT Edge device to be configured. </summary>
        public EdgeIotDeviceInfo IotDeviceDetails { get; set; }
        /// <summary> Metadata of IoT device/IoT Edge device to be configured. </summary>
        public EdgeIotDeviceInfo IotEdgeDeviceDetails { get; set; }
        /// <summary> Mount points of shares in role(s). </summary>
        public IList<DataBoxEdgeMountPointMap> ShareMappings { get; set; }
        /// <summary> IoT edge agent details is optional, this will be used for download system Agent module while bootstrapping IoT Role if specified. </summary>
        public IotEdgeAgentInfo IotEdgeAgentInfo { get; set; }
        /// <summary> Platform where the Iot runtime is hosted. </summary>
        public HostPlatformType? HostPlatformType { get; }
        /// <summary> Compute infrastructure Resource. </summary>
        public EdgeComputeResourceInfo ComputeResource { get; set; }
        /// <summary> Role status. </summary>
        public DataBoxEdgeRoleStatus RoleStatus { get; set; }
    }
}
