// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataBoxEdge.Models
{
    public partial class DataBoxEdgeDeviceProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(ResourceMoveDetails))
            {
                writer.WritePropertyName("resourceMoveDetails"u8);
                writer.WriteObjectValue(ResourceMoveDetails);
            }
            if (Optional.IsDefined(EdgeProfile))
            {
                writer.WritePropertyName("edgeProfile"u8);
                writer.WriteObjectValue(EdgeProfile);
            }
            if (Optional.IsDefined(DataResidency))
            {
                writer.WritePropertyName("dataResidency"u8);
                writer.WriteObjectValue(DataResidency);
            }
            if (Optional.IsDefined(ComputeVersionInformation))
            {
                writer.WritePropertyName("computeVersionInformation"u8);
                writer.WriteObjectValue(ComputeVersionInformation);
            }
            writer.WriteEndObject();
        }

        internal static DataBoxEdgeDeviceProperties DeserializeDataBoxEdgeDeviceProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<bool> isIotRoleAllowed = default;
            Optional<DataBoxEdgeDeviceStatus> dataBoxEdgeDeviceStatus = default;
            Optional<string> serialNumber = default;
            Optional<string> description = default;
            Optional<string> modelDescription = default;
            Optional<DataBoxEdgeDeviceType> deviceType = default;
            Optional<string> friendlyName = default;
            Optional<string> culture = default;
            Optional<string> deviceModel = default;
            Optional<string> deviceSoftwareVersion = default;
            Optional<long> deviceLocalCapacity = default;
            Optional<string> timeZone = default;
            Optional<string> deviceHcsVersion = default;
            Optional<IReadOnlyList<DataBoxEdgeRoleType>> configuredRoleTypes = default;
            Optional<int> nodeCount = default;
            Optional<DataBoxEdgeResourceMoveDetails> resourceMoveDetails = default;
            Optional<EdgeProfile> edgeProfile = default;
            Optional<DataResidency> dataResidency = default;
            Optional<ComputeVersionInformation> computeVersionInformation = default;
            Optional<string> kubernetesPlatform = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("isIoTRoleAllowed"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    isIotRoleAllowed = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("dataBoxEdgeDeviceStatus"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    dataBoxEdgeDeviceStatus = new DataBoxEdgeDeviceStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("serialNumber"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        serialNumber = null;
                        continue;
                    }
                    serialNumber = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("description"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        description = null;
                        continue;
                    }
                    description = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("modelDescription"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        modelDescription = null;
                        continue;
                    }
                    modelDescription = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("deviceType"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    deviceType = new DataBoxEdgeDeviceType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("friendlyName"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        friendlyName = null;
                        continue;
                    }
                    friendlyName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("culture"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        culture = null;
                        continue;
                    }
                    culture = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("deviceModel"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        deviceModel = null;
                        continue;
                    }
                    deviceModel = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("deviceSoftwareVersion"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        deviceSoftwareVersion = null;
                        continue;
                    }
                    deviceSoftwareVersion = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("deviceLocalCapacity"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    deviceLocalCapacity = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("timeZone"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        timeZone = null;
                        continue;
                    }
                    timeZone = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("deviceHcsVersion"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        deviceHcsVersion = null;
                        continue;
                    }
                    deviceHcsVersion = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("configuredRoleTypes"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        configuredRoleTypes = null;
                        continue;
                    }
                    List<DataBoxEdgeRoleType> array = new List<DataBoxEdgeRoleType>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(new DataBoxEdgeRoleType(item.GetString()));
                    }
                    configuredRoleTypes = array;
                    continue;
                }
                if (property.NameEquals("nodeCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    nodeCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("resourceMoveDetails"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    resourceMoveDetails = DataBoxEdgeResourceMoveDetails.DeserializeDataBoxEdgeResourceMoveDetails(property.Value);
                    continue;
                }
                if (property.NameEquals("edgeProfile"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    edgeProfile = EdgeProfile.DeserializeEdgeProfile(property.Value);
                    continue;
                }
                if (property.NameEquals("dataResidency"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    dataResidency = DataResidency.DeserializeDataResidency(property.Value);
                    continue;
                }
                if (property.NameEquals("computeVersionInformation"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    computeVersionInformation = ComputeVersionInformation.DeserializeComputeVersionInformation(property.Value);
                    continue;
                }
                if (property.NameEquals("kubernetesPlatform"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        kubernetesPlatform = null;
                        continue;
                    }
                    kubernetesPlatform = property.Value.GetString();
                    continue;
                }
            }
            return new DataBoxEdgeDeviceProperties(Optional.ToNullable(isIotRoleAllowed), Optional.ToNullable(dataBoxEdgeDeviceStatus), serialNumber.Value, description.Value, modelDescription.Value, Optional.ToNullable(deviceType), friendlyName.Value, culture.Value, deviceModel.Value, deviceSoftwareVersion.Value, Optional.ToNullable(deviceLocalCapacity), timeZone.Value, deviceHcsVersion.Value, Optional.ToList(configuredRoleTypes), Optional.ToNullable(nodeCount), resourceMoveDetails.Value, edgeProfile.Value, dataResidency.Value, computeVersionInformation.Value, kubernetesPlatform.Value);
        }
    }
}
