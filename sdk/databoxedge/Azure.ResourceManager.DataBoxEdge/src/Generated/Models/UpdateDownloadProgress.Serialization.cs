// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataBoxEdge.Models
{
    public partial class UpdateDownloadProgress
    {
        internal static UpdateDownloadProgress DeserializeUpdateDownloadProgress(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<DataBoxEdgeDownloadPhase> downloadPhase = default;
            Optional<int> percentComplete = default;
            Optional<double> totalBytesToDownload = default;
            Optional<double> totalBytesDownloaded = default;
            Optional<int> numberOfUpdatesToDownload = default;
            Optional<int> numberOfUpdatesDownloaded = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("downloadPhase"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    downloadPhase = new DataBoxEdgeDownloadPhase(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("percentComplete"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    percentComplete = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("totalBytesToDownload"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    totalBytesToDownload = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("totalBytesDownloaded"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    totalBytesDownloaded = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("numberOfUpdatesToDownload"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    numberOfUpdatesToDownload = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("numberOfUpdatesDownloaded"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    numberOfUpdatesDownloaded = property.Value.GetInt32();
                    continue;
                }
            }
            return new UpdateDownloadProgress(Optional.ToNullable(downloadPhase), Optional.ToNullable(percentComplete), Optional.ToNullable(totalBytesToDownload), Optional.ToNullable(totalBytesDownloaded), Optional.ToNullable(numberOfUpdatesToDownload), Optional.ToNullable(numberOfUpdatesDownloaded));
        }
    }
}
