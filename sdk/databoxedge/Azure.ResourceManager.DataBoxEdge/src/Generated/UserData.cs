// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.DataBoxEdge.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.DataBoxEdge
{
    /// <summary> A class representing the User data model. </summary>
    public partial class UserData : ResourceData
    {
        /// <summary> Initializes a new instance of UserData. </summary>
        /// <param name="userType"> Type of the user. </param>
        public UserData(UserType userType)
        {
            ShareAccessRights = new ChangeTrackingList<ShareAccessRight>();
            UserType = userType;
        }

        /// <summary> Initializes a new instance of UserData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="encryptedPassword"> The password details. </param>
        /// <param name="shareAccessRights"> List of shares that the user has rights on. This field should not be specified during user creation. </param>
        /// <param name="userType"> Type of the user. </param>
        internal UserData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, AsymmetricEncryptedSecret encryptedPassword, IReadOnlyList<ShareAccessRight> shareAccessRights, UserType userType) : base(id, name, resourceType, systemData)
        {
            EncryptedPassword = encryptedPassword;
            ShareAccessRights = shareAccessRights;
            UserType = userType;
        }

        /// <summary> The password details. </summary>
        public AsymmetricEncryptedSecret EncryptedPassword { get; set; }
        /// <summary> List of shares that the user has rights on. This field should not be specified during user creation. </summary>
        public IReadOnlyList<ShareAccessRight> ShareAccessRights { get; }
        /// <summary> Type of the user. </summary>
        public UserType UserType { get; set; }
    }
}
