// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.AI.Language.QA.Models
{
    /// <summary> Context associated with Qna. </summary>
    internal partial class ContextDTO
    {
        /// <summary> Initializes a new instance of ContextDTO. </summary>
        public ContextDTO()
        {
            Prompts = new ChangeTrackingList<PromptDTO>();
        }

        /// <summary> Initializes a new instance of ContextDTO. </summary>
        /// <param name="isContextOnly">
        /// To mark if a prompt is relevant only with a previous question or not.
        /// true - Do not include this QnA as search result for queries without context
        /// false - ignores context and includes this QnA in search result.
        /// </param>
        /// <param name="prompts"> List of prompts associated with the answer. </param>
        internal ContextDTO(bool? isContextOnly, IList<PromptDTO> prompts)
        {
            IsContextOnly = isContextOnly;
            Prompts = prompts;
        }

        /// <summary>
        /// To mark if a prompt is relevant only with a previous question or not.
        /// true - Do not include this QnA as search result for queries without context
        /// false - ignores context and includes this QnA in search result.
        /// </summary>
        public bool? IsContextOnly { get; set; }
        /// <summary> List of prompts associated with the answer. </summary>
        public IList<PromptDTO> Prompts { get; }
    }
}
