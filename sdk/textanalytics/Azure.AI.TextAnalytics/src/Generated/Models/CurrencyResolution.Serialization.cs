// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.AI.TextAnalytics.Models;
using Azure.Core;

namespace Azure.AI.TextAnalytics
{
    public partial class CurrencyResolution : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Iso4217))
            {
                writer.WritePropertyName("iso4217");
                writer.WriteStringValue(Iso4217);
            }
            writer.WritePropertyName("unit");
            writer.WriteStringValue(Unit);
            writer.WritePropertyName("value");
            writer.WriteNumberValue(Value);
            writer.WritePropertyName("resolutionKind");
            writer.WriteStringValue(ResolutionKind.ToString());
            writer.WriteEndObject();
        }

        internal static CurrencyResolution DeserializeCurrencyResolution(JsonElement element)
        {
            Optional<string> iso4217 = default;
            string unit = default;
            double value = default;
            ResolutionKind resolutionKind = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("iso4217"))
                {
                    iso4217 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("unit"))
                {
                    unit = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("value"))
                {
                    value = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("resolutionKind"))
                {
                    resolutionKind = new ResolutionKind(property.Value.GetString());
                    continue;
                }
            }
            return new CurrencyResolution(resolutionKind, iso4217.Value, unit, value);
        }
    }
}
