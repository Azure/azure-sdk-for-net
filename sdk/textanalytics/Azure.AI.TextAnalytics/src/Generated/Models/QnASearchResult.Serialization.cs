// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Linq;
using System.Text.Json;
using Azure.AI.TextAnalytics;
using Azure.Core;

namespace Azure.AI.TextAnalytics.Models
{
    public partial class QnASearchResult
    {
        internal static QnASearchResult DeserializeQnASearchResult(JsonElement element)
        {
            IReadOnlyList<string> questions = default;
            string answer = default;
            double score = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("questions"))
                {
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    questions = array;
                    continue;
                }
                if (property.NameEquals("answer"))
                {
                    answer = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("score"))
                {
                    score = property.Value.GetDouble();
                    continue;
                }
            }

            return new QnASearchResult(questions.ToList<string>(), answer, score);
        }
    }
}
