// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.AI.TextAnalytics;

namespace Azure.AI.TextAnalytics.Models
{
    /// <summary> The JobMetadata. </summary>
    internal partial class JobMetadata
    {
        /// <summary> Initializes a new instance of JobMetadata. </summary>
        /// <param name="createdDateTime"></param>
        /// <param name="jobId"></param>
        /// <param name="lastUpdateDateTime"></param>
        /// <param name="status"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="jobId"/> is null. </exception>
        internal JobMetadata(DateTimeOffset createdDateTime, string jobId, DateTimeOffset lastUpdateDateTime, TextAnalyticsOperationStatus status)
        {
            if (jobId == null)
            {
                throw new ArgumentNullException(nameof(jobId));
            }

            CreatedDateTime = createdDateTime;
            JobId = jobId;
            LastUpdateDateTime = lastUpdateDateTime;
            Status = status;
        }

        /// <summary> Initializes a new instance of JobMetadata. </summary>
        /// <param name="createdDateTime"></param>
        /// <param name="expirationDateTime"></param>
        /// <param name="jobId"></param>
        /// <param name="lastUpdateDateTime"></param>
        /// <param name="status"></param>
        internal JobMetadata(DateTimeOffset createdDateTime, DateTimeOffset? expirationDateTime, string jobId, DateTimeOffset lastUpdateDateTime, TextAnalyticsOperationStatus status)
        {
            CreatedDateTime = createdDateTime;
            ExpirationDateTime = expirationDateTime;
            JobId = jobId;
            LastUpdateDateTime = lastUpdateDateTime;
            Status = status;
        }

        /// <summary> Gets the created date time. </summary>
        public DateTimeOffset CreatedDateTime { get; }
        /// <summary> Gets the expiration date time. </summary>
        public DateTimeOffset? ExpirationDateTime { get; }
        /// <summary> Gets the last update date time. </summary>
        public DateTimeOffset LastUpdateDateTime { get; }
        /// <summary> Gets the status. </summary>
        public TextAnalyticsOperationStatus Status { get; }
    }
}
