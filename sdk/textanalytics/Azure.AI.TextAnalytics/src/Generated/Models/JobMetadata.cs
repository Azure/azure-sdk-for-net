// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.AI.TextAnalytics;

namespace Azure.AI.TextAnalytics.Models
{
    /// <summary> The JobMetadata. </summary>
    internal partial class JobMetadata
    {
        /// <summary> Initializes a new instance of JobMetadata. </summary>
        /// <param name="createdDateTime"> . </param>
        /// <param name="jobId"> . </param>
        /// <param name="lastUpdateDateTime"> . </param>
        /// <param name="status"> . </param>
        /// <exception cref="ArgumentNullException"> <paramref name="jobId"/> is null. </exception>
        internal JobMetadata(DateTimeOffset createdDateTime, string jobId, DateTimeOffset lastUpdateDateTime, JobStatus status)
        {
            if (jobId == null)
            {
                throw new ArgumentNullException(nameof(jobId));
            }

            CreatedDateTime = createdDateTime;
            JobId = jobId;
            LastUpdateDateTime = lastUpdateDateTime;
            Status = status;
        }

        /// <summary> Initializes a new instance of JobMetadata. </summary>
        /// <param name="createdDateTime"> . </param>
        /// <param name="displayName"> . </param>
        /// <param name="expirationDateTime"> . </param>
        /// <param name="jobId"> . </param>
        /// <param name="lastUpdateDateTime"> . </param>
        /// <param name="status"> . </param>
        internal JobMetadata(DateTimeOffset createdDateTime, string displayName, DateTimeOffset? expirationDateTime, string jobId, DateTimeOffset lastUpdateDateTime, JobStatus status)
        {
            CreatedDateTime = createdDateTime;
            DisplayName = displayName;
            ExpirationDateTime = expirationDateTime;
            JobId = jobId;
            LastUpdateDateTime = lastUpdateDateTime;
            Status = status;
        }

        public DateTimeOffset CreatedDateTime { get; }
        public string DisplayName { get; }
        public DateTimeOffset? ExpirationDateTime { get; }
        public DateTimeOffset LastUpdateDateTime { get; }
        public JobStatus Status { get; }
    }
}
