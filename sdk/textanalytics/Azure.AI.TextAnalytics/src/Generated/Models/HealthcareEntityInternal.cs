// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.AI.TextAnalytics.Models;
using Azure.Core;

namespace Azure.AI.TextAnalytics
{
    /// <summary> The HealthcareEntity. </summary>
    internal partial class HealthcareEntityInternal : Entity
    {
        /// <summary> Initializes a new instance of HealthcareEntityInternal. </summary>
        /// <param name="text"> Entity text as appears in the request. </param>
        /// <param name="category"> Entity type. </param>
        /// <param name="offset"> Start position for the entity text. Use of different &apos;stringIndexType&apos; values can affect the offset returned. </param>
        /// <param name="length"> Length for the entity text. Use of different &apos;stringIndexType&apos; values can affect the length returned. </param>
        /// <param name="confidenceScore"> Confidence score between 0 and 1 of the extracted entity. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="text"/> or <paramref name="category"/> is null. </exception>
        internal HealthcareEntityInternal(string text, string category, int offset, int length, double confidenceScore) : base(text, category, offset, length, confidenceScore)
        {
            if (text == null)
            {
                throw new ArgumentNullException(nameof(text));
            }
            if (category == null)
            {
                throw new ArgumentNullException(nameof(category));
            }

            Links = new ChangeTrackingList<EntityDataSource>();
        }

        /// <summary> Initializes a new instance of HealthcareEntityInternal. </summary>
        /// <param name="text"> Entity text as appears in the request. </param>
        /// <param name="category"> Entity type. </param>
        /// <param name="subcategory"> (Optional) Entity sub type. </param>
        /// <param name="offset"> Start position for the entity text. Use of different &apos;stringIndexType&apos; values can affect the offset returned. </param>
        /// <param name="length"> Length for the entity text. Use of different &apos;stringIndexType&apos; values can affect the length returned. </param>
        /// <param name="confidenceScore"> Confidence score between 0 and 1 of the extracted entity. </param>
        /// <param name="assertion"> . </param>
        /// <param name="name"> Preferred name for the entity. Example: &apos;histologically&apos; would have a &apos;name&apos; of &apos;histologic&apos;. </param>
        /// <param name="links"> Entity references in known data sources. </param>
        internal HealthcareEntityInternal(string text, string category, string subcategory, int offset, int length, double confidenceScore, HealthcareAssertion assertion, string name, IReadOnlyList<EntityDataSource> links) : base(text, category, subcategory, offset, length, confidenceScore)
        {
            Assertion = assertion;
            Name = name;
            Links = links;
        }

        public HealthcareAssertion Assertion { get; }
        /// <summary> Preferred name for the entity. Example: &apos;histologically&apos; would have a &apos;name&apos; of &apos;histologic&apos;. </summary>
        public string Name { get; }
        /// <summary> Entity references in known data sources. </summary>
        public IReadOnlyList<EntityDataSource> Links { get; }
    }
}
