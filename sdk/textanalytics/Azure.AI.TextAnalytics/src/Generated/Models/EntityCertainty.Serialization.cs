// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.AI.TextAnalytics
{
    internal static partial class EntityCertaintyExtensions
    {
        public static string ToSerialString(this EntityCertainty value) => value switch
        {
            EntityCertainty.Positive => "Positive",
            EntityCertainty.PositivePossible => "PositivePossible",
            EntityCertainty.NeutralPossible => "NeutralPossible",
            EntityCertainty.NegativePossible => "NegativePossible",
            EntityCertainty.Negative => "Negative",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown EntityCertainty value.")
        };

        public static EntityCertainty ToEntityCertainty(this string value)
        {
            if (string.Equals(value, "Positive", StringComparison.InvariantCultureIgnoreCase)) return EntityCertainty.Positive;
            if (string.Equals(value, "PositivePossible", StringComparison.InvariantCultureIgnoreCase)) return EntityCertainty.PositivePossible;
            if (string.Equals(value, "NeutralPossible", StringComparison.InvariantCultureIgnoreCase)) return EntityCertainty.NeutralPossible;
            if (string.Equals(value, "NegativePossible", StringComparison.InvariantCultureIgnoreCase)) return EntityCertainty.NegativePossible;
            if (string.Equals(value, "Negative", StringComparison.InvariantCultureIgnoreCase)) return EntityCertainty.Negative;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown EntityCertainty value.");
        }
    }
}
