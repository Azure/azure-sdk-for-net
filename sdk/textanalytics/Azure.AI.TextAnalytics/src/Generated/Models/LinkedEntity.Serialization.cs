// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.AI.TextAnalytics.Models
{
    internal partial class LinkedEntity
    {
        internal static LinkedEntity DeserializeLinkedEntity(JsonElement element)
        {
            string name = default;
            IReadOnlyList<Match> matches = default;
            string language = default;
            Optional<string> id = default;
            string url = default;
            string dataSource = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("matches"))
                {
                    List<Match> array = new List<Match>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(Match.DeserializeMatch(item));
                    }
                    matches = array;
                    continue;
                }
                if (property.NameEquals("language"))
                {
                    language = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("id"))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("url"))
                {
                    url = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("dataSource"))
                {
                    dataSource = property.Value.GetString();
                    continue;
                }
            }
            return new LinkedEntity(name, matches, language, id.Value, url, dataSource);
        }
    }
}
