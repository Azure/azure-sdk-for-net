// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.AI.TextAnalytics;

namespace Azure.AI.TextAnalytics.Models
{
    /// <summary> The TasksStateTasksSentimentAnalysisTasksItem. </summary>
    internal partial class SentimentAnalysisTasksItem : TaskState
    {
        /// <summary> Initializes a new instance of SentimentAnalysisTasksItem. </summary>
        /// <param name="lastUpdateDateTime"> . </param>
        /// <param name="taskName"> . </param>
        /// <param name="status"> . </param>
        /// <exception cref="ArgumentNullException"> <paramref name="taskName"/> is null. </exception>
        internal SentimentAnalysisTasksItem(DateTimeOffset lastUpdateDateTime, string taskName, TextAnalyticsOperationStatus status) : base(lastUpdateDateTime, taskName, status)
        {
            if (taskName == null)
            {
                throw new ArgumentNullException(nameof(taskName));
            }
        }

        /// <summary> Initializes a new instance of SentimentAnalysisTasksItem. </summary>
        /// <param name="lastUpdateDateTime"> . </param>
        /// <param name="taskName"> . </param>
        /// <param name="status"> . </param>
        /// <param name="results"> . </param>
        /// <exception cref="ArgumentNullException"> <paramref name="taskName"/> is null. </exception>
        internal SentimentAnalysisTasksItem(DateTimeOffset lastUpdateDateTime, string taskName, TextAnalyticsOperationStatus status, SentimentResponse results) : base(lastUpdateDateTime, taskName, status)
        {
            if (taskName == null)
            {
                throw new ArgumentNullException(nameof(taskName));
            }

            Results = results;
        }

        public SentimentResponse Results { get; }
    }
}
