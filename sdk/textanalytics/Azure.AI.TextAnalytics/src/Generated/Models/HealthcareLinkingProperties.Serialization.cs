// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.AI.TextAnalytics;
using Azure.Core;

namespace Azure.AI.TextAnalytics.Models
{
    internal partial class HealthcareLinkingProperties
    {
        internal static HealthcareLinkingProperties DeserializeHealthcareLinkingProperties(JsonElement element)
        {
            Optional<HealthcareEntityAssertion> assertion = default;
            Optional<string> name = default;
            Optional<IReadOnlyList<EntityDataSource>> links = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("assertion"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    assertion = HealthcareEntityAssertion.DeserializeHealthcareEntityAssertion(property.Value);
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("links"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<EntityDataSource> array = new List<EntityDataSource>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(EntityDataSource.DeserializeEntityDataSource(item));
                    }
                    links = array;
                    continue;
                }
            }
            return new HealthcareLinkingProperties(assertion.Value, name.Value, Optional.ToList(links));
        }
    }
}
