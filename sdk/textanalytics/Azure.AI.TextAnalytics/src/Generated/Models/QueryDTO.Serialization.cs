// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.AI.TextAnalytics.Models
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// POST body schema to query the knowledgebase.
    /// </summary>
    public partial class QueryDTO
    {
        /// <summary>
        /// Initializes a new instance of the QueryDTO class.
        /// </summary>
        public QueryDTO()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the QueryDTO class.
        /// </summary>
        /// <param name="question">User question to query against the knowledge base.</param>
        /// <param name="isTest"></param>
        public QueryDTO(
            string question = default(string), //            //string qnaId = default(string), , int? top = default(int?), string userId = default(string), 
            bool? isTest = default(bool?) //, double? scoreThreshold = default(double?), QueryDTOContext context = default(QueryDTOContext), string rankerType = default(string), IList<MetadataDTO> strictFilters = default(IList<MetadataDTO>), string strictFiltersCompoundOperationType = default(string)
            )
        {
            //QnaId = qnaId;
            Question = question;
            //Top = top;
            //UserId = userId;
            //IsTest = isTest;
            //ScoreThreshold = scoreThreshold;
            //Context = context;
            //RankerType = rankerType;
            //StrictFilters = strictFilters;
            //StrictFiltersCompoundOperationType = strictFiltersCompoundOperationType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets user question to query against the knowledge base.
        /// </summary>
       // [JsonProperty(PropertyName = "question")]
        public string Question { get; set; }

        
        /// <summary>
        /// Gets or sets query against the test index.
        /// </summary>
        //[JsonProperty(PropertyName = "isTest")]
        public bool? IsTest { get; set; }

        /// <summary>
        /// Gets or sets threshold for answers returned based on score.
        /// </summary>
        //[JsonProperty(PropertyName = "scoreThreshold")]
        public double? ScoreThreshold { get; set; }       

    }
}
