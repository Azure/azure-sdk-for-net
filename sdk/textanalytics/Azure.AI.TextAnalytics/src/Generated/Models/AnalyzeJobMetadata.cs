// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.AI.TextAnalytics;

namespace Azure.AI.TextAnalytics.Models
{
    /// <summary> The AnalyzeJobMetadata. </summary>
    internal partial class AnalyzeJobMetadata : JobMetadata
    {
        /// <summary> Initializes a new instance of AnalyzeJobMetadata. </summary>
        /// <param name="createdDateTime"> . </param>
        /// <param name="jobId"> . </param>
        /// <param name="lastUpdateDateTime"> . </param>
        /// <param name="status"> . </param>
        /// <exception cref="ArgumentNullException"> <paramref name="jobId"/> is null. </exception>
        internal AnalyzeJobMetadata(DateTimeOffset createdDateTime, string jobId, DateTimeOffset lastUpdateDateTime, TextAnalyticsOperationStatus status) : base(createdDateTime, jobId, lastUpdateDateTime, status)
        {
            if (jobId == null)
            {
                throw new ArgumentNullException(nameof(jobId));
            }
        }

        /// <summary> Initializes a new instance of AnalyzeJobMetadata. </summary>
        /// <param name="createdDateTime"> . </param>
        /// <param name="expirationDateTime"> . </param>
        /// <param name="jobId"> . </param>
        /// <param name="lastUpdateDateTime"> . </param>
        /// <param name="status"> . </param>
        /// <param name="displayName"> . </param>
        internal AnalyzeJobMetadata(DateTimeOffset createdDateTime, DateTimeOffset? expirationDateTime, string jobId, DateTimeOffset lastUpdateDateTime, TextAnalyticsOperationStatus status, string displayName) : base(createdDateTime, expirationDateTime, jobId, lastUpdateDateTime, status)
        {
            DisplayName = displayName;
        }

        public string DisplayName { get; }
    }
}
