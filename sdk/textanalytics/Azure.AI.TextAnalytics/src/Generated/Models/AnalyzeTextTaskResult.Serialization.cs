// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.AI.TextAnalytics.Models
{
    internal partial class AnalyzeTextTaskResult
    {
        internal static AnalyzeTextTaskResult DeserializeAnalyzeTextTaskResult(JsonElement element)
        {
            if (element.TryGetProperty("kind", out JsonElement discriminator))
            {
                switch (discriminator.GetString())
                {
                    case "EntityLinkingResults": return EntityLinkingTaskResult.DeserializeEntityLinkingTaskResult(element);
                    case "EntityRecognitionResults": return EntitiesTaskResult.DeserializeEntitiesTaskResult(element);
                    case "KeyPhraseExtractionResults": return KeyPhraseTaskResult.DeserializeKeyPhraseTaskResult(element);
                    case "LanguageDetectionResults": return LanguageDetectionTaskResult.DeserializeLanguageDetectionTaskResult(element);
                    case "PiiEntityRecognitionResults": return PiiTaskResult.DeserializePiiTaskResult(element);
                    case "SentimentAnalysisResults": return SentimentTaskResult.DeserializeSentimentTaskResult(element);
                }
            }
            AnalyzeTextTaskResultsKind kind = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("kind"))
                {
                    kind = new AnalyzeTextTaskResultsKind(property.Value.GetString());
                    continue;
                }
            }
            return new AnalyzeTextTaskResult(kind);
        }
    }
}
