// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.AI.TextAnalytics
{
    internal static partial class EntityConditionalityExtensions
    {
        public static string ToSerialString(this EntityConditionality value) => value switch
        {
            EntityConditionality.Hypothetical => "hypothetical",
            EntityConditionality.Conditional => "conditional",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown EntityConditionality value.")
        };

        public static EntityConditionality ToEntityConditionality(this string value)
        {
            if (string.Equals(value, "hypothetical", StringComparison.InvariantCultureIgnoreCase)) return EntityConditionality.Hypothetical;
            if (string.Equals(value, "conditional", StringComparison.InvariantCultureIgnoreCase)) return EntityConditionality.Conditional;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown EntityConditionality value.");
        }
    }
}
