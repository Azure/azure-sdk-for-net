// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.AI.TextAnalytics.Models
{
    internal static class InnerErrorCodeValueExtensions
    {
        public static string ToSerialString(this InnerErrorCodeValue value) => value switch
        {
            InnerErrorCodeValue.InvalidParameterValue => "invalidParameterValue",
            InnerErrorCodeValue.InvalidRequestBodyFormat => "invalidRequestBodyFormat",
            InnerErrorCodeValue.EmptyRequest => "emptyRequest",
            InnerErrorCodeValue.MissingInputRecords => "missingInputRecords",
            InnerErrorCodeValue.InvalidDocument => "invalidDocument",
            InnerErrorCodeValue.ModelVersionIncorrect => "modelVersionIncorrect",
            InnerErrorCodeValue.InvalidDocumentBatch => "invalidDocumentBatch",
            InnerErrorCodeValue.UnsupportedLanguageCode => "unsupportedLanguageCode",
            InnerErrorCodeValue.InvalidCountryHint => "invalidCountryHint",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown InnerErrorCodeValue value.")
        };

        public static InnerErrorCodeValue ToInnerErrorCodeValue(this string value)
        {
            if (string.Equals(value, "invalidParameterValue", StringComparison.InvariantCultureIgnoreCase)) return InnerErrorCodeValue.InvalidParameterValue;
            if (string.Equals(value, "invalidRequestBodyFormat", StringComparison.InvariantCultureIgnoreCase)) return InnerErrorCodeValue.InvalidRequestBodyFormat;
            if (string.Equals(value, "emptyRequest", StringComparison.InvariantCultureIgnoreCase)) return InnerErrorCodeValue.EmptyRequest;
            if (string.Equals(value, "missingInputRecords", StringComparison.InvariantCultureIgnoreCase)) return InnerErrorCodeValue.MissingInputRecords;
            if (string.Equals(value, "invalidDocument", StringComparison.InvariantCultureIgnoreCase)) return InnerErrorCodeValue.InvalidDocument;
            if (string.Equals(value, "modelVersionIncorrect", StringComparison.InvariantCultureIgnoreCase)) return InnerErrorCodeValue.ModelVersionIncorrect;
            if (string.Equals(value, "invalidDocumentBatch", StringComparison.InvariantCultureIgnoreCase)) return InnerErrorCodeValue.InvalidDocumentBatch;
            if (string.Equals(value, "unsupportedLanguageCode", StringComparison.InvariantCultureIgnoreCase)) return InnerErrorCodeValue.UnsupportedLanguageCode;
            if (string.Equals(value, "invalidCountryHint", StringComparison.InvariantCultureIgnoreCase)) return InnerErrorCodeValue.InvalidCountryHint;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown InnerErrorCodeValue value.");
        }
    }
}
