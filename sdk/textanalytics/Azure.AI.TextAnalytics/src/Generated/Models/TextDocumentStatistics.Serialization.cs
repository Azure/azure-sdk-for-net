// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;
using Azure.Core.Serialization;

namespace Azure.AI.TextAnalytics
{
    public partial struct TextDocumentStatistics : IUtf8JsonSerializable, Core.IModelSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer) => ((Core.IModelSerializable)this).Serialize(writer, new Core.Serialization.SerializableOptions());

        void Core.IModelSerializable.Serialize(Utf8JsonWriter writer, Core.Serialization.SerializableOptions options)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("charactersCount"u8);
            writer.WriteNumberValue(CharacterCount);
            writer.WritePropertyName("transactionsCount"u8);
            writer.WriteNumberValue(TransactionCount);
            writer.WriteEndObject();
        }

        internal static TextDocumentStatistics DeserializeTextDocumentStatistics(JsonElement element, Core.Serialization.SerializableOptions options = default)
        {
            int charactersCount = default;
            int transactionsCount = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("charactersCount"u8))
                {
                    charactersCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("transactionsCount"u8))
                {
                    transactionsCount = property.Value.GetInt32();
                    continue;
                }
            }
            return new TextDocumentStatistics(charactersCount, transactionsCount);
        }
    }
}
