// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.AI.TextAnalytics.Legacy
{
    internal partial class JobManifestTasks : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (!(EntityRecognitionTasks is ChangeTrackingList<EntitiesTask> collection && collection.IsUndefined))
            {
                writer.WritePropertyName("entityRecognitionTasks"u8);
                writer.WriteStartArray();
                foreach (var item in EntityRecognitionTasks)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (!(EntityRecognitionPiiTasks is ChangeTrackingList<PiiTask> collection0 && collection0.IsUndefined))
            {
                writer.WritePropertyName("entityRecognitionPiiTasks"u8);
                writer.WriteStartArray();
                foreach (var item in EntityRecognitionPiiTasks)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (!(KeyPhraseExtractionTasks is ChangeTrackingList<KeyPhrasesTask> collection1 && collection1.IsUndefined))
            {
                writer.WritePropertyName("keyPhraseExtractionTasks"u8);
                writer.WriteStartArray();
                foreach (var item in KeyPhraseExtractionTasks)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (!(EntityLinkingTasks is ChangeTrackingList<EntityLinkingTask> collection2 && collection2.IsUndefined))
            {
                writer.WritePropertyName("entityLinkingTasks"u8);
                writer.WriteStartArray();
                foreach (var item in EntityLinkingTasks)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (!(SentimentAnalysisTasks is ChangeTrackingList<SentimentAnalysisTask> collection3 && collection3.IsUndefined))
            {
                writer.WritePropertyName("sentimentAnalysisTasks"u8);
                writer.WriteStartArray();
                foreach (var item in SentimentAnalysisTasks)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }
    }
}
