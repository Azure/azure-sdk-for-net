// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.AI.TextAnalytics.Legacy.Models
{
    internal static partial class StateExtensions
    {
        public static string ToSerialString(this State value) => value switch
        {
            State.NotStarted => "notStarted",
            State.Running => "running",
            State.Succeeded => "succeeded",
            State.Failed => "failed",
            State.Rejected => "rejected",
            State.Cancelled => "cancelled",
            State.Cancelling => "cancelling",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown State value.")
        };

        public static State ToState(this string value)
        {
            if (string.Equals(value, "notStarted", StringComparison.InvariantCultureIgnoreCase)) return State.NotStarted;
            if (string.Equals(value, "running", StringComparison.InvariantCultureIgnoreCase)) return State.Running;
            if (string.Equals(value, "succeeded", StringComparison.InvariantCultureIgnoreCase)) return State.Succeeded;
            if (string.Equals(value, "failed", StringComparison.InvariantCultureIgnoreCase)) return State.Failed;
            if (string.Equals(value, "rejected", StringComparison.InvariantCultureIgnoreCase)) return State.Rejected;
            if (string.Equals(value, "cancelled", StringComparison.InvariantCultureIgnoreCase)) return State.Cancelled;
            if (string.Equals(value, "cancelling", StringComparison.InvariantCultureIgnoreCase)) return State.Cancelling;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown State value.");
        }
    }
}
