// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Qumulo.Models
{
    /// <summary> Properties specific to the Qumulo File System resource. </summary>
    public partial class FileSystemResourceProperties
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="FileSystemResourceProperties"/>. </summary>
        /// <param name="marketplaceDetails"> Marketplace details. </param>
        /// <param name="storageSku"> Storage Sku. </param>
        /// <param name="userDetails"> User Details. </param>
        /// <param name="delegatedSubnetId"> Delegated subnet id for Vnet injection. </param>
        /// <param name="adminPassword"> Initial administrator password of the resource. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="marketplaceDetails"/>, <paramref name="storageSku"/>, <paramref name="userDetails"/>, <paramref name="delegatedSubnetId"/> or <paramref name="adminPassword"/> is null. </exception>
        public FileSystemResourceProperties(MarketplaceDetails marketplaceDetails, string storageSku, UserDetails userDetails, string delegatedSubnetId, string adminPassword)
        {
            Argument.AssertNotNull(marketplaceDetails, nameof(marketplaceDetails));
            Argument.AssertNotNull(storageSku, nameof(storageSku));
            Argument.AssertNotNull(userDetails, nameof(userDetails));
            Argument.AssertNotNull(delegatedSubnetId, nameof(delegatedSubnetId));
            Argument.AssertNotNull(adminPassword, nameof(adminPassword));

            MarketplaceDetails = marketplaceDetails;
            StorageSku = storageSku;
            UserDetails = userDetails;
            DelegatedSubnetId = delegatedSubnetId;
            PrivateIPs = new ChangeTrackingList<string>();
            AdminPassword = adminPassword;
        }

        /// <summary> Initializes a new instance of <see cref="FileSystemResourceProperties"/>. </summary>
        /// <param name="marketplaceDetails"> Marketplace details. </param>
        /// <param name="provisioningState"> Provisioning State of the resource. </param>
        /// <param name="storageSku"> Storage Sku. </param>
        /// <param name="userDetails"> User Details. </param>
        /// <param name="delegatedSubnetId"> Delegated subnet id for Vnet injection. </param>
        /// <param name="clusterLoginUri"> File system Id of the resource. </param>
        /// <param name="privateIPs"> Private IPs of the resource. </param>
        /// <param name="adminPassword"> Initial administrator password of the resource. </param>
        /// <param name="availabilityZone"> Availability zone. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal FileSystemResourceProperties(MarketplaceDetails marketplaceDetails, ProvisioningState? provisioningState, string storageSku, UserDetails userDetails, string delegatedSubnetId, string clusterLoginUri, IList<string> privateIPs, string adminPassword, string availabilityZone, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            MarketplaceDetails = marketplaceDetails;
            ProvisioningState = provisioningState;
            StorageSku = storageSku;
            UserDetails = userDetails;
            DelegatedSubnetId = delegatedSubnetId;
            ClusterLoginUri = clusterLoginUri;
            PrivateIPs = privateIPs;
            AdminPassword = adminPassword;
            AvailabilityZone = availabilityZone;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="FileSystemResourceProperties"/> for deserialization. </summary>
        internal FileSystemResourceProperties()
        {
        }

        /// <summary> Marketplace details. </summary>
        public MarketplaceDetails MarketplaceDetails { get; set; }
        /// <summary> Provisioning State of the resource. </summary>
        public ProvisioningState? ProvisioningState { get; }
        /// <summary> Storage Sku. </summary>
        public string StorageSku { get; set; }
        /// <summary> User Details. </summary>
        internal UserDetails UserDetails { get; set; }
        /// <summary> User Email. </summary>
        public string UserDetailsEmail
        {
            get => UserDetails is null ? default : UserDetails.Email;
            set => UserDetails = new UserDetails(value);
        }

        /// <summary> Delegated subnet id for Vnet injection. </summary>
        public string DelegatedSubnetId { get; set; }
        /// <summary> File system Id of the resource. </summary>
        public string ClusterLoginUri { get; set; }
        /// <summary> Private IPs of the resource. </summary>
        public IList<string> PrivateIPs { get; }
        /// <summary> Initial administrator password of the resource. </summary>
        public string AdminPassword { get; set; }
        /// <summary> Availability zone. </summary>
        public string AvailabilityZone { get; set; }
    }
}
