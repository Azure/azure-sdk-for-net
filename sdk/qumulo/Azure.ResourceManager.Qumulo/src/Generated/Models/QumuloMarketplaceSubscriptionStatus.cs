// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Qumulo.Models
{
    /// <summary> Marketplace subscription status of the file system resource. </summary>
    public readonly partial struct QumuloMarketplaceSubscriptionStatus : IEquatable<QumuloMarketplaceSubscriptionStatus>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="QumuloMarketplaceSubscriptionStatus"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public QumuloMarketplaceSubscriptionStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string PendingFulfillmentStartValue = "PendingFulfillmentStart";
        private const string SubscribedValue = "Subscribed";
        private const string SuspendedValue = "Suspended";
        private const string UnsubscribedValue = "Unsubscribed";

        /// <summary> Fulfillment has not started. </summary>
        public static QumuloMarketplaceSubscriptionStatus PendingFulfillmentStart { get; } = new QumuloMarketplaceSubscriptionStatus(PendingFulfillmentStartValue);
        /// <summary> Marketplace offer is subscribed. </summary>
        public static QumuloMarketplaceSubscriptionStatus Subscribed { get; } = new QumuloMarketplaceSubscriptionStatus(SubscribedValue);
        /// <summary> Marketplace offer is suspended because of non payment. </summary>
        public static QumuloMarketplaceSubscriptionStatus Suspended { get; } = new QumuloMarketplaceSubscriptionStatus(SuspendedValue);
        /// <summary> Marketplace offer is unsubscribed. </summary>
        public static QumuloMarketplaceSubscriptionStatus Unsubscribed { get; } = new QumuloMarketplaceSubscriptionStatus(UnsubscribedValue);
        /// <summary> Determines if two <see cref="QumuloMarketplaceSubscriptionStatus"/> values are the same. </summary>
        public static bool operator ==(QumuloMarketplaceSubscriptionStatus left, QumuloMarketplaceSubscriptionStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="QumuloMarketplaceSubscriptionStatus"/> values are not the same. </summary>
        public static bool operator !=(QumuloMarketplaceSubscriptionStatus left, QumuloMarketplaceSubscriptionStatus right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="QumuloMarketplaceSubscriptionStatus"/>. </summary>
        public static implicit operator QumuloMarketplaceSubscriptionStatus(string value) => new QumuloMarketplaceSubscriptionStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is QumuloMarketplaceSubscriptionStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(QumuloMarketplaceSubscriptionStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
