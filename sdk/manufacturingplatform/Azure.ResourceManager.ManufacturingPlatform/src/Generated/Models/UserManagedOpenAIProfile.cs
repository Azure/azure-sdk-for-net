// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.ManufacturingPlatform.Models
{
    /// <summary> The properties related to User Managed OpenAI Resource. </summary>
    public partial class UserManagedOpenAIProfile
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="UserManagedOpenAIProfile"/>. </summary>
        /// <param name="id"> Resource Id of OpenAI Resource. </param>
        /// <param name="gptModelDeploymentName"> GPT Model Deployment Name. </param>
        /// <param name="embeddingModelDeploymentName"> Embedding Model Deployment Name. </param>
        /// <param name="embeddingModelType"> Embedding Model Type. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/>, <paramref name="gptModelDeploymentName"/>, <paramref name="embeddingModelDeploymentName"/> or <paramref name="embeddingModelType"/> is null. </exception>
        public UserManagedOpenAIProfile(string id, string gptModelDeploymentName, string embeddingModelDeploymentName, string embeddingModelType)
        {
            Argument.AssertNotNull(id, nameof(id));
            Argument.AssertNotNull(gptModelDeploymentName, nameof(gptModelDeploymentName));
            Argument.AssertNotNull(embeddingModelDeploymentName, nameof(embeddingModelDeploymentName));
            Argument.AssertNotNull(embeddingModelType, nameof(embeddingModelType));

            Id = id;
            GptModelDeploymentName = gptModelDeploymentName;
            EmbeddingModelDeploymentName = embeddingModelDeploymentName;
            EmbeddingModelType = embeddingModelType;
        }

        /// <summary> Initializes a new instance of <see cref="UserManagedOpenAIProfile"/>. </summary>
        /// <param name="id"> Resource Id of OpenAI Resource. </param>
        /// <param name="gptModelDeploymentName"> GPT Model Deployment Name. </param>
        /// <param name="embeddingModelDeploymentName"> Embedding Model Deployment Name. </param>
        /// <param name="embeddingModelType"> Embedding Model Type. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal UserManagedOpenAIProfile(string id, string gptModelDeploymentName, string embeddingModelDeploymentName, string embeddingModelType, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Id = id;
            GptModelDeploymentName = gptModelDeploymentName;
            EmbeddingModelDeploymentName = embeddingModelDeploymentName;
            EmbeddingModelType = embeddingModelType;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="UserManagedOpenAIProfile"/> for deserialization. </summary>
        internal UserManagedOpenAIProfile()
        {
        }

        /// <summary> Resource Id of OpenAI Resource. </summary>
        public string Id { get; set; }
        /// <summary> GPT Model Deployment Name. </summary>
        public string GptModelDeploymentName { get; set; }
        /// <summary> Embedding Model Deployment Name. </summary>
        public string EmbeddingModelDeploymentName { get; set; }
        /// <summary> Embedding Model Type. </summary>
        public string EmbeddingModelType { get; set; }
    }
}
