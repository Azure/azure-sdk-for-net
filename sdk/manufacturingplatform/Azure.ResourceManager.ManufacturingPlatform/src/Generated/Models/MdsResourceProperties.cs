// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Resources.Models;

namespace Azure.ResourceManager.ManufacturingPlatform.Models
{
    /// <summary> Details of the ManufacturingPlatform MdsResource. </summary>
    public partial class MdsResourceProperties
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="MdsResourceProperties"/>. </summary>
        /// <param name="aadApplicationId"> AAD Application Id. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="aadApplicationId"/> is null. </exception>
        public MdsResourceProperties(string aadApplicationId)
        {
            Argument.AssertNotNull(aadApplicationId, nameof(aadApplicationId));

            AadApplicationId = aadApplicationId;
        }

        /// <summary> Initializes a new instance of <see cref="MdsResourceProperties"/>. </summary>
        /// <param name="provisioningState"> The status of the last operation. </param>
        /// <param name="version"> Mds Resource Version. </param>
        /// <param name="enableTeamsNotification"> Enable Teams Notification. </param>
        /// <param name="enableCopilot"> Enable Copilot. </param>
        /// <param name="aadApplicationId"> AAD Application Id. </param>
        /// <param name="aksAdminGroupId"> AKS Admin Group Id. </param>
        /// <param name="continuousExportPeriod"> Continuous Export Period. </param>
        /// <param name="serviceUri"> Service Url. </param>
        /// <param name="aksProfile"> Profile of AKS Created. </param>
        /// <param name="storageProfile"> Profile of Storage Created. </param>
        /// <param name="databaseProfile"> Profile of Database Created. </param>
        /// <param name="adxProfile"> Profile of Adx Created. </param>
        /// <param name="redisProfile"> Profile of Azure Redis Created. </param>
        /// <param name="monitoringProfile"> Profile of Monitoring Resource Created. </param>
        /// <param name="eventHubProfile"> Profile of EventHub Resource. </param>
        /// <param name="functionAppProfile"> Profile of Function App Resource. </param>
        /// <param name="openAIProfile"> Profile of OpenAI Resource. </param>
        /// <param name="managedResourceGroupConfiguration"> Configuration of the managed resource group associated with the resource. </param>
        /// <param name="managedOnBehalfOfConfiguration"> Managed On Behalf Of Configuration. </param>
        /// <param name="amlProfile"> Profile of Azure Machine Learning Resource. </param>
        /// <param name="userManagedDatabaseProfile"> Profile of User Managed Database. </param>
        /// <param name="userManagedAdxProfile"> Profile of User Managed Adx. </param>
        /// <param name="cmkProfile"> Profile of CMK Settings. </param>
        /// <param name="fabricProfile"> Profile of Fabric resources. </param>
        /// <param name="userManagedOpenAIProfile"> Profile of User Managed OpenAI Resource. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal MdsResourceProperties(ProvisioningState? provisioningState, string version, bool? enableTeamsNotification, bool? enableCopilot, string aadApplicationId, string aksAdminGroupId, int? continuousExportPeriod, string serviceUri, SubResource aksProfile, SubResource storageProfile, DatabaseProfile databaseProfile, AdxProfile adxProfile, SubResource redisProfile, SubResource monitoringProfile, EventHubProfile eventHubProfile, SubResource functionAppProfile, OpenAIProfile openAIProfile, ManagedResourceGroupConfiguration managedResourceGroupConfiguration, ManagedOnBehalfOfConfiguration managedOnBehalfOfConfiguration, AmlProfile amlProfile, UserManagedDatabaseProfile userManagedDatabaseProfile, UserManagedAdxProfile userManagedAdxProfile, CmkProfile cmkProfile, FabricProfile fabricProfile, UserManagedOpenAIProfile userManagedOpenAIProfile, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            ProvisioningState = provisioningState;
            Version = version;
            EnableTeamsNotification = enableTeamsNotification;
            EnableCopilot = enableCopilot;
            AadApplicationId = aadApplicationId;
            AksAdminGroupId = aksAdminGroupId;
            ContinuousExportPeriod = continuousExportPeriod;
            ServiceUri = serviceUri;
            AksProfile = aksProfile;
            StorageProfile = storageProfile;
            DatabaseProfile = databaseProfile;
            AdxProfile = adxProfile;
            RedisProfile = redisProfile;
            MonitoringProfile = monitoringProfile;
            EventHubProfile = eventHubProfile;
            FunctionAppProfile = functionAppProfile;
            OpenAIProfile = openAIProfile;
            ManagedResourceGroupConfiguration = managedResourceGroupConfiguration;
            ManagedOnBehalfOfConfiguration = managedOnBehalfOfConfiguration;
            AmlProfile = amlProfile;
            UserManagedDatabaseProfile = userManagedDatabaseProfile;
            UserManagedAdxProfile = userManagedAdxProfile;
            CmkProfile = cmkProfile;
            FabricProfile = fabricProfile;
            UserManagedOpenAIProfile = userManagedOpenAIProfile;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="MdsResourceProperties"/> for deserialization. </summary>
        internal MdsResourceProperties()
        {
        }

        /// <summary> The status of the last operation. </summary>
        public ProvisioningState? ProvisioningState { get; }
        /// <summary> Mds Resource Version. </summary>
        public string Version { get; set; }
        /// <summary> Enable Teams Notification. </summary>
        public bool? EnableTeamsNotification { get; set; }
        /// <summary> Enable Copilot. </summary>
        public bool? EnableCopilot { get; set; }
        /// <summary> AAD Application Id. </summary>
        public string AadApplicationId { get; set; }
        /// <summary> AKS Admin Group Id. </summary>
        public string AksAdminGroupId { get; set; }
        /// <summary> Continuous Export Period. </summary>
        public int? ContinuousExportPeriod { get; set; }
        /// <summary> Service Url. </summary>
        public string ServiceUri { get; }
        /// <summary> Profile of AKS Created. </summary>
        internal SubResource AksProfile { get; }
        /// <summary> Gets Id. </summary>
        public ResourceIdentifier AksProfileId
        {
            get => AksProfile?.Id;
        }

        /// <summary> Profile of Storage Created. </summary>
        internal SubResource StorageProfile { get; }
        /// <summary> Gets Id. </summary>
        public ResourceIdentifier StorageProfileId
        {
            get => StorageProfile?.Id;
        }

        /// <summary> Profile of Database Created. </summary>
        internal DatabaseProfile DatabaseProfile { get; }
        /// <summary> Resource Id of Cosmos Resource. </summary>
        public string DatabaseCosmosId
        {
            get => DatabaseProfile?.CosmosId;
        }

        /// <summary> Profile of Adx Created. </summary>
        public AdxProfile AdxProfile { get; }
        /// <summary> Profile of Azure Redis Created. </summary>
        internal SubResource RedisProfile { get; }
        /// <summary> Gets Id. </summary>
        public ResourceIdentifier RedisProfileId
        {
            get => RedisProfile?.Id;
        }

        /// <summary> Profile of Monitoring Resource Created. </summary>
        internal SubResource MonitoringProfile { get; }
        /// <summary> Gets Id. </summary>
        public ResourceIdentifier MonitoringProfileId
        {
            get => MonitoringProfile?.Id;
        }

        /// <summary> Profile of EventHub Resource. </summary>
        public EventHubProfile EventHubProfile { get; }
        /// <summary> Profile of Function App Resource. </summary>
        internal SubResource FunctionAppProfile { get; }
        /// <summary> Gets Id. </summary>
        public ResourceIdentifier FunctionAppProfileId
        {
            get => FunctionAppProfile?.Id;
        }

        /// <summary> Profile of OpenAI Resource. </summary>
        public OpenAIProfile OpenAIProfile { get; set; }
        /// <summary> Configuration of the managed resource group associated with the resource. </summary>
        public ManagedResourceGroupConfiguration ManagedResourceGroupConfiguration { get; }
        /// <summary> Managed On Behalf Of Configuration. </summary>
        internal ManagedOnBehalfOfConfiguration ManagedOnBehalfOfConfiguration { get; }
        /// <summary> Associated MoboBrokerResources. </summary>
        public IReadOnlyList<SubResource> ManagedOnBehalfOfMoboBrokerResources
        {
            get => ManagedOnBehalfOfConfiguration?.MoboBrokerResources;
        }

        /// <summary> Profile of Azure Machine Learning Resource. </summary>
        public AmlProfile AmlProfile { get; set; }
        /// <summary> Profile of User Managed Database. </summary>
        internal UserManagedDatabaseProfile UserManagedDatabaseProfile { get; set; }
        /// <summary> Resource Id of Cosmos Resource. </summary>
        public string UserManagedDatabaseCosmosId
        {
            get => UserManagedDatabaseProfile is null ? default : UserManagedDatabaseProfile.CosmosId;
            set => UserManagedDatabaseProfile = new UserManagedDatabaseProfile(value);
        }

        /// <summary> Profile of User Managed Adx. </summary>
        public UserManagedAdxProfile UserManagedAdxProfile { get; set; }
        /// <summary> Profile of CMK Settings. </summary>
        internal CmkProfile CmkProfile { get; set; }
        /// <summary> URI of Key in AKV. </summary>
        public string CmkKeyUri
        {
            get => CmkProfile is null ? default : CmkProfile.KeyUri;
            set => CmkProfile = new CmkProfile(value);
        }

        /// <summary> Profile of Fabric resources. </summary>
        public FabricProfile FabricProfile { get; set; }
        /// <summary> Profile of User Managed OpenAI Resource. </summary>
        public UserManagedOpenAIProfile UserManagedOpenAIProfile { get; set; }
    }
}
