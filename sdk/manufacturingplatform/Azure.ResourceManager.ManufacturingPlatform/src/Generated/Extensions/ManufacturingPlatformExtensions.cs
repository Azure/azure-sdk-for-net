// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure.Core;
using Azure.ResourceManager.ManufacturingPlatform.Mocking;
using Azure.ResourceManager.ManufacturingPlatform.Models;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.ManufacturingPlatform
{
    /// <summary> A class to add extension methods to Azure.ResourceManager.ManufacturingPlatform. </summary>
    public static partial class ManufacturingPlatformExtensions
    {
        private static MockableManufacturingPlatformArmClient GetMockableManufacturingPlatformArmClient(ArmClient client)
        {
            return client.GetCachedClient(client0 => new MockableManufacturingPlatformArmClient(client0));
        }

        private static MockableManufacturingPlatformResourceGroupResource GetMockableManufacturingPlatformResourceGroupResource(ArmResource resource)
        {
            return resource.GetCachedClient(client => new MockableManufacturingPlatformResourceGroupResource(client, resource.Id));
        }

        private static MockableManufacturingPlatformSubscriptionResource GetMockableManufacturingPlatformSubscriptionResource(ArmResource resource)
        {
            return resource.GetCachedClient(client => new MockableManufacturingPlatformSubscriptionResource(client, resource.Id));
        }

        private static MockableManufacturingPlatformTenantResource GetMockableManufacturingPlatformTenantResource(ArmResource resource)
        {
            return resource.GetCachedClient(client => new MockableManufacturingPlatformTenantResource(client, resource.Id));
        }

        /// <summary>
        /// Gets an object representing a <see cref="MdsResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MdsResource.CreateResourceIdentifier" /> to create a <see cref="MdsResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableManufacturingPlatformArmClient.GetMdsResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MdsResource"/> object. </returns>
        public static MdsResource GetMdsResource(this ArmClient client, ResourceIdentifier id)
        {
            Argument.AssertNotNull(client, nameof(client));

            return GetMockableManufacturingPlatformArmClient(client).GetMdsResource(id);
        }

        /// <summary>
        /// Gets a collection of MdsResources in the ResourceGroupResource.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableManufacturingPlatformResourceGroupResource.GetMdsResources()"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupResource"/> is null. </exception>
        /// <returns> An object representing collection of MdsResources and their operations over a MdsResource. </returns>
        public static MdsResourceCollection GetMdsResources(this ResourceGroupResource resourceGroupResource)
        {
            Argument.AssertNotNull(resourceGroupResource, nameof(resourceGroupResource));

            return GetMockableManufacturingPlatformResourceGroupResource(resourceGroupResource).GetMdsResources();
        }

        /// <summary>
        /// Get a MdsResource
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManufacturingPlatform/manufacturingDataServices/{mdsResourceName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>ManufacturingDataServices_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-02-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="MdsResource"/></description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableManufacturingPlatformResourceGroupResource.GetMdsResourceAsync(string,CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="mdsResourceName"> Name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupResource"/> or <paramref name="mdsResourceName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="mdsResourceName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public static async Task<Response<MdsResource>> GetMdsResourceAsync(this ResourceGroupResource resourceGroupResource, string mdsResourceName, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(resourceGroupResource, nameof(resourceGroupResource));

            return await GetMockableManufacturingPlatformResourceGroupResource(resourceGroupResource).GetMdsResourceAsync(mdsResourceName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Get a MdsResource
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManufacturingPlatform/manufacturingDataServices/{mdsResourceName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>ManufacturingDataServices_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-02-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="MdsResource"/></description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableManufacturingPlatformResourceGroupResource.GetMdsResource(string,CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="mdsResourceName"> Name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupResource"/> or <paramref name="mdsResourceName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="mdsResourceName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public static Response<MdsResource> GetMdsResource(this ResourceGroupResource resourceGroupResource, string mdsResourceName, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(resourceGroupResource, nameof(resourceGroupResource));

            return GetMockableManufacturingPlatformResourceGroupResource(resourceGroupResource).GetMdsResource(mdsResourceName, cancellationToken);
        }

        /// <summary>
        /// List MdsResource resources by subscription ID
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.ManufacturingPlatform/manufacturingDataServices</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>MdsResource_ListBySubscription</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-02-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="MdsResource"/></description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableManufacturingPlatformSubscriptionResource.GetMdsResources(CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionResource"/> is null. </exception>
        /// <returns> An async collection of <see cref="MdsResource"/> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<MdsResource> GetMdsResourcesAsync(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(subscriptionResource, nameof(subscriptionResource));

            return GetMockableManufacturingPlatformSubscriptionResource(subscriptionResource).GetMdsResourcesAsync(cancellationToken);
        }

        /// <summary>
        /// List MdsResource resources by subscription ID
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.ManufacturingPlatform/manufacturingDataServices</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>MdsResource_ListBySubscription</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-02-01-preview</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="MdsResource"/></description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableManufacturingPlatformSubscriptionResource.GetMdsResources(CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionResource"/> is null. </exception>
        /// <returns> A collection of <see cref="MdsResource"/> that may take multiple service requests to iterate over. </returns>
        public static Pageable<MdsResource> GetMdsResources(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(subscriptionResource, nameof(subscriptionResource));

            return GetMockableManufacturingPlatformSubscriptionResource(subscriptionResource).GetMdsResources(cancellationToken);
        }

        /// <summary>
        /// List the operations for the provider
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/providers/Microsoft.ManufacturingPlatform/operations</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>Operations_List</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-02-01-preview</description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableManufacturingPlatformTenantResource.GetOperations(CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="tenantResource"> The <see cref="TenantResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="tenantResource"/> is null. </exception>
        /// <returns> An async collection of <see cref="Models.Operation"/> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<Models.Operation> GetOperationsAsync(this TenantResource tenantResource, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(tenantResource, nameof(tenantResource));

            return GetMockableManufacturingPlatformTenantResource(tenantResource).GetOperationsAsync(cancellationToken);
        }

        /// <summary>
        /// List the operations for the provider
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/providers/Microsoft.ManufacturingPlatform/operations</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>Operations_List</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2024-02-01-preview</description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableManufacturingPlatformTenantResource.GetOperations(CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="tenantResource"> The <see cref="TenantResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="tenantResource"/> is null. </exception>
        /// <returns> A collection of <see cref="Models.Operation"/> that may take multiple service requests to iterate over. </returns>
        public static Pageable<Models.Operation> GetOperations(this TenantResource tenantResource, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(tenantResource, nameof(tenantResource));

            return GetMockableManufacturingPlatformTenantResource(tenantResource).GetOperations(cancellationToken);
        }
    }
}
