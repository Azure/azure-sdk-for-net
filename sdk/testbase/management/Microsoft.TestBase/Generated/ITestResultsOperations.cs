// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.TestBase
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// TestResultsOperations operations.
    /// </summary>
    public partial interface ITestResultsOperations
    {
        /// <summary>
        /// Lists all the Test Results with specified OS Update type for a Test
        /// Base Package. Can be filtered by osName, releaseName,
        /// flightingRing, buildVersion, buildRevision.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource.
        /// </param>
        /// <param name='testBaseAccountName'>
        /// The resource name of the Test Base Account.
        /// </param>
        /// <param name='packageName'>
        /// The resource name of the Test Base Package.
        /// </param>
        /// <param name='osUpdateType'>
        /// The type of the OS Update. Possible values include:
        /// 'SecurityUpdate', 'FeatureUpdate'
        /// </param>
        /// <param name='filter'>
        /// Odata filter
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<TestResultResource>>> ListWithHttpMessagesAsync(string resourceGroupName, string testBaseAccountName, string packageName, string osUpdateType, string filter = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get the Test Result by Id with specified OS Update type for a Test
        /// Base Package.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource.
        /// </param>
        /// <param name='testBaseAccountName'>
        /// The resource name of the Test Base Account.
        /// </param>
        /// <param name='packageName'>
        /// The resource name of the Test Base Package.
        /// </param>
        /// <param name='testResultName'>
        /// The Test Result Name. It equals to TestResult-{TestResultId}
        /// string.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<TestResultResource>> GetWithHttpMessagesAsync(string resourceGroupName, string testBaseAccountName, string packageName, string testResultName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the download URL of the test result.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource.
        /// </param>
        /// <param name='testBaseAccountName'>
        /// The resource name of the Test Base Account.
        /// </param>
        /// <param name='packageName'>
        /// The resource name of the Test Base Package.
        /// </param>
        /// <param name='testResultName'>
        /// The Test Result Name. It equals to TestResult-{TestResultId}
        /// string.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<DownloadURLResponse>> GetDownloadURLWithHttpMessagesAsync(string resourceGroupName, string testBaseAccountName, string packageName, string testResultName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the download URL of the test execution screen recording.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource.
        /// </param>
        /// <param name='testBaseAccountName'>
        /// The resource name of the Test Base Account.
        /// </param>
        /// <param name='packageName'>
        /// The resource name of the Test Base Package.
        /// </param>
        /// <param name='testResultName'>
        /// The Test Result Name. It equals to TestResult-{TestResultId}
        /// string.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<DownloadURLResponse>> GetVideoDownloadURLWithHttpMessagesAsync(string resourceGroupName, string testBaseAccountName, string packageName, string testResultName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the download URL of the test execution console log file.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the resource.
        /// </param>
        /// <param name='testBaseAccountName'>
        /// The resource name of the Test Base Account.
        /// </param>
        /// <param name='packageName'>
        /// The resource name of the Test Base Package.
        /// </param>
        /// <param name='testResultName'>
        /// The Test Result Name. It equals to TestResult-{TestResultId}
        /// string.
        /// </param>
        /// <param name='logFileName'>
        /// The log file name corresponding to the download URL.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<DownloadURLResponse>> GetConsoleLogDownloadURLWithHttpMessagesAsync(string resourceGroupName, string testBaseAccountName, string packageName, string testResultName, string logFileName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Lists all the Test Results with specified OS Update type for a Test
        /// Base Package. Can be filtered by osName, releaseName,
        /// flightingRing, buildVersion, buildRevision.
        /// </summary>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<TestResultResource>>> ListNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
