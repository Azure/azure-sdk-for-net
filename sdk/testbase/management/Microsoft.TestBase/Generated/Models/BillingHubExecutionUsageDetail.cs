// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.TestBase.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class BillingHubExecutionUsageDetail
    {
        /// <summary>
        /// Initializes a new instance of the BillingHubExecutionUsageDetail
        /// class.
        /// </summary>
        public BillingHubExecutionUsageDetail()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BillingHubExecutionUsageDetail
        /// class.
        /// </summary>
        public BillingHubExecutionUsageDetail(string applicationName = default(string), string applicationVersion = default(string), string executionRequestId = default(string), string sku = default(string), string meterId = default(string), System.DateTime? startTimeStamp = default(System.DateTime?), System.DateTime? endTimeStamp = default(System.DateTime?), string osBuild = default(string), string release = default(string), string testType = default(string), string updateType = default(string), double? usedFreeHours = default(double?), double? usedBillableHours = default(double?), double? billedCharges = default(double?))
        {
            ApplicationName = applicationName;
            ApplicationVersion = applicationVersion;
            ExecutionRequestId = executionRequestId;
            Sku = sku;
            MeterId = meterId;
            StartTimeStamp = startTimeStamp;
            EndTimeStamp = endTimeStamp;
            OsBuild = osBuild;
            Release = release;
            TestType = testType;
            UpdateType = updateType;
            UsedFreeHours = usedFreeHours;
            UsedBillableHours = usedBillableHours;
            BilledCharges = billedCharges;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "applicationName")]
        public string ApplicationName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "applicationVersion")]
        public string ApplicationVersion { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "executionRequestId")]
        public string ExecutionRequestId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sku")]
        public string Sku { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "meterId")]
        public string MeterId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "startTimeStamp")]
        public System.DateTime? StartTimeStamp { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "endTimeStamp")]
        public System.DateTime? EndTimeStamp { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "osBuild")]
        public string OsBuild { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "release")]
        public string Release { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "testType")]
        public string TestType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "updateType")]
        public string UpdateType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "usedFreeHours")]
        public double? UsedFreeHours { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "usedBillableHours")]
        public double? UsedBillableHours { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "billedCharges")]
        public double? BilledCharges { get; set; }

    }
}
