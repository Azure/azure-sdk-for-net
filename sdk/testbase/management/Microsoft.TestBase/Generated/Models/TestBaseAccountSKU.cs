// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.TestBase.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Describes a Test Base Account SKU.
    /// </summary>
    public partial class TestBaseAccountSKU
    {
        /// <summary>
        /// Initializes a new instance of the TestBaseAccountSKU class.
        /// </summary>
        public TestBaseAccountSKU()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TestBaseAccountSKU class.
        /// </summary>
        /// <param name="name">The name of the SKU. This is typically a letter
        /// + number code, such as B0 or S0.</param>
        /// <param name="resourceType">The type of resource the SKU applies
        /// to.</param>
        /// <param name="capabilities">The capabilities of a SKU.</param>
        /// <param name="locations">The locations that the SKU is
        /// available.</param>
        public TestBaseAccountSKU(string name, string resourceType = default(string), IList<TestBaseAccountSKUCapability> capabilities = default(IList<TestBaseAccountSKUCapability>), IList<string> locations = default(IList<string>))
        {
            ResourceType = resourceType;
            Name = name;
            Capabilities = capabilities;
            Locations = locations;
            CustomInit();
        }
        /// <summary>
        /// Static constructor for TestBaseAccountSKU class.
        /// </summary>
        static TestBaseAccountSKU()
        {
            Tier = "Standard";
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the type of resource the SKU applies to.
        /// </summary>
        [JsonProperty(PropertyName = "resourceType")]
        public string ResourceType { get; set; }

        /// <summary>
        /// Gets or sets the name of the SKU. This is typically a letter +
        /// number code, such as B0 or S0.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets the capabilities of a SKU.
        /// </summary>
        [JsonProperty(PropertyName = "capabilities")]
        public IList<TestBaseAccountSKUCapability> Capabilities { get; private set; }

        /// <summary>
        /// Gets or sets the locations that the SKU is available.
        /// </summary>
        [JsonProperty(PropertyName = "locations")]
        public IList<string> Locations { get; set; }

        /// <summary>
        /// The tier of this particular SKU.
        /// </summary>
        [JsonProperty(PropertyName = "tier")]
        public static string Tier { get; private set; }

    }
}
