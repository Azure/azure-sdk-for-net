// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.TestBase.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Parameters supplied to update a Test Base Account.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class TestBaseAccountUpdateParameters
    {
        /// <summary>
        /// Initializes a new instance of the TestBaseAccountUpdateParameters
        /// class.
        /// </summary>
        public TestBaseAccountUpdateParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TestBaseAccountUpdateParameters
        /// class.
        /// </summary>
        /// <param name="sku">The SKU of the Test Base Account.</param>
        /// <param name="tags">The tags of the Test Base Account.</param>
        public TestBaseAccountUpdateParameters(TestBaseAccountSKU sku = default(TestBaseAccountSKU), IDictionary<string, string> tags = default(IDictionary<string, string>))
        {
            Sku = sku;
            Tags = tags;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the SKU of the Test Base Account.
        /// </summary>
        [JsonProperty(PropertyName = "properties.sku")]
        public TestBaseAccountSKU Sku { get; set; }

        /// <summary>
        /// Gets or sets the tags of the Test Base Account.
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

    }
}
