// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.TestBase.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The regression result.
    /// </summary>
    public partial class RegressionResult
    {
        /// <summary>
        /// Initializes a new instance of the RegressionResult class.
        /// </summary>
        public RegressionResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RegressionResult class.
        /// </summary>
        /// <param name="fileName">FileName of the binary being
        /// analyzed.</param>
        /// <param name="grade">The grade of the test. Possible values include:
        /// 'None', 'NotAvailable', 'Pass', 'Fail'</param>
        /// <param name="details">Message that facilitates debugging a
        /// particular regression, if any was inferred.</param>
        /// <param name="diff">Difference between the two datasets being
        /// analyzed.</param>
        /// <param name="isRegressed">Indicates if a regression was
        /// inferred.</param>
        public RegressionResult(string fileName = default(string), string grade = default(string), string details = default(string), double? diff = default(double?), bool? isRegressed = default(bool?))
        {
            FileName = fileName;
            Grade = grade;
            Details = details;
            Diff = diff;
            IsRegressed = isRegressed;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets fileName of the binary being analyzed.
        /// </summary>
        [JsonProperty(PropertyName = "fileName")]
        public string FileName { get; set; }

        /// <summary>
        /// Gets or sets the grade of the test. Possible values include:
        /// 'None', 'NotAvailable', 'Pass', 'Fail'
        /// </summary>
        [JsonProperty(PropertyName = "grade")]
        public string Grade { get; set; }

        /// <summary>
        /// Gets or sets message that facilitates debugging a particular
        /// regression, if any was inferred.
        /// </summary>
        [JsonProperty(PropertyName = "details")]
        public string Details { get; set; }

        /// <summary>
        /// Gets or sets difference between the two datasets being analyzed.
        /// </summary>
        [JsonProperty(PropertyName = "diff")]
        public double? Diff { get; set; }

        /// <summary>
        /// Gets or sets indicates if a regression was inferred.
        /// </summary>
        [JsonProperty(PropertyName = "isRegressed")]
        public bool? IsRegressed { get; set; }

    }
}
