// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.TestBase.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The Customer Notification Event resource.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class CustomerEventResource : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the CustomerEventResource class.
        /// </summary>
        public CustomerEventResource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CustomerEventResource class.
        /// </summary>
        /// <param name="eventName">The name of the event subscribed
        /// to.</param>
        /// <param name="receivers">The notification event receivers.</param>
        /// <param name="id">Resource ID.</param>
        /// <param name="name">Resource name.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="systemData">The system metadata relating to this
        /// resource</param>
        public CustomerEventResource(string eventName, IList<NotificationEventReceiver> receivers, string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData))
            : base(id, name, type)
        {
            SystemData = systemData;
            EventName = eventName;
            Receivers = receivers;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the system metadata relating to this resource
        /// </summary>
        [JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData { get; set; }

        /// <summary>
        /// Gets or sets the name of the event subscribed to.
        /// </summary>
        [JsonProperty(PropertyName = "properties.eventName")]
        public string EventName { get; set; }

        /// <summary>
        /// Gets or sets the notification event receivers.
        /// </summary>
        [JsonProperty(PropertyName = "properties.receivers")]
        public IList<NotificationEventReceiver> Receivers { get; set; }

    }
}
