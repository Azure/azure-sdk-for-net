// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.TestBase.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The information of the target OS to be tested.
    /// </summary>
    public partial class TargetOSInfo
    {
        /// <summary>
        /// Initializes a new instance of the TargetOSInfo class.
        /// </summary>
        public TargetOSInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TargetOSInfo class.
        /// </summary>
        /// <param name="osUpdateType">Specifies the OS update type to test
        /// against, e.g., 'Security updates' or 'Feature updates'.</param>
        /// <param name="targetOSs">Specifies the target OSs to be
        /// tested.</param>
        /// <param name="baselineOSs">Specifies the baseline OSs to be
        /// tested.</param>
        public TargetOSInfo(string osUpdateType, IList<string> targetOSs, IList<string> baselineOSs = default(IList<string>))
        {
            OsUpdateType = osUpdateType;
            TargetOSs = targetOSs;
            BaselineOSs = baselineOSs;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets specifies the OS update type to test against, e.g.,
        /// 'Security updates' or 'Feature updates'.
        /// </summary>
        [JsonProperty(PropertyName = "osUpdateType")]
        public string OsUpdateType { get; set; }

        /// <summary>
        /// Gets or sets specifies the target OSs to be tested.
        /// </summary>
        [JsonProperty(PropertyName = "targetOSs")]
        public IList<string> TargetOSs { get; set; }

        /// <summary>
        /// Gets or sets specifies the baseline OSs to be tested.
        /// </summary>
        [JsonProperty(PropertyName = "baselineOSs")]
        public IList<string> BaselineOSs { get; set; }

    }
}
