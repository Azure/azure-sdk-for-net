// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.TestBase.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The Test Base Account resource.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class TestBaseAccountResource : TrackedResource
    {
        /// <summary>
        /// Initializes a new instance of the TestBaseAccountResource class.
        /// </summary>
        public TestBaseAccountResource()
        {
            Sku = new TestBaseAccountSKU();
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TestBaseAccountResource class.
        /// </summary>
        /// <param name="location">The geo-location where the resource
        /// lives</param>
        /// <param name="sku">The SKU of the Test Base Account.</param>
        /// <param name="id">Resource ID.</param>
        /// <param name="name">Resource name.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="tags">The tags of the resource.</param>
        /// <param name="etag">Resource Etag.</param>
        /// <param name="systemData">The system metadata relating to this
        /// resource</param>
        /// <param name="provisioningState">The provisioning state of the
        /// resource. Possible values include: 'Succeeded', 'Failed',
        /// 'Cancelled', 'Creating', 'Deleting', 'Updating'</param>
        /// <param name="accessLevel">The access level of the Test Base
        /// Account.</param>
        public TestBaseAccountResource(string location, TestBaseAccountSKU sku, string id = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string etag = default(string), SystemData systemData = default(SystemData), string provisioningState = default(string), string accessLevel = default(string))
            : base(location, id, name, type, tags, etag)
        {
            SystemData = systemData;
            ProvisioningState = provisioningState;
            Sku = sku;
            AccessLevel = accessLevel;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the system metadata relating to this resource
        /// </summary>
        [JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData { get; set; }

        /// <summary>
        /// Gets or sets the provisioning state of the resource. Possible
        /// values include: 'Succeeded', 'Failed', 'Cancelled', 'Creating',
        /// 'Deleting', 'Updating'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Gets or sets the SKU of the Test Base Account.
        /// </summary>
        [JsonProperty(PropertyName = "properties.sku")]
        public TestBaseAccountSKU Sku { get; set; }

        /// <summary>
        /// Gets the access level of the Test Base Account.
        /// </summary>
        [JsonProperty(PropertyName = "properties.accessLevel")]
        public string AccessLevel { get; private set; }

    }
}
