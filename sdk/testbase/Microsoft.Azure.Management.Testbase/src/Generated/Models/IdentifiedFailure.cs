// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.TestBase.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The failure identified.
    /// </summary>
    public partial class IdentifiedFailure
    {
        /// <summary>
        /// Initializes a new instance of the IdentifiedFailure class.
        /// </summary>
        public IdentifiedFailure()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IdentifiedFailure class.
        /// </summary>
        /// <param name="failureId">The Failure Id.</param>
        /// <param name="category">The category of the failure. Possible values
        /// include: 'None', 'Unidentified', 'Package', 'OSUpdate',
        /// 'Infrastructure'</param>
        /// <param name="errorMessage">Message that shows information about the
        /// failure.</param>
        /// <param name="guidance">Guidance that shows what the customer needs
        /// to do for this failure.</param>
        public IdentifiedFailure(string failureId = default(string), string category = default(string), string errorMessage = default(string), string guidance = default(string))
        {
            FailureId = failureId;
            Category = category;
            ErrorMessage = errorMessage;
            Guidance = guidance;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the Failure Id.
        /// </summary>
        [JsonProperty(PropertyName = "failureId")]
        public string FailureId { get; set; }

        /// <summary>
        /// Gets or sets the category of the failure. Possible values include:
        /// 'None', 'Unidentified', 'Package', 'OSUpdate', 'Infrastructure'
        /// </summary>
        [JsonProperty(PropertyName = "category")]
        public string Category { get; set; }

        /// <summary>
        /// Gets or sets message that shows information about the failure.
        /// </summary>
        [JsonProperty(PropertyName = "errorMessage")]
        public string ErrorMessage { get; set; }

        /// <summary>
        /// Gets or sets guidance that shows what the customer needs to do for
        /// this failure.
        /// </summary>
        [JsonProperty(PropertyName = "guidance")]
        public string Guidance { get; set; }

    }
}
