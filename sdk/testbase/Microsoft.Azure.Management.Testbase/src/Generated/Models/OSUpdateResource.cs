// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.TestBase.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// An OS Update.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class OSUpdateResource : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the OSUpdateResource class.
        /// </summary>
        public OSUpdateResource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OSUpdateResource class.
        /// </summary>
        /// <param name="id">Resource ID.</param>
        /// <param name="name">Resource name.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="systemData">The system metadata relating to this
        /// resource</param>
        /// <param name="osName">The name of the OS.</param>
        /// <param name="release">The name of tested release.</param>
        /// <param name="flightingRing">The flighting ring, only for release of
        /// feature updates.</param>
        /// <param name="buildVersion">The build version of the tested release
        /// (OS update).</param>
        /// <param name="buildRevision">The build revision of the tested
        /// release (OS update)</param>
        /// <param name="oSUpdateResourceType">The type of this release (OS
        /// update). Possible values include: 'SecurityUpdate',
        /// 'FeatureUpdate'</param>
        /// <param name="releaseVersionDate">The release version date the
        /// tested release (OS update)</param>
        public OSUpdateResource(string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), string osName = default(string), string release = default(string), string flightingRing = default(string), string buildVersion = default(string), string buildRevision = default(string), string oSUpdateResourceType = default(string), System.DateTime? releaseVersionDate = default(System.DateTime?))
            : base(id, name, type)
        {
            SystemData = systemData;
            OsName = osName;
            Release = release;
            FlightingRing = flightingRing;
            BuildVersion = buildVersion;
            BuildRevision = buildRevision;
            OSUpdateResourceType = oSUpdateResourceType;
            ReleaseVersionDate = releaseVersionDate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the system metadata relating to this resource
        /// </summary>
        [JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData { get; set; }

        /// <summary>
        /// Gets or sets the name of the OS.
        /// </summary>
        [JsonProperty(PropertyName = "properties.osName")]
        public string OsName { get; set; }

        /// <summary>
        /// Gets or sets the name of tested release.
        /// </summary>
        [JsonProperty(PropertyName = "properties.release")]
        public string Release { get; set; }

        /// <summary>
        /// Gets or sets the flighting ring, only for release of feature
        /// updates.
        /// </summary>
        [JsonProperty(PropertyName = "properties.flightingRing")]
        public string FlightingRing { get; set; }

        /// <summary>
        /// Gets or sets the build version of the tested release (OS update).
        /// </summary>
        [JsonProperty(PropertyName = "properties.buildVersion")]
        public string BuildVersion { get; set; }

        /// <summary>
        /// Gets or sets the build revision of the tested release (OS update)
        /// </summary>
        [JsonProperty(PropertyName = "properties.buildRevision")]
        public string BuildRevision { get; set; }

        /// <summary>
        /// Gets or sets the type of this release (OS update). Possible values
        /// include: 'SecurityUpdate', 'FeatureUpdate'
        /// </summary>
        [JsonProperty(PropertyName = "properties.type")]
        public string OSUpdateResourceType { get; set; }

        /// <summary>
        /// Gets or sets the release version date the tested release (OS
        /// update)
        /// </summary>
        [JsonProperty(PropertyName = "properties.releaseVersionDate")]
        public System.DateTime? ReleaseVersionDate { get; set; }

    }
}
