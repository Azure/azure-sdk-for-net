// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.TestBase.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The test analysis result.
    /// </summary>
    public partial class TestAnalysisResult
    {
        /// <summary>
        /// Initializes a new instance of the TestAnalysisResult class.
        /// </summary>
        public TestAnalysisResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TestAnalysisResult class.
        /// </summary>
        /// <param name="blobData">The data to provide more failure analysis
        /// information.</param>
        /// <param name="testAnalysisStatus">The status of the analysis.
        /// Possible values include: 'None', 'Analyzing', 'Completed',
        /// 'Failed'</param>
        /// <param name="identifiedFailures">The array of identified
        /// failures.</param>
        public TestAnalysisResult(string blobData = default(string), string testAnalysisStatus = default(string), IList<IdentifiedFailure> identifiedFailures = default(IList<IdentifiedFailure>))
        {
            BlobData = blobData;
            TestAnalysisStatus = testAnalysisStatus;
            IdentifiedFailures = identifiedFailures;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the data to provide more failure analysis information.
        /// </summary>
        [JsonProperty(PropertyName = "blobData")]
        public string BlobData { get; set; }

        /// <summary>
        /// Gets or sets the status of the analysis. Possible values include:
        /// 'None', 'Analyzing', 'Completed', 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "testAnalysisStatus")]
        public string TestAnalysisStatus { get; set; }

        /// <summary>
        /// Gets or sets the array of identified failures.
        /// </summary>
        [JsonProperty(PropertyName = "identifiedFailures")]
        public IList<IdentifiedFailure> IdentifiedFailures { get; set; }

    }
}
