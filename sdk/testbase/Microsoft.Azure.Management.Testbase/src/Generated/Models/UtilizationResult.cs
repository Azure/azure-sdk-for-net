// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.TestBase.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The Utilization Result.
    /// </summary>
    public partial class UtilizationResult
    {
        /// <summary>
        /// Initializes a new instance of the UtilizationResult class.
        /// </summary>
        public UtilizationResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UtilizationResult class.
        /// </summary>
        /// <param name="process">Process name, or '_total' for all
        /// processes</param>
        /// <param name="upperBound">Upper bound</param>
        /// <param name="lowerBound">Lower bound</param>
        /// <param name="utilization">Utilization data</param>
        public UtilizationResult(string process = default(string), UtilizationBound upperBound = default(UtilizationBound), UtilizationBound lowerBound = default(UtilizationBound), IList<UtilizationEntry> utilization = default(IList<UtilizationEntry>))
        {
            Process = process;
            UpperBound = upperBound;
            LowerBound = lowerBound;
            Utilization = utilization;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets process name, or '_total' for all processes
        /// </summary>
        [JsonProperty(PropertyName = "process")]
        public string Process { get; set; }

        /// <summary>
        /// Gets or sets upper bound
        /// </summary>
        [JsonProperty(PropertyName = "upperBound")]
        public UtilizationBound UpperBound { get; set; }

        /// <summary>
        /// Gets or sets lower bound
        /// </summary>
        [JsonProperty(PropertyName = "lowerBound")]
        public UtilizationBound LowerBound { get; set; }

        /// <summary>
        /// Gets or sets utilization data
        /// </summary>
        [JsonProperty(PropertyName = "utilization")]
        public IList<UtilizationEntry> Utilization { get; set; }

    }
}
