// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.TestBase.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Parameters body to pass for Test Base Package name availability check.
    /// </summary>
    public partial class PackageCheckNameAvailabilityParameters
    {
        /// <summary>
        /// Initializes a new instance of the
        /// PackageCheckNameAvailabilityParameters class.
        /// </summary>
        public PackageCheckNameAvailabilityParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// PackageCheckNameAvailabilityParameters class.
        /// </summary>
        /// <param name="name">Resource name to verify.</param>
        /// <param name="applicationName">Application name to verify.</param>
        /// <param name="version">Version name to verify.</param>
        /// <param name="type">fully qualified resource type which includes
        /// provider namespace.</param>
        public PackageCheckNameAvailabilityParameters(string name, string applicationName, string version, string type = default(string))
        {
            Name = name;
            ApplicationName = applicationName;
            Version = version;
            Type = type;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets resource name to verify.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets application name to verify.
        /// </summary>
        [JsonProperty(PropertyName = "applicationName")]
        public string ApplicationName { get; set; }

        /// <summary>
        /// Gets or sets version name to verify.
        /// </summary>
        [JsonProperty(PropertyName = "version")]
        public string Version { get; set; }

        /// <summary>
        /// Gets or sets fully qualified resource type which includes provider
        /// namespace.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

    }
}
