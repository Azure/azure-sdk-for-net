// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.TestBase.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Summary of a Test.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class TestSummaryResource : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the TestSummaryResource class.
        /// </summary>
        public TestSummaryResource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TestSummaryResource class.
        /// </summary>
        /// <param name="id">Resource ID.</param>
        /// <param name="name">Resource name.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="systemData">The system metadata relating to this
        /// resource</param>
        /// <param name="testSummaryId">The Id of the current Test
        /// Summary.</param>
        /// <param name="packageId">The Azure resource Id of package.</param>
        /// <param name="applicationName">Application name.</param>
        /// <param name="applicationVersion">Application version.</param>
        /// <param name="executionStatus">The execution status of last test.
        /// Possible values include: 'None', 'InProgress', 'Processing',
        /// 'Completed', 'NotExecuted', 'Incomplete', 'Failed',
        /// 'Succeeded'</param>
        /// <param name="testStatus">The status of last test. Possible values
        /// include: 'None', 'TestExecutionInProgress', 'DataProcessing',
        /// 'TestFailure', 'UpdateFailure', 'TestAndUpdateFailure',
        /// 'InfrastructureFailure', 'Completed'</param>
        /// <param name="grade">The grade of the test. Possible values include:
        /// 'None', 'NotAvailable', 'Pass', 'Fail'</param>
        /// <param name="testRunTime">The run time of the last test.</param>
        /// <param name="featureUpdatesTestSummary">The result summary of tests
        /// triggered by feature updates</param>
        /// <param name="securityUpdatesTestSummary">The result summary of
        /// tests triggered by security updates</param>
        /// <param name="packageTags">The tags of Package resource that are
        /// associated with the testSummary</param>
        public TestSummaryResource(string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), string testSummaryId = default(string), string packageId = default(string), string applicationName = default(string), string applicationVersion = default(string), string executionStatus = default(string), string testStatus = default(string), string grade = default(string), string testRunTime = default(string), OSUpdatesTestSummary featureUpdatesTestSummary = default(OSUpdatesTestSummary), OSUpdatesTestSummary securityUpdatesTestSummary = default(OSUpdatesTestSummary), IDictionary<string, string> packageTags = default(IDictionary<string, string>))
            : base(id, name, type)
        {
            SystemData = systemData;
            TestSummaryId = testSummaryId;
            PackageId = packageId;
            ApplicationName = applicationName;
            ApplicationVersion = applicationVersion;
            ExecutionStatus = executionStatus;
            TestStatus = testStatus;
            Grade = grade;
            TestRunTime = testRunTime;
            FeatureUpdatesTestSummary = featureUpdatesTestSummary;
            SecurityUpdatesTestSummary = securityUpdatesTestSummary;
            PackageTags = packageTags;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the system metadata relating to this resource
        /// </summary>
        [JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData { get; set; }

        /// <summary>
        /// Gets or sets the Id of the current Test Summary.
        /// </summary>
        [JsonProperty(PropertyName = "properties.testSummaryId")]
        public string TestSummaryId { get; set; }

        /// <summary>
        /// Gets or sets the Azure resource Id of package.
        /// </summary>
        [JsonProperty(PropertyName = "properties.packageId")]
        public string PackageId { get; set; }

        /// <summary>
        /// Gets or sets application name.
        /// </summary>
        [JsonProperty(PropertyName = "properties.applicationName")]
        public string ApplicationName { get; set; }

        /// <summary>
        /// Gets or sets application version.
        /// </summary>
        [JsonProperty(PropertyName = "properties.applicationVersion")]
        public string ApplicationVersion { get; set; }

        /// <summary>
        /// Gets or sets the execution status of last test. Possible values
        /// include: 'None', 'InProgress', 'Processing', 'Completed',
        /// 'NotExecuted', 'Incomplete', 'Failed', 'Succeeded'
        /// </summary>
        [JsonProperty(PropertyName = "properties.executionStatus")]
        public string ExecutionStatus { get; set; }

        /// <summary>
        /// Gets or sets the status of last test. Possible values include:
        /// 'None', 'TestExecutionInProgress', 'DataProcessing', 'TestFailure',
        /// 'UpdateFailure', 'TestAndUpdateFailure', 'InfrastructureFailure',
        /// 'Completed'
        /// </summary>
        [JsonProperty(PropertyName = "properties.testStatus")]
        public string TestStatus { get; set; }

        /// <summary>
        /// Gets or sets the grade of the test. Possible values include:
        /// 'None', 'NotAvailable', 'Pass', 'Fail'
        /// </summary>
        [JsonProperty(PropertyName = "properties.grade")]
        public string Grade { get; set; }

        /// <summary>
        /// Gets or sets the run time of the last test.
        /// </summary>
        [JsonProperty(PropertyName = "properties.testRunTime")]
        public string TestRunTime { get; set; }

        /// <summary>
        /// Gets or sets the result summary of tests triggered by feature
        /// updates
        /// </summary>
        [JsonProperty(PropertyName = "properties.featureUpdatesTestSummary")]
        public OSUpdatesTestSummary FeatureUpdatesTestSummary { get; set; }

        /// <summary>
        /// Gets or sets the result summary of tests triggered by security
        /// updates
        /// </summary>
        [JsonProperty(PropertyName = "properties.securityUpdatesTestSummary")]
        public OSUpdatesTestSummary SecurityUpdatesTestSummary { get; set; }

        /// <summary>
        /// Gets or sets the tags of Package resource that are associated with
        /// the testSummary
        /// </summary>
        [JsonProperty(PropertyName = "properties.packageTags")]
        public IDictionary<string, string> PackageTags { get; set; }

    }
}
