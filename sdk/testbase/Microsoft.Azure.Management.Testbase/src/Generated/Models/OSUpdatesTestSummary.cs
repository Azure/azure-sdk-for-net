// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.TestBase.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The summary of some tests.
    /// </summary>
    public partial class OSUpdatesTestSummary
    {
        /// <summary>
        /// Initializes a new instance of the OSUpdatesTestSummary class.
        /// </summary>
        public OSUpdatesTestSummary()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OSUpdatesTestSummary class.
        /// </summary>
        /// <param name="executionStatus">The status of the last test. Possible
        /// values include: 'None', 'InProgress', 'Processing', 'Completed',
        /// 'NotExecuted', 'Incomplete', 'Failed', 'Succeeded'</param>
        /// <param name="testStatus">The status of last test. Possible values
        /// include: 'None', 'TestExecutionInProgress', 'DataProcessing',
        /// 'TestFailure', 'UpdateFailure', 'TestAndUpdateFailure',
        /// 'InfrastructureFailure', 'Completed'</param>
        /// <param name="grade">The grade of last test. Possible values
        /// include: 'None', 'NotAvailable', 'Pass', 'Fail'</param>
        /// <param name="testRunTime">The run time of the last test.</param>
        /// <param name="osUpdateTestSummaries">Detailed summary for each OS
        /// update</param>
        public OSUpdatesTestSummary(string executionStatus = default(string), string testStatus = default(string), string grade = default(string), string testRunTime = default(string), IList<OSUpdateTestSummary> osUpdateTestSummaries = default(IList<OSUpdateTestSummary>))
        {
            ExecutionStatus = executionStatus;
            TestStatus = testStatus;
            Grade = grade;
            TestRunTime = testRunTime;
            OsUpdateTestSummaries = osUpdateTestSummaries;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the status of the last test. Possible values include:
        /// 'None', 'InProgress', 'Processing', 'Completed', 'NotExecuted',
        /// 'Incomplete', 'Failed', 'Succeeded'
        /// </summary>
        [JsonProperty(PropertyName = "executionStatus")]
        public string ExecutionStatus { get; set; }

        /// <summary>
        /// Gets or sets the status of last test. Possible values include:
        /// 'None', 'TestExecutionInProgress', 'DataProcessing', 'TestFailure',
        /// 'UpdateFailure', 'TestAndUpdateFailure', 'InfrastructureFailure',
        /// 'Completed'
        /// </summary>
        [JsonProperty(PropertyName = "testStatus")]
        public string TestStatus { get; set; }

        /// <summary>
        /// Gets or sets the grade of last test. Possible values include:
        /// 'None', 'NotAvailable', 'Pass', 'Fail'
        /// </summary>
        [JsonProperty(PropertyName = "grade")]
        public string Grade { get; set; }

        /// <summary>
        /// Gets or sets the run time of the last test.
        /// </summary>
        [JsonProperty(PropertyName = "testRunTime")]
        public string TestRunTime { get; set; }

        /// <summary>
        /// Gets or sets detailed summary for each OS update
        /// </summary>
        [JsonProperty(PropertyName = "osUpdateTestSummaries")]
        public IList<OSUpdateTestSummary> OsUpdateTestSummaries { get; set; }

    }
}
