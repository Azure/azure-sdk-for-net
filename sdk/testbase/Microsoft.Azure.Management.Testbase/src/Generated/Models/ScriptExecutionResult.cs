// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.TestBase.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The Script Execution Result.
    /// </summary>
    public partial class ScriptExecutionResult
    {
        /// <summary>
        /// Initializes a new instance of the ScriptExecutionResult class.
        /// </summary>
        public ScriptExecutionResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ScriptExecutionResult class.
        /// </summary>
        /// <param name="scriptName">Name of script.</param>
        /// <param name="startTime">Start time of script execution.</param>
        /// <param name="endTime">End time of script execution.</param>
        /// <param name="exitCode">Exit code.</param>
        /// <param name="timedOut">Whether the script execution is timed
        /// out.</param>
        /// <param name="stdoutLogFileName">The stdout log file name.</param>
        /// <param name="stderrLogFileName">The stderr log file name.</param>
        public ScriptExecutionResult(string scriptName = default(string), System.DateTime? startTime = default(System.DateTime?), System.DateTime? endTime = default(System.DateTime?), int? exitCode = default(int?), bool? timedOut = default(bool?), string stdoutLogFileName = default(string), string stderrLogFileName = default(string))
        {
            ScriptName = scriptName;
            StartTime = startTime;
            EndTime = endTime;
            ExitCode = exitCode;
            TimedOut = timedOut;
            StdoutLogFileName = stdoutLogFileName;
            StderrLogFileName = stderrLogFileName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of script.
        /// </summary>
        [JsonProperty(PropertyName = "scriptName")]
        public string ScriptName { get; set; }

        /// <summary>
        /// Gets or sets start time of script execution.
        /// </summary>
        [JsonProperty(PropertyName = "startTime")]
        public System.DateTime? StartTime { get; set; }

        /// <summary>
        /// Gets or sets end time of script execution.
        /// </summary>
        [JsonProperty(PropertyName = "endTime")]
        public System.DateTime? EndTime { get; set; }

        /// <summary>
        /// Gets or sets exit code.
        /// </summary>
        [JsonProperty(PropertyName = "exitCode")]
        public int? ExitCode { get; set; }

        /// <summary>
        /// Gets or sets whether the script execution is timed out.
        /// </summary>
        [JsonProperty(PropertyName = "timedOut")]
        public bool? TimedOut { get; set; }

        /// <summary>
        /// Gets or sets the stdout log file name.
        /// </summary>
        [JsonProperty(PropertyName = "stdoutLogFileName")]
        public string StdoutLogFileName { get; set; }

        /// <summary>
        /// Gets or sets the stderr log file name.
        /// </summary>
        [JsonProperty(PropertyName = "stderrLogFileName")]
        public string StderrLogFileName { get; set; }

    }
}
