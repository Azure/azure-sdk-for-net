// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.AI.DocumentTranslation
{
    /// <summary> The DocumentStatusDetail. </summary>
    public partial class DocumentStatusDetail
    {
        /// <summary> Initializes a new instance of DocumentStatusDetail. </summary>
        /// <param name="locationUri"> Location of the document or folder. </param>
        /// <param name="createdOn"> Operation created date time. </param>
        /// <param name="lastModified"> Date time in which the operation&apos;s status has been updated. </param>
        /// <param name="status"> List of possible statuses for job or document. </param>
        /// <param name="translateTo"> To language. </param>
        /// <param name="translationProgressPercentage"> Progress of the translation if available. </param>
        /// <param name="documentId"> Document Id. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="locationUri"/>, <paramref name="translateTo"/>, or <paramref name="documentId"/> is null. </exception>
        internal DocumentStatusDetail(Uri locationUri, DateTimeOffset createdOn, DateTimeOffset lastModified, TranslationStatus status, string translateTo, float translationProgressPercentage, string documentId)
        {
            if (locationUri == null)
            {
                throw new ArgumentNullException(nameof(locationUri));
            }
            if (translateTo == null)
            {
                throw new ArgumentNullException(nameof(translateTo));
            }
            if (documentId == null)
            {
                throw new ArgumentNullException(nameof(documentId));
            }

            LocationUri = locationUri;
            CreatedOn = createdOn;
            LastModified = lastModified;
            Status = status;
            TranslateTo = translateTo;
            TranslationProgressPercentage = translationProgressPercentage;
            DocumentId = documentId;
        }

        /// <summary> Initializes a new instance of DocumentStatusDetail. </summary>
        /// <param name="locationUri"> Location of the document or folder. </param>
        /// <param name="createdOn"> Operation created date time. </param>
        /// <param name="lastModified"> Date time in which the operation&apos;s status has been updated. </param>
        /// <param name="status"> List of possible statuses for job or document. </param>
        /// <param name="translateTo"> To language. </param>
        /// <param name="error"> This contains an outer error with error code, message, details, target and an inner error with more descriptive details. </param>
        /// <param name="translationProgressPercentage"> Progress of the translation if available. </param>
        /// <param name="documentId"> Document Id. </param>
        /// <param name="characterCharged"> Character charged by the API. </param>
        internal DocumentStatusDetail(Uri locationUri, DateTimeOffset createdOn, DateTimeOffset lastModified, TranslationStatus status, string translateTo, DocumentTranslationError error, float translationProgressPercentage, string documentId, long? characterCharged)
        {
            LocationUri = locationUri;
            CreatedOn = createdOn;
            LastModified = lastModified;
            Status = status;
            TranslateTo = translateTo;
            Error = error;
            TranslationProgressPercentage = translationProgressPercentage;
            DocumentId = documentId;
            CharacterCharged = characterCharged;
        }
        /// <summary> List of possible statuses for job or document. </summary>
        public TranslationStatus Status { get; }
        /// <summary> This contains an outer error with error code, message, details, target and an inner error with more descriptive details. </summary>
        public DocumentTranslationError Error { get; }
        /// <summary> Character charged by the API. </summary>
        public long? CharacterCharged { get; }
    }
}
