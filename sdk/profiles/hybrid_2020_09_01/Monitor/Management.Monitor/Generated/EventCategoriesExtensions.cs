// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Profiles.hybrid_2020_09_01.Monitor
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for EventCategories.
    /// </summary>
    public static partial class EventCategoriesExtensions
    {
            /// <summary>
            /// Get the list of available event categories supported in the Activity Logs
            /// Service.&lt;br&gt;The current list includes the following: Administrative,
            /// Security, ServiceHealth, Alert, Recommendation, Policy.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static EventCategoryCollection List(this IEventCategories operations)
            {
                return operations.ListAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get the list of available event categories supported in the Activity Logs
            /// Service.&lt;br&gt;The current list includes the following: Administrative,
            /// Security, ServiceHealth, Alert, Recommendation, Policy.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<EventCategoryCollection> ListAsync(this IEventCategories operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
