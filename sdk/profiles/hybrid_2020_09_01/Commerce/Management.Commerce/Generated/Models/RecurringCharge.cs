// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Profiles.hybrid_2020_09_01.Commerce.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Indicates a recurring charge is present for this offer.
    /// </summary>
    [Newtonsoft.Json.JsonObject("Recurring Charge")]
    public partial class RecurringCharge : OfferTermInfo
    {
        /// <summary>
        /// Initializes a new instance of the RecurringCharge class.
        /// </summary>
        public RecurringCharge()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RecurringCharge class.
        /// </summary>
        /// <param name="effectiveDate">Indicates the date from which the offer
        /// term is effective.</param>
        /// <param name="recurringChargeProperty">The amount of recurring
        /// charge as per the offer term.</param>
        public RecurringCharge(System.DateTime? effectiveDate = default(System.DateTime?), int? recurringChargeProperty = default(int?))
            : base(effectiveDate)
        {
            RecurringChargeProperty = recurringChargeProperty;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the amount of recurring charge as per the offer term.
        /// </summary>
        [JsonProperty(PropertyName = "RecurringCharge")]
        public int? RecurringChargeProperty { get; set; }

    }
}
