// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Profiles.hybrid_2020_09_01.Commerce.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Parameters that are used in the odata $filter query parameter for
    /// providing RateCard information.
    /// </summary>
    public partial class RateCardQueryParameters
    {
        /// <summary>
        /// Initializes a new instance of the RateCardQueryParameters class.
        /// </summary>
        public RateCardQueryParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RateCardQueryParameters class.
        /// </summary>
        /// <param name="offerDurableId">The Offer ID parameter consists of the
        /// 'MS-AZR-' prefix, plus the Offer ID number (e.g., MS-AZR-0026P).
        /// See https://azure.microsoft.com/en-us/support/legal/offer-details/
        /// for more information on the list of available Offer IDs,
        /// country/region availability, and billing currency.</param>
        /// <param name="currency">The currency in which the rates need to be
        /// provided.</param>
        /// <param name="locale">The culture in which the resource metadata
        /// needs to be localized.</param>
        /// <param name="regionInfo">2 letter ISO code where the offer was
        /// purchased.</param>
        public RateCardQueryParameters(string offerDurableId, string currency, string locale, string regionInfo)
        {
            OfferDurableId = offerDurableId;
            Currency = currency;
            Locale = locale;
            RegionInfo = regionInfo;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the Offer ID parameter consists of the 'MS-AZR-'
        /// prefix, plus the Offer ID number (e.g., MS-AZR-0026P). See
        /// https://azure.microsoft.com/en-us/support/legal/offer-details/ for
        /// more information on the list of available Offer IDs, country/region
        /// availability, and billing currency.
        /// </summary>
        [JsonProperty(PropertyName = "OfferDurableId")]
        public string OfferDurableId { get; set; }

        /// <summary>
        /// Gets or sets the currency in which the rates need to be provided.
        /// </summary>
        [JsonProperty(PropertyName = "Currency")]
        public string Currency { get; set; }

        /// <summary>
        /// Gets or sets the culture in which the resource metadata needs to be
        /// localized.
        /// </summary>
        [JsonProperty(PropertyName = "Locale")]
        public string Locale { get; set; }

        /// <summary>
        /// Gets or sets 2 letter ISO code where the offer was purchased.
        /// </summary>
        [JsonProperty(PropertyName = "RegionInfo")]
        public string RegionInfo { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (OfferDurableId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "OfferDurableId");
            }
            if (Currency == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Currency");
            }
            if (Locale == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Locale");
            }
            if (RegionInfo == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "RegionInfo");
            }
            if (OfferDurableId != null)
            {
                if (!System.Text.RegularExpressions.Regex.IsMatch(OfferDurableId, "^MS-AZR-\\d{4}P(-\\d{4}P)*$"))
                {
                    throw new ValidationException(ValidationRules.Pattern, "OfferDurableId", "^MS-AZR-\\d{4}P(-\\d{4}P)*$");
                }
            }
        }
    }
}
