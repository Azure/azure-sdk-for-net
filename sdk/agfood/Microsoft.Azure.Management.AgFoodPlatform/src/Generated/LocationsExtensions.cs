// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AgFoodPlatform
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for Locations.
    /// </summary>
    public static partial class LocationsExtensions
    {
            /// <summary>
            /// Checks the name availability of the resource with requested resource name.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// NameAvailabilityRequest object.
            /// </param>
            public static CheckNameAvailabilityResponse CheckNameAvailability(this ILocations operations, CheckNameAvailabilityRequest body)
            {
                return operations.CheckNameAvailabilityAsync(body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Checks the name availability of the resource with requested resource name.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// NameAvailabilityRequest object.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CheckNameAvailabilityResponse> CheckNameAvailabilityAsync(this ILocations operations, CheckNameAvailabilityRequest body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CheckNameAvailabilityWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
