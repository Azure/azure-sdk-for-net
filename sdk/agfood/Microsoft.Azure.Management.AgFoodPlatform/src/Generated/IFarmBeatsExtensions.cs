// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AgFoodPlatform
{
    using Microsoft.Rest;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// FarmBeatsExtensions operations.
    /// </summary>
    public partial interface IFarmBeatsExtensions
    {
        /// <summary>
        /// Get list of farmBeats extension.
        /// </summary>
        /// <param name='farmBeatsExtensionIds'>
        /// FarmBeatsExtension ids.
        /// </param>
        /// <param name='farmBeatsExtensionNames'>
        /// FarmBeats extension names.
        /// </param>
        /// <param name='extensionCategories'>
        /// Extension categories.
        /// </param>
        /// <param name='publisherIds'>
        /// Publisher ids.
        /// </param>
        /// <param name='maxPageSize'>
        /// Maximum number of items needed (inclusive).
        /// Minimum = 10, Maximum = 1000, Default value = 50.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<FarmBeatsExtensionListResponse>> ListWithHttpMessagesAsync(IList<string> farmBeatsExtensionIds = default(IList<string>), IList<string> farmBeatsExtensionNames = default(IList<string>), IList<string> extensionCategories = default(IList<string>), IList<string> publisherIds = default(IList<string>), int? maxPageSize = 50, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get farmBeats extension.
        /// </summary>
        /// <param name='farmBeatsExtensionId'>
        /// farmBeatsExtensionId to be queried.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<FarmBeatsExtension>> GetWithHttpMessagesAsync(string farmBeatsExtensionId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
