// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Synapse
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for WorkspaceManagedSqlServerVulnerabilityAssessmentsOperations.
    /// </summary>
    public static partial class WorkspaceManagedSqlServerVulnerabilityAssessmentsOperationsExtensions
    {
            /// <summary>
            /// Get server's vulnerability assessment.
            /// </summary>
            /// <remarks>
            /// Get workspace managed sql server's vulnerability assessment.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace
            /// </param>
            public static ServerVulnerabilityAssessment Get(this IWorkspaceManagedSqlServerVulnerabilityAssessmentsOperations operations, string resourceGroupName, string workspaceName)
            {
                return operations.GetAsync(resourceGroupName, workspaceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get server's vulnerability assessment.
            /// </summary>
            /// <remarks>
            /// Get workspace managed sql server's vulnerability assessment.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ServerVulnerabilityAssessment> GetAsync(this IWorkspaceManagedSqlServerVulnerabilityAssessmentsOperations operations, string resourceGroupName, string workspaceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, workspaceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create or Update server's vulnerability assessment.
            /// </summary>
            /// <remarks>
            /// Create or Update workspace managed sql server's vulnerability assessment.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace
            /// </param>
            /// <param name='parameters'>
            /// Properties for vulnerability assessment.
            /// </param>
            public static ServerVulnerabilityAssessment CreateOrUpdate(this IWorkspaceManagedSqlServerVulnerabilityAssessmentsOperations operations, string resourceGroupName, string workspaceName, ServerVulnerabilityAssessment parameters)
            {
                return operations.CreateOrUpdateAsync(resourceGroupName, workspaceName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create or Update server's vulnerability assessment.
            /// </summary>
            /// <remarks>
            /// Create or Update workspace managed sql server's vulnerability assessment.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace
            /// </param>
            /// <param name='parameters'>
            /// Properties for vulnerability assessment.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ServerVulnerabilityAssessment> CreateOrUpdateAsync(this IWorkspaceManagedSqlServerVulnerabilityAssessmentsOperations operations, string resourceGroupName, string workspaceName, ServerVulnerabilityAssessment parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, workspaceName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Remove server's vulnerability assessment.
            /// </summary>
            /// <remarks>
            /// Remove workspace managed sql server's vulnerability assessment.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace
            /// </param>
            public static void Delete(this IWorkspaceManagedSqlServerVulnerabilityAssessmentsOperations operations, string resourceGroupName, string workspaceName)
            {
                operations.DeleteAsync(resourceGroupName, workspaceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Remove server's vulnerability assessment.
            /// </summary>
            /// <remarks>
            /// Remove workspace managed sql server's vulnerability assessment.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IWorkspaceManagedSqlServerVulnerabilityAssessmentsOperations operations, string resourceGroupName, string workspaceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, workspaceName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Lists the vulnerability assessment policies associated with a server.
            /// </summary>
            /// <remarks>
            /// Lists the vulnerability assessment policies associated with a workspace
            /// managed sql server.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace
            /// </param>
            public static IPage<ServerVulnerabilityAssessment> List(this IWorkspaceManagedSqlServerVulnerabilityAssessmentsOperations operations, string resourceGroupName, string workspaceName)
            {
                return operations.ListAsync(resourceGroupName, workspaceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists the vulnerability assessment policies associated with a server.
            /// </summary>
            /// <remarks>
            /// Lists the vulnerability assessment policies associated with a workspace
            /// managed sql server.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<ServerVulnerabilityAssessment>> ListAsync(this IWorkspaceManagedSqlServerVulnerabilityAssessmentsOperations operations, string resourceGroupName, string workspaceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, workspaceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists the vulnerability assessment policies associated with a server.
            /// </summary>
            /// <remarks>
            /// Lists the vulnerability assessment policies associated with a workspace
            /// managed sql server.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<ServerVulnerabilityAssessment> ListNext(this IWorkspaceManagedSqlServerVulnerabilityAssessmentsOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists the vulnerability assessment policies associated with a server.
            /// </summary>
            /// <remarks>
            /// Lists the vulnerability assessment policies associated with a workspace
            /// managed sql server.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<ServerVulnerabilityAssessment>> ListNextAsync(this IWorkspaceManagedSqlServerVulnerabilityAssessmentsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
