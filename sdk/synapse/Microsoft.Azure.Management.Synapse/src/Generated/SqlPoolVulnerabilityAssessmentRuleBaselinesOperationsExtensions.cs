// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Synapse
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for SqlPoolVulnerabilityAssessmentRuleBaselinesOperations.
    /// </summary>
    public static partial class SqlPoolVulnerabilityAssessmentRuleBaselinesOperationsExtensions
    {
            /// <summary>
            /// Creates or updates a Sql pool's vulnerability assessment rule baseline.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace
            /// </param>
            /// <param name='sqlPoolName'>
            /// SQL pool name
            /// </param>
            /// <param name='ruleId'>
            /// The vulnerability assessment rule ID.
            /// </param>
            /// <param name='baselineName'>
            /// The name of the vulnerability assessment rule baseline (default implies a
            /// baseline on a Sql pool level rule and master for workspace level rule).
            /// Possible values include: 'master', 'default'
            /// </param>
            /// <param name='parameters'>
            /// The requested rule baseline resource.
            /// </param>
            public static SqlPoolVulnerabilityAssessmentRuleBaseline CreateOrUpdate(this ISqlPoolVulnerabilityAssessmentRuleBaselinesOperations operations, string resourceGroupName, string workspaceName, string sqlPoolName, string ruleId, VulnerabilityAssessmentPolicyBaselineName baselineName, SqlPoolVulnerabilityAssessmentRuleBaseline parameters)
            {
                return operations.CreateOrUpdateAsync(resourceGroupName, workspaceName, sqlPoolName, ruleId, baselineName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates or updates a Sql pool's vulnerability assessment rule baseline.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace
            /// </param>
            /// <param name='sqlPoolName'>
            /// SQL pool name
            /// </param>
            /// <param name='ruleId'>
            /// The vulnerability assessment rule ID.
            /// </param>
            /// <param name='baselineName'>
            /// The name of the vulnerability assessment rule baseline (default implies a
            /// baseline on a Sql pool level rule and master for workspace level rule).
            /// Possible values include: 'master', 'default'
            /// </param>
            /// <param name='parameters'>
            /// The requested rule baseline resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SqlPoolVulnerabilityAssessmentRuleBaseline> CreateOrUpdateAsync(this ISqlPoolVulnerabilityAssessmentRuleBaselinesOperations operations, string resourceGroupName, string workspaceName, string sqlPoolName, string ruleId, VulnerabilityAssessmentPolicyBaselineName baselineName, SqlPoolVulnerabilityAssessmentRuleBaseline parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, workspaceName, sqlPoolName, ruleId, baselineName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Removes the database's vulnerability assessment rule baseline.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace
            /// </param>
            /// <param name='sqlPoolName'>
            /// SQL pool name
            /// </param>
            /// <param name='ruleId'>
            /// The vulnerability assessment rule ID.
            /// </param>
            /// <param name='baselineName'>
            /// The name of the vulnerability assessment rule baseline (default implies a
            /// baseline on a Sql pool level rule and master for workspace level rule).
            /// Possible values include: 'master', 'default'
            /// </param>
            public static void Delete(this ISqlPoolVulnerabilityAssessmentRuleBaselinesOperations operations, string resourceGroupName, string workspaceName, string sqlPoolName, string ruleId, VulnerabilityAssessmentPolicyBaselineName baselineName)
            {
                operations.DeleteAsync(resourceGroupName, workspaceName, sqlPoolName, ruleId, baselineName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Removes the database's vulnerability assessment rule baseline.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace
            /// </param>
            /// <param name='sqlPoolName'>
            /// SQL pool name
            /// </param>
            /// <param name='ruleId'>
            /// The vulnerability assessment rule ID.
            /// </param>
            /// <param name='baselineName'>
            /// The name of the vulnerability assessment rule baseline (default implies a
            /// baseline on a Sql pool level rule and master for workspace level rule).
            /// Possible values include: 'master', 'default'
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this ISqlPoolVulnerabilityAssessmentRuleBaselinesOperations operations, string resourceGroupName, string workspaceName, string sqlPoolName, string ruleId, VulnerabilityAssessmentPolicyBaselineName baselineName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, workspaceName, sqlPoolName, ruleId, baselineName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Gets a SqlPool's vulnerability assessment rule baseline.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace
            /// </param>
            /// <param name='sqlPoolName'>
            /// SQL pool name
            /// </param>
            /// <param name='ruleId'>
            /// The vulnerability assessment rule ID.
            /// </param>
            /// <param name='baselineName'>
            /// The name of the vulnerability assessment rule baseline (default implies a
            /// baseline on a Sql pool level rule and master for server level rule).
            /// Possible values include: 'master', 'default'
            /// </param>
            public static SqlPoolVulnerabilityAssessmentRuleBaseline Get(this ISqlPoolVulnerabilityAssessmentRuleBaselinesOperations operations, string resourceGroupName, string workspaceName, string sqlPoolName, string ruleId, VulnerabilityAssessmentPolicyBaselineName baselineName)
            {
                return operations.GetAsync(resourceGroupName, workspaceName, sqlPoolName, ruleId, baselineName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets a SqlPool's vulnerability assessment rule baseline.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace
            /// </param>
            /// <param name='sqlPoolName'>
            /// SQL pool name
            /// </param>
            /// <param name='ruleId'>
            /// The vulnerability assessment rule ID.
            /// </param>
            /// <param name='baselineName'>
            /// The name of the vulnerability assessment rule baseline (default implies a
            /// baseline on a Sql pool level rule and master for server level rule).
            /// Possible values include: 'master', 'default'
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SqlPoolVulnerabilityAssessmentRuleBaseline> GetAsync(this ISqlPoolVulnerabilityAssessmentRuleBaselinesOperations operations, string resourceGroupName, string workspaceName, string sqlPoolName, string ruleId, VulnerabilityAssessmentPolicyBaselineName baselineName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, workspaceName, sqlPoolName, ruleId, baselineName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
