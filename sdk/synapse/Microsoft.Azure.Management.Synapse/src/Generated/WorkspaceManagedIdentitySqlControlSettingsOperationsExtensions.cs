// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Synapse
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for WorkspaceManagedIdentitySqlControlSettingsOperations.
    /// </summary>
    public static partial class WorkspaceManagedIdentitySqlControlSettingsOperationsExtensions
    {
            /// <summary>
            /// Get Managed Identity Sql Control Settings
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace
            /// </param>
            public static ManagedIdentitySqlControlSettingsModel Get(this IWorkspaceManagedIdentitySqlControlSettingsOperations operations, string resourceGroupName, string workspaceName)
            {
                return operations.GetAsync(resourceGroupName, workspaceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get Managed Identity Sql Control Settings
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ManagedIdentitySqlControlSettingsModel> GetAsync(this IWorkspaceManagedIdentitySqlControlSettingsOperations operations, string resourceGroupName, string workspaceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, workspaceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create or update Managed Identity Sql Control Settings
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace
            /// </param>
            /// <param name='managedIdentitySqlControlSettings'>
            /// Managed Identity Sql Control Settings
            /// </param>
            public static ManagedIdentitySqlControlSettingsModel CreateOrUpdate(this IWorkspaceManagedIdentitySqlControlSettingsOperations operations, string resourceGroupName, string workspaceName, ManagedIdentitySqlControlSettingsModel managedIdentitySqlControlSettings)
            {
                return operations.CreateOrUpdateAsync(resourceGroupName, workspaceName, managedIdentitySqlControlSettings).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create or update Managed Identity Sql Control Settings
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace
            /// </param>
            /// <param name='managedIdentitySqlControlSettings'>
            /// Managed Identity Sql Control Settings
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ManagedIdentitySqlControlSettingsModel> CreateOrUpdateAsync(this IWorkspaceManagedIdentitySqlControlSettingsOperations operations, string resourceGroupName, string workspaceName, ManagedIdentitySqlControlSettingsModel managedIdentitySqlControlSettings, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, workspaceName, managedIdentitySqlControlSettings, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create or update Managed Identity Sql Control Settings
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace
            /// </param>
            /// <param name='managedIdentitySqlControlSettings'>
            /// Managed Identity Sql Control Settings
            /// </param>
            public static ManagedIdentitySqlControlSettingsModel BeginCreateOrUpdate(this IWorkspaceManagedIdentitySqlControlSettingsOperations operations, string resourceGroupName, string workspaceName, ManagedIdentitySqlControlSettingsModel managedIdentitySqlControlSettings)
            {
                return operations.BeginCreateOrUpdateAsync(resourceGroupName, workspaceName, managedIdentitySqlControlSettings).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create or update Managed Identity Sql Control Settings
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='workspaceName'>
            /// The name of the workspace
            /// </param>
            /// <param name='managedIdentitySqlControlSettings'>
            /// Managed Identity Sql Control Settings
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ManagedIdentitySqlControlSettingsModel> BeginCreateOrUpdateAsync(this IWorkspaceManagedIdentitySqlControlSettingsOperations operations, string resourceGroupName, string workspaceName, ManagedIdentitySqlControlSettingsModel managedIdentitySqlControlSettings, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateOrUpdateWithHttpMessagesAsync(resourceGroupName, workspaceName, managedIdentitySqlControlSettings, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
