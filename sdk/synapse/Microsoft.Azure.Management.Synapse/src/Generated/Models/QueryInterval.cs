// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Synapse.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A database query.
    /// </summary>
    public partial class QueryInterval
    {
        /// <summary>
        /// Initializes a new instance of the QueryInterval class.
        /// </summary>
        public QueryInterval()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the QueryInterval class.
        /// </summary>
        /// <param name="intervalStartTime">The start time of the measurement
        /// interval (ISO8601 format).</param>
        /// <param name="executionCount">The number of times the query was
        /// executed during this interval.</param>
        /// <param name="metrics">The list of query metrics during this
        /// interval.</param>
        public QueryInterval(System.DateTime? intervalStartTime = default(System.DateTime?), double? executionCount = default(double?), IList<QueryMetric> metrics = default(IList<QueryMetric>))
        {
            IntervalStartTime = intervalStartTime;
            ExecutionCount = executionCount;
            Metrics = metrics;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the start time of the measurement interval (ISO8601 format).
        /// </summary>
        [JsonProperty(PropertyName = "intervalStartTime")]
        public System.DateTime? IntervalStartTime { get; private set; }

        /// <summary>
        /// Gets the number of times the query was executed during this
        /// interval.
        /// </summary>
        [JsonProperty(PropertyName = "executionCount")]
        public double? ExecutionCount { get; private set; }

        /// <summary>
        /// Gets the list of query metrics during this interval.
        /// </summary>
        [JsonProperty(PropertyName = "metrics")]
        public IList<QueryMetric> Metrics { get; private set; }

    }
}
