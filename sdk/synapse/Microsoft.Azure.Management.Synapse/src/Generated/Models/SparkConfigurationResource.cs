// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Synapse.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// SparkConfiguration response details
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class SparkConfigurationResource : SubResource
    {
        /// <summary>
        /// Initializes a new instance of the SparkConfigurationResource class.
        /// </summary>
        public SparkConfigurationResource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SparkConfigurationResource class.
        /// </summary>
        /// <param name="configs">SparkConfiguration configs.</param>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="etag">Resource Etag.</param>
        /// <param name="description">Description about the
        /// SparkConfiguration.</param>
        /// <param name="annotations">Annotations for
        /// SparkConfiguration.</param>
        /// <param name="notes">additional Notes.</param>
        /// <param name="createdBy">The identity that created the
        /// resource.</param>
        /// <param name="created">The timestamp of resource creation.</param>
        public SparkConfigurationResource(IDictionary<string, string> configs, string id = default(string), string name = default(string), string type = default(string), string etag = default(string), string description = default(string), IList<string> annotations = default(IList<string>), string notes = default(string), string createdBy = default(string), System.DateTime? created = default(System.DateTime?))
            : base(id, name, type, etag)
        {
            Description = description;
            Configs = configs;
            Annotations = annotations;
            Notes = notes;
            CreatedBy = createdBy;
            Created = created;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets description about the SparkConfiguration.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets sparkConfiguration configs.
        /// </summary>
        [JsonProperty(PropertyName = "properties.configs")]
        public IDictionary<string, string> Configs { get; set; }

        /// <summary>
        /// Gets or sets annotations for SparkConfiguration.
        /// </summary>
        [JsonProperty(PropertyName = "properties.annotations")]
        public IList<string> Annotations { get; set; }

        /// <summary>
        /// Gets or sets additional Notes.
        /// </summary>
        [JsonProperty(PropertyName = "properties.notes")]
        public string Notes { get; set; }

        /// <summary>
        /// Gets or sets the identity that created the resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.createdBy")]
        public string CreatedBy { get; set; }

        /// <summary>
        /// Gets or sets the timestamp of resource creation.
        /// </summary>
        [JsonProperty(PropertyName = "properties.created")]
        public System.DateTime? Created { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Configs == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Configs");
            }
        }
    }
}
