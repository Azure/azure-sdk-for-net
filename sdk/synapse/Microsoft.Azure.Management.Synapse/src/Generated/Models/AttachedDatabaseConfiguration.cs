// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Synapse.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Class representing an attached database configuration.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class AttachedDatabaseConfiguration : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the AttachedDatabaseConfiguration
        /// class.
        /// </summary>
        public AttachedDatabaseConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AttachedDatabaseConfiguration
        /// class.
        /// </summary>
        /// <param name="databaseName">The name of the database which you would
        /// like to attach, use * if you want to follow all current and future
        /// databases.</param>
        /// <param name="kustoPoolResourceId">The resource id of the kusto pool
        /// where the databases you would like to attach reside.</param>
        /// <param name="defaultPrincipalsModificationKind">The default
        /// principals modification kind. Possible values include: 'Union',
        /// 'Replace', 'None'</param>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="location">Resource location.</param>
        /// <param name="provisioningState">The provisioned state of the
        /// resource. Possible values include: 'Running', 'Creating',
        /// 'Deleting', 'Succeeded', 'Failed', 'Moving', 'Canceled'</param>
        /// <param name="attachedDatabaseNames">The list of databases from the
        /// clusterResourceId which are currently attached to the kusto
        /// pool.</param>
        /// <param name="tableLevelSharingProperties">Table level sharing
        /// specifications</param>
        /// <param name="systemData">Azure Resource Manager metadata containing
        /// createdBy and modifiedBy information.</param>
        public AttachedDatabaseConfiguration(string databaseName, string kustoPoolResourceId, string defaultPrincipalsModificationKind, string id = default(string), string name = default(string), string type = default(string), string location = default(string), string provisioningState = default(string), IList<string> attachedDatabaseNames = default(IList<string>), TableLevelSharingProperties tableLevelSharingProperties = default(TableLevelSharingProperties), SystemData systemData = default(SystemData))
            : base(id, name, type)
        {
            Location = location;
            ProvisioningState = provisioningState;
            DatabaseName = databaseName;
            KustoPoolResourceId = kustoPoolResourceId;
            AttachedDatabaseNames = attachedDatabaseNames;
            DefaultPrincipalsModificationKind = defaultPrincipalsModificationKind;
            TableLevelSharingProperties = tableLevelSharingProperties;
            SystemData = systemData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets resource location.
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public string Location { get; set; }

        /// <summary>
        /// Gets or sets the provisioned state of the resource. Possible values
        /// include: 'Running', 'Creating', 'Deleting', 'Succeeded', 'Failed',
        /// 'Moving', 'Canceled'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Gets or sets the name of the database which you would like to
        /// attach, use * if you want to follow all current and future
        /// databases.
        /// </summary>
        [JsonProperty(PropertyName = "properties.databaseName")]
        public string DatabaseName { get; set; }

        /// <summary>
        /// Gets or sets the resource id of the kusto pool where the databases
        /// you would like to attach reside.
        /// </summary>
        [JsonProperty(PropertyName = "properties.clusterResourceId")]
        public string KustoPoolResourceId { get; set; }

        /// <summary>
        /// Gets the list of databases from the clusterResourceId which are
        /// currently attached to the kusto pool.
        /// </summary>
        [JsonProperty(PropertyName = "properties.attachedDatabaseNames")]
        public IList<string> AttachedDatabaseNames { get; private set; }

        /// <summary>
        /// Gets or sets the default principals modification kind. Possible
        /// values include: 'Union', 'Replace', 'None'
        /// </summary>
        [JsonProperty(PropertyName = "properties.defaultPrincipalsModificationKind")]
        public string DefaultPrincipalsModificationKind { get; set; }

        /// <summary>
        /// Gets or sets table level sharing specifications
        /// </summary>
        [JsonProperty(PropertyName = "properties.tableLevelSharingProperties")]
        public TableLevelSharingProperties TableLevelSharingProperties { get; set; }

        /// <summary>
        /// Gets azure Resource Manager metadata containing createdBy and
        /// modifiedBy information.
        /// </summary>
        [JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (DatabaseName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DatabaseName");
            }
            if (KustoPoolResourceId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "KustoPoolResourceId");
            }
            if (DefaultPrincipalsModificationKind == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DefaultPrincipalsModificationKind");
            }
        }
    }
}
