// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Synapse.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Spark pool auto-pausing properties
    /// </summary>
    /// <remarks>
    /// Auto-pausing properties of a Big Data pool powered by Apache Spark
    /// </remarks>
    public partial class AutoPauseProperties
    {
        /// <summary>
        /// Initializes a new instance of the AutoPauseProperties class.
        /// </summary>
        public AutoPauseProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AutoPauseProperties class.
        /// </summary>
        /// <param name="delayInMinutes">Number of minutes of idle time before
        /// the Big Data pool is automatically paused.</param>
        /// <param name="enabled">Whether auto-pausing is enabled for the Big
        /// Data pool.</param>
        public AutoPauseProperties(int? delayInMinutes = default(int?), bool? enabled = default(bool?))
        {
            DelayInMinutes = delayInMinutes;
            Enabled = enabled;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets number of minutes of idle time before the Big Data
        /// pool is automatically paused.
        /// </summary>
        [JsonProperty(PropertyName = "delayInMinutes")]
        public int? DelayInMinutes { get; set; }

        /// <summary>
        /// Gets or sets whether auto-pausing is enabled for the Big Data pool.
        /// </summary>
        [JsonProperty(PropertyName = "enabled")]
        public bool? Enabled { get; set; }

    }
}
