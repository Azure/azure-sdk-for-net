// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Synapse.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Azure SKU definition.
    /// </summary>
    public partial class AzureSku
    {
        /// <summary>
        /// Initializes a new instance of the AzureSku class.
        /// </summary>
        public AzureSku()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AzureSku class.
        /// </summary>
        /// <param name="name">SKU name. Possible values include: 'Compute
        /// optimized', 'Storage optimized'</param>
        /// <param name="size">SKU size. Possible values include: 'Extra
        /// small', 'Small', 'Medium', 'Large'</param>
        /// <param name="capacity">The number of instances of the
        /// cluster.</param>
        public AzureSku(string name, string size, int? capacity = default(int?))
        {
            Name = name;
            Capacity = capacity;
            Size = size;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets SKU name. Possible values include: 'Compute
        /// optimized', 'Storage optimized'
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the number of instances of the cluster.
        /// </summary>
        [JsonProperty(PropertyName = "capacity")]
        public int? Capacity { get; set; }

        /// <summary>
        /// Gets or sets SKU size. Possible values include: 'Extra small',
        /// 'Small', 'Medium', 'Large'
        /// </summary>
        [JsonProperty(PropertyName = "size")]
        public string Size { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Size == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Size");
            }
        }
    }
}
