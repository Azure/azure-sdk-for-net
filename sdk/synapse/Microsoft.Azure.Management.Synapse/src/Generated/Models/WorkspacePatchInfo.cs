// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Synapse.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Workspace patch details
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class WorkspacePatchInfo
    {
        /// <summary>
        /// Initializes a new instance of the WorkspacePatchInfo class.
        /// </summary>
        public WorkspacePatchInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WorkspacePatchInfo class.
        /// </summary>
        /// <param name="tags">Resource tags</param>
        /// <param name="identity">The identity of the workspace</param>
        /// <param name="sqlAdministratorLoginPassword">SQL administrator login
        /// password</param>
        /// <param name="managedVirtualNetworkSettings">Managed Virtual Network
        /// Settings</param>
        /// <param name="workspaceRepositoryConfiguration">Git integration
        /// settings</param>
        /// <param name="purviewConfiguration">Purview Configuration</param>
        /// <param name="provisioningState">Resource provisioning state</param>
        /// <param name="encryption">The encryption details of the
        /// workspace</param>
        /// <param name="publicNetworkAccess">Enable or Disable public network
        /// access to workspace. Possible values include: 'Enabled',
        /// 'Disabled'</param>
        public WorkspacePatchInfo(IDictionary<string, string> tags = default(IDictionary<string, string>), ManagedIdentity identity = default(ManagedIdentity), string sqlAdministratorLoginPassword = default(string), ManagedVirtualNetworkSettings managedVirtualNetworkSettings = default(ManagedVirtualNetworkSettings), WorkspaceRepositoryConfiguration workspaceRepositoryConfiguration = default(WorkspaceRepositoryConfiguration), PurviewConfiguration purviewConfiguration = default(PurviewConfiguration), string provisioningState = default(string), EncryptionDetails encryption = default(EncryptionDetails), string publicNetworkAccess = default(string))
        {
            Tags = tags;
            Identity = identity;
            SqlAdministratorLoginPassword = sqlAdministratorLoginPassword;
            ManagedVirtualNetworkSettings = managedVirtualNetworkSettings;
            WorkspaceRepositoryConfiguration = workspaceRepositoryConfiguration;
            PurviewConfiguration = purviewConfiguration;
            ProvisioningState = provisioningState;
            Encryption = encryption;
            PublicNetworkAccess = publicNetworkAccess;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets resource tags
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

        /// <summary>
        /// Gets or sets the identity of the workspace
        /// </summary>
        [JsonProperty(PropertyName = "identity")]
        public ManagedIdentity Identity { get; set; }

        /// <summary>
        /// Gets or sets SQL administrator login password
        /// </summary>
        [JsonProperty(PropertyName = "properties.sqlAdministratorLoginPassword")]
        public string SqlAdministratorLoginPassword { get; set; }

        /// <summary>
        /// Gets or sets managed Virtual Network Settings
        /// </summary>
        [JsonProperty(PropertyName = "properties.managedVirtualNetworkSettings")]
        public ManagedVirtualNetworkSettings ManagedVirtualNetworkSettings { get; set; }

        /// <summary>
        /// Gets or sets git integration settings
        /// </summary>
        [JsonProperty(PropertyName = "properties.workspaceRepositoryConfiguration")]
        public WorkspaceRepositoryConfiguration WorkspaceRepositoryConfiguration { get; set; }

        /// <summary>
        /// Gets or sets purview Configuration
        /// </summary>
        [JsonProperty(PropertyName = "properties.purviewConfiguration")]
        public PurviewConfiguration PurviewConfiguration { get; set; }

        /// <summary>
        /// Gets resource provisioning state
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets or sets the encryption details of the workspace
        /// </summary>
        [JsonProperty(PropertyName = "properties.encryption")]
        public EncryptionDetails Encryption { get; set; }

        /// <summary>
        /// Gets or sets enable or Disable public network access to workspace.
        /// Possible values include: 'Enabled', 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "properties.publicNetworkAccess")]
        public string PublicNetworkAccess { get; set; }

    }
}
