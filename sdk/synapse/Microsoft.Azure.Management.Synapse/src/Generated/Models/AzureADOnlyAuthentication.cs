// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Synapse.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Azure Active Directory Only Authentication Info
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class AzureADOnlyAuthentication : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the AzureADOnlyAuthentication class.
        /// </summary>
        public AzureADOnlyAuthentication()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AzureADOnlyAuthentication class.
        /// </summary>
        /// <param name="azureADOnlyAuthenticationProperty">Azure Active
        /// Directory only Authentication enabled.</param>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="state">property configuration state. Possible values
        /// include: 'Consistent', 'InConsistent', 'Updating'</param>
        /// <param name="creationDate">property configuration date</param>
        public AzureADOnlyAuthentication(bool azureADOnlyAuthenticationProperty, string id = default(string), string name = default(string), string type = default(string), string state = default(string), System.DateTime? creationDate = default(System.DateTime?))
            : base(id, name, type)
        {
            AzureADOnlyAuthenticationProperty = azureADOnlyAuthenticationProperty;
            State = state;
            CreationDate = creationDate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets azure Active Directory only Authentication enabled.
        /// </summary>
        [JsonProperty(PropertyName = "properties.azureADOnlyAuthentication")]
        public bool AzureADOnlyAuthenticationProperty { get; set; }

        /// <summary>
        /// Gets property configuration state. Possible values include:
        /// 'Consistent', 'InConsistent', 'Updating'
        /// </summary>
        [JsonProperty(PropertyName = "properties.state")]
        public string State { get; private set; }

        /// <summary>
        /// Gets property configuration date
        /// </summary>
        [JsonProperty(PropertyName = "properties.creationDate")]
        public System.DateTime? CreationDate { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
