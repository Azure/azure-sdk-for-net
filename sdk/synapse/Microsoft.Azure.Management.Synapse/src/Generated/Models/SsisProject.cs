// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Synapse.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Ssis project.
    /// </summary>
    [Newtonsoft.Json.JsonObject("Project")]
    public partial class SsisProject : SsisObjectMetadata
    {
        /// <summary>
        /// Initializes a new instance of the SsisProject class.
        /// </summary>
        public SsisProject()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SsisProject class.
        /// </summary>
        /// <param name="id">Metadata id.</param>
        /// <param name="name">Metadata name.</param>
        /// <param name="description">Metadata description.</param>
        /// <param name="folderId">Folder id which contains project.</param>
        /// <param name="version">Project version.</param>
        /// <param name="environmentRefs">Environment reference in
        /// project</param>
        /// <param name="parameters">Parameters in project</param>
        public SsisProject(long? id = default(long?), string name = default(string), string description = default(string), long? folderId = default(long?), long? version = default(long?), IList<SsisEnvironmentReference> environmentRefs = default(IList<SsisEnvironmentReference>), IList<SsisParameter> parameters = default(IList<SsisParameter>))
            : base(id, name, description)
        {
            FolderId = folderId;
            Version = version;
            EnvironmentRefs = environmentRefs;
            Parameters = parameters;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets folder id which contains project.
        /// </summary>
        [JsonProperty(PropertyName = "folderId")]
        public long? FolderId { get; set; }

        /// <summary>
        /// Gets or sets project version.
        /// </summary>
        [JsonProperty(PropertyName = "version")]
        public long? Version { get; set; }

        /// <summary>
        /// Gets or sets environment reference in project
        /// </summary>
        [JsonProperty(PropertyName = "environmentRefs")]
        public IList<SsisEnvironmentReference> EnvironmentRefs { get; set; }

        /// <summary>
        /// Gets or sets parameters in project
        /// </summary>
        [JsonProperty(PropertyName = "parameters")]
        public IList<SsisParameter> Parameters { get; set; }

    }
}
