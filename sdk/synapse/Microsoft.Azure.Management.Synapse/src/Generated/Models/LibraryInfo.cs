// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Synapse.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Information about a library/package created at the workspace level.
    /// </summary>
    /// <remarks>
    /// Library/package information of a Big Data pool powered by Apache Spark
    /// </remarks>
    public partial class LibraryInfo
    {
        /// <summary>
        /// Initializes a new instance of the LibraryInfo class.
        /// </summary>
        public LibraryInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LibraryInfo class.
        /// </summary>
        /// <param name="name">Name of the library.</param>
        /// <param name="path">Storage blob path of library.</param>
        /// <param name="containerName">Storage blob container name.</param>
        /// <param name="uploadedTimestamp">The last update time of the
        /// library.</param>
        /// <param name="type">Type of the library.</param>
        /// <param name="provisioningStatus">Provisioning status of the
        /// library/package.</param>
        /// <param name="creatorId">Creator Id of the library/package.</param>
        public LibraryInfo(string name = default(string), string path = default(string), string containerName = default(string), System.DateTime? uploadedTimestamp = default(System.DateTime?), string type = default(string), string provisioningStatus = default(string), string creatorId = default(string))
        {
            Name = name;
            Path = path;
            ContainerName = containerName;
            UploadedTimestamp = uploadedTimestamp;
            Type = type;
            ProvisioningStatus = provisioningStatus;
            CreatorId = creatorId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the library.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets storage blob path of library.
        /// </summary>
        [JsonProperty(PropertyName = "path")]
        public string Path { get; set; }

        /// <summary>
        /// Gets or sets storage blob container name.
        /// </summary>
        [JsonProperty(PropertyName = "containerName")]
        public string ContainerName { get; set; }

        /// <summary>
        /// Gets the last update time of the library.
        /// </summary>
        [JsonProperty(PropertyName = "uploadedTimestamp")]
        public System.DateTime? UploadedTimestamp { get; private set; }

        /// <summary>
        /// Gets or sets type of the library.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets provisioning status of the library/package.
        /// </summary>
        [JsonProperty(PropertyName = "provisioningStatus")]
        public string ProvisioningStatus { get; private set; }

        /// <summary>
        /// Gets creator Id of the library/package.
        /// </summary>
        [JsonProperty(PropertyName = "creatorId")]
        public string CreatorId { get; private set; }

    }
}
