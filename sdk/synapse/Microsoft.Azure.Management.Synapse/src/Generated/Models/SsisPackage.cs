// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Synapse.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Ssis Package.
    /// </summary>
    [Newtonsoft.Json.JsonObject("Package")]
    public partial class SsisPackage : SsisObjectMetadata
    {
        /// <summary>
        /// Initializes a new instance of the SsisPackage class.
        /// </summary>
        public SsisPackage()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SsisPackage class.
        /// </summary>
        /// <param name="id">Metadata id.</param>
        /// <param name="name">Metadata name.</param>
        /// <param name="description">Metadata description.</param>
        /// <param name="folderId">Folder id which contains package.</param>
        /// <param name="projectVersion">Project version which contains
        /// package.</param>
        /// <param name="projectId">Project id which contains package.</param>
        /// <param name="parameters">Parameters in package</param>
        public SsisPackage(long? id = default(long?), string name = default(string), string description = default(string), long? folderId = default(long?), long? projectVersion = default(long?), long? projectId = default(long?), IList<SsisParameter> parameters = default(IList<SsisParameter>))
            : base(id, name, description)
        {
            FolderId = folderId;
            ProjectVersion = projectVersion;
            ProjectId = projectId;
            Parameters = parameters;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets folder id which contains package.
        /// </summary>
        [JsonProperty(PropertyName = "folderId")]
        public long? FolderId { get; set; }

        /// <summary>
        /// Gets or sets project version which contains package.
        /// </summary>
        [JsonProperty(PropertyName = "projectVersion")]
        public long? ProjectVersion { get; set; }

        /// <summary>
        /// Gets or sets project id which contains package.
        /// </summary>
        [JsonProperty(PropertyName = "projectId")]
        public long? ProjectId { get; set; }

        /// <summary>
        /// Gets or sets parameters in package
        /// </summary>
        [JsonProperty(PropertyName = "parameters")]
        public IList<SsisParameter> Parameters { get; set; }

    }
}
