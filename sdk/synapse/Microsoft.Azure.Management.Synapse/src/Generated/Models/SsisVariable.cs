// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Synapse.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Ssis variable.
    /// </summary>
    public partial class SsisVariable
    {
        /// <summary>
        /// Initializes a new instance of the SsisVariable class.
        /// </summary>
        public SsisVariable()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SsisVariable class.
        /// </summary>
        /// <param name="id">Variable id.</param>
        /// <param name="name">Variable name.</param>
        /// <param name="description">Variable description.</param>
        /// <param name="dataType">Variable type.</param>
        /// <param name="sensitive">Whether variable is sensitive.</param>
        /// <param name="value">Variable value.</param>
        /// <param name="sensitiveValue">Variable sensitive value.</param>
        public SsisVariable(long? id = default(long?), string name = default(string), string description = default(string), string dataType = default(string), bool? sensitive = default(bool?), string value = default(string), string sensitiveValue = default(string))
        {
            Id = id;
            Name = name;
            Description = description;
            DataType = dataType;
            Sensitive = sensitive;
            Value = value;
            SensitiveValue = sensitiveValue;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets variable id.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public long? Id { get; set; }

        /// <summary>
        /// Gets or sets variable name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets variable description.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets variable type.
        /// </summary>
        [JsonProperty(PropertyName = "dataType")]
        public string DataType { get; set; }

        /// <summary>
        /// Gets or sets whether variable is sensitive.
        /// </summary>
        [JsonProperty(PropertyName = "sensitive")]
        public bool? Sensitive { get; set; }

        /// <summary>
        /// Gets or sets variable value.
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public string Value { get; set; }

        /// <summary>
        /// Gets or sets variable sensitive value.
        /// </summary>
        [JsonProperty(PropertyName = "sensitiveValue")]
        public string SensitiveValue { get; set; }

    }
}
