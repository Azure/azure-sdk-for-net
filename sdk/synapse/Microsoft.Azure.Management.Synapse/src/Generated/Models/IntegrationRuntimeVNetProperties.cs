// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Synapse.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// VNet properties for managed integration runtime.
    /// </summary>
    public partial class IntegrationRuntimeVNetProperties
    {
        /// <summary>
        /// Initializes a new instance of the IntegrationRuntimeVNetProperties
        /// class.
        /// </summary>
        public IntegrationRuntimeVNetProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IntegrationRuntimeVNetProperties
        /// class.
        /// </summary>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="vNetId">The ID of the VNet that this integration
        /// runtime will join.</param>
        /// <param name="subnet">The name of the subnet this integration
        /// runtime will join.</param>
        /// <param name="publicIPs">Resource IDs of the public IP addresses
        /// that this integration runtime will use.</param>
        public IntegrationRuntimeVNetProperties(IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), string vNetId = default(string), string subnet = default(string), IList<string> publicIPs = default(IList<string>))
        {
            AdditionalProperties = additionalProperties;
            VNetId = vNetId;
            Subnet = subnet;
            PublicIPs = publicIPs;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets unmatched properties from the message are deserialized
        /// this collection
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties { get; set; }

        /// <summary>
        /// Gets or sets the ID of the VNet that this integration runtime will
        /// join.
        /// </summary>
        [JsonProperty(PropertyName = "vNetId")]
        public string VNetId { get; set; }

        /// <summary>
        /// Gets or sets the name of the subnet this integration runtime will
        /// join.
        /// </summary>
        [JsonProperty(PropertyName = "subnet")]
        public string Subnet { get; set; }

        /// <summary>
        /// Gets or sets resource IDs of the public IP addresses that this
        /// integration runtime will use.
        /// </summary>
        [JsonProperty(PropertyName = "publicIPs")]
        public IList<string> PublicIPs { get; set; }

    }
}
