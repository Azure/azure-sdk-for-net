// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Synapse.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Grant sql control to managed identity
    /// </summary>
    public partial class ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity
        /// class.
        /// </summary>
        public ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity
        /// class.
        /// </summary>
        /// <param name="desiredState">Desired state. Possible values include:
        /// 'Enabled', 'Disabled'</param>
        /// <param name="actualState">Actual state. Possible values include:
        /// 'Enabling', 'Enabled', 'Disabling', 'Disabled', 'Unknown'</param>
        public ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity(string desiredState = default(string), string actualState = default(string))
        {
            DesiredState = desiredState;
            ActualState = actualState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets desired state. Possible values include: 'Enabled',
        /// 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "desiredState")]
        public string DesiredState { get; set; }

        /// <summary>
        /// Gets actual state. Possible values include: 'Enabling', 'Enabled',
        /// 'Disabling', 'Disabled', 'Unknown'
        /// </summary>
        [JsonProperty(PropertyName = "actualState")]
        public string ActualState { get; private set; }

    }
}
