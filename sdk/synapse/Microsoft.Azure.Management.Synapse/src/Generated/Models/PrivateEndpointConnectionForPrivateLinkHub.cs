// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Synapse.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class PrivateEndpointConnectionForPrivateLinkHub : PrivateEndpointConnectionForPrivateLinkHubBasic
    {
        /// <summary>
        /// Initializes a new instance of the
        /// PrivateEndpointConnectionForPrivateLinkHub class.
        /// </summary>
        public PrivateEndpointConnectionForPrivateLinkHub()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// PrivateEndpointConnectionForPrivateLinkHub class.
        /// </summary>
        /// <param name="id">identifier</param>
        /// <param name="privateEndpoint">The private endpoint which the
        /// connection belongs to.</param>
        /// <param name="privateLinkServiceConnectionState">Connection state of
        /// the private endpoint connection.</param>
        /// <param name="provisioningState">Provisioning state of the private
        /// endpoint connection.</param>
        public PrivateEndpointConnectionForPrivateLinkHub(string id = default(string), PrivateEndpoint privateEndpoint = default(PrivateEndpoint), PrivateLinkServiceConnectionState privateLinkServiceConnectionState = default(PrivateLinkServiceConnectionState), string provisioningState = default(string), string name = default(string), string type = default(string))
            : base(id, privateEndpoint, privateLinkServiceConnectionState, provisioningState)
        {
            Name = name;
            Type = type;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

    }
}
