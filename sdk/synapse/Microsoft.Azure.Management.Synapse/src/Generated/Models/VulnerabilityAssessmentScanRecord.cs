// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Synapse.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A vulnerability assessment scan record.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class VulnerabilityAssessmentScanRecord : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the VulnerabilityAssessmentScanRecord
        /// class.
        /// </summary>
        public VulnerabilityAssessmentScanRecord()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VulnerabilityAssessmentScanRecord
        /// class.
        /// </summary>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="scanId">The scan ID.</param>
        /// <param name="triggerType">The scan trigger type. Possible values
        /// include: 'OnDemand', 'Recurring'</param>
        /// <param name="state">The scan status. Possible values include:
        /// 'Passed', 'Failed', 'FailedToRun', 'InProgress'</param>
        /// <param name="startTime">The scan start time (UTC).</param>
        /// <param name="endTime">The scan end time (UTC).</param>
        /// <param name="errors">The scan errors.</param>
        /// <param name="storageContainerPath">The scan results storage
        /// container path.</param>
        /// <param name="numberOfFailedSecurityChecks">The number of failed
        /// security checks.</param>
        public VulnerabilityAssessmentScanRecord(string id = default(string), string name = default(string), string type = default(string), string scanId = default(string), string triggerType = default(string), string state = default(string), System.DateTime? startTime = default(System.DateTime?), System.DateTime? endTime = default(System.DateTime?), IList<VulnerabilityAssessmentScanError> errors = default(IList<VulnerabilityAssessmentScanError>), string storageContainerPath = default(string), int? numberOfFailedSecurityChecks = default(int?))
            : base(id, name, type)
        {
            ScanId = scanId;
            TriggerType = triggerType;
            State = state;
            StartTime = startTime;
            EndTime = endTime;
            Errors = errors;
            StorageContainerPath = storageContainerPath;
            NumberOfFailedSecurityChecks = numberOfFailedSecurityChecks;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the scan ID.
        /// </summary>
        [JsonProperty(PropertyName = "properties.scanId")]
        public string ScanId { get; private set; }

        /// <summary>
        /// Gets the scan trigger type. Possible values include: 'OnDemand',
        /// 'Recurring'
        /// </summary>
        [JsonProperty(PropertyName = "properties.triggerType")]
        public string TriggerType { get; private set; }

        /// <summary>
        /// Gets the scan status. Possible values include: 'Passed', 'Failed',
        /// 'FailedToRun', 'InProgress'
        /// </summary>
        [JsonProperty(PropertyName = "properties.state")]
        public string State { get; private set; }

        /// <summary>
        /// Gets the scan start time (UTC).
        /// </summary>
        [JsonProperty(PropertyName = "properties.startTime")]
        public System.DateTime? StartTime { get; private set; }

        /// <summary>
        /// Gets the scan end time (UTC).
        /// </summary>
        [JsonProperty(PropertyName = "properties.endTime")]
        public System.DateTime? EndTime { get; private set; }

        /// <summary>
        /// Gets the scan errors.
        /// </summary>
        [JsonProperty(PropertyName = "properties.errors")]
        public IList<VulnerabilityAssessmentScanError> Errors { get; private set; }

        /// <summary>
        /// Gets the scan results storage container path.
        /// </summary>
        [JsonProperty(PropertyName = "properties.storageContainerPath")]
        public string StorageContainerPath { get; private set; }

        /// <summary>
        /// Gets the number of failed security checks.
        /// </summary>
        [JsonProperty(PropertyName = "properties.numberOfFailedSecurityChecks")]
        public int? NumberOfFailedSecurityChecks { get; private set; }

    }
}
