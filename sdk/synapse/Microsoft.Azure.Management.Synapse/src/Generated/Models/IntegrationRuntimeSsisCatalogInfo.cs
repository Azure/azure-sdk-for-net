// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Synapse.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Catalog information for managed dedicated integration runtime.
    /// </summary>
    public partial class IntegrationRuntimeSsisCatalogInfo
    {
        /// <summary>
        /// Initializes a new instance of the IntegrationRuntimeSsisCatalogInfo
        /// class.
        /// </summary>
        public IntegrationRuntimeSsisCatalogInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IntegrationRuntimeSsisCatalogInfo
        /// class.
        /// </summary>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="catalogServerEndpoint">The catalog database server
        /// URL.</param>
        /// <param name="catalogAdminUserName">The administrator user name of
        /// catalog database.</param>
        /// <param name="catalogAdminPassword">The password of the
        /// administrator user account of the catalog database.</param>
        /// <param name="catalogPricingTier">The pricing tier for the catalog
        /// database. The valid values could be found in
        /// https://azure.microsoft.com/en-us/pricing/details/sql-database/.
        /// Possible values include: 'Basic', 'Standard', 'Premium',
        /// 'PremiumRS'</param>
        public IntegrationRuntimeSsisCatalogInfo(IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), string catalogServerEndpoint = default(string), string catalogAdminUserName = default(string), SecureString catalogAdminPassword = default(SecureString), string catalogPricingTier = default(string))
        {
            AdditionalProperties = additionalProperties;
            CatalogServerEndpoint = catalogServerEndpoint;
            CatalogAdminUserName = catalogAdminUserName;
            CatalogAdminPassword = catalogAdminPassword;
            CatalogPricingTier = catalogPricingTier;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets unmatched properties from the message are deserialized
        /// this collection
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties { get; set; }

        /// <summary>
        /// Gets or sets the catalog database server URL.
        /// </summary>
        [JsonProperty(PropertyName = "catalogServerEndpoint")]
        public string CatalogServerEndpoint { get; set; }

        /// <summary>
        /// Gets or sets the administrator user name of catalog database.
        /// </summary>
        [JsonProperty(PropertyName = "catalogAdminUserName")]
        public string CatalogAdminUserName { get; set; }

        /// <summary>
        /// Gets or sets the password of the administrator user account of the
        /// catalog database.
        /// </summary>
        [JsonProperty(PropertyName = "catalogAdminPassword")]
        public SecureString CatalogAdminPassword { get; set; }

        /// <summary>
        /// Gets or sets the pricing tier for the catalog database. The valid
        /// values could be found in
        /// https://azure.microsoft.com/en-us/pricing/details/sql-database/.
        /// Possible values include: 'Basic', 'Standard', 'Premium',
        /// 'PremiumRS'
        /// </summary>
        [JsonProperty(PropertyName = "catalogPricingTier")]
        public string CatalogPricingTier { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (CatalogAdminUserName != null)
            {
                if (CatalogAdminUserName.Length > 128)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "CatalogAdminUserName", 128);
                }
                if (CatalogAdminUserName.Length < 1)
                {
                    throw new ValidationException(ValidationRules.MinLength, "CatalogAdminUserName", 1);
                }
            }
            if (CatalogAdminPassword != null)
            {
                CatalogAdminPassword.Validate();
            }
        }
    }
}
