// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Synapse.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Data proxy properties for a managed dedicated integration runtime.
    /// </summary>
    public partial class IntegrationRuntimeDataProxyProperties
    {
        /// <summary>
        /// Initializes a new instance of the
        /// IntegrationRuntimeDataProxyProperties class.
        /// </summary>
        public IntegrationRuntimeDataProxyProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// IntegrationRuntimeDataProxyProperties class.
        /// </summary>
        /// <param name="connectVia">The self-hosted integration runtime
        /// reference.</param>
        /// <param name="stagingLinkedService">The staging linked service
        /// reference.</param>
        /// <param name="path">The path to contain the staged data in the Blob
        /// storage.</param>
        public IntegrationRuntimeDataProxyProperties(EntityReference connectVia = default(EntityReference), EntityReference stagingLinkedService = default(EntityReference), string path = default(string))
        {
            ConnectVia = connectVia;
            StagingLinkedService = stagingLinkedService;
            Path = path;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the self-hosted integration runtime reference.
        /// </summary>
        [JsonProperty(PropertyName = "connectVia")]
        public EntityReference ConnectVia { get; set; }

        /// <summary>
        /// Gets or sets the staging linked service reference.
        /// </summary>
        [JsonProperty(PropertyName = "stagingLinkedService")]
        public EntityReference StagingLinkedService { get; set; }

        /// <summary>
        /// Gets or sets the path to contain the staged data in the Blob
        /// storage.
        /// </summary>
        [JsonProperty(PropertyName = "path")]
        public string Path { get; set; }

    }
}
