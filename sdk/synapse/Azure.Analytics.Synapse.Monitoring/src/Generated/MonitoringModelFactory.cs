// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Analytics.Synapse.Monitoring.Models;

namespace Azure.Analytics.Synapse.Monitoring
{
    /// <summary> Model factory for read-only models. </summary>
    public static partial class MonitoringModelFactory
    {
        /// <summary> Initializes new instance of SparkJobListViewResponse class. </summary>
        /// <param name="nJobs"> . </param>
        /// <param name="sparkJobs"> . </param>
        /// <returns> A new <see cref="Models.SparkJobListViewResponse"/> instance for mocking. </returns>
        public static SparkJobListViewResponse SparkJobListViewResponse(int? nJobs = default, IReadOnlyList<SparkJob> sparkJobs = default)
        {
            sparkJobs ??= new List<SparkJob>();
            return new SparkJobListViewResponse(nJobs, sparkJobs);
        }

        /// <summary> Initializes new instance of SparkJob class. </summary>
        /// <param name="state"> . </param>
        /// <param name="name"> . </param>
        /// <param name="submitter"> . </param>
        /// <param name="compute"> . </param>
        /// <param name="sparkApplicationId"> . </param>
        /// <param name="livyId"> . </param>
        /// <param name="timing"> . </param>
        /// <param name="sparkJobDefinition"> . </param>
        /// <param name="pipeline"> . </param>
        /// <param name="jobType"> . </param>
        /// <param name="submitTime"> . </param>
        /// <param name="endTime"> . </param>
        /// <param name="queuedDuration"> . </param>
        /// <param name="runningDuration"> . </param>
        /// <param name="totalDuration"> . </param>
        /// <returns> A new <see cref="Models.SparkJob"/> instance for mocking. </returns>
        public static SparkJob SparkJob(string state = default, string name = default, string submitter = default, string compute = default, string sparkApplicationId = default, string livyId = default, IReadOnlyList<string> timing = default, string sparkJobDefinition = default, IReadOnlyList<SparkJob> pipeline = default, string jobType = default, DateTimeOffset? submitTime = default, DateTimeOffset? endTime = default, string queuedDuration = default, string runningDuration = default, string totalDuration = default)
        {
            timing ??= new List<string>();
            pipeline ??= new List<SparkJob>();
            return new SparkJob(state, name, submitter, compute, sparkApplicationId, livyId, timing, sparkJobDefinition, pipeline, jobType, submitTime, endTime, queuedDuration, runningDuration, totalDuration);
        }

        /// <summary> Initializes new instance of SqlQueryStringDataModel class. </summary>
        /// <param name="query"> . </param>
        /// <returns> A new <see cref="Models.SqlQueryStringDataModel"/> instance for mocking. </returns>
        public static SqlQueryStringDataModel SqlQueryStringDataModel(string query = default)
        {
            return new SqlQueryStringDataModel(query);
        }
    }
}
