// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.Synapse.Models;

namespace Azure.ResourceManager.Synapse
{
    /// <summary> A class representing the SynapseReplicationLink data model. </summary>
    public partial class SynapseReplicationLinkData : ResourceData
    {
        /// <summary> Initializes a new instance of SynapseReplicationLinkData. </summary>
        public SynapseReplicationLinkData()
        {
        }

        /// <summary> Initializes a new instance of SynapseReplicationLinkData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="location">
        /// Location of the workspace that contains this firewall rule.
        /// Serialized Name: ReplicationLink.location
        /// </param>
        /// <param name="isTerminationAllowed">
        /// Legacy value indicating whether termination is allowed.  Currently always returns true.
        /// Serialized Name: ReplicationLink.properties.isTerminationAllowed
        /// </param>
        /// <param name="replicationMode">
        /// Replication mode of this replication link.
        /// Serialized Name: ReplicationLink.properties.replicationMode
        /// </param>
        /// <param name="partnerServer">
        /// The name of the workspace hosting the partner Sql pool.
        /// Serialized Name: ReplicationLink.properties.partnerServer
        /// </param>
        /// <param name="partnerDatabase">
        /// The name of the partner Sql pool.
        /// Serialized Name: ReplicationLink.properties.partnerDatabase
        /// </param>
        /// <param name="partnerLocation">
        /// The Azure Region of the partner Sql pool.
        /// Serialized Name: ReplicationLink.properties.partnerLocation
        /// </param>
        /// <param name="role">
        /// The role of the Sql pool in the replication link.
        /// Serialized Name: ReplicationLink.properties.role
        /// </param>
        /// <param name="partnerRole">
        /// The role of the partner Sql pool in the replication link.
        /// Serialized Name: ReplicationLink.properties.partnerRole
        /// </param>
        /// <param name="startOn">
        /// The start time for the replication link.
        /// Serialized Name: ReplicationLink.properties.startTime
        /// </param>
        /// <param name="percentComplete">
        /// The percentage of seeding complete for the replication link.
        /// Serialized Name: ReplicationLink.properties.percentComplete
        /// </param>
        /// <param name="replicationState">
        /// The replication state for the replication link.
        /// Serialized Name: ReplicationLink.properties.replicationState
        /// </param>
        internal SynapseReplicationLinkData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, AzureLocation? location, bool? isTerminationAllowed, string replicationMode, string partnerServer, string partnerDatabase, string partnerLocation, SynapseReplicationRole? role, SynapseReplicationRole? partnerRole, DateTimeOffset? startOn, int? percentComplete, SynapseReplicationState? replicationState) : base(id, name, resourceType, systemData)
        {
            Location = location;
            IsTerminationAllowed = isTerminationAllowed;
            ReplicationMode = replicationMode;
            PartnerServer = partnerServer;
            PartnerDatabase = partnerDatabase;
            PartnerLocation = partnerLocation;
            Role = role;
            PartnerRole = partnerRole;
            StartOn = startOn;
            PercentComplete = percentComplete;
            ReplicationState = replicationState;
        }

        /// <summary>
        /// Location of the workspace that contains this firewall rule.
        /// Serialized Name: ReplicationLink.location
        /// </summary>
        public AzureLocation? Location { get; }
        /// <summary>
        /// Legacy value indicating whether termination is allowed.  Currently always returns true.
        /// Serialized Name: ReplicationLink.properties.isTerminationAllowed
        /// </summary>
        public bool? IsTerminationAllowed { get; }
        /// <summary>
        /// Replication mode of this replication link.
        /// Serialized Name: ReplicationLink.properties.replicationMode
        /// </summary>
        public string ReplicationMode { get; }
        /// <summary>
        /// The name of the workspace hosting the partner Sql pool.
        /// Serialized Name: ReplicationLink.properties.partnerServer
        /// </summary>
        public string PartnerServer { get; }
        /// <summary>
        /// The name of the partner Sql pool.
        /// Serialized Name: ReplicationLink.properties.partnerDatabase
        /// </summary>
        public string PartnerDatabase { get; }
        /// <summary>
        /// The Azure Region of the partner Sql pool.
        /// Serialized Name: ReplicationLink.properties.partnerLocation
        /// </summary>
        public string PartnerLocation { get; }
        /// <summary>
        /// The role of the Sql pool in the replication link.
        /// Serialized Name: ReplicationLink.properties.role
        /// </summary>
        public SynapseReplicationRole? Role { get; }
        /// <summary>
        /// The role of the partner Sql pool in the replication link.
        /// Serialized Name: ReplicationLink.properties.partnerRole
        /// </summary>
        public SynapseReplicationRole? PartnerRole { get; }
        /// <summary>
        /// The start time for the replication link.
        /// Serialized Name: ReplicationLink.properties.startTime
        /// </summary>
        public DateTimeOffset? StartOn { get; }
        /// <summary>
        /// The percentage of seeding complete for the replication link.
        /// Serialized Name: ReplicationLink.properties.percentComplete
        /// </summary>
        public int? PercentComplete { get; }
        /// <summary>
        /// The replication state for the replication link.
        /// Serialized Name: ReplicationLink.properties.replicationState
        /// </summary>
        public SynapseReplicationState? ReplicationState { get; }
    }
}
