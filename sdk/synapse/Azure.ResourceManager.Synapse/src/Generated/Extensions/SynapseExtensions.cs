// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.ResourceManager;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Synapse.Models;

namespace Azure.ResourceManager.Synapse
{
    /// <summary> A class to add extension methods to Azure.ResourceManager.Synapse. </summary>
    public static partial class SynapseExtensions
    {
        private static TenantResourceExtensionClient GetExtensionClient(TenantResource tenantResource)
        {
            return tenantResource.GetCachedClient((client) =>
            {
                return new TenantResourceExtensionClient(client, tenantResource.Id);
            }
            );
        }

        /// <summary>
        /// Lists available operations for the Kusto sub-resources inside Microsoft.Synapse provider.
        /// Request Path: /providers/Microsoft.Synapse/kustooperations
        /// Operation Id: KustoOperations_List
        /// </summary>
        /// <param name="tenantResource"> The <see cref="TenantResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="Models.Operation" /> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<Models.Operation> GetKustoOperationsAsync(this TenantResource tenantResource, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(tenantResource).GetKustoOperationsAsync(cancellationToken);
        }

        /// <summary>
        /// Lists available operations for the Kusto sub-resources inside Microsoft.Synapse provider.
        /// Request Path: /providers/Microsoft.Synapse/kustooperations
        /// Operation Id: KustoOperations_List
        /// </summary>
        /// <param name="tenantResource"> The <see cref="TenantResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="Models.Operation" /> that may take multiple service requests to iterate over. </returns>
        public static Pageable<Models.Operation> GetKustoOperations(this TenantResource tenantResource, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(tenantResource).GetKustoOperations(cancellationToken);
        }

        private static SubscriptionResourceExtensionClient GetExtensionClient(SubscriptionResource subscriptionResource)
        {
            return subscriptionResource.GetCachedClient((client) =>
            {
                return new SubscriptionResourceExtensionClient(client, subscriptionResource.Id);
            }
            );
        }

        /// <summary>
        /// Returns a list of privateLinkHubs in a subscription
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Synapse/privateLinkHubs
        /// Operation Id: PrivateLinkHubs_List
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="PrivateLinkHubResource" /> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<PrivateLinkHubResource> GetPrivateLinkHubsAsync(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetPrivateLinkHubsAsync(cancellationToken);
        }

        /// <summary>
        /// Returns a list of privateLinkHubs in a subscription
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Synapse/privateLinkHubs
        /// Operation Id: PrivateLinkHubs_List
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="PrivateLinkHubResource" /> that may take multiple service requests to iterate over. </returns>
        public static Pageable<PrivateLinkHubResource> GetPrivateLinkHubs(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetPrivateLinkHubs(cancellationToken);
        }

        /// <summary>
        /// Returns a list of workspaces in a subscription
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Synapse/workspaces
        /// Operation Id: Workspaces_List
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="WorkspaceResource" /> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<WorkspaceResource> GetWorkspacesAsync(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetWorkspacesAsync(cancellationToken);
        }

        /// <summary>
        /// Returns a list of workspaces in a subscription
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Synapse/workspaces
        /// Operation Id: Workspaces_List
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="WorkspaceResource" /> that may take multiple service requests to iterate over. </returns>
        public static Pageable<WorkspaceResource> GetWorkspaces(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetWorkspaces(cancellationToken);
        }

        /// <summary>
        /// Lists eligible SKUs for Kusto Pool resource.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Synapse/skus
        /// Operation Id: KustoPools_ListSkus
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="SkuDescription" /> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<SkuDescription> GetSkusKustoPoolsAsync(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetSkusKustoPoolsAsync(cancellationToken);
        }

        /// <summary>
        /// Lists eligible SKUs for Kusto Pool resource.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Synapse/skus
        /// Operation Id: KustoPools_ListSkus
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="SkuDescription" /> that may take multiple service requests to iterate over. </returns>
        public static Pageable<SkuDescription> GetSkusKustoPools(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetSkusKustoPools(cancellationToken);
        }

        /// <summary>
        /// Checks that the kusto pool name is valid and is not already in use.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Synapse/locations/{location}/kustoPoolCheckNameAvailability
        /// Operation Id: KustoPools_CheckNameAvailability
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="location"> The name of Azure region. </param>
        /// <param name="content"> The name of the cluster. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="content"/> is null. </exception>
        public static async Task<Response<CheckNameResult>> CheckNameAvailabilityKustoPoolAsync(this SubscriptionResource subscriptionResource, AzureLocation location, KustoPoolCheckNameContent content, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(content, nameof(content));

            return await GetExtensionClient(subscriptionResource).CheckNameAvailabilityKustoPoolAsync(location, content, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Checks that the kusto pool name is valid and is not already in use.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Synapse/locations/{location}/kustoPoolCheckNameAvailability
        /// Operation Id: KustoPools_CheckNameAvailability
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="location"> The name of Azure region. </param>
        /// <param name="content"> The name of the cluster. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="content"/> is null. </exception>
        public static Response<CheckNameResult> CheckNameAvailabilityKustoPool(this SubscriptionResource subscriptionResource, AzureLocation location, KustoPoolCheckNameContent content, CancellationToken cancellationToken = default)
        {
            Argument.AssertNotNull(content, nameof(content));

            return GetExtensionClient(subscriptionResource).CheckNameAvailabilityKustoPool(location, content, cancellationToken);
        }

        private static ResourceGroupResourceExtensionClient GetExtensionClient(ResourceGroupResource resourceGroupResource)
        {
            return resourceGroupResource.GetCachedClient((client) =>
            {
                return new ResourceGroupResourceExtensionClient(client, resourceGroupResource.Id);
            }
            );
        }

        /// <summary> Gets a collection of PrivateLinkHubResources in the ResourceGroupResource. </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <returns> An object representing collection of PrivateLinkHubResources and their operations over a PrivateLinkHubResource. </returns>
        public static PrivateLinkHubCollection GetPrivateLinkHubs(this ResourceGroupResource resourceGroupResource)
        {
            return GetExtensionClient(resourceGroupResource).GetPrivateLinkHubs();
        }

        /// <summary>
        /// Gets a privateLinkHub
        /// Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/privateLinkHubs/{privateLinkHubName}
        /// Operation Id: PrivateLinkHubs_Get
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="privateLinkHubName"> Name of the privateLinkHub. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="privateLinkHubName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="privateLinkHubName"/> is null. </exception>
        [ForwardsClientCalls]
        public static async Task<Response<PrivateLinkHubResource>> GetPrivateLinkHubAsync(this ResourceGroupResource resourceGroupResource, string privateLinkHubName, CancellationToken cancellationToken = default)
        {
            return await resourceGroupResource.GetPrivateLinkHubs().GetAsync(privateLinkHubName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Gets a privateLinkHub
        /// Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/privateLinkHubs/{privateLinkHubName}
        /// Operation Id: PrivateLinkHubs_Get
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="privateLinkHubName"> Name of the privateLinkHub. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="privateLinkHubName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="privateLinkHubName"/> is null. </exception>
        [ForwardsClientCalls]
        public static Response<PrivateLinkHubResource> GetPrivateLinkHub(this ResourceGroupResource resourceGroupResource, string privateLinkHubName, CancellationToken cancellationToken = default)
        {
            return resourceGroupResource.GetPrivateLinkHubs().Get(privateLinkHubName, cancellationToken);
        }

        /// <summary> Gets a collection of WorkspaceResources in the ResourceGroupResource. </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <returns> An object representing collection of WorkspaceResources and their operations over a WorkspaceResource. </returns>
        public static WorkspaceCollection GetWorkspaces(this ResourceGroupResource resourceGroupResource)
        {
            return GetExtensionClient(resourceGroupResource).GetWorkspaces();
        }

        /// <summary>
        /// Gets a workspace
        /// Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}
        /// Operation Id: Workspaces_Get
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="workspaceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="workspaceName"/> is null. </exception>
        [ForwardsClientCalls]
        public static async Task<Response<WorkspaceResource>> GetWorkspaceAsync(this ResourceGroupResource resourceGroupResource, string workspaceName, CancellationToken cancellationToken = default)
        {
            return await resourceGroupResource.GetWorkspaces().GetAsync(workspaceName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Gets a workspace
        /// Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}
        /// Operation Id: Workspaces_Get
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="workspaceName"> The name of the workspace. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="workspaceName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="workspaceName"/> is null. </exception>
        [ForwardsClientCalls]
        public static Response<WorkspaceResource> GetWorkspace(this ResourceGroupResource resourceGroupResource, string workspaceName, CancellationToken cancellationToken = default)
        {
            return resourceGroupResource.GetWorkspaces().Get(workspaceName, cancellationToken);
        }

        #region AzureADOnlyAuthenticationResource
        /// <summary>
        /// Gets an object representing an <see cref="AzureADOnlyAuthenticationResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="AzureADOnlyAuthenticationResource.CreateResourceIdentifier" /> to create an <see cref="AzureADOnlyAuthenticationResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AzureADOnlyAuthenticationResource" /> object. </returns>
        public static AzureADOnlyAuthenticationResource GetAzureADOnlyAuthenticationResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                AzureADOnlyAuthenticationResource.ValidateResourceId(id);
                return new AzureADOnlyAuthenticationResource(client, id);
            }
            );
        }
        #endregion

        #region IPFirewallRuleInfoResource
        /// <summary>
        /// Gets an object representing an <see cref="IPFirewallRuleInfoResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="IPFirewallRuleInfoResource.CreateResourceIdentifier" /> to create an <see cref="IPFirewallRuleInfoResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="IPFirewallRuleInfoResource" /> object. </returns>
        public static IPFirewallRuleInfoResource GetIPFirewallRuleInfoResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                IPFirewallRuleInfoResource.ValidateResourceId(id);
                return new IPFirewallRuleInfoResource(client, id);
            }
            );
        }
        #endregion

        #region KeyResource
        /// <summary>
        /// Gets an object representing a <see cref="KeyResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="KeyResource.CreateResourceIdentifier" /> to create a <see cref="KeyResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="KeyResource" /> object. </returns>
        public static KeyResource GetKeyResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                KeyResource.ValidateResourceId(id);
                return new KeyResource(client, id);
            }
            );
        }
        #endregion

        #region SynapsePrivateEndpointConnectionResource
        /// <summary>
        /// Gets an object representing a <see cref="SynapsePrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SynapsePrivateEndpointConnectionResource.CreateResourceIdentifier" /> to create a <see cref="SynapsePrivateEndpointConnectionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SynapsePrivateEndpointConnectionResource" /> object. </returns>
        public static SynapsePrivateEndpointConnectionResource GetSynapsePrivateEndpointConnectionResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                SynapsePrivateEndpointConnectionResource.ValidateResourceId(id);
                return new SynapsePrivateEndpointConnectionResource(client, id);
            }
            );
        }
        #endregion

        #region WorkspacePrivateLinkResource
        /// <summary>
        /// Gets an object representing a <see cref="WorkspacePrivateLinkResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="WorkspacePrivateLinkResource.CreateResourceIdentifier" /> to create a <see cref="WorkspacePrivateLinkResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="WorkspacePrivateLinkResource" /> object. </returns>
        public static WorkspacePrivateLinkResource GetWorkspacePrivateLinkResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                WorkspacePrivateLinkResource.ValidateResourceId(id);
                return new WorkspacePrivateLinkResource(client, id);
            }
            );
        }
        #endregion

        #region PrivateLinkHubPrivateLinkResource
        /// <summary>
        /// Gets an object representing a <see cref="PrivateLinkHubPrivateLinkResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="PrivateLinkHubPrivateLinkResource.CreateResourceIdentifier" /> to create a <see cref="PrivateLinkHubPrivateLinkResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PrivateLinkHubPrivateLinkResource" /> object. </returns>
        public static PrivateLinkHubPrivateLinkResource GetPrivateLinkHubPrivateLinkResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                PrivateLinkHubPrivateLinkResource.ValidateResourceId(id);
                return new PrivateLinkHubPrivateLinkResource(client, id);
            }
            );
        }
        #endregion

        #region PrivateLinkHubResource
        /// <summary>
        /// Gets an object representing a <see cref="PrivateLinkHubResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="PrivateLinkHubResource.CreateResourceIdentifier" /> to create a <see cref="PrivateLinkHubResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PrivateLinkHubResource" /> object. </returns>
        public static PrivateLinkHubResource GetPrivateLinkHubResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                PrivateLinkHubResource.ValidateResourceId(id);
                return new PrivateLinkHubResource(client, id);
            }
            );
        }
        #endregion

        #region PrivateEndpointConnectionForPrivateLinkHubResource
        /// <summary>
        /// Gets an object representing a <see cref="PrivateEndpointConnectionForPrivateLinkHubResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="PrivateEndpointConnectionForPrivateLinkHubResource.CreateResourceIdentifier" /> to create a <see cref="PrivateEndpointConnectionForPrivateLinkHubResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PrivateEndpointConnectionForPrivateLinkHubResource" /> object. </returns>
        public static PrivateEndpointConnectionForPrivateLinkHubResource GetPrivateEndpointConnectionForPrivateLinkHubResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                PrivateEndpointConnectionForPrivateLinkHubResource.ValidateResourceId(id);
                return new PrivateEndpointConnectionForPrivateLinkHubResource(client, id);
            }
            );
        }
        #endregion

        #region SqlPoolResource
        /// <summary>
        /// Gets an object representing a <see cref="SqlPoolResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SqlPoolResource.CreateResourceIdentifier" /> to create a <see cref="SqlPoolResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SqlPoolResource" /> object. </returns>
        public static SqlPoolResource GetSqlPoolResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                SqlPoolResource.ValidateResourceId(id);
                return new SqlPoolResource(client, id);
            }
            );
        }
        #endregion

        #region MetadataSyncConfigResource
        /// <summary>
        /// Gets an object representing a <see cref="MetadataSyncConfigResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MetadataSyncConfigResource.CreateResourceIdentifier" /> to create a <see cref="MetadataSyncConfigResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="MetadataSyncConfigResource" /> object. </returns>
        public static MetadataSyncConfigResource GetMetadataSyncConfigResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                MetadataSyncConfigResource.ValidateResourceId(id);
                return new MetadataSyncConfigResource(client, id);
            }
            );
        }
        #endregion

        #region GeoBackupPolicyResource
        /// <summary>
        /// Gets an object representing a <see cref="GeoBackupPolicyResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="GeoBackupPolicyResource.CreateResourceIdentifier" /> to create a <see cref="GeoBackupPolicyResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="GeoBackupPolicyResource" /> object. </returns>
        public static GeoBackupPolicyResource GetGeoBackupPolicyResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                GeoBackupPolicyResource.ValidateResourceId(id);
                return new GeoBackupPolicyResource(client, id);
            }
            );
        }
        #endregion

        #region DataWarehouseUserActivityResource
        /// <summary>
        /// Gets an object representing a <see cref="DataWarehouseUserActivityResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="DataWarehouseUserActivityResource.CreateResourceIdentifier" /> to create a <see cref="DataWarehouseUserActivityResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DataWarehouseUserActivityResource" /> object. </returns>
        public static DataWarehouseUserActivityResource GetDataWarehouseUserActivityResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                DataWarehouseUserActivityResource.ValidateResourceId(id);
                return new DataWarehouseUserActivityResource(client, id);
            }
            );
        }
        #endregion

        #region RestorePointResource
        /// <summary>
        /// Gets an object representing a <see cref="RestorePointResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="RestorePointResource.CreateResourceIdentifier" /> to create a <see cref="RestorePointResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RestorePointResource" /> object. </returns>
        public static RestorePointResource GetRestorePointResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                RestorePointResource.ValidateResourceId(id);
                return new RestorePointResource(client, id);
            }
            );
        }
        #endregion

        #region ReplicationLinkResource
        /// <summary>
        /// Gets an object representing a <see cref="ReplicationLinkResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ReplicationLinkResource.CreateResourceIdentifier" /> to create a <see cref="ReplicationLinkResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ReplicationLinkResource" /> object. </returns>
        public static ReplicationLinkResource GetReplicationLinkResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ReplicationLinkResource.ValidateResourceId(id);
                return new ReplicationLinkResource(client, id);
            }
            );
        }
        #endregion

        #region MaintenanceWindowResource
        /// <summary>
        /// Gets an object representing a <see cref="MaintenanceWindowResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MaintenanceWindowResource.CreateResourceIdentifier" /> to create a <see cref="MaintenanceWindowResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="MaintenanceWindowResource" /> object. </returns>
        public static MaintenanceWindowResource GetMaintenanceWindowResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                MaintenanceWindowResource.ValidateResourceId(id);
                return new MaintenanceWindowResource(client, id);
            }
            );
        }
        #endregion

        #region MaintenanceWindowOptionResource
        /// <summary>
        /// Gets an object representing a <see cref="MaintenanceWindowOptionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MaintenanceWindowOptionResource.CreateResourceIdentifier" /> to create a <see cref="MaintenanceWindowOptionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="MaintenanceWindowOptionResource" /> object. </returns>
        public static MaintenanceWindowOptionResource GetMaintenanceWindowOptionResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                MaintenanceWindowOptionResource.ValidateResourceId(id);
                return new MaintenanceWindowOptionResource(client, id);
            }
            );
        }
        #endregion

        #region TransparentDataEncryptionResource
        /// <summary>
        /// Gets an object representing a <see cref="TransparentDataEncryptionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="TransparentDataEncryptionResource.CreateResourceIdentifier" /> to create a <see cref="TransparentDataEncryptionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="TransparentDataEncryptionResource" /> object. </returns>
        public static TransparentDataEncryptionResource GetTransparentDataEncryptionResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                TransparentDataEncryptionResource.ValidateResourceId(id);
                return new TransparentDataEncryptionResource(client, id);
            }
            );
        }
        #endregion

        #region SqlPoolBlobAuditingPolicyResource
        /// <summary>
        /// Gets an object representing a <see cref="SqlPoolBlobAuditingPolicyResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SqlPoolBlobAuditingPolicyResource.CreateResourceIdentifier" /> to create a <see cref="SqlPoolBlobAuditingPolicyResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SqlPoolBlobAuditingPolicyResource" /> object. </returns>
        public static SqlPoolBlobAuditingPolicyResource GetSqlPoolBlobAuditingPolicyResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                SqlPoolBlobAuditingPolicyResource.ValidateResourceId(id);
                return new SqlPoolBlobAuditingPolicyResource(client, id);
            }
            );
        }
        #endregion

        #region SensitivityLabelResource
        /// <summary>
        /// Gets an object representing a <see cref="SensitivityLabelResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SensitivityLabelResource.CreateResourceIdentifier" /> to create a <see cref="SensitivityLabelResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SensitivityLabelResource" /> object. </returns>
        public static SensitivityLabelResource GetSensitivityLabelResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                SensitivityLabelResource.ValidateResourceId(id);
                return new SensitivityLabelResource(client, id);
            }
            );
        }
        #endregion

        #region SqlPoolSchemaResource
        /// <summary>
        /// Gets an object representing a <see cref="SqlPoolSchemaResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SqlPoolSchemaResource.CreateResourceIdentifier" /> to create a <see cref="SqlPoolSchemaResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SqlPoolSchemaResource" /> object. </returns>
        public static SqlPoolSchemaResource GetSqlPoolSchemaResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                SqlPoolSchemaResource.ValidateResourceId(id);
                return new SqlPoolSchemaResource(client, id);
            }
            );
        }
        #endregion

        #region SqlPoolTableResource
        /// <summary>
        /// Gets an object representing a <see cref="SqlPoolTableResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SqlPoolTableResource.CreateResourceIdentifier" /> to create a <see cref="SqlPoolTableResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SqlPoolTableResource" /> object. </returns>
        public static SqlPoolTableResource GetSqlPoolTableResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                SqlPoolTableResource.ValidateResourceId(id);
                return new SqlPoolTableResource(client, id);
            }
            );
        }
        #endregion

        #region SqlPoolConnectionPolicyResource
        /// <summary>
        /// Gets an object representing a <see cref="SqlPoolConnectionPolicyResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SqlPoolConnectionPolicyResource.CreateResourceIdentifier" /> to create a <see cref="SqlPoolConnectionPolicyResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SqlPoolConnectionPolicyResource" /> object. </returns>
        public static SqlPoolConnectionPolicyResource GetSqlPoolConnectionPolicyResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                SqlPoolConnectionPolicyResource.ValidateResourceId(id);
                return new SqlPoolConnectionPolicyResource(client, id);
            }
            );
        }
        #endregion

        #region SqlPoolVulnerabilityAssessmentResource
        /// <summary>
        /// Gets an object representing a <see cref="SqlPoolVulnerabilityAssessmentResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SqlPoolVulnerabilityAssessmentResource.CreateResourceIdentifier" /> to create a <see cref="SqlPoolVulnerabilityAssessmentResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SqlPoolVulnerabilityAssessmentResource" /> object. </returns>
        public static SqlPoolVulnerabilityAssessmentResource GetSqlPoolVulnerabilityAssessmentResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                SqlPoolVulnerabilityAssessmentResource.ValidateResourceId(id);
                return new SqlPoolVulnerabilityAssessmentResource(client, id);
            }
            );
        }
        #endregion

        #region VulnerabilityAssessmentScanRecordResource
        /// <summary>
        /// Gets an object representing a <see cref="VulnerabilityAssessmentScanRecordResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="VulnerabilityAssessmentScanRecordResource.CreateResourceIdentifier" /> to create a <see cref="VulnerabilityAssessmentScanRecordResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="VulnerabilityAssessmentScanRecordResource" /> object. </returns>
        public static VulnerabilityAssessmentScanRecordResource GetVulnerabilityAssessmentScanRecordResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                VulnerabilityAssessmentScanRecordResource.ValidateResourceId(id);
                return new VulnerabilityAssessmentScanRecordResource(client, id);
            }
            );
        }
        #endregion

        #region SqlPoolSecurityAlertPolicyResource
        /// <summary>
        /// Gets an object representing a <see cref="SqlPoolSecurityAlertPolicyResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SqlPoolSecurityAlertPolicyResource.CreateResourceIdentifier" /> to create a <see cref="SqlPoolSecurityAlertPolicyResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SqlPoolSecurityAlertPolicyResource" /> object. </returns>
        public static SqlPoolSecurityAlertPolicyResource GetSqlPoolSecurityAlertPolicyResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                SqlPoolSecurityAlertPolicyResource.ValidateResourceId(id);
                return new SqlPoolSecurityAlertPolicyResource(client, id);
            }
            );
        }
        #endregion

        #region SqlPoolVulnerabilityAssessmentRuleBaselineResource
        /// <summary>
        /// Gets an object representing a <see cref="SqlPoolVulnerabilityAssessmentRuleBaselineResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SqlPoolVulnerabilityAssessmentRuleBaselineResource.CreateResourceIdentifier" /> to create a <see cref="SqlPoolVulnerabilityAssessmentRuleBaselineResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SqlPoolVulnerabilityAssessmentRuleBaselineResource" /> object. </returns>
        public static SqlPoolVulnerabilityAssessmentRuleBaselineResource GetSqlPoolVulnerabilityAssessmentRuleBaselineResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                SqlPoolVulnerabilityAssessmentRuleBaselineResource.ValidateResourceId(id);
                return new SqlPoolVulnerabilityAssessmentRuleBaselineResource(client, id);
            }
            );
        }
        #endregion

        #region ExtendedSqlPoolBlobAuditingPolicyResource
        /// <summary>
        /// Gets an object representing an <see cref="ExtendedSqlPoolBlobAuditingPolicyResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ExtendedSqlPoolBlobAuditingPolicyResource.CreateResourceIdentifier" /> to create an <see cref="ExtendedSqlPoolBlobAuditingPolicyResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ExtendedSqlPoolBlobAuditingPolicyResource" /> object. </returns>
        public static ExtendedSqlPoolBlobAuditingPolicyResource GetExtendedSqlPoolBlobAuditingPolicyResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ExtendedSqlPoolBlobAuditingPolicyResource.ValidateResourceId(id);
                return new ExtendedSqlPoolBlobAuditingPolicyResource(client, id);
            }
            );
        }
        #endregion

        #region DataMaskingPolicyResource
        /// <summary>
        /// Gets an object representing a <see cref="DataMaskingPolicyResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="DataMaskingPolicyResource.CreateResourceIdentifier" /> to create a <see cref="DataMaskingPolicyResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DataMaskingPolicyResource" /> object. </returns>
        public static DataMaskingPolicyResource GetDataMaskingPolicyResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                DataMaskingPolicyResource.ValidateResourceId(id);
                return new DataMaskingPolicyResource(client, id);
            }
            );
        }
        #endregion

        #region DataMaskingRuleResource
        /// <summary>
        /// Gets an object representing a <see cref="DataMaskingRuleResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="DataMaskingRuleResource.CreateResourceIdentifier" /> to create a <see cref="DataMaskingRuleResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DataMaskingRuleResource" /> object. </returns>
        public static DataMaskingRuleResource GetDataMaskingRuleResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                DataMaskingRuleResource.ValidateResourceId(id);
                return new DataMaskingRuleResource(client, id);
            }
            );
        }
        #endregion

        #region SqlPoolColumnResource
        /// <summary>
        /// Gets an object representing a <see cref="SqlPoolColumnResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SqlPoolColumnResource.CreateResourceIdentifier" /> to create a <see cref="SqlPoolColumnResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SqlPoolColumnResource" /> object. </returns>
        public static SqlPoolColumnResource GetSqlPoolColumnResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                SqlPoolColumnResource.ValidateResourceId(id);
                return new SqlPoolColumnResource(client, id);
            }
            );
        }
        #endregion

        #region WorkloadGroupResource
        /// <summary>
        /// Gets an object representing a <see cref="WorkloadGroupResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="WorkloadGroupResource.CreateResourceIdentifier" /> to create a <see cref="WorkloadGroupResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="WorkloadGroupResource" /> object. </returns>
        public static WorkloadGroupResource GetWorkloadGroupResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                WorkloadGroupResource.ValidateResourceId(id);
                return new WorkloadGroupResource(client, id);
            }
            );
        }
        #endregion

        #region WorkloadClassifierResource
        /// <summary>
        /// Gets an object representing a <see cref="WorkloadClassifierResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="WorkloadClassifierResource.CreateResourceIdentifier" /> to create a <see cref="WorkloadClassifierResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="WorkloadClassifierResource" /> object. </returns>
        public static WorkloadClassifierResource GetWorkloadClassifierResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                WorkloadClassifierResource.ValidateResourceId(id);
                return new WorkloadClassifierResource(client, id);
            }
            );
        }
        #endregion

        #region ServerBlobAuditingPolicyResource
        /// <summary>
        /// Gets an object representing a <see cref="ServerBlobAuditingPolicyResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ServerBlobAuditingPolicyResource.CreateResourceIdentifier" /> to create a <see cref="ServerBlobAuditingPolicyResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServerBlobAuditingPolicyResource" /> object. </returns>
        public static ServerBlobAuditingPolicyResource GetServerBlobAuditingPolicyResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ServerBlobAuditingPolicyResource.ValidateResourceId(id);
                return new ServerBlobAuditingPolicyResource(client, id);
            }
            );
        }
        #endregion

        #region ExtendedServerBlobAuditingPolicyResource
        /// <summary>
        /// Gets an object representing an <see cref="ExtendedServerBlobAuditingPolicyResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ExtendedServerBlobAuditingPolicyResource.CreateResourceIdentifier" /> to create an <see cref="ExtendedServerBlobAuditingPolicyResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ExtendedServerBlobAuditingPolicyResource" /> object. </returns>
        public static ExtendedServerBlobAuditingPolicyResource GetExtendedServerBlobAuditingPolicyResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ExtendedServerBlobAuditingPolicyResource.ValidateResourceId(id);
                return new ExtendedServerBlobAuditingPolicyResource(client, id);
            }
            );
        }
        #endregion

        #region ServerSecurityAlertPolicyResource
        /// <summary>
        /// Gets an object representing a <see cref="ServerSecurityAlertPolicyResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ServerSecurityAlertPolicyResource.CreateResourceIdentifier" /> to create a <see cref="ServerSecurityAlertPolicyResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServerSecurityAlertPolicyResource" /> object. </returns>
        public static ServerSecurityAlertPolicyResource GetServerSecurityAlertPolicyResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ServerSecurityAlertPolicyResource.ValidateResourceId(id);
                return new ServerSecurityAlertPolicyResource(client, id);
            }
            );
        }
        #endregion

        #region ServerVulnerabilityAssessmentResource
        /// <summary>
        /// Gets an object representing a <see cref="ServerVulnerabilityAssessmentResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ServerVulnerabilityAssessmentResource.CreateResourceIdentifier" /> to create a <see cref="ServerVulnerabilityAssessmentResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServerVulnerabilityAssessmentResource" /> object. </returns>
        public static ServerVulnerabilityAssessmentResource GetServerVulnerabilityAssessmentResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ServerVulnerabilityAssessmentResource.ValidateResourceId(id);
                return new ServerVulnerabilityAssessmentResource(client, id);
            }
            );
        }
        #endregion

        #region EncryptionProtectorResource
        /// <summary>
        /// Gets an object representing an <see cref="EncryptionProtectorResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="EncryptionProtectorResource.CreateResourceIdentifier" /> to create an <see cref="EncryptionProtectorResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="EncryptionProtectorResource" /> object. </returns>
        public static EncryptionProtectorResource GetEncryptionProtectorResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                EncryptionProtectorResource.ValidateResourceId(id);
                return new EncryptionProtectorResource(client, id);
            }
            );
        }
        #endregion

        #region RecoverableSqlPoolResource
        /// <summary>
        /// Gets an object representing a <see cref="RecoverableSqlPoolResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="RecoverableSqlPoolResource.CreateResourceIdentifier" /> to create a <see cref="RecoverableSqlPoolResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RecoverableSqlPoolResource" /> object. </returns>
        public static RecoverableSqlPoolResource GetRecoverableSqlPoolResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                RecoverableSqlPoolResource.ValidateResourceId(id);
                return new RecoverableSqlPoolResource(client, id);
            }
            );
        }
        #endregion

        #region DedicatedSQLminimalTlsSettingResource
        /// <summary>
        /// Gets an object representing a <see cref="DedicatedSQLminimalTlsSettingResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="DedicatedSQLminimalTlsSettingResource.CreateResourceIdentifier" /> to create a <see cref="DedicatedSQLminimalTlsSettingResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DedicatedSQLminimalTlsSettingResource" /> object. </returns>
        public static DedicatedSQLminimalTlsSettingResource GetDedicatedSQLminimalTlsSettingResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                DedicatedSQLminimalTlsSettingResource.ValidateResourceId(id);
                return new DedicatedSQLminimalTlsSettingResource(client, id);
            }
            );
        }
        #endregion

        #region WorkspaceResource
        /// <summary>
        /// Gets an object representing a <see cref="WorkspaceResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="WorkspaceResource.CreateResourceIdentifier" /> to create a <see cref="WorkspaceResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="WorkspaceResource" /> object. </returns>
        public static WorkspaceResource GetWorkspaceResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                WorkspaceResource.ValidateResourceId(id);
                return new WorkspaceResource(client, id);
            }
            );
        }
        #endregion

        #region WorkspaceAdministratorResource
        /// <summary>
        /// Gets an object representing a <see cref="WorkspaceAdministratorResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="WorkspaceAdministratorResource.CreateResourceIdentifier" /> to create a <see cref="WorkspaceAdministratorResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="WorkspaceAdministratorResource" /> object. </returns>
        public static WorkspaceAdministratorResource GetWorkspaceAdministratorResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                WorkspaceAdministratorResource.ValidateResourceId(id);
                return new WorkspaceAdministratorResource(client, id);
            }
            );
        }
        #endregion

        #region WorkspaceSqlAdministratorResource
        /// <summary>
        /// Gets an object representing a <see cref="WorkspaceSqlAdministratorResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="WorkspaceSqlAdministratorResource.CreateResourceIdentifier" /> to create a <see cref="WorkspaceSqlAdministratorResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="WorkspaceSqlAdministratorResource" /> object. </returns>
        public static WorkspaceSqlAdministratorResource GetWorkspaceSqlAdministratorResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                WorkspaceSqlAdministratorResource.ValidateResourceId(id);
                return new WorkspaceSqlAdministratorResource(client, id);
            }
            );
        }
        #endregion

        #region ManagedIdentitySqlControlSettingsModelResource
        /// <summary>
        /// Gets an object representing a <see cref="ManagedIdentitySqlControlSettingsModelResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ManagedIdentitySqlControlSettingsModelResource.CreateResourceIdentifier" /> to create a <see cref="ManagedIdentitySqlControlSettingsModelResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ManagedIdentitySqlControlSettingsModelResource" /> object. </returns>
        public static ManagedIdentitySqlControlSettingsModelResource GetManagedIdentitySqlControlSettingsModelResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ManagedIdentitySqlControlSettingsModelResource.ValidateResourceId(id);
                return new ManagedIdentitySqlControlSettingsModelResource(client, id);
            }
            );
        }
        #endregion

        #region RestorableDroppedSqlPoolResource
        /// <summary>
        /// Gets an object representing a <see cref="RestorableDroppedSqlPoolResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="RestorableDroppedSqlPoolResource.CreateResourceIdentifier" /> to create a <see cref="RestorableDroppedSqlPoolResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RestorableDroppedSqlPoolResource" /> object. </returns>
        public static RestorableDroppedSqlPoolResource GetRestorableDroppedSqlPoolResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                RestorableDroppedSqlPoolResource.ValidateResourceId(id);
                return new RestorableDroppedSqlPoolResource(client, id);
            }
            );
        }
        #endregion

        #region BigDataPoolResourceInfoResource
        /// <summary>
        /// Gets an object representing a <see cref="BigDataPoolResourceInfoResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="BigDataPoolResourceInfoResource.CreateResourceIdentifier" /> to create a <see cref="BigDataPoolResourceInfoResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="BigDataPoolResourceInfoResource" /> object. </returns>
        public static BigDataPoolResourceInfoResource GetBigDataPoolResourceInfoResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                BigDataPoolResourceInfoResource.ValidateResourceId(id);
                return new BigDataPoolResourceInfoResource(client, id);
            }
            );
        }
        #endregion

        #region LibraryResource
        /// <summary>
        /// Gets an object representing a <see cref="LibraryResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="LibraryResource.CreateResourceIdentifier" /> to create a <see cref="LibraryResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="LibraryResource" /> object. </returns>
        public static LibraryResource GetLibraryResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                LibraryResource.ValidateResourceId(id);
                return new LibraryResource(client, id);
            }
            );
        }
        #endregion

        #region IntegrationRuntimeResource
        /// <summary>
        /// Gets an object representing an <see cref="IntegrationRuntimeResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="IntegrationRuntimeResource.CreateResourceIdentifier" /> to create an <see cref="IntegrationRuntimeResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="IntegrationRuntimeResource" /> object. </returns>
        public static IntegrationRuntimeResource GetIntegrationRuntimeResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                IntegrationRuntimeResource.ValidateResourceId(id);
                return new IntegrationRuntimeResource(client, id);
            }
            );
        }
        #endregion

        #region SparkConfigurationResource
        /// <summary>
        /// Gets an object representing a <see cref="SparkConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SparkConfigurationResource.CreateResourceIdentifier" /> to create a <see cref="SparkConfigurationResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SparkConfigurationResource" /> object. </returns>
        public static SparkConfigurationResource GetSparkConfigurationResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                SparkConfigurationResource.ValidateResourceId(id);
                return new SparkConfigurationResource(client, id);
            }
            );
        }
        #endregion

        #region KustoPoolResource
        /// <summary>
        /// Gets an object representing a <see cref="KustoPoolResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="KustoPoolResource.CreateResourceIdentifier" /> to create a <see cref="KustoPoolResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="KustoPoolResource" /> object. </returns>
        public static KustoPoolResource GetKustoPoolResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                KustoPoolResource.ValidateResourceId(id);
                return new KustoPoolResource(client, id);
            }
            );
        }
        #endregion

        #region AttachedDatabaseConfigurationResource
        /// <summary>
        /// Gets an object representing an <see cref="AttachedDatabaseConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="AttachedDatabaseConfigurationResource.CreateResourceIdentifier" /> to create an <see cref="AttachedDatabaseConfigurationResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AttachedDatabaseConfigurationResource" /> object. </returns>
        public static AttachedDatabaseConfigurationResource GetAttachedDatabaseConfigurationResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                AttachedDatabaseConfigurationResource.ValidateResourceId(id);
                return new AttachedDatabaseConfigurationResource(client, id);
            }
            );
        }
        #endregion

        #region DatabaseResource
        /// <summary>
        /// Gets an object representing a <see cref="DatabaseResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="DatabaseResource.CreateResourceIdentifier" /> to create a <see cref="DatabaseResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DatabaseResource" /> object. </returns>
        public static DatabaseResource GetDatabaseResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                DatabaseResource.ValidateResourceId(id);
                return new DatabaseResource(client, id);
            }
            );
        }
        #endregion

        #region DataConnectionResource
        /// <summary>
        /// Gets an object representing a <see cref="DataConnectionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="DataConnectionResource.CreateResourceIdentifier" /> to create a <see cref="DataConnectionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DataConnectionResource" /> object. </returns>
        public static DataConnectionResource GetDataConnectionResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                DataConnectionResource.ValidateResourceId(id);
                return new DataConnectionResource(client, id);
            }
            );
        }
        #endregion

        #region ClusterPrincipalAssignmentResource
        /// <summary>
        /// Gets an object representing a <see cref="ClusterPrincipalAssignmentResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ClusterPrincipalAssignmentResource.CreateResourceIdentifier" /> to create a <see cref="ClusterPrincipalAssignmentResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ClusterPrincipalAssignmentResource" /> object. </returns>
        public static ClusterPrincipalAssignmentResource GetClusterPrincipalAssignmentResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ClusterPrincipalAssignmentResource.ValidateResourceId(id);
                return new ClusterPrincipalAssignmentResource(client, id);
            }
            );
        }
        #endregion

        #region DatabasePrincipalAssignmentResource
        /// <summary>
        /// Gets an object representing a <see cref="DatabasePrincipalAssignmentResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="DatabasePrincipalAssignmentResource.CreateResourceIdentifier" /> to create a <see cref="DatabasePrincipalAssignmentResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DatabasePrincipalAssignmentResource" /> object. </returns>
        public static DatabasePrincipalAssignmentResource GetDatabasePrincipalAssignmentResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                DatabasePrincipalAssignmentResource.ValidateResourceId(id);
                return new DatabasePrincipalAssignmentResource(client, id);
            }
            );
        }
        #endregion
    }
}
