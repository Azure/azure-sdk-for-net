// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Synapse;

namespace Azure.ResourceManager.Synapse.Models
{
    /// <summary> Collection of Big Data pool information. </summary>
    internal partial class SynapseBigDataPoolInfoListResult
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="SynapseBigDataPoolInfoListResult"/>. </summary>
        internal SynapseBigDataPoolInfoListResult()
        {
            Value = new ChangeTrackingList<SynapseBigDataPoolInfoData>();
        }

        /// <summary> Initializes a new instance of <see cref="SynapseBigDataPoolInfoListResult"/>. </summary>
        /// <param name="nextLink"> Link to the next page of results. </param>
        /// <param name="value"> List of Big Data pools. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal SynapseBigDataPoolInfoListResult(string nextLink, IReadOnlyList<SynapseBigDataPoolInfoData> value, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            NextLink = nextLink;
            Value = value;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Link to the next page of results. </summary>
        public string NextLink { get; }
        /// <summary> List of Big Data pools. </summary>
        public IReadOnlyList<SynapseBigDataPoolInfoData> Value { get; }
    }
}
