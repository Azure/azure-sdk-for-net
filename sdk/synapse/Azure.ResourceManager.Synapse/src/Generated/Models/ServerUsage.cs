// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.Synapse.Models
{
    /// <summary>
    /// Represents server metrics.
    /// Serialized Name: ServerUsage
    /// </summary>
    public partial class ServerUsage
    {
        /// <summary> Initializes a new instance of ServerUsage. </summary>
        internal ServerUsage()
        {
        }

        /// <summary> Initializes a new instance of ServerUsage. </summary>
        /// <param name="name">
        /// Name of the server usage metric.
        /// Serialized Name: ServerUsage.name
        /// </param>
        /// <param name="resourceName">
        /// The name of the resource.
        /// Serialized Name: ServerUsage.resourceName
        /// </param>
        /// <param name="displayName">
        /// The metric display name.
        /// Serialized Name: ServerUsage.displayName
        /// </param>
        /// <param name="currentValue">
        /// The current value of the metric.
        /// Serialized Name: ServerUsage.currentValue
        /// </param>
        /// <param name="limit">
        /// The current limit of the metric.
        /// Serialized Name: ServerUsage.limit
        /// </param>
        /// <param name="unit">
        /// The units of the metric.
        /// Serialized Name: ServerUsage.unit
        /// </param>
        /// <param name="nextResetOn">
        /// The next reset time for the metric (ISO8601 format).
        /// Serialized Name: ServerUsage.nextResetTime
        /// </param>
        internal ServerUsage(string name, string resourceName, string displayName, double? currentValue, double? limit, string unit, DateTimeOffset? nextResetOn)
        {
            Name = name;
            ResourceName = resourceName;
            DisplayName = displayName;
            CurrentValue = currentValue;
            Limit = limit;
            Unit = unit;
            NextResetOn = nextResetOn;
        }

        /// <summary>
        /// Name of the server usage metric.
        /// Serialized Name: ServerUsage.name
        /// </summary>
        public string Name { get; }
        /// <summary>
        /// The name of the resource.
        /// Serialized Name: ServerUsage.resourceName
        /// </summary>
        public string ResourceName { get; }
        /// <summary>
        /// The metric display name.
        /// Serialized Name: ServerUsage.displayName
        /// </summary>
        public string DisplayName { get; }
        /// <summary>
        /// The current value of the metric.
        /// Serialized Name: ServerUsage.currentValue
        /// </summary>
        public double? CurrentValue { get; }
        /// <summary>
        /// The current limit of the metric.
        /// Serialized Name: ServerUsage.limit
        /// </summary>
        public double? Limit { get; }
        /// <summary>
        /// The units of the metric.
        /// Serialized Name: ServerUsage.unit
        /// </summary>
        public string Unit { get; }
        /// <summary>
        /// The next reset time for the metric (ISO8601 format).
        /// Serialized Name: ServerUsage.nextResetTime
        /// </summary>
        public DateTimeOffset? NextResetOn { get; }
    }
}
