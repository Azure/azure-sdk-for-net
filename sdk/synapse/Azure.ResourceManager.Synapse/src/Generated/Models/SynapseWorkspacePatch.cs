// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Synapse.Models
{
    /// <summary>
    /// Workspace patch details
    /// Serialized Name: WorkspacePatchInfo
    /// </summary>
    public partial class SynapseWorkspacePatch
    {
        /// <summary> Initializes a new instance of SynapseWorkspacePatch. </summary>
        public SynapseWorkspacePatch()
        {
            Tags = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary>
        /// Resource tags
        /// Serialized Name: WorkspacePatchInfo.tags
        /// </summary>
        public IDictionary<string, string> Tags { get; }
        /// <summary>
        /// The identity of the workspace
        /// Serialized Name: WorkspacePatchInfo.identity. Current supported identity types: None, SystemAssigned, SystemAssigned,UserAssigned
        /// </summary>
        public ManagedServiceIdentity Identity { get; set; }
        /// <summary>
        /// SQL administrator login password
        /// Serialized Name: WorkspacePatchInfo.properties.sqlAdministratorLoginPassword
        /// </summary>
        public string SqlAdministratorLoginPassword { get; set; }
        /// <summary>
        /// Managed Virtual Network Settings
        /// Serialized Name: WorkspacePatchInfo.properties.managedVirtualNetworkSettings
        /// </summary>
        public SynapseManagedVirtualNetworkSettings ManagedVirtualNetworkSettings { get; set; }
        /// <summary>
        /// Git integration settings
        /// Serialized Name: WorkspacePatchInfo.properties.workspaceRepositoryConfiguration
        /// </summary>
        public SynapseWorkspaceRepositoryConfiguration WorkspaceRepositoryConfiguration { get; set; }
        /// <summary>
        /// Purview Configuration
        /// Serialized Name: WorkspacePatchInfo.properties.purviewConfiguration
        /// </summary>
        internal PurviewConfiguration PurviewConfiguration { get; set; }
        /// <summary>
        /// Purview Resource ID
        /// Serialized Name: PurviewConfiguration.purviewResourceId
        /// </summary>
        public string PurviewResourceId
        {
            get => PurviewConfiguration is null ? default : PurviewConfiguration.PurviewResourceId;
            set
            {
                if (PurviewConfiguration is null)
                    PurviewConfiguration = new PurviewConfiguration();
                PurviewConfiguration.PurviewResourceId = value;
            }
        }

        /// <summary>
        /// Resource provisioning state
        /// Serialized Name: WorkspacePatchInfo.properties.provisioningState
        /// </summary>
        public string ProvisioningState { get; }
        /// <summary>
        /// The encryption details of the workspace
        /// Serialized Name: WorkspacePatchInfo.properties.encryption
        /// </summary>
        public SynapseEncryptionDetails Encryption { get; set; }
        /// <summary>
        /// Enable or Disable public network access to workspace
        /// Serialized Name: WorkspacePatchInfo.properties.publicNetworkAccess
        /// </summary>
        public WorkspacePublicNetworkAccess? PublicNetworkAccess { get; set; }
    }
}
