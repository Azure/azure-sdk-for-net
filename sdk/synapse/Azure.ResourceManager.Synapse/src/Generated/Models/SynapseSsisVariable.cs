// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Synapse.Models
{
    /// <summary> Ssis variable. </summary>
    public partial class SynapseSsisVariable
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="SynapseSsisVariable"/>. </summary>
        internal SynapseSsisVariable()
        {
        }

        /// <summary> Initializes a new instance of <see cref="SynapseSsisVariable"/>. </summary>
        /// <param name="id"> Variable id. </param>
        /// <param name="name"> Variable name. </param>
        /// <param name="description"> Variable description. </param>
        /// <param name="dataType"> Variable type. </param>
        /// <param name="isSensitive"> Whether variable is sensitive. </param>
        /// <param name="value"> Variable value. </param>
        /// <param name="sensitiveValue"> Variable sensitive value. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal SynapseSsisVariable(long? id, string name, string description, string dataType, bool? isSensitive, string value, string sensitiveValue, Dictionary<string, BinaryData> rawData)
        {
            Id = id;
            Name = name;
            Description = description;
            DataType = dataType;
            IsSensitive = isSensitive;
            Value = value;
            SensitiveValue = sensitiveValue;
            _rawData = rawData;
        }

        /// <summary> Variable id. </summary>
        public long? Id { get; }
        /// <summary> Variable name. </summary>
        public string Name { get; }
        /// <summary> Variable description. </summary>
        public string Description { get; }
        /// <summary> Variable type. </summary>
        public string DataType { get; }
        /// <summary> Whether variable is sensitive. </summary>
        public bool? IsSensitive { get; }
        /// <summary> Variable value. </summary>
        public string Value { get; }
        /// <summary> Variable sensitive value. </summary>
        public string SensitiveValue { get; }
    }
}
