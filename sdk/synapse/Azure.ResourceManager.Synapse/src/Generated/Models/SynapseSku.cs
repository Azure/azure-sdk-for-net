// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Synapse.Models
{
    /// <summary> SQL pool SKU. </summary>
    public partial class SynapseSku
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="SynapseSku"/>. </summary>
        public SynapseSku()
        {
        }

        /// <summary> Initializes a new instance of <see cref="SynapseSku"/>. </summary>
        /// <param name="tier"> The service tier. </param>
        /// <param name="name"> The SKU name. </param>
        /// <param name="capacity"> If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal SynapseSku(string tier, string name, int? capacity, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Tier = tier;
            Name = name;
            Capacity = capacity;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The service tier. </summary>
        public string Tier { get; set; }
        /// <summary> The SKU name. </summary>
        public string Name { get; set; }
        /// <summary> If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted. </summary>
        public int? Capacity { get; set; }
    }
}
