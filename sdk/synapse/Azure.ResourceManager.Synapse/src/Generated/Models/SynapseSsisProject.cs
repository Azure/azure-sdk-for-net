// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Synapse.Models
{
    /// <summary>
    /// Ssis project.
    /// Serialized Name: SsisProject
    /// </summary>
    public partial class SynapseSsisProject : SynapseSsisObjectMetadata
    {
        /// <summary> Initializes a new instance of SynapseSsisProject. </summary>
        internal SynapseSsisProject()
        {
            EnvironmentRefs = new ChangeTrackingList<SynapseSsisEnvironmentReference>();
            Parameters = new ChangeTrackingList<SynapseSsisParameter>();
            MetadataType = SynapseSsisObjectMetadataType.Project;
        }

        /// <summary> Initializes a new instance of SynapseSsisProject. </summary>
        /// <param name="metadataType">
        /// Type of metadata.
        /// Serialized Name: SsisObjectMetadata.type
        /// </param>
        /// <param name="id">
        /// Metadata id.
        /// Serialized Name: SsisObjectMetadata.id
        /// </param>
        /// <param name="name">
        /// Metadata name.
        /// Serialized Name: SsisObjectMetadata.name
        /// </param>
        /// <param name="description">
        /// Metadata description.
        /// Serialized Name: SsisObjectMetadata.description
        /// </param>
        /// <param name="folderId">
        /// Folder id which contains project.
        /// Serialized Name: SsisProject.folderId
        /// </param>
        /// <param name="version">
        /// Project version.
        /// Serialized Name: SsisProject.version
        /// </param>
        /// <param name="environmentRefs">
        /// Environment reference in project
        /// Serialized Name: SsisProject.environmentRefs
        /// </param>
        /// <param name="parameters">
        /// Parameters in project
        /// Serialized Name: SsisProject.parameters
        /// </param>
        internal SynapseSsisProject(SynapseSsisObjectMetadataType metadataType, long? id, string name, string description, long? folderId, long? version, IReadOnlyList<SynapseSsisEnvironmentReference> environmentRefs, IReadOnlyList<SynapseSsisParameter> parameters) : base(metadataType, id, name, description)
        {
            FolderId = folderId;
            Version = version;
            EnvironmentRefs = environmentRefs;
            Parameters = parameters;
            MetadataType = metadataType;
        }

        /// <summary>
        /// Folder id which contains project.
        /// Serialized Name: SsisProject.folderId
        /// </summary>
        public long? FolderId { get; }
        /// <summary>
        /// Project version.
        /// Serialized Name: SsisProject.version
        /// </summary>
        public long? Version { get; }
        /// <summary>
        /// Environment reference in project
        /// Serialized Name: SsisProject.environmentRefs
        /// </summary>
        public IReadOnlyList<SynapseSsisEnvironmentReference> EnvironmentRefs { get; }
        /// <summary>
        /// Parameters in project
        /// Serialized Name: SsisProject.parameters
        /// </summary>
        public IReadOnlyList<SynapseSsisParameter> Parameters { get; }
    }
}
