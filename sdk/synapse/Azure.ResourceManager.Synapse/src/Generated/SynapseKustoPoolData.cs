// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.Synapse.Models;

namespace Azure.ResourceManager.Synapse
{
    /// <summary>
    /// A class representing the SynapseKustoPool data model.
    /// Class representing a Kusto kusto pool.
    /// </summary>
    public partial class SynapseKustoPoolData : TrackedResourceData
    {
        /// <summary> Initializes a new instance of <see cref="SynapseKustoPoolData"/>. </summary>
        /// <param name="location"> The location. </param>
        /// <param name="sku"> The SKU of the kusto pool. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="sku"/> is null. </exception>
        public SynapseKustoPoolData(AzureLocation location, SynapseDataSourceSku sku) : base(location)
        {
            Argument.AssertNotNull(sku, nameof(sku));

            Sku = sku;
        }

        /// <summary> Initializes a new instance of <see cref="SynapseKustoPoolData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="sku"> The SKU of the kusto pool. </param>
        /// <param name="etag"> A unique read-only string that changes whenever the resource is updated. </param>
        /// <param name="state"> The state of the resource. </param>
        /// <param name="provisioningState"> The provisioned state of the resource. </param>
        /// <param name="uri"> The Kusto Pool URI. </param>
        /// <param name="dataIngestionUri"> The Kusto Pool data ingestion URI. </param>
        /// <param name="stateReason"> The reason for the Kusto Pool's current state. </param>
        /// <param name="optimizedAutoscale"> Optimized auto scale definition. </param>
        /// <param name="enableStreamingIngest"> A boolean value that indicates if the streaming ingest is enabled. </param>
        /// <param name="enablePurge"> A boolean value that indicates if the purge operations are enabled. </param>
        /// <param name="languageExtensions"> List of the Kusto Pool's language extensions. </param>
        /// <param name="workspaceUid"> The workspace unique identifier. </param>
        internal SynapseKustoPoolData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary<string, string> tags, AzureLocation location, SynapseDataSourceSku sku, ETag? etag, KustoPoolState? state, ResourceProvisioningState? provisioningState, Uri uri, Uri dataIngestionUri, string stateReason, SynapseOptimizedAutoscale optimizedAutoscale, bool? enableStreamingIngest, bool? enablePurge, SynapseLanguageExtensionsList languageExtensions, Guid? workspaceUid) : base(id, name, resourceType, systemData, tags, location)
        {
            Sku = sku;
            ETag = etag;
            State = state;
            ProvisioningState = provisioningState;
            Uri = uri;
            DataIngestionUri = dataIngestionUri;
            StateReason = stateReason;
            OptimizedAutoscale = optimizedAutoscale;
            EnableStreamingIngest = enableStreamingIngest;
            EnablePurge = enablePurge;
            LanguageExtensions = languageExtensions;
            WorkspaceUid = workspaceUid;
        }

        /// <summary> The SKU of the kusto pool. </summary>
        public SynapseDataSourceSku Sku { get; set; }
        /// <summary> A unique read-only string that changes whenever the resource is updated. </summary>
        public ETag? ETag { get; }
        /// <summary> The state of the resource. </summary>
        public KustoPoolState? State { get; }
        /// <summary> The provisioned state of the resource. </summary>
        public ResourceProvisioningState? ProvisioningState { get; }
        /// <summary> The Kusto Pool URI. </summary>
        public Uri Uri { get; }
        /// <summary> The Kusto Pool data ingestion URI. </summary>
        public Uri DataIngestionUri { get; }
        /// <summary> The reason for the Kusto Pool's current state. </summary>
        public string StateReason { get; }
        /// <summary> Optimized auto scale definition. </summary>
        public SynapseOptimizedAutoscale OptimizedAutoscale { get; set; }
        /// <summary> A boolean value that indicates if the streaming ingest is enabled. </summary>
        public bool? EnableStreamingIngest { get; set; }
        /// <summary> A boolean value that indicates if the purge operations are enabled. </summary>
        public bool? EnablePurge { get; set; }
        /// <summary> List of the Kusto Pool's language extensions. </summary>
        internal SynapseLanguageExtensionsList LanguageExtensions { get; }
        /// <summary> The list of language extensions. </summary>
        public IList<SynapseLanguageExtension> LanguageExtensionsValue
        {
            get => LanguageExtensions?.Value;
        }

        /// <summary> The workspace unique identifier. </summary>
        public Guid? WorkspaceUid { get; set; }
    }
}
