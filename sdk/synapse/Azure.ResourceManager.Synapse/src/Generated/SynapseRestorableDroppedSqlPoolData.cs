// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Synapse
{
    /// <summary> A class representing the SynapseRestorableDroppedSqlPool data model. </summary>
    public partial class SynapseRestorableDroppedSqlPoolData : ResourceData
    {
        /// <summary> Initializes a new instance of SynapseRestorableDroppedSqlPoolData. </summary>
        public SynapseRestorableDroppedSqlPoolData()
        {
        }

        /// <summary> Initializes a new instance of SynapseRestorableDroppedSqlPoolData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="location">
        /// The geo-location where the resource lives
        /// Serialized Name: RestorableDroppedSqlPool.location
        /// </param>
        /// <param name="databaseName">
        /// The name of the database
        /// Serialized Name: RestorableDroppedSqlPool.properties.databaseName
        /// </param>
        /// <param name="edition">
        /// The edition of the database
        /// Serialized Name: RestorableDroppedSqlPool.properties.edition
        /// </param>
        /// <param name="maxSizeBytes">
        /// The max size in bytes of the database
        /// Serialized Name: RestorableDroppedSqlPool.properties.maxSizeBytes
        /// </param>
        /// <param name="serviceLevelObjective">
        /// The service level objective name of the database
        /// Serialized Name: RestorableDroppedSqlPool.properties.serviceLevelObjective
        /// </param>
        /// <param name="elasticPoolName">
        /// The elastic pool name of the database
        /// Serialized Name: RestorableDroppedSqlPool.properties.elasticPoolName
        /// </param>
        /// <param name="createdOn">
        /// The creation date of the database (ISO8601 format)
        /// Serialized Name: RestorableDroppedSqlPool.properties.creationDate
        /// </param>
        /// <param name="deletedOn">
        /// The deletion date of the database (ISO8601 format)
        /// Serialized Name: RestorableDroppedSqlPool.properties.deletionDate
        /// </param>
        /// <param name="earliestRestoreOn">
        /// The earliest restore date of the database (ISO8601 format)
        /// Serialized Name: RestorableDroppedSqlPool.properties.earliestRestoreDate
        /// </param>
        internal SynapseRestorableDroppedSqlPoolData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, AzureLocation? location, string databaseName, string edition, string maxSizeBytes, string serviceLevelObjective, string elasticPoolName, DateTimeOffset? createdOn, DateTimeOffset? deletedOn, DateTimeOffset? earliestRestoreOn) : base(id, name, resourceType, systemData)
        {
            Location = location;
            DatabaseName = databaseName;
            Edition = edition;
            MaxSizeBytes = maxSizeBytes;
            ServiceLevelObjective = serviceLevelObjective;
            ElasticPoolName = elasticPoolName;
            CreatedOn = createdOn;
            DeletedOn = deletedOn;
            EarliestRestoreOn = earliestRestoreOn;
        }

        /// <summary>
        /// The geo-location where the resource lives
        /// Serialized Name: RestorableDroppedSqlPool.location
        /// </summary>
        public AzureLocation? Location { get; }
        /// <summary>
        /// The name of the database
        /// Serialized Name: RestorableDroppedSqlPool.properties.databaseName
        /// </summary>
        public string DatabaseName { get; }
        /// <summary>
        /// The edition of the database
        /// Serialized Name: RestorableDroppedSqlPool.properties.edition
        /// </summary>
        public string Edition { get; }
        /// <summary>
        /// The max size in bytes of the database
        /// Serialized Name: RestorableDroppedSqlPool.properties.maxSizeBytes
        /// </summary>
        public string MaxSizeBytes { get; }
        /// <summary>
        /// The service level objective name of the database
        /// Serialized Name: RestorableDroppedSqlPool.properties.serviceLevelObjective
        /// </summary>
        public string ServiceLevelObjective { get; }
        /// <summary>
        /// The elastic pool name of the database
        /// Serialized Name: RestorableDroppedSqlPool.properties.elasticPoolName
        /// </summary>
        public string ElasticPoolName { get; }
        /// <summary>
        /// The creation date of the database (ISO8601 format)
        /// Serialized Name: RestorableDroppedSqlPool.properties.creationDate
        /// </summary>
        public DateTimeOffset? CreatedOn { get; }
        /// <summary>
        /// The deletion date of the database (ISO8601 format)
        /// Serialized Name: RestorableDroppedSqlPool.properties.deletionDate
        /// </summary>
        public DateTimeOffset? DeletedOn { get; }
        /// <summary>
        /// The earliest restore date of the database (ISO8601 format)
        /// Serialized Name: RestorableDroppedSqlPool.properties.earliestRestoreDate
        /// </summary>
        public DateTimeOffset? EarliestRestoreOn { get; }
    }
}
