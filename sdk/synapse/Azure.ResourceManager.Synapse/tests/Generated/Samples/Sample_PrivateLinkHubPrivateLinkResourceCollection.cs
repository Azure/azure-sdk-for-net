// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;

namespace Azure.ResourceManager.Synapse
{
    public partial class Sample_PrivateLinkHubPrivateLinkResourceCollection
    {
        // Get private link resources for private link hub
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetAll_GetPrivateLinkResourcesForPrivateLinkHub()
        {
            // Generated from example definition: specification/synapse/resource-manager/Microsoft.Synapse/stable/2021-06-01/examples/ListPrivateLinkHubPrivateLinkResources.json
            // this example is just showing the usage of "PrivateLinkHubPrivateLinkResources_List" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this PrivateLinkHubResource created on azure
            // for more information of creating PrivateLinkHubResource, please refer to the document of PrivateLinkHubResource
            string subscriptionId = "01234567-89ab-4def-0123-456789abcdef";
            string resourceGroupName = "ExampleResourceGroup";
            string privateLinkHubName = "ExamplePrivateLinkHub";
            ResourceIdentifier privateLinkHubResourceId = PrivateLinkHubResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, privateLinkHubName);
            PrivateLinkHubResource privateLinkHub = client.GetPrivateLinkHubResource(privateLinkHubResourceId);

            // get the collection of this PrivateLinkHubPrivateLinkResource
            PrivateLinkHubPrivateLinkResourceCollection collection = privateLinkHub.GetPrivateLinkHubPrivateLinkResources();

            // invoke the operation and iterate over the result
            await foreach (PrivateLinkHubPrivateLinkResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                SynapsePrivateLinkResourceData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine($"Succeeded");
        }

        // Get private link resources for private link hub
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetPrivateLinkResourcesForPrivateLinkHub()
        {
            // Generated from example definition: specification/synapse/resource-manager/Microsoft.Synapse/stable/2021-06-01/examples/GetPrivateLinkHubPrivateLinkResource.json
            // this example is just showing the usage of "PrivateLinkHubPrivateLinkResources_Get" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this PrivateLinkHubResource created on azure
            // for more information of creating PrivateLinkHubResource, please refer to the document of PrivateLinkHubResource
            string subscriptionId = "01234567-89ab-4def-0123-456789abcdef";
            string resourceGroupName = "ExampleResourceGroup";
            string privateLinkHubName = "ExamplePrivateLinkHub";
            ResourceIdentifier privateLinkHubResourceId = PrivateLinkHubResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, privateLinkHubName);
            PrivateLinkHubResource privateLinkHub = client.GetPrivateLinkHubResource(privateLinkHubResourceId);

            // get the collection of this PrivateLinkHubPrivateLinkResource
            PrivateLinkHubPrivateLinkResourceCollection collection = privateLinkHub.GetPrivateLinkHubPrivateLinkResources();

            // invoke the operation
            string privateLinkResourceName = "sql";
            PrivateLinkHubPrivateLinkResource result = await collection.GetAsync(privateLinkResourceName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            SynapsePrivateLinkResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Get private link resources for private link hub
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Exists_GetPrivateLinkResourcesForPrivateLinkHub()
        {
            // Generated from example definition: specification/synapse/resource-manager/Microsoft.Synapse/stable/2021-06-01/examples/GetPrivateLinkHubPrivateLinkResource.json
            // this example is just showing the usage of "PrivateLinkHubPrivateLinkResources_Get" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this PrivateLinkHubResource created on azure
            // for more information of creating PrivateLinkHubResource, please refer to the document of PrivateLinkHubResource
            string subscriptionId = "01234567-89ab-4def-0123-456789abcdef";
            string resourceGroupName = "ExampleResourceGroup";
            string privateLinkHubName = "ExamplePrivateLinkHub";
            ResourceIdentifier privateLinkHubResourceId = PrivateLinkHubResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, privateLinkHubName);
            PrivateLinkHubResource privateLinkHub = client.GetPrivateLinkHubResource(privateLinkHubResourceId);

            // get the collection of this PrivateLinkHubPrivateLinkResource
            PrivateLinkHubPrivateLinkResourceCollection collection = privateLinkHub.GetPrivateLinkHubPrivateLinkResources();

            // invoke the operation
            string privateLinkResourceName = "sql";
            bool result = await collection.ExistsAsync(privateLinkResourceName);

            Console.WriteLine($"Succeeded: {result}");
        }
    }
}
