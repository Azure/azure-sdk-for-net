// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.Synapse.Models;

namespace Azure.ResourceManager.Synapse
{
    public partial class Sample_DedicatedSQLminimalTlsSettingResource
    {
        // Update tls version of the workspace managed sql server
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_UpdateTlsVersionOfTheWorkspaceManagedSqlServer()
        {
            // Generated from example definition: specification/synapse/resource-manager/Microsoft.Synapse/stable/2021-06-01/examples/UpdateWorkspaceManagedSqlServerDedicatedSQLminimalTlsSettings.json
            // this example is just showing the usage of "WorkspaceManagedSqlServerDedicatedSQLMinimalTlsSettings_Update" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this DedicatedSQLminimalTlsSettingResource created on azure
            // for more information of creating DedicatedSQLminimalTlsSettingResource, please refer to the document of DedicatedSQLminimalTlsSettingResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "workspace-6852";
            string workspaceName = "workspace-2080";
            DedicatedSQLMinimalTlsSettingsName dedicatedSQLminimalTlsSettingsName = DedicatedSQLMinimalTlsSettingsName.Default;
            ResourceIdentifier dedicatedSQLminimalTlsSettingResourceId = DedicatedSQLminimalTlsSettingResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, dedicatedSQLminimalTlsSettingsName);
            DedicatedSQLminimalTlsSettingResource dedicatedSQLminimalTlsSetting = client.GetDedicatedSQLminimalTlsSettingResource(dedicatedSQLminimalTlsSettingResourceId);

            // invoke the operation
            DedicatedSQLminimalTlsSettingData data = new DedicatedSQLminimalTlsSettingData()
            {
                MinimalTlsVersion = "1.1",
            };
            ArmOperation<DedicatedSQLminimalTlsSettingResource> lro = await dedicatedSQLminimalTlsSetting.UpdateAsync(WaitUntil.Completed, data);
            DedicatedSQLminimalTlsSettingResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DedicatedSQLminimalTlsSettingData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Get workspace managed sql server dedicated sql minimal tls settings
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetWorkspaceManagedSqlServerDedicatedSqlMinimalTlsSettings()
        {
            // Generated from example definition: specification/synapse/resource-manager/Microsoft.Synapse/stable/2021-06-01/examples/GetWorkspaceManagedSqlServerDedicatedSQLminimalTlsSettings.json
            // this example is just showing the usage of "WorkspaceManagedSqlServerDedicatedSQLMinimalTlsSettings_Get" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this DedicatedSQLminimalTlsSettingResource created on azure
            // for more information of creating DedicatedSQLminimalTlsSettingResource, please refer to the document of DedicatedSQLminimalTlsSettingResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "workspace-6852";
            string workspaceName = "workspace-2080";
            string dedicatedSQLminimalTlsSettingsName = "default";
            ResourceIdentifier dedicatedSQLminimalTlsSettingResourceId = DedicatedSQLminimalTlsSettingResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, dedicatedSQLminimalTlsSettingsName);
            DedicatedSQLminimalTlsSettingResource dedicatedSQLminimalTlsSetting = client.GetDedicatedSQLminimalTlsSettingResource(dedicatedSQLminimalTlsSettingResourceId);

            // invoke the operation
            DedicatedSQLminimalTlsSettingResource result = await dedicatedSQLminimalTlsSetting.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DedicatedSQLminimalTlsSettingData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
