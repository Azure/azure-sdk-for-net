// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.Synapse.Models;

namespace Azure.ResourceManager.Synapse
{
    public partial class Sample_DataWarehouseUserActivityResource
    {
        // Get a SQL Analytics pool user activity
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetASQLAnalyticsPoolUserActivity()
        {
            // Generated from example definition: specification/synapse/resource-manager/Microsoft.Synapse/stable/2021-06-01/examples/GetSqlPoolUserActivity.json
            // this example is just showing the usage of "SqlPoolDataWarehouseUserActivities_Get" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this DataWarehouseUserActivityResource created on azure
            // for more information of creating DataWarehouseUserActivityResource, please refer to the document of DataWarehouseUserActivityResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "Default-SQL-SouthEastAsia";
            string workspaceName = "testsvr";
            string sqlPoolName = "testdb";
            DataWarehouseUserActivityName dataWarehouseUserActivityName = DataWarehouseUserActivityName.Current;
            ResourceIdentifier dataWarehouseUserActivityResourceId = DataWarehouseUserActivityResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, sqlPoolName, dataWarehouseUserActivityName);
            DataWarehouseUserActivityResource dataWarehouseUserActivity = client.GetDataWarehouseUserActivityResource(dataWarehouseUserActivityResourceId);

            // invoke the operation
            DataWarehouseUserActivityResource result = await dataWarehouseUserActivity.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DataWarehouseUserActivityData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
