// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.Synapse.Models;

namespace Azure.ResourceManager.Synapse
{
    public partial class Sample_ManagedIdentitySqlControlSettingsModelResource
    {
        // Get managed identity sql control settings
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetManagedIdentitySqlControlSettings()
        {
            // Generated from example definition: specification/synapse/resource-manager/Microsoft.Synapse/stable/2021-06-01/examples/GetManagedIdentitySqlControlSettings.json
            // this example is just showing the usage of "WorkspaceManagedIdentitySqlControlSettings_Get" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this ManagedIdentitySqlControlSettingsModelResource created on azure
            // for more information of creating ManagedIdentitySqlControlSettingsModelResource, please refer to the document of ManagedIdentitySqlControlSettingsModelResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "resourceGroup1";
            string workspaceName = "workspace1";
            ResourceIdentifier managedIdentitySqlControlSettingsModelResourceId = ManagedIdentitySqlControlSettingsModelResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName);
            ManagedIdentitySqlControlSettingsModelResource managedIdentitySqlControlSettingsModel = client.GetManagedIdentitySqlControlSettingsModelResource(managedIdentitySqlControlSettingsModelResourceId);

            // invoke the operation
            ManagedIdentitySqlControlSettingsModelResource result = await managedIdentitySqlControlSettingsModel.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ManagedIdentitySqlControlSettingsModelData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Create or update managed identity sql control settings
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task CreateOrUpdate_CreateOrUpdateManagedIdentitySqlControlSettings()
        {
            // Generated from example definition: specification/synapse/resource-manager/Microsoft.Synapse/stable/2021-06-01/examples/CreateOrUpdateManagedIdentitySqlControlSettings.json
            // this example is just showing the usage of "WorkspaceManagedIdentitySqlControlSettings_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this ManagedIdentitySqlControlSettingsModelResource created on azure
            // for more information of creating ManagedIdentitySqlControlSettingsModelResource, please refer to the document of ManagedIdentitySqlControlSettingsModelResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "resourceGroup1";
            string workspaceName = "workspace1";
            ResourceIdentifier managedIdentitySqlControlSettingsModelResourceId = ManagedIdentitySqlControlSettingsModelResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName);
            ManagedIdentitySqlControlSettingsModelResource managedIdentitySqlControlSettingsModel = client.GetManagedIdentitySqlControlSettingsModelResource(managedIdentitySqlControlSettingsModelResourceId);

            // invoke the operation
            ManagedIdentitySqlControlSettingsModelData data = new ManagedIdentitySqlControlSettingsModelData()
            {
                GrantSqlControlToManagedIdentity = new ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity()
                {
                    DesiredState = DesiredState.Enabled,
                },
            };
            ArmOperation<ManagedIdentitySqlControlSettingsModelResource> lro = await managedIdentitySqlControlSettingsModel.CreateOrUpdateAsync(WaitUntil.Completed, data);
            ManagedIdentitySqlControlSettingsModelResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ManagedIdentitySqlControlSettingsModelData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
