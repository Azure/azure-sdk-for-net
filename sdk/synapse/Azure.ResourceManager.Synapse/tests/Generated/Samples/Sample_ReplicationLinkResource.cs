// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;

namespace Azure.ResourceManager.Synapse
{
    public partial class Sample_ReplicationLinkResource
    {
        // Lists a Sql Analytic pool's replication links
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_ListsASqlAnalyticPoolSReplicationLinks()
        {
            // Generated from example definition: specification/synapse/resource-manager/Microsoft.Synapse/stable/2021-06-01/examples/SqlPoolReplicationLinks_GetByName.json
            // this example is just showing the usage of "SqlPoolReplicationLinks_GetByName" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this ReplicationLinkResource created on azure
            // for more information of creating ReplicationLinkResource, please refer to the document of ReplicationLinkResource
            string subscriptionId = "00000000-1111-2222-3333-444444444444";
            string resourceGroupName = "sqlcrudtest-4799";
            string workspaceName = "sqlcrudtest-6440";
            string sqlPoolName = "testdb";
            string linkId = "5b301b68-03f6-4b26-b0f4-73ebb8634238";
            ResourceIdentifier replicationLinkResourceId = ReplicationLinkResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, workspaceName, sqlPoolName, linkId);
            ReplicationLinkResource replicationLink = client.GetReplicationLinkResource(replicationLinkResourceId);

            // invoke the operation
            ReplicationLinkResource result = await replicationLink.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ReplicationLinkData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
