// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Analytics.Synapse.Spark.Models
{
    public partial class SparkStatement
    {
        internal static SparkStatement DeserializeSparkStatement(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            int id = default;
            Core.Optional<string> code = default;
            Core.Optional<LivyStatementStates> state = default;
            Core.Optional<SparkStatementOutput> output = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"u8))
                {
                    id = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("code"u8))
                {
                    code = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("state"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    state = new LivyStatementStates(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("output"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        output = null;
                        continue;
                    }
                    output = SparkStatementOutput.DeserializeSparkStatementOutput(property.Value);
                    continue;
                }
            }
            return new SparkStatement(id, code.Value, Core.Optional.ToNullable(state), output.Value);
        }
    }
}
