// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.Analytics.Synapse.Spark.Models
{
    /// <summary> The SparkSessionCollection. </summary>
    public partial class SparkSessionCollection
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="SparkSessionCollection"/>. </summary>
        /// <param name="from"></param>
        /// <param name="total"></param>
        internal SparkSessionCollection(int @from, int total)
        {
            From = @from;
            Total = total;
            Sessions = new ChangeTrackingList<SparkSession>();
        }

        /// <summary> Initializes a new instance of <see cref="SparkSessionCollection"/>. </summary>
        /// <param name="from"></param>
        /// <param name="total"></param>
        /// <param name="sessions"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal SparkSessionCollection(int @from, int total, IReadOnlyList<SparkSession> sessions, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            From = @from;
            Total = total;
            Sessions = sessions;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="SparkSessionCollection"/> for deserialization. </summary>
        internal SparkSessionCollection()
        {
        }

        /// <summary> Gets the from. </summary>
        public int From { get; }
        /// <summary> Gets the total. </summary>
        public int Total { get; }
        /// <summary> Gets the sessions. </summary>
        public IReadOnlyList<SparkSession> Sessions { get; }
    }
}
