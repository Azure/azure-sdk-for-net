// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.Analytics.Synapse.Spark.Models
{
    /// <summary> The SparkStatementCollection. </summary>
    public partial class SparkStatementCollection
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="SparkStatementCollection"/>. </summary>
        /// <param name="total"></param>
        internal SparkStatementCollection(int total)
        {
            Total = total;
            Statements = new ChangeTrackingList<SparkStatement>();
        }

        /// <summary> Initializes a new instance of <see cref="SparkStatementCollection"/>. </summary>
        /// <param name="total"></param>
        /// <param name="statements"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal SparkStatementCollection(int total, IReadOnlyList<SparkStatement> statements, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Total = total;
            Statements = statements;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="SparkStatementCollection"/> for deserialization. </summary>
        internal SparkStatementCollection()
        {
        }

        /// <summary> Gets the total. </summary>
        public int Total { get; }
        /// <summary> Gets the statements. </summary>
        public IReadOnlyList<SparkStatement> Statements { get; }
    }
}
