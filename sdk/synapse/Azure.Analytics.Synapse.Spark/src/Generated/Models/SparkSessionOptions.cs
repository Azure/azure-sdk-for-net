// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Analytics.Synapse.Spark.Models
{
    /// <summary> The SparkSessionOptions. </summary>
    public partial class SparkSessionOptions
    {
        /// <summary> Initializes a new instance of SparkSessionOptions. </summary>
        /// <param name="name"> . </param>
        public SparkSessionOptions(string name)
        {
            if (name == null)
            {
                throw new ArgumentNullException(nameof(name));
            }

            Name = name;
        }

        /// <summary> Initializes a new instance of SparkSessionOptions. </summary>
        /// <param name="tags"> Dictionary of &lt;string&gt;. </param>
        /// <param name="artifactId"> . </param>
        /// <param name="name"> . </param>
        /// <param name="file"> . </param>
        /// <param name="className"> . </param>
        /// <param name="arguments"> . </param>
        /// <param name="jars"> . </param>
        /// <param name="pythonFiles"> . </param>
        /// <param name="files"> . </param>
        /// <param name="archives"> . </param>
        /// <param name="configuration"> Dictionary of &lt;string&gt;. </param>
        /// <param name="driverMemory"> . </param>
        /// <param name="driverCores"> . </param>
        /// <param name="executorMemory"> . </param>
        /// <param name="executorCores"> . </param>
        /// <param name="executorCount"> . </param>
        internal SparkSessionOptions(IDictionary<string, string> tags, string artifactId, string name, string file, string className, IList<string> arguments, IList<string> jars, IList<string> pythonFiles, IList<string> files, IList<string> archives, IDictionary<string, string> configuration, string driverMemory, int? driverCores, string executorMemory, int? executorCores, int? executorCount)
        {
            Tags = tags;
            ArtifactId = artifactId;
            Name = name;
            File = file;
            ClassName = className;
            Arguments = arguments;
            Jars = jars;
            PythonFiles = pythonFiles;
            Files = files;
            Archives = archives;
            Configuration = configuration;
            DriverMemory = driverMemory;
            DriverCores = driverCores;
            ExecutorMemory = executorMemory;
            ExecutorCores = executorCores;
            ExecutorCount = executorCount;
        }

        /// <summary> Dictionary of &lt;string&gt;. </summary>
        public IDictionary<string, string> Tags { get; set; }
        public string ArtifactId { get; set; }
        public string Name { get; }
        public string File { get; set; }
        public string ClassName { get; set; }
        public IList<string> Arguments { get; set; }
        public IList<string> Jars { get; set; }
        public IList<string> PythonFiles { get; set; }
        public IList<string> Files { get; set; }
        public IList<string> Archives { get; set; }
        /// <summary> Dictionary of &lt;string&gt;. </summary>
        public IDictionary<string, string> Configuration { get; set; }
        public string DriverMemory { get; set; }
        public int? DriverCores { get; set; }
        public string ExecutorMemory { get; set; }
        public int? ExecutorCores { get; set; }
        public int? ExecutorCount { get; set; }
    }
}
