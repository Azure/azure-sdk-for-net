// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Synapse.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class LivyStatementOutput
    {
        /// <summary>
        /// Initializes a new instance of the LivyStatementOutput class.
        /// </summary>
        public LivyStatementOutput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LivyStatementOutput class.
        /// </summary>
        public LivyStatementOutput(string status = default(string), int? executionCount = default(int?), object data = default(object), string ename = default(string), string evalue = default(string), IList<string> traceback = default(IList<string>))
        {
            Status = status;
            ExecutionCount = executionCount;
            Data = data;
            Ename = ename;
            Evalue = evalue;
            Traceback = traceback;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "execution_count")]
        public int? ExecutionCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "data")]
        public object Data { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ename")]
        public string Ename { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "evalue")]
        public string Evalue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "traceback")]
        public IList<string> Traceback { get; set; }

    }
}
