// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Synapse.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class Executors
    {
        /// <summary>
        /// Initializes a new instance of the Executors class.
        /// </summary>
        public Executors()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Executors class.
        /// </summary>
        public Executors(bool? isDynamicAllocationOn = default(bool?), int? executorInstances = default(int?), int? startTime = default(int?), int? endTime = default(int?), IList<int?> events = default(IList<int?>), string executorCores = default(string), string executorMemory = default(string))
        {
            IsDynamicAllocationOn = isDynamicAllocationOn;
            ExecutorInstances = executorInstances;
            StartTime = startTime;
            EndTime = endTime;
            Events = events;
            ExecutorCores = executorCores;
            ExecutorMemory = executorMemory;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isDynamicAllocationOn")]
        public bool? IsDynamicAllocationOn { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "executorInstances")]
        public int? ExecutorInstances { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "startTime")]
        public int? StartTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "endTime")]
        public int? EndTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "events")]
        public IList<int?> Events { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "executorCores")]
        public string ExecutorCores { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "executorMemory")]
        public string ExecutorMemory { get; set; }

    }
}
