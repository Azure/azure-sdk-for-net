{
  "Entries": [
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/Notebook51465148?api-version=2020-12-01",
      "RequestMethod": "PUT",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "Content-Length": "132",
        "Content-Type": "application/json",
        "traceparent": "00-3fc1fbdf2adf124cbe030ec12316f28d-d23c32a497930549-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "6ef3b7b79e3efa8a6416504be8ec066e",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": {
        "name": "Notebook51465148",
        "properties": {
          "metadata": {
            "language_info": {
              "name": "Python"
            }
          },
          "nbformat": 4,
          "nbformat_minor": 2,
          "cells": []
        }
      },
      "StatusCode": 202,
      "ResponseHeaders": {
        "Access-Control-Allow-Headers": [
          "Location",
          "Retry-After"
        ],
        "Access-Control-Expose-Headers": [
          "Location",
          "Retry-After"
        ],
        "Content-Length": "443",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:40 GMT",
        "Location": "https://testsynapseworkspace.dev.azuresynapse.net/notebookOperationResults/e57984aa-a1c7-4ab0-9f90-e8e37431c3a1?api-version=2020-12-01",
        "Retry-After": "10",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-ms-client-request-id": "6ef3b7b79e3efa8a6416504be8ec066e",
        "x-ms-request-id": "d38fc892-f8d7-4b0e-b3d2-6625722285ff"
      },
      "ResponseBody": {
        "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook51465148",
        "recordId": 2424363,
        "state": "Updating",
        "created": "2021-09-30T06:18:58.7133333Z",
        "changed": "2021-09-30T06:34:27.3933333Z",
        "type": "Notebook",
        "name": "Notebook51465148",
        "operationId": "e57984aa-a1c7-4ab0-9f90-e8e37431c3a1",
        "artifactId": "3243ff1d-37a5-40b1-8b3f-ebbed51f33cf"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebookOperationResults/e57984aa-a1c7-4ab0-9f90-e8e37431c3a1?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "018f75917c860a7e34c83ecb4883d596",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 202,
      "ResponseHeaders": {
        "Access-Control-Allow-Headers": [
          "Location",
          "Retry-After"
        ],
        "Access-Control-Expose-Headers": [
          "Location",
          "Retry-After"
        ],
        "Content-Length": "23",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:40 GMT",
        "Location": "https://testsynapseworkspace.dev.azuresynapse.net/notebookOperationResults/e57984aa-a1c7-4ab0-9f90-e8e37431c3a1?api-version=2020-12-01",
        "Retry-After": "10",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-ms-client-request-id": "018f75917c860a7e34c83ecb4883d596",
        "x-ms-request-id": "8292316b-ad4d-471b-be40-5620f8ad41db"
      },
      "ResponseBody": {
        "status": "InProgress"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebookOperationResults/e57984aa-a1c7-4ab0-9f90-e8e37431c3a1?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "494f2f796a9af70cb7d18a9dfed8294b",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 202,
      "ResponseHeaders": {
        "Access-Control-Allow-Headers": [
          "Location",
          "Retry-After"
        ],
        "Access-Control-Expose-Headers": [
          "Location",
          "Retry-After"
        ],
        "Content-Length": "23",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:42 GMT",
        "Location": "https://testsynapseworkspace.dev.azuresynapse.net/notebookOperationResults/e57984aa-a1c7-4ab0-9f90-e8e37431c3a1?api-version=2020-12-01",
        "Retry-After": "10",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-ms-client-request-id": "494f2f796a9af70cb7d18a9dfed8294b",
        "x-ms-request-id": "a2916420-f3a1-43a8-b11d-a17b4ac52608"
      },
      "ResponseBody": {
        "status": "InProgress"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebookOperationResults/e57984aa-a1c7-4ab0-9f90-e8e37431c3a1?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "72bad965055c42e7be215c868134d960",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 202,
      "ResponseHeaders": {
        "Access-Control-Allow-Headers": [
          "Location",
          "Retry-After"
        ],
        "Access-Control-Expose-Headers": [
          "Location",
          "Retry-After"
        ],
        "Content-Length": "23",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:43 GMT",
        "Location": "https://testsynapseworkspace.dev.azuresynapse.net/notebookOperationResults/e57984aa-a1c7-4ab0-9f90-e8e37431c3a1?api-version=2020-12-01",
        "Retry-After": "10",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-ms-client-request-id": "72bad965055c42e7be215c868134d960",
        "x-ms-request-id": "229ad844-9773-459f-98d5-7e109c0840d3"
      },
      "ResponseBody": {
        "status": "InProgress"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebookOperationResults/e57984aa-a1c7-4ab0-9f90-e8e37431c3a1?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "a13708ca66c926dc699849b4f2e00b5c",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 202,
      "ResponseHeaders": {
        "Access-Control-Allow-Headers": [
          "Location",
          "Retry-After"
        ],
        "Access-Control-Expose-Headers": [
          "Location",
          "Retry-After"
        ],
        "Content-Length": "23",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:44 GMT",
        "Location": "https://testsynapseworkspace.dev.azuresynapse.net/notebookOperationResults/e57984aa-a1c7-4ab0-9f90-e8e37431c3a1?api-version=2020-12-01",
        "Retry-After": "10",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-ms-client-request-id": "a13708ca66c926dc699849b4f2e00b5c",
        "x-ms-request-id": "70f6b791-f83e-4ae1-a449-35a5d1af4916"
      },
      "ResponseBody": {
        "status": "InProgress"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebookOperationResults/e57984aa-a1c7-4ab0-9f90-e8e37431c3a1?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "6e66f29f63c97339480c8b790e857582",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:45 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "6e66f29f63c97339480c8b790e857582",
        "x-ms-request-id": "eadfbc3a-92ce-4943-95ad-485bea5f9c3a"
      },
      "ResponseBody": {
        "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook51465148",
        "name": "Notebook51465148",
        "type": "Microsoft.Synapse/workspaces/notebooks",
        "properties": {
          "nbformat": 4,
          "nbformat_minor": 2,
          "entityState": null,
          "renameOperationDetails": null,
          "bigDataPool": null,
          "sessionProperties": null,
          "metadata": {
            "language_info": {
              "name": "Python"
            },
            "a365ComputeOptions": null,
            "sessionKeepAliveTimeout": 0
          },
          "cells": [],
          "folder": null
        },
        "etag": "2e00eb87-0000-0100-0000-6155681c0000"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-507bd967139023448432fd37efaa2433-0900ced3a0f05c47-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "f5d32af888a0fe81fd9409c4bc3350dd",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Length": "90983",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:45 GMT",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-ms-client-request-id": "f5d32af888a0fe81fd9409c4bc3350dd",
        "x-ms-request-id": "360cf456-3099-4348-ab44-014c51c0bc55"
      },
      "ResponseBody": "{\u0022value\u0022:[{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook 1\u0022,\u0022name\u0022:\u0022Notebook 1\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022etag\u0022:\u00221700db78-0000-0100-0000-60f7a2160000\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:2,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:{\u0022referenceName\u0022:\u0022testsparkpool\u0022,\u0022type\u0022:\u0022BigDataPoolReference\u0022},\u0022sessionProperties\u0022:{\u0022driverMemory\u0022:\u002228g\u0022,\u0022driverCores\u0022:4,\u0022executorMemory\u0022:\u002228g\u0022,\u0022executorCores\u0022:4,\u0022numExecutors\u0022:1,\u0022conf\u0022:{\u0022spark.dynamicAllocation.enabled\u0022:\u0022false\u0022,\u0022spark.dynamicAllocation.minExecutors\u0022:\u00221\u0022,\u0022spark.dynamicAllocation.maxExecutors\u0022:\u00221\u0022}},\u0022metadata\u0022:{\u0022language_info\u0022:{\u0022name\u0022:\u0022python\u0022},\u0022a365ComputeOptions\u0022:{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/bigDataPools/testsparkpool\u0022,\u0022name\u0022:\u0022testsparkpool\u0022,\u0022type\u0022:\u0022Spark\u0022,\u0022endpoint\u0022:\u0022https://testsynapseworkspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/testsparkpool\u0022,\u0022auth\u0022:{\u0022type\u0022:\u0022AAD\u0022,\u0022authResource\u0022:\u0022https://dev.azuresynapse.net\u0022},\u0022sparkVersion\u0022:\u00222.4\u0022,\u0022nodeCount\u0022:3,\u0022cores\u0022:8,\u0022memory\u0022:56,\u0022extraHeader\u0022:null},\u0022sessionKeepAliveTimeout\u0022:30,\u0022saveOutput\u0022:true,\u0022synapse_widget\u0022:{\u0022version\u0022:\u00220.1\u0022,\u0022state\u0022:{}},\u0022kernelspec\u0022:{\u0022name\u0022:\u0022synapse_pyspark\u0022,\u0022display_name\u0022:\u0022python\u0022}},\u0022cells\u0022:[{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{},\u0022source\u0022:[\u0022print(\\\u0022hello from portal\\\u0022)\u0022],\u0022attachments\u0022:{},\u0022outputs\u0022:[],\u0022execution_count\u0022:null}],\u0022folder\u0022:{\u0022name\u0022:\u0022nbfolder\u0022}}},{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/dongwwaTestNotebook\u0022,\u0022name\u0022:\u0022dongwwaTestNotebook\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022etag\u0022:\u00220100d5a0-0000-0100-0000-5ecba4720000\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:2,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:null,\u0022sessionProperties\u0022:{\u0022driverMemory\u0022:\u002228g\u0022,\u0022driverCores\u0022:4,\u0022executorMemory\u0022:\u002228g\u0022,\u0022executorCores\u0022:4,\u0022numExecutors\u0022:2,\u0022conf\u0022:null},\u0022metadata\u0022:{\u0022language_info\u0022:{\u0022name\u0022:\u0022python\u0022},\u0022a365ComputeOptions\u0022:null,\u0022sessionKeepAliveTimeout\u0022:30},\u0022cells\u0022:[{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{},\u0022source\u0022:[\u0022print(\u0027hello\u0027)\u0022],\u0022attachments\u0022:{},\u0022outputs\u0022:[],\u0022execution_count\u0022:null}],\u0022folder\u0022:null}},{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/dongwwaNb2\u0022,\u0022name\u0022:\u0022dongwwaNb2\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022etag\u0022:\u00221100d8f9-0000-0100-0000-5f1560de0000\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:2,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:{\u0022referenceName\u0022:\u0022testportal\u0022,\u0022type\u0022:\u0022BigDataPoolReference\u0022},\u0022sessionProperties\u0022:{\u0022driverMemory\u0022:\u002228g\u0022,\u0022driverCores\u0022:4,\u0022executorMemory\u0022:\u002228g\u0022,\u0022executorCores\u0022:4,\u0022numExecutors\u0022:3,\u0022conf\u0022:null},\u0022metadata\u0022:{\u0022language_info\u0022:{\u0022name\u0022:\u0022python\u0022},\u0022a365ComputeOptions\u0022:{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/bigDataPools/testportal\u0022,\u0022name\u0022:\u0022testportal\u0022,\u0022type\u0022:\u0022Spark\u0022,\u0022endpoint\u0022:\u0022https://testsynapseworkspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/testportal\u0022,\u0022auth\u0022:{\u0022type\u0022:\u0022AAD\u0022,\u0022authResource\u0022:\u0022https://dev.azuresynapse.net\u0022},\u0022sparkVersion\u0022:\u00222.4\u0022,\u0022nodeCount\u0022:3,\u0022cores\u0022:8,\u0022memory\u0022:56,\u0022extraHeader\u0022:{}},\u0022sessionKeepAliveTimeout\u0022:15},\u0022cells\u0022:[],\u0022folder\u0022:null}},{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/dongwwanb23\u0022,\u0022name\u0022:\u0022dongwwanb23\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022etag\u0022:\u00225f0005d3-0000-0100-0000-5f06bc3e0000\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:2,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:{\u0022referenceName\u0022:\u0022testportal\u0022,\u0022type\u0022:\u0022BigDataPoolReference\u0022},\u0022sessionProperties\u0022:{\u0022driverMemory\u0022:\u002228g\u0022,\u0022driverCores\u0022:4,\u0022executorMemory\u0022:\u002228g\u0022,\u0022executorCores\u0022:4,\u0022numExecutors\u0022:2,\u0022conf\u0022:null},\u0022metadata\u0022:{\u0022language_info\u0022:{\u0022name\u0022:\u0022python\u0022},\u0022a365ComputeOptions\u0022:{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/bigDataPools/testportal\u0022,\u0022name\u0022:\u0022testportal\u0022,\u0022type\u0022:\u0022Spark\u0022,\u0022endpoint\u0022:\u0022https://testsynapseworkspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/testportal\u0022,\u0022auth\u0022:{\u0022type\u0022:\u0022AAD\u0022,\u0022authResource\u0022:\u0022https://dev.azuresynapse.net\u0022},\u0022sparkVersion\u0022:\u00222.4\u0022,\u0022nodeCount\u0022:3,\u0022cores\u0022:8,\u0022memory\u0022:56,\u0022extraHeader\u0022:{}},\u0022sessionKeepAliveTimeout\u0022:30},\u0022cells\u0022:[],\u0022folder\u0022:null}},{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/dongwwatestnb1446\u0022,\u0022name\u0022:\u0022dongwwatestnb1446\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022etag\u0022:\u00225f0029d3-0000-0100-0000-5f06bd6a0000\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:2,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:null,\u0022sessionProperties\u0022:{\u0022driverMemory\u0022:\u002228g\u0022,\u0022driverCores\u0022:4,\u0022executorMemory\u0022:\u002228g\u0022,\u0022executorCores\u0022:4,\u0022numExecutors\u0022:2,\u0022conf\u0022:null},\u0022metadata\u0022:{\u0022language_info\u0022:{\u0022name\u0022:\u0022python\u0022},\u0022a365ComputeOptions\u0022:null,\u0022sessionKeepAliveTimeout\u0022:30},\u0022cells\u0022:[],\u0022folder\u0022:null}},{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/dongwwaCreateNbwithCell\u0022,\u0022name\u0022:\u0022dongwwaCreateNbwithCell\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022etag\u0022:\u00220e00d468-0000-0100-0000-611a2f1e0000\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:2,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:{\u0022referenceName\u0022:\u0022testportal\u0022,\u0022type\u0022:\u0022BigDataPoolReference\u0022},\u0022sessionProperties\u0022:{\u0022driverMemory\u0022:\u002228g\u0022,\u0022driverCores\u0022:4,\u0022executorMemory\u0022:\u002228g\u0022,\u0022executorCores\u0022:4,\u0022numExecutors\u0022:1,\u0022conf\u0022:{\u0022spark.dynamicAllocation.enabled\u0022:\u0022false\u0022,\u0022spark.dynamicAllocation.minExecutors\u0022:\u00221\u0022,\u0022spark.dynamicAllocation.maxExecutors\u0022:\u00221\u0022}},\u0022metadata\u0022:{\u0022language_info\u0022:{\u0022name\u0022:\u0022python\u0022},\u0022a365ComputeOptions\u0022:{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/bigDataPools/testportal\u0022,\u0022name\u0022:\u0022testportal\u0022,\u0022type\u0022:\u0022Spark\u0022,\u0022endpoint\u0022:\u0022https://testsynapseworkspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/testportal\u0022,\u0022auth\u0022:{\u0022type\u0022:\u0022AAD\u0022,\u0022authResource\u0022:\u0022https://dev.azuresynapse.net\u0022},\u0022sparkVersion\u0022:\u00222.4\u0022,\u0022nodeCount\u0022:3,\u0022cores\u0022:8,\u0022memory\u0022:56,\u0022extraHeader\u0022:null},\u0022sessionKeepAliveTimeout\u0022:30,\u0022saveOutput\u0022:true,\u0022synapse_widget\u0022:{\u0022version\u0022:\u00220.1\u0022,\u0022state\u0022:{}},\u0022kernelspec\u0022:{\u0022name\u0022:\u0022synapse_pyspark\u0022,\u0022display_name\u0022:\u0022python\u0022}},\u0022cells\u0022:[{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{},\u0022source\u0022:[\u0022print(\u0027hello world\u0027)\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:null}],\u0022folder\u0022:null}},{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook1980347592\u0022,\u0022name\u0022:\u0022Notebook1980347592\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022etag\u0022:\u002200001701-0000-0100-0000-600164550000\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:-1,\u0022nbformat_minor\u0022:2,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:null,\u0022sessionProperties\u0022:null,\u0022metadata\u0022:{\u0022language_info\u0022:null,\u0022a365ComputeOptions\u0022:null,\u0022sessionKeepAliveTimeout\u0022:0},\u0022cells\u0022:[],\u0022folder\u0022:null}},{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook1304984445\u0022,\u0022name\u0022:\u0022Notebook1304984445\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022etag\u0022:\u002200004501-0000-0100-0000-600164960000\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:0,\u0022nbformat_minor\u0022:0,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:null,\u0022sessionProperties\u0022:null,\u0022metadata\u0022:{\u0022language_info\u0022:null,\u0022a365ComputeOptions\u0022:null,\u0022sessionKeepAliveTimeout\u0022:0},\u0022cells\u0022:[],\u0022folder\u0022:null}},{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/dwnb1218\u0022,\u0022name\u0022:\u0022dwnb1218\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022etag\u0022:\u0022c2009a8b-0000-0100-0000-5fd32e170000\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:2,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:null,\u0022sessionProperties\u0022:null,\u0022metadata\u0022:{\u0022language_info\u0022:{\u0022name\u0022:\u0022python\u0022},\u0022a365ComputeOptions\u0022:{\u0022id\u0022:\u0022/subscriptions/132ed640-b28a-4f12-b8b6-3792c4e9d55f/resourceGroups/z-ago-dhp-ana-ari-ew1-rg01/providers/Microsoft.Synapse/workspaces/synapseari002/bigDataPools/RunningPool\u0022,\u0022name\u0022:\u0022RunningPool\u0022,\u0022type\u0022:\u0022Spark\u0022,\u0022endpoint\u0022:\u0022https://synapseari002.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/RunningPool\u0022,\u0022auth\u0022:{\u0022type\u0022:\u0022AAD\u0022,\u0022authResource\u0022:\u0022https://dev.azuresynapse.net\u0022},\u0022sparkVersion\u0022:\u00222.4\u0022,\u0022nodeCount\u0022:3,\u0022cores\u0022:0,\u0022memory\u0022:0,\u0022extraHeader\u0022:null},\u0022sessionKeepAliveTimeout\u0022:0,\u0022sessionOptions\u0022:{\u0022driverMemory\u0022:\u002228g\u0022,\u0022driverCores\u0022:4,\u0022executorMemory\u0022:\u002228g\u0022,\u0022executorCores\u0022:4,\u0022numExecutors\u0022:2,\u0022keepAliveTimeout\u0022:30,\u0022conf\u0022:{\u0022spark.dynamicAllocation.enabled\u0022:\u0022false\u0022,\u0022spark.dynamicAllocation.minExecutors\u0022:\u00222\u0022,\u0022spark.dynamicAllocation.maxExecutors\u0022:\u00222\u0022}},\u0022saveOutput\u0022:true},\u0022cells\u0022:[{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{\u0022microsoft\u0022:{\u0022language\u0022:\u0022python1\u0022}},\u0022source\u0022:[\u0022%%pyspark\\r\\n\u0022,\u0022df = spark.read.load(\u0027abfss://synapse@zagodhpanaariew1sto02.dfs.core.windows.net/Data/COCKPIT_V0.csv\u0027, format=\u0027csv\u0027\\r\\n\u0022,\u0022## If\u202Fheader\u202Fexists\u202Funcomment\u202Fline\u202Fbelow\\r\\n\u0022,\u0022##, header=True\\r\\n\u0022,\u0022)\\r\\n\u0022,\u0022display(df.limit(10))\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:null}],\u0022folder\u0022:null}},{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/dwnb1219\u0022,\u0022name\u0022:\u0022dwnb1219\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022etag\u0022:\u0022c2009f8b-0000-0100-0000-5fd32e6c0000\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:2,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:null,\u0022sessionProperties\u0022:null,\u0022metadata\u0022:{\u0022language_info\u0022:{\u0022name\u0022:\u0022python\u0022},\u0022a365ComputeOptions\u0022:{\u0022id\u0022:\u0022/subscriptions/132ed640-b28a-4f12-b8b6-3792c4e9d55f/resourceGroups/z-ago-dhp-ana-ari-ew1-rg01/providers/Microsoft.Synapse/workspaces/synapseari002/bigDataPools/RunningPool\u0022,\u0022name\u0022:\u0022RunningPool\u0022,\u0022type\u0022:\u0022Spark\u0022,\u0022endpoint\u0022:\u0022https://synapseari002.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/RunningPool\u0022,\u0022auth\u0022:{\u0022type\u0022:\u0022AAD\u0022,\u0022authResource\u0022:\u0022https://dev.azuresynapse.net\u0022},\u0022sparkVersion\u0022:\u00222.4\u0022,\u0022nodeCount\u0022:3,\u0022cores\u0022:0,\u0022memory\u0022:0,\u0022extraHeader\u0022:null},\u0022sessionKeepAliveTimeout\u0022:0,\u0022sessionOptions\u0022:{\u0022driverMemory\u0022:\u002228g\u0022,\u0022driverCores\u0022:4,\u0022executorMemory\u0022:\u002228g\u0022,\u0022executorCores\u0022:4,\u0022numExecutors\u0022:2,\u0022keepAliveTimeout\u0022:30,\u0022conf\u0022:{\u0022spark.dynamicAllocation.enabled\u0022:\u0022false\u0022,\u0022spark.dynamicAllocation.minExecutors\u0022:\u00222\u0022,\u0022spark.dynamicAllocation.maxExecutors\u0022:\u00222\u0022}},\u0022saveOutput\u0022:true},\u0022cells\u0022:[{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{\u0022microsoft\u0022:{\u0022language\u0022:\u0022python1\u0022}},\u0022source\u0022:[\u0022%%pyspark\\r\\n\u0022,\u0022df = spark.read.load(\u0027abfss://synapse@zagodhpanaariew1sto02.dfs.core.windows.net/Data/COCKPIT_V0.csv\u0027, format=\u0027csv\u0027\\r\\n\u0022,\u0022## If\u202Fheader\u202Fexists\u202Funcomment\u202Fline\u202Fbelow\\r\\n\u0022,\u0022##, header=True\\r\\n\u0022,\u0022)\\r\\n\u0022,\u0022display(df.limit(10))\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:null}],\u0022folder\u0022:null}},{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/dwnb1232\u0022,\u0022name\u0022:\u0022dwnb1232\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022etag\u0022:\u0022c200a08b-0000-0100-0000-5fd32eb70000\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:2,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:null,\u0022sessionProperties\u0022:null,\u0022metadata\u0022:{\u0022language_info\u0022:{\u0022name\u0022:\u0022python\u0022},\u0022a365ComputeOptions\u0022:{\u0022id\u0022:\u0022/subscriptions/132ed640-b28a-4f12-b8b6-3792c4e9d55f/resourceGroups/z-ago-dhp-ana-ari-ew1-rg01/providers/Microsoft.Synapse/workspaces/synapseari002/bigDataPools/RunningPool\u0022,\u0022name\u0022:\u0022RunningPool\u0022,\u0022type\u0022:\u0022Spark\u0022,\u0022endpoint\u0022:\u0022https://synapseari002.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/RunningPool\u0022,\u0022auth\u0022:{\u0022type\u0022:\u0022AAD\u0022,\u0022authResource\u0022:\u0022https://dev.azuresynapse.net\u0022},\u0022sparkVersion\u0022:\u00222.4\u0022,\u0022nodeCount\u0022:3,\u0022cores\u0022:0,\u0022memory\u0022:0,\u0022extraHeader\u0022:null},\u0022sessionKeepAliveTimeout\u0022:0,\u0022sessionOptions\u0022:{\u0022driverMemory\u0022:\u002228g\u0022,\u0022driverCores\u0022:4,\u0022executorMemory\u0022:\u002228g\u0022,\u0022executorCores\u0022:4,\u0022numExecutors\u0022:2,\u0022keepAliveTimeout\u0022:30,\u0022conf\u0022:{\u0022spark.dynamicAllocation.enabled\u0022:\u0022false\u0022,\u0022spark.dynamicAllocation.minExecutors\u0022:\u00222\u0022,\u0022spark.dynamicAllocation.maxExecutors\u0022:\u00222\u0022}},\u0022saveOutput\u0022:true},\u0022cells\u0022:[{\u0022cell_type\u0022:\u0022code1\u0022,\u0022metadata\u0022:{\u0022microsoft\u0022:{\u0022language\u0022:\u0022python\u0022}},\u0022source\u0022:[\u0022%%pyspark\\r\\n\u0022,\u0022df = spark.read.load(\u0027abfss://synapse@zagodhpanaariew1sto02.dfs.core.windows.net/Data/COCKPIT_V0.csv\u0027, format=\u0027csv\u0027\\r\\n\u0022,\u0022## If\u202Fheader\u202Fexists\u202Funcomment\u202Fline\u202Fbelow\\r\\n\u0022,\u0022##, header=True\\r\\n\u0022,\u0022)\\r\\n\u0022,\u0022display(df.limit(10))\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:null}],\u0022folder\u0022:null}},{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook1655116845\u0022,\u0022name\u0022:\u0022Notebook1655116845\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022etag\u0022:\u00221a0072ca-0000-0100-0000-5fd6ffec0000\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:2,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:null,\u0022sessionProperties\u0022:null,\u0022metadata\u0022:{\u0022language_info\u0022:null,\u0022a365ComputeOptions\u0022:null,\u0022sessionKeepAliveTimeout\u0022:0},\u0022cells\u0022:[{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{},\u0022source\u0022:[\u0022from azureml.opendatasets import NycTlcYellow\\n\u0022,\u0022\\n\u0022,\u0022data = NycTlcYellow()\\n\u0022,\u0022df = data.to_spark_dataframe()\\n\u0022,\u0022# Display 10 rows\\n\u0022,\u0022display(df.limit(10))\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:null}],\u0022folder\u0022:null}},{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook598190831\u0022,\u0022name\u0022:\u0022Notebook598190831\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022etag\u0022:\u00221a0074ca-0000-0100-0000-5fd6fff20000\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:2,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:null,\u0022sessionProperties\u0022:null,\u0022metadata\u0022:{\u0022language_info\u0022:null,\u0022a365ComputeOptions\u0022:null,\u0022sessionKeepAliveTimeout\u0022:0},\u0022cells\u0022:[{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{},\u0022source\u0022:[\u0022from azureml.opendatasets import NycTlcYellow\\n\u0022,\u0022\\n\u0022,\u0022data = NycTlcYellow()\\n\u0022,\u0022df = data.to_spark_dataframe()\\n\u0022,\u0022# Display 10 rows\\n\u0022,\u0022display(df.limit(10))\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:null}],\u0022folder\u0022:null}},{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook1970176056\u0022,\u0022name\u0022:\u0022Notebook1970176056\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022etag\u0022:\u00221a0076ca-0000-0100-0000-5fd700340000\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:2,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:null,\u0022sessionProperties\u0022:null,\u0022metadata\u0022:{\u0022language_info\u0022:null,\u0022a365ComputeOptions\u0022:null,\u0022sessionKeepAliveTimeout\u0022:0},\u0022cells\u0022:[{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{},\u0022source\u0022:[\u0022from azureml.opendatasets import NycTlcYellow\\n\u0022,\u0022\\n\u0022,\u0022data = NycTlcYellow()\\n\u0022,\u0022df = data.to_spark_dataframe()\\n\u0022,\u0022# Display 10 rows\\n\u0022,\u0022display(df.limit(10))\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:null}],\u0022folder\u0022:null}},{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook1782019395\u0022,\u0022name\u0022:\u0022Notebook1782019395\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022etag\u0022:\u00221a0078ca-0000-0100-0000-5fd700380000\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:2,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:null,\u0022sessionProperties\u0022:null,\u0022metadata\u0022:{\u0022language_info\u0022:null,\u0022a365ComputeOptions\u0022:null,\u0022sessionKeepAliveTimeout\u0022:0},\u0022cells\u0022:[{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{},\u0022source\u0022:[\u0022from azureml.opendatasets import NycTlcYellow\\n\u0022,\u0022\\n\u0022,\u0022data = NycTlcYellow()\\n\u0022,\u0022df = data.to_spark_dataframe()\\n\u0022,\u0022# Display 10 rows\\n\u0022,\u0022display(df.limit(10))\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:null}],\u0022folder\u0022:null}},{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook407138930\u0022,\u0022name\u0022:\u0022Notebook407138930\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022etag\u0022:\u00221a007bca-0000-0100-0000-5fd7021d0000\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:2,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:null,\u0022sessionProperties\u0022:null,\u0022metadata\u0022:{\u0022language_info\u0022:null,\u0022a365ComputeOptions\u0022:null,\u0022sessionKeepAliveTimeout\u0022:0},\u0022cells\u0022:[{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{},\u0022source\u0022:[\u0022from azureml.opendatasets import NycTlcYellow\\n\u0022,\u0022\\n\u0022,\u0022data = NycTlcYellow()\\n\u0022,\u0022df = data.to_spark_dataframe()\\n\u0022,\u0022# Display 10 rows\\n\u0022,\u0022display(df.limit(10))\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:null}],\u0022folder\u0022:null}},{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook1964062232\u0022,\u0022name\u0022:\u0022Notebook1964062232\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022etag\u0022:\u00221a007dca-0000-0100-0000-5fd702220000\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:2,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:null,\u0022sessionProperties\u0022:null,\u0022metadata\u0022:{\u0022language_info\u0022:null,\u0022a365ComputeOptions\u0022:null,\u0022sessionKeepAliveTimeout\u0022:0},\u0022cells\u0022:[{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{},\u0022source\u0022:[\u0022from azureml.opendatasets import NycTlcYellow\\n\u0022,\u0022\\n\u0022,\u0022data = NycTlcYellow()\\n\u0022,\u0022df = data.to_spark_dataframe()\\n\u0022,\u0022# Display 10 rows\\n\u0022,\u0022display(df.limit(10))\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:null}],\u0022folder\u0022:null}},{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook1621408096\u0022,\u0022name\u0022:\u0022Notebook1621408096\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022etag\u0022:\u00221a007fca-0000-0100-0000-5fd703dc0000\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:2,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:null,\u0022sessionProperties\u0022:null,\u0022metadata\u0022:{\u0022language_info\u0022:null,\u0022a365ComputeOptions\u0022:null,\u0022sessionKeepAliveTimeout\u0022:0},\u0022cells\u0022:[{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{},\u0022source\u0022:[\u0022from azureml.opendatasets import NycTlcYellow\\n\u0022,\u0022\\n\u0022,\u0022data = NycTlcYellow()\\n\u0022,\u0022df = data.to_spark_dataframe()\\n\u0022,\u0022# Display 10 rows\\n\u0022,\u0022display(df.limit(10))\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:null}],\u0022folder\u0022:null}},{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook391889253\u0022,\u0022name\u0022:\u0022Notebook391889253\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022etag\u0022:\u00221a0081ca-0000-0100-0000-5fd703e90000\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:2,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:null,\u0022sessionProperties\u0022:null,\u0022metadata\u0022:{\u0022language_info\u0022:null,\u0022a365ComputeOptions\u0022:null,\u0022sessionKeepAliveTimeout\u0022:0},\u0022cells\u0022:[{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{},\u0022source\u0022:[\u0022from azureml.opendatasets import NycTlcYellow\\n\u0022,\u0022\\n\u0022,\u0022data = NycTlcYellow()\\n\u0022,\u0022df = data.to_spark_dataframe()\\n\u0022,\u0022# Display 10 rows\\n\u0022,\u0022display(df.limit(10))\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:null}],\u0022folder\u0022:null}},{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/dongwwanb\u0022,\u0022name\u0022:\u0022dongwwanb\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022etag\u0022:\u00220e003468-0000-0100-0000-611a2ee30000\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:0,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:null,\u0022sessionProperties\u0022:{\u0022driverMemory\u0022:\u002228g\u0022,\u0022driverCores\u0022:4,\u0022executorMemory\u0022:\u002228g\u0022,\u0022executorCores\u0022:4,\u0022numExecutors\u0022:2,\u0022conf\u0022:{\u0022spark.dynamicAllocation.enabled\u0022:\u0022false\u0022,\u0022spark.dynamicAllocation.minExecutors\u0022:\u00222\u0022,\u0022spark.dynamicAllocation.maxExecutors\u0022:\u00222\u0022}},\u0022metadata\u0022:{\u0022language_info\u0022:{\u0022name\u0022:\u0022python\u0022},\u0022a365ComputeOptions\u0022:null,\u0022sessionKeepAliveTimeout\u0022:30,\u0022saveOutput\u0022:true,\u0022synapse_widget\u0022:{\u0022version\u0022:\u00220.1\u0022,\u0022state\u0022:{}},\u0022kernelspec\u0022:{\u0022name\u0022:\u0022synapse_pyspark\u0022,\u0022display_name\u0022:\u0022python\u0022}},\u0022cells\u0022:[{\u0022cell_type\u0022:\u0022markdown\u0022,\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Bcell\u0022:{\u0022title\u0022:\u0022\u0022,\u0022showTitle\u0022:false,\u0022inputWidgets\u0022:{},\u0022nuid\u0022:\u0022ec9689e6-a215-42cf-aa9f-85a38cca6362\u0022}},\u0022source\u0022:[\u0022Copyright (c) Microsoft Corporation. All rights reserved.\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:null},{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Bcell\u0022:{\u0022title\u0022:\u0022\u0022,\u0022showTitle\u0022:false,\u0022inputWidgets\u0022:{},\u0022nuid\u0022:\u00224eb23c41-ffd4-412f-a887-102462d4d316\u0022}},\u0022source\u0022:[\u0022# Disable the verbose log\\n\u0022,\u0022import logging\\n\u0022,\u0022logging.getLogger(\\\u0022py4j\\\u0022).setLevel(logging.ERROR) \u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[{\u0022output_type\u0022:\u0022display_data\u0022,\u0022data\u0022:{\u0022text/html\u0022:\u0022\u003Cstyle scoped\u003E\\n  .ansiout {\\n    display: block;\\n    unicode-bidi: embed;\\n    white-space: pre-wrap;\\n    word-wrap: break-word;\\n    word-break: break-all;\\n    font-family: \\\u0022Source Code Pro\\\u0022, \\\u0022Menlo\\\u0022, monospace;;\\n    font-size: 13px;\\n    color: #555;\\n    margin-left: 4px;\\n    line-height: 19px;\\n  }\\n\u003C/style\u003E\\n\u003Cdiv class=\\\u0022ansiout\\\u0022\u003E\u003C/div\u003E\u0022},\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Boutput\u0022:{\u0022datasetInfos\u0022:[],\u0022data\u0022:\u0022\u003Cdiv class=\\\u0022ansiout\\\u0022\u003E\u003C/div\u003E\u0022,\u0022removedWidgets\u0022:[],\u0022addedWidgets\u0022:{},\u0022type\u0022:\u0022html\u0022,\u0022arguments\u0022:{}}}}],\u0022execution_count\u0022:0},{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Bcell\u0022:{\u0022title\u0022:\u0022\u0022,\u0022showTitle\u0022:false,\u0022inputWidgets\u0022:{},\u0022nuid\u0022:\u0022b5c38c38-a7f7-43f5-a15c-e387079ac8d7\u0022}},\u0022source\u0022:[\u0022\\n\u0022,\u0022!pip install \\\u0022https://retaildatastore.blob.core.windows.net/artifacts/cdmsdk/commondatamodel-objectmodel-1.0.10-py3-none-any.whl?sp=r\u0026st=2021-02-11T11:46:58Z\u0026se=2022-02-11T19:46:58Z\u0026spr=https\u0026sv=2020-02-10\u0026sr=b\u0026sig=XXXXXXXXXXXXXXXXXXXXXXXX\\\u0022\\n\u0022,\u0022\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[{\u0022output_type\u0022:\u0022display_data\u0022,\u0022data\u0022:{\u0022text/html\u0022:\u0022\u003Cstyle scoped\u003E\\n  .ansiout {\\n    display: block;\\n    unicode-bidi: embed;\\n    white-space: pre-wrap;\\n    word-wrap: break-word;\\n    word-break: break-all;\\n    font-family: \\\u0022Source Code Pro\\\u0022, \\\u0022Menlo\\\u0022, monospace;;\\n    font-size: 13px;\\n    color: #555;\\n    margin-left: 4px;\\n    line-height: 19px;\\n  }\\n\u003C/style\u003E\\n\u003Cdiv class=\\\u0022ansiout\\\u0022\u003E\u003C/div\u003E\u0022},\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Boutput\u0022:{\u0022datasetInfos\u0022:[],\u0022data\u0022:\u0022\u003Cdiv class=\\\u0022ansiout\\\u0022\u003E\u003C/div\u003E\u0022,\u0022removedWidgets\u0022:[],\u0022addedWidgets\u0022:{},\u0022type\u0022:\u0022html\u0022,\u0022arguments\u0022:{}}}}],\u0022execution_count\u0022:0},{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Bcell\u0022:{\u0022title\u0022:\u0022\u0022,\u0022showTitle\u0022:false,\u0022inputWidgets\u0022:{},\u0022nuid\u0022:\u0022b255d876-363a-446e-a0fa-e51f866efa77\u0022}},\u0022source\u0022:[\u0022\\n\u0022,\u0022\\n\u0022,\u0022# Generic imports\\n\u0022,\u0022import dotenv\\n\u0022,\u0022import json\\n\u0022,\u0022import numpy as np\\n\u0022,\u0022import os\\n\u0022,\u0022import fnmatch\\n\u0022,\u0022import shutil\\n\u0022,\u0022import random\\n\u0022,\u0022import string\\n\u0022,\u0022import pandas as pd\\n\u0022,\u0022import requests\\n\u0022,\u0022import asyncio\\n\u0022,\u0022import copy\\n\u0022,\u0022import functools\\n\u0022,\u0022import pathlib\\n\u0022,\u0022import string\\n\u0022,\u0022from datetime import datetime, timezone\\n\u0022,\u0022\\n\u0022,\u0022# Spark imports\\n\u0022,\u0022from pyspark.sql import SparkSession, SQLContext\\n\u0022,\u0022from pyspark.sql.types import *\\n\u0022,\u0022from pyspark.sql import functions as F\\n\u0022,\u0022\\n\u0022,\u0022# Recommenders imports\\n\u0022,\u0022# from azureiai.reco_utils.dataset.spark_splitters import spark_random_split\\n\u0022,\u0022# from azureiai.reco_utils.evaluation.spark_evaluation import (\\n\u0022,\u0022#     SparkRankingEvaluation,\\n\u0022,\u0022#     SparkRatingEvaluation,\\n\u0022,\u0022# )\\n\u0022,\u0022from pysarplus import SARPlus\\n\u0022,\u0022from azureiai.retail.cdm2ai.reader import CONFIG\\n\u0022,\u0022\\n\u0022,\u0022# AzureML imports\\n\u0022,\u0022import azureml.core\\n\u0022,\u0022from azureml.core.runconfig import JarLibrary\\n\u0022,\u0022from azureml.core.compute import ComputeTarget, DatabricksCompute\\n\u0022,\u0022from azureml.pipeline.steps import DatabricksStep\\n\u0022,\u0022from azureml.core.datastore import Datastore\\n\u0022,\u0022from azureml.data.data_reference import DataReference\\n\u0022,\u0022from azureml.core import Workspace\\n\u0022,\u0022from azureml.core.run import Run\\n\u0022,\u0022from azureml.core.experiment import Experiment\\n\u0022,\u0022from azureml.core import Environment\\n\u0022,\u0022from azureml.core.environment import CondaDependencies\\n\u0022,\u0022from azureml.core.environment import SparkPackage\\n\u0022,\u0022from azureml.core.model import Model\\n\u0022,\u0022from azureml.core.webservice import Webservice\\n\u0022,\u0022\\n\u0022,\u0022# Cosmos DB imports\\n\u0022,\u0022# Install Cosmos DB connector from: https://docs.databricks.com/data/data-sources/azure/cosmosdb-connector.html\\n\u0022,\u0022from azure.common.client_factory import get_client_from_json_dict\\n\u0022,\u0022\\n\u0022,\u0022# CDM imports\\n\u0022,\u0022from cdm.storage import ADLSAdapter\\n\u0022,\u0022from cdm.objectmodel import CdmCorpusDefinition, CdmManifestDefinition\\n\u0022,\u0022from cdm.persistence.cdmfolder import ManifestPersistence\\n\u0022,\u0022from cdm.persistence.cdmfolder.types import ManifestContent\\n\u0022,\u0022from cdm.storage import LocalAdapter, ADLSAdapter\\n\u0022,\u0022from cdm.utilities import time_utils\\n\u0022,\u0022\\n\u0022,\u0022from cdm.utilities.string_utils import kvprint\\n\u0022,\u0022\\n\u0022,\u0022# AKS imports\\n\u0022,\u0022from azureml.core.compute import AksCompute\\n\u0022,\u0022from azureml.core.compute_target import ComputeTargetException\\n\u0022,\u0022from azureml.core.webservice import AksWebservice\\n\u0022,\u0022from azureml.exceptions import WebserviceException\\n\u0022,\u0022from azureml.core.model import InferenceConfig\\n\u0022,\u0022\\n\u0022,\u0022\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[{\u0022output_type\u0022:\u0022display_data\u0022,\u0022data\u0022:{\u0022text/html\u0022:\u0022\u003Cstyle scoped\u003E\\n  .ansiout {\\n    display: block;\\n    unicode-bidi: embed;\\n    white-space: pre-wrap;\\n    word-wrap: break-word;\\n    word-break: break-all;\\n    font-family: \\\u0022Source Code Pro\\\u0022, \\\u0022Menlo\\\u0022, monospace;;\\n    font-size: 13px;\\n    color: #555;\\n    margin-left: 4px;\\n    line-height: 19px;\\n  }\\n\u003C/style\u003E\\n\u003Cdiv class=\\\u0022ansiout\\\u0022\u003E\u003C/div\u003E\u0022},\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Boutput\u0022:{\u0022datasetInfos\u0022:[],\u0022data\u0022:\u0022\u003Cdiv class=\\\u0022ansiout\\\u0022\u003E\u003C/div\u003E\u0022,\u0022removedWidgets\u0022:[],\u0022addedWidgets\u0022:{},\u0022type\u0022:\u0022html\u0022,\u0022arguments\u0022:{}}}}],\u0022execution_count\u0022:0},{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Bcell\u0022:{\u0022title\u0022:\u0022\u0022,\u0022showTitle\u0022:false,\u0022inputWidgets\u0022:{},\u0022nuid\u0022:\u0022bb6041f1-a825-41ae-ba4d-de6dff6e361a\u0022}},\u0022source\u0022:[\u0022# Global variables\\n\u0022,\u0022# NOTE these variables are visible in the scope of the entire pipeline\\n\u0022,\u0022\\n\u0022,\u0022# Load the .env file to manage persistent variables\\n\u0022,\u0022_GLOBAL_DOTENV_PATH = pathlib.Path(dotenv.find_dotenv(\\n\u0022,\u0022    filename=\\\u0022/dbfs/FileStore/.env\\\u0022,\\n\u0022,\u0022    raise_error_if_not_found=True\\n\u0022,\u0022))\\n\u0022,\u0022\\n\u0022,\u0022# -------------------------------------------------------------------------\\n\u0022,\u0022# Azure general variables\\n\u0022,\u0022# -------------------------------------------------------------------------\\n\u0022,\u0022_GLOBAL_SUBSCRIPTION_ID = dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022subscription_id\\\u0022)\\n\u0022,\u0022_GLOBAL_RESOURCE_GROUP = dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022resource_group\\\u0022)\\n\u0022,\u0022_GLOBAL_CONFIG_DICT = {\\n\u0022,\u0022    \\\u0022clientIdKey\\\u0022: \\\u0022sp_client_id\\\u0022,\\n\u0022,\u0022    \\\u0022clientSecretKey\\\u0022: \\\u0022sp_password\\\u0022,\\n\u0022,\u0022    \\\u0022clientId\\\u0022: dbutils.secrets.get(scope=\\\u0022secrets\\\u0022, key=\\\u0022sp_client_id\\\u0022),\\n\u0022,\u0022    \\\u0022clientSecret\\\u0022: dbutils.secrets.get(scope=\\\u0022secrets\\\u0022, key=\\\u0022sp_password\\\u0022),\\n\u0022,\u0022    \\\u0022subscriptionId\\\u0022: _GLOBAL_SUBSCRIPTION_ID,\\n\u0022,\u0022    \\\u0022tenantId\\\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022tenant_id\\\u0022),\\n\u0022,\u0022    \\\u0022activeDirectoryEndpointUrl\\\u0022: \\\u0022https://login.microsoftonline.com\\\u0022,\\n\u0022,\u0022    \\\u0022resourceManagerEndpointUrl\\\u0022: \\\u0022https://management.azure.com/\\\u0022,\\n\u0022,\u0022    \\\u0022activeDirectoryGraphResourceId\\\u0022: \\\u0022https://graph.windows.net/\\\u0022,\\n\u0022,\u0022    \\\u0022sqlManagementEndpointUrl\\\u0022: \\\u0022https://management.core.windows.net:8443/\\\u0022,\\n\u0022,\u0022    \\\u0022galleryEndpointUrl\\\u0022: \\\u0022https://gallery.azure.com/\\\u0022,\\n\u0022,\u0022    \\\u0022managementEndpointUrl\\\u0022: \\\u0022https://management.core.windows.net/\\\u0022\\n\u0022,\u0022}\\n\u0022,\u0022\\n\u0022,\u0022# -------------------------------------------------------------------------\\n\u0022,\u0022# ADLS variables\\n\u0022,\u0022# -------------------------------------------------------------------------\\n\u0022,\u0022_GLOBAL_ADLS_ACCOUNT = dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022data_account\\\u0022)\\n\u0022,\u0022_GLOBAL_ADLS_CONTAINER = dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022data_container\\\u0022)\\n\u0022,\u0022_GLOBAL_ADLS_APPID = _GLOBAL_CONFIG_DICT[\\\u0022clientId\\\u0022]\\n\u0022,\u0022_GLOBAL_ADLS_DIRID = _GLOBAL_CONFIG_DICT[\\\u0022tenantId\\\u0022]\\n\u0022,\u0022_GLOBAL_ADLS_SECRET = _GLOBAL_CONFIG_DICT[\\\u0022clientSecret\\\u0022]\\n\u0022,\u0022_GLOBAL_ADLS_HOSTNAME = f\u0027{_GLOBAL_ADLS_ACCOUNT}.dfs.core.windows.net\u0027\\n\u0022,\u0022_GLOBAL_ADLS_DICT = {\\n\u0022,\u0022    \\\u0022adls_source\\\u0022: \\\u0022abfss://{0}@{1}.dfs.core.windows.net\\\u0022.format(_GLOBAL_ADLS_CONTAINER, _GLOBAL_ADLS_ACCOUNT),\\n\u0022,\u0022    \\\u0022oauth_endpoint\\\u0022: \\\u0022https://login.microsoftonline.com/{0}/oauth2/token\\\u0022.format(_GLOBAL_CONFIG_DICT[\\\u0022tenantId\\\u0022]),\\n\u0022,\u0022    \\\u0022adls_dfs_endpoint\\\u0022: \\\u0022{0}.dfs.core.windows.net\\\u0022.format(_GLOBAL_ADLS_ACCOUNT),\\n\u0022,\u0022    \\\u0022adls_container_mount_point\\\u0022: \\\u0022/mnt/{0}\\\u0022.format(_GLOBAL_ADLS_CONTAINER),\\n\u0022,\u0022    \\\u0022adls_resource_type\\\u0022: \\\u0022https://storage.azure.com\\\u0022,\\n\u0022,\u0022    \\\u0022adls_mount_root\\\u0022: \\\u0022/mnt\\\u0022,\\n\u0022,\u0022    \\\u0022adls_model_cache\\\u0022: \\\u0022dbfs:/mnt/{0}/cache\\\u0022.format(_GLOBAL_ADLS_CONTAINER)\\n\u0022,\u0022}\\n\u0022,\u0022\\n\u0022,\u0022# -------------------------------------------------------------------------\\n\u0022,\u0022# COSMOS DB variables\\n\u0022,\u0022# -------------------------------------------------------------------------\\n\u0022,\u0022_GLOBAL_DB_SECRETS = {\\n\u0022,\u0022    \\\u0022Endpoint\\\u0022: \\\u0022https://{0}.documents.azure.com:443/\\\u0022.format(dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022azure_cosmosdb_account_name\\\u0022)),\\n\u0022,\u0022    \\\u0022Masterkey\\\u0022: dbutils.secrets.get(scope=\\\u0022secrets\\\u0022, key=\\\u0022cosmosdb_primary_master_key\\\u0022),\\n\u0022,\u0022    \\\u0022Database\\\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022azure_cosmosdb_database\\\u0022),\\n\u0022,\u0022    \\\u0022Collection\\\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022azure_cosmosdb_container\\\u0022),\\n\u0022,\u0022    \\\u0022Upsert\\\u0022: True\\n\u0022,\u0022}\\n\u0022,\u0022\\n\u0022,\u0022# -------------------------------------------------------------------------\\n\u0022,\u0022# Data variables\\n\u0022,\u0022# -------------------------------------------------------------------------\\n\u0022,\u0022_GLOBAL_DATA_ROOT = dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022physical_data_model_directory\\\u0022)\\n\u0022,\u0022_GLOBAL_TPC_RAW_ROOT = \u0027tpcds-raw-data\u0027\\n\u0022,\u0022_GLOBAL_IDM_SCHEMA_ROOT = dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022logical_data_model_directory\\\u0022)\\n\u0022,\u0022_GLOBAL_DATA_NAME = dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022data_name\\\u0022)\\n\u0022,\u0022_GLOBAL_ADAPTER_PARTIAL = functools.partial(\\n\u0022,\u0022    ADLSAdapter,\\n\u0022,\u0022    hostname=_GLOBAL_ADLS_HOSTNAME,\\n\u0022,\u0022    tenant=_GLOBAL_ADLS_DIRID,\\n\u0022,\u0022    client_id=_GLOBAL_ADLS_APPID,\\n\u0022,\u0022    secret=_GLOBAL_ADLS_SECRET\\n\u0022,\u0022)\\n\u0022,\u0022_GLOBAL_CONFIG_JSON = copy.deepcopy(CONFIG)\\n\u0022,\u0022_GLOBAL_CONFIG_JSON[\\\u0022adls\\\u0022][\\\u0022account\\\u0022] = _GLOBAL_ADLS_ACCOUNT\\n\u0022,\u0022_GLOBAL_CONFIG_JSON[\\\u0022adls\\\u0022][\\\u0022container\\\u0022] = _GLOBAL_ADLS_CONTAINER\\n\u0022,\u0022_GLOBAL_CONFIG_JSON[\\\u0022adls\\\u0022][\\\u0022appid\\\u0022] = _GLOBAL_ADLS_APPID\\n\u0022,\u0022_GLOBAL_CONFIG_JSON[\\\u0022adls\\\u0022][\\\u0022dirid\\\u0022] = _GLOBAL_ADLS_DIRID\\n\u0022,\u0022_GLOBAL_CONFIG_JSON[\\\u0022adls\\\u0022][\\\u0022secret\\\u0022] = _GLOBAL_ADLS_SECRET\\n\u0022,\u0022_GLOBAL_CONFIG_JSON[\\\u0022adls\\\u0022][\\\u0022hostname\\\u0022] = _GLOBAL_ADLS_HOSTNAME\\n\u0022,\u0022_GLOBAL_CONFIG_JSON[\\\u0022cdm\\\u0022][\\\u0022data_root\\\u0022] = _GLOBAL_DATA_ROOT\\n\u0022,\u0022_GLOBAL_CONFIG_JSON[\\\u0022cdm\\\u0022][\\\u0022manifest_name\\\u0022] = \\\u0022{0}.manifest.cdm.json\\\u0022.format(dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022industry_data_model_name\\\u0022))\\n\u0022,\u0022_GLOBAL_INPUT_DATA_FILE = dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022processed_data_file\\\u0022)\\n\u0022,\u0022_GLOBAL_CUSTOMER_DATA_FILE = dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022processed_customer_data_file\\\u0022)\\n\u0022,\u0022\\n\u0022,\u0022# -------------------------------------------------------------------------\\n\u0022,\u0022# Model variables\\n\u0022,\u0022# -------------------------------------------------------------------------\\n\u0022,\u0022_GLOBAL_MODEL_LOCAL_CACHE = \u0027dbfs:/model/{0}\u0027.format(\\n\u0022,\u0022    \u0027\u0027.join(random.choice(string.ascii_lowercase) for i in range(10))\\n\u0022,\u0022)\\n\u0022,\u0022\\n\u0022,\u0022# -------------------------------------------------------------------------\\n\u0022,\u0022# Azure Machine Learning service variables\\n\u0022,\u0022# -------------------------------------------------------------------------\\n\u0022,\u0022_GLOBAL_AML_DICT = {\\n\u0022,\u0022    \\\u0022workspace_name\\\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022azureml_workspace\\\u0022),\\n\u0022,\u0022    \\\u0022model_file_name\\\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022azureml_model_file_name\\\u0022),\\n\u0022,\u0022    \\\u0022aml_experiment_name\\\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022azureml_experiment_name\\\u0022)\\n\u0022,\u0022}\\n\u0022,\u0022\\n\u0022,\u0022# -------------------------------------------------------------------------\\n\u0022,\u0022# Azure Kubernetes Service variables\\n\u0022,\u0022# -------------------------------------------------------------------------\\n\u0022,\u0022_GLOBAL_AKS_NAME = dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022aks_cluster_name\\\u0022)\\n\u0022,\u0022_GLOBAL_SERVICE_NAME = \\\u0022aks-service-{0}\\\u0022.format(dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022unique_key\\\u0022))\\n\u0022,\u0022_GLOBAL_AKS_CONFIG_LEVEL = dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022aks_config_level\\\u0022)\\n\u0022,\u0022_GLOBAL_AKS_COMPUTE_TARGET_NAME = \u0027aks\u0027 \u002B dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022unique_key\\\u0022)\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[{\u0022output_type\u0022:\u0022display_data\u0022,\u0022data\u0022:{\u0022text/html\u0022:\u0022\u003Cstyle scoped\u003E\\n  .ansiout {\\n    display: block;\\n    unicode-bidi: embed;\\n    white-space: pre-wrap;\\n    word-wrap: break-word;\\n    word-break: break-all;\\n    font-family: \\\u0022Source Code Pro\\\u0022, \\\u0022Menlo\\\u0022, monospace;;\\n    font-size: 13px;\\n    color: #555;\\n    margin-left: 4px;\\n    line-height: 19px;\\n  }\\n\u003C/style\u003E\\n\u003Cdiv class=\\\u0022ansiout\\\u0022\u003E\u003C/div\u003E\u0022},\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Boutput\u0022:{\u0022datasetInfos\u0022:[],\u0022data\u0022:\u0022\u003Cdiv class=\\\u0022ansiout\\\u0022\u003E\u003C/div\u003E\u0022,\u0022removedWidgets\u0022:[],\u0022addedWidgets\u0022:{},\u0022type\u0022:\u0022html\u0022,\u0022arguments\u0022:{}}}},{\u0022output_type\u0022:\u0022display_data\u0022,\u0022data\u0022:{\u0022text/html\u0022:\u0022\u003Cstyle scoped\u003E\\n  .ansiout {\\n    display: block;\\n    unicode-bidi: embed;\\n    white-space: pre-wrap;\\n    word-wrap: break-word;\\n    word-break: break-all;\\n    font-family: \\\u0022Source Code Pro\\\u0022, \\\u0022Menlo\\\u0022, monospace;;\\n    font-size: 13px;\\n    color: #555;\\n    margin-left: 4px;\\n    line-height: 19px;\\n  }\\n\u003C/style\u003E\\n\u003Cdiv class=\\\u0022ansiout\\\u0022\u003E\u003Cspan class=\\\u0022ansi-red-fg\\\u0022\u003E---------------------------------------------------------------------------\u003C/span\u003E\\n\u003Cspan class=\\\u0022ansi-red-fg\\\u0022\u003ENameError\u003C/span\u003E                                 Traceback (most recent call last)\\n\u003Cspan class=\\\u0022ansi-green-fg\\\u0022\u003E\u0026lt;command-1159393715563018\u0026gt;\u003C/span\u003E in \u003Cspan class=\\\u0022ansi-cyan-fg\\\u0022\u003E\u0026lt;module\u0026gt;\u003C/span\u003E\\n\u003Cspan class=\\\u0022ansi-green-intense-fg ansi-bold\\\u0022\u003E     66\u003C/span\u003E _GLOBAL_DATA_NAME \u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E=\u003C/span\u003E dotenv\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E.\u003C/span\u003Eget_key\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E(\u003C/span\u003E_GLOBAL_DOTENV_PATH\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E,\u003C/span\u003E \u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E\u0026#34;data_name\u0026#34;\u003C/span\u003E\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E)\u003C/span\u003E\\n\u003Cspan class=\\\u0022ansi-green-intense-fg ansi-bold\\\u0022\u003E     67\u003C/span\u003E _GLOBAL_ADAPTER_PARTIAL = functools.partial(\\n\u003Cspan class=\\\u0022ansi-green-fg\\\u0022\u003E---\u0026gt; 68\u003C/span\u003E\u003Cspan class=\\\u0022ansi-red-fg\\\u0022\u003E     \u003C/span\u003EADLSAdapter\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E,\u003C/span\u003E\\n\u003Cspan class=\\\u0022ansi-green-intense-fg ansi-bold\\\u0022\u003E     69\u003C/span\u003E     hostname\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E=\u003C/span\u003E_GLOBAL_ADLS_HOSTNAME\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E,\u003C/span\u003E\\n\u003Cspan class=\\\u0022ansi-green-intense-fg ansi-bold\\\u0022\u003E     70\u003C/span\u003E     tenant\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E=\u003C/span\u003E_GLOBAL_ADLS_DIRID\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E,\u003C/span\u003E\\n\\n\u003Cspan class=\\\u0022ansi-red-fg\\\u0022\u003ENameError\u003C/span\u003E: name \u0026#39;ADLSAdapter\u0026#39; is not defined\u003C/div\u003E\u0022},\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Boutput\u0022:{\u0022type\u0022:\u0022ipynbError\u0022,\u0022data\u0022:\u0022\u003Cdiv class=\\\u0022ansiout\\\u0022\u003E\u003Cspan class=\\\u0022ansi-red-fg\\\u0022\u003E---------------------------------------------------------------------------\u003C/span\u003E\\n\u003Cspan class=\\\u0022ansi-red-fg\\\u0022\u003ENameError\u003C/span\u003E                                 Traceback (most recent call last)\\n\u003Cspan class=\\\u0022ansi-green-fg\\\u0022\u003E\u0026lt;command-1159393715563018\u0026gt;\u003C/span\u003E in \u003Cspan class=\\\u0022ansi-cyan-fg\\\u0022\u003E\u0026lt;module\u0026gt;\u003C/span\u003E\\n\u003Cspan class=\\\u0022ansi-green-intense-fg ansi-bold\\\u0022\u003E     66\u003C/span\u003E _GLOBAL_DATA_NAME \u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E=\u003C/span\u003E dotenv\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E.\u003C/span\u003Eget_key\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E(\u003C/span\u003E_GLOBAL_DOTENV_PATH\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E,\u003C/span\u003E \u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E\u0026#34;data_name\u0026#34;\u003C/span\u003E\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E)\u003C/span\u003E\\n\u003Cspan class=\\\u0022ansi-green-intense-fg ansi-bold\\\u0022\u003E     67\u003C/span\u003E _GLOBAL_ADAPTER_PARTIAL = functools.partial(\\n\u003Cspan class=\\\u0022ansi-green-fg\\\u0022\u003E---\u0026gt; 68\u003C/span\u003E\u003Cspan class=\\\u0022ansi-red-fg\\\u0022\u003E     \u003C/span\u003EADLSAdapter\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E,\u003C/span\u003E\\n\u003Cspan class=\\\u0022ansi-green-intense-fg ansi-bold\\\u0022\u003E     69\u003C/span\u003E     hostname\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E=\u003C/span\u003E_GLOBAL_ADLS_HOSTNAME\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E,\u003C/span\u003E\\n\u003Cspan class=\\\u0022ansi-green-intense-fg ansi-bold\\\u0022\u003E     70\u003C/span\u003E     tenant\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E=\u003C/span\u003E_GLOBAL_ADLS_DIRID\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E,\u003C/span\u003E\\n\\n\u003Cspan class=\\\u0022ansi-red-fg\\\u0022\u003ENameError\u003C/span\u003E: name \u0026#39;ADLSAdapter\u0026#39; is not defined\u003C/div\u003E\u0022,\u0022errorSummary\u0022:\u0022\u003Cspan class=\\\u0022ansi-red-fg\\\u0022\u003ENameError\u003C/span\u003E: name \u0026#39;ADLSAdapter\u0026#39; is not defined\u0022,\u0022arguments\u0022:{}}}}],\u0022execution_count\u0022:0},{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Bcell\u0022:{\u0022title\u0022:\u0022\u0022,\u0022showTitle\u0022:false,\u0022inputWidgets\u0022:{},\u0022nuid\u0022:\u0022639595d4-4083-4f33-a7d4-15af60e7b3d6\u0022}},\u0022source\u0022:[\u0022# Spark initialization\\n\u0022,\u0022SUBMIT_ARGS = \\\u0022--packages eisber:sarplus:0.2.6 pyspark-shell\\\u0022\\n\u0022,\u0022os.environ[\\\u0022PYSPARK_SUBMIT_ARGS\\\u0022] = SUBMIT_ARGS\\n\u0022,\u0022\\n\u0022,\u0022spark = (\\n\u0022,\u0022    SparkSession.builder.appName(\\\u0022sample\\\u0022)\\n\u0022,\u0022    .master(\\\u0022local[*]\\\u0022)\\n\u0022,\u0022    .config(\\\u0022memory\\\u0022, \\\u00221G\\\u0022)\\n\u0022,\u0022    .config(\\\u0022spark.sql.shuffle.partitions\\\u0022, \\\u00221\\\u0022)\\n\u0022,\u0022    .config(\\\u0022spark.sql.crossJoin.enabled\\\u0022, True)\\n\u0022,\u0022    .config(\\\u0022spark.ui.enabled\\\u0022, False)\\n\u0022,\u0022    .getOrCreate()\\n\u0022,\u0022)\\n\u0022,\u0022\\n\u0022,\u0022# SqlContext helps with doing SQL like queries on spark DFs.\\n\u0022,\u0022sqlContext = SQLContext(spark)\\n\u0022,\u0022\\n\u0022,\u0022# Configure the Spark session to avoid using mount\\n\u0022,\u0022spark.conf.set(\\\u0022fs.azure.account.auth.type.{0}.dfs.core.windows.net\\\u0022.format(_GLOBAL_ADLS_ACCOUNT), \\\u0022OAuth\\\u0022)\\n\u0022,\u0022spark.conf.set(\\n\u0022,\u0022    \\\u0022fs.azure.account.oauth.provider.type.{0}.dfs.core.windows.net\\\u0022.format(_GLOBAL_ADLS_ACCOUNT),\\n\u0022,\u0022    \\\u0022org.apache.hadoop.fs.azurebfs.oauth2.ClientCredsTokenProvider\\\u0022,\\n\u0022,\u0022)\\n\u0022,\u0022spark.conf.set(\\n\u0022,\u0022    \\\u0022fs.azure.account.oauth2.client.id.{0}.dfs.core.windows.net\\\u0022.format(_GLOBAL_ADLS_ACCOUNT), _GLOBAL_ADLS_APPID\\n\u0022,\u0022)\\n\u0022,\u0022spark.conf.set(\\n\u0022,\u0022    \\\u0022fs.azure.account.oauth2.client.secret.{0}.dfs.core.windows.net\\\u0022.format(_GLOBAL_ADLS_ACCOUNT), _GLOBAL_ADLS_SECRET\\n\u0022,\u0022)\\n\u0022,\u0022spark.conf.set(\\n\u0022,\u0022    \\\u0022fs.azure.account.oauth2.client.endpoint.{0}.dfs.core.windows.net\\\u0022.format(_GLOBAL_ADLS_ACCOUNT),\\n\u0022,\u0022    \\\u0022https://login.microsoftonline.com/{0}/oauth2/token\\\u0022.format(_GLOBAL_ADLS_DIRID),\\n\u0022,\u0022)\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:0},{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Bcell\u0022:{\u0022title\u0022:\u0022\u0022,\u0022showTitle\u0022:false,\u0022inputWidgets\u0022:{},\u0022nuid\u0022:\u0022614662de-2288-451e-b238-b6190156aac4\u0022}},\u0022source\u0022:[\u0022# Mount the remove ADLS container on the local databricks\\n\u0022,\u0022\\n\u0022,\u0022# Unmount an existing mount point\\n\u0022,\u0022try:\\n\u0022,\u0022    dbutils.fs.unmount(_GLOBAL_ADLS_DICT[\\\u0022adls_container_mount_point\\\u0022])\\n\u0022,\u0022except Exception as ex:\\n\u0022,\u0022    if \\\u0022Directory not mounted\\\u0022 not in str(ex):\\n\u0022,\u0022        raise Exception(\\\u0022Error in unmounting\\\u0022)\\n\u0022,\u0022\\n\u0022,\u0022# Mount wit the provided configuration information\\n\u0022,\u0022configs = {\\n\u0022,\u0022    \\\u0022fs.azure.account.auth.type\\\u0022: \\\u0022OAuth\\\u0022,\\n\u0022,\u0022    \\\u0022fs.azure.account.oauth.provider.type\\\u0022: \\\u0022org.apache.hadoop.fs.azurebfs.oauth2.ClientCredsTokenProvider\\\u0022,\\n\u0022,\u0022    \\\u0022fs.azure.account.oauth2.client.id\\\u0022: _GLOBAL_CONFIG_DICT[\\\u0022clientId\\\u0022],\\n\u0022,\u0022    \\\u0022fs.azure.account.oauth2.client.secret\\\u0022: _GLOBAL_CONFIG_DICT[\\\u0022clientSecret\\\u0022],\\n\u0022,\u0022    \\\u0022fs.azure.account.oauth2.client.endpoint\\\u0022: _GLOBAL_ADLS_DICT[\\\u0022oauth_endpoint\\\u0022],\\n\u0022,\u0022}\\n\u0022,\u0022dbutils.fs.mount(\\n\u0022,\u0022    source=_GLOBAL_ADLS_DICT[\\\u0022adls_source\\\u0022],\\n\u0022,\u0022    mount_point=_GLOBAL_ADLS_DICT[\\\u0022adls_container_mount_point\\\u0022],\\n\u0022,\u0022    extra_configs=configs,\\n\u0022,\u0022)\\n\u0022,\u0022\\n\u0022,\u0022# List the contents in the mounted directory\\n\u0022,\u0022dbutils.fs.ls(_GLOBAL_ADLS_DICT[\\\u0022adls_container_mount_point\\\u0022])\\n\u0022,\u0022\\n\u0022,\u0022# Make a new directory for model cache use\\n\u0022,\u0022dbutils.fs.mkdirs(_GLOBAL_ADLS_DICT[\\\u0022adls_model_cache\\\u0022])\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:0}],\u0022folder\u0022:null}},{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/dongwwanb1\u0022,\u0022name\u0022:\u0022dongwwanb1\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022etag\u0022:\u00220000f8ed-0000-0100-0000-605349810000\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:0,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:null,\u0022sessionProperties\u0022:null,\u0022metadata\u0022:{\u0022language_info\u0022:null,\u0022a365ComputeOptions\u0022:null,\u0022sessionKeepAliveTimeout\u0022:0,\u0022application/vnd.databricks.v1\u002Bnotebook\u0022:{\u0022notebookName\u0022:\u0022config\u0022,\u0022dashboards\u0022:[],\u0022language\u0022:\u0022python\u0022,\u0022widgets\u0022:{},\u0022notebookOrigID\u0022:1159393715563015}},\u0022cells\u0022:[{\u0022cell_type\u0022:\u0022markdown\u0022,\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Bcell\u0022:{\u0022title\u0022:\u0022\u0022,\u0022showTitle\u0022:false,\u0022inputWidgets\u0022:{},\u0022nuid\u0022:\u0022ec9689e6-a215-42cf-aa9f-85a38cca6362\u0022}},\u0022source\u0022:[\u0022Copyright (c) Microsoft Corporation. All rights reserved.\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:null},{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Bcell\u0022:{\u0022title\u0022:\u0022\u0022,\u0022showTitle\u0022:false,\u0022inputWidgets\u0022:{},\u0022nuid\u0022:\u00224eb23c41-ffd4-412f-a887-102462d4d316\u0022}},\u0022source\u0022:[\u0022# Disable the verbose log\\nimport logging\\nlogging.getLogger(\\\u0022py4j\\\u0022).setLevel(logging.ERROR)\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[{\u0022output_type\u0022:\u0022display_data\u0022,\u0022data\u0022:{\u0022text/html\u0022:[\u0022\u003Cstyle scoped\u003E\\n  .ansiout {\\n    display: block;\\n    unicode-bidi: embed;\\n    white-space: pre-wrap;\\n    word-wrap: break-word;\\n    word-break: break-all;\\n    font-family: \\\u0022Source Code Pro\\\u0022, \\\u0022Menlo\\\u0022, monospace;;\\n    font-size: 13px;\\n    color: #555;\\n    margin-left: 4px;\\n    line-height: 19px;\\n  }\\n\u003C/style\u003E\\n\u003Cdiv class=\\\u0022ansiout\\\u0022\u003E\u003C/div\u003E\u0022]},\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Boutput\u0022:{\u0022datasetInfos\u0022:[],\u0022data\u0022:\u0022\u003Cdiv class=\\\u0022ansiout\\\u0022\u003E\u003C/div\u003E\u0022,\u0022removedWidgets\u0022:[],\u0022addedWidgets\u0022:{},\u0022type\u0022:\u0022html\u0022,\u0022arguments\u0022:{}}}}],\u0022execution_count\u0022:0},{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Bcell\u0022:{\u0022title\u0022:\u0022\u0022,\u0022showTitle\u0022:false,\u0022inputWidgets\u0022:{},\u0022nuid\u0022:\u0022b5c38c38-a7f7-43f5-a15c-e387079ac8d7\u0022}},\u0022source\u0022:[\u0022\\n!pip install \\\u0022https://retaildatastore.blob.core.windows.net/artifacts/cdmsdk/commondatamodel-objectmodel-1.0.10-py3-none-any.whl?sp=r\u0026st=2021-02-11T11:46:58Z\u0026se=2022-02-11T19:46:58Z\u0026spr=https\u0026sv=2020-02-10\u0026sr=b\u0026sig=XXXXXXXXXXXXXXXXXXXXXXXX\\\u0022\\n\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[{\u0022output_type\u0022:\u0022display_data\u0022,\u0022data\u0022:{\u0022text/html\u0022:[\u0022\u003Cstyle scoped\u003E\\n  .ansiout {\\n    display: block;\\n    unicode-bidi: embed;\\n    white-space: pre-wrap;\\n    word-wrap: break-word;\\n    word-break: break-all;\\n    font-family: \\\u0022Source Code Pro\\\u0022, \\\u0022Menlo\\\u0022, monospace;;\\n    font-size: 13px;\\n    color: #555;\\n    margin-left: 4px;\\n    line-height: 19px;\\n  }\\n\u003C/style\u003E\\n\u003Cdiv class=\\\u0022ansiout\\\u0022\u003E\u003C/div\u003E\u0022]},\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Boutput\u0022:{\u0022datasetInfos\u0022:[],\u0022data\u0022:\u0022\u003Cdiv class=\\\u0022ansiout\\\u0022\u003E\u003C/div\u003E\u0022,\u0022removedWidgets\u0022:[],\u0022addedWidgets\u0022:{},\u0022type\u0022:\u0022html\u0022,\u0022arguments\u0022:{}}}}],\u0022execution_count\u0022:0},{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Bcell\u0022:{\u0022title\u0022:\u0022\u0022,\u0022showTitle\u0022:false,\u0022inputWidgets\u0022:{},\u0022nuid\u0022:\u0022b255d876-363a-446e-a0fa-e51f866efa77\u0022}},\u0022source\u0022:[\u0022\\n\\n# Generic imports\\nimport dotenv\\nimport json\\nimport numpy as np\\nimport os\\nimport fnmatch\\nimport shutil\\nimport random\\nimport string\\nimport pandas as pd\\nimport requests\\nimport asyncio\\nimport copy\\nimport functools\\nimport pathlib\\nimport string\\nfrom datetime import datetime, timezone\\n\\n# Spark imports\\nfrom pyspark.sql import SparkSession, SQLContext\\nfrom pyspark.sql.types import *\\nfrom pyspark.sql import functions as F\\n\\n# Recommenders imports\\n# from azureiai.reco_utils.dataset.spark_splitters import spark_random_split\\n# from azureiai.reco_utils.evaluation.spark_evaluation import (\\n#     SparkRankingEvaluation,\\n#     SparkRatingEvaluation,\\n# )\\nfrom pysarplus import SARPlus\\nfrom azureiai.retail.cdm2ai.reader import CONFIG\\n\\n# AzureML imports\\nimport azureml.core\\nfrom azureml.core.runconfig import JarLibrary\\nfrom azureml.core.compute import ComputeTarget, DatabricksCompute\\nfrom azureml.pipeline.steps import DatabricksStep\\nfrom azureml.core.datastore import Datastore\\nfrom azureml.data.data_reference import DataReference\\nfrom azureml.core import Workspace\\nfrom azureml.core.run import Run\\nfrom azureml.core.experiment import Experiment\\nfrom azureml.core import Environment\\nfrom azureml.core.environment import CondaDependencies\\nfrom azureml.core.environment import SparkPackage\\nfrom azureml.core.model import Model\\nfrom azureml.core.webservice import Webservice\\n\\n# Cosmos DB imports\\n# Install Cosmos DB connector from: https://docs.databricks.com/data/data-sources/azure/cosmosdb-connector.html\\nfrom azure.common.client_factory import get_client_from_json_dict\\n\\n# CDM imports\\nfrom cdm.storage import ADLSAdapter\\nfrom cdm.objectmodel import CdmCorpusDefinition, CdmManifestDefinition\\nfrom cdm.persistence.cdmfolder import ManifestPersistence\\nfrom cdm.persistence.cdmfolder.types import ManifestContent\\nfrom cdm.storage import LocalAdapter, ADLSAdapter\\nfrom cdm.utilities import time_utils\\n\\nfrom cdm.utilities.string_utils import kvprint\\n\\n# AKS imports\\nfrom azureml.core.compute import AksCompute\\nfrom azureml.core.compute_target import ComputeTargetException\\nfrom azureml.core.webservice import AksWebservice\\nfrom azureml.exceptions import WebserviceException\\nfrom azureml.core.model import InferenceConfig\\n\\n\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[{\u0022output_type\u0022:\u0022display_data\u0022,\u0022data\u0022:{\u0022text/html\u0022:[\u0022\u003Cstyle scoped\u003E\\n  .ansiout {\\n    display: block;\\n    unicode-bidi: embed;\\n    white-space: pre-wrap;\\n    word-wrap: break-word;\\n    word-break: break-all;\\n    font-family: \\\u0022Source Code Pro\\\u0022, \\\u0022Menlo\\\u0022, monospace;;\\n    font-size: 13px;\\n    color: #555;\\n    margin-left: 4px;\\n    line-height: 19px;\\n  }\\n\u003C/style\u003E\\n\u003Cdiv class=\\\u0022ansiout\\\u0022\u003E\u003C/div\u003E\u0022]},\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Boutput\u0022:{\u0022datasetInfos\u0022:[],\u0022data\u0022:\u0022\u003Cdiv class=\\\u0022ansiout\\\u0022\u003E\u003C/div\u003E\u0022,\u0022removedWidgets\u0022:[],\u0022addedWidgets\u0022:{},\u0022type\u0022:\u0022html\u0022,\u0022arguments\u0022:{}}}}],\u0022execution_count\u0022:0},{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Bcell\u0022:{\u0022title\u0022:\u0022\u0022,\u0022showTitle\u0022:false,\u0022inputWidgets\u0022:{},\u0022nuid\u0022:\u0022bb6041f1-a825-41ae-ba4d-de6dff6e361a\u0022}},\u0022source\u0022:[\u0022# Global variables\\n# NOTE these variables are visible in the scope of the entire pipeline\\n\\n# Load the .env file to manage persistent variables\\n_GLOBAL_DOTENV_PATH = pathlib.Path(dotenv.find_dotenv(\\n    filename=\\\u0022/dbfs/FileStore/.env\\\u0022,\\n    raise_error_if_not_found=True\\n))\\n\\n# -------------------------------------------------------------------------\\n# Azure general variables\\n# -------------------------------------------------------------------------\\n_GLOBAL_SUBSCRIPTION_ID = dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022subscription_id\\\u0022)\\n_GLOBAL_RESOURCE_GROUP = dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022resource_group\\\u0022)\\n_GLOBAL_CONFIG_DICT = {\\n    \\\u0022clientIdKey\\\u0022: \\\u0022sp_client_id\\\u0022,\\n    \\\u0022clientSecretKey\\\u0022: \\\u0022sp_password\\\u0022,\\n    \\\u0022clientId\\\u0022: dbutils.secrets.get(scope=\\\u0022secrets\\\u0022, key=\\\u0022sp_client_id\\\u0022),\\n    \\\u0022clientSecret\\\u0022: dbutils.secrets.get(scope=\\\u0022secrets\\\u0022, key=\\\u0022sp_password\\\u0022),\\n    \\\u0022subscriptionId\\\u0022: _GLOBAL_SUBSCRIPTION_ID,\\n    \\\u0022tenantId\\\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022tenant_id\\\u0022),\\n    \\\u0022activeDirectoryEndpointUrl\\\u0022: \\\u0022https://login.microsoftonline.com\\\u0022,\\n    \\\u0022resourceManagerEndpointUrl\\\u0022: \\\u0022https://management.azure.com/\\\u0022,\\n    \\\u0022activeDirectoryGraphResourceId\\\u0022: \\\u0022https://graph.windows.net/\\\u0022,\\n    \\\u0022sqlManagementEndpointUrl\\\u0022: \\\u0022https://management.core.windows.net:8443/\\\u0022,\\n    \\\u0022galleryEndpointUrl\\\u0022: \\\u0022https://gallery.azure.com/\\\u0022,\\n    \\\u0022managementEndpointUrl\\\u0022: \\\u0022https://management.core.windows.net/\\\u0022\\n}\\n\\n# -------------------------------------------------------------------------\\n# ADLS variables\\n# -------------------------------------------------------------------------\\n_GLOBAL_ADLS_ACCOUNT = dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022data_account\\\u0022)\\n_GLOBAL_ADLS_CONTAINER = dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022data_container\\\u0022)\\n_GLOBAL_ADLS_APPID = _GLOBAL_CONFIG_DICT[\\\u0022clientId\\\u0022]\\n_GLOBAL_ADLS_DIRID = _GLOBAL_CONFIG_DICT[\\\u0022tenantId\\\u0022]\\n_GLOBAL_ADLS_SECRET = _GLOBAL_CONFIG_DICT[\\\u0022clientSecret\\\u0022]\\n_GLOBAL_ADLS_HOSTNAME = f\u0027{_GLOBAL_ADLS_ACCOUNT}.dfs.core.windows.net\u0027\\n_GLOBAL_ADLS_DICT = {\\n    \\\u0022adls_source\\\u0022: \\\u0022abfss://{0}@{1}.dfs.core.windows.net\\\u0022.format(_GLOBAL_ADLS_CONTAINER, _GLOBAL_ADLS_ACCOUNT),\\n    \\\u0022oauth_endpoint\\\u0022: \\\u0022https://login.microsoftonline.com/{0}/oauth2/token\\\u0022.format(_GLOBAL_CONFIG_DICT[\\\u0022tenantId\\\u0022]),\\n    \\\u0022adls_dfs_endpoint\\\u0022: \\\u0022{0}.dfs.core.windows.net\\\u0022.format(_GLOBAL_ADLS_ACCOUNT),\\n    \\\u0022adls_container_mount_point\\\u0022: \\\u0022/mnt/{0}\\\u0022.format(_GLOBAL_ADLS_CONTAINER),\\n    \\\u0022adls_resource_type\\\u0022: \\\u0022https://storage.azure.com\\\u0022,\\n    \\\u0022adls_mount_root\\\u0022: \\\u0022/mnt\\\u0022,\\n    \\\u0022adls_model_cache\\\u0022: \\\u0022dbfs:/mnt/{0}/cache\\\u0022.format(_GLOBAL_ADLS_CONTAINER)\\n}\\n\\n# -------------------------------------------------------------------------\\n# COSMOS DB variables\\n# -------------------------------------------------------------------------\\n_GLOBAL_DB_SECRETS = {\\n    \\\u0022Endpoint\\\u0022: \\\u0022https://{0}.documents.azure.com:443/\\\u0022.format(dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022azure_cosmosdb_account_name\\\u0022)),\\n    \\\u0022Masterkey\\\u0022: dbutils.secrets.get(scope=\\\u0022secrets\\\u0022, key=\\\u0022cosmosdb_primary_master_key\\\u0022),\\n    \\\u0022Database\\\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022azure_cosmosdb_database\\\u0022),\\n    \\\u0022Collection\\\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022azure_cosmosdb_container\\\u0022),\\n    \\\u0022Upsert\\\u0022: True\\n}\\n\\n# -------------------------------------------------------------------------\\n# Data variables\\n# -------------------------------------------------------------------------\\n_GLOBAL_DATA_ROOT = dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022physical_data_model_directory\\\u0022)\\n_GLOBAL_TPC_RAW_ROOT = \u0027tpcds-raw-data\u0027\\n_GLOBAL_IDM_SCHEMA_ROOT = dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022logical_data_model_directory\\\u0022)\\n_GLOBAL_DATA_NAME = dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022data_name\\\u0022)\\n_GLOBAL_ADAPTER_PARTIAL = functools.partial(\\n    ADLSAdapter,\\n    hostname=_GLOBAL_ADLS_HOSTNAME,\\n    tenant=_GLOBAL_ADLS_DIRID,\\n    client_id=_GLOBAL_ADLS_APPID,\\n    secret=_GLOBAL_ADLS_SECRET\\n)\\n_GLOBAL_CONFIG_JSON = copy.deepcopy(CONFIG)\\n_GLOBAL_CONFIG_JSON[\\\u0022adls\\\u0022][\\\u0022account\\\u0022] = _GLOBAL_ADLS_ACCOUNT\\n_GLOBAL_CONFIG_JSON[\\\u0022adls\\\u0022][\\\u0022container\\\u0022] = _GLOBAL_ADLS_CONTAINER\\n_GLOBAL_CONFIG_JSON[\\\u0022adls\\\u0022][\\\u0022appid\\\u0022] = _GLOBAL_ADLS_APPID\\n_GLOBAL_CONFIG_JSON[\\\u0022adls\\\u0022][\\\u0022dirid\\\u0022] = _GLOBAL_ADLS_DIRID\\n_GLOBAL_CONFIG_JSON[\\\u0022adls\\\u0022][\\\u0022secret\\\u0022] = _GLOBAL_ADLS_SECRET\\n_GLOBAL_CONFIG_JSON[\\\u0022adls\\\u0022][\\\u0022hostname\\\u0022] = _GLOBAL_ADLS_HOSTNAME\\n_GLOBAL_CONFIG_JSON[\\\u0022cdm\\\u0022][\\\u0022data_root\\\u0022] = _GLOBAL_DATA_ROOT\\n_GLOBAL_CONFIG_JSON[\\\u0022cdm\\\u0022][\\\u0022manifest_name\\\u0022] = \\\u0022{0}.manifest.cdm.json\\\u0022.format(dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022industry_data_model_name\\\u0022))\\n_GLOBAL_INPUT_DATA_FILE = dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022processed_data_file\\\u0022)\\n_GLOBAL_CUSTOMER_DATA_FILE = dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022processed_customer_data_file\\\u0022)\\n\\n# -------------------------------------------------------------------------\\n# Model variables\\n# -------------------------------------------------------------------------\\n_GLOBAL_MODEL_LOCAL_CACHE = \u0027dbfs:/model/{0}\u0027.format(\\n    \u0027\u0027.join(random.choice(string.ascii_lowercase) for i in range(10))\\n)\\n\\n# -------------------------------------------------------------------------\\n# Azure Machine Learning service variables\\n# -------------------------------------------------------------------------\\n_GLOBAL_AML_DICT = {\\n    \\\u0022workspace_name\\\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022azureml_workspace\\\u0022),\\n    \\\u0022model_file_name\\\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022azureml_model_file_name\\\u0022),\\n    \\\u0022aml_experiment_name\\\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022azureml_experiment_name\\\u0022)\\n}\\n\\n# -------------------------------------------------------------------------\\n# Azure Kubernetes Service variables\\n# -------------------------------------------------------------------------\\n_GLOBAL_AKS_NAME = dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022aks_cluster_name\\\u0022)\\n_GLOBAL_SERVICE_NAME = \\\u0022aks-service-{0}\\\u0022.format(dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022unique_key\\\u0022))\\n_GLOBAL_AKS_CONFIG_LEVEL = dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022aks_config_level\\\u0022)\\n_GLOBAL_AKS_COMPUTE_TARGET_NAME = \u0027aks\u0027 \u002B dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022unique_key\\\u0022)\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[{\u0022output_type\u0022:\u0022display_data\u0022,\u0022data\u0022:{\u0022text/html\u0022:[\u0022\u003Cstyle scoped\u003E\\n  .ansiout {\\n    display: block;\\n    unicode-bidi: embed;\\n    white-space: pre-wrap;\\n    word-wrap: break-word;\\n    word-break: break-all;\\n    font-family: \\\u0022Source Code Pro\\\u0022, \\\u0022Menlo\\\u0022, monospace;;\\n    font-size: 13px;\\n    color: #555;\\n    margin-left: 4px;\\n    line-height: 19px;\\n  }\\n\u003C/style\u003E\\n\u003Cdiv class=\\\u0022ansiout\\\u0022\u003E\u003C/div\u003E\u0022]},\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Boutput\u0022:{\u0022datasetInfos\u0022:[],\u0022data\u0022:\u0022\u003Cdiv class=\\\u0022ansiout\\\u0022\u003E\u003C/div\u003E\u0022,\u0022removedWidgets\u0022:[],\u0022addedWidgets\u0022:{},\u0022type\u0022:\u0022html\u0022,\u0022arguments\u0022:{}}}},{\u0022output_type\u0022:\u0022display_data\u0022,\u0022data\u0022:{\u0022text/html\u0022:[\u0022\u003Cstyle scoped\u003E\\n  .ansiout {\\n    display: block;\\n    unicode-bidi: embed;\\n    white-space: pre-wrap;\\n    word-wrap: break-word;\\n    word-break: break-all;\\n    font-family: \\\u0022Source Code Pro\\\u0022, \\\u0022Menlo\\\u0022, monospace;;\\n    font-size: 13px;\\n    color: #555;\\n    margin-left: 4px;\\n    line-height: 19px;\\n  }\\n\u003C/style\u003E\\n\u003Cdiv class=\\\u0022ansiout\\\u0022\u003E\u003Cspan class=\\\u0022ansi-red-fg\\\u0022\u003E---------------------------------------------------------------------------\u003C/span\u003E\\n\u003Cspan class=\\\u0022ansi-red-fg\\\u0022\u003ENameError\u003C/span\u003E                                 Traceback (most recent call last)\\n\u003Cspan class=\\\u0022ansi-green-fg\\\u0022\u003E\u0026lt;command-1159393715563018\u0026gt;\u003C/span\u003E in \u003Cspan class=\\\u0022ansi-cyan-fg\\\u0022\u003E\u0026lt;module\u0026gt;\u003C/span\u003E\\n\u003Cspan class=\\\u0022ansi-green-intense-fg ansi-bold\\\u0022\u003E     66\u003C/span\u003E _GLOBAL_DATA_NAME \u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E=\u003C/span\u003E dotenv\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E.\u003C/span\u003Eget_key\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E(\u003C/span\u003E_GLOBAL_DOTENV_PATH\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E,\u003C/span\u003E \u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E\u0026#34;data_name\u0026#34;\u003C/span\u003E\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E)\u003C/span\u003E\\n\u003Cspan class=\\\u0022ansi-green-intense-fg ansi-bold\\\u0022\u003E     67\u003C/span\u003E _GLOBAL_ADAPTER_PARTIAL = functools.partial(\\n\u003Cspan class=\\\u0022ansi-green-fg\\\u0022\u003E---\u0026gt; 68\u003C/span\u003E\u003Cspan class=\\\u0022ansi-red-fg\\\u0022\u003E     \u003C/span\u003EADLSAdapter\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E,\u003C/span\u003E\\n\u003Cspan class=\\\u0022ansi-green-intense-fg ansi-bold\\\u0022\u003E     69\u003C/span\u003E     hostname\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E=\u003C/span\u003E_GLOBAL_ADLS_HOSTNAME\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E,\u003C/span\u003E\\n\u003Cspan class=\\\u0022ansi-green-intense-fg ansi-bold\\\u0022\u003E     70\u003C/span\u003E     tenant\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E=\u003C/span\u003E_GLOBAL_ADLS_DIRID\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E,\u003C/span\u003E\\n\\n\u003Cspan class=\\\u0022ansi-red-fg\\\u0022\u003ENameError\u003C/span\u003E: name \u0026#39;ADLSAdapter\u0026#39; is not defined\u003C/div\u003E\u0022]},\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Boutput\u0022:{\u0022type\u0022:\u0022ipynbError\u0022,\u0022data\u0022:\u0022\u003Cdiv class=\\\u0022ansiout\\\u0022\u003E\u003Cspan class=\\\u0022ansi-red-fg\\\u0022\u003E---------------------------------------------------------------------------\u003C/span\u003E\\n\u003Cspan class=\\\u0022ansi-red-fg\\\u0022\u003ENameError\u003C/span\u003E                                 Traceback (most recent call last)\\n\u003Cspan class=\\\u0022ansi-green-fg\\\u0022\u003E\u0026lt;command-1159393715563018\u0026gt;\u003C/span\u003E in \u003Cspan class=\\\u0022ansi-cyan-fg\\\u0022\u003E\u0026lt;module\u0026gt;\u003C/span\u003E\\n\u003Cspan class=\\\u0022ansi-green-intense-fg ansi-bold\\\u0022\u003E     66\u003C/span\u003E _GLOBAL_DATA_NAME \u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E=\u003C/span\u003E dotenv\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E.\u003C/span\u003Eget_key\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E(\u003C/span\u003E_GLOBAL_DOTENV_PATH\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E,\u003C/span\u003E \u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E\u0026#34;data_name\u0026#34;\u003C/span\u003E\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E)\u003C/span\u003E\\n\u003Cspan class=\\\u0022ansi-green-intense-fg ansi-bold\\\u0022\u003E     67\u003C/span\u003E _GLOBAL_ADAPTER_PARTIAL = functools.partial(\\n\u003Cspan class=\\\u0022ansi-green-fg\\\u0022\u003E---\u0026gt; 68\u003C/span\u003E\u003Cspan class=\\\u0022ansi-red-fg\\\u0022\u003E     \u003C/span\u003EADLSAdapter\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E,\u003C/span\u003E\\n\u003Cspan class=\\\u0022ansi-green-intense-fg ansi-bold\\\u0022\u003E     69\u003C/span\u003E     hostname\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E=\u003C/span\u003E_GLOBAL_ADLS_HOSTNAME\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E,\u003C/span\u003E\\n\u003Cspan class=\\\u0022ansi-green-intense-fg ansi-bold\\\u0022\u003E     70\u003C/span\u003E     tenant\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E=\u003C/span\u003E_GLOBAL_ADLS_DIRID\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E,\u003C/span\u003E\\n\\n\u003Cspan class=\\\u0022ansi-red-fg\\\u0022\u003ENameError\u003C/span\u003E: name \u0026#39;ADLSAdapter\u0026#39; is not defined\u003C/div\u003E\u0022,\u0022errorSummary\u0022:\u0022\u003Cspan class=\\\u0022ansi-red-fg\\\u0022\u003ENameError\u003C/span\u003E: name \u0026#39;ADLSAdapter\u0026#39; is not defined\u0022,\u0022arguments\u0022:{}}}}],\u0022execution_count\u0022:0},{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Bcell\u0022:{\u0022title\u0022:\u0022\u0022,\u0022showTitle\u0022:false,\u0022inputWidgets\u0022:{},\u0022nuid\u0022:\u0022639595d4-4083-4f33-a7d4-15af60e7b3d6\u0022}},\u0022source\u0022:[\u0022# Spark initialization\\nSUBMIT_ARGS = \\\u0022--packages eisber:sarplus:0.2.6 pyspark-shell\\\u0022\\nos.environ[\\\u0022PYSPARK_SUBMIT_ARGS\\\u0022] = SUBMIT_ARGS\\n\\nspark = (\\n    SparkSession.builder.appName(\\\u0022sample\\\u0022)\\n    .master(\\\u0022local[*]\\\u0022)\\n    .config(\\\u0022memory\\\u0022, \\\u00221G\\\u0022)\\n    .config(\\\u0022spark.sql.shuffle.partitions\\\u0022, \\\u00221\\\u0022)\\n    .config(\\\u0022spark.sql.crossJoin.enabled\\\u0022, True)\\n    .config(\\\u0022spark.ui.enabled\\\u0022, False)\\n    .getOrCreate()\\n)\\n\\n# SqlContext helps with doing SQL like queries on spark DFs.\\nsqlContext = SQLContext(spark)\\n\\n# Configure the Spark session to avoid using mount\\nspark.conf.set(\\\u0022fs.azure.account.auth.type.{0}.dfs.core.windows.net\\\u0022.format(_GLOBAL_ADLS_ACCOUNT), \\\u0022OAuth\\\u0022)\\nspark.conf.set(\\n    \\\u0022fs.azure.account.oauth.provider.type.{0}.dfs.core.windows.net\\\u0022.format(_GLOBAL_ADLS_ACCOUNT),\\n    \\\u0022org.apache.hadoop.fs.azurebfs.oauth2.ClientCredsTokenProvider\\\u0022,\\n)\\nspark.conf.set(\\n    \\\u0022fs.azure.account.oauth2.client.id.{0}.dfs.core.windows.net\\\u0022.format(_GLOBAL_ADLS_ACCOUNT), _GLOBAL_ADLS_APPID\\n)\\nspark.conf.set(\\n    \\\u0022fs.azure.account.oauth2.client.secret.{0}.dfs.core.windows.net\\\u0022.format(_GLOBAL_ADLS_ACCOUNT), _GLOBAL_ADLS_SECRET\\n)\\nspark.conf.set(\\n    \\\u0022fs.azure.account.oauth2.client.endpoint.{0}.dfs.core.windows.net\\\u0022.format(_GLOBAL_ADLS_ACCOUNT),\\n    \\\u0022https://login.microsoftonline.com/{0}/oauth2/token\\\u0022.format(_GLOBAL_ADLS_DIRID),\\n)\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:0},{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Bcell\u0022:{\u0022title\u0022:\u0022\u0022,\u0022showTitle\u0022:false,\u0022inputWidgets\u0022:{},\u0022nuid\u0022:\u0022614662de-2288-451e-b238-b6190156aac4\u0022}},\u0022source\u0022:[\u0022# Mount the remove ADLS container on the local databricks\\n\\n# Unmount an existing mount point\\ntry:\\n    dbutils.fs.unmount(_GLOBAL_ADLS_DICT[\\\u0022adls_container_mount_point\\\u0022])\\nexcept Exception as ex:\\n    if \\\u0022Directory not mounted\\\u0022 not in str(ex):\\n        raise Exception(\\\u0022Error in unmounting\\\u0022)\\n\\n# Mount wit the provided configuration information\\nconfigs = {\\n    \\\u0022fs.azure.account.auth.type\\\u0022: \\\u0022OAuth\\\u0022,\\n    \\\u0022fs.azure.account.oauth.provider.type\\\u0022: \\\u0022org.apache.hadoop.fs.azurebfs.oauth2.ClientCredsTokenProvider\\\u0022,\\n    \\\u0022fs.azure.account.oauth2.client.id\\\u0022: _GLOBAL_CONFIG_DICT[\\\u0022clientId\\\u0022],\\n    \\\u0022fs.azure.account.oauth2.client.secret\\\u0022: _GLOBAL_CONFIG_DICT[\\\u0022clientSecret\\\u0022],\\n    \\\u0022fs.azure.account.oauth2.client.endpoint\\\u0022: _GLOBAL_ADLS_DICT[\\\u0022oauth_endpoint\\\u0022],\\n}\\ndbutils.fs.mount(\\n    source=_GLOBAL_ADLS_DICT[\\\u0022adls_source\\\u0022],\\n    mount_point=_GLOBAL_ADLS_DICT[\\\u0022adls_container_mount_point\\\u0022],\\n    extra_configs=configs,\\n)\\n\\n# List the contents in the mounted directory\\ndbutils.fs.ls(_GLOBAL_ADLS_DICT[\\\u0022adls_container_mount_point\\\u0022])\\n\\n# Make a new directory for model cache use\\ndbutils.fs.mkdirs(_GLOBAL_ADLS_DICT[\\\u0022adls_model_cache\\\u0022])\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:0}],\u0022folder\u0022:null}},{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/testclinb\u0022,\u0022name\u0022:\u0022testclinb\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022etag\u0022:\u00220900eeb9-0000-0100-0000-61408d200000\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:0,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:null,\u0022sessionProperties\u0022:{\u0022driverMemory\u0022:\u002228g\u0022,\u0022driverCores\u0022:4,\u0022executorMemory\u0022:\u002228g\u0022,\u0022executorCores\u0022:4,\u0022numExecutors\u0022:2,\u0022conf\u0022:{\u0022spark.dynamicAllocation.enabled\u0022:\u0022false\u0022,\u0022spark.dynamicAllocation.minExecutors\u0022:\u00222\u0022,\u0022spark.dynamicAllocation.maxExecutors\u0022:\u00222\u0022}},\u0022metadata\u0022:{\u0022language_info\u0022:{\u0022name\u0022:\u0022python\u0022},\u0022a365ComputeOptions\u0022:null,\u0022sessionKeepAliveTimeout\u0022:30,\u0022saveOutput\u0022:true,\u0022synapse_widget\u0022:{\u0022version\u0022:\u00220.1\u0022,\u0022state\u0022:{}},\u0022kernelspec\u0022:{\u0022name\u0022:\u0022synapse_pyspark\u0022,\u0022display_name\u0022:\u0022python\u0022}},\u0022cells\u0022:[{\u0022cell_type\u0022:\u0022markdown\u0022,\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Bcell\u0022:{\u0022title\u0022:\u0022\u0022,\u0022showTitle\u0022:false,\u0022inputWidgets\u0022:{},\u0022nuid\u0022:\u0022ec9689e6-a215-42cf-aa9f-85a38cca6362\u0022}},\u0022source\u0022:[\u0022Copyright (c) Microsoft Corporation. All rights reserved.\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:null},{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Bcell\u0022:{\u0022title\u0022:\u0022\u0022,\u0022showTitle\u0022:false,\u0022inputWidgets\u0022:{},\u0022nuid\u0022:\u00224eb23c41-ffd4-412f-a887-102462d4d316\u0022}},\u0022source\u0022:[\u0022# Disable the verbose log\\n\u0022,\u0022import logging\\n\u0022,\u0022logging.getLogger(\\\u0022py4j\\\u0022).setLevel(logging.ERROR)\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[{\u0022output_type\u0022:\u0022display_data\u0022,\u0022data\u0022:{\u0022text/html\u0022:\u0022\u003Cstyle scoped\u003E\\n  .ansiout {\\n    display: block;\\n    unicode-bidi: embed;\\n    white-space: pre-wrap;\\n    word-wrap: break-word;\\n    word-break: break-all;\\n    font-family: \\\u0022Source Code Pro\\\u0022, \\\u0022Menlo\\\u0022, monospace;;\\n    font-size: 13px;\\n    color: #555;\\n    margin-left: 4px;\\n    line-height: 19px;\\n  }\\n\u003C/style\u003E\\n\u003Cdiv class=\\\u0022ansiout\\\u0022\u003E\u003C/div\u003E\u0022},\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Boutput\u0022:{\u0022datasetInfos\u0022:[],\u0022data\u0022:\u0022\u003Cdiv class=\\\u0022ansiout\\\u0022\u003E\u003C/div\u003E\u0022,\u0022removedWidgets\u0022:[],\u0022addedWidgets\u0022:{},\u0022type\u0022:\u0022html\u0022,\u0022arguments\u0022:{}}}}],\u0022execution_count\u0022:0},{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Bcell\u0022:{\u0022title\u0022:\u0022\u0022,\u0022showTitle\u0022:false,\u0022inputWidgets\u0022:{},\u0022nuid\u0022:\u0022b5c38c38-a7f7-43f5-a15c-e387079ac8d7\u0022}},\u0022source\u0022:[\u0022\\n\u0022,\u0022!pip install \\\u0022https://retaildatastore.blob.core.windows.net/artifacts/cdmsdk/commondatamodel-objectmodel-1.0.10-py3-none-any.whl?sp=r\u0026st=2021-02-11T11:46:58Z\u0026se=2022-02-11T19:46:58Z\u0026spr=https\u0026sv=2020-02-10\u0026sr=b\u0026sig=XXXXXXXXXXXXXXXXXXXXXXXX\\\u0022\\n\u0022,\u0022\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[{\u0022output_type\u0022:\u0022display_data\u0022,\u0022data\u0022:{\u0022text/html\u0022:\u0022\u003Cstyle scoped\u003E\\n  .ansiout {\\n    display: block;\\n    unicode-bidi: embed;\\n    white-space: pre-wrap;\\n    word-wrap: break-word;\\n    word-break: break-all;\\n    font-family: \\\u0022Source Code Pro\\\u0022, \\\u0022Menlo\\\u0022, monospace;;\\n    font-size: 13px;\\n    color: #555;\\n    margin-left: 4px;\\n    line-height: 19px;\\n  }\\n\u003C/style\u003E\\n\u003Cdiv class=\\\u0022ansiout\\\u0022\u003E\u003C/div\u003E\u0022},\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Boutput\u0022:{\u0022datasetInfos\u0022:[],\u0022data\u0022:\u0022\u003Cdiv class=\\\u0022ansiout\\\u0022\u003E\u003C/div\u003E\u0022,\u0022removedWidgets\u0022:[],\u0022addedWidgets\u0022:{},\u0022type\u0022:\u0022html\u0022,\u0022arguments\u0022:{}}}}],\u0022execution_count\u0022:0},{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Bcell\u0022:{\u0022title\u0022:\u0022\u0022,\u0022showTitle\u0022:false,\u0022inputWidgets\u0022:{},\u0022nuid\u0022:\u0022b255d876-363a-446e-a0fa-e51f866efa77\u0022}},\u0022source\u0022:[\u0022\\n\u0022,\u0022\\n\u0022,\u0022# Generic imports\\n\u0022,\u0022import dotenv\\n\u0022,\u0022import json\\n\u0022,\u0022import numpy as np\\n\u0022,\u0022import os\\n\u0022,\u0022import fnmatch\\n\u0022,\u0022import shutil\\n\u0022,\u0022import random\\n\u0022,\u0022import string\\n\u0022,\u0022import pandas as pd\\n\u0022,\u0022import requests\\n\u0022,\u0022import asyncio\\n\u0022,\u0022import copy\\n\u0022,\u0022import functools\\n\u0022,\u0022import pathlib\\n\u0022,\u0022import string\\n\u0022,\u0022from datetime import datetime, timezone\\n\u0022,\u0022\\n\u0022,\u0022# Spark imports\\n\u0022,\u0022from pyspark.sql import SparkSession, SQLContext\\n\u0022,\u0022from pyspark.sql.types import *\\n\u0022,\u0022from pyspark.sql import functions as F\\n\u0022,\u0022\\n\u0022,\u0022# Recommenders imports\\n\u0022,\u0022# from azureiai.reco_utils.dataset.spark_splitters import spark_random_split\\n\u0022,\u0022# from azureiai.reco_utils.evaluation.spark_evaluation import (\\n\u0022,\u0022#     SparkRankingEvaluation,\\n\u0022,\u0022#     SparkRatingEvaluation,\\n\u0022,\u0022# )\\n\u0022,\u0022from pysarplus import SARPlus\\n\u0022,\u0022from azureiai.retail.cdm2ai.reader import CONFIG\\n\u0022,\u0022\\n\u0022,\u0022# AzureML imports\\n\u0022,\u0022import azureml.core\\n\u0022,\u0022from azureml.core.runconfig import JarLibrary\\n\u0022,\u0022from azureml.core.compute import ComputeTarget, DatabricksCompute\\n\u0022,\u0022from azureml.pipeline.steps import DatabricksStep\\n\u0022,\u0022from azureml.core.datastore import Datastore\\n\u0022,\u0022from azureml.data.data_reference import DataReference\\n\u0022,\u0022from azureml.core import Workspace\\n\u0022,\u0022from azureml.core.run import Run\\n\u0022,\u0022from azureml.core.experiment import Experiment\\n\u0022,\u0022from azureml.core import Environment\\n\u0022,\u0022from azureml.core.environment import CondaDependencies\\n\u0022,\u0022from azureml.core.environment import SparkPackage\\n\u0022,\u0022from azureml.core.model import Model\\n\u0022,\u0022from azureml.core.webservice import Webservice\\n\u0022,\u0022\\n\u0022,\u0022# Cosmos DB imports\\n\u0022,\u0022# Install Cosmos DB connector from: https://docs.databricks.com/data/data-sources/azure/cosmosdb-connector.html\\n\u0022,\u0022from azure.common.client_factory import get_client_from_json_dict\\n\u0022,\u0022\\n\u0022,\u0022# CDM imports\\n\u0022,\u0022from cdm.storage import ADLSAdapter\\n\u0022,\u0022from cdm.objectmodel import CdmCorpusDefinition, CdmManifestDefinition\\n\u0022,\u0022from cdm.persistence.cdmfolder import ManifestPersistence\\n\u0022,\u0022from cdm.persistence.cdmfolder.types import ManifestContent\\n\u0022,\u0022from cdm.storage import LocalAdapter, ADLSAdapter\\n\u0022,\u0022from cdm.utilities import time_utils\\n\u0022,\u0022\\n\u0022,\u0022from cdm.utilities.string_utils import kvprint\\n\u0022,\u0022\\n\u0022,\u0022# AKS imports\\n\u0022,\u0022from azureml.core.compute import AksCompute\\n\u0022,\u0022from azureml.core.compute_target import ComputeTargetException\\n\u0022,\u0022from azureml.core.webservice import AksWebservice\\n\u0022,\u0022from azureml.exceptions import WebserviceException\\n\u0022,\u0022from azureml.core.model import InferenceConfig\\n\u0022,\u0022\\n\u0022,\u0022\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[{\u0022output_type\u0022:\u0022display_data\u0022,\u0022data\u0022:{\u0022text/html\u0022:\u0022\u003Cstyle scoped\u003E\\n  .ansiout {\\n    display: block;\\n    unicode-bidi: embed;\\n    white-space: pre-wrap;\\n    word-wrap: break-word;\\n    word-break: break-all;\\n    font-family: \\\u0022Source Code Pro\\\u0022, \\\u0022Menlo\\\u0022, monospace;;\\n    font-size: 13px;\\n    color: #555;\\n    margin-left: 4px;\\n    line-height: 19px;\\n  }\\n\u003C/style\u003E\\n\u003Cdiv class=\\\u0022ansiout\\\u0022\u003E\u003C/div\u003E\u0022},\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Boutput\u0022:{\u0022datasetInfos\u0022:[],\u0022data\u0022:\u0022\u003Cdiv class=\\\u0022ansiout\\\u0022\u003E\u003C/div\u003E\u0022,\u0022removedWidgets\u0022:[],\u0022addedWidgets\u0022:{},\u0022type\u0022:\u0022html\u0022,\u0022arguments\u0022:{}}}}],\u0022execution_count\u0022:0},{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Bcell\u0022:{\u0022title\u0022:\u0022\u0022,\u0022showTitle\u0022:false,\u0022inputWidgets\u0022:{},\u0022nuid\u0022:\u0022bb6041f1-a825-41ae-ba4d-de6dff6e361a\u0022}},\u0022source\u0022:[\u0022# Global variables\\n\u0022,\u0022# NOTE these variables are visible in the scope of the entire pipeline\\n\u0022,\u0022\\n\u0022,\u0022# Load the .env file to manage persistent variables\\n\u0022,\u0022_GLOBAL_DOTENV_PATH = pathlib.Path(dotenv.find_dotenv(\\n\u0022,\u0022    filename=\\\u0022/dbfs/FileStore/.env\\\u0022,\\n\u0022,\u0022    raise_error_if_not_found=True\\n\u0022,\u0022))\\n\u0022,\u0022\\n\u0022,\u0022# -------------------------------------------------------------------------\\n\u0022,\u0022# Azure general variables\\n\u0022,\u0022# -------------------------------------------------------------------------\\n\u0022,\u0022_GLOBAL_SUBSCRIPTION_ID = dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022subscription_id\\\u0022)\\n\u0022,\u0022_GLOBAL_RESOURCE_GROUP = dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022resource_group\\\u0022)\\n\u0022,\u0022_GLOBAL_CONFIG_DICT = {\\n\u0022,\u0022    \\\u0022clientIdKey\\\u0022: \\\u0022sp_client_id\\\u0022,\\n\u0022,\u0022    \\\u0022clientSecretKey\\\u0022: \\\u0022sp_password\\\u0022,\\n\u0022,\u0022    \\\u0022clientId\\\u0022: dbutils.secrets.get(scope=\\\u0022secrets\\\u0022, key=\\\u0022sp_client_id\\\u0022),\\n\u0022,\u0022    \\\u0022clientSecret\\\u0022: dbutils.secrets.get(scope=\\\u0022secrets\\\u0022, key=\\\u0022sp_password\\\u0022),\\n\u0022,\u0022    \\\u0022subscriptionId\\\u0022: _GLOBAL_SUBSCRIPTION_ID,\\n\u0022,\u0022    \\\u0022tenantId\\\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022tenant_id\\\u0022),\\n\u0022,\u0022    \\\u0022activeDirectoryEndpointUrl\\\u0022: \\\u0022https://login.microsoftonline.com\\\u0022,\\n\u0022,\u0022    \\\u0022resourceManagerEndpointUrl\\\u0022: \\\u0022https://management.azure.com/\\\u0022,\\n\u0022,\u0022    \\\u0022activeDirectoryGraphResourceId\\\u0022: \\\u0022https://graph.windows.net/\\\u0022,\\n\u0022,\u0022    \\\u0022sqlManagementEndpointUrl\\\u0022: \\\u0022https://management.core.windows.net:8443/\\\u0022,\\n\u0022,\u0022    \\\u0022galleryEndpointUrl\\\u0022: \\\u0022https://gallery.azure.com/\\\u0022,\\n\u0022,\u0022    \\\u0022managementEndpointUrl\\\u0022: \\\u0022https://management.core.windows.net/\\\u0022\\n\u0022,\u0022}\\n\u0022,\u0022\\n\u0022,\u0022# -------------------------------------------------------------------------\\n\u0022,\u0022# ADLS variables\\n\u0022,\u0022# -------------------------------------------------------------------------\\n\u0022,\u0022_GLOBAL_ADLS_ACCOUNT = dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022data_account\\\u0022)\\n\u0022,\u0022_GLOBAL_ADLS_CONTAINER = dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022data_container\\\u0022)\\n\u0022,\u0022_GLOBAL_ADLS_APPID = _GLOBAL_CONFIG_DICT[\\\u0022clientId\\\u0022]\\n\u0022,\u0022_GLOBAL_ADLS_DIRID = _GLOBAL_CONFIG_DICT[\\\u0022tenantId\\\u0022]\\n\u0022,\u0022_GLOBAL_ADLS_SECRET = _GLOBAL_CONFIG_DICT[\\\u0022clientSecret\\\u0022]\\n\u0022,\u0022_GLOBAL_ADLS_HOSTNAME = f\u0027{_GLOBAL_ADLS_ACCOUNT}.dfs.core.windows.net\u0027\\n\u0022,\u0022_GLOBAL_ADLS_DICT = {\\n\u0022,\u0022    \\\u0022adls_source\\\u0022: \\\u0022abfss://{0}@{1}.dfs.core.windows.net\\\u0022.format(_GLOBAL_ADLS_CONTAINER, _GLOBAL_ADLS_ACCOUNT),\\n\u0022,\u0022    \\\u0022oauth_endpoint\\\u0022: \\\u0022https://login.microsoftonline.com/{0}/oauth2/token\\\u0022.format(_GLOBAL_CONFIG_DICT[\\\u0022tenantId\\\u0022]),\\n\u0022,\u0022    \\\u0022adls_dfs_endpoint\\\u0022: \\\u0022{0}.dfs.core.windows.net\\\u0022.format(_GLOBAL_ADLS_ACCOUNT),\\n\u0022,\u0022    \\\u0022adls_container_mount_point\\\u0022: \\\u0022/mnt/{0}\\\u0022.format(_GLOBAL_ADLS_CONTAINER),\\n\u0022,\u0022    \\\u0022adls_resource_type\\\u0022: \\\u0022https://storage.azure.com\\\u0022,\\n\u0022,\u0022    \\\u0022adls_mount_root\\\u0022: \\\u0022/mnt\\\u0022,\\n\u0022,\u0022    \\\u0022adls_model_cache\\\u0022: \\\u0022dbfs:/mnt/{0}/cache\\\u0022.format(_GLOBAL_ADLS_CONTAINER)\\n\u0022,\u0022}\\n\u0022,\u0022\\n\u0022,\u0022# -------------------------------------------------------------------------\\n\u0022,\u0022# COSMOS DB variables\\n\u0022,\u0022# -------------------------------------------------------------------------\\n\u0022,\u0022_GLOBAL_DB_SECRETS = {\\n\u0022,\u0022    \\\u0022Endpoint\\\u0022: \\\u0022https://{0}.documents.azure.com:443/\\\u0022.format(dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022azure_cosmosdb_account_name\\\u0022)),\\n\u0022,\u0022    \\\u0022Masterkey\\\u0022: dbutils.secrets.get(scope=\\\u0022secrets\\\u0022, key=\\\u0022cosmosdb_primary_master_key\\\u0022),\\n\u0022,\u0022    \\\u0022Database\\\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022azure_cosmosdb_database\\\u0022),\\n\u0022,\u0022    \\\u0022Collection\\\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022azure_cosmosdb_container\\\u0022),\\n\u0022,\u0022    \\\u0022Upsert\\\u0022: True\\n\u0022,\u0022}\\n\u0022,\u0022\\n\u0022,\u0022# -------------------------------------------------------------------------\\n\u0022,\u0022# Data variables\\n\u0022,\u0022# -------------------------------------------------------------------------\\n\u0022,\u0022_GLOBAL_DATA_ROOT = dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022physical_data_model_directory\\\u0022)\\n\u0022,\u0022_GLOBAL_TPC_RAW_ROOT = \u0027tpcds-raw-data\u0027\\n\u0022,\u0022_GLOBAL_IDM_SCHEMA_ROOT = dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022logical_data_model_directory\\\u0022)\\n\u0022,\u0022_GLOBAL_DATA_NAME = dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022data_name\\\u0022)\\n\u0022,\u0022_GLOBAL_ADAPTER_PARTIAL = functools.partial(\\n\u0022,\u0022    ADLSAdapter,\\n\u0022,\u0022    hostname=_GLOBAL_ADLS_HOSTNAME,\\n\u0022,\u0022    tenant=_GLOBAL_ADLS_DIRID,\\n\u0022,\u0022    client_id=_GLOBAL_ADLS_APPID,\\n\u0022,\u0022    secret=_GLOBAL_ADLS_SECRET\\n\u0022,\u0022)\\n\u0022,\u0022_GLOBAL_CONFIG_JSON = copy.deepcopy(CONFIG)\\n\u0022,\u0022_GLOBAL_CONFIG_JSON[\\\u0022adls\\\u0022][\\\u0022account\\\u0022] = _GLOBAL_ADLS_ACCOUNT\\n\u0022,\u0022_GLOBAL_CONFIG_JSON[\\\u0022adls\\\u0022][\\\u0022container\\\u0022] = _GLOBAL_ADLS_CONTAINER\\n\u0022,\u0022_GLOBAL_CONFIG_JSON[\\\u0022adls\\\u0022][\\\u0022appid\\\u0022] = _GLOBAL_ADLS_APPID\\n\u0022,\u0022_GLOBAL_CONFIG_JSON[\\\u0022adls\\\u0022][\\\u0022dirid\\\u0022] = _GLOBAL_ADLS_DIRID\\n\u0022,\u0022_GLOBAL_CONFIG_JSON[\\\u0022adls\\\u0022][\\\u0022secret\\\u0022] = _GLOBAL_ADLS_SECRET\\n\u0022,\u0022_GLOBAL_CONFIG_JSON[\\\u0022adls\\\u0022][\\\u0022hostname\\\u0022] = _GLOBAL_ADLS_HOSTNAME\\n\u0022,\u0022_GLOBAL_CONFIG_JSON[\\\u0022cdm\\\u0022][\\\u0022data_root\\\u0022] = _GLOBAL_DATA_ROOT\\n\u0022,\u0022_GLOBAL_CONFIG_JSON[\\\u0022cdm\\\u0022][\\\u0022manifest_name\\\u0022] = \\\u0022{0}.manifest.cdm.json\\\u0022.format(dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022industry_data_model_name\\\u0022))\\n\u0022,\u0022_GLOBAL_INPUT_DATA_FILE = dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022processed_data_file\\\u0022)\\n\u0022,\u0022_GLOBAL_CUSTOMER_DATA_FILE = dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022processed_customer_data_file\\\u0022)\\n\u0022,\u0022\\n\u0022,\u0022# -------------------------------------------------------------------------\\n\u0022,\u0022# Model variables\\n\u0022,\u0022# -------------------------------------------------------------------------\\n\u0022,\u0022_GLOBAL_MODEL_LOCAL_CACHE = \u0027dbfs:/model/{0}\u0027.format(\\n\u0022,\u0022    \u0027\u0027.join(random.choice(string.ascii_lowercase) for i in range(10))\\n\u0022,\u0022)\\n\u0022,\u0022\\n\u0022,\u0022# -------------------------------------------------------------------------\\n\u0022,\u0022# Azure Machine Learning service variables\\n\u0022,\u0022# -------------------------------------------------------------------------\\n\u0022,\u0022_GLOBAL_AML_DICT = {\\n\u0022,\u0022    \\\u0022workspace_name\\\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022azureml_workspace\\\u0022),\\n\u0022,\u0022    \\\u0022model_file_name\\\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022azureml_model_file_name\\\u0022),\\n\u0022,\u0022    \\\u0022aml_experiment_name\\\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022azureml_experiment_name\\\u0022)\\n\u0022,\u0022}\\n\u0022,\u0022\\n\u0022,\u0022# -------------------------------------------------------------------------\\n\u0022,\u0022# Azure Kubernetes Service variables\\n\u0022,\u0022# -------------------------------------------------------------------------\\n\u0022,\u0022_GLOBAL_AKS_NAME = dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022aks_cluster_name\\\u0022)\\n\u0022,\u0022_GLOBAL_SERVICE_NAME = \\\u0022aks-service-{0}\\\u0022.format(dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022unique_key\\\u0022))\\n\u0022,\u0022_GLOBAL_AKS_CONFIG_LEVEL = dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022aks_config_level\\\u0022)\\n\u0022,\u0022_GLOBAL_AKS_COMPUTE_TARGET_NAME = \u0027aks\u0027 \u002B dotenv.get_key(_GLOBAL_DOTENV_PATH, \\\u0022unique_key\\\u0022)\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[{\u0022output_type\u0022:\u0022display_data\u0022,\u0022data\u0022:{\u0022text/html\u0022:\u0022\u003Cstyle scoped\u003E\\n  .ansiout {\\n    display: block;\\n    unicode-bidi: embed;\\n    white-space: pre-wrap;\\n    word-wrap: break-word;\\n    word-break: break-all;\\n    font-family: \\\u0022Source Code Pro\\\u0022, \\\u0022Menlo\\\u0022, monospace;;\\n    font-size: 13px;\\n    color: #555;\\n    margin-left: 4px;\\n    line-height: 19px;\\n  }\\n\u003C/style\u003E\\n\u003Cdiv class=\\\u0022ansiout\\\u0022\u003E\u003C/div\u003E\u0022},\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Boutput\u0022:{\u0022datasetInfos\u0022:[],\u0022data\u0022:\u0022\u003Cdiv class=\\\u0022ansiout\\\u0022\u003E\u003C/div\u003E\u0022,\u0022removedWidgets\u0022:[],\u0022addedWidgets\u0022:{},\u0022type\u0022:\u0022html\u0022,\u0022arguments\u0022:{}}}},{\u0022output_type\u0022:\u0022display_data\u0022,\u0022data\u0022:{\u0022text/html\u0022:\u0022\u003Cstyle scoped\u003E\\n  .ansiout {\\n    display: block;\\n    unicode-bidi: embed;\\n    white-space: pre-wrap;\\n    word-wrap: break-word;\\n    word-break: break-all;\\n    font-family: \\\u0022Source Code Pro\\\u0022, \\\u0022Menlo\\\u0022, monospace;;\\n    font-size: 13px;\\n    color: #555;\\n    margin-left: 4px;\\n    line-height: 19px;\\n  }\\n\u003C/style\u003E\\n\u003Cdiv class=\\\u0022ansiout\\\u0022\u003E\u003Cspan class=\\\u0022ansi-red-fg\\\u0022\u003E---------------------------------------------------------------------------\u003C/span\u003E\\n\u003Cspan class=\\\u0022ansi-red-fg\\\u0022\u003ENameError\u003C/span\u003E                                 Traceback (most recent call last)\\n\u003Cspan class=\\\u0022ansi-green-fg\\\u0022\u003E\u0026lt;command-1159393715563018\u0026gt;\u003C/span\u003E in \u003Cspan class=\\\u0022ansi-cyan-fg\\\u0022\u003E\u0026lt;module\u0026gt;\u003C/span\u003E\\n\u003Cspan class=\\\u0022ansi-green-intense-fg ansi-bold\\\u0022\u003E     66\u003C/span\u003E _GLOBAL_DATA_NAME \u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E=\u003C/span\u003E dotenv\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E.\u003C/span\u003Eget_key\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E(\u003C/span\u003E_GLOBAL_DOTENV_PATH\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E,\u003C/span\u003E \u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E\u0026#34;data_name\u0026#34;\u003C/span\u003E\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E)\u003C/span\u003E\\n\u003Cspan class=\\\u0022ansi-green-intense-fg ansi-bold\\\u0022\u003E     67\u003C/span\u003E _GLOBAL_ADAPTER_PARTIAL = functools.partial(\\n\u003Cspan class=\\\u0022ansi-green-fg\\\u0022\u003E---\u0026gt; 68\u003C/span\u003E\u003Cspan class=\\\u0022ansi-red-fg\\\u0022\u003E     \u003C/span\u003EADLSAdapter\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E,\u003C/span\u003E\\n\u003Cspan class=\\\u0022ansi-green-intense-fg ansi-bold\\\u0022\u003E     69\u003C/span\u003E     hostname\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E=\u003C/span\u003E_GLOBAL_ADLS_HOSTNAME\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E,\u003C/span\u003E\\n\u003Cspan class=\\\u0022ansi-green-intense-fg ansi-bold\\\u0022\u003E     70\u003C/span\u003E     tenant\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E=\u003C/span\u003E_GLOBAL_ADLS_DIRID\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E,\u003C/span\u003E\\n\\n\u003Cspan class=\\\u0022ansi-red-fg\\\u0022\u003ENameError\u003C/span\u003E: name \u0026#39;ADLSAdapter\u0026#39; is not defined\u003C/div\u003E\u0022},\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Boutput\u0022:{\u0022type\u0022:\u0022ipynbError\u0022,\u0022data\u0022:\u0022\u003Cdiv class=\\\u0022ansiout\\\u0022\u003E\u003Cspan class=\\\u0022ansi-red-fg\\\u0022\u003E---------------------------------------------------------------------------\u003C/span\u003E\\n\u003Cspan class=\\\u0022ansi-red-fg\\\u0022\u003ENameError\u003C/span\u003E                                 Traceback (most recent call last)\\n\u003Cspan class=\\\u0022ansi-green-fg\\\u0022\u003E\u0026lt;command-1159393715563018\u0026gt;\u003C/span\u003E in \u003Cspan class=\\\u0022ansi-cyan-fg\\\u0022\u003E\u0026lt;module\u0026gt;\u003C/span\u003E\\n\u003Cspan class=\\\u0022ansi-green-intense-fg ansi-bold\\\u0022\u003E     66\u003C/span\u003E _GLOBAL_DATA_NAME \u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E=\u003C/span\u003E dotenv\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E.\u003C/span\u003Eget_key\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E(\u003C/span\u003E_GLOBAL_DOTENV_PATH\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E,\u003C/span\u003E \u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E\u0026#34;data_name\u0026#34;\u003C/span\u003E\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E)\u003C/span\u003E\\n\u003Cspan class=\\\u0022ansi-green-intense-fg ansi-bold\\\u0022\u003E     67\u003C/span\u003E _GLOBAL_ADAPTER_PARTIAL = functools.partial(\\n\u003Cspan class=\\\u0022ansi-green-fg\\\u0022\u003E---\u0026gt; 68\u003C/span\u003E\u003Cspan class=\\\u0022ansi-red-fg\\\u0022\u003E     \u003C/span\u003EADLSAdapter\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E,\u003C/span\u003E\\n\u003Cspan class=\\\u0022ansi-green-intense-fg ansi-bold\\\u0022\u003E     69\u003C/span\u003E     hostname\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E=\u003C/span\u003E_GLOBAL_ADLS_HOSTNAME\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E,\u003C/span\u003E\\n\u003Cspan class=\\\u0022ansi-green-intense-fg ansi-bold\\\u0022\u003E     70\u003C/span\u003E     tenant\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E=\u003C/span\u003E_GLOBAL_ADLS_DIRID\u003Cspan class=\\\u0022ansi-blue-fg\\\u0022\u003E,\u003C/span\u003E\\n\\n\u003Cspan class=\\\u0022ansi-red-fg\\\u0022\u003ENameError\u003C/span\u003E: name \u0026#39;ADLSAdapter\u0026#39; is not defined\u003C/div\u003E\u0022,\u0022errorSummary\u0022:\u0022\u003Cspan class=\\\u0022ansi-red-fg\\\u0022\u003ENameError\u003C/span\u003E: name \u0026#39;ADLSAdapter\u0026#39; is not defined\u0022,\u0022arguments\u0022:{}}}}],\u0022execution_count\u0022:0},{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Bcell\u0022:{\u0022title\u0022:\u0022\u0022,\u0022showTitle\u0022:false,\u0022inputWidgets\u0022:{},\u0022nuid\u0022:\u0022639595d4-4083-4f33-a7d4-15af60e7b3d6\u0022}},\u0022source\u0022:[\u0022# Spark initialization\\n\u0022,\u0022SUBMIT_ARGS = \\\u0022--packages eisber:sarplus:0.2.6 pyspark-shell\\\u0022\\n\u0022,\u0022os.environ[\\\u0022PYSPARK_SUBMIT_ARGS\\\u0022] = SUBMIT_ARGS\\n\u0022,\u0022\\n\u0022,\u0022spark = (\\n\u0022,\u0022    SparkSession.builder.appName(\\\u0022sample\\\u0022)\\n\u0022,\u0022    .master(\\\u0022local[*]\\\u0022)\\n\u0022,\u0022    .config(\\\u0022memory\\\u0022, \\\u00221G\\\u0022)\\n\u0022,\u0022    .config(\\\u0022spark.sql.shuffle.partitions\\\u0022, \\\u00221\\\u0022)\\n\u0022,\u0022    .config(\\\u0022spark.sql.crossJoin.enabled\\\u0022, True)\\n\u0022,\u0022    .config(\\\u0022spark.ui.enabled\\\u0022, False)\\n\u0022,\u0022    .getOrCreate()\\n\u0022,\u0022)\\n\u0022,\u0022\\n\u0022,\u0022# SqlContext helps with doing SQL like queries on spark DFs.\\n\u0022,\u0022sqlContext = SQLContext(spark)\\n\u0022,\u0022\\n\u0022,\u0022# Configure the Spark session to avoid using mount\\n\u0022,\u0022spark.conf.set(\\\u0022fs.azure.account.auth.type.{0}.dfs.core.windows.net\\\u0022.format(_GLOBAL_ADLS_ACCOUNT), \\\u0022OAuth\\\u0022)\\n\u0022,\u0022spark.conf.set(\\n\u0022,\u0022    \\\u0022fs.azure.account.oauth.provider.type.{0}.dfs.core.windows.net\\\u0022.format(_GLOBAL_ADLS_ACCOUNT),\\n\u0022,\u0022    \\\u0022org.apache.hadoop.fs.azurebfs.oauth2.ClientCredsTokenProvider\\\u0022,\\n\u0022,\u0022)\\n\u0022,\u0022spark.conf.set(\\n\u0022,\u0022    \\\u0022fs.azure.account.oauth2.client.id.{0}.dfs.core.windows.net\\\u0022.format(_GLOBAL_ADLS_ACCOUNT), _GLOBAL_ADLS_APPID\\n\u0022,\u0022)\\n\u0022,\u0022spark.conf.set(\\n\u0022,\u0022    \\\u0022fs.azure.account.oauth2.client.secret.{0}.dfs.core.windows.net\\\u0022.format(_GLOBAL_ADLS_ACCOUNT), _GLOBAL_ADLS_SECRET\\n\u0022,\u0022)\\n\u0022,\u0022spark.conf.set(\\n\u0022,\u0022    \\\u0022fs.azure.account.oauth2.client.endpoint.{0}.dfs.core.windows.net\\\u0022.format(_GLOBAL_ADLS_ACCOUNT),\\n\u0022,\u0022    \\\u0022https://login.microsoftonline.com/{0}/oauth2/token\\\u0022.format(_GLOBAL_ADLS_DIRID),\\n\u0022,\u0022)\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:0},{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{\u0022application/vnd.databricks.v1\u002Bcell\u0022:{\u0022title\u0022:\u0022\u0022,\u0022showTitle\u0022:false,\u0022inputWidgets\u0022:{},\u0022nuid\u0022:\u0022614662de-2288-451e-b238-b6190156aac4\u0022}},\u0022source\u0022:[\u0022# Mount the remove ADLS container on the local databricks\\n\u0022,\u0022\\n\u0022,\u0022# Unmount an existing mount point\\n\u0022,\u0022try:\\n\u0022,\u0022    dbutils.fs.unmount(_GLOBAL_ADLS_DICT[\\\u0022adls_container_mount_point\\\u0022])\\n\u0022,\u0022except Exception as ex:\\n\u0022,\u0022    if \\\u0022Directory not mounted\\\u0022 not in str(ex):\\n\u0022,\u0022        raise Exception(\\\u0022Error in unmounting\\\u0022)\\n\u0022,\u0022\\n\u0022,\u0022# Mount wit the provided configuration information\\n\u0022,\u0022configs = {\\n\u0022,\u0022    \\\u0022fs.azure.account.auth.type\\\u0022: \\\u0022OAuth\\\u0022,\\n\u0022,\u0022    \\\u0022fs.azure.account.oauth.provider.type\\\u0022: \\\u0022org.apache.hadoop.fs.azurebfs.oauth2.ClientCredsTokenProvider\\\u0022,\\n\u0022,\u0022    \\\u0022fs.azure.account.oauth2.client.id\\\u0022: _GLOBAL_CONFIG_DICT[\\\u0022clientId\\\u0022],\\n\u0022,\u0022    \\\u0022fs.azure.account.oauth2.client.secret\\\u0022: _GLOBAL_CONFIG_DICT[\\\u0022clientSecret\\\u0022],\\n\u0022,\u0022    \\\u0022fs.azure.account.oauth2.client.endpoint\\\u0022: _GLOBAL_ADLS_DICT[\\\u0022oauth_endpoint\\\u0022],\\n\u0022,\u0022}\\n\u0022,\u0022dbutils.fs.mount(\\n\u0022,\u0022    source=_GLOBAL_ADLS_DICT[\\\u0022adls_source\\\u0022],\\n\u0022,\u0022    mount_point=_GLOBAL_ADLS_DICT[\\\u0022adls_container_mount_point\\\u0022],\\n\u0022,\u0022    extra_configs=configs,\\n\u0022,\u0022)\\n\u0022,\u0022\\n\u0022,\u0022# List the contents in the mounted directory\\n\u0022,\u0022dbutils.fs.ls(_GLOBAL_ADLS_DICT[\\\u0022adls_container_mount_point\\\u0022])\\n\u0022,\u0022\\n\u0022,\u0022# Make a new directory for model cache use\\n\u0022,\u0022dbutils.fs.mkdirs(_GLOBAL_ADLS_DICT[\\\u0022adls_model_cache\\\u0022])\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:0}],\u0022folder\u0022:{\u0022name\u0022:\u0022nbfolder/test1\u0022}}},{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/HelloWorld\u0022,\u0022name\u0022:\u0022HelloWorld\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022etag\u0022:\u00220e00670b-0000-0100-0000-6142dcab0000\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:2,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:{\u0022referenceName\u0022:\u0022testsparkpool\u0022,\u0022type\u0022:\u0022BigDataPoolReference\u0022},\u0022sessionProperties\u0022:{\u0022driverMemory\u0022:\u002228g\u0022,\u0022driverCores\u0022:4,\u0022executorMemory\u0022:\u002228g\u0022,\u0022executorCores\u0022:4,\u0022numExecutors\u0022:2,\u0022conf\u0022:{\u0022spark.dynamicAllocation.enabled\u0022:\u0022false\u0022,\u0022spark.dynamicAllocation.minExecutors\u0022:\u00222\u0022,\u0022spark.dynamicAllocation.maxExecutors\u0022:\u00222\u0022}},\u0022metadata\u0022:{\u0022language_info\u0022:{\u0022name\u0022:\u0022python\u0022},\u0022a365ComputeOptions\u0022:{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/bigDataPools/testsparkpool\u0022,\u0022name\u0022:\u0022testsparkpool\u0022,\u0022type\u0022:\u0022Spark\u0022,\u0022endpoint\u0022:\u0022https://testsynapseworkspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/testsparkpool\u0022,\u0022auth\u0022:{\u0022type\u0022:\u0022AAD\u0022,\u0022authResource\u0022:\u0022https://dev.azuresynapse.net\u0022},\u0022sparkVersion\u0022:\u00222.4\u0022,\u0022nodeCount\u0022:3,\u0022cores\u0022:8,\u0022memory\u0022:56,\u0022extraHeader\u0022:null},\u0022sessionKeepAliveTimeout\u0022:30,\u0022saveOutput\u0022:true,\u0022synapse_widget\u0022:{\u0022version\u0022:\u00220.1\u0022,\u0022state\u0022:{}},\u0022kernelspec\u0022:{\u0022name\u0022:\u0022synapse_pyspark\u0022,\u0022display_name\u0022:\u0022python\u0022}},\u0022cells\u0022:[{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{},\u0022source\u0022:[\u0022# comment\\r\\n\u0022,\u0022print(\\\u0022Hello World\\\u0022)\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:null}],\u0022folder\u0022:null}},{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/notebook-04-14-00-07\u0022,\u0022name\u0022:\u0022notebook-04-14-00-07\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022etag\u0022:\u00226003a078-0000-0100-0000-607694d80000\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:2,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:{\u0022referenceName\u0022:\u0022testsparkpool\u0022,\u0022type\u0022:\u0022BigDataPoolReference\u0022},\u0022sessionProperties\u0022:{\u0022driverMemory\u0022:\u002228g\u0022,\u0022driverCores\u0022:3,\u0022executorMemory\u0022:\u002245g\u0022,\u0022executorCores\u0022:7,\u0022numExecutors\u0022:2,\u0022conf\u0022:null},\u0022metadata\u0022:{\u0022language_info\u0022:{\u0022name\u0022:\u0022python\u0022},\u0022a365ComputeOptions\u0022:null,\u0022sessionKeepAliveTimeout\u0022:0},\u0022cells\u0022:[{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{\u0022tags\u0022:[\u0022parameters\u0022]},\u0022source\u0022:[\u0022\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:null},{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{},\u0022source\u0022:[\u0022print(param)\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:null}],\u0022folder\u0022:null}},{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/notebook-04-14-00-09\u0022,\u0022name\u0022:\u0022notebook-04-14-00-09\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022etag\u0022:\u00226103a451-0000-0100-0000-6076953a0000\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:2,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:{\u0022referenceName\u0022:\u0022testsparkpool\u0022,\u0022type\u0022:\u0022BigDataPoolReference\u0022},\u0022sessionProperties\u0022:{\u0022driverMemory\u0022:\u002228g\u0022,\u0022driverCores\u0022:3,\u0022executorMemory\u0022:\u002245g\u0022,\u0022executorCores\u0022:7,\u0022numExecutors\u0022:2,\u0022conf\u0022:null},\u0022metadata\u0022:{\u0022language_info\u0022:{\u0022name\u0022:\u0022python\u0022},\u0022a365ComputeOptions\u0022:null,\u0022sessionKeepAliveTimeout\u0022:0},\u0022cells\u0022:[{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{\u0022tags\u0022:[\u0022parameters\u0022]},\u0022source\u0022:[\u0022\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:null},{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{},\u0022source\u0022:[\u0022print(param)\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:null}],\u0022folder\u0022:null}},{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/notebook-04-19-23-25\u0022,\u0022name\u0022:\u0022notebook-04-19-23-25\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022etag\u0022:\u0022060096a2-0000-0100-0000-607e73c90000\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:2,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:{\u0022referenceName\u0022:\u0022testsparkpool\u0022,\u0022type\u0022:\u0022BigDataPoolReference\u0022},\u0022sessionProperties\u0022:{\u0022driverMemory\u0022:\u002228g\u0022,\u0022driverCores\u0022:3,\u0022executorMemory\u0022:\u002245g\u0022,\u0022executorCores\u0022:7,\u0022numExecutors\u0022:2,\u0022conf\u0022:null},\u0022metadata\u0022:{\u0022language_info\u0022:{\u0022name\u0022:\u0022python\u0022},\u0022a365ComputeOptions\u0022:null,\u0022sessionKeepAliveTimeout\u0022:0},\u0022cells\u0022:[{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{\u0022tags\u0022:[\u0022parameters\u0022]},\u0022source\u0022:[\u0022\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:null},{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{},\u0022source\u0022:[\u0022print(param)\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:null}],\u0022folder\u0022:null}},{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/dwnb0723\u0022,\u0022name\u0022:\u0022dwnb0723\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022etag\u0022:\u002203001052-0000-0100-0000-60e831ea0000\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:2,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:null,\u0022sessionProperties\u0022:{\u0022driverMemory\u0022:\u002228g\u0022,\u0022driverCores\u0022:4,\u0022executorMemory\u0022:\u002228g\u0022,\u0022executorCores\u0022:4,\u0022numExecutors\u0022:2,\u0022conf\u0022:{\u0022spark.dynamicAllocation.enabled\u0022:\u0022false\u0022,\u0022spark.dynamicAllocation.minExecutors\u0022:\u00222\u0022,\u0022spark.dynamicAllocation.maxExecutors\u0022:\u00222\u0022}},\u0022metadata\u0022:{\u0022language_info\u0022:{\u0022name\u0022:\u0022python\u0022},\u0022a365ComputeOptions\u0022:null,\u0022sessionKeepAliveTimeout\u0022:30,\u0022saveOutput\u0022:true,\u0022synapse_widget\u0022:{\u0022version\u0022:\u00220.1\u0022,\u0022state\u0022:{}},\u0022kernelspec\u0022:{\u0022name\u0022:\u0022synapse_pyspark\u0022,\u0022display_name\u0022:\u0022python\u0022}},\u0022cells\u0022:[{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{},\u0022source\u0022:[\u0022print(\u0027hello\u0027)\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:null}],\u0022folder\u0022:null}},{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/BRMSRule\u0022,\u0022name\u0022:\u0022BRMSRule\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022etag\u0022:\u00220e00f869-0000-0100-0000-611a2fa50000\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:2,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:{\u0022referenceName\u0022:\u0022testportal\u0022,\u0022type\u0022:\u0022BigDataPoolReference\u0022},\u0022sessionProperties\u0022:{\u0022driverMemory\u0022:\u002228g\u0022,\u0022driverCores\u0022:4,\u0022executorMemory\u0022:\u002228g\u0022,\u0022executorCores\u0022:4,\u0022numExecutors\u0022:2,\u0022conf\u0022:null},\u0022metadata\u0022:{\u0022language_info\u0022:{\u0022name\u0022:\u0022python\u0022},\u0022a365ComputeOptions\u0022:{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/bigDataPools/testportal\u0022,\u0022name\u0022:\u0022testportal\u0022,\u0022type\u0022:\u0022Spark\u0022,\u0022endpoint\u0022:\u0022https://testsynapseworkspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/testportal\u0022,\u0022auth\u0022:{\u0022type\u0022:\u0022AAD\u0022,\u0022authResource\u0022:\u0022https://dev.azuresynapse.net\u0022},\u0022sparkVersion\u0022:\u00223.0\u0022,\u0022nodeCount\u0022:10,\u0022cores\u0022:4,\u0022memory\u0022:28,\u0022extraHeader\u0022:null},\u0022sessionKeepAliveTimeout\u0022:30,\u0022saveOutput\u0022:true},\u0022cells\u0022:[{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{\u0022cellLanguage\u0022:\u0022python\u0022,\u0022tags\u0022:[\u0022parameters\u0022]},\u0022source\u0022:[\u0022param = \\\u0022\\\u0022\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:null},{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:null,\u0022source\u0022:[\u0022print(param)\\n\u0022,\u0022print(\\\u0022updated 12:29\\\u0022)\\n\u0022,\u0022a = \\\u0022\\\u0022\\\u0022\\n\u0022,\u0022/*Rule:OEMDealFlagPlan_OneConsumerPlanCustomGrouping-BEGIN*/ /*Rule:OEMDealFlagPlan_OneConsumerPlanCustomGrouping-END*/\\n\u0022,\u0022\\\u0022\\\u0022\\\u0022\\n\u0022,\u0022print(a)\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:null}],\u0022folder\u0022:null}},{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/dwtestnbdescription\u0022,\u0022name\u0022:\u0022dwtestnbdescription\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022etag\u0022:\u00220e00710b-0000-0100-0000-6142dcb10000\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:2,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:null,\u0022sessionProperties\u0022:{\u0022driverMemory\u0022:\u002228g\u0022,\u0022driverCores\u0022:4,\u0022executorMemory\u0022:\u002228g\u0022,\u0022executorCores\u0022:4,\u0022numExecutors\u0022:2,\u0022conf\u0022:{\u0022spark.dynamicAllocation.enabled\u0022:\u0022false\u0022,\u0022spark.dynamicAllocation.minExecutors\u0022:\u00222\u0022,\u0022spark.dynamicAllocation.maxExecutors\u0022:\u00222\u0022}},\u0022metadata\u0022:{\u0022language_info\u0022:{\u0022name\u0022:\u0022python\u0022},\u0022a365ComputeOptions\u0022:null,\u0022sessionKeepAliveTimeout\u0022:30,\u0022saveOutput\u0022:true,\u0022synapse_widget\u0022:{\u0022version\u0022:\u00220.1\u0022,\u0022state\u0022:{}},\u0022kernelspec\u0022:{\u0022name\u0022:\u0022synapse_pyspark\u0022,\u0022display_name\u0022:\u0022python\u0022}},\u0022cells\u0022:[{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{},\u0022source\u0022:[\u0022\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:null}],\u0022folder\u0022:null}},{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook51465148\u0022,\u0022name\u0022:\u0022Notebook51465148\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022etag\u0022:\u00222e00eb87-0000-0100-0000-6155681c0000\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:2,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:null,\u0022sessionProperties\u0022:null,\u0022metadata\u0022:{\u0022language_info\u0022:{\u0022name\u0022:\u0022Python\u0022},\u0022a365ComputeOptions\u0022:null,\u0022sessionKeepAliveTimeout\u0022:0},\u0022cells\u0022:[],\u0022folder\u0022:null}},{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook82440489\u0022,\u0022name\u0022:\u0022Notebook82440489\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022etag\u0022:\u00222e005180-0000-0100-0000-615556dc0000\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:2,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:null,\u0022sessionProperties\u0022:null,\u0022metadata\u0022:{\u0022language_info\u0022:{\u0022name\u0022:\u0022Python\u0022},\u0022a365ComputeOptions\u0022:null,\u0022sessionKeepAliveTimeout\u0022:0},\u0022cells\u0022:[],\u0022folder\u0022:null}},{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook54387962\u0022,\u0022name\u0022:\u0022Notebook54387962\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022etag\u0022:\u00222e005680-0000-0100-0000-615556e00000\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:2,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:null,\u0022sessionProperties\u0022:null,\u0022metadata\u0022:{\u0022language_info\u0022:{\u0022name\u0022:\u0022Python\u0022},\u0022a365ComputeOptions\u0022:null,\u0022sessionKeepAliveTimeout\u0022:0},\u0022cells\u0022:[],\u0022folder\u0022:null}},{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook82429219\u0022,\u0022name\u0022:\u0022Notebook82429219\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022etag\u0022:\u00222e005880-0000-0100-0000-615556e20000\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:2,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:null,\u0022sessionProperties\u0022:null,\u0022metadata\u0022:{\u0022language_info\u0022:{\u0022name\u0022:\u0022Python\u0022},\u0022a365ComputeOptions\u0022:null,\u0022sessionKeepAliveTimeout\u0022:0},\u0022cells\u0022:[],\u0022folder\u0022:null}},{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook12432614\u0022,\u0022name\u0022:\u0022Notebook12432614\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022etag\u0022:\u00222e005a80-0000-0100-0000-615556e70000\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:2,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:null,\u0022sessionProperties\u0022:null,\u0022metadata\u0022:{\u0022language_info\u0022:{\u0022name\u0022:\u0022Python\u0022},\u0022a365ComputeOptions\u0022:null,\u0022sessionKeepAliveTimeout\u0022:0},\u0022cells\u0022:[],\u0022folder\u0022:null}}]}"
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/Notebook%201?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-2774e2bec3be7a4988c1bb3816405da4-7533be6a1cd14346-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "8fe700156ace6796cfc458bddb6217e3",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:47 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "8fe700156ace6796cfc458bddb6217e3",
        "x-ms-request-id": "ab520bb0-9a29-4b8c-b51c-1547eed60aef"
      },
      "ResponseBody": {
        "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook 1",
        "name": "Notebook 1",
        "type": "Microsoft.Synapse/workspaces/notebooks",
        "properties": {
          "nbformat": 4,
          "nbformat_minor": 2,
          "entityState": null,
          "renameOperationDetails": null,
          "bigDataPool": {
            "referenceName": "testsparkpool",
            "type": "BigDataPoolReference"
          },
          "sessionProperties": {
            "driverMemory": "28g",
            "driverCores": 4,
            "executorMemory": "28g",
            "executorCores": 4,
            "numExecutors": 1,
            "conf": {
              "spark.dynamicAllocation.enabled": "false",
              "spark.dynamicAllocation.minExecutors": "1",
              "spark.dynamicAllocation.maxExecutors": "1"
            }
          },
          "metadata": {
            "language_info": {
              "name": "python"
            },
            "a365ComputeOptions": {
              "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/bigDataPools/testsparkpool",
              "name": "testsparkpool",
              "type": "Spark",
              "endpoint": "https://testsynapseworkspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/testsparkpool",
              "auth": {
                "type": "AAD",
                "authResource": "https://dev.azuresynapse.net"
              },
              "sparkVersion": "2.4",
              "nodeCount": 3,
              "cores": 8,
              "memory": 56,
              "extraHeader": null
            },
            "sessionKeepAliveTimeout": 30,
            "saveOutput": true,
            "synapse_widget": {
              "version": "0.1",
              "state": {}
            },
            "kernelspec": {
              "name": "synapse_pyspark",
              "display_name": "python"
            }
          },
          "cells": [
            {
              "cell_type": "code",
              "metadata": {},
              "source": [
                "print(\u0022hello from portal\u0022)"
              ],
              "attachments": {},
              "outputs": [],
              "execution_count": null
            }
          ],
          "folder": {
            "name": "nbfolder"
          }
        },
        "etag": "1700db78-0000-0100-0000-60f7a2160000"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/dongwwaTestNotebook?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-cb884a966982df46be10f6c84a074e35-01ed0d738c39b34e-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "c7bbc622150d17bb716871355a75b714",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:47 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "c7bbc622150d17bb716871355a75b714",
        "x-ms-request-id": "ae95e0e4-5217-47a8-8e9a-06a02ae973a4"
      },
      "ResponseBody": {
        "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/dongwwaTestNotebook",
        "name": "dongwwaTestNotebook",
        "type": "Microsoft.Synapse/workspaces/notebooks",
        "properties": {
          "nbformat": 4,
          "nbformat_minor": 2,
          "entityState": null,
          "renameOperationDetails": null,
          "bigDataPool": null,
          "sessionProperties": {
            "driverMemory": "28g",
            "driverCores": 4,
            "executorMemory": "28g",
            "executorCores": 4,
            "numExecutors": 2,
            "conf": null
          },
          "metadata": {
            "language_info": {
              "name": "python"
            },
            "a365ComputeOptions": null,
            "sessionKeepAliveTimeout": 30
          },
          "cells": [
            {
              "cell_type": "code",
              "metadata": {},
              "source": [
                "print(\u0027hello\u0027)"
              ],
              "attachments": {},
              "outputs": [],
              "execution_count": null
            }
          ],
          "folder": null
        },
        "etag": "0100d5a0-0000-0100-0000-5ecba4720000"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/dongwwaNb2?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-eca471617f4d5e428aca5e1ea5071257-11fc37bdbacf4649-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "0d63adbce69e8eb4936b26dc2fc4239a",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:47 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "0d63adbce69e8eb4936b26dc2fc4239a",
        "x-ms-request-id": "dd6224a9-cafb-4452-91ee-a107908af9c5"
      },
      "ResponseBody": {
        "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/dongwwaNb2",
        "name": "dongwwaNb2",
        "type": "Microsoft.Synapse/workspaces/notebooks",
        "properties": {
          "nbformat": 4,
          "nbformat_minor": 2,
          "entityState": null,
          "renameOperationDetails": null,
          "bigDataPool": {
            "referenceName": "testportal",
            "type": "BigDataPoolReference"
          },
          "sessionProperties": {
            "driverMemory": "28g",
            "driverCores": 4,
            "executorMemory": "28g",
            "executorCores": 4,
            "numExecutors": 3,
            "conf": null
          },
          "metadata": {
            "language_info": {
              "name": "python"
            },
            "a365ComputeOptions": {
              "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/bigDataPools/testportal",
              "name": "testportal",
              "type": "Spark",
              "endpoint": "https://testsynapseworkspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/testportal",
              "auth": {
                "type": "AAD",
                "authResource": "https://dev.azuresynapse.net"
              },
              "sparkVersion": "2.4",
              "nodeCount": 3,
              "cores": 8,
              "memory": 56,
              "extraHeader": {}
            },
            "sessionKeepAliveTimeout": 15
          },
          "cells": [],
          "folder": null
        },
        "etag": "1100d8f9-0000-0100-0000-5f1560de0000"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/dongwwanb23?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-34d561e9aabfa043bda241a7d518fba8-1ccc85e74295a641-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "f5a1267c887700d045cf1e66f9610d59",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:47 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "f5a1267c887700d045cf1e66f9610d59",
        "x-ms-request-id": "c20dcada-c3a1-4005-b651-a92ba057da4b"
      },
      "ResponseBody": {
        "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/dongwwanb23",
        "name": "dongwwanb23",
        "type": "Microsoft.Synapse/workspaces/notebooks",
        "properties": {
          "nbformat": 4,
          "nbformat_minor": 2,
          "entityState": null,
          "renameOperationDetails": null,
          "bigDataPool": {
            "referenceName": "testportal",
            "type": "BigDataPoolReference"
          },
          "sessionProperties": {
            "driverMemory": "28g",
            "driverCores": 4,
            "executorMemory": "28g",
            "executorCores": 4,
            "numExecutors": 2,
            "conf": null
          },
          "metadata": {
            "language_info": {
              "name": "python"
            },
            "a365ComputeOptions": {
              "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/bigDataPools/testportal",
              "name": "testportal",
              "type": "Spark",
              "endpoint": "https://testsynapseworkspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/testportal",
              "auth": {
                "type": "AAD",
                "authResource": "https://dev.azuresynapse.net"
              },
              "sparkVersion": "2.4",
              "nodeCount": 3,
              "cores": 8,
              "memory": 56,
              "extraHeader": {}
            },
            "sessionKeepAliveTimeout": 30
          },
          "cells": [],
          "folder": null
        },
        "etag": "5f0005d3-0000-0100-0000-5f06bc3e0000"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/dongwwatestnb1446?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-5e0eedfe74451e46b58fd8f88ab13c63-e9de2d1c7b47784e-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "2d00440c0aff3c44122d34a1eedee8ac",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:48 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "2d00440c0aff3c44122d34a1eedee8ac",
        "x-ms-request-id": "3e1365bf-9aa0-485d-a794-d8163570a2df"
      },
      "ResponseBody": {
        "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/dongwwatestnb1446",
        "name": "dongwwatestnb1446",
        "type": "Microsoft.Synapse/workspaces/notebooks",
        "properties": {
          "nbformat": 4,
          "nbformat_minor": 2,
          "entityState": null,
          "renameOperationDetails": null,
          "bigDataPool": null,
          "sessionProperties": {
            "driverMemory": "28g",
            "driverCores": 4,
            "executorMemory": "28g",
            "executorCores": 4,
            "numExecutors": 2,
            "conf": null
          },
          "metadata": {
            "language_info": {
              "name": "python"
            },
            "a365ComputeOptions": null,
            "sessionKeepAliveTimeout": 30
          },
          "cells": [],
          "folder": null
        },
        "etag": "5f0029d3-0000-0100-0000-5f06bd6a0000"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/dongwwaCreateNbwithCell?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-43e57f644deec244abad3e6a83c72a3c-5078bdf9e769ff44-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "34b8d645c2d3349ddd62c8cec84e9531",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:48 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "34b8d645c2d3349ddd62c8cec84e9531",
        "x-ms-request-id": "95cc526b-e256-44fe-a97a-c108ed5191dd"
      },
      "ResponseBody": {
        "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/dongwwaCreateNbwithCell",
        "name": "dongwwaCreateNbwithCell",
        "type": "Microsoft.Synapse/workspaces/notebooks",
        "properties": {
          "nbformat": 4,
          "nbformat_minor": 2,
          "entityState": null,
          "renameOperationDetails": null,
          "bigDataPool": {
            "referenceName": "testportal",
            "type": "BigDataPoolReference"
          },
          "sessionProperties": {
            "driverMemory": "28g",
            "driverCores": 4,
            "executorMemory": "28g",
            "executorCores": 4,
            "numExecutors": 1,
            "conf": {
              "spark.dynamicAllocation.enabled": "false",
              "spark.dynamicAllocation.minExecutors": "1",
              "spark.dynamicAllocation.maxExecutors": "1"
            }
          },
          "metadata": {
            "language_info": {
              "name": "python"
            },
            "a365ComputeOptions": {
              "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/bigDataPools/testportal",
              "name": "testportal",
              "type": "Spark",
              "endpoint": "https://testsynapseworkspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/testportal",
              "auth": {
                "type": "AAD",
                "authResource": "https://dev.azuresynapse.net"
              },
              "sparkVersion": "2.4",
              "nodeCount": 3,
              "cores": 8,
              "memory": 56,
              "extraHeader": null
            },
            "sessionKeepAliveTimeout": 30,
            "saveOutput": true,
            "synapse_widget": {
              "version": "0.1",
              "state": {}
            },
            "kernelspec": {
              "name": "synapse_pyspark",
              "display_name": "python"
            }
          },
          "cells": [
            {
              "cell_type": "code",
              "metadata": {},
              "source": [
                "print(\u0027hello world\u0027)"
              ],
              "attachments": null,
              "outputs": [],
              "execution_count": null
            }
          ],
          "folder": null
        },
        "etag": "0e00d468-0000-0100-0000-611a2f1e0000"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/Notebook1980347592?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-cd6da32f19ead241abc1af86750ca1f5-c185388859dd9e43-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "ebd0cd5ef5c4729ae165e349532e1166",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:48 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "ebd0cd5ef5c4729ae165e349532e1166",
        "x-ms-request-id": "4e9f1193-55c5-4e38-aa6b-eee2acbecb6c"
      },
      "ResponseBody": {
        "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook1980347592",
        "name": "Notebook1980347592",
        "type": "Microsoft.Synapse/workspaces/notebooks",
        "properties": {
          "nbformat": -1,
          "nbformat_minor": 2,
          "entityState": null,
          "renameOperationDetails": null,
          "bigDataPool": null,
          "sessionProperties": null,
          "metadata": {
            "language_info": null,
            "a365ComputeOptions": null,
            "sessionKeepAliveTimeout": 0
          },
          "cells": [],
          "folder": null
        },
        "etag": "00001701-0000-0100-0000-600164550000"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/Notebook1304984445?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-c49b1733fbdd5340984d545df057dea2-1f57bbd869438747-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "222171e7d8a84a85a6cc4f9c417573c3",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:48 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "222171e7d8a84a85a6cc4f9c417573c3",
        "x-ms-request-id": "715fa7ee-fbac-4620-8916-6edd12b6ed77"
      },
      "ResponseBody": {
        "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook1304984445",
        "name": "Notebook1304984445",
        "type": "Microsoft.Synapse/workspaces/notebooks",
        "properties": {
          "nbformat": 0,
          "nbformat_minor": 0,
          "entityState": null,
          "renameOperationDetails": null,
          "bigDataPool": null,
          "sessionProperties": null,
          "metadata": {
            "language_info": null,
            "a365ComputeOptions": null,
            "sessionKeepAliveTimeout": 0
          },
          "cells": [],
          "folder": null
        },
        "etag": "00004501-0000-0100-0000-600164960000"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/dwnb1218?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-7c10dd22a1ce7a4cb7adcc24a8c0fef1-a0cb446041d51949-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "21430298fc0e4fe83b46526edf53e0af",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:48 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "21430298fc0e4fe83b46526edf53e0af",
        "x-ms-request-id": "87b1140a-fad7-4ecf-aaf0-d4a440973c46"
      },
      "ResponseBody": "{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/dwnb1218\u0022,\u0022name\u0022:\u0022dwnb1218\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:2,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:null,\u0022sessionProperties\u0022:null,\u0022metadata\u0022:{\u0022language_info\u0022:{\u0022name\u0022:\u0022python\u0022},\u0022a365ComputeOptions\u0022:{\u0022id\u0022:\u0022/subscriptions/132ed640-b28a-4f12-b8b6-3792c4e9d55f/resourceGroups/z-ago-dhp-ana-ari-ew1-rg01/providers/Microsoft.Synapse/workspaces/synapseari002/bigDataPools/RunningPool\u0022,\u0022name\u0022:\u0022RunningPool\u0022,\u0022type\u0022:\u0022Spark\u0022,\u0022endpoint\u0022:\u0022https://synapseari002.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/RunningPool\u0022,\u0022auth\u0022:{\u0022type\u0022:\u0022AAD\u0022,\u0022authResource\u0022:\u0022https://dev.azuresynapse.net\u0022},\u0022sparkVersion\u0022:\u00222.4\u0022,\u0022nodeCount\u0022:3,\u0022cores\u0022:0,\u0022memory\u0022:0,\u0022extraHeader\u0022:null},\u0022sessionKeepAliveTimeout\u0022:0,\u0022sessionOptions\u0022:{\u0022driverMemory\u0022:\u002228g\u0022,\u0022driverCores\u0022:4,\u0022executorMemory\u0022:\u002228g\u0022,\u0022executorCores\u0022:4,\u0022numExecutors\u0022:2,\u0022keepAliveTimeout\u0022:30,\u0022conf\u0022:{\u0022spark.dynamicAllocation.enabled\u0022:\u0022false\u0022,\u0022spark.dynamicAllocation.minExecutors\u0022:\u00222\u0022,\u0022spark.dynamicAllocation.maxExecutors\u0022:\u00222\u0022}},\u0022saveOutput\u0022:true},\u0022cells\u0022:[{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{\u0022microsoft\u0022:{\u0022language\u0022:\u0022python1\u0022}},\u0022source\u0022:[\u0022%%pyspark\\r\\n\u0022,\u0022df = spark.read.load(\u0027abfss://synapse@zagodhpanaariew1sto02.dfs.core.windows.net/Data/COCKPIT_V0.csv\u0027, format=\u0027csv\u0027\\r\\n\u0022,\u0022## If\u202Fheader\u202Fexists\u202Funcomment\u202Fline\u202Fbelow\\r\\n\u0022,\u0022##, header=True\\r\\n\u0022,\u0022)\\r\\n\u0022,\u0022display(df.limit(10))\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:null}],\u0022folder\u0022:null},\u0022etag\u0022:\u0022c2009a8b-0000-0100-0000-5fd32e170000\u0022}"
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/dwnb1219?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-a8b3eae0eaf0b5449783e9508dc7932c-6e910ebc137fce4f-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "56e66150722d8588478544f7a5fe306b",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:49 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "56e66150722d8588478544f7a5fe306b",
        "x-ms-request-id": "1a7591a3-a701-4857-8445-24d80cdfd0aa"
      },
      "ResponseBody": "{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/dwnb1219\u0022,\u0022name\u0022:\u0022dwnb1219\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:2,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:null,\u0022sessionProperties\u0022:null,\u0022metadata\u0022:{\u0022language_info\u0022:{\u0022name\u0022:\u0022python\u0022},\u0022a365ComputeOptions\u0022:{\u0022id\u0022:\u0022/subscriptions/132ed640-b28a-4f12-b8b6-3792c4e9d55f/resourceGroups/z-ago-dhp-ana-ari-ew1-rg01/providers/Microsoft.Synapse/workspaces/synapseari002/bigDataPools/RunningPool\u0022,\u0022name\u0022:\u0022RunningPool\u0022,\u0022type\u0022:\u0022Spark\u0022,\u0022endpoint\u0022:\u0022https://synapseari002.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/RunningPool\u0022,\u0022auth\u0022:{\u0022type\u0022:\u0022AAD\u0022,\u0022authResource\u0022:\u0022https://dev.azuresynapse.net\u0022},\u0022sparkVersion\u0022:\u00222.4\u0022,\u0022nodeCount\u0022:3,\u0022cores\u0022:0,\u0022memory\u0022:0,\u0022extraHeader\u0022:null},\u0022sessionKeepAliveTimeout\u0022:0,\u0022sessionOptions\u0022:{\u0022driverMemory\u0022:\u002228g\u0022,\u0022driverCores\u0022:4,\u0022executorMemory\u0022:\u002228g\u0022,\u0022executorCores\u0022:4,\u0022numExecutors\u0022:2,\u0022keepAliveTimeout\u0022:30,\u0022conf\u0022:{\u0022spark.dynamicAllocation.enabled\u0022:\u0022false\u0022,\u0022spark.dynamicAllocation.minExecutors\u0022:\u00222\u0022,\u0022spark.dynamicAllocation.maxExecutors\u0022:\u00222\u0022}},\u0022saveOutput\u0022:true},\u0022cells\u0022:[{\u0022cell_type\u0022:\u0022code\u0022,\u0022metadata\u0022:{\u0022microsoft\u0022:{\u0022language\u0022:\u0022python1\u0022}},\u0022source\u0022:[\u0022%%pyspark\\r\\n\u0022,\u0022df = spark.read.load(\u0027abfss://synapse@zagodhpanaariew1sto02.dfs.core.windows.net/Data/COCKPIT_V0.csv\u0027, format=\u0027csv\u0027\\r\\n\u0022,\u0022## If\u202Fheader\u202Fexists\u202Funcomment\u202Fline\u202Fbelow\\r\\n\u0022,\u0022##, header=True\\r\\n\u0022,\u0022)\\r\\n\u0022,\u0022display(df.limit(10))\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:null}],\u0022folder\u0022:null},\u0022etag\u0022:\u0022c2009f8b-0000-0100-0000-5fd32e6c0000\u0022}"
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/dwnb1232?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-4d1250ad1a4d234f9b4302519648a9f6-d09900fc9e649440-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "50b11ff1f0ebeb5889d1e66286166a52",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:49 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "50b11ff1f0ebeb5889d1e66286166a52",
        "x-ms-request-id": "5a49f5e8-b6ce-4ac5-9aa5-4c3222bb7d67"
      },
      "ResponseBody": "{\u0022id\u0022:\u0022/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/dwnb1232\u0022,\u0022name\u0022:\u0022dwnb1232\u0022,\u0022type\u0022:\u0022Microsoft.Synapse/workspaces/notebooks\u0022,\u0022properties\u0022:{\u0022nbformat\u0022:4,\u0022nbformat_minor\u0022:2,\u0022entityState\u0022:null,\u0022renameOperationDetails\u0022:null,\u0022bigDataPool\u0022:null,\u0022sessionProperties\u0022:null,\u0022metadata\u0022:{\u0022language_info\u0022:{\u0022name\u0022:\u0022python\u0022},\u0022a365ComputeOptions\u0022:{\u0022id\u0022:\u0022/subscriptions/132ed640-b28a-4f12-b8b6-3792c4e9d55f/resourceGroups/z-ago-dhp-ana-ari-ew1-rg01/providers/Microsoft.Synapse/workspaces/synapseari002/bigDataPools/RunningPool\u0022,\u0022name\u0022:\u0022RunningPool\u0022,\u0022type\u0022:\u0022Spark\u0022,\u0022endpoint\u0022:\u0022https://synapseari002.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/RunningPool\u0022,\u0022auth\u0022:{\u0022type\u0022:\u0022AAD\u0022,\u0022authResource\u0022:\u0022https://dev.azuresynapse.net\u0022},\u0022sparkVersion\u0022:\u00222.4\u0022,\u0022nodeCount\u0022:3,\u0022cores\u0022:0,\u0022memory\u0022:0,\u0022extraHeader\u0022:null},\u0022sessionKeepAliveTimeout\u0022:0,\u0022sessionOptions\u0022:{\u0022driverMemory\u0022:\u002228g\u0022,\u0022driverCores\u0022:4,\u0022executorMemory\u0022:\u002228g\u0022,\u0022executorCores\u0022:4,\u0022numExecutors\u0022:2,\u0022keepAliveTimeout\u0022:30,\u0022conf\u0022:{\u0022spark.dynamicAllocation.enabled\u0022:\u0022false\u0022,\u0022spark.dynamicAllocation.minExecutors\u0022:\u00222\u0022,\u0022spark.dynamicAllocation.maxExecutors\u0022:\u00222\u0022}},\u0022saveOutput\u0022:true},\u0022cells\u0022:[{\u0022cell_type\u0022:\u0022code1\u0022,\u0022metadata\u0022:{\u0022microsoft\u0022:{\u0022language\u0022:\u0022python\u0022}},\u0022source\u0022:[\u0022%%pyspark\\r\\n\u0022,\u0022df = spark.read.load(\u0027abfss://synapse@zagodhpanaariew1sto02.dfs.core.windows.net/Data/COCKPIT_V0.csv\u0027, format=\u0027csv\u0027\\r\\n\u0022,\u0022## If\u202Fheader\u202Fexists\u202Funcomment\u202Fline\u202Fbelow\\r\\n\u0022,\u0022##, header=True\\r\\n\u0022,\u0022)\\r\\n\u0022,\u0022display(df.limit(10))\u0022],\u0022attachments\u0022:null,\u0022outputs\u0022:[],\u0022execution_count\u0022:null}],\u0022folder\u0022:null},\u0022etag\u0022:\u0022c200a08b-0000-0100-0000-5fd32eb70000\u0022}"
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/Notebook1655116845?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-9545c412682f314cba80935400fcde33-7070a75b834e5a4a-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "df4ba0ec1d8f25957abdd988b8f0a93d",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:49 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "df4ba0ec1d8f25957abdd988b8f0a93d",
        "x-ms-request-id": "44272abb-1bcc-4c09-9af4-4e0539f9995c"
      },
      "ResponseBody": {
        "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook1655116845",
        "name": "Notebook1655116845",
        "type": "Microsoft.Synapse/workspaces/notebooks",
        "properties": {
          "nbformat": 4,
          "nbformat_minor": 2,
          "entityState": null,
          "renameOperationDetails": null,
          "bigDataPool": null,
          "sessionProperties": null,
          "metadata": {
            "language_info": null,
            "a365ComputeOptions": null,
            "sessionKeepAliveTimeout": 0
          },
          "cells": [
            {
              "cell_type": "code",
              "metadata": {},
              "source": [
                "from azureml.opendatasets import NycTlcYellow\n",
                "\n",
                "data = NycTlcYellow()\n",
                "df = data.to_spark_dataframe()\n",
                "# Display 10 rows\n",
                "display(df.limit(10))"
              ],
              "attachments": null,
              "outputs": [],
              "execution_count": null
            }
          ],
          "folder": null
        },
        "etag": "1a0072ca-0000-0100-0000-5fd6ffec0000"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/Notebook598190831?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-d64a515d9a76644eaf0a24ea2419513b-55b79e1eeb32b34f-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "bf7de7168fa260c409fbcd5c8c26ff30",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:49 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "bf7de7168fa260c409fbcd5c8c26ff30",
        "x-ms-request-id": "c599ba5a-0483-41d4-ba41-fcad716226eb"
      },
      "ResponseBody": {
        "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook598190831",
        "name": "Notebook598190831",
        "type": "Microsoft.Synapse/workspaces/notebooks",
        "properties": {
          "nbformat": 4,
          "nbformat_minor": 2,
          "entityState": null,
          "renameOperationDetails": null,
          "bigDataPool": null,
          "sessionProperties": null,
          "metadata": {
            "language_info": null,
            "a365ComputeOptions": null,
            "sessionKeepAliveTimeout": 0
          },
          "cells": [
            {
              "cell_type": "code",
              "metadata": {},
              "source": [
                "from azureml.opendatasets import NycTlcYellow\n",
                "\n",
                "data = NycTlcYellow()\n",
                "df = data.to_spark_dataframe()\n",
                "# Display 10 rows\n",
                "display(df.limit(10))"
              ],
              "attachments": null,
              "outputs": [],
              "execution_count": null
            }
          ],
          "folder": null
        },
        "etag": "1a0074ca-0000-0100-0000-5fd6fff20000"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/Notebook1970176056?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-7498a6c01b514342bc9d1700f609b943-2e5d92e7515ca54f-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "050bf21a50b2d3dc898bd62d16cf3299",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:50 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "050bf21a50b2d3dc898bd62d16cf3299",
        "x-ms-request-id": "2e9270c3-b18b-4c6a-8185-3099c74f4e6d"
      },
      "ResponseBody": {
        "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook1970176056",
        "name": "Notebook1970176056",
        "type": "Microsoft.Synapse/workspaces/notebooks",
        "properties": {
          "nbformat": 4,
          "nbformat_minor": 2,
          "entityState": null,
          "renameOperationDetails": null,
          "bigDataPool": null,
          "sessionProperties": null,
          "metadata": {
            "language_info": null,
            "a365ComputeOptions": null,
            "sessionKeepAliveTimeout": 0
          },
          "cells": [
            {
              "cell_type": "code",
              "metadata": {},
              "source": [
                "from azureml.opendatasets import NycTlcYellow\n",
                "\n",
                "data = NycTlcYellow()\n",
                "df = data.to_spark_dataframe()\n",
                "# Display 10 rows\n",
                "display(df.limit(10))"
              ],
              "attachments": null,
              "outputs": [],
              "execution_count": null
            }
          ],
          "folder": null
        },
        "etag": "1a0076ca-0000-0100-0000-5fd700340000"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/Notebook1782019395?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-cf8da04f14b19c4dad3f6a971c16eae9-974c5a6d3d30024b-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "9e4ca827ab985cafdbebd69350399853",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:50 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "9e4ca827ab985cafdbebd69350399853",
        "x-ms-request-id": "6f4f74cf-9a4f-4229-8e1b-d2496b607e65"
      },
      "ResponseBody": {
        "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook1782019395",
        "name": "Notebook1782019395",
        "type": "Microsoft.Synapse/workspaces/notebooks",
        "properties": {
          "nbformat": 4,
          "nbformat_minor": 2,
          "entityState": null,
          "renameOperationDetails": null,
          "bigDataPool": null,
          "sessionProperties": null,
          "metadata": {
            "language_info": null,
            "a365ComputeOptions": null,
            "sessionKeepAliveTimeout": 0
          },
          "cells": [
            {
              "cell_type": "code",
              "metadata": {},
              "source": [
                "from azureml.opendatasets import NycTlcYellow\n",
                "\n",
                "data = NycTlcYellow()\n",
                "df = data.to_spark_dataframe()\n",
                "# Display 10 rows\n",
                "display(df.limit(10))"
              ],
              "attachments": null,
              "outputs": [],
              "execution_count": null
            }
          ],
          "folder": null
        },
        "etag": "1a0078ca-0000-0100-0000-5fd700380000"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/Notebook407138930?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-b5f3c153de34174c8f965dac1a972c02-ea88c8437b088342-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "c66da9bea4e5c58b0baa3517b8964a39",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:50 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "c66da9bea4e5c58b0baa3517b8964a39",
        "x-ms-request-id": "0dd78b61-9aff-4ad0-a445-c080832a6e36"
      },
      "ResponseBody": {
        "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook407138930",
        "name": "Notebook407138930",
        "type": "Microsoft.Synapse/workspaces/notebooks",
        "properties": {
          "nbformat": 4,
          "nbformat_minor": 2,
          "entityState": null,
          "renameOperationDetails": null,
          "bigDataPool": null,
          "sessionProperties": null,
          "metadata": {
            "language_info": null,
            "a365ComputeOptions": null,
            "sessionKeepAliveTimeout": 0
          },
          "cells": [
            {
              "cell_type": "code",
              "metadata": {},
              "source": [
                "from azureml.opendatasets import NycTlcYellow\n",
                "\n",
                "data = NycTlcYellow()\n",
                "df = data.to_spark_dataframe()\n",
                "# Display 10 rows\n",
                "display(df.limit(10))"
              ],
              "attachments": null,
              "outputs": [],
              "execution_count": null
            }
          ],
          "folder": null
        },
        "etag": "1a007bca-0000-0100-0000-5fd7021d0000"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/Notebook1964062232?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-b98ed2e8dcb6a94eb5f7e6abaafc6c7b-e381a0dd2913b541-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "e43433c860da6f9842ae29c779488350",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:50 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "e43433c860da6f9842ae29c779488350",
        "x-ms-request-id": "27ac9e51-8722-4a63-95de-03942fa4d4fe"
      },
      "ResponseBody": {
        "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook1964062232",
        "name": "Notebook1964062232",
        "type": "Microsoft.Synapse/workspaces/notebooks",
        "properties": {
          "nbformat": 4,
          "nbformat_minor": 2,
          "entityState": null,
          "renameOperationDetails": null,
          "bigDataPool": null,
          "sessionProperties": null,
          "metadata": {
            "language_info": null,
            "a365ComputeOptions": null,
            "sessionKeepAliveTimeout": 0
          },
          "cells": [
            {
              "cell_type": "code",
              "metadata": {},
              "source": [
                "from azureml.opendatasets import NycTlcYellow\n",
                "\n",
                "data = NycTlcYellow()\n",
                "df = data.to_spark_dataframe()\n",
                "# Display 10 rows\n",
                "display(df.limit(10))"
              ],
              "attachments": null,
              "outputs": [],
              "execution_count": null
            }
          ],
          "folder": null
        },
        "etag": "1a007dca-0000-0100-0000-5fd702220000"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/Notebook1621408096?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-f92d2aa33d9b0741b114cc2841473f05-5df64b750076cf43-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "6d6f83f26c6283b31d8693ee7598a345",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:51 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "6d6f83f26c6283b31d8693ee7598a345",
        "x-ms-request-id": "5074f50b-50a3-40b9-8353-ca56150324ac"
      },
      "ResponseBody": {
        "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook1621408096",
        "name": "Notebook1621408096",
        "type": "Microsoft.Synapse/workspaces/notebooks",
        "properties": {
          "nbformat": 4,
          "nbformat_minor": 2,
          "entityState": null,
          "renameOperationDetails": null,
          "bigDataPool": null,
          "sessionProperties": null,
          "metadata": {
            "language_info": null,
            "a365ComputeOptions": null,
            "sessionKeepAliveTimeout": 0
          },
          "cells": [
            {
              "cell_type": "code",
              "metadata": {},
              "source": [
                "from azureml.opendatasets import NycTlcYellow\n",
                "\n",
                "data = NycTlcYellow()\n",
                "df = data.to_spark_dataframe()\n",
                "# Display 10 rows\n",
                "display(df.limit(10))"
              ],
              "attachments": null,
              "outputs": [],
              "execution_count": null
            }
          ],
          "folder": null
        },
        "etag": "1a007fca-0000-0100-0000-5fd703dc0000"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/Notebook391889253?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-3e6bc39bdd430f46ad2cc5f3e88bf57b-19dbd98868bc9a4c-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "1cca9da0b4055d7811fe83367bc34bc2",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:51 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "1cca9da0b4055d7811fe83367bc34bc2",
        "x-ms-request-id": "0eee47d5-b2c3-435c-8c5a-df7faf513153"
      },
      "ResponseBody": {
        "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook391889253",
        "name": "Notebook391889253",
        "type": "Microsoft.Synapse/workspaces/notebooks",
        "properties": {
          "nbformat": 4,
          "nbformat_minor": 2,
          "entityState": null,
          "renameOperationDetails": null,
          "bigDataPool": null,
          "sessionProperties": null,
          "metadata": {
            "language_info": null,
            "a365ComputeOptions": null,
            "sessionKeepAliveTimeout": 0
          },
          "cells": [
            {
              "cell_type": "code",
              "metadata": {},
              "source": [
                "from azureml.opendatasets import NycTlcYellow\n",
                "\n",
                "data = NycTlcYellow()\n",
                "df = data.to_spark_dataframe()\n",
                "# Display 10 rows\n",
                "display(df.limit(10))"
              ],
              "attachments": null,
              "outputs": [],
              "execution_count": null
            }
          ],
          "folder": null
        },
        "etag": "1a0081ca-0000-0100-0000-5fd703e90000"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/dongwwanb?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-2eb35d466fea4a46b6f21d1487707f7e-350773a2da94d24a-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "3524e526dd275cd780b1c653cca9f9a9",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:51 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "3524e526dd275cd780b1c653cca9f9a9",
        "x-ms-request-id": "3d8d0d73-a1d9-419e-9109-1e2e7ddbdfe8"
      },
      "ResponseBody": {
        "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/dongwwanb",
        "name": "dongwwanb",
        "type": "Microsoft.Synapse/workspaces/notebooks",
        "properties": {
          "nbformat": 4,
          "nbformat_minor": 0,
          "entityState": null,
          "renameOperationDetails": null,
          "bigDataPool": null,
          "sessionProperties": {
            "driverMemory": "28g",
            "driverCores": 4,
            "executorMemory": "28g",
            "executorCores": 4,
            "numExecutors": 2,
            "conf": {
              "spark.dynamicAllocation.enabled": "false",
              "spark.dynamicAllocation.minExecutors": "2",
              "spark.dynamicAllocation.maxExecutors": "2"
            }
          },
          "metadata": {
            "language_info": {
              "name": "python"
            },
            "a365ComputeOptions": null,
            "sessionKeepAliveTimeout": 30,
            "saveOutput": true,
            "synapse_widget": {
              "version": "0.1",
              "state": {}
            },
            "kernelspec": {
              "name": "synapse_pyspark",
              "display_name": "python"
            }
          },
          "cells": [
            {
              "cell_type": "markdown",
              "metadata": {
                "application/vnd.databricks.v1\u002Bcell": {
                  "title": "",
                  "showTitle": false,
                  "inputWidgets": {},
                  "nuid": "ec9689e6-a215-42cf-aa9f-85a38cca6362"
                }
              },
              "source": [
                "Copyright (c) Microsoft Corporation. All rights reserved."
              ],
              "attachments": null,
              "outputs": [],
              "execution_count": null
            },
            {
              "cell_type": "code",
              "metadata": {
                "application/vnd.databricks.v1\u002Bcell": {
                  "title": "",
                  "showTitle": false,
                  "inputWidgets": {},
                  "nuid": "4eb23c41-ffd4-412f-a887-102462d4d316"
                }
              },
              "source": [
                "# Disable the verbose log\n",
                "import logging\n",
                "logging.getLogger(\u0022py4j\u0022).setLevel(logging.ERROR) "
              ],
              "attachments": null,
              "outputs": [
                {
                  "output_type": "display_data",
                  "data": {
                    "text/html": "\u003Cstyle scoped\u003E\n  .ansiout {\n    display: block;\n    unicode-bidi: embed;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    word-break: break-all;\n    font-family: \u0022Source Code Pro\u0022, \u0022Menlo\u0022, monospace;;\n    font-size: 13px;\n    color: #555;\n    margin-left: 4px;\n    line-height: 19px;\n  }\n\u003C/style\u003E\n\u003Cdiv class=\u0022ansiout\u0022\u003E\u003C/div\u003E"
                  },
                  "metadata": {
                    "application/vnd.databricks.v1\u002Boutput": {
                      "datasetInfos": [],
                      "data": "\u003Cdiv class=\u0022ansiout\u0022\u003E\u003C/div\u003E",
                      "removedWidgets": [],
                      "addedWidgets": {},
                      "type": "html",
                      "arguments": {}
                    }
                  }
                }
              ],
              "execution_count": 0
            },
            {
              "cell_type": "code",
              "metadata": {
                "application/vnd.databricks.v1\u002Bcell": {
                  "title": "",
                  "showTitle": false,
                  "inputWidgets": {},
                  "nuid": "b5c38c38-a7f7-43f5-a15c-e387079ac8d7"
                }
              },
              "source": [
                "\n",
                "!pip install \u0022https://retaildatastore.blob.core.windows.net/artifacts/cdmsdk/commondatamodel-objectmodel-1.0.10-py3-none-any.whl?sp=r\u0026st=2021-02-11T11:46:58Z\u0026se=2022-02-11T19:46:58Z\u0026spr=https\u0026sv=2020-02-10\u0026sr=b\u0026sig=XXXXXXXXXXXXXXXXXXXXXXXX\u0022\n",
                ""
              ],
              "attachments": null,
              "outputs": [
                {
                  "output_type": "display_data",
                  "data": {
                    "text/html": "\u003Cstyle scoped\u003E\n  .ansiout {\n    display: block;\n    unicode-bidi: embed;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    word-break: break-all;\n    font-family: \u0022Source Code Pro\u0022, \u0022Menlo\u0022, monospace;;\n    font-size: 13px;\n    color: #555;\n    margin-left: 4px;\n    line-height: 19px;\n  }\n\u003C/style\u003E\n\u003Cdiv class=\u0022ansiout\u0022\u003E\u003C/div\u003E"
                  },
                  "metadata": {
                    "application/vnd.databricks.v1\u002Boutput": {
                      "datasetInfos": [],
                      "data": "\u003Cdiv class=\u0022ansiout\u0022\u003E\u003C/div\u003E",
                      "removedWidgets": [],
                      "addedWidgets": {},
                      "type": "html",
                      "arguments": {}
                    }
                  }
                }
              ],
              "execution_count": 0
            },
            {
              "cell_type": "code",
              "metadata": {
                "application/vnd.databricks.v1\u002Bcell": {
                  "title": "",
                  "showTitle": false,
                  "inputWidgets": {},
                  "nuid": "b255d876-363a-446e-a0fa-e51f866efa77"
                }
              },
              "source": [
                "\n",
                "\n",
                "# Generic imports\n",
                "import dotenv\n",
                "import json\n",
                "import numpy as np\n",
                "import os\n",
                "import fnmatch\n",
                "import shutil\n",
                "import random\n",
                "import string\n",
                "import pandas as pd\n",
                "import requests\n",
                "import asyncio\n",
                "import copy\n",
                "import functools\n",
                "import pathlib\n",
                "import string\n",
                "from datetime import datetime, timezone\n",
                "\n",
                "# Spark imports\n",
                "from pyspark.sql import SparkSession, SQLContext\n",
                "from pyspark.sql.types import *\n",
                "from pyspark.sql import functions as F\n",
                "\n",
                "# Recommenders imports\n",
                "# from azureiai.reco_utils.dataset.spark_splitters import spark_random_split\n",
                "# from azureiai.reco_utils.evaluation.spark_evaluation import (\n",
                "#     SparkRankingEvaluation,\n",
                "#     SparkRatingEvaluation,\n",
                "# )\n",
                "from pysarplus import SARPlus\n",
                "from azureiai.retail.cdm2ai.reader import CONFIG\n",
                "\n",
                "# AzureML imports\n",
                "import azureml.core\n",
                "from azureml.core.runconfig import JarLibrary\n",
                "from azureml.core.compute import ComputeTarget, DatabricksCompute\n",
                "from azureml.pipeline.steps import DatabricksStep\n",
                "from azureml.core.datastore import Datastore\n",
                "from azureml.data.data_reference import DataReference\n",
                "from azureml.core import Workspace\n",
                "from azureml.core.run import Run\n",
                "from azureml.core.experiment import Experiment\n",
                "from azureml.core import Environment\n",
                "from azureml.core.environment import CondaDependencies\n",
                "from azureml.core.environment import SparkPackage\n",
                "from azureml.core.model import Model\n",
                "from azureml.core.webservice import Webservice\n",
                "\n",
                "# Cosmos DB imports\n",
                "# Install Cosmos DB connector from: https://docs.databricks.com/data/data-sources/azure/cosmosdb-connector.html\n",
                "from azure.common.client_factory import get_client_from_json_dict\n",
                "\n",
                "# CDM imports\n",
                "from cdm.storage import ADLSAdapter\n",
                "from cdm.objectmodel import CdmCorpusDefinition, CdmManifestDefinition\n",
                "from cdm.persistence.cdmfolder import ManifestPersistence\n",
                "from cdm.persistence.cdmfolder.types import ManifestContent\n",
                "from cdm.storage import LocalAdapter, ADLSAdapter\n",
                "from cdm.utilities import time_utils\n",
                "\n",
                "from cdm.utilities.string_utils import kvprint\n",
                "\n",
                "# AKS imports\n",
                "from azureml.core.compute import AksCompute\n",
                "from azureml.core.compute_target import ComputeTargetException\n",
                "from azureml.core.webservice import AksWebservice\n",
                "from azureml.exceptions import WebserviceException\n",
                "from azureml.core.model import InferenceConfig\n",
                "\n",
                ""
              ],
              "attachments": null,
              "outputs": [
                {
                  "output_type": "display_data",
                  "data": {
                    "text/html": "\u003Cstyle scoped\u003E\n  .ansiout {\n    display: block;\n    unicode-bidi: embed;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    word-break: break-all;\n    font-family: \u0022Source Code Pro\u0022, \u0022Menlo\u0022, monospace;;\n    font-size: 13px;\n    color: #555;\n    margin-left: 4px;\n    line-height: 19px;\n  }\n\u003C/style\u003E\n\u003Cdiv class=\u0022ansiout\u0022\u003E\u003C/div\u003E"
                  },
                  "metadata": {
                    "application/vnd.databricks.v1\u002Boutput": {
                      "datasetInfos": [],
                      "data": "\u003Cdiv class=\u0022ansiout\u0022\u003E\u003C/div\u003E",
                      "removedWidgets": [],
                      "addedWidgets": {},
                      "type": "html",
                      "arguments": {}
                    }
                  }
                }
              ],
              "execution_count": 0
            },
            {
              "cell_type": "code",
              "metadata": {
                "application/vnd.databricks.v1\u002Bcell": {
                  "title": "",
                  "showTitle": false,
                  "inputWidgets": {},
                  "nuid": "bb6041f1-a825-41ae-ba4d-de6dff6e361a"
                }
              },
              "source": [
                "# Global variables\n",
                "# NOTE these variables are visible in the scope of the entire pipeline\n",
                "\n",
                "# Load the .env file to manage persistent variables\n",
                "_GLOBAL_DOTENV_PATH = pathlib.Path(dotenv.find_dotenv(\n",
                "    filename=\u0022/dbfs/FileStore/.env\u0022,\n",
                "    raise_error_if_not_found=True\n",
                "))\n",
                "\n",
                "# -------------------------------------------------------------------------\n",
                "# Azure general variables\n",
                "# -------------------------------------------------------------------------\n",
                "_GLOBAL_SUBSCRIPTION_ID = dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022subscription_id\u0022)\n",
                "_GLOBAL_RESOURCE_GROUP = dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022resource_group\u0022)\n",
                "_GLOBAL_CONFIG_DICT = {\n",
                "    \u0022clientIdKey\u0022: \u0022sp_client_id\u0022,\n",
                "    \u0022clientSecretKey\u0022: \u0022sp_password\u0022,\n",
                "    \u0022clientId\u0022: dbutils.secrets.get(scope=\u0022secrets\u0022, key=\u0022sp_client_id\u0022),\n",
                "    \u0022clientSecret\u0022: dbutils.secrets.get(scope=\u0022secrets\u0022, key=\u0022sp_password\u0022),\n",
                "    \u0022subscriptionId\u0022: _GLOBAL_SUBSCRIPTION_ID,\n",
                "    \u0022tenantId\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022tenant_id\u0022),\n",
                "    \u0022activeDirectoryEndpointUrl\u0022: \u0022https://login.microsoftonline.com\u0022,\n",
                "    \u0022resourceManagerEndpointUrl\u0022: \u0022https://management.azure.com/\u0022,\n",
                "    \u0022activeDirectoryGraphResourceId\u0022: \u0022https://graph.windows.net/\u0022,\n",
                "    \u0022sqlManagementEndpointUrl\u0022: \u0022https://management.core.windows.net:8443/\u0022,\n",
                "    \u0022galleryEndpointUrl\u0022: \u0022https://gallery.azure.com/\u0022,\n",
                "    \u0022managementEndpointUrl\u0022: \u0022https://management.core.windows.net/\u0022\n",
                "}\n",
                "\n",
                "# -------------------------------------------------------------------------\n",
                "# ADLS variables\n",
                "# -------------------------------------------------------------------------\n",
                "_GLOBAL_ADLS_ACCOUNT = dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022data_account\u0022)\n",
                "_GLOBAL_ADLS_CONTAINER = dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022data_container\u0022)\n",
                "_GLOBAL_ADLS_APPID = _GLOBAL_CONFIG_DICT[\u0022clientId\u0022]\n",
                "_GLOBAL_ADLS_DIRID = _GLOBAL_CONFIG_DICT[\u0022tenantId\u0022]\n",
                "_GLOBAL_ADLS_SECRET = _GLOBAL_CONFIG_DICT[\u0022clientSecret\u0022]\n",
                "_GLOBAL_ADLS_HOSTNAME = f\u0027{_GLOBAL_ADLS_ACCOUNT}.dfs.core.windows.net\u0027\n",
                "_GLOBAL_ADLS_DICT = {\n",
                "    \u0022adls_source\u0022: \u0022abfss://{0}@{1}.dfs.core.windows.net\u0022.format(_GLOBAL_ADLS_CONTAINER, _GLOBAL_ADLS_ACCOUNT),\n",
                "    \u0022oauth_endpoint\u0022: \u0022https://login.microsoftonline.com/{0}/oauth2/token\u0022.format(_GLOBAL_CONFIG_DICT[\u0022tenantId\u0022]),\n",
                "    \u0022adls_dfs_endpoint\u0022: \u0022{0}.dfs.core.windows.net\u0022.format(_GLOBAL_ADLS_ACCOUNT),\n",
                "    \u0022adls_container_mount_point\u0022: \u0022/mnt/{0}\u0022.format(_GLOBAL_ADLS_CONTAINER),\n",
                "    \u0022adls_resource_type\u0022: \u0022https://storage.azure.com\u0022,\n",
                "    \u0022adls_mount_root\u0022: \u0022/mnt\u0022,\n",
                "    \u0022adls_model_cache\u0022: \u0022dbfs:/mnt/{0}/cache\u0022.format(_GLOBAL_ADLS_CONTAINER)\n",
                "}\n",
                "\n",
                "# -------------------------------------------------------------------------\n",
                "# COSMOS DB variables\n",
                "# -------------------------------------------------------------------------\n",
                "_GLOBAL_DB_SECRETS = {\n",
                "    \u0022Endpoint\u0022: \u0022https://{0}.documents.azure.com:443/\u0022.format(dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022azure_cosmosdb_account_name\u0022)),\n",
                "    \u0022Masterkey\u0022: dbutils.secrets.get(scope=\u0022secrets\u0022, key=\u0022cosmosdb_primary_master_key\u0022),\n",
                "    \u0022Database\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022azure_cosmosdb_database\u0022),\n",
                "    \u0022Collection\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022azure_cosmosdb_container\u0022),\n",
                "    \u0022Upsert\u0022: True\n",
                "}\n",
                "\n",
                "# -------------------------------------------------------------------------\n",
                "# Data variables\n",
                "# -------------------------------------------------------------------------\n",
                "_GLOBAL_DATA_ROOT = dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022physical_data_model_directory\u0022)\n",
                "_GLOBAL_TPC_RAW_ROOT = \u0027tpcds-raw-data\u0027\n",
                "_GLOBAL_IDM_SCHEMA_ROOT = dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022logical_data_model_directory\u0022)\n",
                "_GLOBAL_DATA_NAME = dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022data_name\u0022)\n",
                "_GLOBAL_ADAPTER_PARTIAL = functools.partial(\n",
                "    ADLSAdapter,\n",
                "    hostname=_GLOBAL_ADLS_HOSTNAME,\n",
                "    tenant=_GLOBAL_ADLS_DIRID,\n",
                "    client_id=_GLOBAL_ADLS_APPID,\n",
                "    secret=_GLOBAL_ADLS_SECRET\n",
                ")\n",
                "_GLOBAL_CONFIG_JSON = copy.deepcopy(CONFIG)\n",
                "_GLOBAL_CONFIG_JSON[\u0022adls\u0022][\u0022account\u0022] = _GLOBAL_ADLS_ACCOUNT\n",
                "_GLOBAL_CONFIG_JSON[\u0022adls\u0022][\u0022container\u0022] = _GLOBAL_ADLS_CONTAINER\n",
                "_GLOBAL_CONFIG_JSON[\u0022adls\u0022][\u0022appid\u0022] = _GLOBAL_ADLS_APPID\n",
                "_GLOBAL_CONFIG_JSON[\u0022adls\u0022][\u0022dirid\u0022] = _GLOBAL_ADLS_DIRID\n",
                "_GLOBAL_CONFIG_JSON[\u0022adls\u0022][\u0022secret\u0022] = _GLOBAL_ADLS_SECRET\n",
                "_GLOBAL_CONFIG_JSON[\u0022adls\u0022][\u0022hostname\u0022] = _GLOBAL_ADLS_HOSTNAME\n",
                "_GLOBAL_CONFIG_JSON[\u0022cdm\u0022][\u0022data_root\u0022] = _GLOBAL_DATA_ROOT\n",
                "_GLOBAL_CONFIG_JSON[\u0022cdm\u0022][\u0022manifest_name\u0022] = \u0022{0}.manifest.cdm.json\u0022.format(dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022industry_data_model_name\u0022))\n",
                "_GLOBAL_INPUT_DATA_FILE = dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022processed_data_file\u0022)\n",
                "_GLOBAL_CUSTOMER_DATA_FILE = dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022processed_customer_data_file\u0022)\n",
                "\n",
                "# -------------------------------------------------------------------------\n",
                "# Model variables\n",
                "# -------------------------------------------------------------------------\n",
                "_GLOBAL_MODEL_LOCAL_CACHE = \u0027dbfs:/model/{0}\u0027.format(\n",
                "    \u0027\u0027.join(random.choice(string.ascii_lowercase) for i in range(10))\n",
                ")\n",
                "\n",
                "# -------------------------------------------------------------------------\n",
                "# Azure Machine Learning service variables\n",
                "# -------------------------------------------------------------------------\n",
                "_GLOBAL_AML_DICT = {\n",
                "    \u0022workspace_name\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022azureml_workspace\u0022),\n",
                "    \u0022model_file_name\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022azureml_model_file_name\u0022),\n",
                "    \u0022aml_experiment_name\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022azureml_experiment_name\u0022)\n",
                "}\n",
                "\n",
                "# -------------------------------------------------------------------------\n",
                "# Azure Kubernetes Service variables\n",
                "# -------------------------------------------------------------------------\n",
                "_GLOBAL_AKS_NAME = dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022aks_cluster_name\u0022)\n",
                "_GLOBAL_SERVICE_NAME = \u0022aks-service-{0}\u0022.format(dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022unique_key\u0022))\n",
                "_GLOBAL_AKS_CONFIG_LEVEL = dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022aks_config_level\u0022)\n",
                "_GLOBAL_AKS_COMPUTE_TARGET_NAME = \u0027aks\u0027 \u002B dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022unique_key\u0022)"
              ],
              "attachments": null,
              "outputs": [
                {
                  "output_type": "display_data",
                  "data": {
                    "text/html": "\u003Cstyle scoped\u003E\n  .ansiout {\n    display: block;\n    unicode-bidi: embed;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    word-break: break-all;\n    font-family: \u0022Source Code Pro\u0022, \u0022Menlo\u0022, monospace;;\n    font-size: 13px;\n    color: #555;\n    margin-left: 4px;\n    line-height: 19px;\n  }\n\u003C/style\u003E\n\u003Cdiv class=\u0022ansiout\u0022\u003E\u003C/div\u003E"
                  },
                  "metadata": {
                    "application/vnd.databricks.v1\u002Boutput": {
                      "datasetInfos": [],
                      "data": "\u003Cdiv class=\u0022ansiout\u0022\u003E\u003C/div\u003E",
                      "removedWidgets": [],
                      "addedWidgets": {},
                      "type": "html",
                      "arguments": {}
                    }
                  }
                },
                {
                  "output_type": "display_data",
                  "data": {
                    "text/html": "\u003Cstyle scoped\u003E\n  .ansiout {\n    display: block;\n    unicode-bidi: embed;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    word-break: break-all;\n    font-family: \u0022Source Code Pro\u0022, \u0022Menlo\u0022, monospace;;\n    font-size: 13px;\n    color: #555;\n    margin-left: 4px;\n    line-height: 19px;\n  }\n\u003C/style\u003E\n\u003Cdiv class=\u0022ansiout\u0022\u003E\u003Cspan class=\u0022ansi-red-fg\u0022\u003E---------------------------------------------------------------------------\u003C/span\u003E\n\u003Cspan class=\u0022ansi-red-fg\u0022\u003ENameError\u003C/span\u003E                                 Traceback (most recent call last)\n\u003Cspan class=\u0022ansi-green-fg\u0022\u003E\u0026lt;command-1159393715563018\u0026gt;\u003C/span\u003E in \u003Cspan class=\u0022ansi-cyan-fg\u0022\u003E\u0026lt;module\u0026gt;\u003C/span\u003E\n\u003Cspan class=\u0022ansi-green-intense-fg ansi-bold\u0022\u003E     66\u003C/span\u003E _GLOBAL_DATA_NAME \u003Cspan class=\u0022ansi-blue-fg\u0022\u003E=\u003C/span\u003E dotenv\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E.\u003C/span\u003Eget_key\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E(\u003C/span\u003E_GLOBAL_DOTENV_PATH\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E,\u003C/span\u003E \u003Cspan class=\u0022ansi-blue-fg\u0022\u003E\u0026#34;data_name\u0026#34;\u003C/span\u003E\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E)\u003C/span\u003E\n\u003Cspan class=\u0022ansi-green-intense-fg ansi-bold\u0022\u003E     67\u003C/span\u003E _GLOBAL_ADAPTER_PARTIAL = functools.partial(\n\u003Cspan class=\u0022ansi-green-fg\u0022\u003E---\u0026gt; 68\u003C/span\u003E\u003Cspan class=\u0022ansi-red-fg\u0022\u003E     \u003C/span\u003EADLSAdapter\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E,\u003C/span\u003E\n\u003Cspan class=\u0022ansi-green-intense-fg ansi-bold\u0022\u003E     69\u003C/span\u003E     hostname\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E=\u003C/span\u003E_GLOBAL_ADLS_HOSTNAME\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E,\u003C/span\u003E\n\u003Cspan class=\u0022ansi-green-intense-fg ansi-bold\u0022\u003E     70\u003C/span\u003E     tenant\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E=\u003C/span\u003E_GLOBAL_ADLS_DIRID\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E,\u003C/span\u003E\n\n\u003Cspan class=\u0022ansi-red-fg\u0022\u003ENameError\u003C/span\u003E: name \u0026#39;ADLSAdapter\u0026#39; is not defined\u003C/div\u003E"
                  },
                  "metadata": {
                    "application/vnd.databricks.v1\u002Boutput": {
                      "type": "ipynbError",
                      "data": "\u003Cdiv class=\u0022ansiout\u0022\u003E\u003Cspan class=\u0022ansi-red-fg\u0022\u003E---------------------------------------------------------------------------\u003C/span\u003E\n\u003Cspan class=\u0022ansi-red-fg\u0022\u003ENameError\u003C/span\u003E                                 Traceback (most recent call last)\n\u003Cspan class=\u0022ansi-green-fg\u0022\u003E\u0026lt;command-1159393715563018\u0026gt;\u003C/span\u003E in \u003Cspan class=\u0022ansi-cyan-fg\u0022\u003E\u0026lt;module\u0026gt;\u003C/span\u003E\n\u003Cspan class=\u0022ansi-green-intense-fg ansi-bold\u0022\u003E     66\u003C/span\u003E _GLOBAL_DATA_NAME \u003Cspan class=\u0022ansi-blue-fg\u0022\u003E=\u003C/span\u003E dotenv\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E.\u003C/span\u003Eget_key\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E(\u003C/span\u003E_GLOBAL_DOTENV_PATH\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E,\u003C/span\u003E \u003Cspan class=\u0022ansi-blue-fg\u0022\u003E\u0026#34;data_name\u0026#34;\u003C/span\u003E\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E)\u003C/span\u003E\n\u003Cspan class=\u0022ansi-green-intense-fg ansi-bold\u0022\u003E     67\u003C/span\u003E _GLOBAL_ADAPTER_PARTIAL = functools.partial(\n\u003Cspan class=\u0022ansi-green-fg\u0022\u003E---\u0026gt; 68\u003C/span\u003E\u003Cspan class=\u0022ansi-red-fg\u0022\u003E     \u003C/span\u003EADLSAdapter\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E,\u003C/span\u003E\n\u003Cspan class=\u0022ansi-green-intense-fg ansi-bold\u0022\u003E     69\u003C/span\u003E     hostname\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E=\u003C/span\u003E_GLOBAL_ADLS_HOSTNAME\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E,\u003C/span\u003E\n\u003Cspan class=\u0022ansi-green-intense-fg ansi-bold\u0022\u003E     70\u003C/span\u003E     tenant\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E=\u003C/span\u003E_GLOBAL_ADLS_DIRID\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E,\u003C/span\u003E\n\n\u003Cspan class=\u0022ansi-red-fg\u0022\u003ENameError\u003C/span\u003E: name \u0026#39;ADLSAdapter\u0026#39; is not defined\u003C/div\u003E",
                      "errorSummary": "\u003Cspan class=\u0022ansi-red-fg\u0022\u003ENameError\u003C/span\u003E: name \u0026#39;ADLSAdapter\u0026#39; is not defined",
                      "arguments": {}
                    }
                  }
                }
              ],
              "execution_count": 0
            },
            {
              "cell_type": "code",
              "metadata": {
                "application/vnd.databricks.v1\u002Bcell": {
                  "title": "",
                  "showTitle": false,
                  "inputWidgets": {},
                  "nuid": "639595d4-4083-4f33-a7d4-15af60e7b3d6"
                }
              },
              "source": [
                "# Spark initialization\n",
                "SUBMIT_ARGS = \u0022--packages eisber:sarplus:0.2.6 pyspark-shell\u0022\n",
                "os.environ[\u0022PYSPARK_SUBMIT_ARGS\u0022] = SUBMIT_ARGS\n",
                "\n",
                "spark = (\n",
                "    SparkSession.builder.appName(\u0022sample\u0022)\n",
                "    .master(\u0022local[*]\u0022)\n",
                "    .config(\u0022memory\u0022, \u00221G\u0022)\n",
                "    .config(\u0022spark.sql.shuffle.partitions\u0022, \u00221\u0022)\n",
                "    .config(\u0022spark.sql.crossJoin.enabled\u0022, True)\n",
                "    .config(\u0022spark.ui.enabled\u0022, False)\n",
                "    .getOrCreate()\n",
                ")\n",
                "\n",
                "# SqlContext helps with doing SQL like queries on spark DFs.\n",
                "sqlContext = SQLContext(spark)\n",
                "\n",
                "# Configure the Spark session to avoid using mount\n",
                "spark.conf.set(\u0022fs.azure.account.auth.type.{0}.dfs.core.windows.net\u0022.format(_GLOBAL_ADLS_ACCOUNT), \u0022OAuth\u0022)\n",
                "spark.conf.set(\n",
                "    \u0022fs.azure.account.oauth.provider.type.{0}.dfs.core.windows.net\u0022.format(_GLOBAL_ADLS_ACCOUNT),\n",
                "    \u0022org.apache.hadoop.fs.azurebfs.oauth2.ClientCredsTokenProvider\u0022,\n",
                ")\n",
                "spark.conf.set(\n",
                "    \u0022fs.azure.account.oauth2.client.id.{0}.dfs.core.windows.net\u0022.format(_GLOBAL_ADLS_ACCOUNT), _GLOBAL_ADLS_APPID\n",
                ")\n",
                "spark.conf.set(\n",
                "    \u0022fs.azure.account.oauth2.client.secret.{0}.dfs.core.windows.net\u0022.format(_GLOBAL_ADLS_ACCOUNT), _GLOBAL_ADLS_SECRET\n",
                ")\n",
                "spark.conf.set(\n",
                "    \u0022fs.azure.account.oauth2.client.endpoint.{0}.dfs.core.windows.net\u0022.format(_GLOBAL_ADLS_ACCOUNT),\n",
                "    \u0022https://login.microsoftonline.com/{0}/oauth2/token\u0022.format(_GLOBAL_ADLS_DIRID),\n",
                ")"
              ],
              "attachments": null,
              "outputs": [],
              "execution_count": 0
            },
            {
              "cell_type": "code",
              "metadata": {
                "application/vnd.databricks.v1\u002Bcell": {
                  "title": "",
                  "showTitle": false,
                  "inputWidgets": {},
                  "nuid": "614662de-2288-451e-b238-b6190156aac4"
                }
              },
              "source": [
                "# Mount the remove ADLS container on the local databricks\n",
                "\n",
                "# Unmount an existing mount point\n",
                "try:\n",
                "    dbutils.fs.unmount(_GLOBAL_ADLS_DICT[\u0022adls_container_mount_point\u0022])\n",
                "except Exception as ex:\n",
                "    if \u0022Directory not mounted\u0022 not in str(ex):\n",
                "        raise Exception(\u0022Error in unmounting\u0022)\n",
                "\n",
                "# Mount wit the provided configuration information\n",
                "configs = {\n",
                "    \u0022fs.azure.account.auth.type\u0022: \u0022OAuth\u0022,\n",
                "    \u0022fs.azure.account.oauth.provider.type\u0022: \u0022org.apache.hadoop.fs.azurebfs.oauth2.ClientCredsTokenProvider\u0022,\n",
                "    \u0022fs.azure.account.oauth2.client.id\u0022: _GLOBAL_CONFIG_DICT[\u0022clientId\u0022],\n",
                "    \u0022fs.azure.account.oauth2.client.secret\u0022: _GLOBAL_CONFIG_DICT[\u0022clientSecret\u0022],\n",
                "    \u0022fs.azure.account.oauth2.client.endpoint\u0022: _GLOBAL_ADLS_DICT[\u0022oauth_endpoint\u0022],\n",
                "}\n",
                "dbutils.fs.mount(\n",
                "    source=_GLOBAL_ADLS_DICT[\u0022adls_source\u0022],\n",
                "    mount_point=_GLOBAL_ADLS_DICT[\u0022adls_container_mount_point\u0022],\n",
                "    extra_configs=configs,\n",
                ")\n",
                "\n",
                "# List the contents in the mounted directory\n",
                "dbutils.fs.ls(_GLOBAL_ADLS_DICT[\u0022adls_container_mount_point\u0022])\n",
                "\n",
                "# Make a new directory for model cache use\n",
                "dbutils.fs.mkdirs(_GLOBAL_ADLS_DICT[\u0022adls_model_cache\u0022])"
              ],
              "attachments": null,
              "outputs": [],
              "execution_count": 0
            }
          ],
          "folder": null
        },
        "etag": "0e003468-0000-0100-0000-611a2ee30000"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/dongwwanb1?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-1ef316711567b44eb1cdd7a7287c82f1-4856993fc371744c-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "dc26e40a677e3d4a0a125b64e87c0859",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:51 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "dc26e40a677e3d4a0a125b64e87c0859",
        "x-ms-request-id": "f3f529e7-04a8-4fcd-b9f3-54273367ab1e"
      },
      "ResponseBody": {
        "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/dongwwanb1",
        "name": "dongwwanb1",
        "type": "Microsoft.Synapse/workspaces/notebooks",
        "properties": {
          "nbformat": 4,
          "nbformat_minor": 0,
          "entityState": null,
          "renameOperationDetails": null,
          "bigDataPool": null,
          "sessionProperties": null,
          "metadata": {
            "language_info": null,
            "a365ComputeOptions": null,
            "sessionKeepAliveTimeout": 0,
            "application/vnd.databricks.v1\u002Bnotebook": {
              "notebookName": "config",
              "dashboards": [],
              "language": "python",
              "widgets": {},
              "notebookOrigID": 1159393715563015
            }
          },
          "cells": [
            {
              "cell_type": "markdown",
              "metadata": {
                "application/vnd.databricks.v1\u002Bcell": {
                  "title": "",
                  "showTitle": false,
                  "inputWidgets": {},
                  "nuid": "ec9689e6-a215-42cf-aa9f-85a38cca6362"
                }
              },
              "source": [
                "Copyright (c) Microsoft Corporation. All rights reserved."
              ],
              "attachments": null,
              "outputs": [],
              "execution_count": null
            },
            {
              "cell_type": "code",
              "metadata": {
                "application/vnd.databricks.v1\u002Bcell": {
                  "title": "",
                  "showTitle": false,
                  "inputWidgets": {},
                  "nuid": "4eb23c41-ffd4-412f-a887-102462d4d316"
                }
              },
              "source": [
                "# Disable the verbose log\nimport logging\nlogging.getLogger(\u0022py4j\u0022).setLevel(logging.ERROR)"
              ],
              "attachments": null,
              "outputs": [
                {
                  "output_type": "display_data",
                  "data": {
                    "text/html": [
                      "\u003Cstyle scoped\u003E\n  .ansiout {\n    display: block;\n    unicode-bidi: embed;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    word-break: break-all;\n    font-family: \u0022Source Code Pro\u0022, \u0022Menlo\u0022, monospace;;\n    font-size: 13px;\n    color: #555;\n    margin-left: 4px;\n    line-height: 19px;\n  }\n\u003C/style\u003E\n\u003Cdiv class=\u0022ansiout\u0022\u003E\u003C/div\u003E"
                    ]
                  },
                  "metadata": {
                    "application/vnd.databricks.v1\u002Boutput": {
                      "datasetInfos": [],
                      "data": "\u003Cdiv class=\u0022ansiout\u0022\u003E\u003C/div\u003E",
                      "removedWidgets": [],
                      "addedWidgets": {},
                      "type": "html",
                      "arguments": {}
                    }
                  }
                }
              ],
              "execution_count": 0
            },
            {
              "cell_type": "code",
              "metadata": {
                "application/vnd.databricks.v1\u002Bcell": {
                  "title": "",
                  "showTitle": false,
                  "inputWidgets": {},
                  "nuid": "b5c38c38-a7f7-43f5-a15c-e387079ac8d7"
                }
              },
              "source": [
                "\n!pip install \u0022https://retaildatastore.blob.core.windows.net/artifacts/cdmsdk/commondatamodel-objectmodel-1.0.10-py3-none-any.whl?sp=r\u0026st=2021-02-11T11:46:58Z\u0026se=2022-02-11T19:46:58Z\u0026spr=https\u0026sv=2020-02-10\u0026sr=b\u0026sig=XXXXXXXXXXXXXXXXXXXXXXXX\u0022\n"
              ],
              "attachments": null,
              "outputs": [
                {
                  "output_type": "display_data",
                  "data": {
                    "text/html": [
                      "\u003Cstyle scoped\u003E\n  .ansiout {\n    display: block;\n    unicode-bidi: embed;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    word-break: break-all;\n    font-family: \u0022Source Code Pro\u0022, \u0022Menlo\u0022, monospace;;\n    font-size: 13px;\n    color: #555;\n    margin-left: 4px;\n    line-height: 19px;\n  }\n\u003C/style\u003E\n\u003Cdiv class=\u0022ansiout\u0022\u003E\u003C/div\u003E"
                    ]
                  },
                  "metadata": {
                    "application/vnd.databricks.v1\u002Boutput": {
                      "datasetInfos": [],
                      "data": "\u003Cdiv class=\u0022ansiout\u0022\u003E\u003C/div\u003E",
                      "removedWidgets": [],
                      "addedWidgets": {},
                      "type": "html",
                      "arguments": {}
                    }
                  }
                }
              ],
              "execution_count": 0
            },
            {
              "cell_type": "code",
              "metadata": {
                "application/vnd.databricks.v1\u002Bcell": {
                  "title": "",
                  "showTitle": false,
                  "inputWidgets": {},
                  "nuid": "b255d876-363a-446e-a0fa-e51f866efa77"
                }
              },
              "source": [
                "\n\n# Generic imports\nimport dotenv\nimport json\nimport numpy as np\nimport os\nimport fnmatch\nimport shutil\nimport random\nimport string\nimport pandas as pd\nimport requests\nimport asyncio\nimport copy\nimport functools\nimport pathlib\nimport string\nfrom datetime import datetime, timezone\n\n# Spark imports\nfrom pyspark.sql import SparkSession, SQLContext\nfrom pyspark.sql.types import *\nfrom pyspark.sql import functions as F\n\n# Recommenders imports\n# from azureiai.reco_utils.dataset.spark_splitters import spark_random_split\n# from azureiai.reco_utils.evaluation.spark_evaluation import (\n#     SparkRankingEvaluation,\n#     SparkRatingEvaluation,\n# )\nfrom pysarplus import SARPlus\nfrom azureiai.retail.cdm2ai.reader import CONFIG\n\n# AzureML imports\nimport azureml.core\nfrom azureml.core.runconfig import JarLibrary\nfrom azureml.core.compute import ComputeTarget, DatabricksCompute\nfrom azureml.pipeline.steps import DatabricksStep\nfrom azureml.core.datastore import Datastore\nfrom azureml.data.data_reference import DataReference\nfrom azureml.core import Workspace\nfrom azureml.core.run import Run\nfrom azureml.core.experiment import Experiment\nfrom azureml.core import Environment\nfrom azureml.core.environment import CondaDependencies\nfrom azureml.core.environment import SparkPackage\nfrom azureml.core.model import Model\nfrom azureml.core.webservice import Webservice\n\n# Cosmos DB imports\n# Install Cosmos DB connector from: https://docs.databricks.com/data/data-sources/azure/cosmosdb-connector.html\nfrom azure.common.client_factory import get_client_from_json_dict\n\n# CDM imports\nfrom cdm.storage import ADLSAdapter\nfrom cdm.objectmodel import CdmCorpusDefinition, CdmManifestDefinition\nfrom cdm.persistence.cdmfolder import ManifestPersistence\nfrom cdm.persistence.cdmfolder.types import ManifestContent\nfrom cdm.storage import LocalAdapter, ADLSAdapter\nfrom cdm.utilities import time_utils\n\nfrom cdm.utilities.string_utils import kvprint\n\n# AKS imports\nfrom azureml.core.compute import AksCompute\nfrom azureml.core.compute_target import ComputeTargetException\nfrom azureml.core.webservice import AksWebservice\nfrom azureml.exceptions import WebserviceException\nfrom azureml.core.model import InferenceConfig\n\n"
              ],
              "attachments": null,
              "outputs": [
                {
                  "output_type": "display_data",
                  "data": {
                    "text/html": [
                      "\u003Cstyle scoped\u003E\n  .ansiout {\n    display: block;\n    unicode-bidi: embed;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    word-break: break-all;\n    font-family: \u0022Source Code Pro\u0022, \u0022Menlo\u0022, monospace;;\n    font-size: 13px;\n    color: #555;\n    margin-left: 4px;\n    line-height: 19px;\n  }\n\u003C/style\u003E\n\u003Cdiv class=\u0022ansiout\u0022\u003E\u003C/div\u003E"
                    ]
                  },
                  "metadata": {
                    "application/vnd.databricks.v1\u002Boutput": {
                      "datasetInfos": [],
                      "data": "\u003Cdiv class=\u0022ansiout\u0022\u003E\u003C/div\u003E",
                      "removedWidgets": [],
                      "addedWidgets": {},
                      "type": "html",
                      "arguments": {}
                    }
                  }
                }
              ],
              "execution_count": 0
            },
            {
              "cell_type": "code",
              "metadata": {
                "application/vnd.databricks.v1\u002Bcell": {
                  "title": "",
                  "showTitle": false,
                  "inputWidgets": {},
                  "nuid": "bb6041f1-a825-41ae-ba4d-de6dff6e361a"
                }
              },
              "source": [
                "# Global variables\n# NOTE these variables are visible in the scope of the entire pipeline\n\n# Load the .env file to manage persistent variables\n_GLOBAL_DOTENV_PATH = pathlib.Path(dotenv.find_dotenv(\n    filename=\u0022/dbfs/FileStore/.env\u0022,\n    raise_error_if_not_found=True\n))\n\n# -------------------------------------------------------------------------\n# Azure general variables\n# -------------------------------------------------------------------------\n_GLOBAL_SUBSCRIPTION_ID = dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022subscription_id\u0022)\n_GLOBAL_RESOURCE_GROUP = dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022resource_group\u0022)\n_GLOBAL_CONFIG_DICT = {\n    \u0022clientIdKey\u0022: \u0022sp_client_id\u0022,\n    \u0022clientSecretKey\u0022: \u0022sp_password\u0022,\n    \u0022clientId\u0022: dbutils.secrets.get(scope=\u0022secrets\u0022, key=\u0022sp_client_id\u0022),\n    \u0022clientSecret\u0022: dbutils.secrets.get(scope=\u0022secrets\u0022, key=\u0022sp_password\u0022),\n    \u0022subscriptionId\u0022: _GLOBAL_SUBSCRIPTION_ID,\n    \u0022tenantId\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022tenant_id\u0022),\n    \u0022activeDirectoryEndpointUrl\u0022: \u0022https://login.microsoftonline.com\u0022,\n    \u0022resourceManagerEndpointUrl\u0022: \u0022https://management.azure.com/\u0022,\n    \u0022activeDirectoryGraphResourceId\u0022: \u0022https://graph.windows.net/\u0022,\n    \u0022sqlManagementEndpointUrl\u0022: \u0022https://management.core.windows.net:8443/\u0022,\n    \u0022galleryEndpointUrl\u0022: \u0022https://gallery.azure.com/\u0022,\n    \u0022managementEndpointUrl\u0022: \u0022https://management.core.windows.net/\u0022\n}\n\n# -------------------------------------------------------------------------\n# ADLS variables\n# -------------------------------------------------------------------------\n_GLOBAL_ADLS_ACCOUNT = dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022data_account\u0022)\n_GLOBAL_ADLS_CONTAINER = dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022data_container\u0022)\n_GLOBAL_ADLS_APPID = _GLOBAL_CONFIG_DICT[\u0022clientId\u0022]\n_GLOBAL_ADLS_DIRID = _GLOBAL_CONFIG_DICT[\u0022tenantId\u0022]\n_GLOBAL_ADLS_SECRET = _GLOBAL_CONFIG_DICT[\u0022clientSecret\u0022]\n_GLOBAL_ADLS_HOSTNAME = f\u0027{_GLOBAL_ADLS_ACCOUNT}.dfs.core.windows.net\u0027\n_GLOBAL_ADLS_DICT = {\n    \u0022adls_source\u0022: \u0022abfss://{0}@{1}.dfs.core.windows.net\u0022.format(_GLOBAL_ADLS_CONTAINER, _GLOBAL_ADLS_ACCOUNT),\n    \u0022oauth_endpoint\u0022: \u0022https://login.microsoftonline.com/{0}/oauth2/token\u0022.format(_GLOBAL_CONFIG_DICT[\u0022tenantId\u0022]),\n    \u0022adls_dfs_endpoint\u0022: \u0022{0}.dfs.core.windows.net\u0022.format(_GLOBAL_ADLS_ACCOUNT),\n    \u0022adls_container_mount_point\u0022: \u0022/mnt/{0}\u0022.format(_GLOBAL_ADLS_CONTAINER),\n    \u0022adls_resource_type\u0022: \u0022https://storage.azure.com\u0022,\n    \u0022adls_mount_root\u0022: \u0022/mnt\u0022,\n    \u0022adls_model_cache\u0022: \u0022dbfs:/mnt/{0}/cache\u0022.format(_GLOBAL_ADLS_CONTAINER)\n}\n\n# -------------------------------------------------------------------------\n# COSMOS DB variables\n# -------------------------------------------------------------------------\n_GLOBAL_DB_SECRETS = {\n    \u0022Endpoint\u0022: \u0022https://{0}.documents.azure.com:443/\u0022.format(dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022azure_cosmosdb_account_name\u0022)),\n    \u0022Masterkey\u0022: dbutils.secrets.get(scope=\u0022secrets\u0022, key=\u0022cosmosdb_primary_master_key\u0022),\n    \u0022Database\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022azure_cosmosdb_database\u0022),\n    \u0022Collection\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022azure_cosmosdb_container\u0022),\n    \u0022Upsert\u0022: True\n}\n\n# -------------------------------------------------------------------------\n# Data variables\n# -------------------------------------------------------------------------\n_GLOBAL_DATA_ROOT = dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022physical_data_model_directory\u0022)\n_GLOBAL_TPC_RAW_ROOT = \u0027tpcds-raw-data\u0027\n_GLOBAL_IDM_SCHEMA_ROOT = dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022logical_data_model_directory\u0022)\n_GLOBAL_DATA_NAME = dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022data_name\u0022)\n_GLOBAL_ADAPTER_PARTIAL = functools.partial(\n    ADLSAdapter,\n    hostname=_GLOBAL_ADLS_HOSTNAME,\n    tenant=_GLOBAL_ADLS_DIRID,\n    client_id=_GLOBAL_ADLS_APPID,\n    secret=_GLOBAL_ADLS_SECRET\n)\n_GLOBAL_CONFIG_JSON = copy.deepcopy(CONFIG)\n_GLOBAL_CONFIG_JSON[\u0022adls\u0022][\u0022account\u0022] = _GLOBAL_ADLS_ACCOUNT\n_GLOBAL_CONFIG_JSON[\u0022adls\u0022][\u0022container\u0022] = _GLOBAL_ADLS_CONTAINER\n_GLOBAL_CONFIG_JSON[\u0022adls\u0022][\u0022appid\u0022] = _GLOBAL_ADLS_APPID\n_GLOBAL_CONFIG_JSON[\u0022adls\u0022][\u0022dirid\u0022] = _GLOBAL_ADLS_DIRID\n_GLOBAL_CONFIG_JSON[\u0022adls\u0022][\u0022secret\u0022] = _GLOBAL_ADLS_SECRET\n_GLOBAL_CONFIG_JSON[\u0022adls\u0022][\u0022hostname\u0022] = _GLOBAL_ADLS_HOSTNAME\n_GLOBAL_CONFIG_JSON[\u0022cdm\u0022][\u0022data_root\u0022] = _GLOBAL_DATA_ROOT\n_GLOBAL_CONFIG_JSON[\u0022cdm\u0022][\u0022manifest_name\u0022] = \u0022{0}.manifest.cdm.json\u0022.format(dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022industry_data_model_name\u0022))\n_GLOBAL_INPUT_DATA_FILE = dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022processed_data_file\u0022)\n_GLOBAL_CUSTOMER_DATA_FILE = dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022processed_customer_data_file\u0022)\n\n# -------------------------------------------------------------------------\n# Model variables\n# -------------------------------------------------------------------------\n_GLOBAL_MODEL_LOCAL_CACHE = \u0027dbfs:/model/{0}\u0027.format(\n    \u0027\u0027.join(random.choice(string.ascii_lowercase) for i in range(10))\n)\n\n# -------------------------------------------------------------------------\n# Azure Machine Learning service variables\n# -------------------------------------------------------------------------\n_GLOBAL_AML_DICT = {\n    \u0022workspace_name\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022azureml_workspace\u0022),\n    \u0022model_file_name\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022azureml_model_file_name\u0022),\n    \u0022aml_experiment_name\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022azureml_experiment_name\u0022)\n}\n\n# -------------------------------------------------------------------------\n# Azure Kubernetes Service variables\n# -------------------------------------------------------------------------\n_GLOBAL_AKS_NAME = dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022aks_cluster_name\u0022)\n_GLOBAL_SERVICE_NAME = \u0022aks-service-{0}\u0022.format(dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022unique_key\u0022))\n_GLOBAL_AKS_CONFIG_LEVEL = dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022aks_config_level\u0022)\n_GLOBAL_AKS_COMPUTE_TARGET_NAME = \u0027aks\u0027 \u002B dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022unique_key\u0022)"
              ],
              "attachments": null,
              "outputs": [
                {
                  "output_type": "display_data",
                  "data": {
                    "text/html": [
                      "\u003Cstyle scoped\u003E\n  .ansiout {\n    display: block;\n    unicode-bidi: embed;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    word-break: break-all;\n    font-family: \u0022Source Code Pro\u0022, \u0022Menlo\u0022, monospace;;\n    font-size: 13px;\n    color: #555;\n    margin-left: 4px;\n    line-height: 19px;\n  }\n\u003C/style\u003E\n\u003Cdiv class=\u0022ansiout\u0022\u003E\u003C/div\u003E"
                    ]
                  },
                  "metadata": {
                    "application/vnd.databricks.v1\u002Boutput": {
                      "datasetInfos": [],
                      "data": "\u003Cdiv class=\u0022ansiout\u0022\u003E\u003C/div\u003E",
                      "removedWidgets": [],
                      "addedWidgets": {},
                      "type": "html",
                      "arguments": {}
                    }
                  }
                },
                {
                  "output_type": "display_data",
                  "data": {
                    "text/html": [
                      "\u003Cstyle scoped\u003E\n  .ansiout {\n    display: block;\n    unicode-bidi: embed;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    word-break: break-all;\n    font-family: \u0022Source Code Pro\u0022, \u0022Menlo\u0022, monospace;;\n    font-size: 13px;\n    color: #555;\n    margin-left: 4px;\n    line-height: 19px;\n  }\n\u003C/style\u003E\n\u003Cdiv class=\u0022ansiout\u0022\u003E\u003Cspan class=\u0022ansi-red-fg\u0022\u003E---------------------------------------------------------------------------\u003C/span\u003E\n\u003Cspan class=\u0022ansi-red-fg\u0022\u003ENameError\u003C/span\u003E                                 Traceback (most recent call last)\n\u003Cspan class=\u0022ansi-green-fg\u0022\u003E\u0026lt;command-1159393715563018\u0026gt;\u003C/span\u003E in \u003Cspan class=\u0022ansi-cyan-fg\u0022\u003E\u0026lt;module\u0026gt;\u003C/span\u003E\n\u003Cspan class=\u0022ansi-green-intense-fg ansi-bold\u0022\u003E     66\u003C/span\u003E _GLOBAL_DATA_NAME \u003Cspan class=\u0022ansi-blue-fg\u0022\u003E=\u003C/span\u003E dotenv\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E.\u003C/span\u003Eget_key\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E(\u003C/span\u003E_GLOBAL_DOTENV_PATH\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E,\u003C/span\u003E \u003Cspan class=\u0022ansi-blue-fg\u0022\u003E\u0026#34;data_name\u0026#34;\u003C/span\u003E\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E)\u003C/span\u003E\n\u003Cspan class=\u0022ansi-green-intense-fg ansi-bold\u0022\u003E     67\u003C/span\u003E _GLOBAL_ADAPTER_PARTIAL = functools.partial(\n\u003Cspan class=\u0022ansi-green-fg\u0022\u003E---\u0026gt; 68\u003C/span\u003E\u003Cspan class=\u0022ansi-red-fg\u0022\u003E     \u003C/span\u003EADLSAdapter\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E,\u003C/span\u003E\n\u003Cspan class=\u0022ansi-green-intense-fg ansi-bold\u0022\u003E     69\u003C/span\u003E     hostname\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E=\u003C/span\u003E_GLOBAL_ADLS_HOSTNAME\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E,\u003C/span\u003E\n\u003Cspan class=\u0022ansi-green-intense-fg ansi-bold\u0022\u003E     70\u003C/span\u003E     tenant\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E=\u003C/span\u003E_GLOBAL_ADLS_DIRID\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E,\u003C/span\u003E\n\n\u003Cspan class=\u0022ansi-red-fg\u0022\u003ENameError\u003C/span\u003E: name \u0026#39;ADLSAdapter\u0026#39; is not defined\u003C/div\u003E"
                    ]
                  },
                  "metadata": {
                    "application/vnd.databricks.v1\u002Boutput": {
                      "type": "ipynbError",
                      "data": "\u003Cdiv class=\u0022ansiout\u0022\u003E\u003Cspan class=\u0022ansi-red-fg\u0022\u003E---------------------------------------------------------------------------\u003C/span\u003E\n\u003Cspan class=\u0022ansi-red-fg\u0022\u003ENameError\u003C/span\u003E                                 Traceback (most recent call last)\n\u003Cspan class=\u0022ansi-green-fg\u0022\u003E\u0026lt;command-1159393715563018\u0026gt;\u003C/span\u003E in \u003Cspan class=\u0022ansi-cyan-fg\u0022\u003E\u0026lt;module\u0026gt;\u003C/span\u003E\n\u003Cspan class=\u0022ansi-green-intense-fg ansi-bold\u0022\u003E     66\u003C/span\u003E _GLOBAL_DATA_NAME \u003Cspan class=\u0022ansi-blue-fg\u0022\u003E=\u003C/span\u003E dotenv\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E.\u003C/span\u003Eget_key\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E(\u003C/span\u003E_GLOBAL_DOTENV_PATH\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E,\u003C/span\u003E \u003Cspan class=\u0022ansi-blue-fg\u0022\u003E\u0026#34;data_name\u0026#34;\u003C/span\u003E\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E)\u003C/span\u003E\n\u003Cspan class=\u0022ansi-green-intense-fg ansi-bold\u0022\u003E     67\u003C/span\u003E _GLOBAL_ADAPTER_PARTIAL = functools.partial(\n\u003Cspan class=\u0022ansi-green-fg\u0022\u003E---\u0026gt; 68\u003C/span\u003E\u003Cspan class=\u0022ansi-red-fg\u0022\u003E     \u003C/span\u003EADLSAdapter\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E,\u003C/span\u003E\n\u003Cspan class=\u0022ansi-green-intense-fg ansi-bold\u0022\u003E     69\u003C/span\u003E     hostname\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E=\u003C/span\u003E_GLOBAL_ADLS_HOSTNAME\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E,\u003C/span\u003E\n\u003Cspan class=\u0022ansi-green-intense-fg ansi-bold\u0022\u003E     70\u003C/span\u003E     tenant\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E=\u003C/span\u003E_GLOBAL_ADLS_DIRID\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E,\u003C/span\u003E\n\n\u003Cspan class=\u0022ansi-red-fg\u0022\u003ENameError\u003C/span\u003E: name \u0026#39;ADLSAdapter\u0026#39; is not defined\u003C/div\u003E",
                      "errorSummary": "\u003Cspan class=\u0022ansi-red-fg\u0022\u003ENameError\u003C/span\u003E: name \u0026#39;ADLSAdapter\u0026#39; is not defined",
                      "arguments": {}
                    }
                  }
                }
              ],
              "execution_count": 0
            },
            {
              "cell_type": "code",
              "metadata": {
                "application/vnd.databricks.v1\u002Bcell": {
                  "title": "",
                  "showTitle": false,
                  "inputWidgets": {},
                  "nuid": "639595d4-4083-4f33-a7d4-15af60e7b3d6"
                }
              },
              "source": [
                "# Spark initialization\nSUBMIT_ARGS = \u0022--packages eisber:sarplus:0.2.6 pyspark-shell\u0022\nos.environ[\u0022PYSPARK_SUBMIT_ARGS\u0022] = SUBMIT_ARGS\n\nspark = (\n    SparkSession.builder.appName(\u0022sample\u0022)\n    .master(\u0022local[*]\u0022)\n    .config(\u0022memory\u0022, \u00221G\u0022)\n    .config(\u0022spark.sql.shuffle.partitions\u0022, \u00221\u0022)\n    .config(\u0022spark.sql.crossJoin.enabled\u0022, True)\n    .config(\u0022spark.ui.enabled\u0022, False)\n    .getOrCreate()\n)\n\n# SqlContext helps with doing SQL like queries on spark DFs.\nsqlContext = SQLContext(spark)\n\n# Configure the Spark session to avoid using mount\nspark.conf.set(\u0022fs.azure.account.auth.type.{0}.dfs.core.windows.net\u0022.format(_GLOBAL_ADLS_ACCOUNT), \u0022OAuth\u0022)\nspark.conf.set(\n    \u0022fs.azure.account.oauth.provider.type.{0}.dfs.core.windows.net\u0022.format(_GLOBAL_ADLS_ACCOUNT),\n    \u0022org.apache.hadoop.fs.azurebfs.oauth2.ClientCredsTokenProvider\u0022,\n)\nspark.conf.set(\n    \u0022fs.azure.account.oauth2.client.id.{0}.dfs.core.windows.net\u0022.format(_GLOBAL_ADLS_ACCOUNT), _GLOBAL_ADLS_APPID\n)\nspark.conf.set(\n    \u0022fs.azure.account.oauth2.client.secret.{0}.dfs.core.windows.net\u0022.format(_GLOBAL_ADLS_ACCOUNT), _GLOBAL_ADLS_SECRET\n)\nspark.conf.set(\n    \u0022fs.azure.account.oauth2.client.endpoint.{0}.dfs.core.windows.net\u0022.format(_GLOBAL_ADLS_ACCOUNT),\n    \u0022https://login.microsoftonline.com/{0}/oauth2/token\u0022.format(_GLOBAL_ADLS_DIRID),\n)"
              ],
              "attachments": null,
              "outputs": [],
              "execution_count": 0
            },
            {
              "cell_type": "code",
              "metadata": {
                "application/vnd.databricks.v1\u002Bcell": {
                  "title": "",
                  "showTitle": false,
                  "inputWidgets": {},
                  "nuid": "614662de-2288-451e-b238-b6190156aac4"
                }
              },
              "source": [
                "# Mount the remove ADLS container on the local databricks\n\n# Unmount an existing mount point\ntry:\n    dbutils.fs.unmount(_GLOBAL_ADLS_DICT[\u0022adls_container_mount_point\u0022])\nexcept Exception as ex:\n    if \u0022Directory not mounted\u0022 not in str(ex):\n        raise Exception(\u0022Error in unmounting\u0022)\n\n# Mount wit the provided configuration information\nconfigs = {\n    \u0022fs.azure.account.auth.type\u0022: \u0022OAuth\u0022,\n    \u0022fs.azure.account.oauth.provider.type\u0022: \u0022org.apache.hadoop.fs.azurebfs.oauth2.ClientCredsTokenProvider\u0022,\n    \u0022fs.azure.account.oauth2.client.id\u0022: _GLOBAL_CONFIG_DICT[\u0022clientId\u0022],\n    \u0022fs.azure.account.oauth2.client.secret\u0022: _GLOBAL_CONFIG_DICT[\u0022clientSecret\u0022],\n    \u0022fs.azure.account.oauth2.client.endpoint\u0022: _GLOBAL_ADLS_DICT[\u0022oauth_endpoint\u0022],\n}\ndbutils.fs.mount(\n    source=_GLOBAL_ADLS_DICT[\u0022adls_source\u0022],\n    mount_point=_GLOBAL_ADLS_DICT[\u0022adls_container_mount_point\u0022],\n    extra_configs=configs,\n)\n\n# List the contents in the mounted directory\ndbutils.fs.ls(_GLOBAL_ADLS_DICT[\u0022adls_container_mount_point\u0022])\n\n# Make a new directory for model cache use\ndbutils.fs.mkdirs(_GLOBAL_ADLS_DICT[\u0022adls_model_cache\u0022])"
              ],
              "attachments": null,
              "outputs": [],
              "execution_count": 0
            }
          ],
          "folder": null
        },
        "etag": "0000f8ed-0000-0100-0000-605349810000"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/testclinb?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-169580d1a3a98d4b8dc8c528db892497-38ec983e93f4174a-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "90c8d13a6e74c31dc66e9b54ed259067",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:52 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "90c8d13a6e74c31dc66e9b54ed259067",
        "x-ms-request-id": "2f7bdfd6-efa0-4e33-b335-a9a24a420264"
      },
      "ResponseBody": {
        "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/testclinb",
        "name": "testclinb",
        "type": "Microsoft.Synapse/workspaces/notebooks",
        "properties": {
          "nbformat": 4,
          "nbformat_minor": 0,
          "entityState": null,
          "renameOperationDetails": null,
          "bigDataPool": null,
          "sessionProperties": {
            "driverMemory": "28g",
            "driverCores": 4,
            "executorMemory": "28g",
            "executorCores": 4,
            "numExecutors": 2,
            "conf": {
              "spark.dynamicAllocation.enabled": "false",
              "spark.dynamicAllocation.minExecutors": "2",
              "spark.dynamicAllocation.maxExecutors": "2"
            }
          },
          "metadata": {
            "language_info": {
              "name": "python"
            },
            "a365ComputeOptions": null,
            "sessionKeepAliveTimeout": 30,
            "saveOutput": true,
            "synapse_widget": {
              "version": "0.1",
              "state": {}
            },
            "kernelspec": {
              "name": "synapse_pyspark",
              "display_name": "python"
            }
          },
          "cells": [
            {
              "cell_type": "markdown",
              "metadata": {
                "application/vnd.databricks.v1\u002Bcell": {
                  "title": "",
                  "showTitle": false,
                  "inputWidgets": {},
                  "nuid": "ec9689e6-a215-42cf-aa9f-85a38cca6362"
                }
              },
              "source": [
                "Copyright (c) Microsoft Corporation. All rights reserved."
              ],
              "attachments": null,
              "outputs": [],
              "execution_count": null
            },
            {
              "cell_type": "code",
              "metadata": {
                "application/vnd.databricks.v1\u002Bcell": {
                  "title": "",
                  "showTitle": false,
                  "inputWidgets": {},
                  "nuid": "4eb23c41-ffd4-412f-a887-102462d4d316"
                }
              },
              "source": [
                "# Disable the verbose log\n",
                "import logging\n",
                "logging.getLogger(\u0022py4j\u0022).setLevel(logging.ERROR)"
              ],
              "attachments": null,
              "outputs": [
                {
                  "output_type": "display_data",
                  "data": {
                    "text/html": "\u003Cstyle scoped\u003E\n  .ansiout {\n    display: block;\n    unicode-bidi: embed;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    word-break: break-all;\n    font-family: \u0022Source Code Pro\u0022, \u0022Menlo\u0022, monospace;;\n    font-size: 13px;\n    color: #555;\n    margin-left: 4px;\n    line-height: 19px;\n  }\n\u003C/style\u003E\n\u003Cdiv class=\u0022ansiout\u0022\u003E\u003C/div\u003E"
                  },
                  "metadata": {
                    "application/vnd.databricks.v1\u002Boutput": {
                      "datasetInfos": [],
                      "data": "\u003Cdiv class=\u0022ansiout\u0022\u003E\u003C/div\u003E",
                      "removedWidgets": [],
                      "addedWidgets": {},
                      "type": "html",
                      "arguments": {}
                    }
                  }
                }
              ],
              "execution_count": 0
            },
            {
              "cell_type": "code",
              "metadata": {
                "application/vnd.databricks.v1\u002Bcell": {
                  "title": "",
                  "showTitle": false,
                  "inputWidgets": {},
                  "nuid": "b5c38c38-a7f7-43f5-a15c-e387079ac8d7"
                }
              },
              "source": [
                "\n",
                "!pip install \u0022https://retaildatastore.blob.core.windows.net/artifacts/cdmsdk/commondatamodel-objectmodel-1.0.10-py3-none-any.whl?sp=r\u0026st=2021-02-11T11:46:58Z\u0026se=2022-02-11T19:46:58Z\u0026spr=https\u0026sv=2020-02-10\u0026sr=b\u0026sig=XXXXXXXXXXXXXXXXXXXXXXXX\u0022\n",
                ""
              ],
              "attachments": null,
              "outputs": [
                {
                  "output_type": "display_data",
                  "data": {
                    "text/html": "\u003Cstyle scoped\u003E\n  .ansiout {\n    display: block;\n    unicode-bidi: embed;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    word-break: break-all;\n    font-family: \u0022Source Code Pro\u0022, \u0022Menlo\u0022, monospace;;\n    font-size: 13px;\n    color: #555;\n    margin-left: 4px;\n    line-height: 19px;\n  }\n\u003C/style\u003E\n\u003Cdiv class=\u0022ansiout\u0022\u003E\u003C/div\u003E"
                  },
                  "metadata": {
                    "application/vnd.databricks.v1\u002Boutput": {
                      "datasetInfos": [],
                      "data": "\u003Cdiv class=\u0022ansiout\u0022\u003E\u003C/div\u003E",
                      "removedWidgets": [],
                      "addedWidgets": {},
                      "type": "html",
                      "arguments": {}
                    }
                  }
                }
              ],
              "execution_count": 0
            },
            {
              "cell_type": "code",
              "metadata": {
                "application/vnd.databricks.v1\u002Bcell": {
                  "title": "",
                  "showTitle": false,
                  "inputWidgets": {},
                  "nuid": "b255d876-363a-446e-a0fa-e51f866efa77"
                }
              },
              "source": [
                "\n",
                "\n",
                "# Generic imports\n",
                "import dotenv\n",
                "import json\n",
                "import numpy as np\n",
                "import os\n",
                "import fnmatch\n",
                "import shutil\n",
                "import random\n",
                "import string\n",
                "import pandas as pd\n",
                "import requests\n",
                "import asyncio\n",
                "import copy\n",
                "import functools\n",
                "import pathlib\n",
                "import string\n",
                "from datetime import datetime, timezone\n",
                "\n",
                "# Spark imports\n",
                "from pyspark.sql import SparkSession, SQLContext\n",
                "from pyspark.sql.types import *\n",
                "from pyspark.sql import functions as F\n",
                "\n",
                "# Recommenders imports\n",
                "# from azureiai.reco_utils.dataset.spark_splitters import spark_random_split\n",
                "# from azureiai.reco_utils.evaluation.spark_evaluation import (\n",
                "#     SparkRankingEvaluation,\n",
                "#     SparkRatingEvaluation,\n",
                "# )\n",
                "from pysarplus import SARPlus\n",
                "from azureiai.retail.cdm2ai.reader import CONFIG\n",
                "\n",
                "# AzureML imports\n",
                "import azureml.core\n",
                "from azureml.core.runconfig import JarLibrary\n",
                "from azureml.core.compute import ComputeTarget, DatabricksCompute\n",
                "from azureml.pipeline.steps import DatabricksStep\n",
                "from azureml.core.datastore import Datastore\n",
                "from azureml.data.data_reference import DataReference\n",
                "from azureml.core import Workspace\n",
                "from azureml.core.run import Run\n",
                "from azureml.core.experiment import Experiment\n",
                "from azureml.core import Environment\n",
                "from azureml.core.environment import CondaDependencies\n",
                "from azureml.core.environment import SparkPackage\n",
                "from azureml.core.model import Model\n",
                "from azureml.core.webservice import Webservice\n",
                "\n",
                "# Cosmos DB imports\n",
                "# Install Cosmos DB connector from: https://docs.databricks.com/data/data-sources/azure/cosmosdb-connector.html\n",
                "from azure.common.client_factory import get_client_from_json_dict\n",
                "\n",
                "# CDM imports\n",
                "from cdm.storage import ADLSAdapter\n",
                "from cdm.objectmodel import CdmCorpusDefinition, CdmManifestDefinition\n",
                "from cdm.persistence.cdmfolder import ManifestPersistence\n",
                "from cdm.persistence.cdmfolder.types import ManifestContent\n",
                "from cdm.storage import LocalAdapter, ADLSAdapter\n",
                "from cdm.utilities import time_utils\n",
                "\n",
                "from cdm.utilities.string_utils import kvprint\n",
                "\n",
                "# AKS imports\n",
                "from azureml.core.compute import AksCompute\n",
                "from azureml.core.compute_target import ComputeTargetException\n",
                "from azureml.core.webservice import AksWebservice\n",
                "from azureml.exceptions import WebserviceException\n",
                "from azureml.core.model import InferenceConfig\n",
                "\n",
                ""
              ],
              "attachments": null,
              "outputs": [
                {
                  "output_type": "display_data",
                  "data": {
                    "text/html": "\u003Cstyle scoped\u003E\n  .ansiout {\n    display: block;\n    unicode-bidi: embed;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    word-break: break-all;\n    font-family: \u0022Source Code Pro\u0022, \u0022Menlo\u0022, monospace;;\n    font-size: 13px;\n    color: #555;\n    margin-left: 4px;\n    line-height: 19px;\n  }\n\u003C/style\u003E\n\u003Cdiv class=\u0022ansiout\u0022\u003E\u003C/div\u003E"
                  },
                  "metadata": {
                    "application/vnd.databricks.v1\u002Boutput": {
                      "datasetInfos": [],
                      "data": "\u003Cdiv class=\u0022ansiout\u0022\u003E\u003C/div\u003E",
                      "removedWidgets": [],
                      "addedWidgets": {},
                      "type": "html",
                      "arguments": {}
                    }
                  }
                }
              ],
              "execution_count": 0
            },
            {
              "cell_type": "code",
              "metadata": {
                "application/vnd.databricks.v1\u002Bcell": {
                  "title": "",
                  "showTitle": false,
                  "inputWidgets": {},
                  "nuid": "bb6041f1-a825-41ae-ba4d-de6dff6e361a"
                }
              },
              "source": [
                "# Global variables\n",
                "# NOTE these variables are visible in the scope of the entire pipeline\n",
                "\n",
                "# Load the .env file to manage persistent variables\n",
                "_GLOBAL_DOTENV_PATH = pathlib.Path(dotenv.find_dotenv(\n",
                "    filename=\u0022/dbfs/FileStore/.env\u0022,\n",
                "    raise_error_if_not_found=True\n",
                "))\n",
                "\n",
                "# -------------------------------------------------------------------------\n",
                "# Azure general variables\n",
                "# -------------------------------------------------------------------------\n",
                "_GLOBAL_SUBSCRIPTION_ID = dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022subscription_id\u0022)\n",
                "_GLOBAL_RESOURCE_GROUP = dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022resource_group\u0022)\n",
                "_GLOBAL_CONFIG_DICT = {\n",
                "    \u0022clientIdKey\u0022: \u0022sp_client_id\u0022,\n",
                "    \u0022clientSecretKey\u0022: \u0022sp_password\u0022,\n",
                "    \u0022clientId\u0022: dbutils.secrets.get(scope=\u0022secrets\u0022, key=\u0022sp_client_id\u0022),\n",
                "    \u0022clientSecret\u0022: dbutils.secrets.get(scope=\u0022secrets\u0022, key=\u0022sp_password\u0022),\n",
                "    \u0022subscriptionId\u0022: _GLOBAL_SUBSCRIPTION_ID,\n",
                "    \u0022tenantId\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022tenant_id\u0022),\n",
                "    \u0022activeDirectoryEndpointUrl\u0022: \u0022https://login.microsoftonline.com\u0022,\n",
                "    \u0022resourceManagerEndpointUrl\u0022: \u0022https://management.azure.com/\u0022,\n",
                "    \u0022activeDirectoryGraphResourceId\u0022: \u0022https://graph.windows.net/\u0022,\n",
                "    \u0022sqlManagementEndpointUrl\u0022: \u0022https://management.core.windows.net:8443/\u0022,\n",
                "    \u0022galleryEndpointUrl\u0022: \u0022https://gallery.azure.com/\u0022,\n",
                "    \u0022managementEndpointUrl\u0022: \u0022https://management.core.windows.net/\u0022\n",
                "}\n",
                "\n",
                "# -------------------------------------------------------------------------\n",
                "# ADLS variables\n",
                "# -------------------------------------------------------------------------\n",
                "_GLOBAL_ADLS_ACCOUNT = dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022data_account\u0022)\n",
                "_GLOBAL_ADLS_CONTAINER = dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022data_container\u0022)\n",
                "_GLOBAL_ADLS_APPID = _GLOBAL_CONFIG_DICT[\u0022clientId\u0022]\n",
                "_GLOBAL_ADLS_DIRID = _GLOBAL_CONFIG_DICT[\u0022tenantId\u0022]\n",
                "_GLOBAL_ADLS_SECRET = _GLOBAL_CONFIG_DICT[\u0022clientSecret\u0022]\n",
                "_GLOBAL_ADLS_HOSTNAME = f\u0027{_GLOBAL_ADLS_ACCOUNT}.dfs.core.windows.net\u0027\n",
                "_GLOBAL_ADLS_DICT = {\n",
                "    \u0022adls_source\u0022: \u0022abfss://{0}@{1}.dfs.core.windows.net\u0022.format(_GLOBAL_ADLS_CONTAINER, _GLOBAL_ADLS_ACCOUNT),\n",
                "    \u0022oauth_endpoint\u0022: \u0022https://login.microsoftonline.com/{0}/oauth2/token\u0022.format(_GLOBAL_CONFIG_DICT[\u0022tenantId\u0022]),\n",
                "    \u0022adls_dfs_endpoint\u0022: \u0022{0}.dfs.core.windows.net\u0022.format(_GLOBAL_ADLS_ACCOUNT),\n",
                "    \u0022adls_container_mount_point\u0022: \u0022/mnt/{0}\u0022.format(_GLOBAL_ADLS_CONTAINER),\n",
                "    \u0022adls_resource_type\u0022: \u0022https://storage.azure.com\u0022,\n",
                "    \u0022adls_mount_root\u0022: \u0022/mnt\u0022,\n",
                "    \u0022adls_model_cache\u0022: \u0022dbfs:/mnt/{0}/cache\u0022.format(_GLOBAL_ADLS_CONTAINER)\n",
                "}\n",
                "\n",
                "# -------------------------------------------------------------------------\n",
                "# COSMOS DB variables\n",
                "# -------------------------------------------------------------------------\n",
                "_GLOBAL_DB_SECRETS = {\n",
                "    \u0022Endpoint\u0022: \u0022https://{0}.documents.azure.com:443/\u0022.format(dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022azure_cosmosdb_account_name\u0022)),\n",
                "    \u0022Masterkey\u0022: dbutils.secrets.get(scope=\u0022secrets\u0022, key=\u0022cosmosdb_primary_master_key\u0022),\n",
                "    \u0022Database\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022azure_cosmosdb_database\u0022),\n",
                "    \u0022Collection\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022azure_cosmosdb_container\u0022),\n",
                "    \u0022Upsert\u0022: True\n",
                "}\n",
                "\n",
                "# -------------------------------------------------------------------------\n",
                "# Data variables\n",
                "# -------------------------------------------------------------------------\n",
                "_GLOBAL_DATA_ROOT = dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022physical_data_model_directory\u0022)\n",
                "_GLOBAL_TPC_RAW_ROOT = \u0027tpcds-raw-data\u0027\n",
                "_GLOBAL_IDM_SCHEMA_ROOT = dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022logical_data_model_directory\u0022)\n",
                "_GLOBAL_DATA_NAME = dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022data_name\u0022)\n",
                "_GLOBAL_ADAPTER_PARTIAL = functools.partial(\n",
                "    ADLSAdapter,\n",
                "    hostname=_GLOBAL_ADLS_HOSTNAME,\n",
                "    tenant=_GLOBAL_ADLS_DIRID,\n",
                "    client_id=_GLOBAL_ADLS_APPID,\n",
                "    secret=_GLOBAL_ADLS_SECRET\n",
                ")\n",
                "_GLOBAL_CONFIG_JSON = copy.deepcopy(CONFIG)\n",
                "_GLOBAL_CONFIG_JSON[\u0022adls\u0022][\u0022account\u0022] = _GLOBAL_ADLS_ACCOUNT\n",
                "_GLOBAL_CONFIG_JSON[\u0022adls\u0022][\u0022container\u0022] = _GLOBAL_ADLS_CONTAINER\n",
                "_GLOBAL_CONFIG_JSON[\u0022adls\u0022][\u0022appid\u0022] = _GLOBAL_ADLS_APPID\n",
                "_GLOBAL_CONFIG_JSON[\u0022adls\u0022][\u0022dirid\u0022] = _GLOBAL_ADLS_DIRID\n",
                "_GLOBAL_CONFIG_JSON[\u0022adls\u0022][\u0022secret\u0022] = _GLOBAL_ADLS_SECRET\n",
                "_GLOBAL_CONFIG_JSON[\u0022adls\u0022][\u0022hostname\u0022] = _GLOBAL_ADLS_HOSTNAME\n",
                "_GLOBAL_CONFIG_JSON[\u0022cdm\u0022][\u0022data_root\u0022] = _GLOBAL_DATA_ROOT\n",
                "_GLOBAL_CONFIG_JSON[\u0022cdm\u0022][\u0022manifest_name\u0022] = \u0022{0}.manifest.cdm.json\u0022.format(dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022industry_data_model_name\u0022))\n",
                "_GLOBAL_INPUT_DATA_FILE = dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022processed_data_file\u0022)\n",
                "_GLOBAL_CUSTOMER_DATA_FILE = dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022processed_customer_data_file\u0022)\n",
                "\n",
                "# -------------------------------------------------------------------------\n",
                "# Model variables\n",
                "# -------------------------------------------------------------------------\n",
                "_GLOBAL_MODEL_LOCAL_CACHE = \u0027dbfs:/model/{0}\u0027.format(\n",
                "    \u0027\u0027.join(random.choice(string.ascii_lowercase) for i in range(10))\n",
                ")\n",
                "\n",
                "# -------------------------------------------------------------------------\n",
                "# Azure Machine Learning service variables\n",
                "# -------------------------------------------------------------------------\n",
                "_GLOBAL_AML_DICT = {\n",
                "    \u0022workspace_name\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022azureml_workspace\u0022),\n",
                "    \u0022model_file_name\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022azureml_model_file_name\u0022),\n",
                "    \u0022aml_experiment_name\u0022: dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022azureml_experiment_name\u0022)\n",
                "}\n",
                "\n",
                "# -------------------------------------------------------------------------\n",
                "# Azure Kubernetes Service variables\n",
                "# -------------------------------------------------------------------------\n",
                "_GLOBAL_AKS_NAME = dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022aks_cluster_name\u0022)\n",
                "_GLOBAL_SERVICE_NAME = \u0022aks-service-{0}\u0022.format(dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022unique_key\u0022))\n",
                "_GLOBAL_AKS_CONFIG_LEVEL = dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022aks_config_level\u0022)\n",
                "_GLOBAL_AKS_COMPUTE_TARGET_NAME = \u0027aks\u0027 \u002B dotenv.get_key(_GLOBAL_DOTENV_PATH, \u0022unique_key\u0022)"
              ],
              "attachments": null,
              "outputs": [
                {
                  "output_type": "display_data",
                  "data": {
                    "text/html": "\u003Cstyle scoped\u003E\n  .ansiout {\n    display: block;\n    unicode-bidi: embed;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    word-break: break-all;\n    font-family: \u0022Source Code Pro\u0022, \u0022Menlo\u0022, monospace;;\n    font-size: 13px;\n    color: #555;\n    margin-left: 4px;\n    line-height: 19px;\n  }\n\u003C/style\u003E\n\u003Cdiv class=\u0022ansiout\u0022\u003E\u003C/div\u003E"
                  },
                  "metadata": {
                    "application/vnd.databricks.v1\u002Boutput": {
                      "datasetInfos": [],
                      "data": "\u003Cdiv class=\u0022ansiout\u0022\u003E\u003C/div\u003E",
                      "removedWidgets": [],
                      "addedWidgets": {},
                      "type": "html",
                      "arguments": {}
                    }
                  }
                },
                {
                  "output_type": "display_data",
                  "data": {
                    "text/html": "\u003Cstyle scoped\u003E\n  .ansiout {\n    display: block;\n    unicode-bidi: embed;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    word-break: break-all;\n    font-family: \u0022Source Code Pro\u0022, \u0022Menlo\u0022, monospace;;\n    font-size: 13px;\n    color: #555;\n    margin-left: 4px;\n    line-height: 19px;\n  }\n\u003C/style\u003E\n\u003Cdiv class=\u0022ansiout\u0022\u003E\u003Cspan class=\u0022ansi-red-fg\u0022\u003E---------------------------------------------------------------------------\u003C/span\u003E\n\u003Cspan class=\u0022ansi-red-fg\u0022\u003ENameError\u003C/span\u003E                                 Traceback (most recent call last)\n\u003Cspan class=\u0022ansi-green-fg\u0022\u003E\u0026lt;command-1159393715563018\u0026gt;\u003C/span\u003E in \u003Cspan class=\u0022ansi-cyan-fg\u0022\u003E\u0026lt;module\u0026gt;\u003C/span\u003E\n\u003Cspan class=\u0022ansi-green-intense-fg ansi-bold\u0022\u003E     66\u003C/span\u003E _GLOBAL_DATA_NAME \u003Cspan class=\u0022ansi-blue-fg\u0022\u003E=\u003C/span\u003E dotenv\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E.\u003C/span\u003Eget_key\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E(\u003C/span\u003E_GLOBAL_DOTENV_PATH\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E,\u003C/span\u003E \u003Cspan class=\u0022ansi-blue-fg\u0022\u003E\u0026#34;data_name\u0026#34;\u003C/span\u003E\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E)\u003C/span\u003E\n\u003Cspan class=\u0022ansi-green-intense-fg ansi-bold\u0022\u003E     67\u003C/span\u003E _GLOBAL_ADAPTER_PARTIAL = functools.partial(\n\u003Cspan class=\u0022ansi-green-fg\u0022\u003E---\u0026gt; 68\u003C/span\u003E\u003Cspan class=\u0022ansi-red-fg\u0022\u003E     \u003C/span\u003EADLSAdapter\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E,\u003C/span\u003E\n\u003Cspan class=\u0022ansi-green-intense-fg ansi-bold\u0022\u003E     69\u003C/span\u003E     hostname\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E=\u003C/span\u003E_GLOBAL_ADLS_HOSTNAME\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E,\u003C/span\u003E\n\u003Cspan class=\u0022ansi-green-intense-fg ansi-bold\u0022\u003E     70\u003C/span\u003E     tenant\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E=\u003C/span\u003E_GLOBAL_ADLS_DIRID\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E,\u003C/span\u003E\n\n\u003Cspan class=\u0022ansi-red-fg\u0022\u003ENameError\u003C/span\u003E: name \u0026#39;ADLSAdapter\u0026#39; is not defined\u003C/div\u003E"
                  },
                  "metadata": {
                    "application/vnd.databricks.v1\u002Boutput": {
                      "type": "ipynbError",
                      "data": "\u003Cdiv class=\u0022ansiout\u0022\u003E\u003Cspan class=\u0022ansi-red-fg\u0022\u003E---------------------------------------------------------------------------\u003C/span\u003E\n\u003Cspan class=\u0022ansi-red-fg\u0022\u003ENameError\u003C/span\u003E                                 Traceback (most recent call last)\n\u003Cspan class=\u0022ansi-green-fg\u0022\u003E\u0026lt;command-1159393715563018\u0026gt;\u003C/span\u003E in \u003Cspan class=\u0022ansi-cyan-fg\u0022\u003E\u0026lt;module\u0026gt;\u003C/span\u003E\n\u003Cspan class=\u0022ansi-green-intense-fg ansi-bold\u0022\u003E     66\u003C/span\u003E _GLOBAL_DATA_NAME \u003Cspan class=\u0022ansi-blue-fg\u0022\u003E=\u003C/span\u003E dotenv\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E.\u003C/span\u003Eget_key\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E(\u003C/span\u003E_GLOBAL_DOTENV_PATH\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E,\u003C/span\u003E \u003Cspan class=\u0022ansi-blue-fg\u0022\u003E\u0026#34;data_name\u0026#34;\u003C/span\u003E\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E)\u003C/span\u003E\n\u003Cspan class=\u0022ansi-green-intense-fg ansi-bold\u0022\u003E     67\u003C/span\u003E _GLOBAL_ADAPTER_PARTIAL = functools.partial(\n\u003Cspan class=\u0022ansi-green-fg\u0022\u003E---\u0026gt; 68\u003C/span\u003E\u003Cspan class=\u0022ansi-red-fg\u0022\u003E     \u003C/span\u003EADLSAdapter\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E,\u003C/span\u003E\n\u003Cspan class=\u0022ansi-green-intense-fg ansi-bold\u0022\u003E     69\u003C/span\u003E     hostname\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E=\u003C/span\u003E_GLOBAL_ADLS_HOSTNAME\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E,\u003C/span\u003E\n\u003Cspan class=\u0022ansi-green-intense-fg ansi-bold\u0022\u003E     70\u003C/span\u003E     tenant\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E=\u003C/span\u003E_GLOBAL_ADLS_DIRID\u003Cspan class=\u0022ansi-blue-fg\u0022\u003E,\u003C/span\u003E\n\n\u003Cspan class=\u0022ansi-red-fg\u0022\u003ENameError\u003C/span\u003E: name \u0026#39;ADLSAdapter\u0026#39; is not defined\u003C/div\u003E",
                      "errorSummary": "\u003Cspan class=\u0022ansi-red-fg\u0022\u003ENameError\u003C/span\u003E: name \u0026#39;ADLSAdapter\u0026#39; is not defined",
                      "arguments": {}
                    }
                  }
                }
              ],
              "execution_count": 0
            },
            {
              "cell_type": "code",
              "metadata": {
                "application/vnd.databricks.v1\u002Bcell": {
                  "title": "",
                  "showTitle": false,
                  "inputWidgets": {},
                  "nuid": "639595d4-4083-4f33-a7d4-15af60e7b3d6"
                }
              },
              "source": [
                "# Spark initialization\n",
                "SUBMIT_ARGS = \u0022--packages eisber:sarplus:0.2.6 pyspark-shell\u0022\n",
                "os.environ[\u0022PYSPARK_SUBMIT_ARGS\u0022] = SUBMIT_ARGS\n",
                "\n",
                "spark = (\n",
                "    SparkSession.builder.appName(\u0022sample\u0022)\n",
                "    .master(\u0022local[*]\u0022)\n",
                "    .config(\u0022memory\u0022, \u00221G\u0022)\n",
                "    .config(\u0022spark.sql.shuffle.partitions\u0022, \u00221\u0022)\n",
                "    .config(\u0022spark.sql.crossJoin.enabled\u0022, True)\n",
                "    .config(\u0022spark.ui.enabled\u0022, False)\n",
                "    .getOrCreate()\n",
                ")\n",
                "\n",
                "# SqlContext helps with doing SQL like queries on spark DFs.\n",
                "sqlContext = SQLContext(spark)\n",
                "\n",
                "# Configure the Spark session to avoid using mount\n",
                "spark.conf.set(\u0022fs.azure.account.auth.type.{0}.dfs.core.windows.net\u0022.format(_GLOBAL_ADLS_ACCOUNT), \u0022OAuth\u0022)\n",
                "spark.conf.set(\n",
                "    \u0022fs.azure.account.oauth.provider.type.{0}.dfs.core.windows.net\u0022.format(_GLOBAL_ADLS_ACCOUNT),\n",
                "    \u0022org.apache.hadoop.fs.azurebfs.oauth2.ClientCredsTokenProvider\u0022,\n",
                ")\n",
                "spark.conf.set(\n",
                "    \u0022fs.azure.account.oauth2.client.id.{0}.dfs.core.windows.net\u0022.format(_GLOBAL_ADLS_ACCOUNT), _GLOBAL_ADLS_APPID\n",
                ")\n",
                "spark.conf.set(\n",
                "    \u0022fs.azure.account.oauth2.client.secret.{0}.dfs.core.windows.net\u0022.format(_GLOBAL_ADLS_ACCOUNT), _GLOBAL_ADLS_SECRET\n",
                ")\n",
                "spark.conf.set(\n",
                "    \u0022fs.azure.account.oauth2.client.endpoint.{0}.dfs.core.windows.net\u0022.format(_GLOBAL_ADLS_ACCOUNT),\n",
                "    \u0022https://login.microsoftonline.com/{0}/oauth2/token\u0022.format(_GLOBAL_ADLS_DIRID),\n",
                ")"
              ],
              "attachments": null,
              "outputs": [],
              "execution_count": 0
            },
            {
              "cell_type": "code",
              "metadata": {
                "application/vnd.databricks.v1\u002Bcell": {
                  "title": "",
                  "showTitle": false,
                  "inputWidgets": {},
                  "nuid": "614662de-2288-451e-b238-b6190156aac4"
                }
              },
              "source": [
                "# Mount the remove ADLS container on the local databricks\n",
                "\n",
                "# Unmount an existing mount point\n",
                "try:\n",
                "    dbutils.fs.unmount(_GLOBAL_ADLS_DICT[\u0022adls_container_mount_point\u0022])\n",
                "except Exception as ex:\n",
                "    if \u0022Directory not mounted\u0022 not in str(ex):\n",
                "        raise Exception(\u0022Error in unmounting\u0022)\n",
                "\n",
                "# Mount wit the provided configuration information\n",
                "configs = {\n",
                "    \u0022fs.azure.account.auth.type\u0022: \u0022OAuth\u0022,\n",
                "    \u0022fs.azure.account.oauth.provider.type\u0022: \u0022org.apache.hadoop.fs.azurebfs.oauth2.ClientCredsTokenProvider\u0022,\n",
                "    \u0022fs.azure.account.oauth2.client.id\u0022: _GLOBAL_CONFIG_DICT[\u0022clientId\u0022],\n",
                "    \u0022fs.azure.account.oauth2.client.secret\u0022: _GLOBAL_CONFIG_DICT[\u0022clientSecret\u0022],\n",
                "    \u0022fs.azure.account.oauth2.client.endpoint\u0022: _GLOBAL_ADLS_DICT[\u0022oauth_endpoint\u0022],\n",
                "}\n",
                "dbutils.fs.mount(\n",
                "    source=_GLOBAL_ADLS_DICT[\u0022adls_source\u0022],\n",
                "    mount_point=_GLOBAL_ADLS_DICT[\u0022adls_container_mount_point\u0022],\n",
                "    extra_configs=configs,\n",
                ")\n",
                "\n",
                "# List the contents in the mounted directory\n",
                "dbutils.fs.ls(_GLOBAL_ADLS_DICT[\u0022adls_container_mount_point\u0022])\n",
                "\n",
                "# Make a new directory for model cache use\n",
                "dbutils.fs.mkdirs(_GLOBAL_ADLS_DICT[\u0022adls_model_cache\u0022])"
              ],
              "attachments": null,
              "outputs": [],
              "execution_count": 0
            }
          ],
          "folder": {
            "name": "nbfolder/test1"
          }
        },
        "etag": "0900eeb9-0000-0100-0000-61408d200000"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/HelloWorld?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-b0fb2c11cb95294a8a798474bce6cf89-6b6db24399706a47-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "962cda046f9dbf439be62b1581727303",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:52 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "962cda046f9dbf439be62b1581727303",
        "x-ms-request-id": "cd65ca18-524f-49f8-b77a-019a8a90a8bd"
      },
      "ResponseBody": {
        "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/HelloWorld",
        "name": "HelloWorld",
        "type": "Microsoft.Synapse/workspaces/notebooks",
        "properties": {
          "nbformat": 4,
          "nbformat_minor": 2,
          "entityState": null,
          "renameOperationDetails": null,
          "bigDataPool": {
            "referenceName": "testsparkpool",
            "type": "BigDataPoolReference"
          },
          "sessionProperties": {
            "driverMemory": "28g",
            "driverCores": 4,
            "executorMemory": "28g",
            "executorCores": 4,
            "numExecutors": 2,
            "conf": {
              "spark.dynamicAllocation.enabled": "false",
              "spark.dynamicAllocation.minExecutors": "2",
              "spark.dynamicAllocation.maxExecutors": "2"
            }
          },
          "metadata": {
            "language_info": {
              "name": "python"
            },
            "a365ComputeOptions": {
              "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/bigDataPools/testsparkpool",
              "name": "testsparkpool",
              "type": "Spark",
              "endpoint": "https://testsynapseworkspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/testsparkpool",
              "auth": {
                "type": "AAD",
                "authResource": "https://dev.azuresynapse.net"
              },
              "sparkVersion": "2.4",
              "nodeCount": 3,
              "cores": 8,
              "memory": 56,
              "extraHeader": null
            },
            "sessionKeepAliveTimeout": 30,
            "saveOutput": true,
            "synapse_widget": {
              "version": "0.1",
              "state": {}
            },
            "kernelspec": {
              "name": "synapse_pyspark",
              "display_name": "python"
            }
          },
          "cells": [
            {
              "cell_type": "code",
              "metadata": {},
              "source": [
                "# comment\r\n",
                "print(\u0022Hello World\u0022)"
              ],
              "attachments": null,
              "outputs": [],
              "execution_count": null
            }
          ],
          "folder": null
        },
        "etag": "0e00670b-0000-0100-0000-6142dcab0000"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/notebook-04-14-00-07?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-dc28580f3461c9499486e65de23e2d2b-218dd4ce76eef34a-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "fb186da869e19c35c6621610cbf550e5",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:52 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "fb186da869e19c35c6621610cbf550e5",
        "x-ms-request-id": "133a4b0e-3e3e-455f-885b-90e13fc0153a"
      },
      "ResponseBody": {
        "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/notebook-04-14-00-07",
        "name": "notebook-04-14-00-07",
        "type": "Microsoft.Synapse/workspaces/notebooks",
        "properties": {
          "nbformat": 4,
          "nbformat_minor": 2,
          "entityState": null,
          "renameOperationDetails": null,
          "bigDataPool": {
            "referenceName": "testsparkpool",
            "type": "BigDataPoolReference"
          },
          "sessionProperties": {
            "driverMemory": "28g",
            "driverCores": 3,
            "executorMemory": "45g",
            "executorCores": 7,
            "numExecutors": 2,
            "conf": null
          },
          "metadata": {
            "language_info": {
              "name": "python"
            },
            "a365ComputeOptions": null,
            "sessionKeepAliveTimeout": 0
          },
          "cells": [
            {
              "cell_type": "code",
              "metadata": {
                "tags": [
                  "parameters"
                ]
              },
              "source": [
                ""
              ],
              "attachments": null,
              "outputs": [],
              "execution_count": null
            },
            {
              "cell_type": "code",
              "metadata": {},
              "source": [
                "print(param)"
              ],
              "attachments": null,
              "outputs": [],
              "execution_count": null
            }
          ],
          "folder": null
        },
        "etag": "6003a078-0000-0100-0000-607694d80000"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/notebook-04-14-00-09?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-91348abf138d084ab6b9a31f7b55b759-eb93132d683ca048-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "0e5ff4817150cbbc8e08f58d42084253",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:52 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "0e5ff4817150cbbc8e08f58d42084253",
        "x-ms-request-id": "31be768f-0b14-47b0-b93f-d3d594828117"
      },
      "ResponseBody": {
        "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/notebook-04-14-00-09",
        "name": "notebook-04-14-00-09",
        "type": "Microsoft.Synapse/workspaces/notebooks",
        "properties": {
          "nbformat": 4,
          "nbformat_minor": 2,
          "entityState": null,
          "renameOperationDetails": null,
          "bigDataPool": {
            "referenceName": "testsparkpool",
            "type": "BigDataPoolReference"
          },
          "sessionProperties": {
            "driverMemory": "28g",
            "driverCores": 3,
            "executorMemory": "45g",
            "executorCores": 7,
            "numExecutors": 2,
            "conf": null
          },
          "metadata": {
            "language_info": {
              "name": "python"
            },
            "a365ComputeOptions": null,
            "sessionKeepAliveTimeout": 0
          },
          "cells": [
            {
              "cell_type": "code",
              "metadata": {
                "tags": [
                  "parameters"
                ]
              },
              "source": [
                ""
              ],
              "attachments": null,
              "outputs": [],
              "execution_count": null
            },
            {
              "cell_type": "code",
              "metadata": {},
              "source": [
                "print(param)"
              ],
              "attachments": null,
              "outputs": [],
              "execution_count": null
            }
          ],
          "folder": null
        },
        "etag": "6103a451-0000-0100-0000-6076953a0000"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/notebook-04-19-23-25?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-586d911dedde6b46bc1da36cd5201465-daf987230c93314c-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "80ab98fb940c9b86a590d03a5833f4a5",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:53 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "80ab98fb940c9b86a590d03a5833f4a5",
        "x-ms-request-id": "7c44a5a5-ab15-48bc-b4d0-60823f923869"
      },
      "ResponseBody": {
        "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/notebook-04-19-23-25",
        "name": "notebook-04-19-23-25",
        "type": "Microsoft.Synapse/workspaces/notebooks",
        "properties": {
          "nbformat": 4,
          "nbformat_minor": 2,
          "entityState": null,
          "renameOperationDetails": null,
          "bigDataPool": {
            "referenceName": "testsparkpool",
            "type": "BigDataPoolReference"
          },
          "sessionProperties": {
            "driverMemory": "28g",
            "driverCores": 3,
            "executorMemory": "45g",
            "executorCores": 7,
            "numExecutors": 2,
            "conf": null
          },
          "metadata": {
            "language_info": {
              "name": "python"
            },
            "a365ComputeOptions": null,
            "sessionKeepAliveTimeout": 0
          },
          "cells": [
            {
              "cell_type": "code",
              "metadata": {
                "tags": [
                  "parameters"
                ]
              },
              "source": [
                ""
              ],
              "attachments": null,
              "outputs": [],
              "execution_count": null
            },
            {
              "cell_type": "code",
              "metadata": {},
              "source": [
                "print(param)"
              ],
              "attachments": null,
              "outputs": [],
              "execution_count": null
            }
          ],
          "folder": null
        },
        "etag": "060096a2-0000-0100-0000-607e73c90000"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/dwnb0723?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-eff60173c0c3794883f2e44bfd06a277-f96866a2789f9c4f-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "8c934696641337b3b04d6dd874a759be",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:53 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "8c934696641337b3b04d6dd874a759be",
        "x-ms-request-id": "3a593a94-bd47-4481-b745-d76b190522b3"
      },
      "ResponseBody": {
        "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/dwnb0723",
        "name": "dwnb0723",
        "type": "Microsoft.Synapse/workspaces/notebooks",
        "properties": {
          "nbformat": 4,
          "nbformat_minor": 2,
          "entityState": null,
          "renameOperationDetails": null,
          "bigDataPool": null,
          "sessionProperties": {
            "driverMemory": "28g",
            "driverCores": 4,
            "executorMemory": "28g",
            "executorCores": 4,
            "numExecutors": 2,
            "conf": {
              "spark.dynamicAllocation.enabled": "false",
              "spark.dynamicAllocation.minExecutors": "2",
              "spark.dynamicAllocation.maxExecutors": "2"
            }
          },
          "metadata": {
            "language_info": {
              "name": "python"
            },
            "a365ComputeOptions": null,
            "sessionKeepAliveTimeout": 30,
            "saveOutput": true,
            "synapse_widget": {
              "version": "0.1",
              "state": {}
            },
            "kernelspec": {
              "name": "synapse_pyspark",
              "display_name": "python"
            }
          },
          "cells": [
            {
              "cell_type": "code",
              "metadata": {},
              "source": [
                "print(\u0027hello\u0027)"
              ],
              "attachments": null,
              "outputs": [],
              "execution_count": null
            }
          ],
          "folder": null
        },
        "etag": "03001052-0000-0100-0000-60e831ea0000"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/BRMSRule?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-d1b1cf39d11555499ff553930aa8ff00-647e0f9e2fef0f44-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "3215c320cf4aecd96dc469bfa182735a",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:53 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "3215c320cf4aecd96dc469bfa182735a",
        "x-ms-request-id": "b4b9e03b-3868-4081-902b-e08123868859"
      },
      "ResponseBody": {
        "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/BRMSRule",
        "name": "BRMSRule",
        "type": "Microsoft.Synapse/workspaces/notebooks",
        "properties": {
          "nbformat": 4,
          "nbformat_minor": 2,
          "entityState": null,
          "renameOperationDetails": null,
          "bigDataPool": {
            "referenceName": "testportal",
            "type": "BigDataPoolReference"
          },
          "sessionProperties": {
            "driverMemory": "28g",
            "driverCores": 4,
            "executorMemory": "28g",
            "executorCores": 4,
            "numExecutors": 2,
            "conf": null
          },
          "metadata": {
            "language_info": {
              "name": "python"
            },
            "a365ComputeOptions": {
              "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/bigDataPools/testportal",
              "name": "testportal",
              "type": "Spark",
              "endpoint": "https://testsynapseworkspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/testportal",
              "auth": {
                "type": "AAD",
                "authResource": "https://dev.azuresynapse.net"
              },
              "sparkVersion": "3.0",
              "nodeCount": 10,
              "cores": 4,
              "memory": 28,
              "extraHeader": null
            },
            "sessionKeepAliveTimeout": 30,
            "saveOutput": true
          },
          "cells": [
            {
              "cell_type": "code",
              "metadata": {
                "cellLanguage": "python",
                "tags": [
                  "parameters"
                ]
              },
              "source": [
                "param = \u0022\u0022"
              ],
              "attachments": null,
              "outputs": [],
              "execution_count": null
            },
            {
              "cell_type": "code",
              "metadata": null,
              "source": [
                "print(param)\n",
                "print(\u0022updated 12:29\u0022)\n",
                "a = \u0022\u0022\u0022\n",
                "/*Rule:OEMDealFlagPlan_OneConsumerPlanCustomGrouping-BEGIN*/ /*Rule:OEMDealFlagPlan_OneConsumerPlanCustomGrouping-END*/\n",
                "\u0022\u0022\u0022\n",
                "print(a)"
              ],
              "attachments": null,
              "outputs": [],
              "execution_count": null
            }
          ],
          "folder": null
        },
        "etag": "0e00f869-0000-0100-0000-611a2fa50000"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/dwtestnbdescription?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-089b7caf0b5f56439179d3c0398506c0-c2e76faf7e553944-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "fcf75014b5759640e574cfbe27ad27fd",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:54 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "fcf75014b5759640e574cfbe27ad27fd",
        "x-ms-request-id": "d22923ee-dd32-4022-a5ac-ba5c9d5fefeb"
      },
      "ResponseBody": {
        "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/dwtestnbdescription",
        "name": "dwtestnbdescription",
        "type": "Microsoft.Synapse/workspaces/notebooks",
        "properties": {
          "nbformat": 4,
          "nbformat_minor": 2,
          "entityState": null,
          "renameOperationDetails": null,
          "bigDataPool": null,
          "sessionProperties": {
            "driverMemory": "28g",
            "driverCores": 4,
            "executorMemory": "28g",
            "executorCores": 4,
            "numExecutors": 2,
            "conf": {
              "spark.dynamicAllocation.enabled": "false",
              "spark.dynamicAllocation.minExecutors": "2",
              "spark.dynamicAllocation.maxExecutors": "2"
            }
          },
          "metadata": {
            "language_info": {
              "name": "python"
            },
            "a365ComputeOptions": null,
            "sessionKeepAliveTimeout": 30,
            "saveOutput": true,
            "synapse_widget": {
              "version": "0.1",
              "state": {}
            },
            "kernelspec": {
              "name": "synapse_pyspark",
              "display_name": "python"
            }
          },
          "cells": [
            {
              "cell_type": "code",
              "metadata": {},
              "source": [
                ""
              ],
              "attachments": null,
              "outputs": [],
              "execution_count": null
            }
          ],
          "folder": null
        },
        "etag": "0e00710b-0000-0100-0000-6142dcb10000"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/Notebook51465148?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-e097510aa0c7d14cac042ebb103ff0be-1151133e71c04d4b-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "951a1236c11dc65a6da61f4efbf3962e",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:54 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "951a1236c11dc65a6da61f4efbf3962e",
        "x-ms-request-id": "6aefe68b-fda5-4ba5-ae39-7e591cdb6133"
      },
      "ResponseBody": {
        "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook51465148",
        "name": "Notebook51465148",
        "type": "Microsoft.Synapse/workspaces/notebooks",
        "properties": {
          "nbformat": 4,
          "nbformat_minor": 2,
          "entityState": null,
          "renameOperationDetails": null,
          "bigDataPool": null,
          "sessionProperties": null,
          "metadata": {
            "language_info": {
              "name": "Python"
            },
            "a365ComputeOptions": null,
            "sessionKeepAliveTimeout": 0
          },
          "cells": [],
          "folder": null
        },
        "etag": "2e00eb87-0000-0100-0000-6155681c0000"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/Notebook82440489?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-72ae096e58f8c44f9f50a6df0e501dff-41a60c39fb1f0543-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "24c312d95daf6a48837e4dd6ff1ac5bf",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:54 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "24c312d95daf6a48837e4dd6ff1ac5bf",
        "x-ms-request-id": "ef4e9f9e-2a43-4289-9d7b-88f5c0940c6a"
      },
      "ResponseBody": {
        "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook82440489",
        "name": "Notebook82440489",
        "type": "Microsoft.Synapse/workspaces/notebooks",
        "properties": {
          "nbformat": 4,
          "nbformat_minor": 2,
          "entityState": null,
          "renameOperationDetails": null,
          "bigDataPool": null,
          "sessionProperties": null,
          "metadata": {
            "language_info": {
              "name": "Python"
            },
            "a365ComputeOptions": null,
            "sessionKeepAliveTimeout": 0
          },
          "cells": [],
          "folder": null
        },
        "etag": "2e005180-0000-0100-0000-615556dc0000"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/Notebook54387962?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-4e356c8fe7489042bad14d13299a97e5-923a7a32a1aedf4f-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "8f896b9dde67533cf5308ecf96f19bf1",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:54 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "8f896b9dde67533cf5308ecf96f19bf1",
        "x-ms-request-id": "96a75d80-74a6-424d-a146-699852e03812"
      },
      "ResponseBody": {
        "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook54387962",
        "name": "Notebook54387962",
        "type": "Microsoft.Synapse/workspaces/notebooks",
        "properties": {
          "nbformat": 4,
          "nbformat_minor": 2,
          "entityState": null,
          "renameOperationDetails": null,
          "bigDataPool": null,
          "sessionProperties": null,
          "metadata": {
            "language_info": {
              "name": "Python"
            },
            "a365ComputeOptions": null,
            "sessionKeepAliveTimeout": 0
          },
          "cells": [],
          "folder": null
        },
        "etag": "2e005680-0000-0100-0000-615556e00000"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/Notebook82429219?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-b09484f3ee46ac41a443acf07f093c0c-8282b3ef4910a249-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "15e5a1de03e9d94dc9b0129e7384c753",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:54 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "15e5a1de03e9d94dc9b0129e7384c753",
        "x-ms-request-id": "8eff6806-836d-409a-b011-c04c619f7601"
      },
      "ResponseBody": {
        "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook82429219",
        "name": "Notebook82429219",
        "type": "Microsoft.Synapse/workspaces/notebooks",
        "properties": {
          "nbformat": 4,
          "nbformat_minor": 2,
          "entityState": null,
          "renameOperationDetails": null,
          "bigDataPool": null,
          "sessionProperties": null,
          "metadata": {
            "language_info": {
              "name": "Python"
            },
            "a365ComputeOptions": null,
            "sessionKeepAliveTimeout": 0
          },
          "cells": [],
          "folder": null
        },
        "etag": "2e005880-0000-0100-0000-615556e20000"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/Notebook12432614?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-d91a874b90f3ec49a9d5331d30e4ef87-a9059488d9fd7f4a-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "8fb05fe1066afbc6d5702e7fce79d391",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:55 GMT",
        "Request-Context": "appId=",
        "Server": "Kestrel Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=2592000",
        "Transfer-Encoding": "chunked",
        "x-ms-client-request-id": "8fb05fe1066afbc6d5702e7fce79d391",
        "x-ms-request-id": "fd989280-5076-4bd5-a377-db73c887eee7"
      },
      "ResponseBody": {
        "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook12432614",
        "name": "Notebook12432614",
        "type": "Microsoft.Synapse/workspaces/notebooks",
        "properties": {
          "nbformat": 4,
          "nbformat_minor": 2,
          "entityState": null,
          "renameOperationDetails": null,
          "bigDataPool": null,
          "sessionProperties": null,
          "metadata": {
            "language_info": {
              "name": "Python"
            },
            "a365ComputeOptions": null,
            "sessionKeepAliveTimeout": 0
          },
          "cells": [],
          "folder": null
        },
        "etag": "2e005a80-0000-0100-0000-615556e70000"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebooks/Notebook51465148?api-version=2020-12-01",
      "RequestMethod": "DELETE",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "traceparent": "00-d6888827657f96458b1e5c1b62df1c61-b5a2165ac9bf9440-00",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "5ef85ce3af349ad61dafc5b7cb9de070",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 202,
      "ResponseHeaders": {
        "Access-Control-Allow-Headers": "Location",
        "Access-Control-Expose-Headers": "Location",
        "Content-Length": "367",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:55 GMT",
        "Location": "https://testsynapseworkspace.dev.azuresynapse.net/notebookOperationResults/5a766667-bc5e-465a-ab08-02180b44cf0e?api-version=2020-12-01",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-ms-client-request-id": "5ef85ce3af349ad61dafc5b7cb9de070",
        "x-ms-request-id": "bd2c626a-42fc-46bb-8f08-fe43d5564590"
      },
      "ResponseBody": {
        "id": "/subscriptions/051ddeca-1ed6-4d8b-ba6f-1ff561e5f3b3/resourceGroups/zzy-test-rg/providers/Microsoft.Synapse/workspaces/testsynapseworkspace/notebooks/Notebook51465148",
        "recordId": 0,
        "state": "Deleting",
        "created": "0001-01-01T00:00:00",
        "changed": "0001-01-01T00:00:00",
        "type": "Notebook",
        "name": "Notebook51465148",
        "operationId": "5a766667-bc5e-465a-ab08-02180b44cf0e"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebookOperationResults/5a766667-bc5e-465a-ab08-02180b44cf0e?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "17bb80dc698c311e891672ba400e2f37",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 202,
      "ResponseHeaders": {
        "Access-Control-Allow-Headers": [
          "Location",
          "Retry-After"
        ],
        "Access-Control-Expose-Headers": [
          "Location",
          "Retry-After"
        ],
        "Content-Length": "23",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:55 GMT",
        "Location": "https://testsynapseworkspace.dev.azuresynapse.net/notebookOperationResults/5a766667-bc5e-465a-ab08-02180b44cf0e?api-version=2020-12-01",
        "Retry-After": "10",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-ms-client-request-id": "17bb80dc698c311e891672ba400e2f37",
        "x-ms-request-id": "2018cf96-1317-491a-be34-498cffbdb9b9"
      },
      "ResponseBody": {
        "status": "InProgress"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebookOperationResults/5a766667-bc5e-465a-ab08-02180b44cf0e?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "9216be909b8bd850d420834b705cc64e",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 202,
      "ResponseHeaders": {
        "Access-Control-Allow-Headers": [
          "Location",
          "Retry-After"
        ],
        "Access-Control-Expose-Headers": [
          "Location",
          "Retry-After"
        ],
        "Content-Length": "23",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:56 GMT",
        "Location": "https://testsynapseworkspace.dev.azuresynapse.net/notebookOperationResults/5a766667-bc5e-465a-ab08-02180b44cf0e?api-version=2020-12-01",
        "Retry-After": "10",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-ms-client-request-id": "9216be909b8bd850d420834b705cc64e",
        "x-ms-request-id": "0d2c478e-6a2e-4c4f-abb3-417116463d47"
      },
      "ResponseBody": {
        "status": "InProgress"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebookOperationResults/5a766667-bc5e-465a-ab08-02180b44cf0e?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "4bda76a5c8e200e41dbcae2a98cd96cb",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 202,
      "ResponseHeaders": {
        "Access-Control-Allow-Headers": [
          "Location",
          "Retry-After"
        ],
        "Access-Control-Expose-Headers": [
          "Location",
          "Retry-After"
        ],
        "Content-Length": "23",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Thu, 30 Sep 2021 07:32:57 GMT",
        "Location": "https://testsynapseworkspace.dev.azuresynapse.net/notebookOperationResults/5a766667-bc5e-465a-ab08-02180b44cf0e?api-version=2020-12-01",
        "Retry-After": "10",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-ms-client-request-id": "4bda76a5c8e200e41dbcae2a98cd96cb",
        "x-ms-request-id": "cc2ee9ef-16cf-4258-9521-138431ae4ef2"
      },
      "ResponseBody": {
        "status": "InProgress"
      }
    },
    {
      "RequestUri": "https://testsynapseworkspace.dev.azuresynapse.net/notebookOperationResults/5a766667-bc5e-465a-ab08-02180b44cf0e?api-version=2020-12-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Authorization": "Sanitized",
        "User-Agent": "azsdk-net-Analytics.Synapse.Artifacts/1.0.0-alpha.20210930.1 (.NET Framework 4.8.4300.0; Microsoft Windows 10.0.19043 )",
        "x-ms-client-request-id": "15e808ba77b840c32fe2426be5d3c12c",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Content-Length": "0",
        "Date": "Thu, 30 Sep 2021 07:32:59 GMT",
        "Server": "Microsoft-HTTPAPI/2.0",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "x-ms-client-request-id": "15e808ba77b840c32fe2426be5d3c12c",
        "x-ms-request-id": "02623464-e1ea-4396-9b9e-efb23892324c"
      },
      "ResponseBody": []
    }
  ],
  "Variables": {
    "AZURE_SYNAPSE_WORKSPACE_URL": "https://testsynapseworkspace.dev.azuresynapse.net",
    "RandomSeed": "963561127"
  }
}