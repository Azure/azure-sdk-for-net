// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Analytics.Synapse.Artifacts.Models
{
    public partial class AvroWriteSettings : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(RecordName))
            {
                writer.WritePropertyName("recordName");
                writer.WriteStringValue(RecordName);
            }
            if (Optional.IsDefined(RecordNamespace))
            {
                writer.WritePropertyName("recordNamespace");
                writer.WriteStringValue(RecordNamespace);
            }
            writer.WritePropertyName("type");
            writer.WriteStringValue(Type);
            foreach (var item in AdditionalProperties)
            {
                writer.WritePropertyName(item.Key);
                writer.WriteObjectValue(item.Value);
            }
            writer.WriteEndObject();
        }

        internal static AvroWriteSettings DeserializeAvroWriteSettings(JsonElement element)
        {
            Optional<string> recordName = default;
            Optional<string> recordNamespace = default;
            string type = default;
            IDictionary<string, object> additionalProperties = default;
            Dictionary<string, object> additionalPropertiesDictionary = new Dictionary<string, object>();
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("recordName"))
                {
                    recordName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("recordNamespace"))
                {
                    recordNamespace = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = property.Value.GetString();
                    continue;
                }
                additionalPropertiesDictionary.Add(property.Name, property.Value.GetObject());
            }
            additionalProperties = additionalPropertiesDictionary;
            return new AvroWriteSettings(type, additionalProperties, recordName.Value, recordNamespace.Value);
        }
    }
}
