// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.Analytics.Synapse.Artifacts.Models
{
    /// <summary> A copy activity source. </summary>
    public partial class CopySource
    {
        /// <summary> Initializes a new instance of CopySource. </summary>
        public CopySource()
        {
            AdditionalProperties = new ChangeTrackingDictionary<string, object>();
            Type = "CopySource";
        }

        /// <summary> Initializes a new instance of CopySource. </summary>
        /// <param name="type"> Copy source type. </param>
        /// <param name="sourceRetryCount"> Source retry count. Type: integer (or Expression with resultType integer). </param>
        /// <param name="sourceRetryWait"> Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])). </param>
        /// <param name="maxConcurrentConnections"> The maximum concurrent connection count for the source data store. Type: integer (or Expression with resultType integer). </param>
        /// <param name="additionalProperties"> Additional Properties. </param>
        internal CopySource(string type, object sourceRetryCount, object sourceRetryWait, object maxConcurrentConnections, IDictionary<string, object> additionalProperties)
        {
            Type = type ?? "CopySource";
            SourceRetryCount = sourceRetryCount;
            SourceRetryWait = sourceRetryWait;
            MaxConcurrentConnections = maxConcurrentConnections;
            AdditionalProperties = additionalProperties;
        }

        /// <summary> Copy source type. </summary>
        internal string Type { get; set; }
        /// <summary> Source retry count. Type: integer (or Expression with resultType integer). </summary>
        public object SourceRetryCount { get; set; }
        /// <summary> Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])). </summary>
        public object SourceRetryWait { get; set; }
        /// <summary> The maximum concurrent connection count for the source data store. Type: integer (or Expression with resultType integer). </summary>
        public object MaxConcurrentConnections { get; set; }
        /// <summary> Additional Properties. </summary>
        public IDictionary<string, object> AdditionalProperties { get; }
    }
}
