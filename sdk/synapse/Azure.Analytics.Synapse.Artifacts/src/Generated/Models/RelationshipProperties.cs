// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.Analytics.Synapse.Artifacts.Models
{
    /// <summary> Database properties. </summary>
    public partial class RelationshipProperties : MDEntityProperties
    {
        /// <summary> Initializes a new instance of RelationshipProperties. </summary>
        /// <param name="namespace"> Namespace. </param>
        /// <param name="fromTableName"> From Table Name. </param>
        /// <param name="toTableName"> To Table Name. </param>
        /// <param name="columnRelationshipInformations"> List of Column Relationships. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="namespace"/>, <paramref name="fromTableName"/>, <paramref name="toTableName"/> or <paramref name="columnRelationshipInformations"/> is null. </exception>
        public RelationshipProperties(BaseNamespace @namespace, string fromTableName, string toTableName, IEnumerable<ColumnRelationshipInformation> columnRelationshipInformations)
        {
            Argument.AssertNotNull(@namespace, nameof(@namespace));
            Argument.AssertNotNull(fromTableName, nameof(fromTableName));
            Argument.AssertNotNull(toTableName, nameof(toTableName));
            Argument.AssertNotNull(columnRelationshipInformations, nameof(columnRelationshipInformations));

            Namespace = @namespace;
            FromTableName = fromTableName;
            ToTableName = toTableName;
            ColumnRelationshipInformations = columnRelationshipInformations.ToList();
        }

        /// <summary> Initializes a new instance of RelationshipProperties. </summary>
        /// <param name="originObjectId"> Entity object id maintained by the caller. </param>
        /// <param name="objectId"> Entity object id maintained by SyMS. </param>
        /// <param name="objectVersion"> Entity object version maintained by SyMS. </param>
        /// <param name="publishStatus"> Publish status. </param>
        /// <param name="properties"> Property bag. </param>
        /// <param name="namespace"> Namespace. </param>
        /// <param name="fromTableId"> From Table Id. </param>
        /// <param name="fromTableName"> From Table Name. </param>
        /// <param name="toTableId"> To Table Id. </param>
        /// <param name="toTableName"> To Table Name. </param>
        /// <param name="relationshipType"> Relation Type. </param>
        /// <param name="columnRelationshipInformations"> List of Column Relationships. </param>
        internal RelationshipProperties(string originObjectId, string objectId, long? objectVersion, PublishStatus? publishStatus, IDictionary<string, object> properties, BaseNamespace @namespace, string fromTableId, string fromTableName, string toTableId, string toTableName, RelationshipType? relationshipType, IList<ColumnRelationshipInformation> columnRelationshipInformations) : base(originObjectId, objectId, objectVersion, publishStatus, properties)
        {
            Namespace = @namespace;
            FromTableId = fromTableId;
            FromTableName = fromTableName;
            ToTableId = toTableId;
            ToTableName = toTableName;
            RelationshipType = relationshipType;
            ColumnRelationshipInformations = columnRelationshipInformations;
        }

        /// <summary> Namespace. </summary>
        public BaseNamespace Namespace { get; set; }
        /// <summary> From Table Id. </summary>
        public string FromTableId { get; }
        /// <summary> From Table Name. </summary>
        public string FromTableName { get; set; }
        /// <summary> To Table Id. </summary>
        public string ToTableId { get; }
        /// <summary> To Table Name. </summary>
        public string ToTableName { get; set; }
        /// <summary> Relation Type. </summary>
        public RelationshipType? RelationshipType { get; set; }
        /// <summary> List of Column Relationships. </summary>
        public IList<ColumnRelationshipInformation> ColumnRelationshipInformations { get; }
    }
}
