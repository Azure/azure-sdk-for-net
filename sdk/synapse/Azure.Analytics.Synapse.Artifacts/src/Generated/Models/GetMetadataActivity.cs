// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.Analytics.Synapse.Artifacts.Models
{
    /// <summary> Activity to get metadata of dataset. </summary>
    public partial class GetMetadataActivity : ExecutionActivity
    {
        /// <summary> Initializes a new instance of GetMetadataActivity. </summary>
        /// <param name="name"> Activity name. </param>
        /// <param name="dataset"> GetMetadata activity dataset reference. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> or <paramref name="dataset"/> is null. </exception>
        public GetMetadataActivity(string name, DatasetReference dataset) : base(name)
        {
            if (name == null)
            {
                throw new ArgumentNullException(nameof(name));
            }
            if (dataset == null)
            {
                throw new ArgumentNullException(nameof(dataset));
            }

            Dataset = dataset;
            FieldList = new ChangeTrackingList<object>();
            Type = "GetMetadata";
        }

        /// <summary> Initializes a new instance of GetMetadataActivity. </summary>
        /// <param name="name"> Activity name. </param>
        /// <param name="type"> Type of activity. </param>
        /// <param name="description"> Activity description. </param>
        /// <param name="dependsOn"> Activity depends on condition. </param>
        /// <param name="userProperties"> Activity user properties. </param>
        /// <param name="additionalProperties"> Additional Properties. </param>
        /// <param name="linkedServiceName"> Linked service reference. </param>
        /// <param name="policy"> Activity policy. </param>
        /// <param name="dataset"> GetMetadata activity dataset reference. </param>
        /// <param name="fieldList"> Fields of metadata to get from dataset. </param>
        /// <param name="storeSettings"> GetMetadata activity store settings. </param>
        /// <param name="formatSettings"> GetMetadata activity format settings. </param>
        internal GetMetadataActivity(string name, string type, string description, IList<ActivityDependency> dependsOn, IList<UserProperty> userProperties, IDictionary<string, object> additionalProperties, LinkedServiceReference linkedServiceName, ActivityPolicy policy, DatasetReference dataset, IList<object> fieldList, StoreReadSettings storeSettings, FormatReadSettings formatSettings) : base(name, type, description, dependsOn, userProperties, additionalProperties, linkedServiceName, policy)
        {
            Dataset = dataset;
            FieldList = fieldList;
            StoreSettings = storeSettings;
            FormatSettings = formatSettings;
            Type = type ?? "GetMetadata";
        }

        /// <summary> GetMetadata activity dataset reference. </summary>
        public DatasetReference Dataset { get; set; }
        /// <summary> Fields of metadata to get from dataset. </summary>
        public IList<object> FieldList { get; }
        /// <summary> GetMetadata activity store settings. </summary>
        public StoreReadSettings StoreSettings { get; set; }
        /// <summary> GetMetadata activity format settings. </summary>
        public FormatReadSettings FormatSettings { get; set; }
    }
}
