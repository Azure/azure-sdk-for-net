// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Text.Json.Serialization;
using Azure.Core;

namespace Azure.Analytics.Synapse.Artifacts.Models
{
    [JsonConverter(typeof(SyMsapiddlResponseConverter))]
    public partial class SyMsapiddlResponse
    {
        internal static SyMsapiddlResponse DeserializeSyMsapiddlResponse(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            DDLType ddlType = default;
            string entityName = default;
            SASEntityType entityType = default;
            PublishStatus publishStatus = default;
            string originObjectId = default;
            string objectId = default;
            long objectVersion = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("ddlType"u8))
                {
                    ddlType = property.Value.GetString().ToDDLType();
                    continue;
                }
                if (property.NameEquals("entityName"u8))
                {
                    entityName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("entityType"u8))
                {
                    entityType = property.Value.GetString().ToSASEntityType();
                    continue;
                }
                if (property.NameEquals("publishStatus"u8))
                {
                    publishStatus = new PublishStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("originObjectId"u8))
                {
                    originObjectId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("objectId"u8))
                {
                    objectId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("objectVersion"u8))
                {
                    objectVersion = property.Value.GetInt64();
                    continue;
                }
            }
            return new SyMsapiddlResponse(ddlType, entityName, entityType, publishStatus, originObjectId, objectId, objectVersion);
        }

        internal partial class SyMsapiddlResponseConverter : JsonConverter<SyMsapiddlResponse>
        {
            public override void Write(Utf8JsonWriter writer, SyMsapiddlResponse model, JsonSerializerOptions options)
            {
                throw new NotImplementedException();
            }
            public override SyMsapiddlResponse Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
            {
                using var document = JsonDocument.ParseValue(ref reader);
                return DeserializeSyMsapiddlResponse(document.RootElement);
            }
        }
    }
}
