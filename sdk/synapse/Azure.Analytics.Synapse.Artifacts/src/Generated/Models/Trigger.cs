// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.Analytics.Synapse.Artifacts.Models
{
    /// <summary> Azure Synapse nested object which contains information about creating pipeline run. </summary>
    public partial class Trigger
    {
        /// <summary> Initializes a new instance of Trigger. </summary>
        public Trigger()
        {
            Annotations = new ChangeTrackingList<object>();
            AdditionalProperties = new ChangeTrackingDictionary<string, object>();
            Type = "Trigger";
        }

        /// <summary> Initializes a new instance of Trigger. </summary>
        /// <param name="type"> Trigger type. </param>
        /// <param name="description"> Trigger description. </param>
        /// <param name="runtimeState"> Indicates if trigger is running or not. Updated when Start/Stop APIs are called on the Trigger. </param>
        /// <param name="annotations"> List of tags that can be used for describing the trigger. </param>
        /// <param name="additionalProperties"> Additional Properties. </param>
        internal Trigger(string type, string description, TriggerRuntimeState? runtimeState, IList<object> annotations, IDictionary<string, object> additionalProperties)
        {
            Type = type ?? "Trigger";
            Description = description;
            RuntimeState = runtimeState;
            Annotations = annotations;
            AdditionalProperties = additionalProperties;
        }

        /// <summary> Trigger type. </summary>
        internal string Type { get; set; }
        /// <summary> Trigger description. </summary>
        public string Description { get; set; }
        /// <summary> Indicates if trigger is running or not. Updated when Start/Stop APIs are called on the Trigger. </summary>
        public TriggerRuntimeState? RuntimeState { get; }
        /// <summary> List of tags that can be used for describing the trigger. </summary>
        public IList<object> Annotations { get; }
        /// <summary> Additional Properties. </summary>
        public IDictionary<string, object> AdditionalProperties { get; }
    }
}
