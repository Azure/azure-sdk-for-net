// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Text.Json.Serialization;
using Azure.Core;

namespace Azure.Analytics.Synapse.Artifacts.Models
{
    [JsonConverter(typeof(DataLakeStorageAccountDetailsConverter))]
    public partial class DataLakeStorageAccountDetails : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(AccountUrl))
            {
                writer.WritePropertyName("accountUrl");
                writer.WriteStringValue(AccountUrl);
            }
            if (Optional.IsDefined(Filesystem))
            {
                writer.WritePropertyName("filesystem");
                writer.WriteStringValue(Filesystem);
            }
            writer.WriteEndObject();
        }

        internal static DataLakeStorageAccountDetails DeserializeDataLakeStorageAccountDetails(JsonElement element)
        {
            Optional<string> accountUrl = default;
            Optional<string> filesystem = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("accountUrl"))
                {
                    accountUrl = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("filesystem"))
                {
                    filesystem = property.Value.GetString();
                    continue;
                }
            }
            return new DataLakeStorageAccountDetails(accountUrl.Value, filesystem.Value);
        }

        internal partial class DataLakeStorageAccountDetailsConverter : JsonConverter<DataLakeStorageAccountDetails>
        {
            public override void Write(Utf8JsonWriter writer, DataLakeStorageAccountDetails model, JsonSerializerOptions options)
            {
                writer.WriteObjectValue(model);
            }
            public override DataLakeStorageAccountDetails Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
            {
                using var document = JsonDocument.ParseValue(ref reader);
                return DeserializeDataLakeStorageAccountDetails(document.RootElement);
            }
        }
    }
}
