// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.Analytics.Synapse.Artifacts.Models
{
    /// <summary> Defines the artifact entity. </summary>
    public partial class MDEntityProperties
    {
        /// <summary> Initializes a new instance of MDEntityProperties. </summary>
        public MDEntityProperties()
        {
            Properties = new ChangeTrackingDictionary<string, object>();
        }

        /// <summary> Initializes a new instance of MDEntityProperties. </summary>
        /// <param name="originObjectId"> Entity object id maintained by the caller. </param>
        /// <param name="objectId"> Entity object id maintained by SyMS. </param>
        /// <param name="objectVersion"> Entity object version maintained by SyMS. </param>
        /// <param name="publishStatus"> Publish status. </param>
        /// <param name="properties"> Property bag. </param>
        internal MDEntityProperties(string originObjectId, string objectId, long? objectVersion, PublishStatus? publishStatus, IDictionary<string, object> properties)
        {
            OriginObjectId = originObjectId;
            ObjectId = objectId;
            ObjectVersion = objectVersion;
            PublishStatus = publishStatus;
            Properties = properties;
        }

        /// <summary> Entity object id maintained by the caller. </summary>
        public string OriginObjectId { get; set; }
        /// <summary> Entity object id maintained by SyMS. </summary>
        public string ObjectId { get; }
        /// <summary> Entity object version maintained by SyMS. </summary>
        public long? ObjectVersion { get; }
        /// <summary> Publish status. </summary>
        public PublishStatus? PublishStatus { get; set; }
        /// <summary> Property bag. </summary>
        public IDictionary<string, object> Properties { get; }
    }
}
