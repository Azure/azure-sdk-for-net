// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Text.Json.Serialization;
using Azure.Core;

namespace Azure.Analytics.Synapse.Artifacts.Models
{
    [JsonConverter(typeof(SsisChildPackageConverter))]
    public partial class SsisChildPackage : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("packagePath");
            writer.WriteObjectValue(PackagePath);
            if (Optional.IsDefined(PackageName))
            {
                writer.WritePropertyName("packageName");
                writer.WriteStringValue(PackageName);
            }
            writer.WritePropertyName("packageContent");
            writer.WriteObjectValue(PackageContent);
            if (Optional.IsDefined(PackageLastModifiedDate))
            {
                writer.WritePropertyName("packageLastModifiedDate");
                writer.WriteStringValue(PackageLastModifiedDate);
            }
            writer.WriteEndObject();
        }

        internal static SsisChildPackage DeserializeSsisChildPackage(JsonElement element)
        {
            object packagePath = default;
            Optional<string> packageName = default;
            object packageContent = default;
            Optional<string> packageLastModifiedDate = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("packagePath"))
                {
                    packagePath = property.Value.GetObject();
                    continue;
                }
                if (property.NameEquals("packageName"))
                {
                    packageName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("packageContent"))
                {
                    packageContent = property.Value.GetObject();
                    continue;
                }
                if (property.NameEquals("packageLastModifiedDate"))
                {
                    packageLastModifiedDate = property.Value.GetString();
                    continue;
                }
            }
            return new SsisChildPackage(packagePath, packageName.Value, packageContent, packageLastModifiedDate.Value);
        }

        internal partial class SsisChildPackageConverter : JsonConverter<SsisChildPackage>
        {
            public override void Write(Utf8JsonWriter writer, SsisChildPackage model, JsonSerializerOptions options)
            {
                writer.WriteObjectValue(model);
            }
            public override SsisChildPackage Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
            {
                using var document = JsonDocument.ParseValue(ref reader);
                return DeserializeSsisChildPackage(document.RootElement);
            }
        }
    }
}
