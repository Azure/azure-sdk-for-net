// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Analytics.Synapse.Artifacts.Models
{
    public partial class NotebookCellOutputItem : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Name != null)
            {
                writer.WritePropertyName("name");
                writer.WriteStringValue(Name);
            }
            if (ExecutionCount != null)
            {
                writer.WritePropertyName("execution_count");
                writer.WriteNumberValue(ExecutionCount.Value);
            }
            writer.WritePropertyName("output_type");
            writer.WriteStringValue(OutputType.ToString());
            if (Text != null)
            {
                writer.WritePropertyName("text");
                writer.WriteObjectValue(Text);
            }
            if (Data != null)
            {
                writer.WritePropertyName("data");
                writer.WriteObjectValue(Data);
            }
            if (Metadata != null)
            {
                writer.WritePropertyName("metadata");
                writer.WriteObjectValue(Metadata);
            }
            writer.WriteEndObject();
        }

        internal static NotebookCellOutputItem DeserializeNotebookCellOutputItem(JsonElement element)
        {
            string name = default;
            int? executionCount = default;
            CellOutputType outputType = default;
            object text = default;
            object data = default;
            object metadata = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("name"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("execution_count"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    executionCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("output_type"))
                {
                    outputType = new CellOutputType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("text"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    text = property.Value.GetObject();
                    continue;
                }
                if (property.NameEquals("data"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    data = property.Value.GetObject();
                    continue;
                }
                if (property.NameEquals("metadata"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    metadata = property.Value.GetObject();
                    continue;
                }
            }
            return new NotebookCellOutputItem(name, executionCount, outputType, text, data, metadata);
        }
    }
}
