// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.Analytics.Synapse.Artifacts.Models
{
    public partial class SparkServicePlugin
    {
        internal static SparkServicePlugin DeserializeSparkServicePlugin(JsonElement element)
        {
            Optional<DateTimeOffset> preparationStartedAt = default;
            Optional<DateTimeOffset> resourceAcquisitionStartedAt = default;
            Optional<DateTimeOffset> submissionStartedAt = default;
            Optional<DateTimeOffset> monitoringStartedAt = default;
            Optional<DateTimeOffset> cleanupStartedAt = default;
            Optional<PluginCurrentState> currentState = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("preparationStartedAt"))
                {
                    preparationStartedAt = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("resourceAcquisitionStartedAt"))
                {
                    resourceAcquisitionStartedAt = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("submissionStartedAt"))
                {
                    submissionStartedAt = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("monitoringStartedAt"))
                {
                    monitoringStartedAt = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("cleanupStartedAt"))
                {
                    cleanupStartedAt = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("currentState"))
                {
                    currentState = new PluginCurrentState(property.Value.GetString());
                    continue;
                }
            }
            return new SparkServicePlugin(preparationStartedAt.HasValue ? preparationStartedAt.Value : (DateTimeOffset?)null, resourceAcquisitionStartedAt.HasValue ? resourceAcquisitionStartedAt.Value : (DateTimeOffset?)null, submissionStartedAt.HasValue ? submissionStartedAt.Value : (DateTimeOffset?)null, monitoringStartedAt.HasValue ? monitoringStartedAt.Value : (DateTimeOffset?)null, cleanupStartedAt.HasValue ? cleanupStartedAt.Value : (DateTimeOffset?)null, currentState.HasValue ? currentState.Value : (PluginCurrentState?)null);
        }
    }
}
