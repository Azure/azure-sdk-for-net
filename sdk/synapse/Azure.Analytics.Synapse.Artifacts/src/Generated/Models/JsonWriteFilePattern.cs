// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.Analytics.Synapse.Artifacts.Models
{
    /// <summary> File pattern of JSON. This setting controls the way a collection of JSON objects will be treated. The default value is &apos;setOfObjects&apos;. It is case-sensitive. </summary>
    public readonly partial struct JsonWriteFilePattern : IEquatable<JsonWriteFilePattern>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="JsonWriteFilePattern"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public JsonWriteFilePattern(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string SetOfObjectsValue = "setOfObjects";
        private const string ArrayOfObjectsValue = "arrayOfObjects";

        /// <summary> setOfObjects. </summary>
        public static JsonWriteFilePattern SetOfObjects { get; } = new JsonWriteFilePattern(SetOfObjectsValue);
        /// <summary> arrayOfObjects. </summary>
        public static JsonWriteFilePattern ArrayOfObjects { get; } = new JsonWriteFilePattern(ArrayOfObjectsValue);
        /// <summary> Determines if two <see cref="JsonWriteFilePattern"/> values are the same. </summary>
        public static bool operator ==(JsonWriteFilePattern left, JsonWriteFilePattern right) => left.Equals(right);
        /// <summary> Determines if two <see cref="JsonWriteFilePattern"/> values are not the same. </summary>
        public static bool operator !=(JsonWriteFilePattern left, JsonWriteFilePattern right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="JsonWriteFilePattern"/>. </summary>
        public static implicit operator JsonWriteFilePattern(string value) => new JsonWriteFilePattern(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is JsonWriteFilePattern other && Equals(other);
        /// <inheritdoc />
        public bool Equals(JsonWriteFilePattern other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
