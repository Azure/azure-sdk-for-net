// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.Analytics.Synapse.Artifacts.Models
{
    /// <summary> Storage descriptor. </summary>
    public partial class StorageDescriptor
    {
        /// <summary> Initializes a new instance of StorageDescriptor. </summary>
        /// <param name="columns"> Column information. </param>
        /// <param name="format"> Storage descriptor format information. </param>
        /// <param name="source"> Storage descriptor data source information. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="columns"/>, <paramref name="format"/> or <paramref name="source"/> is null. </exception>
        public StorageDescriptor(IEnumerable<DataColumn> columns, FormatInfo format, DataSource source)
        {
            Argument.AssertNotNull(columns, nameof(columns));
            Argument.AssertNotNull(format, nameof(format));
            Argument.AssertNotNull(source, nameof(source));

            Columns = columns.ToList();
            Format = format;
            Source = source;
            Properties = new ChangeTrackingDictionary<string, object>();
        }

        /// <summary> Initializes a new instance of StorageDescriptor. </summary>
        /// <param name="distribution"> Storage descriptor information. </param>
        /// <param name="columns"> Column information. </param>
        /// <param name="format"> Storage descriptor format information. </param>
        /// <param name="source"> Storage descriptor data source information. </param>
        /// <param name="properties"> Property bag. </param>
        /// <param name="serDeInfo"> SerDe information. </param>
        internal StorageDescriptor(DistributionInfo distribution, IList<DataColumn> columns, FormatInfo format, DataSource source, IDictionary<string, object> properties, object serDeInfo)
        {
            Distribution = distribution;
            Columns = columns;
            Format = format;
            Source = source;
            Properties = properties;
            SerDeInfo = serDeInfo;
        }

        /// <summary> Storage descriptor information. </summary>
        public DistributionInfo Distribution { get; set; }
        /// <summary> Column information. </summary>
        public IList<DataColumn> Columns { get; }
        /// <summary> Storage descriptor format information. </summary>
        public FormatInfo Format { get; set; }
        /// <summary> Storage descriptor data source information. </summary>
        public DataSource Source { get; set; }
        /// <summary> Property bag. </summary>
        public IDictionary<string, object> Properties { get; }
        /// <summary> SerDe information. </summary>
        public object SerDeInfo { get; set; }
    }
}
