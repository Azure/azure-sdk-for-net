// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Text.Json.Serialization;
using Azure.Core;

namespace Azure.Analytics.Synapse.Artifacts.Models
{
    [JsonConverter(typeof(RerunTriggerResourceConverter))]
    public partial class RerunTriggerResource : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("properties");
            writer.WriteObjectValue(Properties);
            writer.WriteEndObject();
        }

        internal static RerunTriggerResource DeserializeRerunTriggerResource(JsonElement element)
        {
            RerunTumblingWindowTrigger properties = default;
            Optional<string> etag = default;
            Optional<string> id = default;
            Optional<string> name = default;
            Optional<string> type = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("properties"))
                {
                    properties = RerunTumblingWindowTrigger.DeserializeRerunTumblingWindowTrigger(property.Value);
                    continue;
                }
                if (property.NameEquals("etag"))
                {
                    etag = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("id"))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = property.Value.GetString();
                    continue;
                }
            }
            return new RerunTriggerResource(id.Value, name.Value, type.Value, etag.Value, properties);
        }

        internal partial class RerunTriggerResourceConverter : JsonConverter<RerunTriggerResource>
        {
            public override void Write(Utf8JsonWriter writer, RerunTriggerResource model, JsonSerializerOptions options)
            {
                writer.WriteObjectValue(model);
            }
            public override RerunTriggerResource Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
            {
                using var document = JsonDocument.ParseValue(ref reader);
                return DeserializeRerunTriggerResource(document.RootElement);
            }
        }
    }
}
