// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using System.Text.Json.Serialization;
using Azure.Core;

namespace Azure.Analytics.Synapse.Artifacts.Models
{
    [JsonConverter(typeof(SyMsapiddlResponsesConverter))]
    public partial class SyMsapiddlResponses
    {
        internal static SyMsapiddlResponses DeserializeSyMsapiddlResponses(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            IReadOnlyList<SyMsapiddlResponse> syMsApiDdlResponse = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("syMsApiDdlResponse"u8))
                {
                    List<SyMsapiddlResponse> array = new List<SyMsapiddlResponse>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(SyMsapiddlResponse.DeserializeSyMsapiddlResponse(item));
                    }
                    syMsApiDdlResponse = array;
                    continue;
                }
            }
            return new SyMsapiddlResponses(syMsApiDdlResponse);
        }

        internal partial class SyMsapiddlResponsesConverter : JsonConverter<SyMsapiddlResponses>
        {
            public override void Write(Utf8JsonWriter writer, SyMsapiddlResponses model, JsonSerializerOptions options)
            {
                throw new NotImplementedException();
            }
            public override SyMsapiddlResponses Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
            {
                using var document = JsonDocument.ParseValue(ref reader);
                return DeserializeSyMsapiddlResponses(document.RootElement);
            }
        }
    }
}
