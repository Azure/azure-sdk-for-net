<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetRoleDefinitionsAsync(bool?,string,RequestContext)">
      <example>
This sample shows how to call GetRoleDefinitionsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
RoleDefinitionsClient client = new RoleDefinitionsClient(endpoint, credential);

Response response = await client.GetRoleDefinitionsAsync(null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
This sample shows how to call GetRoleDefinitionsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
RoleDefinitionsClient client = new RoleDefinitionsClient(endpoint, credential);

Response response = await client.GetRoleDefinitionsAsync(true, "<scope>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("id").ToString());
Console.WriteLine(result[0].GetProperty("name").ToString());
Console.WriteLine(result[0].GetProperty("isBuiltIn").ToString());
Console.WriteLine(result[0].GetProperty("description").ToString());
Console.WriteLine(result[0].GetProperty("permissions")[0].GetProperty("actions")[0].ToString());
Console.WriteLine(result[0].GetProperty("permissions")[0].GetProperty("notActions")[0].ToString());
Console.WriteLine(result[0].GetProperty("permissions")[0].GetProperty("dataActions")[0].ToString());
Console.WriteLine(result[0].GetProperty("permissions")[0].GetProperty("notDataActions")[0].ToString());
Console.WriteLine(result[0].GetProperty("scopes")[0].ToString());
Console.WriteLine(result[0].GetProperty("availabilityStatus").ToString());
]]></code></example>
    </member>
    <member name="GetRoleDefinitions(bool?,string,RequestContext)">
      <example>
This sample shows how to call GetRoleDefinitions and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
RoleDefinitionsClient client = new RoleDefinitionsClient(endpoint, credential);

Response response = client.GetRoleDefinitions(null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
This sample shows how to call GetRoleDefinitions with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
RoleDefinitionsClient client = new RoleDefinitionsClient(endpoint, credential);

Response response = client.GetRoleDefinitions(true, "<scope>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("id").ToString());
Console.WriteLine(result[0].GetProperty("name").ToString());
Console.WriteLine(result[0].GetProperty("isBuiltIn").ToString());
Console.WriteLine(result[0].GetProperty("description").ToString());
Console.WriteLine(result[0].GetProperty("permissions")[0].GetProperty("actions")[0].ToString());
Console.WriteLine(result[0].GetProperty("permissions")[0].GetProperty("notActions")[0].ToString());
Console.WriteLine(result[0].GetProperty("permissions")[0].GetProperty("dataActions")[0].ToString());
Console.WriteLine(result[0].GetProperty("permissions")[0].GetProperty("notDataActions")[0].ToString());
Console.WriteLine(result[0].GetProperty("scopes")[0].ToString());
Console.WriteLine(result[0].GetProperty("availabilityStatus").ToString());
]]></code></example>
    </member>
    <member name="GetRoleDefinitionByIdAsync(string,RequestContext)">
      <example>
This sample shows how to call GetRoleDefinitionByIdAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
RoleDefinitionsClient client = new RoleDefinitionsClient(endpoint, credential);

Response response = await client.GetRoleDefinitionByIdAsync("<roleDefinitionId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetRoleDefinitionByIdAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
RoleDefinitionsClient client = new RoleDefinitionsClient(endpoint, credential);

Response response = await client.GetRoleDefinitionByIdAsync("<roleDefinitionId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("isBuiltIn").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("permissions")[0].GetProperty("actions")[0].ToString());
Console.WriteLine(result.GetProperty("permissions")[0].GetProperty("notActions")[0].ToString());
Console.WriteLine(result.GetProperty("permissions")[0].GetProperty("dataActions")[0].ToString());
Console.WriteLine(result.GetProperty("permissions")[0].GetProperty("notDataActions")[0].ToString());
Console.WriteLine(result.GetProperty("scopes")[0].ToString());
Console.WriteLine(result.GetProperty("availabilityStatus").ToString());
]]></code></example>
    </member>
    <member name="GetRoleDefinitionById(string,RequestContext)">
      <example>
This sample shows how to call GetRoleDefinitionById and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
RoleDefinitionsClient client = new RoleDefinitionsClient(endpoint, credential);

Response response = client.GetRoleDefinitionById("<roleDefinitionId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetRoleDefinitionById with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
RoleDefinitionsClient client = new RoleDefinitionsClient(endpoint, credential);

Response response = client.GetRoleDefinitionById("<roleDefinitionId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("isBuiltIn").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("permissions")[0].GetProperty("actions")[0].ToString());
Console.WriteLine(result.GetProperty("permissions")[0].GetProperty("notActions")[0].ToString());
Console.WriteLine(result.GetProperty("permissions")[0].GetProperty("dataActions")[0].ToString());
Console.WriteLine(result.GetProperty("permissions")[0].GetProperty("notDataActions")[0].ToString());
Console.WriteLine(result.GetProperty("scopes")[0].ToString());
Console.WriteLine(result.GetProperty("availabilityStatus").ToString());
]]></code></example>
    </member>
    <member name="GetScopesAsync(RequestContext)">
      <example>
This sample shows how to call GetScopesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
RoleDefinitionsClient client = new RoleDefinitionsClient(endpoint, credential);

Response response = await client.GetScopesAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
This sample shows how to call GetScopesAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
RoleDefinitionsClient client = new RoleDefinitionsClient(endpoint, credential);

Response response = await client.GetScopesAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetScopes(RequestContext)">
      <example>
This sample shows how to call GetScopes and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
RoleDefinitionsClient client = new RoleDefinitionsClient(endpoint, credential);

Response response = client.GetScopes(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
This sample shows how to call GetScopes with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
RoleDefinitionsClient client = new RoleDefinitionsClient(endpoint, credential);

Response response = client.GetScopes(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
  </members>
</doc>