// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.Analytics.Synapse.AccessControl.Models
{
    /// <summary> Synapse role definition details. </summary>
    public partial class SynapseRbacPermission
    {
        /// <summary> Initializes a new instance of SynapseRbacPermission. </summary>
        internal SynapseRbacPermission()
        {
            Actions = new ChangeTrackingList<string>();
            NotActions = new ChangeTrackingList<string>();
            DataActions = new ChangeTrackingList<string>();
            NotDataActions = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of SynapseRbacPermission. </summary>
        /// <param name="actions"> List of actions. </param>
        /// <param name="notActions"> List of Not actions. </param>
        /// <param name="dataActions"> List of data actions. </param>
        /// <param name="notDataActions"> List of Not data actions. </param>
        internal SynapseRbacPermission(IReadOnlyList<string> actions, IReadOnlyList<string> notActions, IReadOnlyList<string> dataActions, IReadOnlyList<string> notDataActions)
        {
            Actions = actions;
            NotActions = notActions;
            DataActions = dataActions;
            NotDataActions = notDataActions;
        }

        /// <summary> List of actions. </summary>
        public IReadOnlyList<string> Actions { get; }
        /// <summary> List of Not actions. </summary>
        public IReadOnlyList<string> NotActions { get; }
        /// <summary> List of data actions. </summary>
        public IReadOnlyList<string> DataActions { get; }
        /// <summary> List of Not data actions. </summary>
        public IReadOnlyList<string> NotDataActions { get; }
    }
}
