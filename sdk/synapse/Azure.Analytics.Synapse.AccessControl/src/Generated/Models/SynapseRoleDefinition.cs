// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.Analytics.Synapse.AccessControl.Models
{
    /// <summary> Synapse role definition details. </summary>
    public partial class SynapseRoleDefinition
    {
        /// <summary> Initializes a new instance of SynapseRoleDefinition. </summary>
        internal SynapseRoleDefinition()
        {
            Permissions = new ChangeTrackingList<SynapseRbacPermission>();
            Scopes = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of SynapseRoleDefinition. </summary>
        /// <param name="id"> Role Definition ID. </param>
        /// <param name="name"> Name of the Synapse role. </param>
        /// <param name="isBuiltIn"> Is a built-in role or not. </param>
        /// <param name="description"> Description for the Synapse role. </param>
        /// <param name="permissions"> Permissions for the Synapse role. </param>
        /// <param name="scopes"> Allowed scopes for the Synapse role. </param>
        /// <param name="availabilityStatus"> Availability of the Synapse role. </param>
        internal SynapseRoleDefinition(Guid? id, string name, bool? isBuiltIn, string description, IReadOnlyList<SynapseRbacPermission> permissions, IReadOnlyList<string> scopes, string availabilityStatus)
        {
            Id = id;
            Name = name;
            IsBuiltIn = isBuiltIn;
            Description = description;
            Permissions = permissions;
            Scopes = scopes;
            AvailabilityStatus = availabilityStatus;
        }

        /// <summary> Role Definition ID. </summary>
        public Guid? Id { get; }
        /// <summary> Name of the Synapse role. </summary>
        public string Name { get; }
        /// <summary> Is a built-in role or not. </summary>
        public bool? IsBuiltIn { get; }
        /// <summary> Description for the Synapse role. </summary>
        public string Description { get; }
        /// <summary> Permissions for the Synapse role. </summary>
        public IReadOnlyList<SynapseRbacPermission> Permissions { get; }
        /// <summary> Allowed scopes for the Synapse role. </summary>
        public IReadOnlyList<string> Scopes { get; }
        /// <summary> Availability of the Synapse role. </summary>
        public string AvailabilityStatus { get; }
    }
}
