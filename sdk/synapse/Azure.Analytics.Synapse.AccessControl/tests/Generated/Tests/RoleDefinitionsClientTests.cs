// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.Analytics.Synapse.AccessControl.Tests
{
    public partial class RoleDefinitionsClientTests : AnalyticsSynapseAccessControlTestBase
    {
        public RoleDefinitionsClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetRoleDefinitions_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            RoleDefinitionsClient client = CreateRoleDefinitionsClient(endpoint, credential);

            Response response = await client.GetRoleDefinitionsAsync(null, null, null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetRoleDefinitions_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            RoleDefinitionsClient client = CreateRoleDefinitionsClient(endpoint, credential);

            Response response = await client.GetRoleDefinitionsAsync(true, "<scope>", null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetRoleDefinitionById_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            RoleDefinitionsClient client = CreateRoleDefinitionsClient(endpoint, credential);

            Response response = await client.GetRoleDefinitionByIdAsync("<roleDefinitionId>", null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetRoleDefinitionById_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            RoleDefinitionsClient client = CreateRoleDefinitionsClient(endpoint, credential);

            Response response = await client.GetRoleDefinitionByIdAsync("<roleDefinitionId>", null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetScopes_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            RoleDefinitionsClient client = CreateRoleDefinitionsClient(endpoint, credential);

            Response response = await client.GetScopesAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetScopes_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            RoleDefinitionsClient client = CreateRoleDefinitionsClient(endpoint, credential);

            Response response = await client.GetScopesAsync(null);
        }
    }
}
