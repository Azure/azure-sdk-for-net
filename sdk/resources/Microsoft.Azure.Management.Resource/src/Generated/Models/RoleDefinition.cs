// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ResourceManager.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Role definition properties.
    /// </summary>
    public partial class RoleDefinition
    {
        /// <summary>
        /// Initializes a new instance of the RoleDefinition class.
        /// </summary>
        public RoleDefinition()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RoleDefinition class.
        /// </summary>
        /// <param name="id">The role definition ID.</param>
        /// <param name="name">The role definition name.</param>
        /// <param name="isServiceRole">If this is a service role.</param>
        /// <param name="permissions">Role definition permissions.</param>
        /// <param name="scopes">Role definition assignable scopes.</param>
        public RoleDefinition(string id = default(string), string name = default(string), bool? isServiceRole = default(bool?), IList<Permission> permissions = default(IList<Permission>), IList<string> scopes = default(IList<string>))
        {
            Id = id;
            Name = name;
            IsServiceRole = isServiceRole;
            Permissions = permissions;
            Scopes = scopes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the role definition ID.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets the role definition name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets if this is a service role.
        /// </summary>
        [JsonProperty(PropertyName = "isServiceRole")]
        public bool? IsServiceRole { get; set; }

        /// <summary>
        /// Gets or sets role definition permissions.
        /// </summary>
        [JsonProperty(PropertyName = "permissions")]
        public IList<Permission> Permissions { get; set; }

        /// <summary>
        /// Gets or sets role definition assignable scopes.
        /// </summary>
        [JsonProperty(PropertyName = "scopes")]
        public IList<string> Scopes { get; set; }

    }
}
