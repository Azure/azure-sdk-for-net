// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ResourceManager.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Specifies whether template expressions are evaluated within the scope
    /// of the parent template or nested template.
    /// </summary>
    public partial class ExpressionEvaluationOptions
    {
        /// <summary>
        /// Initializes a new instance of the ExpressionEvaluationOptions
        /// class.
        /// </summary>
        public ExpressionEvaluationOptions()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ExpressionEvaluationOptions
        /// class.
        /// </summary>
        /// <param name="scope">The scope to be used for evaluation of
        /// parameters, variables and functions in a nested template. Possible
        /// values include: 'NotSpecified', 'Outer', 'Inner'</param>
        public ExpressionEvaluationOptions(string scope = default(string))
        {
            Scope = scope;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the scope to be used for evaluation of parameters,
        /// variables and functions in a nested template. Possible values
        /// include: 'NotSpecified', 'Outer', 'Inner'
        /// </summary>
        [JsonProperty(PropertyName = "scope")]
        public string Scope { get; set; }

    }
}
