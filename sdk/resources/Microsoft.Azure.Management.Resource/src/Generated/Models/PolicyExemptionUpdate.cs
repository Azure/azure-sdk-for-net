// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ResourceManager.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The policy exemption for Patch request.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class PolicyExemptionUpdate
    {
        /// <summary>
        /// Initializes a new instance of the PolicyExemptionUpdate class.
        /// </summary>
        public PolicyExemptionUpdate()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PolicyExemptionUpdate class.
        /// </summary>
        /// <param name="resourceSelectors">The resource selector list to
        /// filter policies by resource properties.</param>
        /// <param name="assignmentScopeValidation">The option whether validate
        /// the exemption is at or under the assignment scope. Possible values
        /// include: 'Default', 'DoNotValidate'</param>
        public PolicyExemptionUpdate(IList<ResourceSelector> resourceSelectors = default(IList<ResourceSelector>), string assignmentScopeValidation = default(string))
        {
            ResourceSelectors = resourceSelectors;
            AssignmentScopeValidation = assignmentScopeValidation;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the resource selector list to filter policies by
        /// resource properties.
        /// </summary>
        [JsonProperty(PropertyName = "properties.resourceSelectors")]
        public IList<ResourceSelector> ResourceSelectors { get; set; }

        /// <summary>
        /// Gets or sets the option whether validate the exemption is at or
        /// under the assignment scope. Possible values include: 'Default',
        /// 'DoNotValidate'
        /// </summary>
        [JsonProperty(PropertyName = "properties.assignmentScopeValidation")]
        public string AssignmentScopeValidation { get; set; }

    }
}
