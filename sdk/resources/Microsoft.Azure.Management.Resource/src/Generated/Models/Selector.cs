// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ResourceManager.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The selector expression.
    /// </summary>
    public partial class Selector
    {
        /// <summary>
        /// Initializes a new instance of the Selector class.
        /// </summary>
        public Selector()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Selector class.
        /// </summary>
        /// <param name="kind">The selector kind. Possible values include:
        /// 'resourceLocation', 'resourceType', 'resourceWithoutLocation',
        /// 'policyDefinitionReferenceId'</param>
        /// <param name="inProperty">The list of values to filter in.</param>
        /// <param name="notIn">The list of values to filter out.</param>
        public Selector(string kind = default(string), IList<string> inProperty = default(IList<string>), IList<string> notIn = default(IList<string>))
        {
            Kind = kind;
            InProperty = inProperty;
            NotIn = notIn;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the selector kind. Possible values include:
        /// 'resourceLocation', 'resourceType', 'resourceWithoutLocation',
        /// 'policyDefinitionReferenceId'
        /// </summary>
        [JsonProperty(PropertyName = "kind")]
        public string Kind { get; set; }

        /// <summary>
        /// Gets or sets the list of values to filter in.
        /// </summary>
        [JsonProperty(PropertyName = "in")]
        public IList<string> InProperty { get; set; }

        /// <summary>
        /// Gets or sets the list of values to filter out.
        /// </summary>
        [JsonProperty(PropertyName = "notIn")]
        public IList<string> NotIn { get; set; }

    }
}
