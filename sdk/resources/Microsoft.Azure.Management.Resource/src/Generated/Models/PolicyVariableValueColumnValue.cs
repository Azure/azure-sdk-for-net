// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ResourceManager.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The name value tuple for this variable value column.
    /// </summary>
    public partial class PolicyVariableValueColumnValue
    {
        /// <summary>
        /// Initializes a new instance of the PolicyVariableValueColumnValue
        /// class.
        /// </summary>
        public PolicyVariableValueColumnValue()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PolicyVariableValueColumnValue
        /// class.
        /// </summary>
        /// <param name="columnName">Column name for the variable value</param>
        /// <param name="columnValue">Column value for the variable value; this
        /// can be an integer, double, boolean, null or a string.</param>
        public PolicyVariableValueColumnValue(string columnName, object columnValue)
        {
            ColumnName = columnName;
            ColumnValue = columnValue;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets column name for the variable value
        /// </summary>
        [JsonProperty(PropertyName = "columnName")]
        public string ColumnName { get; set; }

        /// <summary>
        /// Gets or sets column value for the variable value; this can be an
        /// integer, double, boolean, null or a string.
        /// </summary>
        [JsonProperty(PropertyName = "columnValue")]
        public object ColumnValue { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ColumnName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ColumnName");
            }
            if (ColumnValue == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ColumnValue");
            }
        }
    }
}
