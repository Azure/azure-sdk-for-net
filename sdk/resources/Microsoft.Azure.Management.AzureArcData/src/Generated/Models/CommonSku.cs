// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AzureArcData.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The resource model definition representing SKU for ARM resources
    /// </summary>
    public partial class CommonSku
    {
        /// <summary>
        /// Initializes a new instance of the CommonSku class.
        /// </summary>
        public CommonSku()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CommonSku class.
        /// </summary>
        /// <param name="name">The name of the SKU.  It is typically a
        /// letter+number code</param>
        /// <param name="dev">Whether dev/test is enabled. When the dev field
        /// is set to true, the resource is used for dev/test purpose. </param>
        /// <param name="size">The SKU size. When the name field is the
        /// combination of tier and some other value, this would be the
        /// standalone code. </param>
        /// <param name="family">If the service has different generations of
        /// hardware, for the same SKU, then that can be captured here.</param>
        /// <param name="capacity">If the SKU supports scale out/in then the
        /// capacity integer should be included. If scale out/in is not
        /// possible for the resource this may be omitted.</param>
        public CommonSku(string name, bool? dev = default(bool?), string size = default(string), string family = default(string), int? capacity = default(int?))
        {
            Name = name;
            Dev = dev;
            Size = size;
            Family = family;
            Capacity = capacity;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the SKU.  It is typically a letter+number
        /// code
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets whether dev/test is enabled. When the dev field is set
        /// to true, the resource is used for dev/test purpose.
        /// </summary>
        [JsonProperty(PropertyName = "dev")]
        public bool? Dev { get; set; }

        /// <summary>
        /// Gets or sets the SKU size. When the name field is the combination
        /// of tier and some other value, this would be the standalone code.
        /// </summary>
        [JsonProperty(PropertyName = "size")]
        public string Size { get; set; }

        /// <summary>
        /// Gets or sets if the service has different generations of hardware,
        /// for the same SKU, then that can be captured here.
        /// </summary>
        [JsonProperty(PropertyName = "family")]
        public string Family { get; set; }

        /// <summary>
        /// Gets or sets if the SKU supports scale out/in then the capacity
        /// integer should be included. If scale out/in is not possible for the
        /// resource this may be omitted.
        /// </summary>
        [JsonProperty(PropertyName = "capacity")]
        public int? Capacity { get; set; }

    }
}
