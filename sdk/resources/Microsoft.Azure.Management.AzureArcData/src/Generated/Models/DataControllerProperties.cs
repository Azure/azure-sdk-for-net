// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AzureArcData.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The data controller properties.
    /// </summary>
    public partial class DataControllerProperties
    {
        /// <summary>
        /// Initializes a new instance of the DataControllerProperties class.
        /// </summary>
        public DataControllerProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DataControllerProperties class.
        /// </summary>
        /// <param name="k8sRaw">The raw kubernetes information</param>
        /// <param name="lastUploadedDate">Last uploaded date from Kubernetes
        /// cluster. Defaults to current date time</param>
        public DataControllerProperties(OnPremiseProperty onPremiseProperty = default(OnPremiseProperty), object k8sRaw = default(object), UploadWatermark uploadWatermark = default(UploadWatermark), System.DateTime? lastUploadedDate = default(System.DateTime?), BasicLoginInformation basicLoginInformation = default(BasicLoginInformation), LogAnalyticsWorkspaceConfig logAnalyticsWorkspaceConfig = default(LogAnalyticsWorkspaceConfig), UploadServicePrincipal uploadServicePrincipal = default(UploadServicePrincipal), string provisioningState = default(string))
        {
            OnPremiseProperty = onPremiseProperty;
            K8sRaw = k8sRaw;
            UploadWatermark = uploadWatermark;
            LastUploadedDate = lastUploadedDate;
            BasicLoginInformation = basicLoginInformation;
            LogAnalyticsWorkspaceConfig = logAnalyticsWorkspaceConfig;
            UploadServicePrincipal = uploadServicePrincipal;
            ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "onPremiseProperty")]
        public OnPremiseProperty OnPremiseProperty { get; set; }

        /// <summary>
        /// Gets or sets the raw kubernetes information
        /// </summary>
        [JsonProperty(PropertyName = "k8sRaw")]
        public object K8sRaw { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "uploadWatermark")]
        public UploadWatermark UploadWatermark { get; set; }

        /// <summary>
        /// Gets or sets last uploaded date from Kubernetes cluster. Defaults
        /// to current date time
        /// </summary>
        [JsonProperty(PropertyName = "lastUploadedDate")]
        public System.DateTime? LastUploadedDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "basicLoginInformation")]
        public BasicLoginInformation BasicLoginInformation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "logAnalyticsWorkspaceConfig")]
        public LogAnalyticsWorkspaceConfig LogAnalyticsWorkspaceConfig { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "uploadServicePrincipal")]
        public UploadServicePrincipal UploadServicePrincipal { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; private set; }

    }
}
