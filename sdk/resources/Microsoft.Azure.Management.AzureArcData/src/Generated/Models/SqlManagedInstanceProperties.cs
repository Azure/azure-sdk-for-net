// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AzureArcData.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Properties of sqlManagedInstance.
    /// </summary>
    public partial class SqlManagedInstanceProperties
    {
        /// <summary>
        /// Initializes a new instance of the SqlManagedInstanceProperties
        /// class.
        /// </summary>
        public SqlManagedInstanceProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SqlManagedInstanceProperties
        /// class.
        /// </summary>
        /// <param name="dataControllerId">null</param>
        /// <param name="admin">The instance admin user</param>
        /// <param name="startTime">The instance start time</param>
        /// <param name="endTime">The instance end time</param>
        /// <param name="k8sRaw">The raw kubernetes information</param>
        /// <param name="basicLoginInformation">Username and password for basic
        /// authentication.</param>
        /// <param name="lastUploadedDate">Last uploaded date from Kubernetes
        /// cluster. Defaults to current date time</param>
        public SqlManagedInstanceProperties(string dataControllerId = default(string), string admin = default(string), string startTime = default(string), string endTime = default(string), object k8sRaw = default(object), BasicLoginInformation basicLoginInformation = default(BasicLoginInformation), System.DateTime? lastUploadedDate = default(System.DateTime?), string provisioningState = default(string))
        {
            DataControllerId = dataControllerId;
            Admin = admin;
            StartTime = startTime;
            EndTime = endTime;
            K8sRaw = k8sRaw;
            BasicLoginInformation = basicLoginInformation;
            LastUploadedDate = lastUploadedDate;
            ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets null
        /// </summary>
        [JsonProperty(PropertyName = "dataControllerId")]
        public string DataControllerId { get; set; }

        /// <summary>
        /// Gets or sets the instance admin user
        /// </summary>
        [JsonProperty(PropertyName = "admin")]
        public string Admin { get; set; }

        /// <summary>
        /// Gets or sets the instance start time
        /// </summary>
        [JsonProperty(PropertyName = "startTime")]
        public string StartTime { get; set; }

        /// <summary>
        /// Gets or sets the instance end time
        /// </summary>
        [JsonProperty(PropertyName = "endTime")]
        public string EndTime { get; set; }

        /// <summary>
        /// Gets or sets the raw kubernetes information
        /// </summary>
        [JsonProperty(PropertyName = "k8sRaw")]
        public object K8sRaw { get; set; }

        /// <summary>
        /// Gets or sets username and password for basic authentication.
        /// </summary>
        [JsonProperty(PropertyName = "basicLoginInformation")]
        public BasicLoginInformation BasicLoginInformation { get; set; }

        /// <summary>
        /// Gets or sets last uploaded date from Kubernetes cluster. Defaults
        /// to current date time
        /// </summary>
        [JsonProperty(PropertyName = "lastUploadedDate")]
        public System.DateTime? LastUploadedDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; private set; }

    }
}
