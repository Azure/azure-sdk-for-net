// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ResourceManager.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Resource information.
    /// </summary>
    public partial class GenericResourceExpanded : GenericResource
    {
        /// <summary>
        /// Initializes a new instance of the GenericResourceExpanded class.
        /// </summary>
        public GenericResourceExpanded()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GenericResourceExpanded class.
        /// </summary>
        /// <param name="id">Resource ID</param>
        /// <param name="name">Resource name</param>
        /// <param name="type">Resource type</param>
        /// <param name="location">Resource location</param>
        /// <param name="tags">Resource tags</param>
        /// <param name="plan">The plan of the resource.</param>
        /// <param name="properties">The resource properties.</param>
        /// <param name="kind">The kind of the resource.</param>
        /// <param name="managedBy">ID of the resource that manages this
        /// resource.</param>
        /// <param name="sku">The SKU of the resource.</param>
        /// <param name="identity">The identity of the resource.</param>
        /// <param name="createdTime">The created time of the resource. This is
        /// only present if requested via the $expand query parameter.</param>
        /// <param name="changedTime">The changed time of the resource. This is
        /// only present if requested via the $expand query parameter.</param>
        /// <param name="provisioningState">The provisioning state of the
        /// resource. This is only present if requested via the $expand query
        /// parameter.</param>
        public GenericResourceExpanded(string id = default(string), string name = default(string), string type = default(string), string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), Plan plan = default(Plan), object properties = default(object), string kind = default(string), string managedBy = default(string), Sku sku = default(Sku), Identity identity = default(Identity), System.DateTime? createdTime = default(System.DateTime?), System.DateTime? changedTime = default(System.DateTime?), string provisioningState = default(string))
            : base(id, name, type, location, tags, plan, properties, kind, managedBy, sku, identity)
        {
            CreatedTime = createdTime;
            ChangedTime = changedTime;
            ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the created time of the resource. This is only present if
        /// requested via the $expand query parameter.
        /// </summary>
        [JsonProperty(PropertyName = "createdTime")]
        public System.DateTime? CreatedTime { get; private set; }

        /// <summary>
        /// Gets the changed time of the resource. This is only present if
        /// requested via the $expand query parameter.
        /// </summary>
        [JsonProperty(PropertyName = "changedTime")]
        public System.DateTime? ChangedTime { get; private set; }

        /// <summary>
        /// Gets the provisioning state of the resource. This is only present
        /// if requested via the $expand query parameter.
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
