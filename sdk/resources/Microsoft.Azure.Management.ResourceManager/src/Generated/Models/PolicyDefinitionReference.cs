// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ResourceManager.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The policy definition reference.
    /// </summary>
    public partial class PolicyDefinitionReference
    {
        /// <summary>
        /// Initializes a new instance of the PolicyDefinitionReference class.
        /// </summary>
        public PolicyDefinitionReference()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PolicyDefinitionReference class.
        /// </summary>
        /// <param name="policyDefinitionId">The ID of the policy definition or
        /// policy set definition.</param>
        /// <param name="parameters">The parameter values for the referenced
        /// policy rule. The keys are the parameter names.</param>
        /// <param name="policyDefinitionReferenceId">A unique id (within the
        /// policy set definition) for this policy definition
        /// reference.</param>
        /// <param name="groupNames">The name of the groups that this policy
        /// definition reference belongs to.</param>
        public PolicyDefinitionReference(string policyDefinitionId, IDictionary<string, ParameterValuesValue> parameters = default(IDictionary<string, ParameterValuesValue>), string policyDefinitionReferenceId = default(string), IList<string> groupNames = default(IList<string>))
        {
            PolicyDefinitionId = policyDefinitionId;
            Parameters = parameters;
            PolicyDefinitionReferenceId = policyDefinitionReferenceId;
            GroupNames = groupNames;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the ID of the policy definition or policy set
        /// definition.
        /// </summary>
        [JsonProperty(PropertyName = "policyDefinitionId")]
        public string PolicyDefinitionId { get; set; }

        /// <summary>
        /// Gets or sets the parameter values for the referenced policy rule.
        /// The keys are the parameter names.
        /// </summary>
        [JsonProperty(PropertyName = "parameters")]
        public IDictionary<string, ParameterValuesValue> Parameters { get; set; }

        /// <summary>
        /// Gets or sets a unique id (within the policy set definition) for
        /// this policy definition reference.
        /// </summary>
        [JsonProperty(PropertyName = "policyDefinitionReferenceId")]
        public string PolicyDefinitionReferenceId { get; set; }

        /// <summary>
        /// Gets or sets the name of the groups that this policy definition
        /// reference belongs to.
        /// </summary>
        [JsonProperty(PropertyName = "groupNames")]
        public IList<string> GroupNames { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (PolicyDefinitionId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PolicyDefinitionId");
            }
        }
    }
}
