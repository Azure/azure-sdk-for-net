// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ResourceManager.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The policy definition group.
    /// </summary>
    public partial class PolicyDefinitionGroup
    {
        /// <summary>
        /// Initializes a new instance of the PolicyDefinitionGroup class.
        /// </summary>
        public PolicyDefinitionGroup()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PolicyDefinitionGroup class.
        /// </summary>
        /// <param name="name">The name of the group.</param>
        /// <param name="displayName">The group's display name.</param>
        /// <param name="category">The group's category.</param>
        /// <param name="description">The group's description.</param>
        /// <param name="additionalMetadataId">A resource ID of a resource that
        /// contains additional metadata about the group.</param>
        public PolicyDefinitionGroup(string name, string displayName = default(string), string category = default(string), string description = default(string), string additionalMetadataId = default(string))
        {
            Name = name;
            DisplayName = displayName;
            Category = category;
            Description = description;
            AdditionalMetadataId = additionalMetadataId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the group.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the group's display name.
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets the group's category.
        /// </summary>
        [JsonProperty(PropertyName = "category")]
        public string Category { get; set; }

        /// <summary>
        /// Gets or sets the group's description.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets a resource ID of a resource that contains additional
        /// metadata about the group.
        /// </summary>
        [JsonProperty(PropertyName = "additionalMetadataId")]
        public string AdditionalMetadataId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
        }
    }
}
