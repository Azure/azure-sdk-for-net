// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ResourceManager.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The managed application provider authorization.
    /// </summary>
    public partial class ApplicationAuthorization
    {
        /// <summary>
        /// Initializes a new instance of the ApplicationAuthorization class.
        /// </summary>
        public ApplicationAuthorization()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApplicationAuthorization class.
        /// </summary>
        /// <param name="principalId">The provider's principal identifier. This
        /// is the identity that the provider will use to call ARM to manage
        /// the managed application resources.</param>
        /// <param name="roleDefinitionId">The provider's role definition
        /// identifier. This role will define all the permissions that the
        /// provider must have on the managed application's container resource
        /// group. This role definition cannot have permission to delete the
        /// resource group.</param>
        public ApplicationAuthorization(string principalId, string roleDefinitionId)
        {
            PrincipalId = principalId;
            RoleDefinitionId = roleDefinitionId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the provider's principal identifier. This is the
        /// identity that the provider will use to call ARM to manage the
        /// managed application resources.
        /// </summary>
        [JsonProperty(PropertyName = "principalId")]
        public string PrincipalId { get; set; }

        /// <summary>
        /// Gets or sets the provider's role definition identifier. This role
        /// will define all the permissions that the provider must have on the
        /// managed application's container resource group. This role
        /// definition cannot have permission to delete the resource group.
        /// </summary>
        [JsonProperty(PropertyName = "roleDefinitionId")]
        public string RoleDefinitionId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (PrincipalId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PrincipalId");
            }
            if (RoleDefinitionId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "RoleDefinitionId");
            }
        }
    }
}
