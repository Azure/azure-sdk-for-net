// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ResourceManager.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The definition of a parameter that can be provided to the policy.
    /// </summary>
    public partial class ParameterDefinitionsValue
    {
        /// <summary>
        /// Initializes a new instance of the ParameterDefinitionsValue class.
        /// </summary>
        public ParameterDefinitionsValue()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ParameterDefinitionsValue class.
        /// </summary>
        /// <param name="type">The data type of the parameter. Possible values
        /// include: 'String', 'Array', 'Object', 'Boolean', 'Integer',
        /// 'Float', 'DateTime'</param>
        /// <param name="allowedValues">The allowed values for the
        /// parameter.</param>
        /// <param name="defaultValue">The default value for the parameter if
        /// no value is provided.</param>
        /// <param name="metadata">General metadata for the parameter.</param>
        public ParameterDefinitionsValue(string type = default(string), IList<object> allowedValues = default(IList<object>), object defaultValue = default(object), ParameterDefinitionsValueMetadata metadata = default(ParameterDefinitionsValueMetadata))
        {
            Type = type;
            AllowedValues = allowedValues;
            DefaultValue = defaultValue;
            Metadata = metadata;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the data type of the parameter. Possible values
        /// include: 'String', 'Array', 'Object', 'Boolean', 'Integer',
        /// 'Float', 'DateTime'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets the allowed values for the parameter.
        /// </summary>
        [JsonProperty(PropertyName = "allowedValues")]
        public IList<object> AllowedValues { get; set; }

        /// <summary>
        /// Gets or sets the default value for the parameter if no value is
        /// provided.
        /// </summary>
        [JsonProperty(PropertyName = "defaultValue")]
        public object DefaultValue { get; set; }

        /// <summary>
        /// Gets or sets general metadata for the parameter.
        /// </summary>
        [JsonProperty(PropertyName = "metadata")]
        public ParameterDefinitionsValueMetadata Metadata { get; set; }

    }
}
