// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ResourceManager.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for ApplicationLockLevel.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ApplicationLockLevel
    {
        [EnumMember(Value = "CanNotDelete")]
        CanNotDelete,
        [EnumMember(Value = "ReadOnly")]
        ReadOnly,
        [EnumMember(Value = "None")]
        None
    }
    internal static class ApplicationLockLevelEnumExtension
    {
        internal static string ToSerializedValue(this ApplicationLockLevel? value)
        {
            return value == null ? null : ((ApplicationLockLevel)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this ApplicationLockLevel value)
        {
            switch( value )
            {
                case ApplicationLockLevel.CanNotDelete:
                    return "CanNotDelete";
                case ApplicationLockLevel.ReadOnly:
                    return "ReadOnly";
                case ApplicationLockLevel.None:
                    return "None";
            }
            return null;
        }

        internal static ApplicationLockLevel? ParseApplicationLockLevel(this string value)
        {
            switch( value )
            {
                case "CanNotDelete":
                    return ApplicationLockLevel.CanNotDelete;
                case "ReadOnly":
                    return ApplicationLockLevel.ReadOnly;
                case "None":
                    return ApplicationLockLevel.None;
            }
            return null;
        }
    }
}
