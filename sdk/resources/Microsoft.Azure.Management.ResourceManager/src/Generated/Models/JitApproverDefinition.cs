// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ResourceManager.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// JIT approver definition.
    /// </summary>
    public partial class JitApproverDefinition
    {
        /// <summary>
        /// Initializes a new instance of the JitApproverDefinition class.
        /// </summary>
        public JitApproverDefinition()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JitApproverDefinition class.
        /// </summary>
        /// <param name="id">The approver service principal Id.</param>
        /// <param name="type">The approver type. Possible values include:
        /// 'user', 'group'</param>
        /// <param name="displayName">The approver display name.</param>
        public JitApproverDefinition(string id, string type = default(string), string displayName = default(string))
        {
            Id = id;
            Type = type;
            DisplayName = displayName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the approver service principal Id.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets the approver type. Possible values include: 'user',
        /// 'group'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets the approver display name.
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Id == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Id");
            }
        }
    }
}
