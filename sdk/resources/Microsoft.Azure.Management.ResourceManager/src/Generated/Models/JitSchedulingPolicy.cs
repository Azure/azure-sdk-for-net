// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ResourceManager.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The JIT scheduling policies.
    /// </summary>
    public partial class JitSchedulingPolicy
    {
        /// <summary>
        /// Initializes a new instance of the JitSchedulingPolicy class.
        /// </summary>
        public JitSchedulingPolicy()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JitSchedulingPolicy class.
        /// </summary>
        /// <param name="type">The type of JIT schedule. Possible values
        /// include: 'NotSpecified', 'Once', 'Recurring'</param>
        /// <param name="duration">The required duration of the JIT
        /// request.</param>
        /// <param name="startTime">The start time of the request.</param>
        public JitSchedulingPolicy(string type, System.TimeSpan duration, System.DateTime startTime)
        {
            Type = type;
            Duration = duration;
            StartTime = startTime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the type of JIT schedule. Possible values include:
        /// 'NotSpecified', 'Once', 'Recurring'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets the required duration of the JIT request.
        /// </summary>
        [JsonProperty(PropertyName = "duration")]
        public System.TimeSpan Duration { get; set; }

        /// <summary>
        /// Gets or sets the start time of the request.
        /// </summary>
        [JsonProperty(PropertyName = "startTime")]
        public System.DateTime StartTime { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Type == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Type");
            }
        }
    }
}
