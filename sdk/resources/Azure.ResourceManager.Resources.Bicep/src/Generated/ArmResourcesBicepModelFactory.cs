// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.ResourceManager.Resources.Bicep.Models
{
    /// <summary> Model factory for models. </summary>
    public static partial class ArmResourcesBicepModelFactory
    {
        /// <summary> Initializes a new instance of <see cref="Models.DecompileOperationSuccessResponse"/>. </summary>
        /// <param name="files"> An array of key-value pairs containing the entryPoint string as the key for the Bicep file decompiled from the ARM json template. </param>
        /// <param name="entryPoint"> The file path to the main Bicep file generated from the decompiled ARM json template. </param>
        /// <returns> A new <see cref="Models.DecompileOperationSuccessResponse"/> instance for mocking. </returns>
        public static DecompileOperationSuccessResponse DecompileOperationSuccessResponse(IEnumerable<FileDefinition> files = null, string entryPoint = null)
        {
            files ??= new List<FileDefinition>();

            return new DecompileOperationSuccessResponse(files?.ToList(), entryPoint, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.FileDefinition"/>. </summary>
        /// <param name="path"> The file path of the Bicep file. </param>
        /// <param name="contents"> The contents of the Bicep file. </param>
        /// <returns> A new <see cref="Models.FileDefinition"/> instance for mocking. </returns>
        public static FileDefinition FileDefinition(string path = null, string contents = null)
        {
            return new FileDefinition(path, contents, serializedAdditionalRawData: null);
        }
    }
}
