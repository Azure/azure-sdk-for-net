// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.Resources.Models;

namespace Azure.ResourceManager.Resources
{
    /// <summary> A class representing the ApplicationDefinition data model. </summary>
    public partial class ApplicationDefinitionData : ApplicationResource
    {
        /// <summary> Initializes a new instance of ApplicationDefinitionData. </summary>
        /// <param name="location"> The location. </param>
        /// <param name="lockLevel"> The managed application lock level. </param>
        public ApplicationDefinitionData(AzureLocation location, ApplicationLockLevel lockLevel) : base(location)
        {
            LockLevel = lockLevel;
            Authorizations = new ChangeTrackingList<ApplicationAuthorization>();
            Artifacts = new ChangeTrackingList<ApplicationDefinitionArtifact>();
            Policies = new ChangeTrackingList<ApplicationPolicy>();
        }

        /// <summary> Initializes a new instance of ApplicationDefinitionData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="type"> The type. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="managedBy"> ID of the resource that manages this resource. </param>
        /// <param name="sku"> The SKU of the resource. </param>
        /// <param name="lockLevel"> The managed application lock level. </param>
        /// <param name="displayName"> The managed application definition display name. </param>
        /// <param name="isEnabled"> A value indicating whether the package is enabled or not. </param>
        /// <param name="authorizations"> The managed application provider authorizations. </param>
        /// <param name="artifacts"> The collection of managed application artifacts. The portal will use the files specified as artifacts to construct the user experience of creating a managed application from a managed application definition. </param>
        /// <param name="description"> The managed application definition description. </param>
        /// <param name="packageFileUri"> The managed application definition package file Uri. Use this element. </param>
        /// <param name="mainTemplate"> The inline main template json which has resources to be provisioned. It can be a JObject or well-formed JSON string. </param>
        /// <param name="createUiDefinition"> The createUiDefinition json for the backing template with Microsoft.Solutions/applications resource. It can be a JObject or well-formed JSON string. </param>
        /// <param name="notificationPolicy"> The managed application notification policy. </param>
        /// <param name="lockingPolicy"> The managed application locking policy. </param>
        /// <param name="deploymentPolicy"> The managed application deployment policy. </param>
        /// <param name="managementPolicy"> The managed application management policy that determines publisher&apos;s access to the managed resource group. </param>
        /// <param name="policies"> The managed application provider policies. </param>
        internal ApplicationDefinitionData(ResourceIdentifier id, string name, ResourceType type, SystemData systemData, IDictionary<string, string> tags, AzureLocation location, string managedBy, ApplicationSku sku, ApplicationLockLevel lockLevel, string displayName, bool? isEnabled, IList<ApplicationAuthorization> authorizations, IList<ApplicationDefinitionArtifact> artifacts, string description, Uri packageFileUri, object mainTemplate, object createUiDefinition, ApplicationNotificationPolicy notificationPolicy, ApplicationPackageLockingPolicyDefinition lockingPolicy, ApplicationDeploymentPolicy deploymentPolicy, ApplicationManagementPolicy managementPolicy, IList<ApplicationPolicy> policies) : base(id, name, type, systemData, tags, location, managedBy, sku)
        {
            LockLevel = lockLevel;
            DisplayName = displayName;
            IsEnabled = isEnabled;
            Authorizations = authorizations;
            Artifacts = artifacts;
            Description = description;
            PackageFileUri = packageFileUri;
            MainTemplate = mainTemplate;
            CreateUiDefinition = createUiDefinition;
            NotificationPolicy = notificationPolicy;
            LockingPolicy = lockingPolicy;
            DeploymentPolicy = deploymentPolicy;
            ManagementPolicy = managementPolicy;
            Policies = policies;
        }

        /// <summary> The managed application lock level. </summary>
        public ApplicationLockLevel LockLevel { get; set; }
        /// <summary> The managed application definition display name. </summary>
        public string DisplayName { get; set; }
        /// <summary> A value indicating whether the package is enabled or not. </summary>
        public bool? IsEnabled { get; set; }
        /// <summary> The managed application provider authorizations. </summary>
        public IList<ApplicationAuthorization> Authorizations { get; }
        /// <summary> The collection of managed application artifacts. The portal will use the files specified as artifacts to construct the user experience of creating a managed application from a managed application definition. </summary>
        public IList<ApplicationDefinitionArtifact> Artifacts { get; }
        /// <summary> The managed application definition description. </summary>
        public string Description { get; set; }
        /// <summary> The managed application definition package file Uri. Use this element. </summary>
        public Uri PackageFileUri { get; set; }
        /// <summary> The inline main template json which has resources to be provisioned. It can be a JObject or well-formed JSON string. </summary>
        public object MainTemplate { get; set; }
        /// <summary> The createUiDefinition json for the backing template with Microsoft.Solutions/applications resource. It can be a JObject or well-formed JSON string. </summary>
        public object CreateUiDefinition { get; set; }
        /// <summary> The managed application notification policy. </summary>
        public ApplicationNotificationPolicy NotificationPolicy { get; set; }
        /// <summary> The managed application locking policy. </summary>
        public ApplicationPackageLockingPolicyDefinition LockingPolicy { get; set; }
        /// <summary> The managed application deployment policy. </summary>
        public ApplicationDeploymentPolicy DeploymentPolicy { get; set; }
        /// <summary> The managed application management policy that determines publisher&apos;s access to the managed resource group. </summary>
        public ApplicationManagementPolicy ManagementPolicy { get; set; }
        /// <summary> The managed application provider policies. </summary>
        public IList<ApplicationPolicy> Policies { get; }
    }
}
