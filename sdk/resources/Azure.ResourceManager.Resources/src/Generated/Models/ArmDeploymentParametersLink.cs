// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Resources.Models
{
    /// <summary> Entity representing the reference to the deployment parameters. </summary>
    public partial class ArmDeploymentParametersLink
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ArmDeploymentParametersLink"/>. </summary>
        /// <param name="uri"> The URI of the parameters file. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="uri"/> is null. </exception>
        public ArmDeploymentParametersLink(Uri uri)
        {
            Argument.AssertNotNull(uri, nameof(uri));

            Uri = uri;
        }

        /// <summary> Initializes a new instance of <see cref="ArmDeploymentParametersLink"/>. </summary>
        /// <param name="uri"> The URI of the parameters file. </param>
        /// <param name="contentVersion"> If included, must match the ContentVersion in the template. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ArmDeploymentParametersLink(Uri uri, string contentVersion, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Uri = uri;
            ContentVersion = contentVersion;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="ArmDeploymentParametersLink"/> for deserialization. </summary>
        internal ArmDeploymentParametersLink()
        {
        }

        /// <summary> The URI of the parameters file. </summary>
        public Uri Uri { get; set; }
        /// <summary> If included, must match the ContentVersion in the template. </summary>
        public string ContentVersion { get; set; }
    }
}
