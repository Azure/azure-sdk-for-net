// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Resources.Models
{
    public partial class JitSchedulingPolicy : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("duration");
            writer.WriteStringValue(Duration, "P");
            writer.WritePropertyName("startTime");
            writer.WriteStringValue(StartTime, "O");
            writer.WriteEndObject();
        }

        internal static JitSchedulingPolicy DeserializeJitSchedulingPolicy(JsonElement element)
        {
            JitSchedulingType type = default;
            TimeSpan duration = default;
            DateTimeOffset startTime = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("type"))
                {
                    type = new JitSchedulingType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("duration"))
                {
                    duration = property.Value.GetTimeSpan("P");
                    continue;
                }
                if (property.NameEquals("startTime"))
                {
                    startTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
            }
            return new JitSchedulingPolicy(type, duration, startTime);
        }
    }
}
