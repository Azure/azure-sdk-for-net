// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.AI.Language.AnalyzeText
{
    /// <summary> The EntityTag. </summary>
    public partial class EntityTag
    {
        /// <summary> Initializes a new instance of <see cref="EntityTag"/>. </summary>
        /// <param name="name"> Tags are to express some similarities/affinity between entities. Entity Tags will be unique globally. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> is null. </exception>
        internal EntityTag(string name)
        {
            Argument.AssertNotNull(name, nameof(name));

            Name = name;
        }

        /// <summary> Initializes a new instance of <see cref="EntityTag"/>. </summary>
        /// <param name="name"> Tags are to express some similarities/affinity between entities. Entity Tags will be unique globally. </param>
        /// <param name="confidenceScore"> Detection score between 0 and 1 of the extracted entity. </param>
        internal EntityTag(string name, double? confidenceScore)
        {
            Name = name;
            ConfidenceScore = confidenceScore;
        }

        /// <summary> Tags are to express some similarities/affinity between entities. Entity Tags will be unique globally. </summary>
        public string Name { get; }
        /// <summary> Detection score between 0 and 1 of the extracted entity. </summary>
        public double? ConfidenceScore { get; }
    }
}
