// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.AI.Language.Text
{
    /// <summary> The AnalyzeTextJobState. </summary>
    public partial class AnalyzeTextJobState
    {
        /// <summary> Initializes a new instance of <see cref="AnalyzeTextJobState"/>. </summary>
        /// <param name="createdDateTime"> Date and time job created. </param>
        /// <param name="lastUpdatedDateTime"> last updated date and time. </param>
        /// <param name="status"> status. </param>
        /// <param name="tasks"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="tasks"/> is null. </exception>
        internal AnalyzeTextJobState(DateTimeOffset createdDateTime, DateTimeOffset lastUpdatedDateTime, TaskStatus status, JobStateTasks tasks)
        {
            Argument.AssertNotNull(tasks, nameof(tasks));

            CreatedDateTime = createdDateTime;
            LastUpdatedDateTime = lastUpdatedDateTime;
            Status = status;
            Errors = new ChangeTrackingList<ErrorResponse>();
            Tasks = tasks;
        }

        /// <summary> Initializes a new instance of <see cref="AnalyzeTextJobState"/>. </summary>
        /// <param name="displayName"> display name. </param>
        /// <param name="createdDateTime"> Date and time job created. </param>
        /// <param name="expirationDateTime"> Date and time job expires. </param>
        /// <param name="jobId"> job ID. </param>
        /// <param name="lastUpdatedDateTime"> last updated date and time. </param>
        /// <param name="status"> status. </param>
        /// <param name="errors"> errors. </param>
        /// <param name="nextLink"> next link. </param>
        /// <param name="tasks"></param>
        /// <param name="statistics"></param>
        internal AnalyzeTextJobState(string displayName, DateTimeOffset createdDateTime, DateTimeOffset? expirationDateTime, string jobId, DateTimeOffset lastUpdatedDateTime, TaskStatus status, IReadOnlyList<ErrorResponse> errors, string nextLink, JobStateTasks tasks, RequestStatistics statistics)
        {
            DisplayName = displayName;
            CreatedDateTime = createdDateTime;
            ExpirationDateTime = expirationDateTime;
            JobId = jobId;
            LastUpdatedDateTime = lastUpdatedDateTime;
            Status = status;
            Errors = errors;
            NextLink = nextLink;
            Tasks = tasks;
            Statistics = statistics;
        }

        /// <summary> display name. </summary>
        public string DisplayName { get; }
        /// <summary> Date and time job created. </summary>
        public DateTimeOffset CreatedDateTime { get; }
        /// <summary> Date and time job expires. </summary>
        public DateTimeOffset? ExpirationDateTime { get; }
        /// <summary> job ID. </summary>
        public string JobId { get; }
        /// <summary> last updated date and time. </summary>
        public DateTimeOffset LastUpdatedDateTime { get; }
        /// <summary> status. </summary>
        public TaskStatus Status { get; }
        /// <summary> errors. </summary>
        public IReadOnlyList<ErrorResponse> Errors { get; }
        /// <summary> next link. </summary>
        public string NextLink { get; }
        /// <summary> Gets the tasks. </summary>
        public JobStateTasks Tasks { get; }
        /// <summary> Gets the statistics. </summary>
        public RequestStatistics Statistics { get; }
    }
}
