// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.AI.Language.Text
{
    /// <summary> The EntityLinkingMatch. </summary>
    public partial class EntityLinkingMatch
    {
        /// <summary> Initializes a new instance of <see cref="EntityLinkingMatch"/>. </summary>
        /// <param name="confidenceScore"> If a well known item is recognized, a decimal number denoting the confidence level between 0 and 1 will be returned. </param>
        /// <param name="text"> NamedEntity text as appears in the request. </param>
        /// <param name="offset"> Start position for the entity match text. </param>
        /// <param name="length"> Length for the entity match text. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="text"/> is null. </exception>
        internal EntityLinkingMatch(double confidenceScore, string text, int offset, int length)
        {
            Argument.AssertNotNull(text, nameof(text));

            ConfidenceScore = confidenceScore;
            Text = text;
            Offset = offset;
            Length = length;
        }

        /// <summary> If a well known item is recognized, a decimal number denoting the confidence level between 0 and 1 will be returned. </summary>
        public double ConfidenceScore { get; }
        /// <summary> NamedEntity text as appears in the request. </summary>
        public string Text { get; }
        /// <summary> Start position for the entity match text. </summary>
        public int Offset { get; }
        /// <summary> Length for the entity match text. </summary>
        public int Length { get; }
    }
}
