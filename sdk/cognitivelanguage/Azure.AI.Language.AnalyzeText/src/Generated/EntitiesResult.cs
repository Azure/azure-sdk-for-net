// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.AI.Language.AnalyzeText
{
    /// <summary> The EntitiesResult. </summary>
    public partial class EntitiesResult : PreBuiltResult
    {
        /// <summary> Initializes a new instance of <see cref="EntitiesResult"/>. </summary>
        /// <param name="errors"> Errors by document id. </param>
        /// <param name="modelVersion"> This field indicates which model is used for scoring. </param>
        /// <param name="documents"> Response by document. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="errors"/>, <paramref name="modelVersion"/> or <paramref name="documents"/> is null. </exception>
        internal EntitiesResult(IEnumerable<DocumentError> errors, string modelVersion, IEnumerable<EntitiesDocumentResultWithMetadataDetectedLanguage> documents) : base(errors, modelVersion)
        {
            Argument.AssertNotNull(errors, nameof(errors));
            Argument.AssertNotNull(modelVersion, nameof(modelVersion));
            Argument.AssertNotNull(documents, nameof(documents));

            Documents = documents.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="EntitiesResult"/>. </summary>
        /// <param name="errors"> Errors by document id. </param>
        /// <param name="statistics"> if showStats=true was specified in the request this field will contain information about the request payload. </param>
        /// <param name="modelVersion"> This field indicates which model is used for scoring. </param>
        /// <param name="documents"> Response by document. </param>
        internal EntitiesResult(IReadOnlyList<DocumentError> errors, RequestStatistics statistics, string modelVersion, IReadOnlyList<EntitiesDocumentResultWithMetadataDetectedLanguage> documents) : base(errors, statistics, modelVersion)
        {
            Documents = documents;
        }

        /// <summary> Response by document. </summary>
        public IReadOnlyList<EntitiesDocumentResultWithMetadataDetectedLanguage> Documents { get; }
    }
}
