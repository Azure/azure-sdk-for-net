// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Language.AnalyzeText
{
    /// <summary> Result for Dynamic Classification task. </summary>
    public partial class DynamicClassificationTaskResult : AnalyzeTextTaskResult
    {
        /// <summary> Initializes a new instance of <see cref="DynamicClassificationTaskResult"/>. </summary>
        /// <param name="results"> Results for Dynamic Classification task. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="results"/> is null. </exception>
        internal DynamicClassificationTaskResult(DynamicClassificationResult results)
        {
            Argument.AssertNotNull(results, nameof(results));

            Kind = AnalyzeTextTaskResultsKind.DynamicClassificationResults;
            Results = results;
        }

        /// <summary> Initializes a new instance of <see cref="DynamicClassificationTaskResult"/>. </summary>
        /// <param name="kind"> The kind of task result. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="results"> Results for Dynamic Classification task. </param>
        internal DynamicClassificationTaskResult(AnalyzeTextTaskResultsKind kind, IDictionary<string, BinaryData> serializedAdditionalRawData, DynamicClassificationResult results) : base(kind, serializedAdditionalRawData)
        {
            Results = results;
        }

        /// <summary> Initializes a new instance of <see cref="DynamicClassificationTaskResult"/> for deserialization. </summary>
        internal DynamicClassificationTaskResult()
        {
        }

        /// <summary> Results for Dynamic Classification task. </summary>
        public DynamicClassificationResult Results { get; }
    }
}
