// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.AI.Language.AnalyzeText
{
    /// <summary> An object representing the summarization result of a single document with detected language. </summary>
    public partial class AbstractiveSummaryDocumentResultWithDetectedLanguage : DocumentResult
    {
        /// <summary> Initializes a new instance of <see cref="AbstractiveSummaryDocumentResultWithDetectedLanguage"/>. </summary>
        /// <param name="id"> Unique, non-empty document identifier. </param>
        /// <param name="warnings"> Warnings encountered while processing document. </param>
        /// <param name="summaries"> A list of abstractive summaries. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/>, <paramref name="warnings"/> or <paramref name="summaries"/> is null. </exception>
        internal AbstractiveSummaryDocumentResultWithDetectedLanguage(string id, IEnumerable<DocumentWarning> warnings, IEnumerable<AbstractiveSummary> summaries) : base(id, warnings)
        {
            Argument.AssertNotNull(id, nameof(id));
            Argument.AssertNotNull(warnings, nameof(warnings));
            Argument.AssertNotNull(summaries, nameof(summaries));

            Summaries = summaries.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="AbstractiveSummaryDocumentResultWithDetectedLanguage"/>. </summary>
        /// <param name="id"> Unique, non-empty document identifier. </param>
        /// <param name="warnings"> Warnings encountered while processing document. </param>
        /// <param name="statistics"> if showStats=true was specified in the request this field will contain information about the document payload. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="summaries"> A list of abstractive summaries. </param>
        /// <param name="detectedLanguage"> If 'language' is set to 'auto' for the document in the request this field will contain a 2 letter ISO 639-1 representation of the language detected for this document. </param>
        internal AbstractiveSummaryDocumentResultWithDetectedLanguage(string id, IReadOnlyList<DocumentWarning> warnings, DocumentStatistics statistics, IDictionary<string, BinaryData> serializedAdditionalRawData, IReadOnlyList<AbstractiveSummary> summaries, DetectedLanguage detectedLanguage) : base(id, warnings, statistics, serializedAdditionalRawData)
        {
            Summaries = summaries;
            DetectedLanguage = detectedLanguage;
        }

        /// <summary> Initializes a new instance of <see cref="AbstractiveSummaryDocumentResultWithDetectedLanguage"/> for deserialization. </summary>
        internal AbstractiveSummaryDocumentResultWithDetectedLanguage()
        {
        }

        /// <summary> A list of abstractive summaries. </summary>
        public IReadOnlyList<AbstractiveSummary> Summaries { get; }
        /// <summary> If 'language' is set to 'auto' for the document in the request this field will contain a 2 letter ISO 639-1 representation of the language detected for this document. </summary>
        public DetectedLanguage DetectedLanguage { get; }
    }
}
