// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.AI.Language.Text
{
    /// <summary> Supported parameters for the pre-build Abstractive Summarization task. </summary>
    public partial class AbstractiveSummarizationTaskContent
    {
        /// <summary> Initializes a new instance of <see cref="AbstractiveSummarizationTaskContent"/>. </summary>
        public AbstractiveSummarizationTaskContent()
        {
        }

        /// <summary> Initializes a new instance of <see cref="AbstractiveSummarizationTaskContent"/>. </summary>
        /// <param name="loggingOptOut"> logging opt out. </param>
        /// <param name="modelVersion"> model version. </param>
        /// <param name="sentenceCount"> Controls the approximate number of sentences in the output summaries. </param>
        /// <param name="stringIndexType"> String index type. </param>
        /// <param name="summaryLength"> (NOTE: Recommended to use summaryLength over sentenceCount) Controls the approximate length of the output summaries. </param>
        internal AbstractiveSummarizationTaskContent(bool? loggingOptOut, string modelVersion, int? sentenceCount, StringIndexType? stringIndexType, SummaryLengthBucket? summaryLength)
        {
            LoggingOptOut = loggingOptOut;
            ModelVersion = modelVersion;
            SentenceCount = sentenceCount;
            StringIndexType = stringIndexType;
            SummaryLength = summaryLength;
        }

        /// <summary> logging opt out. </summary>
        public bool? LoggingOptOut { get; set; }
        /// <summary> model version. </summary>
        public string ModelVersion { get; set; }
        /// <summary> Controls the approximate number of sentences in the output summaries. </summary>
        public int? SentenceCount { get; set; }
        /// <summary> String index type. </summary>
        public StringIndexType? StringIndexType { get; set; }
        /// <summary> (NOTE: Recommended to use summaryLength over sentenceCount) Controls the approximate length of the output summaries. </summary>
        public SummaryLengthBucket? SummaryLength { get; set; }
    }
}
