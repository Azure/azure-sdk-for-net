// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.AI.Language.AnalyzeText
{
    /// <summary> Supported parameters for a Dynamic Classification task. </summary>
    public partial class DynamicClassificationTaskContent : PreBuiltTaskContent
    {
        /// <summary> Initializes a new instance of <see cref="DynamicClassificationTaskContent"/>. </summary>
        /// <param name="categories"> a list of categories to which input is classified to. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="categories"/> is null. </exception>
        public DynamicClassificationTaskContent(IEnumerable<string> categories)
        {
            Argument.AssertNotNull(categories, nameof(categories));

            Categories = categories.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="DynamicClassificationTaskContent"/>. </summary>
        /// <param name="loggingOptOut"> logging opt out. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="modelVersion"> model version. </param>
        /// <param name="classificationType"> Specifies either one or multiple categories per document. Defaults to multi classification which may return more than one class for each document. </param>
        /// <param name="categories"> a list of categories to which input is classified to. </param>
        internal DynamicClassificationTaskContent(bool? loggingOptOut, IDictionary<string, BinaryData> serializedAdditionalRawData, string modelVersion, ClassificationType? classificationType, IList<string> categories) : base(loggingOptOut, serializedAdditionalRawData, modelVersion)
        {
            ClassificationType = classificationType;
            Categories = categories;
        }

        /// <summary> Initializes a new instance of <see cref="DynamicClassificationTaskContent"/> for deserialization. </summary>
        internal DynamicClassificationTaskContent()
        {
        }

        /// <summary> Specifies either one or multiple categories per document. Defaults to multi classification which may return more than one class for each document. </summary>
        public ClassificationType? ClassificationType { get; set; }
        /// <summary> a list of categories to which input is classified to. </summary>
        public IList<string> Categories { get; }
    }
}
