// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.AI.Language.Text
{
    /// <summary> The LanguageDetectionResult. </summary>
    public partial class LanguageDetectionResult
    {
        /// <summary> Initializes a new instance of <see cref="LanguageDetectionResult"/>. </summary>
        /// <param name="errors"> Errors by document id. </param>
        /// <param name="modelVersion"> This field indicates which model is used for scoring. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="errors"/> or <paramref name="modelVersion"/> is null. </exception>
        internal LanguageDetectionResult(IEnumerable<AnalyzeTextDocumentError> errors, string modelVersion)
        {
            Argument.AssertNotNull(errors, nameof(errors));
            Argument.AssertNotNull(modelVersion, nameof(modelVersion));

            Errors = errors.ToList();
            ModelVersion = modelVersion;
            Documents = new ChangeTrackingList<LanguageDetectionDocumentResult>();
        }

        /// <summary> Initializes a new instance of <see cref="LanguageDetectionResult"/>. </summary>
        /// <param name="errors"> Errors by document id. </param>
        /// <param name="statistics"></param>
        /// <param name="modelVersion"> This field indicates which model is used for scoring. </param>
        /// <param name="documents"></param>
        internal LanguageDetectionResult(IReadOnlyList<AnalyzeTextDocumentError> errors, RequestStatistics statistics, string modelVersion, IReadOnlyList<LanguageDetectionDocumentResult> documents)
        {
            Errors = errors;
            Statistics = statistics;
            ModelVersion = modelVersion;
            Documents = documents;
        }

        /// <summary> Errors by document id. </summary>
        public IReadOnlyList<AnalyzeTextDocumentError> Errors { get; }
        /// <summary> Gets the statistics. </summary>
        public RequestStatistics Statistics { get; }
        /// <summary> This field indicates which model is used for scoring. </summary>
        public string ModelVersion { get; }
        /// <summary> Gets the documents. </summary>
        public IReadOnlyList<LanguageDetectionDocumentResult> Documents { get; }
    }
}
