// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.AI.Language.AnalyzeText
{
    /// <summary> The AnalyzeTextJobsInput. </summary>
    public partial class AnalyzeTextJobsInput
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="AnalyzeTextJobsInput"/>. </summary>
        /// <param name="analysisInput"></param>
        /// <param name="tasks">
        /// Please note <see cref="AnalyzeTextLROTask"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="AbstractiveSummarizationLROTask"/>, <see cref="CustomAbstractiveSummarizationLROTask"/>, <see cref="CustomEntitiesLROTask"/>, <see cref="CustomHealthcareLROTask"/>, <see cref="CustomMultiLabelClassificationLROTask"/>, <see cref="CustomSentimentAnalysisLROTask"/>, <see cref="CustomSingleLabelClassificationLROTask"/>, <see cref="EntityLinkingLROTask"/>, <see cref="EntitiesLROTask"/>, <see cref="ExtractiveSummarizationLROTask"/>, <see cref="HealthcareLROTask"/>, <see cref="KeyPhraseLROTask"/>, <see cref="PiiLROTask"/> and <see cref="SentimentAnalysisLROTask"/>.
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="analysisInput"/> or <paramref name="tasks"/> is null. </exception>
        public AnalyzeTextJobsInput(MultiLanguageAnalysisInput analysisInput, IEnumerable<AnalyzeTextLROTask> tasks)
        {
            Argument.AssertNotNull(analysisInput, nameof(analysisInput));
            Argument.AssertNotNull(tasks, nameof(tasks));

            AnalysisInput = analysisInput;
            Tasks = tasks.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="AnalyzeTextJobsInput"/>. </summary>
        /// <param name="displayName"></param>
        /// <param name="analysisInput"></param>
        /// <param name="tasks">
        /// Please note <see cref="AnalyzeTextLROTask"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="AbstractiveSummarizationLROTask"/>, <see cref="CustomAbstractiveSummarizationLROTask"/>, <see cref="CustomEntitiesLROTask"/>, <see cref="CustomHealthcareLROTask"/>, <see cref="CustomMultiLabelClassificationLROTask"/>, <see cref="CustomSentimentAnalysisLROTask"/>, <see cref="CustomSingleLabelClassificationLROTask"/>, <see cref="EntityLinkingLROTask"/>, <see cref="EntitiesLROTask"/>, <see cref="ExtractiveSummarizationLROTask"/>, <see cref="HealthcareLROTask"/>, <see cref="KeyPhraseLROTask"/>, <see cref="PiiLROTask"/> and <see cref="SentimentAnalysisLROTask"/>.
        /// </param>
        /// <param name="defaultLanguage"> Default language to use for records requesting automatic language detection. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal AnalyzeTextJobsInput(string displayName, MultiLanguageAnalysisInput analysisInput, IList<AnalyzeTextLROTask> tasks, string defaultLanguage, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            DisplayName = displayName;
            AnalysisInput = analysisInput;
            Tasks = tasks;
            DefaultLanguage = defaultLanguage;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="AnalyzeTextJobsInput"/> for deserialization. </summary>
        internal AnalyzeTextJobsInput()
        {
        }

        /// <summary> Gets or sets the display name. </summary>
        public string DisplayName { get; set; }
        /// <summary> Gets the analysis input. </summary>
        public MultiLanguageAnalysisInput AnalysisInput { get; }
        /// <summary>
        /// Gets the tasks
        /// Please note <see cref="AnalyzeTextLROTask"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="AbstractiveSummarizationLROTask"/>, <see cref="CustomAbstractiveSummarizationLROTask"/>, <see cref="CustomEntitiesLROTask"/>, <see cref="CustomHealthcareLROTask"/>, <see cref="CustomMultiLabelClassificationLROTask"/>, <see cref="CustomSentimentAnalysisLROTask"/>, <see cref="CustomSingleLabelClassificationLROTask"/>, <see cref="EntityLinkingLROTask"/>, <see cref="EntitiesLROTask"/>, <see cref="ExtractiveSummarizationLROTask"/>, <see cref="HealthcareLROTask"/>, <see cref="KeyPhraseLROTask"/>, <see cref="PiiLROTask"/> and <see cref="SentimentAnalysisLROTask"/>.
        /// </summary>
        public IList<AnalyzeTextLROTask> Tasks { get; }
        /// <summary> Default language to use for records requesting automatic language detection. </summary>
        public string DefaultLanguage { get; set; }
    }
}
