// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Language.AnalyzeText
{
    /// <summary> The CustomHealthcareEntity. </summary>
    public partial class CustomHealthcareEntity : HealthcareEntity
    {
        /// <summary> Initializes a new instance of <see cref="CustomHealthcareEntity"/>. </summary>
        /// <param name="text"> Entity text as appears in the request. </param>
        /// <param name="category"> Healthcare Entity Category. </param>
        /// <param name="offset"> Start position for the entity text. Use of different 'stringIndexType' values can affect the offset returned. </param>
        /// <param name="length"> Length for the entity text. Use of different 'stringIndexType' values can affect the length returned. </param>
        /// <param name="confidenceScore"> Confidence score between 0 and 1 of the extracted entity. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="text"/> is null. </exception>
        internal CustomHealthcareEntity(string text, HealthcareEntityCategory category, int offset, int length, double confidenceScore) : base(text, category, offset, length, confidenceScore)
        {
            Argument.AssertNotNull(text, nameof(text));

            EntityComponentInformation = new ChangeTrackingList<EntityComponentInformation>();
        }

        /// <summary> Initializes a new instance of <see cref="CustomHealthcareEntity"/>. </summary>
        /// <param name="text"> Entity text as appears in the request. </param>
        /// <param name="category"> Healthcare Entity Category. </param>
        /// <param name="subcategory"> (Optional) Entity sub type. </param>
        /// <param name="offset"> Start position for the entity text. Use of different 'stringIndexType' values can affect the offset returned. </param>
        /// <param name="length"> Length for the entity text. Use of different 'stringIndexType' values can affect the length returned. </param>
        /// <param name="confidenceScore"> Confidence score between 0 and 1 of the extracted entity. </param>
        /// <param name="assertion"></param>
        /// <param name="name"> Preferred name for the entity. Example: 'histologically' would have a 'name' of 'histologic'. </param>
        /// <param name="links"> Entity references in known data sources. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="entityComponentInformation">
        /// (Optional) Entity component information listing fired components of the extracted entity. This object only applies for custom healthcare.
        /// Please note <see cref="AnalyzeText.EntityComponentInformation"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="LearnedComponent"/>, <see cref="ListComponent"/> and <see cref="PrebuiltComponent"/>.
        /// </param>
        internal CustomHealthcareEntity(string text, HealthcareEntityCategory category, string subcategory, int offset, int length, double confidenceScore, HealthcareAssertion assertion, string name, IReadOnlyList<HealthcareEntityLink> links, IDictionary<string, BinaryData> serializedAdditionalRawData, IReadOnlyList<EntityComponentInformation> entityComponentInformation) : base(text, category, subcategory, offset, length, confidenceScore, assertion, name, links, serializedAdditionalRawData)
        {
            EntityComponentInformation = entityComponentInformation;
        }

        /// <summary> Initializes a new instance of <see cref="CustomHealthcareEntity"/> for deserialization. </summary>
        internal CustomHealthcareEntity()
        {
        }

        /// <summary>
        /// (Optional) Entity component information listing fired components of the extracted entity. This object only applies for custom healthcare.
        /// Please note <see cref="AnalyzeText.EntityComponentInformation"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="LearnedComponent"/>, <see cref="ListComponent"/> and <see cref="PrebuiltComponent"/>.
        /// </summary>
        public IReadOnlyList<EntityComponentInformation> EntityComponentInformation { get; }
    }
}
