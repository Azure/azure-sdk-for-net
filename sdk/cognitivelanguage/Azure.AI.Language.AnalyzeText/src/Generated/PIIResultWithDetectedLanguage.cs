// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.AI.Language.Text
{
    /// <summary> The PIIResultWithDetectedLanguage. </summary>
    public partial class PIIResultWithDetectedLanguage
    {
        /// <summary> Initializes a new instance of <see cref="PIIResultWithDetectedLanguage"/>. </summary>
        /// <param name="id"> Unique, non-empty document identifier. </param>
        /// <param name="warnings"> Warnings encountered while processing document. </param>
        /// <param name="redactedText"> Returns redacted text. </param>
        /// <param name="entities"> Recognized entities in the document. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/>, <paramref name="warnings"/>, <paramref name="redactedText"/> or <paramref name="entities"/> is null. </exception>
        internal PIIResultWithDetectedLanguage(string id, IEnumerable<DocumentWarning> warnings, string redactedText, IEnumerable<NamedEntity> entities)
        {
            Argument.AssertNotNull(id, nameof(id));
            Argument.AssertNotNull(warnings, nameof(warnings));
            Argument.AssertNotNull(redactedText, nameof(redactedText));
            Argument.AssertNotNull(entities, nameof(entities));

            Id = id;
            Warnings = warnings.ToList();
            RedactedText = redactedText;
            Entities = entities.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="PIIResultWithDetectedLanguage"/>. </summary>
        /// <param name="id"> Unique, non-empty document identifier. </param>
        /// <param name="warnings"> Warnings encountered while processing document. </param>
        /// <param name="statistics"> if showStats=true was specified in the request this field will contain information about the document payload. </param>
        /// <param name="redactedText"> Returns redacted text. </param>
        /// <param name="entities"> Recognized entities in the document. </param>
        /// <param name="detectedLanguage"> If 'language' is set to 'auto' for the document in the request this field will contain a 2 letter ISO 639-1 representation of the language detected for this document. </param>
        internal PIIResultWithDetectedLanguage(string id, IReadOnlyList<DocumentWarning> warnings, DocumentStatistics statistics, string redactedText, IReadOnlyList<NamedEntity> entities, string detectedLanguage)
        {
            Id = id;
            Warnings = warnings;
            Statistics = statistics;
            RedactedText = redactedText;
            Entities = entities;
            DetectedLanguage = detectedLanguage;
        }

        /// <summary> Unique, non-empty document identifier. </summary>
        public string Id { get; }
        /// <summary> Warnings encountered while processing document. </summary>
        public IReadOnlyList<DocumentWarning> Warnings { get; }
        /// <summary> if showStats=true was specified in the request this field will contain information about the document payload. </summary>
        public DocumentStatistics Statistics { get; }
        /// <summary> Returns redacted text. </summary>
        public string RedactedText { get; }
        /// <summary> Recognized entities in the document. </summary>
        public IReadOnlyList<NamedEntity> Entities { get; }
        /// <summary> If 'language' is set to 'auto' for the document in the request this field will contain a 2 letter ISO 639-1 representation of the language detected for this document. </summary>
        public string DetectedLanguage { get; }
    }
}
