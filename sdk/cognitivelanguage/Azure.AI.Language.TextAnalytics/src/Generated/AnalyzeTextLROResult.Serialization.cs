// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure;

namespace Azure.AI.Language.Text
{
    public partial class AnalyzeTextLROResult
    {
        internal static AnalyzeTextLROResult DeserializeAnalyzeTextLROResult(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            if (element.TryGetProperty("kind", out JsonElement discriminator))
            {
                switch (discriminator.GetString())
                {
                    case "CustomEntityRecognitionLROResults": return CustomEntityRecognitionLROResult.DeserializeCustomEntityRecognitionLROResult(element);
                    case "CustomSingleLabelClassificationLROResults": return CustomSingleLabelClassificationLROResult.DeserializeCustomSingleLabelClassificationLROResult(element);
                    case "CustomMultiLabelClassificationLROResults": return CustomMultiLabelClassificationLROResult.DeserializeCustomMultiLabelClassificationLROResult(element);
                    case "EntityLinkingLROResults": return EntityLinkingLROResult.DeserializeEntityLinkingLROResult(element);
                    case "EntityRecognitionLROResults": return EntityRecognitionLROResult.DeserializeEntityRecognitionLROResult(element);
                    case "HealthcareLROResults": return HealthcareLROResult.DeserializeHealthcareLROResult(element);
                    case "KeyPhraseExtractionLROResults": return KeyPhraseExtractionLROResult.DeserializeKeyPhraseExtractionLROResult(element);
                    case "PiiEntityRecognitionLROResults": return PIIEntityRecognitionLROResult.DeserializePIIEntityRecognitionLROResult(element);
                    case "SentimentAnalysisLROResults": return SentimentLROResult.DeserializeSentimentLROResult(element);
                    case "CustomSentimentAnalysisLROResults": return CustomSentimentAnalysisLROResult.DeserializeCustomSentimentAnalysisLROResult(element);
                    case "ExtractiveSummarizationLROResults": return ExtractiveSummarizationLROResult.DeserializeExtractiveSummarizationLROResult(element);
                    case "AbstractiveSummarizationLROResults": return AbstractiveSummarizationLROResult.DeserializeAbstractiveSummarizationLROResult(element);
                    case "CustomAbstractiveSummarizationLROResults": return CustomAbstractiveSummarizationLROResult.DeserializeCustomAbstractiveSummarizationLROResult(element);
                    case "CustomHealthcareLROResults": return CustomHealthcareLROResult.DeserializeCustomHealthcareLROResult(element);
                }
            }
            return UnknownAnalyzeTextLROResult.DeserializeUnknownAnalyzeTextLROResult(element);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static AnalyzeTextLROResult FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeAnalyzeTextLROResult(document.RootElement);
        }
    }
}
