namespace Azure.AI.Language.Conversations
{
    public partial class AgeResolution : Azure.AI.Language.Conversations.BaseResolution
    {
        internal AgeResolution() { }
        public Azure.AI.Language.Conversations.AgeUnit Unit { get { throw null; } }
        public double Value { get { throw null; } }
    }
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public readonly partial struct AgeUnit : System.IEquatable<Azure.AI.Language.Conversations.AgeUnit>
    {
        private readonly object _dummy;
        private readonly int _dummyPrimitive;
        public AgeUnit(string value) { throw null; }
        public static Azure.AI.Language.Conversations.AgeUnit Day { get { throw null; } }
        public static Azure.AI.Language.Conversations.AgeUnit Month { get { throw null; } }
        public static Azure.AI.Language.Conversations.AgeUnit Unspecified { get { throw null; } }
        public static Azure.AI.Language.Conversations.AgeUnit Week { get { throw null; } }
        public static Azure.AI.Language.Conversations.AgeUnit Year { get { throw null; } }
        public bool Equals(Azure.AI.Language.Conversations.AgeUnit other) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Equals(object obj) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override int GetHashCode() { throw null; }
        public static bool operator ==(Azure.AI.Language.Conversations.AgeUnit left, Azure.AI.Language.Conversations.AgeUnit right) { throw null; }
        public static implicit operator Azure.AI.Language.Conversations.AgeUnit (string value) { throw null; }
        public static bool operator !=(Azure.AI.Language.Conversations.AgeUnit left, Azure.AI.Language.Conversations.AgeUnit right) { throw null; }
        public override string ToString() { throw null; }
    }
    public partial class AnalysisParameters
    {
        public AnalysisParameters() { }
        public string ApiVersion { get { throw null; } set { } }
    }
    public partial class AnalyzeConversationJobResult : Azure.AI.Language.Conversations.TaskStateAutoGenerated
    {
        public AnalyzeConversationJobResult(System.DateTimeOffset lastUpdateDateTime, Azure.AI.Language.Conversations.TaskState status) : base (default(System.DateTimeOffset), default(Azure.AI.Language.Conversations.TaskState)) { }
        public string TaskName { get { throw null; } set { } }
    }
    public partial class AnalyzeConversationJobsInput
    {
        public AnalyzeConversationJobsInput(Azure.AI.Language.Conversations.MultiLanguageConversationAnalysisInput analysisInput, System.Collections.Generic.IEnumerable<Azure.AI.Language.Conversations.AnalyzeConversationLROTask> tasks) { }
        public Azure.AI.Language.Conversations.MultiLanguageConversationAnalysisInput AnalysisInput { get { throw null; } }
        public string DisplayName { get { throw null; } set { } }
        public System.Collections.Generic.IList<Azure.AI.Language.Conversations.AnalyzeConversationLROTask> Tasks { get { throw null; } }
    }
    public partial class AnalyzeConversationJobState : Azure.AI.Language.Conversations.JobStateAutoGenerated
    {
        internal AnalyzeConversationJobState() { }
        public Azure.AI.Language.Conversations.ConversationRequestStatistics Statistics { get { throw null; } }
        public Azure.AI.Language.Conversations.ConversationTasksStateTasks Tasks { get { throw null; } }
    }
    public partial class AnalyzeConversationJobStatistics
    {
        internal AnalyzeConversationJobStatistics() { }
        public Azure.AI.Language.Conversations.ConversationRequestStatistics Statistics { get { throw null; } }
    }
    public partial class AnalyzeConversationLROTask : Azure.AI.Language.Conversations.TaskIdentifier
    {
        public AnalyzeConversationLROTask() { }
    }
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public readonly partial struct AnalyzeConversationLROTaskKind : System.IEquatable<Azure.AI.Language.Conversations.AnalyzeConversationLROTaskKind>
    {
        private readonly object _dummy;
        private readonly int _dummyPrimitive;
        public AnalyzeConversationLROTaskKind(string value) { throw null; }
        public static Azure.AI.Language.Conversations.AnalyzeConversationLROTaskKind ConversationalPIITask { get { throw null; } }
        public static Azure.AI.Language.Conversations.AnalyzeConversationLROTaskKind ConversationalSummarizationTask { get { throw null; } }
        public bool Equals(Azure.AI.Language.Conversations.AnalyzeConversationLROTaskKind other) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Equals(object obj) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override int GetHashCode() { throw null; }
        public static bool operator ==(Azure.AI.Language.Conversations.AnalyzeConversationLROTaskKind left, Azure.AI.Language.Conversations.AnalyzeConversationLROTaskKind right) { throw null; }
        public static implicit operator Azure.AI.Language.Conversations.AnalyzeConversationLROTaskKind (string value) { throw null; }
        public static bool operator !=(Azure.AI.Language.Conversations.AnalyzeConversationLROTaskKind left, Azure.AI.Language.Conversations.AnalyzeConversationLROTaskKind right) { throw null; }
        public override string ToString() { throw null; }
    }
    public partial class AnalyzeConversationOptions
    {
        public AnalyzeConversationOptions(Azure.AI.Language.Conversations.ConversationItemBase conversationItem) { }
        public Azure.AI.Language.Conversations.ConversationItemBase ConversationItem { get { throw null; } }
        public bool Verbose { get { throw null; } set { } }
    }
    public partial class AnalyzeConversationPIIResult : Azure.AI.Language.Conversations.AnalyzeConversationJobResult
    {
        public AnalyzeConversationPIIResult(System.DateTimeOffset lastUpdateDateTime, Azure.AI.Language.Conversations.TaskState status, Azure.AI.Language.Conversations.ConversationPIIResults results) : base (default(System.DateTimeOffset), default(Azure.AI.Language.Conversations.TaskState)) { }
        public Azure.AI.Language.Conversations.ConversationPIIResults Results { get { throw null; } set { } }
    }
    public partial class AnalyzeConversationPIITask : Azure.AI.Language.Conversations.AnalyzeConversationLROTask
    {
        public AnalyzeConversationPIITask() { }
        public Azure.AI.Language.Conversations.ConversationPIITaskParameters Parameters { get { throw null; } set { } }
    }
    public partial class AnalyzeConversationResult
    {
        internal AnalyzeConversationResult() { }
        public string DetectedLanguage { get { throw null; } }
        public Azure.AI.Language.Conversations.BasePrediction Prediction { get { throw null; } }
        public string Query { get { throw null; } }
    }
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public readonly partial struct AnalyzeConversationResultsKind : System.IEquatable<Azure.AI.Language.Conversations.AnalyzeConversationResultsKind>
    {
        private readonly object _dummy;
        private readonly int _dummyPrimitive;
        public AnalyzeConversationResultsKind(string value) { throw null; }
        public static Azure.AI.Language.Conversations.AnalyzeConversationResultsKind ConversationalPIIResults { get { throw null; } }
        public static Azure.AI.Language.Conversations.AnalyzeConversationResultsKind ConversationalSummarizationResults { get { throw null; } }
        public bool Equals(Azure.AI.Language.Conversations.AnalyzeConversationResultsKind other) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Equals(object obj) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override int GetHashCode() { throw null; }
        public static bool operator ==(Azure.AI.Language.Conversations.AnalyzeConversationResultsKind left, Azure.AI.Language.Conversations.AnalyzeConversationResultsKind right) { throw null; }
        public static implicit operator Azure.AI.Language.Conversations.AnalyzeConversationResultsKind (string value) { throw null; }
        public static bool operator !=(Azure.AI.Language.Conversations.AnalyzeConversationResultsKind left, Azure.AI.Language.Conversations.AnalyzeConversationResultsKind right) { throw null; }
        public override string ToString() { throw null; }
    }
    public partial class AnalyzeConversationSummarizationResult : Azure.AI.Language.Conversations.AnalyzeConversationJobResult
    {
        public AnalyzeConversationSummarizationResult(System.DateTimeOffset lastUpdateDateTime, Azure.AI.Language.Conversations.TaskState status, Azure.AI.Language.Conversations.SummaryResult results) : base (default(System.DateTimeOffset), default(Azure.AI.Language.Conversations.TaskState)) { }
        public Azure.AI.Language.Conversations.SummaryResult Results { get { throw null; } set { } }
    }
    public partial class AnalyzeConversationSummarizationTask : Azure.AI.Language.Conversations.AnalyzeConversationLROTask
    {
        public AnalyzeConversationSummarizationTask() { }
        public Azure.AI.Language.Conversations.ConversationSummarizationTaskParameters Parameters { get { throw null; } set { } }
    }
    public partial class AnalyzeConversationTask
    {
        public AnalyzeConversationTask() { }
    }
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public readonly partial struct AnalyzeConversationTaskKind : System.IEquatable<Azure.AI.Language.Conversations.AnalyzeConversationTaskKind>
    {
        private readonly object _dummy;
        private readonly int _dummyPrimitive;
        public AnalyzeConversationTaskKind(string value) { throw null; }
        public static Azure.AI.Language.Conversations.AnalyzeConversationTaskKind Conversation { get { throw null; } }
        public bool Equals(Azure.AI.Language.Conversations.AnalyzeConversationTaskKind other) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Equals(object obj) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override int GetHashCode() { throw null; }
        public static bool operator ==(Azure.AI.Language.Conversations.AnalyzeConversationTaskKind left, Azure.AI.Language.Conversations.AnalyzeConversationTaskKind right) { throw null; }
        public static implicit operator Azure.AI.Language.Conversations.AnalyzeConversationTaskKind (string value) { throw null; }
        public static bool operator !=(Azure.AI.Language.Conversations.AnalyzeConversationTaskKind left, Azure.AI.Language.Conversations.AnalyzeConversationTaskKind right) { throw null; }
        public override string ToString() { throw null; }
    }
    public partial class AnalyzeConversationTaskResult
    {
        internal AnalyzeConversationTaskResult() { }
    }
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public readonly partial struct AnalyzeConversationTaskResultsKind : System.IEquatable<Azure.AI.Language.Conversations.AnalyzeConversationTaskResultsKind>
    {
        private readonly object _dummy;
        private readonly int _dummyPrimitive;
        public AnalyzeConversationTaskResultsKind(string value) { throw null; }
        public static Azure.AI.Language.Conversations.AnalyzeConversationTaskResultsKind ConversationResult { get { throw null; } }
        public bool Equals(Azure.AI.Language.Conversations.AnalyzeConversationTaskResultsKind other) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Equals(object obj) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override int GetHashCode() { throw null; }
        public static bool operator ==(Azure.AI.Language.Conversations.AnalyzeConversationTaskResultsKind left, Azure.AI.Language.Conversations.AnalyzeConversationTaskResultsKind right) { throw null; }
        public static implicit operator Azure.AI.Language.Conversations.AnalyzeConversationTaskResultsKind (string value) { throw null; }
        public static bool operator !=(Azure.AI.Language.Conversations.AnalyzeConversationTaskResultsKind left, Azure.AI.Language.Conversations.AnalyzeConversationTaskResultsKind right) { throw null; }
        public override string ToString() { throw null; }
    }
    public partial class AnswerSpan
    {
        public AnswerSpan() { }
        public double? Confidence { get { throw null; } }
    }
    public partial class AreaResolution : Azure.AI.Language.Conversations.BaseResolution
    {
        internal AreaResolution() { }
        public Azure.AI.Language.Conversations.AreaUnit Unit { get { throw null; } }
        public double Value { get { throw null; } }
    }
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public readonly partial struct AreaUnit : System.IEquatable<Azure.AI.Language.Conversations.AreaUnit>
    {
        private readonly object _dummy;
        private readonly int _dummyPrimitive;
        public AreaUnit(string value) { throw null; }
        public static Azure.AI.Language.Conversations.AreaUnit Acre { get { throw null; } }
        public static Azure.AI.Language.Conversations.AreaUnit SquareCentimeter { get { throw null; } }
        public static Azure.AI.Language.Conversations.AreaUnit SquareDecameter { get { throw null; } }
        public static Azure.AI.Language.Conversations.AreaUnit SquareDecimeter { get { throw null; } }
        public static Azure.AI.Language.Conversations.AreaUnit SquareFoot { get { throw null; } }
        public static Azure.AI.Language.Conversations.AreaUnit SquareHectometer { get { throw null; } }
        public static Azure.AI.Language.Conversations.AreaUnit SquareInch { get { throw null; } }
        public static Azure.AI.Language.Conversations.AreaUnit SquareKilometer { get { throw null; } }
        public static Azure.AI.Language.Conversations.AreaUnit SquareMeter { get { throw null; } }
        public static Azure.AI.Language.Conversations.AreaUnit SquareMile { get { throw null; } }
        public static Azure.AI.Language.Conversations.AreaUnit SquareMillimeter { get { throw null; } }
        public static Azure.AI.Language.Conversations.AreaUnit SquareYard { get { throw null; } }
        public static Azure.AI.Language.Conversations.AreaUnit Unspecified { get { throw null; } }
        public bool Equals(Azure.AI.Language.Conversations.AreaUnit other) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Equals(object obj) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override int GetHashCode() { throw null; }
        public static bool operator ==(Azure.AI.Language.Conversations.AreaUnit left, Azure.AI.Language.Conversations.AreaUnit right) { throw null; }
        public static implicit operator Azure.AI.Language.Conversations.AreaUnit (string value) { throw null; }
        public static bool operator !=(Azure.AI.Language.Conversations.AreaUnit left, Azure.AI.Language.Conversations.AreaUnit right) { throw null; }
        public override string ToString() { throw null; }
    }
    public partial class AudioTiming
    {
        public AudioTiming() { }
        public long? Duration { get { throw null; } set { } }
        public long? Offset { get { throw null; } set { } }
    }
    public partial class BaseExtraInformation
    {
        internal BaseExtraInformation() { }
    }
    public partial class BasePrediction
    {
        internal BasePrediction() { }
        public Azure.AI.Language.Conversations.ProjectKind ProjectKind { get { throw null; } set { } }
        public string TopIntent { get { throw null; } }
    }
    public partial class BaseResolution
    {
        internal BaseResolution() { }
    }
    public partial class BooleanResolution : Azure.AI.Language.Conversations.BaseResolution
    {
        internal BooleanResolution() { }
        public bool Value { get { throw null; } }
    }
    public partial class ConversationAnalysisClient
    {
        protected ConversationAnalysisClient() { }
        public ConversationAnalysisClient(System.Uri endpoint, Azure.AzureKeyCredential credential) { }
        public ConversationAnalysisClient(System.Uri endpoint, Azure.AzureKeyCredential credential, Azure.AI.Language.Conversations.ConversationAnalysisClientOptions options) { }
        public virtual Azure.Core.Pipeline.HttpPipeline Pipeline { get { throw null; } }
        public virtual Azure.Response AnalyzeConversation(Azure.Core.RequestContent content, Azure.RequestContext context = null) { throw null; }
        public virtual Azure.Response<Azure.AI.Language.Conversations.AnalyzeConversationTaskResult> AnalyzeConversation(string utterance, Azure.AI.Language.Conversations.ConversationsProject project, Azure.AI.Language.Conversations.AnalyzeConversationOptions options = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) { throw null; }
        public virtual System.Threading.Tasks.Task<Azure.Response> AnalyzeConversationAsync(Azure.Core.RequestContent content, Azure.RequestContext context = null) { throw null; }
        public virtual System.Threading.Tasks.Task<Azure.Response<Azure.AI.Language.Conversations.AnalyzeConversationTaskResult>> AnalyzeConversationAsync(string utterance, Azure.AI.Language.Conversations.ConversationsProject project, Azure.AI.Language.Conversations.AnalyzeConversationOptions options = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) { throw null; }
        public static string GetAuthorizationHeader() { throw null; }
        public virtual Azure.Response JobStatus(System.Guid jobId, bool? showStats = default(bool?), Azure.RequestContext context = null) { throw null; }
        public virtual System.Threading.Tasks.Task<Azure.Response> JobStatusAsync(System.Guid jobId, bool? showStats = default(bool?), Azure.RequestContext context = null) { throw null; }
        public virtual Azure.Operation<Azure.AI.Language.Conversations.AnalyzeConversationJobState> StartAnalyzeConversation(System.Collections.Generic.IEnumerable<Azure.AI.Language.Conversations.Models.GeneratedConversation> input, System.Collections.Generic.IEnumerable<Azure.AI.Language.Conversations.AnalyzeConversationLROTask> tasks, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) { throw null; }
        public virtual System.Threading.Tasks.Task<Azure.Operation<Azure.AI.Language.Conversations.AnalyzeConversationJobState>> StartAnalyzeConversationAsync(System.Collections.Generic.IEnumerable<Azure.AI.Language.Conversations.Models.GeneratedConversation> input, System.Collections.Generic.IEnumerable<Azure.AI.Language.Conversations.AnalyzeConversationLROTask> tasks, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) { throw null; }
        public virtual Azure.Operation<Azure.AI.Language.Conversations.AnalyzeConversationJobState> SubmitJob(Azure.Core.RequestContent content, Azure.RequestContext context = null) { throw null; }
        public virtual Azure.Operation<System.BinaryData> SubmitJob(Azure.WaitUntil waitUntil, Azure.Core.RequestContent content, Azure.RequestContext context = null) { throw null; }
        public virtual System.Threading.Tasks.Task<Azure.Operation<Azure.AI.Language.Conversations.AnalyzeConversationJobState>> SubmitJobAsync(Azure.Core.RequestContent content, Azure.RequestContext context = null) { throw null; }
        public virtual System.Threading.Tasks.Task<Azure.Operation<System.BinaryData>> SubmitJobAsync(Azure.WaitUntil waitUntil, Azure.Core.RequestContent content, Azure.RequestContext context = null) { throw null; }
    }
    public partial class ConversationAnalysisClientOptions : Azure.Core.ClientOptions
    {
        public ConversationAnalysisClientOptions(Azure.AI.Language.Conversations.ConversationAnalysisClientOptions.ServiceVersion version = Azure.AI.Language.Conversations.ConversationAnalysisClientOptions.ServiceVersion.V2022_05_15_Preview) { }
        public enum ServiceVersion
        {
            V2022_05_15_Preview = 1,
        }
    }
    public partial class ConversationCallingOptions
    {
        public ConversationCallingOptions() { }
        public bool? IsLoggingEnabled { get { throw null; } set { } }
        public string Language { get { throw null; } set { } }
        public bool? Verbose { get { throw null; } set { } }
    }
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public readonly partial struct ConversationDomain : System.IEquatable<Azure.AI.Language.Conversations.ConversationDomain>
    {
        private readonly object _dummy;
        private readonly int _dummyPrimitive;
        public ConversationDomain(string value) { throw null; }
        public static Azure.AI.Language.Conversations.ConversationDomain Finance { get { throw null; } }
        public static Azure.AI.Language.Conversations.ConversationDomain Generic { get { throw null; } }
        public static Azure.AI.Language.Conversations.ConversationDomain Healthcare { get { throw null; } }
        public bool Equals(Azure.AI.Language.Conversations.ConversationDomain other) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Equals(object obj) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override int GetHashCode() { throw null; }
        public static bool operator ==(Azure.AI.Language.Conversations.ConversationDomain left, Azure.AI.Language.Conversations.ConversationDomain right) { throw null; }
        public static implicit operator Azure.AI.Language.Conversations.ConversationDomain (string value) { throw null; }
        public static bool operator !=(Azure.AI.Language.Conversations.ConversationDomain left, Azure.AI.Language.Conversations.ConversationDomain right) { throw null; }
        public override string ToString() { throw null; }
    }
    public partial class ConversationEntity
    {
        internal ConversationEntity() { }
        public string Category { get { throw null; } }
        public float Confidence { get { throw null; } }
        public System.Collections.Generic.IReadOnlyList<Azure.AI.Language.Conversations.BaseExtraInformation> ExtraInformation { get { throw null; } }
        public int Length { get { throw null; } }
        public int Offset { get { throw null; } }
        public System.Collections.Generic.IReadOnlyList<Azure.AI.Language.Conversations.BaseResolution> Resolutions { get { throw null; } }
        public string Text { get { throw null; } }
    }
    public partial class ConversationIntent
    {
        internal ConversationIntent() { }
        public string Category { get { throw null; } }
        public float Confidence { get { throw null; } }
    }
    public partial class ConversationItemBase
    {
        public ConversationItemBase(string id, string participantId) { }
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties { get { throw null; } }
        public string Id { get { throw null; } }
        public string Language { get { throw null; } set { } }
        public Azure.AI.Language.Conversations.InputModality? Modality { get { throw null; } set { } }
        public string ParticipantId { get { throw null; } }
        public Azure.AI.Language.Conversations.GeneratedRole? Role { get { throw null; } set { } }
    }
    public partial class ConversationParameters : Azure.AI.Language.Conversations.AnalysisParameters
    {
        public ConversationParameters() { }
        public Azure.AI.Language.Conversations.ConversationCallingOptions CallingOptions { get { throw null; } set { } }
    }
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public readonly partial struct ConversationPIICategory : System.IEquatable<Azure.AI.Language.Conversations.ConversationPIICategory>
    {
        private readonly object _dummy;
        private readonly int _dummyPrimitive;
        public ConversationPIICategory(string value) { throw null; }
        public static Azure.AI.Language.Conversations.ConversationPIICategory Address { get { throw null; } }
        public static Azure.AI.Language.Conversations.ConversationPIICategory All { get { throw null; } }
        public static Azure.AI.Language.Conversations.ConversationPIICategory CreditCardNumber { get { throw null; } }
        public static Azure.AI.Language.Conversations.ConversationPIICategory Default { get { throw null; } }
        public static Azure.AI.Language.Conversations.ConversationPIICategory Email { get { throw null; } }
        public static Azure.AI.Language.Conversations.ConversationPIICategory Miscellaneous { get { throw null; } }
        public static Azure.AI.Language.Conversations.ConversationPIICategory Name { get { throw null; } }
        public static Azure.AI.Language.Conversations.ConversationPIICategory NumericIdentifier { get { throw null; } }
        public static Azure.AI.Language.Conversations.ConversationPIICategory PhoneNumber { get { throw null; } }
        public static Azure.AI.Language.Conversations.ConversationPIICategory USSocialSecurityNumber { get { throw null; } }
        public bool Equals(Azure.AI.Language.Conversations.ConversationPIICategory other) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Equals(object obj) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override int GetHashCode() { throw null; }
        public static bool operator ==(Azure.AI.Language.Conversations.ConversationPIICategory left, Azure.AI.Language.Conversations.ConversationPIICategory right) { throw null; }
        public static implicit operator Azure.AI.Language.Conversations.ConversationPIICategory (string value) { throw null; }
        public static bool operator !=(Azure.AI.Language.Conversations.ConversationPIICategory left, Azure.AI.Language.Conversations.ConversationPIICategory right) { throw null; }
        public override string ToString() { throw null; }
    }
    public partial class ConversationPIIItemResult
    {
        public ConversationPIIItemResult(string id, Azure.AI.Language.Conversations.RedactedTranscriptContent redactedContent, System.Collections.Generic.IEnumerable<Azure.AI.Language.Conversations.Models.GeneratedEntity> entities) { }
        public System.Collections.Generic.IList<Azure.AI.Language.Conversations.Models.GeneratedEntity> Entities { get { throw null; } }
        public string Id { get { throw null; } set { } }
        public Azure.AI.Language.Conversations.RedactedTranscriptContent RedactedContent { get { throw null; } set { } }
    }
    public partial class ConversationPIIResult
    {
        public ConversationPIIResult(System.Collections.Generic.IEnumerable<Azure.AI.Language.Conversations.ConversationPIIItemResult> conversationItems) { }
        public System.Collections.Generic.IList<Azure.AI.Language.Conversations.ConversationPIIItemResult> ConversationItems { get { throw null; } }
    }
    public partial class ConversationPIIResults : Azure.AI.Language.Conversations.PreBuiltResult
    {
        public ConversationPIIResults(System.Collections.Generic.IEnumerable<Azure.AI.Language.Conversations.InputError> errors, string modelVersion, System.Collections.Generic.IEnumerable<Azure.AI.Language.Conversations.ConversationPIIResultsConversationsItem> conversations) : base (default(System.Collections.Generic.IEnumerable<Azure.AI.Language.Conversations.InputError>), default(string)) { }
        public System.Collections.Generic.IList<Azure.AI.Language.Conversations.ConversationPIIResultsConversationsItem> Conversations { get { throw null; } }
    }
    public partial class ConversationPIIResultsConversationsItem : Azure.AI.Language.Conversations.ConversationPIIResult
    {
        public ConversationPIIResultsConversationsItem(System.Collections.Generic.IEnumerable<Azure.AI.Language.Conversations.ConversationPIIItemResult> conversationItems, string id, System.Collections.Generic.IEnumerable<Azure.AI.Language.Conversations.InputWarning> warnings) : base (default(System.Collections.Generic.IEnumerable<Azure.AI.Language.Conversations.ConversationPIIItemResult>)) { }
        public string Id { get { throw null; } set { } }
        public Azure.AI.Language.Conversations.ConversationStatistics Statistics { get { throw null; } set { } }
        public System.Collections.Generic.IList<Azure.AI.Language.Conversations.InputWarning> Warnings { get { throw null; } }
    }
    public partial class ConversationPIITaskParameters : Azure.AI.Language.Conversations.PreBuiltTaskParameters
    {
        public ConversationPIITaskParameters() { }
        public bool? IncludeAudioRedaction { get { throw null; } set { } }
        public System.Collections.Generic.IList<Azure.AI.Language.Conversations.ConversationPIICategory> PiiCategories { get { throw null; } }
        public Azure.AI.Language.Conversations.TranscriptContentType? RedactionSource { get { throw null; } set { } }
    }
    public partial class ConversationPrediction : Azure.AI.Language.Conversations.BasePrediction
    {
        internal ConversationPrediction() { }
        public System.Collections.Generic.IReadOnlyList<Azure.AI.Language.Conversations.ConversationEntity> Entities { get { throw null; } }
        public System.Collections.Generic.IReadOnlyList<Azure.AI.Language.Conversations.ConversationIntent> Intents { get { throw null; } }
    }
    public partial class ConversationRequestStatistics : Azure.AI.Language.Conversations.RequestStatistics
    {
        public ConversationRequestStatistics(long transactionsCount, int conversationsCount, int validConversationsCount, int erroneousConversationsCount) : base (default(long)) { }
        public int ConversationsCount { get { throw null; } set { } }
        public int ErroneousConversationsCount { get { throw null; } set { } }
        public int ValidConversationsCount { get { throw null; } set { } }
    }
    public partial class ConversationResult
    {
        internal ConversationResult() { }
        public string DetectedLanguage { get { throw null; } }
        public Azure.AI.Language.Conversations.ConversationPrediction Prediction { get { throw null; } }
        public string Query { get { throw null; } }
    }
    public partial class ConversationResultBase
    {
        public ConversationResultBase(string id, System.Collections.Generic.IEnumerable<Azure.AI.Language.Conversations.InputWarning> warnings) { }
        public string Id { get { throw null; } set { } }
        public Azure.AI.Language.Conversations.ConversationStatistics Statistics { get { throw null; } set { } }
        public System.Collections.Generic.IList<Azure.AI.Language.Conversations.InputWarning> Warnings { get { throw null; } }
    }
    public static partial class ConversationsModelFactory
    {
        public static Azure.AI.Language.Conversations.LuisTargetIntentResult LuisTargetIntentResult(Azure.AI.Language.Conversations.TargetProjectKind targetKind = default(Azure.AI.Language.Conversations.TargetProjectKind), string apiVersion = null, float confidenceScore = 0f, object result = null) { throw null; }
    }
    public partial class ConversationsProject
    {
        public ConversationsProject(string projectName, string deploymentName) { }
        public string DeploymentName { get { throw null; } }
        public string ProjectName { get { throw null; } }
    }
    public partial class ConversationsSummaryResult
    {
        public ConversationsSummaryResult(System.Collections.Generic.IEnumerable<Azure.AI.Language.Conversations.ConversationsSummaryResultSummariesItem> summaries) { }
        public System.Collections.Generic.IList<Azure.AI.Language.Conversations.ConversationsSummaryResultSummariesItem> Summaries { get { throw null; } }
    }
    public partial class ConversationsSummaryResultSummariesItem : Azure.AI.Language.Conversations.SummaryResultItem
    {
        public ConversationsSummaryResultSummariesItem(string aspect, string text) : base (default(string), default(string)) { }
    }
    public partial class ConversationStatistics
    {
        public ConversationStatistics(int transactionsCount) { }
        public int TransactionsCount { get { throw null; } set { } }
    }
    public partial class ConversationSummarizationTaskParameters : Azure.AI.Language.Conversations.PreBuiltTaskParameters
    {
        public ConversationSummarizationTaskParameters(System.Collections.Generic.IEnumerable<Azure.AI.Language.Conversations.SummaryAspect> summaryAspects) { }
        public System.Collections.Generic.IList<Azure.AI.Language.Conversations.SummaryAspect> SummaryAspects { get { throw null; } }
    }
    public partial class ConversationTargetIntentResult : Azure.AI.Language.Conversations.TargetIntentResult
    {
        internal ConversationTargetIntentResult() { }
        public Azure.AI.Language.Conversations.ConversationResult Result { get { throw null; } }
    }
    public partial class ConversationTasksState
    {
        internal ConversationTasksState() { }
        public Azure.AI.Language.Conversations.ConversationTasksStateTasks Tasks { get { throw null; } }
    }
    public partial class ConversationTasksStateTasks
    {
        internal ConversationTasksStateTasks() { }
        public int Completed { get { throw null; } }
        public int Failed { get { throw null; } }
        public int InProgress { get { throw null; } }
        public System.Collections.Generic.IReadOnlyList<Azure.AI.Language.Conversations.AnalyzeConversationJobResult> Items { get { throw null; } }
        public int Total { get { throw null; } }
    }
    public partial class CurrencyResolution : Azure.AI.Language.Conversations.BaseResolution
    {
        internal CurrencyResolution() { }
        public string ISO4217 { get { throw null; } }
        public string Unit { get { throw null; } }
        public double Value { get { throw null; } }
    }
    public partial class CustomConversationalTask : Azure.AI.Language.Conversations.AnalyzeConversationTask
    {
        public CustomConversationalTask(Azure.AI.Language.Conversations.AnalyzeConversationOptions analysisInput, Azure.AI.Language.Conversations.CustomConversationTaskParameters parameters) { }
        public Azure.AI.Language.Conversations.AnalyzeConversationOptions AnalysisInput { get { throw null; } }
        public Azure.AI.Language.Conversations.CustomConversationTaskParameters Parameters { get { throw null; } }
    }
    public partial class CustomConversationalTaskResult : Azure.AI.Language.Conversations.AnalyzeConversationTaskResult
    {
        internal CustomConversationalTaskResult() { }
        public Azure.AI.Language.Conversations.AnalyzeConversationResult Result { get { throw null; } }
    }
    public partial class CustomConversationTaskParameters
    {
        public CustomConversationTaskParameters(string projectName, string deploymentName) { }
        public string DeploymentName { get { throw null; } }
        public string DirectTarget { get { throw null; } set { } }
        public bool? IsLoggingEnabled { get { throw null; } set { } }
        public string ProjectName { get { throw null; } }
        public Azure.AI.Language.Conversations.StringIndexType? StringIndexType { get { throw null; } set { } }
        public System.Collections.Generic.IDictionary<string, Azure.AI.Language.Conversations.AnalysisParameters> TargetProjectParameters { get { throw null; } }
        public bool? Verbose { get { throw null; } set { } }
    }
    public partial class DateTimeResolution : Azure.AI.Language.Conversations.BaseResolution
    {
        internal DateTimeResolution() { }
        public Azure.AI.Language.Conversations.DateTimeSubKind DateTimeSubKind { get { throw null; } }
        public Azure.AI.Language.Conversations.TemporalModifier? Modifier { get { throw null; } }
        public string Timex { get { throw null; } }
        public string Value { get { throw null; } }
    }
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public readonly partial struct DateTimeSubKind : System.IEquatable<Azure.AI.Language.Conversations.DateTimeSubKind>
    {
        private readonly object _dummy;
        private readonly int _dummyPrimitive;
        public DateTimeSubKind(string value) { throw null; }
        public static Azure.AI.Language.Conversations.DateTimeSubKind Date { get { throw null; } }
        public static Azure.AI.Language.Conversations.DateTimeSubKind DateTime { get { throw null; } }
        public static Azure.AI.Language.Conversations.DateTimeSubKind Duration { get { throw null; } }
        public static Azure.AI.Language.Conversations.DateTimeSubKind Set { get { throw null; } }
        public static Azure.AI.Language.Conversations.DateTimeSubKind Time { get { throw null; } }
        public bool Equals(Azure.AI.Language.Conversations.DateTimeSubKind other) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Equals(object obj) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override int GetHashCode() { throw null; }
        public static bool operator ==(Azure.AI.Language.Conversations.DateTimeSubKind left, Azure.AI.Language.Conversations.DateTimeSubKind right) { throw null; }
        public static implicit operator Azure.AI.Language.Conversations.DateTimeSubKind (string value) { throw null; }
        public static bool operator !=(Azure.AI.Language.Conversations.DateTimeSubKind left, Azure.AI.Language.Conversations.DateTimeSubKind right) { throw null; }
        public override string ToString() { throw null; }
    }
    public partial class EntitySubtype : Azure.AI.Language.Conversations.BaseExtraInformation
    {
        internal EntitySubtype() { }
        public string Value { get { throw null; } }
    }
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public readonly partial struct ErrorCode : System.IEquatable<Azure.AI.Language.Conversations.ErrorCode>
    {
        private readonly object _dummy;
        private readonly int _dummyPrimitive;
        public ErrorCode(string value) { throw null; }
        public static Azure.AI.Language.Conversations.ErrorCode AzureCognitiveSearchIndexLimitReached { get { throw null; } }
        public static Azure.AI.Language.Conversations.ErrorCode AzureCognitiveSearchIndexNotFound { get { throw null; } }
        public static Azure.AI.Language.Conversations.ErrorCode AzureCognitiveSearchNotFound { get { throw null; } }
        public static Azure.AI.Language.Conversations.ErrorCode AzureCognitiveSearchThrottling { get { throw null; } }
        public static Azure.AI.Language.Conversations.ErrorCode Forbidden { get { throw null; } }
        public static Azure.AI.Language.Conversations.ErrorCode InternalServerError { get { throw null; } }
        public static Azure.AI.Language.Conversations.ErrorCode InvalidArgument { get { throw null; } }
        public static Azure.AI.Language.Conversations.ErrorCode InvalidRequest { get { throw null; } }
        public static Azure.AI.Language.Conversations.ErrorCode NotFound { get { throw null; } }
        public static Azure.AI.Language.Conversations.ErrorCode OperationNotFound { get { throw null; } }
        public static Azure.AI.Language.Conversations.ErrorCode ProjectNotFound { get { throw null; } }
        public static Azure.AI.Language.Conversations.ErrorCode ServiceUnavailable { get { throw null; } }
        public static Azure.AI.Language.Conversations.ErrorCode TooManyRequests { get { throw null; } }
        public static Azure.AI.Language.Conversations.ErrorCode Unauthorized { get { throw null; } }
        public bool Equals(Azure.AI.Language.Conversations.ErrorCode other) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Equals(object obj) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override int GetHashCode() { throw null; }
        public static bool operator ==(Azure.AI.Language.Conversations.ErrorCode left, Azure.AI.Language.Conversations.ErrorCode right) { throw null; }
        public static implicit operator Azure.AI.Language.Conversations.ErrorCode (string value) { throw null; }
        public static bool operator !=(Azure.AI.Language.Conversations.ErrorCode left, Azure.AI.Language.Conversations.ErrorCode right) { throw null; }
        public override string ToString() { throw null; }
    }
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public readonly partial struct ExtraInformationKind : System.IEquatable<Azure.AI.Language.Conversations.ExtraInformationKind>
    {
        private readonly object _dummy;
        private readonly int _dummyPrimitive;
        public ExtraInformationKind(string value) { throw null; }
        public static Azure.AI.Language.Conversations.ExtraInformationKind EntitySubtype { get { throw null; } }
        public static Azure.AI.Language.Conversations.ExtraInformationKind ListKey { get { throw null; } }
        public bool Equals(Azure.AI.Language.Conversations.ExtraInformationKind other) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Equals(object obj) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override int GetHashCode() { throw null; }
        public static bool operator ==(Azure.AI.Language.Conversations.ExtraInformationKind left, Azure.AI.Language.Conversations.ExtraInformationKind right) { throw null; }
        public static implicit operator Azure.AI.Language.Conversations.ExtraInformationKind (string value) { throw null; }
        public static bool operator !=(Azure.AI.Language.Conversations.ExtraInformationKind left, Azure.AI.Language.Conversations.ExtraInformationKind right) { throw null; }
        public override string ToString() { throw null; }
    }
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public readonly partial struct GeneratedRole : System.IEquatable<Azure.AI.Language.Conversations.GeneratedRole>
    {
        private readonly object _dummy;
        private readonly int _dummyPrimitive;
        public GeneratedRole(string value) { throw null; }
        public static Azure.AI.Language.Conversations.GeneratedRole Agent { get { throw null; } }
        public static Azure.AI.Language.Conversations.GeneratedRole Customer { get { throw null; } }
        public static Azure.AI.Language.Conversations.GeneratedRole Generic { get { throw null; } }
        public bool Equals(Azure.AI.Language.Conversations.GeneratedRole other) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Equals(object obj) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override int GetHashCode() { throw null; }
        public static bool operator ==(Azure.AI.Language.Conversations.GeneratedRole left, Azure.AI.Language.Conversations.GeneratedRole right) { throw null; }
        public static implicit operator Azure.AI.Language.Conversations.GeneratedRole (string value) { throw null; }
        public static bool operator !=(Azure.AI.Language.Conversations.GeneratedRole left, Azure.AI.Language.Conversations.GeneratedRole right) { throw null; }
        public override string ToString() { throw null; }
    }
    public partial class InformationResolution : Azure.AI.Language.Conversations.BaseResolution
    {
        internal InformationResolution() { }
        public Azure.AI.Language.Conversations.InformationUnit Unit { get { throw null; } }
        public double Value { get { throw null; } }
    }
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public readonly partial struct InformationUnit : System.IEquatable<Azure.AI.Language.Conversations.InformationUnit>
    {
        private readonly object _dummy;
        private readonly int _dummyPrimitive;
        public InformationUnit(string value) { throw null; }
        public static Azure.AI.Language.Conversations.InformationUnit Bit { get { throw null; } }
        public static Azure.AI.Language.Conversations.InformationUnit Byte { get { throw null; } }
        public static Azure.AI.Language.Conversations.InformationUnit Gigabit { get { throw null; } }
        public static Azure.AI.Language.Conversations.InformationUnit Gigabyte { get { throw null; } }
        public static Azure.AI.Language.Conversations.InformationUnit Kilobit { get { throw null; } }
        public static Azure.AI.Language.Conversations.InformationUnit Kilobyte { get { throw null; } }
        public static Azure.AI.Language.Conversations.InformationUnit Megabit { get { throw null; } }
        public static Azure.AI.Language.Conversations.InformationUnit Megabyte { get { throw null; } }
        public static Azure.AI.Language.Conversations.InformationUnit Petabit { get { throw null; } }
        public static Azure.AI.Language.Conversations.InformationUnit Petabyte { get { throw null; } }
        public static Azure.AI.Language.Conversations.InformationUnit Terabit { get { throw null; } }
        public static Azure.AI.Language.Conversations.InformationUnit Terabyte { get { throw null; } }
        public static Azure.AI.Language.Conversations.InformationUnit Unspecified { get { throw null; } }
        public bool Equals(Azure.AI.Language.Conversations.InformationUnit other) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Equals(object obj) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override int GetHashCode() { throw null; }
        public static bool operator ==(Azure.AI.Language.Conversations.InformationUnit left, Azure.AI.Language.Conversations.InformationUnit right) { throw null; }
        public static implicit operator Azure.AI.Language.Conversations.InformationUnit (string value) { throw null; }
        public static bool operator !=(Azure.AI.Language.Conversations.InformationUnit left, Azure.AI.Language.Conversations.InformationUnit right) { throw null; }
        public override string ToString() { throw null; }
    }
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public readonly partial struct InnerErrorCode : System.IEquatable<Azure.AI.Language.Conversations.InnerErrorCode>
    {
        private readonly object _dummy;
        private readonly int _dummyPrimitive;
        public InnerErrorCode(string value) { throw null; }
        public static Azure.AI.Language.Conversations.InnerErrorCode AzureCognitiveSearchNotFound { get { throw null; } }
        public static Azure.AI.Language.Conversations.InnerErrorCode AzureCognitiveSearchThrottling { get { throw null; } }
        public static Azure.AI.Language.Conversations.InnerErrorCode EmptyRequest { get { throw null; } }
        public static Azure.AI.Language.Conversations.InnerErrorCode ExtractionFailure { get { throw null; } }
        public static Azure.AI.Language.Conversations.InnerErrorCode InvalidCountryHint { get { throw null; } }
        public static Azure.AI.Language.Conversations.InnerErrorCode InvalidDocument { get { throw null; } }
        public static Azure.AI.Language.Conversations.InnerErrorCode InvalidDocumentBatch { get { throw null; } }
        public static Azure.AI.Language.Conversations.InnerErrorCode InvalidParameterValue { get { throw null; } }
        public static Azure.AI.Language.Conversations.InnerErrorCode InvalidRequest { get { throw null; } }
        public static Azure.AI.Language.Conversations.InnerErrorCode InvalidRequestBodyFormat { get { throw null; } }
        public static Azure.AI.Language.Conversations.InnerErrorCode KnowledgeBaseNotFound { get { throw null; } }
        public static Azure.AI.Language.Conversations.InnerErrorCode MissingInputDocuments { get { throw null; } }
        public static Azure.AI.Language.Conversations.InnerErrorCode ModelVersionIncorrect { get { throw null; } }
        public static Azure.AI.Language.Conversations.InnerErrorCode UnsupportedLanguageCode { get { throw null; } }
        public bool Equals(Azure.AI.Language.Conversations.InnerErrorCode other) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Equals(object obj) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override int GetHashCode() { throw null; }
        public static bool operator ==(Azure.AI.Language.Conversations.InnerErrorCode left, Azure.AI.Language.Conversations.InnerErrorCode right) { throw null; }
        public static implicit operator Azure.AI.Language.Conversations.InnerErrorCode (string value) { throw null; }
        public static bool operator !=(Azure.AI.Language.Conversations.InnerErrorCode left, Azure.AI.Language.Conversations.InnerErrorCode right) { throw null; }
        public override string ToString() { throw null; }
    }
    public partial class InnerErrorModel
    {
        public InnerErrorModel(Azure.AI.Language.Conversations.InnerErrorCode code, string message) { }
        public Azure.AI.Language.Conversations.InnerErrorCode Code { get { throw null; } set { } }
        public System.Collections.Generic.IDictionary<string, string> Details { get { throw null; } }
        public Azure.AI.Language.Conversations.InnerErrorModel Innererror { get { throw null; } set { } }
        public string Message { get { throw null; } set { } }
        public string Target { get { throw null; } set { } }
    }
    public partial class InputError
    {
        public InputError(string id, Azure.AI.Language.Conversations.Models.GeneratedError error) { }
        public Azure.AI.Language.Conversations.Models.GeneratedError Error { get { throw null; } set { } }
        public string Id { get { throw null; } set { } }
    }
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public readonly partial struct InputModality : System.IEquatable<Azure.AI.Language.Conversations.InputModality>
    {
        private readonly object _dummy;
        private readonly int _dummyPrimitive;
        public InputModality(string value) { throw null; }
        public static Azure.AI.Language.Conversations.InputModality Text { get { throw null; } }
        public static Azure.AI.Language.Conversations.InputModality Transcript { get { throw null; } }
        public bool Equals(Azure.AI.Language.Conversations.InputModality other) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Equals(object obj) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override int GetHashCode() { throw null; }
        public static bool operator ==(Azure.AI.Language.Conversations.InputModality left, Azure.AI.Language.Conversations.InputModality right) { throw null; }
        public static implicit operator Azure.AI.Language.Conversations.InputModality (string value) { throw null; }
        public static bool operator !=(Azure.AI.Language.Conversations.InputModality left, Azure.AI.Language.Conversations.InputModality right) { throw null; }
        public override string ToString() { throw null; }
    }
    public partial class InputWarning
    {
        public InputWarning(string code, string message) { }
        public string Code { get { throw null; } set { } }
        public string Message { get { throw null; } set { } }
        public string TargetRef { get { throw null; } set { } }
    }
    public enum JobState
    {
        NotStarted = 0,
        Running = 1,
        Succeeded = 2,
        PartiallySucceeded = 3,
        Failed = 4,
        Cancelled = 5,
        Cancelling = 6,
    }
    public partial class JobStateAutoGenerated
    {
        internal JobStateAutoGenerated() { }
        public System.DateTimeOffset CreatedDateTime { get { throw null; } }
        public string DisplayName { get { throw null; } }
        public System.Collections.Generic.IReadOnlyList<Azure.AI.Language.Conversations.Models.GeneratedError> Errors { get { throw null; } }
        public System.DateTimeOffset? ExpirationDateTime { get { throw null; } }
        public System.Guid JobId { get { throw null; } }
        public System.DateTimeOffset LastUpdateDateTime { get { throw null; } }
        public string NextLink { get { throw null; } }
        public Azure.AI.Language.Conversations.JobState Status { get { throw null; } }
    }
    public partial class KnowledgeBaseAnswer
    {
        public KnowledgeBaseAnswer() { }
        public double? Confidence { get { throw null; } }
    }
    public partial class LengthResolution : Azure.AI.Language.Conversations.BaseResolution
    {
        internal LengthResolution() { }
        public Azure.AI.Language.Conversations.LengthUnit Unit { get { throw null; } }
        public double Value { get { throw null; } }
    }
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public readonly partial struct LengthUnit : System.IEquatable<Azure.AI.Language.Conversations.LengthUnit>
    {
        private readonly object _dummy;
        private readonly int _dummyPrimitive;
        public LengthUnit(string value) { throw null; }
        public static Azure.AI.Language.Conversations.LengthUnit Centimeter { get { throw null; } }
        public static Azure.AI.Language.Conversations.LengthUnit Decameter { get { throw null; } }
        public static Azure.AI.Language.Conversations.LengthUnit Decimeter { get { throw null; } }
        public static Azure.AI.Language.Conversations.LengthUnit Foot { get { throw null; } }
        public static Azure.AI.Language.Conversations.LengthUnit Hectometer { get { throw null; } }
        public static Azure.AI.Language.Conversations.LengthUnit Inch { get { throw null; } }
        public static Azure.AI.Language.Conversations.LengthUnit Kilometer { get { throw null; } }
        public static Azure.AI.Language.Conversations.LengthUnit LightYear { get { throw null; } }
        public static Azure.AI.Language.Conversations.LengthUnit Meter { get { throw null; } }
        public static Azure.AI.Language.Conversations.LengthUnit Micrometer { get { throw null; } }
        public static Azure.AI.Language.Conversations.LengthUnit Mile { get { throw null; } }
        public static Azure.AI.Language.Conversations.LengthUnit Millimeter { get { throw null; } }
        public static Azure.AI.Language.Conversations.LengthUnit Nanometer { get { throw null; } }
        public static Azure.AI.Language.Conversations.LengthUnit Picometer { get { throw null; } }
        public static Azure.AI.Language.Conversations.LengthUnit Pt { get { throw null; } }
        public static Azure.AI.Language.Conversations.LengthUnit Unspecified { get { throw null; } }
        public static Azure.AI.Language.Conversations.LengthUnit Yard { get { throw null; } }
        public bool Equals(Azure.AI.Language.Conversations.LengthUnit other) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Equals(object obj) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override int GetHashCode() { throw null; }
        public static bool operator ==(Azure.AI.Language.Conversations.LengthUnit left, Azure.AI.Language.Conversations.LengthUnit right) { throw null; }
        public static implicit operator Azure.AI.Language.Conversations.LengthUnit (string value) { throw null; }
        public static bool operator !=(Azure.AI.Language.Conversations.LengthUnit left, Azure.AI.Language.Conversations.LengthUnit right) { throw null; }
        public override string ToString() { throw null; }
    }
    public partial class ListKey : Azure.AI.Language.Conversations.BaseExtraInformation
    {
        internal ListKey() { }
        public string Key { get { throw null; } }
    }
    public partial class LuisCallingOptions
    {
        public LuisCallingOptions() { }
        public string BingSpellCheckSubscriptionKey { get { throw null; } set { } }
        public bool? Log { get { throw null; } set { } }
        public bool? ShowAllIntents { get { throw null; } set { } }
        public bool? SpellCheck { get { throw null; } set { } }
        public float? TimezoneOffset { get { throw null; } set { } }
        public bool? Verbose { get { throw null; } set { } }
    }
    public partial class LuisParameters : Azure.AI.Language.Conversations.AnalysisParameters
    {
        public LuisParameters() { }
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties { get { throw null; } }
        public Azure.AI.Language.Conversations.LuisCallingOptions CallingOptions { get { throw null; } set { } }
        public string Query { get { throw null; } set { } }
    }
    public partial class LuisTargetIntentResult : Azure.AI.Language.Conversations.TargetIntentResult
    {
        internal LuisTargetIntentResult() { }
        public System.BinaryData Result { get { throw null; } }
    }
    public partial class MultiLanguageConversationAnalysisInput
    {
        public MultiLanguageConversationAnalysisInput(System.Collections.Generic.IEnumerable<Azure.AI.Language.Conversations.Models.GeneratedConversation> conversations) { }
        public System.Collections.Generic.IList<Azure.AI.Language.Conversations.Models.GeneratedConversation> Conversations { get { throw null; } }
    }
    public partial class NoneLinkedTargetIntentResult : Azure.AI.Language.Conversations.TargetIntentResult
    {
        internal NoneLinkedTargetIntentResult() { }
        public Azure.AI.Language.Conversations.ConversationResult Result { get { throw null; } }
    }
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public readonly partial struct NumberKind : System.IEquatable<Azure.AI.Language.Conversations.NumberKind>
    {
        private readonly object _dummy;
        private readonly int _dummyPrimitive;
        public NumberKind(string value) { throw null; }
        public static Azure.AI.Language.Conversations.NumberKind Decimal { get { throw null; } }
        public static Azure.AI.Language.Conversations.NumberKind Fraction { get { throw null; } }
        public static Azure.AI.Language.Conversations.NumberKind Integer { get { throw null; } }
        public static Azure.AI.Language.Conversations.NumberKind Percent { get { throw null; } }
        public static Azure.AI.Language.Conversations.NumberKind Power { get { throw null; } }
        public static Azure.AI.Language.Conversations.NumberKind Unspecified { get { throw null; } }
        public bool Equals(Azure.AI.Language.Conversations.NumberKind other) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Equals(object obj) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override int GetHashCode() { throw null; }
        public static bool operator ==(Azure.AI.Language.Conversations.NumberKind left, Azure.AI.Language.Conversations.NumberKind right) { throw null; }
        public static implicit operator Azure.AI.Language.Conversations.NumberKind (string value) { throw null; }
        public static bool operator !=(Azure.AI.Language.Conversations.NumberKind left, Azure.AI.Language.Conversations.NumberKind right) { throw null; }
        public override string ToString() { throw null; }
    }
    public partial class NumberResolution : Azure.AI.Language.Conversations.BaseResolution
    {
        internal NumberResolution() { }
        public Azure.AI.Language.Conversations.NumberKind NumberKind { get { throw null; } }
        public string Value { get { throw null; } }
    }
    public partial class NumericRangeResolution : Azure.AI.Language.Conversations.BaseResolution
    {
        internal NumericRangeResolution() { }
        public double Maximum { get { throw null; } }
        public double Minimum { get { throw null; } }
        public Azure.AI.Language.Conversations.RangeKind RangeKind { get { throw null; } }
    }
    public partial class OrchestratorPrediction : Azure.AI.Language.Conversations.BasePrediction
    {
        internal OrchestratorPrediction() { }
        public System.Collections.Generic.IReadOnlyDictionary<string, Azure.AI.Language.Conversations.TargetIntentResult> Intents { get { throw null; } }
    }
    public partial class OrdinalResolution : Azure.AI.Language.Conversations.BaseResolution
    {
        internal OrdinalResolution() { }
        public string Offset { get { throw null; } }
        public Azure.AI.Language.Conversations.RelativeTo RelativeTo { get { throw null; } }
        public string Value { get { throw null; } }
    }
    public partial class PreBuiltResult
    {
        public PreBuiltResult(System.Collections.Generic.IEnumerable<Azure.AI.Language.Conversations.InputError> errors, string modelVersion) { }
        public System.Collections.Generic.IList<Azure.AI.Language.Conversations.InputError> Errors { get { throw null; } }
        public string ModelVersion { get { throw null; } set { } }
        public Azure.AI.Language.Conversations.RequestStatistics Statistics { get { throw null; } set { } }
    }
    public partial class PreBuiltTaskParameters : Azure.AI.Language.Conversations.TaskParameters
    {
        public PreBuiltTaskParameters() { }
        public string ModelVersion { get { throw null; } set { } }
    }
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public readonly partial struct ProjectKind : System.IEquatable<Azure.AI.Language.Conversations.ProjectKind>
    {
        private readonly object _dummy;
        private readonly int _dummyPrimitive;
        public ProjectKind(string value) { throw null; }
        public static Azure.AI.Language.Conversations.ProjectKind Conversation { get { throw null; } }
        public static Azure.AI.Language.Conversations.ProjectKind Orchestration { get { throw null; } }
        public bool Equals(Azure.AI.Language.Conversations.ProjectKind other) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Equals(object obj) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override int GetHashCode() { throw null; }
        public static bool operator ==(Azure.AI.Language.Conversations.ProjectKind left, Azure.AI.Language.Conversations.ProjectKind right) { throw null; }
        public static implicit operator Azure.AI.Language.Conversations.ProjectKind (string value) { throw null; }
        public static bool operator !=(Azure.AI.Language.Conversations.ProjectKind left, Azure.AI.Language.Conversations.ProjectKind right) { throw null; }
        public override string ToString() { throw null; }
    }
    public partial class QuantityResolution
    {
        internal QuantityResolution() { }
        public double Value { get { throw null; } }
    }
    public partial class QuestionAnsweringParameters : Azure.AI.Language.Conversations.AnalysisParameters
    {
        public QuestionAnsweringParameters() { }
        public object CallingOptions { get { throw null; } set { } }
    }
    public partial class QuestionAnsweringTargetIntentResult : Azure.AI.Language.Conversations.TargetIntentResult
    {
        internal QuestionAnsweringTargetIntentResult() { }
        public System.BinaryData Result { get { throw null; } }
    }
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public readonly partial struct RangeKind : System.IEquatable<Azure.AI.Language.Conversations.RangeKind>
    {
        private readonly object _dummy;
        private readonly int _dummyPrimitive;
        public RangeKind(string value) { throw null; }
        public static Azure.AI.Language.Conversations.RangeKind Age { get { throw null; } }
        public static Azure.AI.Language.Conversations.RangeKind Area { get { throw null; } }
        public static Azure.AI.Language.Conversations.RangeKind Currency { get { throw null; } }
        public static Azure.AI.Language.Conversations.RangeKind Information { get { throw null; } }
        public static Azure.AI.Language.Conversations.RangeKind Length { get { throw null; } }
        public static Azure.AI.Language.Conversations.RangeKind Number { get { throw null; } }
        public static Azure.AI.Language.Conversations.RangeKind Speed { get { throw null; } }
        public static Azure.AI.Language.Conversations.RangeKind Temperature { get { throw null; } }
        public static Azure.AI.Language.Conversations.RangeKind Volume { get { throw null; } }
        public static Azure.AI.Language.Conversations.RangeKind Weight { get { throw null; } }
        public bool Equals(Azure.AI.Language.Conversations.RangeKind other) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Equals(object obj) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override int GetHashCode() { throw null; }
        public static bool operator ==(Azure.AI.Language.Conversations.RangeKind left, Azure.AI.Language.Conversations.RangeKind right) { throw null; }
        public static implicit operator Azure.AI.Language.Conversations.RangeKind (string value) { throw null; }
        public static bool operator !=(Azure.AI.Language.Conversations.RangeKind left, Azure.AI.Language.Conversations.RangeKind right) { throw null; }
        public override string ToString() { throw null; }
    }
    public partial class RedactedTranscriptContent
    {
        public RedactedTranscriptContent() { }
        public System.Collections.Generic.IList<Azure.AI.Language.Conversations.AudioTiming> AudioTimings { get { throw null; } }
        public string Itn { get { throw null; } set { } }
        public string Lexical { get { throw null; } set { } }
        public string MaskedItn { get { throw null; } set { } }
        public string Text { get { throw null; } set { } }
    }
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public readonly partial struct RelativeTo : System.IEquatable<Azure.AI.Language.Conversations.RelativeTo>
    {
        private readonly object _dummy;
        private readonly int _dummyPrimitive;
        public RelativeTo(string value) { throw null; }
        public static Azure.AI.Language.Conversations.RelativeTo Current { get { throw null; } }
        public static Azure.AI.Language.Conversations.RelativeTo End { get { throw null; } }
        public static Azure.AI.Language.Conversations.RelativeTo Start { get { throw null; } }
        public bool Equals(Azure.AI.Language.Conversations.RelativeTo other) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Equals(object obj) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override int GetHashCode() { throw null; }
        public static bool operator ==(Azure.AI.Language.Conversations.RelativeTo left, Azure.AI.Language.Conversations.RelativeTo right) { throw null; }
        public static implicit operator Azure.AI.Language.Conversations.RelativeTo (string value) { throw null; }
        public static bool operator !=(Azure.AI.Language.Conversations.RelativeTo left, Azure.AI.Language.Conversations.RelativeTo right) { throw null; }
        public override string ToString() { throw null; }
    }
    public partial class RequestStatistics
    {
        public RequestStatistics(long transactionsCount) { }
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties { get { throw null; } }
        public long TransactionsCount { get { throw null; } set { } }
    }
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public readonly partial struct ResolutionKind : System.IEquatable<Azure.AI.Language.Conversations.ResolutionKind>
    {
        private readonly object _dummy;
        private readonly int _dummyPrimitive;
        public ResolutionKind(string value) { throw null; }
        public static Azure.AI.Language.Conversations.ResolutionKind Age { get { throw null; } }
        public static Azure.AI.Language.Conversations.ResolutionKind Area { get { throw null; } }
        public static Azure.AI.Language.Conversations.ResolutionKind Boolean { get { throw null; } }
        public static Azure.AI.Language.Conversations.ResolutionKind Currency { get { throw null; } }
        public static Azure.AI.Language.Conversations.ResolutionKind DateTime { get { throw null; } }
        public static Azure.AI.Language.Conversations.ResolutionKind Information { get { throw null; } }
        public static Azure.AI.Language.Conversations.ResolutionKind Length { get { throw null; } }
        public static Azure.AI.Language.Conversations.ResolutionKind Number { get { throw null; } }
        public static Azure.AI.Language.Conversations.ResolutionKind NumericRange { get { throw null; } }
        public static Azure.AI.Language.Conversations.ResolutionKind Ordinal { get { throw null; } }
        public static Azure.AI.Language.Conversations.ResolutionKind Speed { get { throw null; } }
        public static Azure.AI.Language.Conversations.ResolutionKind Temperature { get { throw null; } }
        public static Azure.AI.Language.Conversations.ResolutionKind TemporalSpan { get { throw null; } }
        public static Azure.AI.Language.Conversations.ResolutionKind Volume { get { throw null; } }
        public static Azure.AI.Language.Conversations.ResolutionKind Weight { get { throw null; } }
        public bool Equals(Azure.AI.Language.Conversations.ResolutionKind other) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Equals(object obj) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override int GetHashCode() { throw null; }
        public static bool operator ==(Azure.AI.Language.Conversations.ResolutionKind left, Azure.AI.Language.Conversations.ResolutionKind right) { throw null; }
        public static implicit operator Azure.AI.Language.Conversations.ResolutionKind (string value) { throw null; }
        public static bool operator !=(Azure.AI.Language.Conversations.ResolutionKind left, Azure.AI.Language.Conversations.ResolutionKind right) { throw null; }
        public override string ToString() { throw null; }
    }
    public partial class SpeedResolution : Azure.AI.Language.Conversations.BaseResolution
    {
        internal SpeedResolution() { }
        public Azure.AI.Language.Conversations.SpeedUnit Unit { get { throw null; } }
        public double Value { get { throw null; } }
    }
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public readonly partial struct SpeedUnit : System.IEquatable<Azure.AI.Language.Conversations.SpeedUnit>
    {
        private readonly object _dummy;
        private readonly int _dummyPrimitive;
        public SpeedUnit(string value) { throw null; }
        public static Azure.AI.Language.Conversations.SpeedUnit CentimetersPerMillisecond { get { throw null; } }
        public static Azure.AI.Language.Conversations.SpeedUnit FootPerMinute { get { throw null; } }
        public static Azure.AI.Language.Conversations.SpeedUnit FootPerSecond { get { throw null; } }
        public static Azure.AI.Language.Conversations.SpeedUnit KilometersPerHour { get { throw null; } }
        public static Azure.AI.Language.Conversations.SpeedUnit KilometersPerMillisecond { get { throw null; } }
        public static Azure.AI.Language.Conversations.SpeedUnit KilometersPerMinute { get { throw null; } }
        public static Azure.AI.Language.Conversations.SpeedUnit KilometersPerSecond { get { throw null; } }
        public static Azure.AI.Language.Conversations.SpeedUnit Knot { get { throw null; } }
        public static Azure.AI.Language.Conversations.SpeedUnit MetersPerMillisecond { get { throw null; } }
        public static Azure.AI.Language.Conversations.SpeedUnit MetersPerSecond { get { throw null; } }
        public static Azure.AI.Language.Conversations.SpeedUnit MilesPerHour { get { throw null; } }
        public static Azure.AI.Language.Conversations.SpeedUnit Unspecified { get { throw null; } }
        public static Azure.AI.Language.Conversations.SpeedUnit YardsPerMinute { get { throw null; } }
        public static Azure.AI.Language.Conversations.SpeedUnit YardsPerSecond { get { throw null; } }
        public bool Equals(Azure.AI.Language.Conversations.SpeedUnit other) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Equals(object obj) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override int GetHashCode() { throw null; }
        public static bool operator ==(Azure.AI.Language.Conversations.SpeedUnit left, Azure.AI.Language.Conversations.SpeedUnit right) { throw null; }
        public static implicit operator Azure.AI.Language.Conversations.SpeedUnit (string value) { throw null; }
        public static bool operator !=(Azure.AI.Language.Conversations.SpeedUnit left, Azure.AI.Language.Conversations.SpeedUnit right) { throw null; }
        public override string ToString() { throw null; }
    }
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public readonly partial struct StringIndexType : System.IEquatable<Azure.AI.Language.Conversations.StringIndexType>
    {
        private readonly object _dummy;
        private readonly int _dummyPrimitive;
        public StringIndexType(string value) { throw null; }
        public static Azure.AI.Language.Conversations.StringIndexType TextElementsV8 { get { throw null; } }
        public static Azure.AI.Language.Conversations.StringIndexType UnicodeCodePoint { get { throw null; } }
        public static Azure.AI.Language.Conversations.StringIndexType Utf16CodeUnit { get { throw null; } }
        public bool Equals(Azure.AI.Language.Conversations.StringIndexType other) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Equals(object obj) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override int GetHashCode() { throw null; }
        public static bool operator ==(Azure.AI.Language.Conversations.StringIndexType left, Azure.AI.Language.Conversations.StringIndexType right) { throw null; }
        public static implicit operator Azure.AI.Language.Conversations.StringIndexType (string value) { throw null; }
        public static bool operator !=(Azure.AI.Language.Conversations.StringIndexType left, Azure.AI.Language.Conversations.StringIndexType right) { throw null; }
        public override string ToString() { throw null; }
    }
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public readonly partial struct SummaryAspect : System.IEquatable<Azure.AI.Language.Conversations.SummaryAspect>
    {
        private readonly object _dummy;
        private readonly int _dummyPrimitive;
        public SummaryAspect(string value) { throw null; }
        public static Azure.AI.Language.Conversations.SummaryAspect Issue { get { throw null; } }
        public static Azure.AI.Language.Conversations.SummaryAspect Resolution { get { throw null; } }
        public bool Equals(Azure.AI.Language.Conversations.SummaryAspect other) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Equals(object obj) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override int GetHashCode() { throw null; }
        public static bool operator ==(Azure.AI.Language.Conversations.SummaryAspect left, Azure.AI.Language.Conversations.SummaryAspect right) { throw null; }
        public static implicit operator Azure.AI.Language.Conversations.SummaryAspect (string value) { throw null; }
        public static bool operator !=(Azure.AI.Language.Conversations.SummaryAspect left, Azure.AI.Language.Conversations.SummaryAspect right) { throw null; }
        public override string ToString() { throw null; }
    }
    public partial class SummaryResult : Azure.AI.Language.Conversations.PreBuiltResult
    {
        public SummaryResult(System.Collections.Generic.IEnumerable<Azure.AI.Language.Conversations.InputError> errors, string modelVersion, System.Collections.Generic.IEnumerable<Azure.AI.Language.Conversations.SummaryResultConversationsItem> conversations) : base (default(System.Collections.Generic.IEnumerable<Azure.AI.Language.Conversations.InputError>), default(string)) { }
        public System.Collections.Generic.IList<Azure.AI.Language.Conversations.SummaryResultConversationsItem> Conversations { get { throw null; } }
    }
    public partial class SummaryResultConversationsItem : Azure.AI.Language.Conversations.ConversationsSummaryResult
    {
        public SummaryResultConversationsItem(System.Collections.Generic.IEnumerable<Azure.AI.Language.Conversations.ConversationsSummaryResultSummariesItem> summaries, string id, System.Collections.Generic.IEnumerable<Azure.AI.Language.Conversations.InputWarning> warnings) : base (default(System.Collections.Generic.IEnumerable<Azure.AI.Language.Conversations.ConversationsSummaryResultSummariesItem>)) { }
        public string Id { get { throw null; } set { } }
        public Azure.AI.Language.Conversations.ConversationStatistics Statistics { get { throw null; } set { } }
        public System.Collections.Generic.IList<Azure.AI.Language.Conversations.InputWarning> Warnings { get { throw null; } }
    }
    public partial class SummaryResultItem
    {
        public SummaryResultItem(string aspect, string text) { }
        public string Aspect { get { throw null; } set { } }
        public string Text { get { throw null; } set { } }
    }
    public partial class TargetIntentResult
    {
        internal TargetIntentResult() { }
        public string ApiVersion { get { throw null; } }
        public double Confidence { get { throw null; } }
    }
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public readonly partial struct TargetProjectKind : System.IEquatable<Azure.AI.Language.Conversations.TargetProjectKind>
    {
        private readonly object _dummy;
        private readonly int _dummyPrimitive;
        public TargetProjectKind(string value) { throw null; }
        public static Azure.AI.Language.Conversations.TargetProjectKind Conversation { get { throw null; } }
        public static Azure.AI.Language.Conversations.TargetProjectKind Luis { get { throw null; } }
        public static Azure.AI.Language.Conversations.TargetProjectKind NonLinked { get { throw null; } }
        public static Azure.AI.Language.Conversations.TargetProjectKind QuestionAnswering { get { throw null; } }
        public bool Equals(Azure.AI.Language.Conversations.TargetProjectKind other) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Equals(object obj) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override int GetHashCode() { throw null; }
        public static bool operator ==(Azure.AI.Language.Conversations.TargetProjectKind left, Azure.AI.Language.Conversations.TargetProjectKind right) { throw null; }
        public static implicit operator Azure.AI.Language.Conversations.TargetProjectKind (string value) { throw null; }
        public static bool operator !=(Azure.AI.Language.Conversations.TargetProjectKind left, Azure.AI.Language.Conversations.TargetProjectKind right) { throw null; }
        public override string ToString() { throw null; }
    }
    public partial class TaskIdentifier
    {
        public TaskIdentifier() { }
        public string TaskName { get { throw null; } set { } }
    }
    public partial class TaskParameters
    {
        public TaskParameters() { }
        public bool? LoggingOptOut { get { throw null; } set { } }
    }
    public enum TaskState
    {
        NotStarted = 0,
        Running = 1,
        Succeeded = 2,
        Failed = 3,
        Cancelled = 4,
        Cancelling = 5,
    }
    public partial class TaskStateAutoGenerated
    {
        public TaskStateAutoGenerated(System.DateTimeOffset lastUpdateDateTime, Azure.AI.Language.Conversations.TaskState status) { }
        public System.DateTimeOffset LastUpdateDateTime { get { throw null; } set { } }
        public Azure.AI.Language.Conversations.TaskState Status { get { throw null; } set { } }
    }
    public partial class TemperatureResolution : Azure.AI.Language.Conversations.BaseResolution
    {
        internal TemperatureResolution() { }
        public Azure.AI.Language.Conversations.TemperatureUnit Unit { get { throw null; } }
        public double Value { get { throw null; } }
    }
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public readonly partial struct TemperatureUnit : System.IEquatable<Azure.AI.Language.Conversations.TemperatureUnit>
    {
        private readonly object _dummy;
        private readonly int _dummyPrimitive;
        public TemperatureUnit(string value) { throw null; }
        public static Azure.AI.Language.Conversations.TemperatureUnit Celsius { get { throw null; } }
        public static Azure.AI.Language.Conversations.TemperatureUnit Fahrenheit { get { throw null; } }
        public static Azure.AI.Language.Conversations.TemperatureUnit Kelvin { get { throw null; } }
        public static Azure.AI.Language.Conversations.TemperatureUnit Rankine { get { throw null; } }
        public static Azure.AI.Language.Conversations.TemperatureUnit Unspecified { get { throw null; } }
        public bool Equals(Azure.AI.Language.Conversations.TemperatureUnit other) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Equals(object obj) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override int GetHashCode() { throw null; }
        public static bool operator ==(Azure.AI.Language.Conversations.TemperatureUnit left, Azure.AI.Language.Conversations.TemperatureUnit right) { throw null; }
        public static implicit operator Azure.AI.Language.Conversations.TemperatureUnit (string value) { throw null; }
        public static bool operator !=(Azure.AI.Language.Conversations.TemperatureUnit left, Azure.AI.Language.Conversations.TemperatureUnit right) { throw null; }
        public override string ToString() { throw null; }
    }
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public readonly partial struct TemporalModifier : System.IEquatable<Azure.AI.Language.Conversations.TemporalModifier>
    {
        private readonly object _dummy;
        private readonly int _dummyPrimitive;
        public TemporalModifier(string value) { throw null; }
        public static Azure.AI.Language.Conversations.TemporalModifier After { get { throw null; } }
        public static Azure.AI.Language.Conversations.TemporalModifier AfterApprox { get { throw null; } }
        public static Azure.AI.Language.Conversations.TemporalModifier AfterMid { get { throw null; } }
        public static Azure.AI.Language.Conversations.TemporalModifier AfterStart { get { throw null; } }
        public static Azure.AI.Language.Conversations.TemporalModifier Approx { get { throw null; } }
        public static Azure.AI.Language.Conversations.TemporalModifier Before { get { throw null; } }
        public static Azure.AI.Language.Conversations.TemporalModifier BeforeApprox { get { throw null; } }
        public static Azure.AI.Language.Conversations.TemporalModifier BeforeEnd { get { throw null; } }
        public static Azure.AI.Language.Conversations.TemporalModifier BeforeStart { get { throw null; } }
        public static Azure.AI.Language.Conversations.TemporalModifier End { get { throw null; } }
        public static Azure.AI.Language.Conversations.TemporalModifier Less { get { throw null; } }
        public static Azure.AI.Language.Conversations.TemporalModifier Mid { get { throw null; } }
        public static Azure.AI.Language.Conversations.TemporalModifier More { get { throw null; } }
        public static Azure.AI.Language.Conversations.TemporalModifier ReferenceUndefined { get { throw null; } }
        public static Azure.AI.Language.Conversations.TemporalModifier Since { get { throw null; } }
        public static Azure.AI.Language.Conversations.TemporalModifier SinceEnd { get { throw null; } }
        public static Azure.AI.Language.Conversations.TemporalModifier Start { get { throw null; } }
        public static Azure.AI.Language.Conversations.TemporalModifier Until { get { throw null; } }
        public bool Equals(Azure.AI.Language.Conversations.TemporalModifier other) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Equals(object obj) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override int GetHashCode() { throw null; }
        public static bool operator ==(Azure.AI.Language.Conversations.TemporalModifier left, Azure.AI.Language.Conversations.TemporalModifier right) { throw null; }
        public static implicit operator Azure.AI.Language.Conversations.TemporalModifier (string value) { throw null; }
        public static bool operator !=(Azure.AI.Language.Conversations.TemporalModifier left, Azure.AI.Language.Conversations.TemporalModifier right) { throw null; }
        public override string ToString() { throw null; }
    }
    public partial class TemporalSpanResolution : Azure.AI.Language.Conversations.BaseResolution
    {
        internal TemporalSpanResolution() { }
        public string Begin { get { throw null; } }
        public string Duration { get { throw null; } }
        public string End { get { throw null; } }
        public Azure.AI.Language.Conversations.TemporalModifier? Modifier { get { throw null; } }
    }
    public partial class TextConversation : Azure.AI.Language.Conversations.Models.GeneratedConversation
    {
        public TextConversation(string id, string language, System.Collections.Generic.IEnumerable<Azure.AI.Language.Conversations.TextConversationItem> conversationItems) : base (default(string), default(string)) { }
        public System.Collections.Generic.IList<Azure.AI.Language.Conversations.TextConversationItem> ConversationItems { get { throw null; } }
    }
    public partial class TextConversationItem : Azure.AI.Language.Conversations.ConversationItemBase
    {
        public TextConversationItem(string id, string participantId, string text) : base (default(string), default(string)) { }
        public string Text { get { throw null; } }
    }
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public readonly partial struct TranscriptContentType : System.IEquatable<Azure.AI.Language.Conversations.TranscriptContentType>
    {
        private readonly object _dummy;
        private readonly int _dummyPrimitive;
        public TranscriptContentType(string value) { throw null; }
        public static Azure.AI.Language.Conversations.TranscriptContentType Itn { get { throw null; } }
        public static Azure.AI.Language.Conversations.TranscriptContentType Lexical { get { throw null; } }
        public static Azure.AI.Language.Conversations.TranscriptContentType MaskedItn { get { throw null; } }
        public static Azure.AI.Language.Conversations.TranscriptContentType Text { get { throw null; } }
        public bool Equals(Azure.AI.Language.Conversations.TranscriptContentType other) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Equals(object obj) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override int GetHashCode() { throw null; }
        public static bool operator ==(Azure.AI.Language.Conversations.TranscriptContentType left, Azure.AI.Language.Conversations.TranscriptContentType right) { throw null; }
        public static implicit operator Azure.AI.Language.Conversations.TranscriptContentType (string value) { throw null; }
        public static bool operator !=(Azure.AI.Language.Conversations.TranscriptContentType left, Azure.AI.Language.Conversations.TranscriptContentType right) { throw null; }
        public override string ToString() { throw null; }
    }
    public partial class TranscriptConversation : Azure.AI.Language.Conversations.Models.GeneratedConversation
    {
        public TranscriptConversation(string id, string language, System.Collections.Generic.IEnumerable<Azure.AI.Language.Conversations.TranscriptConversationItem> conversationItems) : base (default(string), default(string)) { }
        public System.Collections.Generic.IList<Azure.AI.Language.Conversations.TranscriptConversationItem> ConversationItems { get { throw null; } }
    }
    public partial class TranscriptConversationItem : Azure.AI.Language.Conversations.ConversationItemBase
    {
        public TranscriptConversationItem(string id, string participantId, string itn, string maskedItn, string text, string lexical) : base (default(string), default(string)) { }
        public System.Collections.Generic.IList<Azure.AI.Language.Conversations.WordLevelTiming> AudioTimings { get { throw null; } }
        public string Itn { get { throw null; } }
        public string Lexical { get { throw null; } }
        public string MaskedItn { get { throw null; } }
        public string Text { get { throw null; } }
    }
    public partial class VolumeResolution : Azure.AI.Language.Conversations.BaseResolution
    {
        internal VolumeResolution() { }
        public Azure.AI.Language.Conversations.VolumeUnit Unit { get { throw null; } }
        public double Value { get { throw null; } }
    }
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public readonly partial struct VolumeUnit : System.IEquatable<Azure.AI.Language.Conversations.VolumeUnit>
    {
        private readonly object _dummy;
        private readonly int _dummyPrimitive;
        public VolumeUnit(string value) { throw null; }
        public static Azure.AI.Language.Conversations.VolumeUnit Barrel { get { throw null; } }
        public static Azure.AI.Language.Conversations.VolumeUnit Bushel { get { throw null; } }
        public static Azure.AI.Language.Conversations.VolumeUnit Centiliter { get { throw null; } }
        public static Azure.AI.Language.Conversations.VolumeUnit Cord { get { throw null; } }
        public static Azure.AI.Language.Conversations.VolumeUnit CubicCentimeter { get { throw null; } }
        public static Azure.AI.Language.Conversations.VolumeUnit CubicFoot { get { throw null; } }
        public static Azure.AI.Language.Conversations.VolumeUnit CubicInch { get { throw null; } }
        public static Azure.AI.Language.Conversations.VolumeUnit CubicMeter { get { throw null; } }
        public static Azure.AI.Language.Conversations.VolumeUnit CubicMile { get { throw null; } }
        public static Azure.AI.Language.Conversations.VolumeUnit CubicMillimeter { get { throw null; } }
        public static Azure.AI.Language.Conversations.VolumeUnit CubicYard { get { throw null; } }
        public static Azure.AI.Language.Conversations.VolumeUnit Cup { get { throw null; } }
        public static Azure.AI.Language.Conversations.VolumeUnit Decaliter { get { throw null; } }
        public static Azure.AI.Language.Conversations.VolumeUnit FluidDram { get { throw null; } }
        public static Azure.AI.Language.Conversations.VolumeUnit FluidOunce { get { throw null; } }
        public static Azure.AI.Language.Conversations.VolumeUnit Gill { get { throw null; } }
        public static Azure.AI.Language.Conversations.VolumeUnit Hectoliter { get { throw null; } }
        public static Azure.AI.Language.Conversations.VolumeUnit Hogshead { get { throw null; } }
        public static Azure.AI.Language.Conversations.VolumeUnit Liter { get { throw null; } }
        public static Azure.AI.Language.Conversations.VolumeUnit Milliliter { get { throw null; } }
        public static Azure.AI.Language.Conversations.VolumeUnit Minim { get { throw null; } }
        public static Azure.AI.Language.Conversations.VolumeUnit Peck { get { throw null; } }
        public static Azure.AI.Language.Conversations.VolumeUnit Pinch { get { throw null; } }
        public static Azure.AI.Language.Conversations.VolumeUnit Pint { get { throw null; } }
        public static Azure.AI.Language.Conversations.VolumeUnit Quart { get { throw null; } }
        public static Azure.AI.Language.Conversations.VolumeUnit Tablespoon { get { throw null; } }
        public static Azure.AI.Language.Conversations.VolumeUnit Teaspoon { get { throw null; } }
        public static Azure.AI.Language.Conversations.VolumeUnit Unspecified { get { throw null; } }
        public bool Equals(Azure.AI.Language.Conversations.VolumeUnit other) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Equals(object obj) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override int GetHashCode() { throw null; }
        public static bool operator ==(Azure.AI.Language.Conversations.VolumeUnit left, Azure.AI.Language.Conversations.VolumeUnit right) { throw null; }
        public static implicit operator Azure.AI.Language.Conversations.VolumeUnit (string value) { throw null; }
        public static bool operator !=(Azure.AI.Language.Conversations.VolumeUnit left, Azure.AI.Language.Conversations.VolumeUnit right) { throw null; }
        public override string ToString() { throw null; }
    }
    public partial class WeightResolution : Azure.AI.Language.Conversations.BaseResolution
    {
        internal WeightResolution() { }
        public Azure.AI.Language.Conversations.WeightUnit Unit { get { throw null; } }
        public double Value { get { throw null; } }
    }
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public readonly partial struct WeightUnit : System.IEquatable<Azure.AI.Language.Conversations.WeightUnit>
    {
        private readonly object _dummy;
        private readonly int _dummyPrimitive;
        public WeightUnit(string value) { throw null; }
        public static Azure.AI.Language.Conversations.WeightUnit Dram { get { throw null; } }
        public static Azure.AI.Language.Conversations.WeightUnit Gallon { get { throw null; } }
        public static Azure.AI.Language.Conversations.WeightUnit Grain { get { throw null; } }
        public static Azure.AI.Language.Conversations.WeightUnit Gram { get { throw null; } }
        public static Azure.AI.Language.Conversations.WeightUnit Kilogram { get { throw null; } }
        public static Azure.AI.Language.Conversations.WeightUnit LongTonBritish { get { throw null; } }
        public static Azure.AI.Language.Conversations.WeightUnit MetricTon { get { throw null; } }
        public static Azure.AI.Language.Conversations.WeightUnit Milligram { get { throw null; } }
        public static Azure.AI.Language.Conversations.WeightUnit Ounce { get { throw null; } }
        public static Azure.AI.Language.Conversations.WeightUnit PennyWeight { get { throw null; } }
        public static Azure.AI.Language.Conversations.WeightUnit Pound { get { throw null; } }
        public static Azure.AI.Language.Conversations.WeightUnit ShortHundredWeightUS { get { throw null; } }
        public static Azure.AI.Language.Conversations.WeightUnit ShortTonUS { get { throw null; } }
        public static Azure.AI.Language.Conversations.WeightUnit Stone { get { throw null; } }
        public static Azure.AI.Language.Conversations.WeightUnit Ton { get { throw null; } }
        public static Azure.AI.Language.Conversations.WeightUnit Unspecified { get { throw null; } }
        public bool Equals(Azure.AI.Language.Conversations.WeightUnit other) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override bool Equals(object obj) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public override int GetHashCode() { throw null; }
        public static bool operator ==(Azure.AI.Language.Conversations.WeightUnit left, Azure.AI.Language.Conversations.WeightUnit right) { throw null; }
        public static implicit operator Azure.AI.Language.Conversations.WeightUnit (string value) { throw null; }
        public static bool operator !=(Azure.AI.Language.Conversations.WeightUnit left, Azure.AI.Language.Conversations.WeightUnit right) { throw null; }
        public override string ToString() { throw null; }
    }
    public partial class WordLevelTiming : Azure.AI.Language.Conversations.AudioTiming
    {
        public WordLevelTiming() { }
        public string Word { get { throw null; } set { } }
    }
}
namespace Azure.AI.Language.Conversations.Models
{
    public partial class GeneratedConversation
    {
        public GeneratedConversation(string id, string language) { }
        public Azure.AI.Language.Conversations.ConversationDomain? Domain { get { throw null; } set { } }
        public string Id { get { throw null; } }
        public string Language { get { throw null; } }
    }
    public partial class GeneratedEntity
    {
        public GeneratedEntity(string text, string category, int offset, int length, double confidenceScore) { }
        public string Category { get { throw null; } set { } }
        public double ConfidenceScore { get { throw null; } set { } }
        public int Length { get { throw null; } set { } }
        public int Offset { get { throw null; } set { } }
        public string Subcategory { get { throw null; } set { } }
        public string Text { get { throw null; } set { } }
    }
    public partial class GeneratedError
    {
        public GeneratedError(Azure.AI.Language.Conversations.ErrorCode code, string message) { }
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties { get { throw null; } }
        public Azure.AI.Language.Conversations.ErrorCode Code { get { throw null; } set { } }
        public System.Collections.Generic.IList<Azure.AI.Language.Conversations.Models.GeneratedError> Details { get { throw null; } }
        public Azure.AI.Language.Conversations.InnerErrorModel Innererror { get { throw null; } set { } }
        public string Message { get { throw null; } set { } }
        public string Target { get { throw null; } set { } }
    }
}
namespace Microsoft.Extensions.Azure
{
    public static partial class ConversationAnalysisClientExtensions
    {
        public static Azure.Core.Extensions.IAzureClientBuilder<Azure.AI.Language.Conversations.ConversationAnalysisClient, Azure.AI.Language.Conversations.ConversationAnalysisClientOptions> AddConversationAnalysisClient<TBuilder>(this TBuilder builder, System.Uri endpoint, Azure.AzureKeyCredential credential) where TBuilder : Azure.Core.Extensions.IAzureClientFactoryBuilder { throw null; }
        public static Azure.Core.Extensions.IAzureClientBuilder<Azure.AI.Language.Conversations.ConversationAnalysisClient, Azure.AI.Language.Conversations.ConversationAnalysisClientOptions> AddConversationAnalysisClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration) where TBuilder : Azure.Core.Extensions.IAzureClientFactoryBuilderWithConfiguration<TConfiguration> { throw null; }
    }
}
