// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.AI.Language.Conversations
{
    /// <summary> The ConversationPIIItemResult. </summary>
    public partial class ConversationPIIItemResult
    {
        /// <summary> Initializes a new instance of ConversationPIIItemResult. </summary>
        /// <param name="id"></param>
        /// <param name="redactedContent"> The transcript content response generated by the service with all necessary personally identifiable information redacted. </param>
        /// <param name="entities"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/>, <paramref name="redactedContent"/> or <paramref name="entities"/> is null. </exception>
        public ConversationPIIItemResult(string id, RedactedTranscriptContent redactedContent, IEnumerable<Entity> entities)
        {
            Argument.AssertNotNull(id, nameof(id));
            Argument.AssertNotNull(redactedContent, nameof(redactedContent));
            Argument.AssertNotNull(entities, nameof(entities));

            Id = id;
            RedactedContent = redactedContent;
            Entities = entities.ToList();
        }

        /// <summary> Initializes a new instance of ConversationPIIItemResult. </summary>
        /// <param name="id"></param>
        /// <param name="redactedContent"> The transcript content response generated by the service with all necessary personally identifiable information redacted. </param>
        /// <param name="entities"></param>
        internal ConversationPIIItemResult(string id, RedactedTranscriptContent redactedContent, IList<Entity> entities)
        {
            Id = id;
            RedactedContent = redactedContent;
            Entities = entities;
        }

        /// <summary> Gets or sets the id. </summary>
        public string Id { get; set; }
        /// <summary> The transcript content response generated by the service with all necessary personally identifiable information redacted. </summary>
        public RedactedTranscriptContent RedactedContent { get; set; }
        /// <summary> Gets the entities. </summary>
        public IList<Entity> Entities { get; }
    }
}
