// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.AI.Language.Conversations
{
    /// <summary> The transcript content response generated by the service with all necessary personally identifiable information redacted. </summary>
    public partial class RedactedTranscriptContent
    {
        /// <summary> Initializes a new instance of RedactedTranscriptContent. </summary>
        public RedactedTranscriptContent()
        {
            AudioTimings = new ChangeTrackingList<AudioTiming>();
        }

        /// <summary> Initializes a new instance of RedactedTranscriptContent. </summary>
        /// <param name="itn"> The redacted output for inverse text normalized format input. </param>
        /// <param name="maskedItn"> The redacted output for masked inverse text normalized format input. </param>
        /// <param name="text"> The redacted output for text (Microsoft&apos;s Speech to Text &apos;display&apos;) format input. </param>
        /// <param name="lexical"> The redacted output for lexical format input. </param>
        /// <param name="audioTimings"> The list of redacted audio segments. </param>
        internal RedactedTranscriptContent(string itn, string maskedItn, string text, string lexical, IList<AudioTiming> audioTimings)
        {
            Itn = itn;
            MaskedItn = maskedItn;
            Text = text;
            Lexical = lexical;
            AudioTimings = audioTimings;
        }

        /// <summary> The redacted output for inverse text normalized format input. </summary>
        public string Itn { get; set; }
        /// <summary> The redacted output for masked inverse text normalized format input. </summary>
        public string MaskedItn { get; set; }
        /// <summary> The redacted output for text (Microsoft&apos;s Speech to Text &apos;display&apos;) format input. </summary>
        public string Text { get; set; }
        /// <summary> The redacted output for lexical format input. </summary>
        public string Lexical { get; set; }
        /// <summary> The list of redacted audio segments. </summary>
        public IList<AudioTiming> AudioTimings { get; }
    }
}
