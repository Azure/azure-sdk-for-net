// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.AI.Language.Conversations
{
    /// <summary> Supported parameters for an conversational summarization task. </summary>
    public partial class ConversationSummarizationTaskParameters : PreBuiltTaskParameters
    {
        /// <summary> Initializes a new instance of ConversationSummarizationTaskParameters. </summary>
        /// <param name="summaryAspects"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="summaryAspects"/> is null. </exception>
        public ConversationSummarizationTaskParameters(IEnumerable<SummaryAspect> summaryAspects)
        {
            if (summaryAspects == null)
            {
                throw new ArgumentNullException(nameof(summaryAspects));
            }

            SummaryAspects = summaryAspects.ToList();
        }

        /// <summary> Initializes a new instance of ConversationSummarizationTaskParameters. </summary>
        /// <param name="loggingOptOut"></param>
        /// <param name="modelVersion"></param>
        /// <param name="summaryAspects"></param>
        internal ConversationSummarizationTaskParameters(bool? loggingOptOut, string modelVersion, IList<SummaryAspect> summaryAspects) : base(loggingOptOut, modelVersion)
        {
            SummaryAspects = summaryAspects;
        }

        /// <summary> Gets the summary aspects. </summary>
        public IList<SummaryAspect> SummaryAspects { get; }
    }
}
