// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.AI.Language.Conversations
{
    public partial class TargetIntentResult
    {
        internal static TargetIntentResult DeserializeTargetIntentResult(JsonElement element)
        {
            if (element.TryGetProperty("targetKind", out JsonElement discriminator))
            {
                switch (discriminator.GetString())
                {
                    case "conversation": return ConversationTargetIntentResult.DeserializeConversationTargetIntentResult(element);
                    case "luis": return LuisTargetIntentResult.DeserializeLuisTargetIntentResult(element);
                    case "non_linked": return NoneLinkedTargetIntentResult.DeserializeNoneLinkedTargetIntentResult(element);
                    case "question_answering": return QuestionAnsweringTargetIntentResult.DeserializeQuestionAnsweringTargetIntentResult(element);
                }
            }
            TargetKind targetKind = default;
            Optional<string> apiVersion = default;
            double confidenceScore = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("targetKind"))
                {
                    targetKind = new TargetKind(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("apiVersion"))
                {
                    apiVersion = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("confidenceScore"))
                {
                    confidenceScore = property.Value.GetDouble();
                    continue;
                }
            }
            return new TargetIntentResult(targetKind, apiVersion.Value, confidenceScore);
        }
    }
}
