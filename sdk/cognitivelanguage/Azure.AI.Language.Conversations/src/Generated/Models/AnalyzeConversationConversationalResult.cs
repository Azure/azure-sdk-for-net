// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Language.Conversations.Models
{
    /// <summary> The results of a Conversation task. </summary>
    public partial class AnalyzeConversationConversationalResult : AnalyzeConversationResult
    {
        /// <summary> Initializes a new instance of <see cref="AnalyzeConversationConversationalResult"/>. </summary>
        /// <param name="result">
        /// Represents a conversation analysis response.
        /// Please note <see cref="AnalyzeConversationResult"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="AnalyzeConversationConversationalResult"/>.
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="result"/> is null. </exception>
        internal AnalyzeConversationConversationalResult(AnalyzeConversationResult result)
        {
            Argument.AssertNotNull(result, nameof(result));

            Kind = AnalyzeConversationResultKind.ConversationResult;
            Result = result;
        }

        /// <summary> Initializes a new instance of <see cref="AnalyzeConversationConversationalResult"/>. </summary>
        /// <param name="kind"> The base class of a conversation input task result. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="result">
        /// Represents a conversation analysis response.
        /// Please note <see cref="AnalyzeConversationResult"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="AnalyzeConversationConversationalResult"/>.
        /// </param>
        internal AnalyzeConversationConversationalResult(AnalyzeConversationResultKind kind, IDictionary<string, BinaryData> serializedAdditionalRawData, AnalyzeConversationResult result) : base(kind, serializedAdditionalRawData)
        {
            Result = result;
        }

        /// <summary> Initializes a new instance of <see cref="AnalyzeConversationConversationalResult"/> for deserialization. </summary>
        internal AnalyzeConversationConversationalResult()
        {
        }

        /// <summary>
        /// Represents a conversation analysis response.
        /// Please note <see cref="AnalyzeConversationResult"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="AnalyzeConversationConversationalResult"/>.
        /// </summary>
        public AnalyzeConversationResult Result { get; }
    }
}
