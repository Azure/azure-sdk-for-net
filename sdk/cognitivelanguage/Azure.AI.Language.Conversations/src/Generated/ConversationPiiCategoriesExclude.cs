// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.AI.Language.Conversations
{
    /// <summary> Describes the PII categories to exclude for detection. If not provided, 'default' categories will be returned which will vary with the language. </summary>
    public readonly partial struct ConversationPiiCategoriesExclude : IEquatable<ConversationPiiCategoriesExclude>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="ConversationPiiCategoriesExclude"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ConversationPiiCategoriesExclude(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string AddressValue = "Address";
        private const string CreditCardNumberValue = "CreditCardNumber";
        private const string EmailValue = "Email";
        private const string PersonValue = "Person";
        private const string NumericIdentifierValue = "NumericIdentifier";
        private const string PhoneNumberValue = "PhoneNumber";
        private const string USSocialSecurityNumberValue = "USSocialSecurityNumber";

        /// <summary> Address category. </summary>
        public static ConversationPiiCategoriesExclude Address { get; } = new ConversationPiiCategoriesExclude(AddressValue);
        /// <summary> Credit card number category. </summary>
        public static ConversationPiiCategoriesExclude CreditCardNumber { get; } = new ConversationPiiCategoriesExclude(CreditCardNumberValue);
        /// <summary> Email category. </summary>
        public static ConversationPiiCategoriesExclude Email { get; } = new ConversationPiiCategoriesExclude(EmailValue);
        /// <summary> Person category. </summary>
        public static ConversationPiiCategoriesExclude Person { get; } = new ConversationPiiCategoriesExclude(PersonValue);
        /// <summary> Numeric identifier category. </summary>
        public static ConversationPiiCategoriesExclude NumericIdentifier { get; } = new ConversationPiiCategoriesExclude(NumericIdentifierValue);
        /// <summary> Phone number category. </summary>
        public static ConversationPiiCategoriesExclude PhoneNumber { get; } = new ConversationPiiCategoriesExclude(PhoneNumberValue);
        /// <summary> US social security number category. </summary>
        public static ConversationPiiCategoriesExclude USSocialSecurityNumber { get; } = new ConversationPiiCategoriesExclude(USSocialSecurityNumberValue);
        /// <summary> Determines if two <see cref="ConversationPiiCategoriesExclude"/> values are the same. </summary>
        public static bool operator ==(ConversationPiiCategoriesExclude left, ConversationPiiCategoriesExclude right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ConversationPiiCategoriesExclude"/> values are not the same. </summary>
        public static bool operator !=(ConversationPiiCategoriesExclude left, ConversationPiiCategoriesExclude right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="ConversationPiiCategoriesExclude"/>. </summary>
        public static implicit operator ConversationPiiCategoriesExclude(string value) => new ConversationPiiCategoriesExclude(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ConversationPiiCategoriesExclude other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ConversationPiiCategoriesExclude other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
