// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.AI.Language.Conversations
{
    internal static partial class TaskStateExtensions
    {
        public static string ToSerialString(this TaskState value) => value switch
        {
            TaskState.NotStarted => "notStarted",
            TaskState.Running => "running",
            TaskState.Succeeded => "succeeded",
            TaskState.Failed => "failed",
            TaskState.Cancelled => "cancelled",
            TaskState.Cancelling => "cancelling",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown TaskState value.")
        };

        public static TaskState ToTaskState(this string value)
        {
            if (string.Equals(value, "notStarted", StringComparison.InvariantCultureIgnoreCase)) return TaskState.NotStarted;
            if (string.Equals(value, "running", StringComparison.InvariantCultureIgnoreCase)) return TaskState.Running;
            if (string.Equals(value, "succeeded", StringComparison.InvariantCultureIgnoreCase)) return TaskState.Succeeded;
            if (string.Equals(value, "failed", StringComparison.InvariantCultureIgnoreCase)) return TaskState.Failed;
            if (string.Equals(value, "cancelled", StringComparison.InvariantCultureIgnoreCase)) return TaskState.Cancelled;
            if (string.Equals(value, "cancelling", StringComparison.InvariantCultureIgnoreCase)) return TaskState.Cancelling;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown TaskState value.");
        }
    }
}
