// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Language.Conversations.Authoring.Models
{
    /// <summary> Represents metadata for the Azure resource.. </summary>
    public partial class ResourceMetadata
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ResourceMetadata"/>. </summary>
        /// <param name="azureResourceId"> Represents the Azure resource ID. </param>
        /// <param name="customDomain"> Represents the Azure resource custom domain. </param>
        /// <param name="region"> Represents the Azure resource region. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="azureResourceId"/>, <paramref name="customDomain"/> or <paramref name="region"/> is null. </exception>
        public ResourceMetadata(string azureResourceId, string customDomain, string region)
        {
            Argument.AssertNotNull(azureResourceId, nameof(azureResourceId));
            Argument.AssertNotNull(customDomain, nameof(customDomain));
            Argument.AssertNotNull(region, nameof(region));

            AzureResourceId = azureResourceId;
            CustomDomain = customDomain;
            Region = region;
        }

        /// <summary> Initializes a new instance of <see cref="ResourceMetadata"/>. </summary>
        /// <param name="azureResourceId"> Represents the Azure resource ID. </param>
        /// <param name="customDomain"> Represents the Azure resource custom domain. </param>
        /// <param name="region"> Represents the Azure resource region. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ResourceMetadata(string azureResourceId, string customDomain, string region, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            AzureResourceId = azureResourceId;
            CustomDomain = customDomain;
            Region = region;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="ResourceMetadata"/> for deserialization. </summary>
        internal ResourceMetadata()
        {
        }

        /// <summary> Represents the Azure resource ID. </summary>
        public string AzureResourceId { get; }
        /// <summary> Represents the Azure resource custom domain. </summary>
        public string CustomDomain { get; }
        /// <summary> Represents the Azure resource region. </summary>
        public string Region { get; }
    }
}
