// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Language.Conversations.Authoring.Models
{
    /// <summary>
    /// Represents the options for copying an existing project to another Azure
    /// resource.
    /// </summary>
    public partial class CopyProjectConfig
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="CopyProjectConfig"/>. </summary>
        /// <param name="projectKind"> Represents the project kind. </param>
        /// <param name="targetProjectName"> The project name to be copied-into. </param>
        /// <param name="accessToken"> The access token. </param>
        /// <param name="expiresAt"> The expiration of the access token. </param>
        /// <param name="targetResourceId"> Represents the target Azure resource ID. </param>
        /// <param name="targetResourceRegion"> Represents the target Azure resource region. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="targetProjectName"/>, <paramref name="accessToken"/>, <paramref name="targetResourceId"/> or <paramref name="targetResourceRegion"/> is null. </exception>
        public CopyProjectConfig(ProjectKind projectKind, string targetProjectName, string accessToken, DateTimeOffset expiresAt, string targetResourceId, string targetResourceRegion)
        {
            Argument.AssertNotNull(targetProjectName, nameof(targetProjectName));
            Argument.AssertNotNull(accessToken, nameof(accessToken));
            Argument.AssertNotNull(targetResourceId, nameof(targetResourceId));
            Argument.AssertNotNull(targetResourceRegion, nameof(targetResourceRegion));

            ProjectKind = projectKind;
            TargetProjectName = targetProjectName;
            AccessToken = accessToken;
            ExpiresAt = expiresAt;
            TargetResourceId = targetResourceId;
            TargetResourceRegion = targetResourceRegion;
        }

        /// <summary> Initializes a new instance of <see cref="CopyProjectConfig"/>. </summary>
        /// <param name="projectKind"> Represents the project kind. </param>
        /// <param name="targetProjectName"> The project name to be copied-into. </param>
        /// <param name="accessToken"> The access token. </param>
        /// <param name="expiresAt"> The expiration of the access token. </param>
        /// <param name="targetResourceId"> Represents the target Azure resource ID. </param>
        /// <param name="targetResourceRegion"> Represents the target Azure resource region. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal CopyProjectConfig(ProjectKind projectKind, string targetProjectName, string accessToken, DateTimeOffset expiresAt, string targetResourceId, string targetResourceRegion, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            ProjectKind = projectKind;
            TargetProjectName = targetProjectName;
            AccessToken = accessToken;
            ExpiresAt = expiresAt;
            TargetResourceId = targetResourceId;
            TargetResourceRegion = targetResourceRegion;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="CopyProjectConfig"/> for deserialization. </summary>
        internal CopyProjectConfig()
        {
        }

        /// <summary> Represents the project kind. </summary>
        public ProjectKind ProjectKind { get; set; }
        /// <summary> The project name to be copied-into. </summary>
        public string TargetProjectName { get; set; }
        /// <summary> The access token. </summary>
        public string AccessToken { get; set; }
        /// <summary> The expiration of the access token. </summary>
        public DateTimeOffset ExpiresAt { get; set; }
        /// <summary> Represents the target Azure resource ID. </summary>
        public string TargetResourceId { get; set; }
        /// <summary> Represents the target Azure resource region. </summary>
        public string TargetResourceRegion { get; set; }
    }
}
