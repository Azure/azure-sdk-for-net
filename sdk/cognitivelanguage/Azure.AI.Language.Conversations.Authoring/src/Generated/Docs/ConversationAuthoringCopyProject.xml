<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="CopyProjectAuthorizationAsync(string,AnalyzeConversationAuthoringProjectKind,string,bool?,CancellationToken)">
      <example>
This sample shows how to call CopyProjectAuthorizationAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringCopyProject client = new ConversationAnalysisAuthoringClient(endpoint, credential).GetConversationAuthoringCopyProjectClient(apiVersion: "2024-11-15-preview");

Response<CopyProjectDetails> response = await client.CopyProjectAuthorizationAsync("<projectName>", AnalyzeConversationAuthoringProjectKind.Conversation);
]]></code>
This sample shows how to call CopyProjectAuthorizationAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringCopyProject client = new ConversationAnalysisAuthoringClient(endpoint, credential).GetConversationAuthoringCopyProjectClient(apiVersion: "2024-11-15-preview");

Response<CopyProjectDetails> response = await client.CopyProjectAuthorizationAsync("<projectName>", AnalyzeConversationAuthoringProjectKind.Conversation, storageInputContainerName: "<storageInputContainerName>", allowOverwrite: true);
]]></code></example>
    </member>
    <member name="CopyProjectAuthorization(string,AnalyzeConversationAuthoringProjectKind,string,bool?,CancellationToken)">
      <example>
This sample shows how to call CopyProjectAuthorization.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringCopyProject client = new ConversationAnalysisAuthoringClient(endpoint, credential).GetConversationAuthoringCopyProjectClient(apiVersion: "2024-11-15-preview");

Response<CopyProjectDetails> response = client.CopyProjectAuthorization("<projectName>", AnalyzeConversationAuthoringProjectKind.Conversation);
]]></code>
This sample shows how to call CopyProjectAuthorization with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringCopyProject client = new ConversationAnalysisAuthoringClient(endpoint, credential).GetConversationAuthoringCopyProjectClient(apiVersion: "2024-11-15-preview");

Response<CopyProjectDetails> response = client.CopyProjectAuthorization("<projectName>", AnalyzeConversationAuthoringProjectKind.Conversation, storageInputContainerName: "<storageInputContainerName>", allowOverwrite: true);
]]></code></example>
    </member>
    <member name="CopyProjectAuthorizationAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CopyProjectAuthorizationAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringCopyProject client = new ConversationAnalysisAuthoringClient(endpoint, credential).GetConversationAuthoringCopyProjectClient(apiVersion: "2024-11-15-preview");

using RequestContent content = RequestContent.Create(new
{
    projectKind = "Conversation",
});
Response response = await client.CopyProjectAuthorizationAsync("<projectName>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("projectKind").ToString());
Console.WriteLine(result.GetProperty("targetProjectName").ToString());
Console.WriteLine(result.GetProperty("accessToken").ToString());
Console.WriteLine(result.GetProperty("expiresAt").ToString());
Console.WriteLine(result.GetProperty("targetResourceId").ToString());
Console.WriteLine(result.GetProperty("targetResourceRegion").ToString());
]]></code>
This sample shows how to call CopyProjectAuthorizationAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringCopyProject client = new ConversationAnalysisAuthoringClient(endpoint, credential).GetConversationAuthoringCopyProjectClient(apiVersion: "2024-11-15-preview");

using RequestContent content = RequestContent.Create(new
{
    projectKind = "Conversation",
    storageInputContainerName = "<storageInputContainerName>",
    allowOverwrite = true,
});
Response response = await client.CopyProjectAuthorizationAsync("<projectName>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("projectKind").ToString());
Console.WriteLine(result.GetProperty("targetProjectName").ToString());
Console.WriteLine(result.GetProperty("accessToken").ToString());
Console.WriteLine(result.GetProperty("expiresAt").ToString());
Console.WriteLine(result.GetProperty("targetResourceId").ToString());
Console.WriteLine(result.GetProperty("targetResourceRegion").ToString());
]]></code></example>
    </member>
    <member name="CopyProjectAuthorization(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CopyProjectAuthorization and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringCopyProject client = new ConversationAnalysisAuthoringClient(endpoint, credential).GetConversationAuthoringCopyProjectClient(apiVersion: "2024-11-15-preview");

using RequestContent content = RequestContent.Create(new
{
    projectKind = "Conversation",
});
Response response = client.CopyProjectAuthorization("<projectName>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("projectKind").ToString());
Console.WriteLine(result.GetProperty("targetProjectName").ToString());
Console.WriteLine(result.GetProperty("accessToken").ToString());
Console.WriteLine(result.GetProperty("expiresAt").ToString());
Console.WriteLine(result.GetProperty("targetResourceId").ToString());
Console.WriteLine(result.GetProperty("targetResourceRegion").ToString());
]]></code>
This sample shows how to call CopyProjectAuthorization with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringCopyProject client = new ConversationAnalysisAuthoringClient(endpoint, credential).GetConversationAuthoringCopyProjectClient(apiVersion: "2024-11-15-preview");

using RequestContent content = RequestContent.Create(new
{
    projectKind = "Conversation",
    storageInputContainerName = "<storageInputContainerName>",
    allowOverwrite = true,
});
Response response = client.CopyProjectAuthorization("<projectName>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("projectKind").ToString());
Console.WriteLine(result.GetProperty("targetProjectName").ToString());
Console.WriteLine(result.GetProperty("accessToken").ToString());
Console.WriteLine(result.GetProperty("expiresAt").ToString());
Console.WriteLine(result.GetProperty("targetResourceId").ToString());
Console.WriteLine(result.GetProperty("targetResourceRegion").ToString());
]]></code></example>
    </member>
    <member name="GetCopyProjectStatusAsync(string,string,CancellationToken)">
      <example>
This sample shows how to call GetCopyProjectStatusAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringCopyProject client = new ConversationAnalysisAuthoringClient(endpoint, credential).GetConversationAuthoringCopyProjectClient(apiVersion: "2024-11-15-preview");

Response<CopyProjectJobState> response = await client.GetCopyProjectStatusAsync("<projectName>", "<jobId>");
]]></code>
This sample shows how to call GetCopyProjectStatusAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringCopyProject client = new ConversationAnalysisAuthoringClient(endpoint, credential).GetConversationAuthoringCopyProjectClient(apiVersion: "2024-11-15-preview");

Response<CopyProjectJobState> response = await client.GetCopyProjectStatusAsync("<projectName>", "<jobId>");
]]></code></example>
    </member>
    <member name="GetCopyProjectStatus(string,string,CancellationToken)">
      <example>
This sample shows how to call GetCopyProjectStatus.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringCopyProject client = new ConversationAnalysisAuthoringClient(endpoint, credential).GetConversationAuthoringCopyProjectClient(apiVersion: "2024-11-15-preview");

Response<CopyProjectJobState> response = client.GetCopyProjectStatus("<projectName>", "<jobId>");
]]></code>
This sample shows how to call GetCopyProjectStatus with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringCopyProject client = new ConversationAnalysisAuthoringClient(endpoint, credential).GetConversationAuthoringCopyProjectClient(apiVersion: "2024-11-15-preview");

Response<CopyProjectJobState> response = client.GetCopyProjectStatus("<projectName>", "<jobId>");
]]></code></example>
    </member>
    <member name="GetCopyProjectStatusAsync(string,string,RequestContext)">
      <example>
This sample shows how to call GetCopyProjectStatusAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringCopyProject client = new ConversationAnalysisAuthoringClient(endpoint, credential).GetConversationAuthoringCopyProjectClient(apiVersion: "2024-11-15-preview");

Response response = await client.GetCopyProjectStatusAsync("<projectName>", "<jobId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdOn").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedOn").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code>
This sample shows how to call GetCopyProjectStatusAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringCopyProject client = new ConversationAnalysisAuthoringClient(endpoint, credential).GetConversationAuthoringCopyProjectClient(apiVersion: "2024-11-15-preview");

Response response = await client.GetCopyProjectStatusAsync("<projectName>", "<jobId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdOn").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedOn").ToString());
Console.WriteLine(result.GetProperty("expiresOn").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("innererror").GetProperty("code").ToString());
]]></code></example>
    </member>
    <member name="GetCopyProjectStatus(string,string,RequestContext)">
      <example>
This sample shows how to call GetCopyProjectStatus and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringCopyProject client = new ConversationAnalysisAuthoringClient(endpoint, credential).GetConversationAuthoringCopyProjectClient(apiVersion: "2024-11-15-preview");

Response response = client.GetCopyProjectStatus("<projectName>", "<jobId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdOn").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedOn").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code>
This sample shows how to call GetCopyProjectStatus with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringCopyProject client = new ConversationAnalysisAuthoringClient(endpoint, credential).GetConversationAuthoringCopyProjectClient(apiVersion: "2024-11-15-preview");

Response response = client.GetCopyProjectStatus("<projectName>", "<jobId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdOn").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedOn").ToString());
Console.WriteLine(result.GetProperty("expiresOn").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("innererror").GetProperty("code").ToString());
]]></code></example>
    </member>
    <member name="CopyProjectAsync(WaitUntil,string,CopyProjectDetails,CancellationToken)">
      <example>
This sample shows how to call CopyProjectAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringCopyProject client = new ConversationAnalysisAuthoringClient(endpoint, credential).GetConversationAuthoringCopyProjectClient(apiVersion: "2024-11-15-preview");

CopyProjectDetails body = new CopyProjectDetails(
AnalyzeConversationAuthoringProjectKind.Conversation,
"<targetProjectName>",
"<accessToken>",
DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"),
"<targetResourceId>",
"<targetResourceRegion>");
Operation operation = await client.CopyProjectAsync(WaitUntil.Completed, "<projectName>", body);
]]></code>
This sample shows how to call CopyProjectAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringCopyProject client = new ConversationAnalysisAuthoringClient(endpoint, credential).GetConversationAuthoringCopyProjectClient(apiVersion: "2024-11-15-preview");

CopyProjectDetails body = new CopyProjectDetails(
AnalyzeConversationAuthoringProjectKind.Conversation,
"<targetProjectName>",
"<accessToken>",
DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"),
"<targetResourceId>",
"<targetResourceRegion>");
Operation operation = await client.CopyProjectAsync(WaitUntil.Completed, "<projectName>", body);
]]></code></example>
    </member>
    <member name="CopyProject(WaitUntil,string,CopyProjectDetails,CancellationToken)">
      <example>
This sample shows how to call CopyProject.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringCopyProject client = new ConversationAnalysisAuthoringClient(endpoint, credential).GetConversationAuthoringCopyProjectClient(apiVersion: "2024-11-15-preview");

CopyProjectDetails body = new CopyProjectDetails(
AnalyzeConversationAuthoringProjectKind.Conversation,
"<targetProjectName>",
"<accessToken>",
DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"),
"<targetResourceId>",
"<targetResourceRegion>");
Operation operation = client.CopyProject(WaitUntil.Completed, "<projectName>", body);
]]></code>
This sample shows how to call CopyProject with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringCopyProject client = new ConversationAnalysisAuthoringClient(endpoint, credential).GetConversationAuthoringCopyProjectClient(apiVersion: "2024-11-15-preview");

CopyProjectDetails body = new CopyProjectDetails(
AnalyzeConversationAuthoringProjectKind.Conversation,
"<targetProjectName>",
"<accessToken>",
DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"),
"<targetResourceId>",
"<targetResourceRegion>");
Operation operation = client.CopyProject(WaitUntil.Completed, "<projectName>", body);
]]></code></example>
    </member>
    <member name="CopyProjectAsync(WaitUntil,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CopyProjectAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringCopyProject client = new ConversationAnalysisAuthoringClient(endpoint, credential).GetConversationAuthoringCopyProjectClient(apiVersion: "2024-11-15-preview");

using RequestContent content = RequestContent.Create(new
{
    projectKind = "Conversation",
    targetProjectName = "<targetProjectName>",
    accessToken = "<accessToken>",
    expiresAt = "2022-05-10T18:57:31.2311892Z",
    targetResourceId = "<targetResourceId>",
    targetResourceRegion = "<targetResourceRegion>",
});
Operation operation = await client.CopyProjectAsync(WaitUntil.Completed, "<projectName>", content);
]]></code>
This sample shows how to call CopyProjectAsync with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringCopyProject client = new ConversationAnalysisAuthoringClient(endpoint, credential).GetConversationAuthoringCopyProjectClient(apiVersion: "2024-11-15-preview");

using RequestContent content = RequestContent.Create(new
{
    projectKind = "Conversation",
    targetProjectName = "<targetProjectName>",
    accessToken = "<accessToken>",
    expiresAt = "2022-05-10T18:57:31.2311892Z",
    targetResourceId = "<targetResourceId>",
    targetResourceRegion = "<targetResourceRegion>",
});
Operation operation = await client.CopyProjectAsync(WaitUntil.Completed, "<projectName>", content);
]]></code></example>
    </member>
    <member name="CopyProject(WaitUntil,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CopyProject.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringCopyProject client = new ConversationAnalysisAuthoringClient(endpoint, credential).GetConversationAuthoringCopyProjectClient(apiVersion: "2024-11-15-preview");

using RequestContent content = RequestContent.Create(new
{
    projectKind = "Conversation",
    targetProjectName = "<targetProjectName>",
    accessToken = "<accessToken>",
    expiresAt = "2022-05-10T18:57:31.2311892Z",
    targetResourceId = "<targetResourceId>",
    targetResourceRegion = "<targetResourceRegion>",
});
Operation operation = client.CopyProject(WaitUntil.Completed, "<projectName>", content);
]]></code>
This sample shows how to call CopyProject with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringCopyProject client = new ConversationAnalysisAuthoringClient(endpoint, credential).GetConversationAuthoringCopyProjectClient(apiVersion: "2024-11-15-preview");

using RequestContent content = RequestContent.Create(new
{
    projectKind = "Conversation",
    targetProjectName = "<targetProjectName>",
    accessToken = "<accessToken>",
    expiresAt = "2022-05-10T18:57:31.2311892Z",
    targetResourceId = "<targetResourceId>",
    targetResourceRegion = "<targetResourceRegion>",
});
Operation operation = client.CopyProject(WaitUntil.Completed, "<projectName>", content);
]]></code></example>
    </member>
  </members>
</doc>