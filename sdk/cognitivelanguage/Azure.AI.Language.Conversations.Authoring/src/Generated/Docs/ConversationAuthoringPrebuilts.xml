<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetSupportedPrebuiltEntitiesAsync(int?,int?,int?,string,string,CancellationToken)">
      <example>
This sample shows how to call GetSupportedPrebuiltEntitiesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringPrebuilts client = new ConversationAnalysisAuthoringClient(endpoint, credential).GetConversationAuthoringPrebuiltsClient(apiVersion: "2024-11-15-preview");

await foreach (PrebuiltEntity item in client.GetSupportedPrebuiltEntitiesAsync())
{
}
]]></code>
This sample shows how to call GetSupportedPrebuiltEntitiesAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringPrebuilts client = new ConversationAnalysisAuthoringClient(endpoint, credential).GetConversationAuthoringPrebuiltsClient(apiVersion: "2024-11-15-preview");

await foreach (PrebuiltEntity item in client.GetSupportedPrebuiltEntitiesAsync(maxCount: 1234, skip: 1234, maxpagesize: 1234, language: "<language>", multilingual: "<multilingual>"))
{
}
]]></code></example>
    </member>
    <member name="GetSupportedPrebuiltEntities(int?,int?,int?,string,string,CancellationToken)">
      <example>
This sample shows how to call GetSupportedPrebuiltEntities.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringPrebuilts client = new ConversationAnalysisAuthoringClient(endpoint, credential).GetConversationAuthoringPrebuiltsClient(apiVersion: "2024-11-15-preview");

foreach (PrebuiltEntity item in client.GetSupportedPrebuiltEntities())
{
}
]]></code>
This sample shows how to call GetSupportedPrebuiltEntities with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringPrebuilts client = new ConversationAnalysisAuthoringClient(endpoint, credential).GetConversationAuthoringPrebuiltsClient(apiVersion: "2024-11-15-preview");

foreach (PrebuiltEntity item in client.GetSupportedPrebuiltEntities(maxCount: 1234, skip: 1234, maxpagesize: 1234, language: "<language>", multilingual: "<multilingual>"))
{
}
]]></code></example>
    </member>
    <member name="GetSupportedPrebuiltEntitiesAsync(int?,int?,int?,string,string,RequestContext)">
      <example>
This sample shows how to call GetSupportedPrebuiltEntitiesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringPrebuilts client = new ConversationAnalysisAuthoringClient(endpoint, credential).GetConversationAuthoringPrebuiltsClient(apiVersion: "2024-11-15-preview");

await foreach (BinaryData item in client.GetSupportedPrebuiltEntitiesAsync(null, null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("category").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("examples").ToString());
}
]]></code>
This sample shows how to call GetSupportedPrebuiltEntitiesAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringPrebuilts client = new ConversationAnalysisAuthoringClient(endpoint, credential).GetConversationAuthoringPrebuiltsClient(apiVersion: "2024-11-15-preview");

await foreach (BinaryData item in client.GetSupportedPrebuiltEntitiesAsync(1234, 1234, 1234, "<language>", "<multilingual>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("category").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("examples").ToString());
}
]]></code></example>
    </member>
    <member name="GetSupportedPrebuiltEntities(int?,int?,int?,string,string,RequestContext)">
      <example>
This sample shows how to call GetSupportedPrebuiltEntities and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringPrebuilts client = new ConversationAnalysisAuthoringClient(endpoint, credential).GetConversationAuthoringPrebuiltsClient(apiVersion: "2024-11-15-preview");

foreach (BinaryData item in client.GetSupportedPrebuiltEntities(null, null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("category").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("examples").ToString());
}
]]></code>
This sample shows how to call GetSupportedPrebuiltEntities with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringPrebuilts client = new ConversationAnalysisAuthoringClient(endpoint, credential).GetConversationAuthoringPrebuiltsClient(apiVersion: "2024-11-15-preview");

foreach (BinaryData item in client.GetSupportedPrebuiltEntities(1234, 1234, 1234, "<language>", "<multilingual>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("category").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("examples").ToString());
}
]]></code></example>
    </member>
  </members>
</doc>