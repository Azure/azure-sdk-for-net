<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetDeploymentsAsync(string,int?,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDeploymentsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

await foreach (ProjectDeployment item in client.GetDeploymentsAsync("<projectName>"))
{
}
]]></code>
This sample shows how to call GetDeploymentsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

await foreach (ProjectDeployment item in client.GetDeploymentsAsync("<projectName>", maxCount: 1234, skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetDeployments(string,int?,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDeployments.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

foreach (ProjectDeployment item in client.GetDeployments("<projectName>"))
{
}
]]></code>
This sample shows how to call GetDeployments with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

foreach (ProjectDeployment item in client.GetDeployments("<projectName>", maxCount: 1234, skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetDeploymentsAsync(string,int?,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDeploymentsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

await foreach (BinaryData item in client.GetDeploymentsAsync("<projectName>", null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("deploymentName").ToString());
    Console.WriteLine(result.GetProperty("modelId").ToString());
    Console.WriteLine(result.GetProperty("lastTrainedOn").ToString());
    Console.WriteLine(result.GetProperty("lastDeployedOn").ToString());
    Console.WriteLine(result.GetProperty("deploymentExpirationDate").ToString());
    Console.WriteLine(result.GetProperty("modelTrainingConfigVersion").ToString());
    Console.WriteLine(result.GetProperty("assignedResources")[0].GetProperty("resourceId").ToString());
    Console.WriteLine(result.GetProperty("assignedResources")[0].GetProperty("region").ToString());
}
]]></code>
This sample shows how to call GetDeploymentsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

await foreach (BinaryData item in client.GetDeploymentsAsync("<projectName>", 1234, 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("deploymentName").ToString());
    Console.WriteLine(result.GetProperty("modelId").ToString());
    Console.WriteLine(result.GetProperty("lastTrainedOn").ToString());
    Console.WriteLine(result.GetProperty("lastDeployedOn").ToString());
    Console.WriteLine(result.GetProperty("deploymentExpirationDate").ToString());
    Console.WriteLine(result.GetProperty("modelTrainingConfigVersion").ToString());
    Console.WriteLine(result.GetProperty("assignedResources")[0].GetProperty("resourceId").ToString());
    Console.WriteLine(result.GetProperty("assignedResources")[0].GetProperty("region").ToString());
}
]]></code></example>
    </member>
    <member name="GetDeployments(string,int?,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDeployments and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

foreach (BinaryData item in client.GetDeployments("<projectName>", null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("deploymentName").ToString());
    Console.WriteLine(result.GetProperty("modelId").ToString());
    Console.WriteLine(result.GetProperty("lastTrainedOn").ToString());
    Console.WriteLine(result.GetProperty("lastDeployedOn").ToString());
    Console.WriteLine(result.GetProperty("deploymentExpirationDate").ToString());
    Console.WriteLine(result.GetProperty("modelTrainingConfigVersion").ToString());
    Console.WriteLine(result.GetProperty("assignedResources")[0].GetProperty("resourceId").ToString());
    Console.WriteLine(result.GetProperty("assignedResources")[0].GetProperty("region").ToString());
}
]]></code>
This sample shows how to call GetDeployments with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

foreach (BinaryData item in client.GetDeployments("<projectName>", 1234, 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("deploymentName").ToString());
    Console.WriteLine(result.GetProperty("modelId").ToString());
    Console.WriteLine(result.GetProperty("lastTrainedOn").ToString());
    Console.WriteLine(result.GetProperty("lastDeployedOn").ToString());
    Console.WriteLine(result.GetProperty("deploymentExpirationDate").ToString());
    Console.WriteLine(result.GetProperty("modelTrainingConfigVersion").ToString());
    Console.WriteLine(result.GetProperty("assignedResources")[0].GetProperty("resourceId").ToString());
    Console.WriteLine(result.GetProperty("assignedResources")[0].GetProperty("region").ToString());
}
]]></code></example>
    </member>
    <member name="GetProjectsAsync(int?,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetProjectsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

await foreach (ProjectMetadata item in client.GetProjectsAsync())
{
}
]]></code>
This sample shows how to call GetProjectsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

await foreach (ProjectMetadata item in client.GetProjectsAsync(maxCount: 1234, skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetProjects(int?,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetProjects.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

foreach (ProjectMetadata item in client.GetProjects())
{
}
]]></code>
This sample shows how to call GetProjects with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

foreach (ProjectMetadata item in client.GetProjects(maxCount: 1234, skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetProjectsAsync(int?,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetProjectsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

await foreach (BinaryData item in client.GetProjectsAsync(null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("createdOn").ToString());
    Console.WriteLine(result.GetProperty("lastModifiedOn").ToString());
    Console.WriteLine(result.GetProperty("projectKind").ToString());
    Console.WriteLine(result.GetProperty("projectName").ToString());
    Console.WriteLine(result.GetProperty("language").ToString());
}
]]></code>
This sample shows how to call GetProjectsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

await foreach (BinaryData item in client.GetProjectsAsync(1234, 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("createdOn").ToString());
    Console.WriteLine(result.GetProperty("lastModifiedOn").ToString());
    Console.WriteLine(result.GetProperty("lastTrainedOn").ToString());
    Console.WriteLine(result.GetProperty("lastDeployedOn").ToString());
    Console.WriteLine(result.GetProperty("projectKind").ToString());
    Console.WriteLine(result.GetProperty("settings").GetProperty("confidenceThreshold").ToString());
    Console.WriteLine(result.GetProperty("storageInputContainerName").ToString());
    Console.WriteLine(result.GetProperty("projectName").ToString());
    Console.WriteLine(result.GetProperty("multilingual").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("language").ToString());
}
]]></code></example>
    </member>
    <member name="GetProjects(int?,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetProjects and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

foreach (BinaryData item in client.GetProjects(null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("createdOn").ToString());
    Console.WriteLine(result.GetProperty("lastModifiedOn").ToString());
    Console.WriteLine(result.GetProperty("projectKind").ToString());
    Console.WriteLine(result.GetProperty("projectName").ToString());
    Console.WriteLine(result.GetProperty("language").ToString());
}
]]></code>
This sample shows how to call GetProjects with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

foreach (BinaryData item in client.GetProjects(1234, 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("createdOn").ToString());
    Console.WriteLine(result.GetProperty("lastModifiedOn").ToString());
    Console.WriteLine(result.GetProperty("lastTrainedOn").ToString());
    Console.WriteLine(result.GetProperty("lastDeployedOn").ToString());
    Console.WriteLine(result.GetProperty("projectKind").ToString());
    Console.WriteLine(result.GetProperty("settings").GetProperty("confidenceThreshold").ToString());
    Console.WriteLine(result.GetProperty("storageInputContainerName").ToString());
    Console.WriteLine(result.GetProperty("projectName").ToString());
    Console.WriteLine(result.GetProperty("multilingual").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("language").ToString());
}
]]></code></example>
    </member>
    <member name="GetSupportedLanguagesAsync(AnalyzeConversationAuthoringProjectKind,int?,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetSupportedLanguagesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

await foreach (SupportedLanguage item in client.GetSupportedLanguagesAsync(AnalyzeConversationAuthoringProjectKind.Conversation))
{
}
]]></code>
This sample shows how to call GetSupportedLanguagesAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

await foreach (SupportedLanguage item in client.GetSupportedLanguagesAsync(AnalyzeConversationAuthoringProjectKind.Conversation, maxCount: 1234, skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetSupportedLanguages(AnalyzeConversationAuthoringProjectKind,int?,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetSupportedLanguages.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

foreach (SupportedLanguage item in client.GetSupportedLanguages(AnalyzeConversationAuthoringProjectKind.Conversation))
{
}
]]></code>
This sample shows how to call GetSupportedLanguages with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

foreach (SupportedLanguage item in client.GetSupportedLanguages(AnalyzeConversationAuthoringProjectKind.Conversation, maxCount: 1234, skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetSupportedLanguagesAsync(string,int?,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetSupportedLanguagesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

await foreach (BinaryData item in client.GetSupportedLanguagesAsync("Conversation"))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("languageName").ToString());
    Console.WriteLine(result.GetProperty("languageCode").ToString());
}
]]></code>
This sample shows how to call GetSupportedLanguagesAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

await foreach (BinaryData item in client.GetSupportedLanguagesAsync("Conversation", maxCount: 1234, skip: 1234, maxpagesize: 1234))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("languageName").ToString());
    Console.WriteLine(result.GetProperty("languageCode").ToString());
}
]]></code></example>
    </member>
    <member name="GetSupportedLanguages(string,int?,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetSupportedLanguages and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

foreach (BinaryData item in client.GetSupportedLanguages("Conversation"))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("languageName").ToString());
    Console.WriteLine(result.GetProperty("languageCode").ToString());
}
]]></code>
This sample shows how to call GetSupportedLanguages with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

foreach (BinaryData item in client.GetSupportedLanguages("Conversation", maxCount: 1234, skip: 1234, maxpagesize: 1234))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("languageName").ToString());
    Console.WriteLine(result.GetProperty("languageCode").ToString());
}
]]></code></example>
    </member>
    <member name="GetAssignedResourceDeploymentsAsync(int?,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetAssignedResourceDeploymentsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

await foreach (AssignedProjectDeploymentsMetadata item in client.GetAssignedResourceDeploymentsAsync())
{
}
]]></code>
This sample shows how to call GetAssignedResourceDeploymentsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

await foreach (AssignedProjectDeploymentsMetadata item in client.GetAssignedResourceDeploymentsAsync(maxCount: 1234, skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetAssignedResourceDeployments(int?,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetAssignedResourceDeployments.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

foreach (AssignedProjectDeploymentsMetadata item in client.GetAssignedResourceDeployments())
{
}
]]></code>
This sample shows how to call GetAssignedResourceDeployments with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

foreach (AssignedProjectDeploymentsMetadata item in client.GetAssignedResourceDeployments(maxCount: 1234, skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetAssignedResourceDeploymentsAsync(int?,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetAssignedResourceDeploymentsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

await foreach (BinaryData item in client.GetAssignedResourceDeploymentsAsync(null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("projectName").ToString());
    Console.WriteLine(result.GetProperty("deploymentsMetadata")[0].GetProperty("deploymentName").ToString());
    Console.WriteLine(result.GetProperty("deploymentsMetadata")[0].GetProperty("lastDeployedOn").ToString());
    Console.WriteLine(result.GetProperty("deploymentsMetadata")[0].GetProperty("deploymentExpirationDate").ToString());
}
]]></code>
This sample shows how to call GetAssignedResourceDeploymentsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

await foreach (BinaryData item in client.GetAssignedResourceDeploymentsAsync(1234, 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("projectName").ToString());
    Console.WriteLine(result.GetProperty("deploymentsMetadata")[0].GetProperty("deploymentName").ToString());
    Console.WriteLine(result.GetProperty("deploymentsMetadata")[0].GetProperty("lastDeployedOn").ToString());
    Console.WriteLine(result.GetProperty("deploymentsMetadata")[0].GetProperty("deploymentExpirationDate").ToString());
}
]]></code></example>
    </member>
    <member name="GetAssignedResourceDeployments(int?,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetAssignedResourceDeployments and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

foreach (BinaryData item in client.GetAssignedResourceDeployments(null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("projectName").ToString());
    Console.WriteLine(result.GetProperty("deploymentsMetadata")[0].GetProperty("deploymentName").ToString());
    Console.WriteLine(result.GetProperty("deploymentsMetadata")[0].GetProperty("lastDeployedOn").ToString());
    Console.WriteLine(result.GetProperty("deploymentsMetadata")[0].GetProperty("deploymentExpirationDate").ToString());
}
]]></code>
This sample shows how to call GetAssignedResourceDeployments with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

foreach (BinaryData item in client.GetAssignedResourceDeployments(1234, 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("projectName").ToString());
    Console.WriteLine(result.GetProperty("deploymentsMetadata")[0].GetProperty("deploymentName").ToString());
    Console.WriteLine(result.GetProperty("deploymentsMetadata")[0].GetProperty("lastDeployedOn").ToString());
    Console.WriteLine(result.GetProperty("deploymentsMetadata")[0].GetProperty("deploymentExpirationDate").ToString());
}
]]></code></example>
    </member>
    <member name="GetDeploymentResourcesAsync(string,int?,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDeploymentResourcesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

await foreach (AssignedDeploymentResource item in client.GetDeploymentResourcesAsync("<projectName>"))
{
}
]]></code>
This sample shows how to call GetDeploymentResourcesAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

await foreach (AssignedDeploymentResource item in client.GetDeploymentResourcesAsync("<projectName>", maxCount: 1234, skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetDeploymentResources(string,int?,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDeploymentResources.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

foreach (AssignedDeploymentResource item in client.GetDeploymentResources("<projectName>"))
{
}
]]></code>
This sample shows how to call GetDeploymentResources with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

foreach (AssignedDeploymentResource item in client.GetDeploymentResources("<projectName>", maxCount: 1234, skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetDeploymentResourcesAsync(string,int?,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDeploymentResourcesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

await foreach (BinaryData item in client.GetDeploymentResourcesAsync("<projectName>", null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("resourceId").ToString());
    Console.WriteLine(result.GetProperty("region").ToString());
}
]]></code>
This sample shows how to call GetDeploymentResourcesAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

await foreach (BinaryData item in client.GetDeploymentResourcesAsync("<projectName>", 1234, 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("resourceId").ToString());
    Console.WriteLine(result.GetProperty("region").ToString());
}
]]></code></example>
    </member>
    <member name="GetDeploymentResources(string,int?,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDeploymentResources and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

foreach (BinaryData item in client.GetDeploymentResources("<projectName>", null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("resourceId").ToString());
    Console.WriteLine(result.GetProperty("region").ToString());
}
]]></code>
This sample shows how to call GetDeploymentResources with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

foreach (BinaryData item in client.GetDeploymentResources("<projectName>", 1234, 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("resourceId").ToString());
    Console.WriteLine(result.GetProperty("region").ToString());
}
]]></code></example>
    </member>
    <member name="GetSupportedPrebuiltEntitiesAsync(int?,int?,int?,string,string,CancellationToken)">
      <example>
This sample shows how to call GetSupportedPrebuiltEntitiesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

await foreach (PrebuiltEntity item in client.GetSupportedPrebuiltEntitiesAsync())
{
}
]]></code>
This sample shows how to call GetSupportedPrebuiltEntitiesAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

await foreach (PrebuiltEntity item in client.GetSupportedPrebuiltEntitiesAsync(maxCount: 1234, skip: 1234, maxpagesize: 1234, language: "<language>", multilingual: "<multilingual>"))
{
}
]]></code></example>
    </member>
    <member name="GetSupportedPrebuiltEntities(int?,int?,int?,string,string,CancellationToken)">
      <example>
This sample shows how to call GetSupportedPrebuiltEntities.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

foreach (PrebuiltEntity item in client.GetSupportedPrebuiltEntities())
{
}
]]></code>
This sample shows how to call GetSupportedPrebuiltEntities with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

foreach (PrebuiltEntity item in client.GetSupportedPrebuiltEntities(maxCount: 1234, skip: 1234, maxpagesize: 1234, language: "<language>", multilingual: "<multilingual>"))
{
}
]]></code></example>
    </member>
    <member name="GetSupportedPrebuiltEntitiesAsync(int?,int?,int?,string,string,RequestContext)">
      <example>
This sample shows how to call GetSupportedPrebuiltEntitiesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

await foreach (BinaryData item in client.GetSupportedPrebuiltEntitiesAsync(null, null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("category").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("examples").ToString());
}
]]></code>
This sample shows how to call GetSupportedPrebuiltEntitiesAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

await foreach (BinaryData item in client.GetSupportedPrebuiltEntitiesAsync(1234, 1234, 1234, "<language>", "<multilingual>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("category").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("examples").ToString());
}
]]></code></example>
    </member>
    <member name="GetSupportedPrebuiltEntities(int?,int?,int?,string,string,RequestContext)">
      <example>
This sample shows how to call GetSupportedPrebuiltEntities and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

foreach (BinaryData item in client.GetSupportedPrebuiltEntities(null, null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("category").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("examples").ToString());
}
]]></code>
This sample shows how to call GetSupportedPrebuiltEntities with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

foreach (BinaryData item in client.GetSupportedPrebuiltEntities(1234, 1234, 1234, "<language>", "<multilingual>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("category").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("examples").ToString());
}
]]></code></example>
    </member>
    <member name="GetTrainingConfigVersionsAsync(AnalyzeConversationAuthoringProjectKind,int?,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetTrainingConfigVersionsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

await foreach (TrainingConfigVersion item in client.GetTrainingConfigVersionsAsync(AnalyzeConversationAuthoringProjectKind.Conversation))
{
}
]]></code>
This sample shows how to call GetTrainingConfigVersionsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

await foreach (TrainingConfigVersion item in client.GetTrainingConfigVersionsAsync(AnalyzeConversationAuthoringProjectKind.Conversation, maxCount: 1234, skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetTrainingConfigVersions(AnalyzeConversationAuthoringProjectKind,int?,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetTrainingConfigVersions.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

foreach (TrainingConfigVersion item in client.GetTrainingConfigVersions(AnalyzeConversationAuthoringProjectKind.Conversation))
{
}
]]></code>
This sample shows how to call GetTrainingConfigVersions with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

foreach (TrainingConfigVersion item in client.GetTrainingConfigVersions(AnalyzeConversationAuthoringProjectKind.Conversation, maxCount: 1234, skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetTrainingConfigVersionsAsync(string,int?,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetTrainingConfigVersionsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

await foreach (BinaryData item in client.GetTrainingConfigVersionsAsync("Conversation"))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("trainingConfigVersion").ToString());
    Console.WriteLine(result.GetProperty("modelExpirationDate").ToString());
}
]]></code>
This sample shows how to call GetTrainingConfigVersionsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

await foreach (BinaryData item in client.GetTrainingConfigVersionsAsync("Conversation", maxCount: 1234, skip: 1234, maxpagesize: 1234))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("trainingConfigVersion").ToString());
    Console.WriteLine(result.GetProperty("modelExpirationDate").ToString());
}
]]></code></example>
    </member>
    <member name="GetTrainingConfigVersions(string,int?,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetTrainingConfigVersions and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

foreach (BinaryData item in client.GetTrainingConfigVersions("Conversation"))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("trainingConfigVersion").ToString());
    Console.WriteLine(result.GetProperty("modelExpirationDate").ToString());
}
]]></code>
This sample shows how to call GetTrainingConfigVersions with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAnalysisAuthoringClient client = new ConversationAnalysisAuthoringClient(endpoint, credential);

foreach (BinaryData item in client.GetTrainingConfigVersions("Conversation", maxCount: 1234, skip: 1234, maxpagesize: 1234))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("trainingConfigVersion").ToString());
    Console.WriteLine(result.GetProperty("modelExpirationDate").ToString());
}
]]></code></example>
    </member>
  </members>
</doc>