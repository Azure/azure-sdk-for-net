<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetDeploymentAsync(string,string,CancellationToken)">
      <example>
This sample shows how to call GetDeploymentAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Response<ProjectDeployment> response = await client.GetDeploymentAsync("<projectName>", "<deploymentName>");
]]></code>
This sample shows how to call GetDeploymentAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Response<ProjectDeployment> response = await client.GetDeploymentAsync("<projectName>", "<deploymentName>");
]]></code></example>
    </member>
    <member name="GetDeployment(string,string,CancellationToken)">
      <example>
This sample shows how to call GetDeployment.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Response<ProjectDeployment> response = client.GetDeployment("<projectName>", "<deploymentName>");
]]></code>
This sample shows how to call GetDeployment with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Response<ProjectDeployment> response = client.GetDeployment("<projectName>", "<deploymentName>");
]]></code></example>
    </member>
    <member name="GetDeploymentAsync(string,string,RequestContext)">
      <example>
This sample shows how to call GetDeploymentAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Response response = await client.GetDeploymentAsync("<projectName>", "<deploymentName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("deploymentName").ToString());
Console.WriteLine(result.GetProperty("modelId").ToString());
Console.WriteLine(result.GetProperty("lastTrainedOn").ToString());
Console.WriteLine(result.GetProperty("lastDeployedOn").ToString());
Console.WriteLine(result.GetProperty("deploymentExpirationDate").ToString());
Console.WriteLine(result.GetProperty("modelTrainingConfigVersion").ToString());
Console.WriteLine(result.GetProperty("assignedResources")[0].GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("assignedResources")[0].GetProperty("region").ToString());
]]></code>
This sample shows how to call GetDeploymentAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Response response = await client.GetDeploymentAsync("<projectName>", "<deploymentName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("deploymentName").ToString());
Console.WriteLine(result.GetProperty("modelId").ToString());
Console.WriteLine(result.GetProperty("lastTrainedOn").ToString());
Console.WriteLine(result.GetProperty("lastDeployedOn").ToString());
Console.WriteLine(result.GetProperty("deploymentExpirationDate").ToString());
Console.WriteLine(result.GetProperty("modelTrainingConfigVersion").ToString());
Console.WriteLine(result.GetProperty("assignedResources")[0].GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("assignedResources")[0].GetProperty("region").ToString());
]]></code></example>
    </member>
    <member name="GetDeployment(string,string,RequestContext)">
      <example>
This sample shows how to call GetDeployment and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Response response = client.GetDeployment("<projectName>", "<deploymentName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("deploymentName").ToString());
Console.WriteLine(result.GetProperty("modelId").ToString());
Console.WriteLine(result.GetProperty("lastTrainedOn").ToString());
Console.WriteLine(result.GetProperty("lastDeployedOn").ToString());
Console.WriteLine(result.GetProperty("deploymentExpirationDate").ToString());
Console.WriteLine(result.GetProperty("modelTrainingConfigVersion").ToString());
Console.WriteLine(result.GetProperty("assignedResources")[0].GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("assignedResources")[0].GetProperty("region").ToString());
]]></code>
This sample shows how to call GetDeployment with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Response response = client.GetDeployment("<projectName>", "<deploymentName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("deploymentName").ToString());
Console.WriteLine(result.GetProperty("modelId").ToString());
Console.WriteLine(result.GetProperty("lastTrainedOn").ToString());
Console.WriteLine(result.GetProperty("lastDeployedOn").ToString());
Console.WriteLine(result.GetProperty("deploymentExpirationDate").ToString());
Console.WriteLine(result.GetProperty("modelTrainingConfigVersion").ToString());
Console.WriteLine(result.GetProperty("assignedResources")[0].GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("assignedResources")[0].GetProperty("region").ToString());
]]></code></example>
    </member>
    <member name="GetDeploymentDeleteFromResourcesStatusAsync(string,string,string,CancellationToken)">
      <example>
This sample shows how to call GetDeploymentDeleteFromResourcesStatusAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Response<DeploymentDeleteFromResourcesJobState> response = await client.GetDeploymentDeleteFromResourcesStatusAsync("<projectName>", "<deploymentName>", "<jobId>");
]]></code>
This sample shows how to call GetDeploymentDeleteFromResourcesStatusAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Response<DeploymentDeleteFromResourcesJobState> response = await client.GetDeploymentDeleteFromResourcesStatusAsync("<projectName>", "<deploymentName>", "<jobId>");
]]></code></example>
    </member>
    <member name="GetDeploymentDeleteFromResourcesStatus(string,string,string,CancellationToken)">
      <example>
This sample shows how to call GetDeploymentDeleteFromResourcesStatus.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Response<DeploymentDeleteFromResourcesJobState> response = client.GetDeploymentDeleteFromResourcesStatus("<projectName>", "<deploymentName>", "<jobId>");
]]></code>
This sample shows how to call GetDeploymentDeleteFromResourcesStatus with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Response<DeploymentDeleteFromResourcesJobState> response = client.GetDeploymentDeleteFromResourcesStatus("<projectName>", "<deploymentName>", "<jobId>");
]]></code></example>
    </member>
    <member name="GetDeploymentDeleteFromResourcesStatusAsync(string,string,string,RequestContext)">
      <example>
This sample shows how to call GetDeploymentDeleteFromResourcesStatusAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Response response = await client.GetDeploymentDeleteFromResourcesStatusAsync("<projectName>", "<deploymentName>", "<jobId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdOn").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedOn").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code>
This sample shows how to call GetDeploymentDeleteFromResourcesStatusAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Response response = await client.GetDeploymentDeleteFromResourcesStatusAsync("<projectName>", "<deploymentName>", "<jobId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdOn").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedOn").ToString());
Console.WriteLine(result.GetProperty("expiresOn").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("innererror").GetProperty("code").ToString());
]]></code></example>
    </member>
    <member name="GetDeploymentDeleteFromResourcesStatus(string,string,string,RequestContext)">
      <example>
This sample shows how to call GetDeploymentDeleteFromResourcesStatus and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Response response = client.GetDeploymentDeleteFromResourcesStatus("<projectName>", "<deploymentName>", "<jobId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdOn").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedOn").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code>
This sample shows how to call GetDeploymentDeleteFromResourcesStatus with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Response response = client.GetDeploymentDeleteFromResourcesStatus("<projectName>", "<deploymentName>", "<jobId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdOn").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedOn").ToString());
Console.WriteLine(result.GetProperty("expiresOn").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("innererror").GetProperty("code").ToString());
]]></code></example>
    </member>
    <member name="GetDeploymentStatusAsync(string,string,string,CancellationToken)">
      <example>
This sample shows how to call GetDeploymentStatusAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Response<DeploymentJobState> response = await client.GetDeploymentStatusAsync("<projectName>", "<deploymentName>", "<jobId>");
]]></code>
This sample shows how to call GetDeploymentStatusAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Response<DeploymentJobState> response = await client.GetDeploymentStatusAsync("<projectName>", "<deploymentName>", "<jobId>");
]]></code></example>
    </member>
    <member name="GetDeploymentStatus(string,string,string,CancellationToken)">
      <example>
This sample shows how to call GetDeploymentStatus.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Response<DeploymentJobState> response = client.GetDeploymentStatus("<projectName>", "<deploymentName>", "<jobId>");
]]></code>
This sample shows how to call GetDeploymentStatus with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Response<DeploymentJobState> response = client.GetDeploymentStatus("<projectName>", "<deploymentName>", "<jobId>");
]]></code></example>
    </member>
    <member name="GetDeploymentStatusAsync(string,string,string,RequestContext)">
      <example>
This sample shows how to call GetDeploymentStatusAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Response response = await client.GetDeploymentStatusAsync("<projectName>", "<deploymentName>", "<jobId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdOn").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedOn").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code>
This sample shows how to call GetDeploymentStatusAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Response response = await client.GetDeploymentStatusAsync("<projectName>", "<deploymentName>", "<jobId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdOn").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedOn").ToString());
Console.WriteLine(result.GetProperty("expiresOn").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("innererror").GetProperty("code").ToString());
]]></code></example>
    </member>
    <member name="GetDeploymentStatus(string,string,string,RequestContext)">
      <example>
This sample shows how to call GetDeploymentStatus and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Response response = client.GetDeploymentStatus("<projectName>", "<deploymentName>", "<jobId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdOn").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedOn").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code>
This sample shows how to call GetDeploymentStatus with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Response response = client.GetDeploymentStatus("<projectName>", "<deploymentName>", "<jobId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdOn").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedOn").ToString());
Console.WriteLine(result.GetProperty("expiresOn").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("innererror").GetProperty("code").ToString());
]]></code></example>
    </member>
    <member name="GetSwapDeploymentsStatusAsync(string,string,CancellationToken)">
      <example>
This sample shows how to call GetSwapDeploymentsStatusAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Response<SwapDeploymentsJobState> response = await client.GetSwapDeploymentsStatusAsync("<projectName>", "<jobId>");
]]></code>
This sample shows how to call GetSwapDeploymentsStatusAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Response<SwapDeploymentsJobState> response = await client.GetSwapDeploymentsStatusAsync("<projectName>", "<jobId>");
]]></code></example>
    </member>
    <member name="GetSwapDeploymentsStatus(string,string,CancellationToken)">
      <example>
This sample shows how to call GetSwapDeploymentsStatus.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Response<SwapDeploymentsJobState> response = client.GetSwapDeploymentsStatus("<projectName>", "<jobId>");
]]></code>
This sample shows how to call GetSwapDeploymentsStatus with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Response<SwapDeploymentsJobState> response = client.GetSwapDeploymentsStatus("<projectName>", "<jobId>");
]]></code></example>
    </member>
    <member name="GetSwapDeploymentsStatusAsync(string,string,RequestContext)">
      <example>
This sample shows how to call GetSwapDeploymentsStatusAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Response response = await client.GetSwapDeploymentsStatusAsync("<projectName>", "<jobId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdOn").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedOn").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code>
This sample shows how to call GetSwapDeploymentsStatusAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Response response = await client.GetSwapDeploymentsStatusAsync("<projectName>", "<jobId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdOn").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedOn").ToString());
Console.WriteLine(result.GetProperty("expiresOn").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("innererror").GetProperty("code").ToString());
]]></code></example>
    </member>
    <member name="GetSwapDeploymentsStatus(string,string,RequestContext)">
      <example>
This sample shows how to call GetSwapDeploymentsStatus and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Response response = client.GetSwapDeploymentsStatus("<projectName>", "<jobId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdOn").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedOn").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code>
This sample shows how to call GetSwapDeploymentsStatus with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Response response = client.GetSwapDeploymentsStatus("<projectName>", "<jobId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdOn").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedOn").ToString());
Console.WriteLine(result.GetProperty("expiresOn").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("innererror").GetProperty("code").ToString());
]]></code></example>
    </member>
    <member name="GetDeploymentsAsync(string,int?,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDeploymentsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

await foreach (ProjectDeployment item in client.GetDeploymentsAsync("<projectName>"))
{
}
]]></code>
This sample shows how to call GetDeploymentsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

await foreach (ProjectDeployment item in client.GetDeploymentsAsync("<projectName>", maxCount: 1234, skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetDeployments(string,int?,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetDeployments.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

foreach (ProjectDeployment item in client.GetDeployments("<projectName>"))
{
}
]]></code>
This sample shows how to call GetDeployments with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

foreach (ProjectDeployment item in client.GetDeployments("<projectName>", maxCount: 1234, skip: 1234, maxpagesize: 1234))
{
}
]]></code></example>
    </member>
    <member name="GetDeploymentsAsync(string,int?,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDeploymentsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

await foreach (BinaryData item in client.GetDeploymentsAsync("<projectName>", null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("deploymentName").ToString());
    Console.WriteLine(result.GetProperty("modelId").ToString());
    Console.WriteLine(result.GetProperty("lastTrainedOn").ToString());
    Console.WriteLine(result.GetProperty("lastDeployedOn").ToString());
    Console.WriteLine(result.GetProperty("deploymentExpirationDate").ToString());
    Console.WriteLine(result.GetProperty("modelTrainingConfigVersion").ToString());
    Console.WriteLine(result.GetProperty("assignedResources")[0].GetProperty("resourceId").ToString());
    Console.WriteLine(result.GetProperty("assignedResources")[0].GetProperty("region").ToString());
}
]]></code>
This sample shows how to call GetDeploymentsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

await foreach (BinaryData item in client.GetDeploymentsAsync("<projectName>", 1234, 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("deploymentName").ToString());
    Console.WriteLine(result.GetProperty("modelId").ToString());
    Console.WriteLine(result.GetProperty("lastTrainedOn").ToString());
    Console.WriteLine(result.GetProperty("lastDeployedOn").ToString());
    Console.WriteLine(result.GetProperty("deploymentExpirationDate").ToString());
    Console.WriteLine(result.GetProperty("modelTrainingConfigVersion").ToString());
    Console.WriteLine(result.GetProperty("assignedResources")[0].GetProperty("resourceId").ToString());
    Console.WriteLine(result.GetProperty("assignedResources")[0].GetProperty("region").ToString());
}
]]></code></example>
    </member>
    <member name="GetDeployments(string,int?,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetDeployments and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

foreach (BinaryData item in client.GetDeployments("<projectName>", null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("deploymentName").ToString());
    Console.WriteLine(result.GetProperty("modelId").ToString());
    Console.WriteLine(result.GetProperty("lastTrainedOn").ToString());
    Console.WriteLine(result.GetProperty("lastDeployedOn").ToString());
    Console.WriteLine(result.GetProperty("deploymentExpirationDate").ToString());
    Console.WriteLine(result.GetProperty("modelTrainingConfigVersion").ToString());
    Console.WriteLine(result.GetProperty("assignedResources")[0].GetProperty("resourceId").ToString());
    Console.WriteLine(result.GetProperty("assignedResources")[0].GetProperty("region").ToString());
}
]]></code>
This sample shows how to call GetDeployments with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

foreach (BinaryData item in client.GetDeployments("<projectName>", 1234, 1234, 1234, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("deploymentName").ToString());
    Console.WriteLine(result.GetProperty("modelId").ToString());
    Console.WriteLine(result.GetProperty("lastTrainedOn").ToString());
    Console.WriteLine(result.GetProperty("lastDeployedOn").ToString());
    Console.WriteLine(result.GetProperty("deploymentExpirationDate").ToString());
    Console.WriteLine(result.GetProperty("modelTrainingConfigVersion").ToString());
    Console.WriteLine(result.GetProperty("assignedResources")[0].GetProperty("resourceId").ToString());
    Console.WriteLine(result.GetProperty("assignedResources")[0].GetProperty("region").ToString());
}
]]></code></example>
    </member>
    <member name="SwapDeploymentsAsync(WaitUntil,string,SwapDeploymentsDetails,CancellationToken)">
      <example>
This sample shows how to call SwapDeploymentsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

SwapDeploymentsDetails body = new SwapDeploymentsDetails("<firstDeploymentName>", "<secondDeploymentName>");
Operation operation = await client.SwapDeploymentsAsync(WaitUntil.Completed, "<projectName>", body);
]]></code>
This sample shows how to call SwapDeploymentsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

SwapDeploymentsDetails body = new SwapDeploymentsDetails("<firstDeploymentName>", "<secondDeploymentName>");
Operation operation = await client.SwapDeploymentsAsync(WaitUntil.Completed, "<projectName>", body);
]]></code></example>
    </member>
    <member name="SwapDeployments(WaitUntil,string,SwapDeploymentsDetails,CancellationToken)">
      <example>
This sample shows how to call SwapDeployments.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

SwapDeploymentsDetails body = new SwapDeploymentsDetails("<firstDeploymentName>", "<secondDeploymentName>");
Operation operation = client.SwapDeployments(WaitUntil.Completed, "<projectName>", body);
]]></code>
This sample shows how to call SwapDeployments with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

SwapDeploymentsDetails body = new SwapDeploymentsDetails("<firstDeploymentName>", "<secondDeploymentName>");
Operation operation = client.SwapDeployments(WaitUntil.Completed, "<projectName>", body);
]]></code></example>
    </member>
    <member name="SwapDeploymentsAsync(WaitUntil,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call SwapDeploymentsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

using RequestContent content = RequestContent.Create(new
{
    firstDeploymentName = "<firstDeploymentName>",
    secondDeploymentName = "<secondDeploymentName>",
});
Operation operation = await client.SwapDeploymentsAsync(WaitUntil.Completed, "<projectName>", content);
]]></code>
This sample shows how to call SwapDeploymentsAsync with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

using RequestContent content = RequestContent.Create(new
{
    firstDeploymentName = "<firstDeploymentName>",
    secondDeploymentName = "<secondDeploymentName>",
});
Operation operation = await client.SwapDeploymentsAsync(WaitUntil.Completed, "<projectName>", content);
]]></code></example>
    </member>
    <member name="SwapDeployments(WaitUntil,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call SwapDeployments.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

using RequestContent content = RequestContent.Create(new
{
    firstDeploymentName = "<firstDeploymentName>",
    secondDeploymentName = "<secondDeploymentName>",
});
Operation operation = client.SwapDeployments(WaitUntil.Completed, "<projectName>", content);
]]></code>
This sample shows how to call SwapDeployments with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

using RequestContent content = RequestContent.Create(new
{
    firstDeploymentName = "<firstDeploymentName>",
    secondDeploymentName = "<secondDeploymentName>",
});
Operation operation = client.SwapDeployments(WaitUntil.Completed, "<projectName>", content);
]]></code></example>
    </member>
    <member name="DeployProjectAsync(WaitUntil,string,string,CreateDeploymentDetails,CancellationToken)">
      <example>
This sample shows how to call DeployProjectAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

CreateDeploymentDetails body = new CreateDeploymentDetails("<trainedModelLabel>");
Operation operation = await client.DeployProjectAsync(WaitUntil.Completed, "<projectName>", "<deploymentName>", body);
]]></code>
This sample shows how to call DeployProjectAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

CreateDeploymentDetails body = new CreateDeploymentDetails("<trainedModelLabel>")
{
    AssignedResourceIds = { "<assignedResourceIds>" },
};
Operation operation = await client.DeployProjectAsync(WaitUntil.Completed, "<projectName>", "<deploymentName>", body);
]]></code></example>
    </member>
    <member name="DeployProject(WaitUntil,string,string,CreateDeploymentDetails,CancellationToken)">
      <example>
This sample shows how to call DeployProject.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

CreateDeploymentDetails body = new CreateDeploymentDetails("<trainedModelLabel>");
Operation operation = client.DeployProject(WaitUntil.Completed, "<projectName>", "<deploymentName>", body);
]]></code>
This sample shows how to call DeployProject with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

CreateDeploymentDetails body = new CreateDeploymentDetails("<trainedModelLabel>")
{
    AssignedResourceIds = { "<assignedResourceIds>" },
};
Operation operation = client.DeployProject(WaitUntil.Completed, "<projectName>", "<deploymentName>", body);
]]></code></example>
    </member>
    <member name="DeployProjectAsync(WaitUntil,string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call DeployProjectAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

using RequestContent content = RequestContent.Create(new
{
    trainedModelLabel = "<trainedModelLabel>",
});
Operation operation = await client.DeployProjectAsync(WaitUntil.Completed, "<projectName>", "<deploymentName>", content);
]]></code>
This sample shows how to call DeployProjectAsync with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

using RequestContent content = RequestContent.Create(new
{
    trainedModelLabel = "<trainedModelLabel>",
    assignedResourceIds = new object[]
    {
        "<assignedResourceIds>"
    },
});
Operation operation = await client.DeployProjectAsync(WaitUntil.Completed, "<projectName>", "<deploymentName>", content);
]]></code></example>
    </member>
    <member name="DeployProject(WaitUntil,string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call DeployProject.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

using RequestContent content = RequestContent.Create(new
{
    trainedModelLabel = "<trainedModelLabel>",
});
Operation operation = client.DeployProject(WaitUntil.Completed, "<projectName>", "<deploymentName>", content);
]]></code>
This sample shows how to call DeployProject with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

using RequestContent content = RequestContent.Create(new
{
    trainedModelLabel = "<trainedModelLabel>",
    assignedResourceIds = new object[]
    {
        "<assignedResourceIds>"
    },
});
Operation operation = client.DeployProject(WaitUntil.Completed, "<projectName>", "<deploymentName>", content);
]]></code></example>
    </member>
    <member name="DeleteDeploymentAsync(WaitUntil,string,string,RequestContext)">
      <example>
This sample shows how to call DeleteDeploymentAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Operation operation = await client.DeleteDeploymentAsync(WaitUntil.Completed, "<projectName>", "<deploymentName>");
]]></code>
This sample shows how to call DeleteDeploymentAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Operation operation = await client.DeleteDeploymentAsync(WaitUntil.Completed, "<projectName>", "<deploymentName>");
]]></code></example>
    </member>
    <member name="DeleteDeployment(WaitUntil,string,string,RequestContext)">
      <example>
This sample shows how to call DeleteDeployment.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Operation operation = client.DeleteDeployment(WaitUntil.Completed, "<projectName>", "<deploymentName>");
]]></code>
This sample shows how to call DeleteDeployment with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

Operation operation = client.DeleteDeployment(WaitUntil.Completed, "<projectName>", "<deploymentName>");
]]></code></example>
    </member>
    <member name="DeleteDeploymentFromResourcesAsync(WaitUntil,string,string,DeleteDeploymentDetails,CancellationToken)">
      <example>
This sample shows how to call DeleteDeploymentFromResourcesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

DeleteDeploymentDetails body = new DeleteDeploymentDetails();
Operation operation = await client.DeleteDeploymentFromResourcesAsync(WaitUntil.Completed, "<projectName>", "<deploymentName>", body);
]]></code>
This sample shows how to call DeleteDeploymentFromResourcesAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

DeleteDeploymentDetails body = new DeleteDeploymentDetails
{
    AssignedResourceIds = { "<assignedResourceIds>" },
};
Operation operation = await client.DeleteDeploymentFromResourcesAsync(WaitUntil.Completed, "<projectName>", "<deploymentName>", body);
]]></code></example>
    </member>
    <member name="DeleteDeploymentFromResources(WaitUntil,string,string,DeleteDeploymentDetails,CancellationToken)">
      <example>
This sample shows how to call DeleteDeploymentFromResources.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

DeleteDeploymentDetails body = new DeleteDeploymentDetails();
Operation operation = client.DeleteDeploymentFromResources(WaitUntil.Completed, "<projectName>", "<deploymentName>", body);
]]></code>
This sample shows how to call DeleteDeploymentFromResources with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

DeleteDeploymentDetails body = new DeleteDeploymentDetails
{
    AssignedResourceIds = { "<assignedResourceIds>" },
};
Operation operation = client.DeleteDeploymentFromResources(WaitUntil.Completed, "<projectName>", "<deploymentName>", body);
]]></code></example>
    </member>
    <member name="DeleteDeploymentFromResourcesAsync(WaitUntil,string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call DeleteDeploymentFromResourcesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

using RequestContent content = RequestContent.Create(new object());
Operation operation = await client.DeleteDeploymentFromResourcesAsync(WaitUntil.Completed, "<projectName>", "<deploymentName>", content);
]]></code>
This sample shows how to call DeleteDeploymentFromResourcesAsync with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

using RequestContent content = RequestContent.Create(new
{
    assignedResourceIds = new object[]
    {
        "<assignedResourceIds>"
    },
});
Operation operation = await client.DeleteDeploymentFromResourcesAsync(WaitUntil.Completed, "<projectName>", "<deploymentName>", content);
]]></code></example>
    </member>
    <member name="DeleteDeploymentFromResources(WaitUntil,string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call DeleteDeploymentFromResources.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

using RequestContent content = RequestContent.Create(new object());
Operation operation = client.DeleteDeploymentFromResources(WaitUntil.Completed, "<projectName>", "<deploymentName>", content);
]]></code>
This sample shows how to call DeleteDeploymentFromResources with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ConversationAuthoringDeployments client = new AnalyzeConversationAuthoringClient(endpoint, credential).GetConversationAuthoringDeploymentsClient(apiVersion: "2024-11-15-preview");

using RequestContent content = RequestContent.Create(new
{
    assignedResourceIds = new object[]
    {
        "<assignedResourceIds>"
    },
});
Operation operation = client.DeleteDeploymentFromResources(WaitUntil.Completed, "<projectName>", "<deploymentName>", content);
]]></code></example>
    </member>
  </members>
</doc>