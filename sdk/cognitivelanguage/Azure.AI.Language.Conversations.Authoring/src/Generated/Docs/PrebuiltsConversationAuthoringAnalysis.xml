<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetSupportedPrebuiltEntitiesAsync(string,string,int?,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetSupportedPrebuiltEntitiesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PrebuiltsConversationAuthoringAnalysis client = new AnalyzeConversationClient(endpoint, credential).GetPrebuiltsConversationAuthoringAnalysisClient(apiVersion: "2024-11-15-preview");

Response<PrebuiltEntities> response = await client.GetSupportedPrebuiltEntitiesAsync();
]]></code>
This sample shows how to call GetSupportedPrebuiltEntitiesAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PrebuiltsConversationAuthoringAnalysis client = new AnalyzeConversationClient(endpoint, credential).GetPrebuiltsConversationAuthoringAnalysisClient(apiVersion: "2024-11-15-preview");

Response<PrebuiltEntities> response = await client.GetSupportedPrebuiltEntitiesAsync(language: "<language>", multilingual: "<multilingual>", top: 1234, skip: 1234, maxpagesize: 1234);
]]></code></example>
    </member>
    <member name="GetSupportedPrebuiltEntities(string,string,int?,int?,int?,CancellationToken)">
      <example>
This sample shows how to call GetSupportedPrebuiltEntities.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PrebuiltsConversationAuthoringAnalysis client = new AnalyzeConversationClient(endpoint, credential).GetPrebuiltsConversationAuthoringAnalysisClient(apiVersion: "2024-11-15-preview");

Response<PrebuiltEntities> response = client.GetSupportedPrebuiltEntities();
]]></code>
This sample shows how to call GetSupportedPrebuiltEntities with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PrebuiltsConversationAuthoringAnalysis client = new AnalyzeConversationClient(endpoint, credential).GetPrebuiltsConversationAuthoringAnalysisClient(apiVersion: "2024-11-15-preview");

Response<PrebuiltEntities> response = client.GetSupportedPrebuiltEntities(language: "<language>", multilingual: "<multilingual>", top: 1234, skip: 1234, maxpagesize: 1234);
]]></code></example>
    </member>
    <member name="GetSupportedPrebuiltEntitiesAsync(string,string,int?,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetSupportedPrebuiltEntitiesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PrebuiltsConversationAuthoringAnalysis client = new AnalyzeConversationClient(endpoint, credential).GetPrebuiltsConversationAuthoringAnalysisClient(apiVersion: "2024-11-15-preview");

Response response = await client.GetSupportedPrebuiltEntitiesAsync(null, null, null, null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("category").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("examples").ToString());
]]></code>
This sample shows how to call GetSupportedPrebuiltEntitiesAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PrebuiltsConversationAuthoringAnalysis client = new AnalyzeConversationClient(endpoint, credential).GetPrebuiltsConversationAuthoringAnalysisClient(apiVersion: "2024-11-15-preview");

Response response = await client.GetSupportedPrebuiltEntitiesAsync("<language>", "<multilingual>", 1234, 1234, 1234, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("category").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("examples").ToString());
Console.WriteLine(result.GetProperty("nextLink").ToString());
]]></code></example>
    </member>
    <member name="GetSupportedPrebuiltEntities(string,string,int?,int?,int?,RequestContext)">
      <example>
This sample shows how to call GetSupportedPrebuiltEntities and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PrebuiltsConversationAuthoringAnalysis client = new AnalyzeConversationClient(endpoint, credential).GetPrebuiltsConversationAuthoringAnalysisClient(apiVersion: "2024-11-15-preview");

Response response = client.GetSupportedPrebuiltEntities(null, null, null, null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("category").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("examples").ToString());
]]></code>
This sample shows how to call GetSupportedPrebuiltEntities with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PrebuiltsConversationAuthoringAnalysis client = new AnalyzeConversationClient(endpoint, credential).GetPrebuiltsConversationAuthoringAnalysisClient(apiVersion: "2024-11-15-preview");

Response response = client.GetSupportedPrebuiltEntities("<language>", "<multilingual>", 1234, 1234, 1234, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("category").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("examples").ToString());
Console.WriteLine(result.GetProperty("nextLink").ToString());
]]></code></example>
    </member>
  </members>
</doc>