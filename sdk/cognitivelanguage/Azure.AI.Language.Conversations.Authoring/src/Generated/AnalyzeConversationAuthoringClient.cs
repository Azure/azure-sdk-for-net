// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.Core.Pipeline;

namespace Azure.AI.Language.Conversations.Authoring
{
    // Data plane generated client.
    /// <summary> The language service API is a suite of natural language processing (NLP) skills built with best-in-class Microsoft machine learning algorithms. The API can be used to analyze unstructured text for tasks such as sentiment analysis, key phrase extraction, language detection and question answering. Further documentation can be found in &lt;a href="https://learn.microsoft.com/en-us/azure/cognitive-services/language-service/overview"&gt;https://learn.microsoft.com/en-us/azure/cognitive-services/language-service/overview&lt;/a&gt;. </summary>
    public partial class AnalyzeConversationAuthoringClient
    {
        private const string AuthorizationHeader = "Ocp-Apim-Subscription-Key";
        private readonly AzureKeyCredential _keyCredential;
        private static readonly string[] AuthorizationScopes = new string[] { "https://cognitiveservices.azure.com/.default" };
        private readonly TokenCredential _tokenCredential;
        private readonly HttpPipeline _pipeline;
        private readonly Uri _endpoint;

        /// <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        internal ClientDiagnostics ClientDiagnostics { get; }

        /// <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        public virtual HttpPipeline Pipeline => _pipeline;

        /// <summary> Initializes a new instance of AnalyzeConversationAuthoringClient for mocking. </summary>
        protected AnalyzeConversationAuthoringClient()
        {
        }

        /// <summary> Initializes a new instance of AnalyzeConversationAuthoringClient. </summary>
        /// <param name="endpoint"> Supported Cognitive Services endpoint e.g., https://&lt;resource-name&gt;.api.cognitiveservices.azure.com. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="endpoint"/> or <paramref name="credential"/> is null. </exception>
        public AnalyzeConversationAuthoringClient(Uri endpoint, AzureKeyCredential credential) : this(endpoint, credential, new AnalyzeConversationAuthoringClientOptions())
        {
        }

        /// <summary> Initializes a new instance of AnalyzeConversationAuthoringClient. </summary>
        /// <param name="endpoint"> Supported Cognitive Services endpoint e.g., https://&lt;resource-name&gt;.api.cognitiveservices.azure.com. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="endpoint"/> or <paramref name="credential"/> is null. </exception>
        public AnalyzeConversationAuthoringClient(Uri endpoint, TokenCredential credential) : this(endpoint, credential, new AnalyzeConversationAuthoringClientOptions())
        {
        }

        /// <summary> Initializes a new instance of AnalyzeConversationAuthoringClient. </summary>
        /// <param name="endpoint"> Supported Cognitive Services endpoint e.g., https://&lt;resource-name&gt;.api.cognitiveservices.azure.com. </param>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="endpoint"/> or <paramref name="credential"/> is null. </exception>
        public AnalyzeConversationAuthoringClient(Uri endpoint, TokenCredential credential, AnalyzeConversationAuthoringClientOptions options)
        {
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            Argument.AssertNotNull(credential, nameof(credential));
            options ??= new AnalyzeConversationAuthoringClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential, AuthorizationScopes) }, new ResponseClassifier());
            _endpoint = endpoint;
        }

        /// <summary> Initializes a new instance of CopyProjectAuthoringConversationAnalysis. </summary>
        /// <param name="apiVersion"> The API version to use for this operation. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="apiVersion"/> is null. </exception>
        public virtual CopyProjectAuthoringConversationAnalysis GetCopyProjectAuthoringConversationAnalysisClient(string apiVersion = "2024-11-15-preview")
        {
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new CopyProjectAuthoringConversationAnalysis(ClientDiagnostics, _pipeline, _keyCredential, _tokenCredential, _endpoint, apiVersion);
        }

        /// <summary> Initializes a new instance of DeploymentResourcesAuthoringConversationAnalysis. </summary>
        /// <param name="apiVersion"> The API version to use for this operation. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="apiVersion"/> is null. </exception>
        public virtual DeploymentResourcesAuthoringConversationAnalysis GetDeploymentResourcesAuthoringConversationAnalysisClient(string apiVersion = "2024-11-15-preview")
        {
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new DeploymentResourcesAuthoringConversationAnalysis(ClientDiagnostics, _pipeline, _keyCredential, _tokenCredential, _endpoint, apiVersion);
        }

        /// <summary> Initializes a new instance of DeploymentsAuthoringConversationAnalysis. </summary>
        /// <param name="apiVersion"> The API version to use for this operation. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="apiVersion"/> is null. </exception>
        public virtual DeploymentsAuthoringConversationAnalysis GetDeploymentsAuthoringConversationAnalysisClient(string apiVersion = "2024-11-15-preview")
        {
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new DeploymentsAuthoringConversationAnalysis(ClientDiagnostics, _pipeline, _keyCredential, _tokenCredential, _endpoint, apiVersion);
        }

        /// <summary> Initializes a new instance of ProjectsAuthoringConversationAnalysis. </summary>
        /// <param name="apiVersion"> The API version to use for this operation. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="apiVersion"/> is null. </exception>
        public virtual ProjectsAuthoringConversationAnalysis GetProjectsAuthoringConversationAnalysisClient(string apiVersion = "2024-11-15-preview")
        {
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new ProjectsAuthoringConversationAnalysis(ClientDiagnostics, _pipeline, _keyCredential, _tokenCredential, _endpoint, apiVersion);
        }

        /// <summary> Initializes a new instance of ProjectFilesAuthoringConversationAnalysis. </summary>
        /// <param name="apiVersion"> The API version to use for this operation. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="apiVersion"/> is null. </exception>
        public virtual ProjectFilesAuthoringConversationAnalysis GetProjectFilesAuthoringConversationAnalysisClient(string apiVersion = "2024-11-15-preview")
        {
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new ProjectFilesAuthoringConversationAnalysis(ClientDiagnostics, _pipeline, _keyCredential, _tokenCredential, _endpoint, apiVersion);
        }

        /// <summary> Initializes a new instance of TrainingAuthoringConversationAnalysis. </summary>
        /// <param name="apiVersion"> The API version to use for this operation. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="apiVersion"/> is null. </exception>
        public virtual TrainingAuthoringConversationAnalysis GetTrainingAuthoringConversationAnalysisClient(string apiVersion = "2024-11-15-preview")
        {
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new TrainingAuthoringConversationAnalysis(ClientDiagnostics, _pipeline, _keyCredential, _tokenCredential, _endpoint, apiVersion);
        }

        /// <summary> Initializes a new instance of ModelsAuthoringConversationAnalysis. </summary>
        /// <param name="apiVersion"> The API version to use for this operation. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="apiVersion"/> is null. </exception>
        public virtual ModelsAuthoringConversationAnalysis GetModelsAuthoringConversationAnalysisClient(string apiVersion = "2024-11-15-preview")
        {
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new ModelsAuthoringConversationAnalysis(ClientDiagnostics, _pipeline, _keyCredential, _tokenCredential, _endpoint, apiVersion);
        }

        /// <summary> Initializes a new instance of PrebuiltsAuthoringConversationAnalysis. </summary>
        /// <param name="apiVersion"> The API version to use for this operation. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="apiVersion"/> is null. </exception>
        public virtual PrebuiltsAuthoringConversationAnalysis GetPrebuiltsAuthoringConversationAnalysisClient(string apiVersion = "2024-11-15-preview")
        {
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new PrebuiltsAuthoringConversationAnalysis(ClientDiagnostics, _pipeline, _keyCredential, _tokenCredential, _endpoint, apiVersion);
        }

        /// <summary> Initializes a new instance of ExportedModelsAuthoringConversationAnalysis. </summary>
        /// <param name="apiVersion"> The API version to use for this operation. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="apiVersion"/> is null. </exception>
        public virtual ExportedModelsAuthoringConversationAnalysis GetExportedModelsAuthoringConversationAnalysisClient(string apiVersion = "2024-11-15-preview")
        {
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new ExportedModelsAuthoringConversationAnalysis(ClientDiagnostics, _pipeline, _keyCredential, _tokenCredential, _endpoint, apiVersion);
        }
    }
}
