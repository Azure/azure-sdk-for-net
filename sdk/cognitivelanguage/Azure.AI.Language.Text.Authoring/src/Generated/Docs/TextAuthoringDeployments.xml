<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetDeploymentAsync(string,string,CancellationToken)">
      <example>
This sample shows how to call GetDeploymentAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response<AnalyzeTextAuthoringProjectDeployment> response = await client.GetDeploymentAsync("<projectName>", "<deploymentName>");
]]></code>
This sample shows how to call GetDeploymentAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response<AnalyzeTextAuthoringProjectDeployment> response = await client.GetDeploymentAsync("<projectName>", "<deploymentName>");
]]></code></example>
    </member>
    <member name="GetDeployment(string,string,CancellationToken)">
      <example>
This sample shows how to call GetDeployment.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response<AnalyzeTextAuthoringProjectDeployment> response = client.GetDeployment("<projectName>", "<deploymentName>");
]]></code>
This sample shows how to call GetDeployment with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response<AnalyzeTextAuthoringProjectDeployment> response = client.GetDeployment("<projectName>", "<deploymentName>");
]]></code></example>
    </member>
    <member name="GetDeploymentAsync(string,string,RequestContext)">
      <example>
This sample shows how to call GetDeploymentAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response response = await client.GetDeploymentAsync("<projectName>", "<deploymentName>", (RequestContext)null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("deploymentName").ToString());
Console.WriteLine(result.GetProperty("modelId").ToString());
Console.WriteLine(result.GetProperty("lastTrainedDateTime").ToString());
Console.WriteLine(result.GetProperty("lastDeployedDateTime").ToString());
Console.WriteLine(result.GetProperty("deploymentExpirationDate").ToString());
Console.WriteLine(result.GetProperty("modelTrainingConfigVersion").ToString());
Console.WriteLine(result.GetProperty("assignedResources")[0].GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("assignedResources")[0].GetProperty("region").ToString());
]]></code>
This sample shows how to call GetDeploymentAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response response = await client.GetDeploymentAsync("<projectName>", "<deploymentName>", (RequestContext)null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("deploymentName").ToString());
Console.WriteLine(result.GetProperty("modelId").ToString());
Console.WriteLine(result.GetProperty("lastTrainedDateTime").ToString());
Console.WriteLine(result.GetProperty("lastDeployedDateTime").ToString());
Console.WriteLine(result.GetProperty("deploymentExpirationDate").ToString());
Console.WriteLine(result.GetProperty("modelTrainingConfigVersion").ToString());
Console.WriteLine(result.GetProperty("assignedResources")[0].GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("assignedResources")[0].GetProperty("region").ToString());
]]></code></example>
    </member>
    <member name="GetDeployment(string,string,RequestContext)">
      <example>
This sample shows how to call GetDeployment and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response response = client.GetDeployment("<projectName>", "<deploymentName>", (RequestContext)null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("deploymentName").ToString());
Console.WriteLine(result.GetProperty("modelId").ToString());
Console.WriteLine(result.GetProperty("lastTrainedDateTime").ToString());
Console.WriteLine(result.GetProperty("lastDeployedDateTime").ToString());
Console.WriteLine(result.GetProperty("deploymentExpirationDate").ToString());
Console.WriteLine(result.GetProperty("modelTrainingConfigVersion").ToString());
Console.WriteLine(result.GetProperty("assignedResources")[0].GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("assignedResources")[0].GetProperty("region").ToString());
]]></code>
This sample shows how to call GetDeployment with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response response = client.GetDeployment("<projectName>", "<deploymentName>", (RequestContext)null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("deploymentName").ToString());
Console.WriteLine(result.GetProperty("modelId").ToString());
Console.WriteLine(result.GetProperty("lastTrainedDateTime").ToString());
Console.WriteLine(result.GetProperty("lastDeployedDateTime").ToString());
Console.WriteLine(result.GetProperty("deploymentExpirationDate").ToString());
Console.WriteLine(result.GetProperty("modelTrainingConfigVersion").ToString());
Console.WriteLine(result.GetProperty("assignedResources")[0].GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("assignedResources")[0].GetProperty("region").ToString());
]]></code></example>
    </member>
    <member name="GetDeploymentDeleteFromResourcesStatusAsync(string,string,string,CancellationToken)">
      <example>
This sample shows how to call GetDeploymentDeleteFromResourcesStatusAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response<AnalyzeTextAuthoringDeploymentDeleteFromResourcesOperationState> response = await client.GetDeploymentDeleteFromResourcesStatusAsync("<projectName>", "<deploymentName>", "<jobId>");
]]></code>
This sample shows how to call GetDeploymentDeleteFromResourcesStatusAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response<AnalyzeTextAuthoringDeploymentDeleteFromResourcesOperationState> response = await client.GetDeploymentDeleteFromResourcesStatusAsync("<projectName>", "<deploymentName>", "<jobId>");
]]></code></example>
    </member>
    <member name="GetDeploymentDeleteFromResourcesStatus(string,string,string,CancellationToken)">
      <example>
This sample shows how to call GetDeploymentDeleteFromResourcesStatus.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response<AnalyzeTextAuthoringDeploymentDeleteFromResourcesOperationState> response = client.GetDeploymentDeleteFromResourcesStatus("<projectName>", "<deploymentName>", "<jobId>");
]]></code>
This sample shows how to call GetDeploymentDeleteFromResourcesStatus with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response<AnalyzeTextAuthoringDeploymentDeleteFromResourcesOperationState> response = client.GetDeploymentDeleteFromResourcesStatus("<projectName>", "<deploymentName>", "<jobId>");
]]></code></example>
    </member>
    <member name="GetDeploymentDeleteFromResourcesStatusAsync(string,string,string,RequestContext)">
      <example>
This sample shows how to call GetDeploymentDeleteFromResourcesStatusAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response response = await client.GetDeploymentDeleteFromResourcesStatusAsync("<projectName>", "<deploymentName>", "<jobId>", (RequestContext)null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedDateTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code>
This sample shows how to call GetDeploymentDeleteFromResourcesStatusAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response response = await client.GetDeploymentDeleteFromResourcesStatusAsync("<projectName>", "<deploymentName>", "<jobId>", (RequestContext)null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedDateTime").ToString());
Console.WriteLine(result.GetProperty("expirationDateTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("innererror").GetProperty("code").ToString());
]]></code></example>
    </member>
    <member name="GetDeploymentDeleteFromResourcesStatus(string,string,string,RequestContext)">
      <example>
This sample shows how to call GetDeploymentDeleteFromResourcesStatus and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response response = client.GetDeploymentDeleteFromResourcesStatus("<projectName>", "<deploymentName>", "<jobId>", (RequestContext)null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedDateTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code>
This sample shows how to call GetDeploymentDeleteFromResourcesStatus with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response response = client.GetDeploymentDeleteFromResourcesStatus("<projectName>", "<deploymentName>", "<jobId>", (RequestContext)null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedDateTime").ToString());
Console.WriteLine(result.GetProperty("expirationDateTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("innererror").GetProperty("code").ToString());
]]></code></example>
    </member>
    <member name="GetDeploymentStatusAsync(string,string,string,CancellationToken)">
      <example>
This sample shows how to call GetDeploymentStatusAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response<AnalyzeTextAuthoringDeploymentOperationState> response = await client.GetDeploymentStatusAsync("<projectName>", "<deploymentName>", "<jobId>");
]]></code>
This sample shows how to call GetDeploymentStatusAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response<AnalyzeTextAuthoringDeploymentOperationState> response = await client.GetDeploymentStatusAsync("<projectName>", "<deploymentName>", "<jobId>");
]]></code></example>
    </member>
    <member name="GetDeploymentStatus(string,string,string,CancellationToken)">
      <example>
This sample shows how to call GetDeploymentStatus.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response<AnalyzeTextAuthoringDeploymentOperationState> response = client.GetDeploymentStatus("<projectName>", "<deploymentName>", "<jobId>");
]]></code>
This sample shows how to call GetDeploymentStatus with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response<AnalyzeTextAuthoringDeploymentOperationState> response = client.GetDeploymentStatus("<projectName>", "<deploymentName>", "<jobId>");
]]></code></example>
    </member>
    <member name="GetDeploymentStatusAsync(string,string,string,RequestContext)">
      <example>
This sample shows how to call GetDeploymentStatusAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response response = await client.GetDeploymentStatusAsync("<projectName>", "<deploymentName>", "<jobId>", (RequestContext)null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedDateTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code>
This sample shows how to call GetDeploymentStatusAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response response = await client.GetDeploymentStatusAsync("<projectName>", "<deploymentName>", "<jobId>", (RequestContext)null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedDateTime").ToString());
Console.WriteLine(result.GetProperty("expirationDateTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("innererror").GetProperty("code").ToString());
]]></code></example>
    </member>
    <member name="GetDeploymentStatus(string,string,string,RequestContext)">
      <example>
This sample shows how to call GetDeploymentStatus and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response response = client.GetDeploymentStatus("<projectName>", "<deploymentName>", "<jobId>", (RequestContext)null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedDateTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code>
This sample shows how to call GetDeploymentStatus with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response response = client.GetDeploymentStatus("<projectName>", "<deploymentName>", "<jobId>", (RequestContext)null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedDateTime").ToString());
Console.WriteLine(result.GetProperty("expirationDateTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("innererror").GetProperty("code").ToString());
]]></code></example>
    </member>
    <member name="GetSwapDeploymentsStatusAsync(string,string,CancellationToken)">
      <example>
This sample shows how to call GetSwapDeploymentsStatusAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response<AnalyzeTextAuthoringSwapDeploymentsOperationState> response = await client.GetSwapDeploymentsStatusAsync("<projectName>", "<jobId>");
]]></code>
This sample shows how to call GetSwapDeploymentsStatusAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response<AnalyzeTextAuthoringSwapDeploymentsOperationState> response = await client.GetSwapDeploymentsStatusAsync("<projectName>", "<jobId>");
]]></code></example>
    </member>
    <member name="GetSwapDeploymentsStatus(string,string,CancellationToken)">
      <example>
This sample shows how to call GetSwapDeploymentsStatus.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response<AnalyzeTextAuthoringSwapDeploymentsOperationState> response = client.GetSwapDeploymentsStatus("<projectName>", "<jobId>");
]]></code>
This sample shows how to call GetSwapDeploymentsStatus with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response<AnalyzeTextAuthoringSwapDeploymentsOperationState> response = client.GetSwapDeploymentsStatus("<projectName>", "<jobId>");
]]></code></example>
    </member>
    <member name="GetSwapDeploymentsStatusAsync(string,string,RequestContext)">
      <example>
This sample shows how to call GetSwapDeploymentsStatusAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response response = await client.GetSwapDeploymentsStatusAsync("<projectName>", "<jobId>", (RequestContext)null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedDateTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code>
This sample shows how to call GetSwapDeploymentsStatusAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response response = await client.GetSwapDeploymentsStatusAsync("<projectName>", "<jobId>", (RequestContext)null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedDateTime").ToString());
Console.WriteLine(result.GetProperty("expirationDateTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("innererror").GetProperty("code").ToString());
]]></code></example>
    </member>
    <member name="GetSwapDeploymentsStatus(string,string,RequestContext)">
      <example>
This sample shows how to call GetSwapDeploymentsStatus and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response response = client.GetSwapDeploymentsStatus("<projectName>", "<jobId>", (RequestContext)null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedDateTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code>
This sample shows how to call GetSwapDeploymentsStatus with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response response = client.GetSwapDeploymentsStatus("<projectName>", "<jobId>", (RequestContext)null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedDateTime").ToString());
Console.WriteLine(result.GetProperty("expirationDateTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("innererror").GetProperty("code").ToString());
]]></code></example>
    </member>
    <member name="GetAssignDeploymentResourcesStatusAsync(string,string,CancellationToken)">
      <example>
This sample shows how to call GetAssignDeploymentResourcesStatusAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response<AnalyzeTextAuthoringAssignDeploymentResourcesOperationState> response = await client.GetAssignDeploymentResourcesStatusAsync("<projectName>", "<jobId>");
]]></code>
This sample shows how to call GetAssignDeploymentResourcesStatusAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response<AnalyzeTextAuthoringAssignDeploymentResourcesOperationState> response = await client.GetAssignDeploymentResourcesStatusAsync("<projectName>", "<jobId>");
]]></code></example>
    </member>
    <member name="GetAssignDeploymentResourcesStatus(string,string,CancellationToken)">
      <example>
This sample shows how to call GetAssignDeploymentResourcesStatus.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response<AnalyzeTextAuthoringAssignDeploymentResourcesOperationState> response = client.GetAssignDeploymentResourcesStatus("<projectName>", "<jobId>");
]]></code>
This sample shows how to call GetAssignDeploymentResourcesStatus with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response<AnalyzeTextAuthoringAssignDeploymentResourcesOperationState> response = client.GetAssignDeploymentResourcesStatus("<projectName>", "<jobId>");
]]></code></example>
    </member>
    <member name="GetAssignDeploymentResourcesStatusAsync(string,string,RequestContext)">
      <example>
This sample shows how to call GetAssignDeploymentResourcesStatusAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response response = await client.GetAssignDeploymentResourcesStatusAsync("<projectName>", "<jobId>", (RequestContext)null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedDateTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code>
This sample shows how to call GetAssignDeploymentResourcesStatusAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response response = await client.GetAssignDeploymentResourcesStatusAsync("<projectName>", "<jobId>", (RequestContext)null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedDateTime").ToString());
Console.WriteLine(result.GetProperty("expirationDateTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("innererror").GetProperty("code").ToString());
]]></code></example>
    </member>
    <member name="GetAssignDeploymentResourcesStatus(string,string,RequestContext)">
      <example>
This sample shows how to call GetAssignDeploymentResourcesStatus and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response response = client.GetAssignDeploymentResourcesStatus("<projectName>", "<jobId>", (RequestContext)null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedDateTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code>
This sample shows how to call GetAssignDeploymentResourcesStatus with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response response = client.GetAssignDeploymentResourcesStatus("<projectName>", "<jobId>", (RequestContext)null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedDateTime").ToString());
Console.WriteLine(result.GetProperty("expirationDateTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("innererror").GetProperty("code").ToString());
]]></code></example>
    </member>
    <member name="GetUnassignDeploymentResourcesStatusAsync(string,string,CancellationToken)">
      <example>
This sample shows how to call GetUnassignDeploymentResourcesStatusAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response<AnalyzeTextAuthoringUnassignDeploymentResourcesOperationState> response = await client.GetUnassignDeploymentResourcesStatusAsync("<projectName>", "<jobId>");
]]></code>
This sample shows how to call GetUnassignDeploymentResourcesStatusAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response<AnalyzeTextAuthoringUnassignDeploymentResourcesOperationState> response = await client.GetUnassignDeploymentResourcesStatusAsync("<projectName>", "<jobId>");
]]></code></example>
    </member>
    <member name="GetUnassignDeploymentResourcesStatus(string,string,CancellationToken)">
      <example>
This sample shows how to call GetUnassignDeploymentResourcesStatus.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response<AnalyzeTextAuthoringUnassignDeploymentResourcesOperationState> response = client.GetUnassignDeploymentResourcesStatus("<projectName>", "<jobId>");
]]></code>
This sample shows how to call GetUnassignDeploymentResourcesStatus with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response<AnalyzeTextAuthoringUnassignDeploymentResourcesOperationState> response = client.GetUnassignDeploymentResourcesStatus("<projectName>", "<jobId>");
]]></code></example>
    </member>
    <member name="GetUnassignDeploymentResourcesStatusAsync(string,string,RequestContext)">
      <example>
This sample shows how to call GetUnassignDeploymentResourcesStatusAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response response = await client.GetUnassignDeploymentResourcesStatusAsync("<projectName>", "<jobId>", (RequestContext)null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedDateTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code>
This sample shows how to call GetUnassignDeploymentResourcesStatusAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response response = await client.GetUnassignDeploymentResourcesStatusAsync("<projectName>", "<jobId>", (RequestContext)null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedDateTime").ToString());
Console.WriteLine(result.GetProperty("expirationDateTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("innererror").GetProperty("code").ToString());
]]></code></example>
    </member>
    <member name="GetUnassignDeploymentResourcesStatus(string,string,RequestContext)">
      <example>
This sample shows how to call GetUnassignDeploymentResourcesStatus and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response response = client.GetUnassignDeploymentResourcesStatus("<projectName>", "<jobId>", (RequestContext)null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedDateTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
]]></code>
This sample shows how to call GetUnassignDeploymentResourcesStatus with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Response response = client.GetUnassignDeploymentResourcesStatus("<projectName>", "<jobId>", (RequestContext)null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobId").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastUpdatedDateTime").ToString());
Console.WriteLine(result.GetProperty("expirationDateTime").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("warnings")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("details")[0].GetProperty("innererror").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("errors")[0].GetProperty("innererror").GetProperty("code").ToString());
]]></code></example>
    </member>
    <member name="DeleteDeploymentAsync(WaitUntil,string,string,RequestContext)">
      <example>
This sample shows how to call DeleteDeploymentAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Operation operation = await client.DeleteDeploymentAsync(WaitUntil.Completed, "<projectName>", "<deploymentName>");
]]></code>
This sample shows how to call DeleteDeploymentAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Operation operation = await client.DeleteDeploymentAsync(WaitUntil.Completed, "<projectName>", "<deploymentName>");
]]></code></example>
    </member>
    <member name="DeleteDeployment(WaitUntil,string,string,RequestContext)">
      <example>
This sample shows how to call DeleteDeployment.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Operation operation = client.DeleteDeployment(WaitUntil.Completed, "<projectName>", "<deploymentName>");
]]></code>
This sample shows how to call DeleteDeployment with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

Operation operation = client.DeleteDeployment(WaitUntil.Completed, "<projectName>", "<deploymentName>");
]]></code></example>
    </member>
    <member name="DeleteDeploymentFromResourcesAsync(WaitUntil,string,string,AnalyzeTextAuthoringDeleteDeploymentDetails,CancellationToken)">
      <example>
This sample shows how to call DeleteDeploymentFromResourcesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

AnalyzeTextAuthoringDeleteDeploymentDetails body = new AnalyzeTextAuthoringDeleteDeploymentDetails();
Operation operation = await client.DeleteDeploymentFromResourcesAsync(WaitUntil.Completed, "<projectName>", "<deploymentName>", body);
]]></code>
This sample shows how to call DeleteDeploymentFromResourcesAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

AnalyzeTextAuthoringDeleteDeploymentDetails body = new AnalyzeTextAuthoringDeleteDeploymentDetails
{
    AssignedResourceIds = { "<assignedResourceIds>" },
};
Operation operation = await client.DeleteDeploymentFromResourcesAsync(WaitUntil.Completed, "<projectName>", "<deploymentName>", body);
]]></code></example>
    </member>
    <member name="DeleteDeploymentFromResources(WaitUntil,string,string,AnalyzeTextAuthoringDeleteDeploymentDetails,CancellationToken)">
      <example>
This sample shows how to call DeleteDeploymentFromResources.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

AnalyzeTextAuthoringDeleteDeploymentDetails body = new AnalyzeTextAuthoringDeleteDeploymentDetails();
Operation operation = client.DeleteDeploymentFromResources(WaitUntil.Completed, "<projectName>", "<deploymentName>", body);
]]></code>
This sample shows how to call DeleteDeploymentFromResources with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

AnalyzeTextAuthoringDeleteDeploymentDetails body = new AnalyzeTextAuthoringDeleteDeploymentDetails
{
    AssignedResourceIds = { "<assignedResourceIds>" },
};
Operation operation = client.DeleteDeploymentFromResources(WaitUntil.Completed, "<projectName>", "<deploymentName>", body);
]]></code></example>
    </member>
    <member name="DeleteDeploymentFromResourcesAsync(WaitUntil,string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call DeleteDeploymentFromResourcesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

using RequestContent content = RequestContent.Create(new object());
Operation operation = await client.DeleteDeploymentFromResourcesAsync(WaitUntil.Completed, "<projectName>", "<deploymentName>", content);
]]></code>
This sample shows how to call DeleteDeploymentFromResourcesAsync with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

using RequestContent content = RequestContent.Create(new
{
    assignedResourceIds = new object[]
    {
        "<assignedResourceIds>"
    },
});
Operation operation = await client.DeleteDeploymentFromResourcesAsync(WaitUntil.Completed, "<projectName>", "<deploymentName>", content);
]]></code></example>
    </member>
    <member name="DeleteDeploymentFromResources(WaitUntil,string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call DeleteDeploymentFromResources.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

using RequestContent content = RequestContent.Create(new object());
Operation operation = client.DeleteDeploymentFromResources(WaitUntil.Completed, "<projectName>", "<deploymentName>", content);
]]></code>
This sample shows how to call DeleteDeploymentFromResources with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

using RequestContent content = RequestContent.Create(new
{
    assignedResourceIds = new object[]
    {
        "<assignedResourceIds>"
    },
});
Operation operation = client.DeleteDeploymentFromResources(WaitUntil.Completed, "<projectName>", "<deploymentName>", content);
]]></code></example>
    </member>
    <member name="SwapDeploymentsAsync(WaitUntil,string,AnalyzeTextAuthoringSwapDeploymentsDetails,CancellationToken)">
      <example>
This sample shows how to call SwapDeploymentsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

AnalyzeTextAuthoringSwapDeploymentsDetails body = new AnalyzeTextAuthoringSwapDeploymentsDetails("<firstDeploymentName>", "<secondDeploymentName>");
Operation operation = await client.SwapDeploymentsAsync(WaitUntil.Completed, "<projectName>", body);
]]></code>
This sample shows how to call SwapDeploymentsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

AnalyzeTextAuthoringSwapDeploymentsDetails body = new AnalyzeTextAuthoringSwapDeploymentsDetails("<firstDeploymentName>", "<secondDeploymentName>");
Operation operation = await client.SwapDeploymentsAsync(WaitUntil.Completed, "<projectName>", body);
]]></code></example>
    </member>
    <member name="SwapDeployments(WaitUntil,string,AnalyzeTextAuthoringSwapDeploymentsDetails,CancellationToken)">
      <example>
This sample shows how to call SwapDeployments.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

AnalyzeTextAuthoringSwapDeploymentsDetails body = new AnalyzeTextAuthoringSwapDeploymentsDetails("<firstDeploymentName>", "<secondDeploymentName>");
Operation operation = client.SwapDeployments(WaitUntil.Completed, "<projectName>", body);
]]></code>
This sample shows how to call SwapDeployments with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

AnalyzeTextAuthoringSwapDeploymentsDetails body = new AnalyzeTextAuthoringSwapDeploymentsDetails("<firstDeploymentName>", "<secondDeploymentName>");
Operation operation = client.SwapDeployments(WaitUntil.Completed, "<projectName>", body);
]]></code></example>
    </member>
    <member name="SwapDeploymentsAsync(WaitUntil,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call SwapDeploymentsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

using RequestContent content = RequestContent.Create(new
{
    firstDeploymentName = "<firstDeploymentName>",
    secondDeploymentName = "<secondDeploymentName>",
});
Operation operation = await client.SwapDeploymentsAsync(WaitUntil.Completed, "<projectName>", content);
]]></code>
This sample shows how to call SwapDeploymentsAsync with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

using RequestContent content = RequestContent.Create(new
{
    firstDeploymentName = "<firstDeploymentName>",
    secondDeploymentName = "<secondDeploymentName>",
});
Operation operation = await client.SwapDeploymentsAsync(WaitUntil.Completed, "<projectName>", content);
]]></code></example>
    </member>
    <member name="SwapDeployments(WaitUntil,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call SwapDeployments.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

using RequestContent content = RequestContent.Create(new
{
    firstDeploymentName = "<firstDeploymentName>",
    secondDeploymentName = "<secondDeploymentName>",
});
Operation operation = client.SwapDeployments(WaitUntil.Completed, "<projectName>", content);
]]></code>
This sample shows how to call SwapDeployments with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

using RequestContent content = RequestContent.Create(new
{
    firstDeploymentName = "<firstDeploymentName>",
    secondDeploymentName = "<secondDeploymentName>",
});
Operation operation = client.SwapDeployments(WaitUntil.Completed, "<projectName>", content);
]]></code></example>
    </member>
    <member name="AssignDeploymentResourcesAsync(WaitUntil,string,AnalyzeTextAuthoringAssignDeploymentResourcesDetails,CancellationToken)">
      <example>
This sample shows how to call AssignDeploymentResourcesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

AnalyzeTextAuthoringAssignDeploymentResourcesDetails body = new AnalyzeTextAuthoringAssignDeploymentResourcesDetails(new AnalyzeTextAuthoringResourceMetadata[]
{
    new AnalyzeTextAuthoringResourceMetadata("<azureResourceId>", "<customDomain>", "<region>")
});
Operation operation = await client.AssignDeploymentResourcesAsync(WaitUntil.Completed, "<projectName>", body);
]]></code>
This sample shows how to call AssignDeploymentResourcesAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

AnalyzeTextAuthoringAssignDeploymentResourcesDetails body = new AnalyzeTextAuthoringAssignDeploymentResourcesDetails(new AnalyzeTextAuthoringResourceMetadata[]
{
    new AnalyzeTextAuthoringResourceMetadata("<azureResourceId>", "<customDomain>", "<region>")
});
Operation operation = await client.AssignDeploymentResourcesAsync(WaitUntil.Completed, "<projectName>", body);
]]></code></example>
    </member>
    <member name="AssignDeploymentResources(WaitUntil,string,AnalyzeTextAuthoringAssignDeploymentResourcesDetails,CancellationToken)">
      <example>
This sample shows how to call AssignDeploymentResources.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

AnalyzeTextAuthoringAssignDeploymentResourcesDetails body = new AnalyzeTextAuthoringAssignDeploymentResourcesDetails(new AnalyzeTextAuthoringResourceMetadata[]
{
    new AnalyzeTextAuthoringResourceMetadata("<azureResourceId>", "<customDomain>", "<region>")
});
Operation operation = client.AssignDeploymentResources(WaitUntil.Completed, "<projectName>", body);
]]></code>
This sample shows how to call AssignDeploymentResources with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

AnalyzeTextAuthoringAssignDeploymentResourcesDetails body = new AnalyzeTextAuthoringAssignDeploymentResourcesDetails(new AnalyzeTextAuthoringResourceMetadata[]
{
    new AnalyzeTextAuthoringResourceMetadata("<azureResourceId>", "<customDomain>", "<region>")
});
Operation operation = client.AssignDeploymentResources(WaitUntil.Completed, "<projectName>", body);
]]></code></example>
    </member>
    <member name="AssignDeploymentResourcesAsync(WaitUntil,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call AssignDeploymentResourcesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

using RequestContent content = RequestContent.Create(new
{
    resourcesMetadata = new object[]
    {
        new
        {
            azureResourceId = "<azureResourceId>",
            customDomain = "<customDomain>",
            region = "<region>",
        }
    },
});
Operation operation = await client.AssignDeploymentResourcesAsync(WaitUntil.Completed, "<projectName>", content);
]]></code>
This sample shows how to call AssignDeploymentResourcesAsync with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

using RequestContent content = RequestContent.Create(new
{
    resourcesMetadata = new object[]
    {
        new
        {
            azureResourceId = "<azureResourceId>",
            customDomain = "<customDomain>",
            region = "<region>",
        }
    },
});
Operation operation = await client.AssignDeploymentResourcesAsync(WaitUntil.Completed, "<projectName>", content);
]]></code></example>
    </member>
    <member name="AssignDeploymentResources(WaitUntil,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call AssignDeploymentResources.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

using RequestContent content = RequestContent.Create(new
{
    resourcesMetadata = new object[]
    {
        new
        {
            azureResourceId = "<azureResourceId>",
            customDomain = "<customDomain>",
            region = "<region>",
        }
    },
});
Operation operation = client.AssignDeploymentResources(WaitUntil.Completed, "<projectName>", content);
]]></code>
This sample shows how to call AssignDeploymentResources with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

using RequestContent content = RequestContent.Create(new
{
    resourcesMetadata = new object[]
    {
        new
        {
            azureResourceId = "<azureResourceId>",
            customDomain = "<customDomain>",
            region = "<region>",
        }
    },
});
Operation operation = client.AssignDeploymentResources(WaitUntil.Completed, "<projectName>", content);
]]></code></example>
    </member>
    <member name="UnassignDeploymentResourcesAsync(WaitUntil,string,AnalyzeTextAuthoringUnassignDeploymentResourcesDetails,CancellationToken)">
      <example>
This sample shows how to call UnassignDeploymentResourcesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

AnalyzeTextAuthoringUnassignDeploymentResourcesDetails body = new AnalyzeTextAuthoringUnassignDeploymentResourcesDetails(new string[] { "<assignedResourceIds>" });
Operation operation = await client.UnassignDeploymentResourcesAsync(WaitUntil.Completed, "<projectName>", body);
]]></code>
This sample shows how to call UnassignDeploymentResourcesAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

AnalyzeTextAuthoringUnassignDeploymentResourcesDetails body = new AnalyzeTextAuthoringUnassignDeploymentResourcesDetails(new string[] { "<assignedResourceIds>" });
Operation operation = await client.UnassignDeploymentResourcesAsync(WaitUntil.Completed, "<projectName>", body);
]]></code></example>
    </member>
    <member name="UnassignDeploymentResources(WaitUntil,string,AnalyzeTextAuthoringUnassignDeploymentResourcesDetails,CancellationToken)">
      <example>
This sample shows how to call UnassignDeploymentResources.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

AnalyzeTextAuthoringUnassignDeploymentResourcesDetails body = new AnalyzeTextAuthoringUnassignDeploymentResourcesDetails(new string[] { "<assignedResourceIds>" });
Operation operation = client.UnassignDeploymentResources(WaitUntil.Completed, "<projectName>", body);
]]></code>
This sample shows how to call UnassignDeploymentResources with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

AnalyzeTextAuthoringUnassignDeploymentResourcesDetails body = new AnalyzeTextAuthoringUnassignDeploymentResourcesDetails(new string[] { "<assignedResourceIds>" });
Operation operation = client.UnassignDeploymentResources(WaitUntil.Completed, "<projectName>", body);
]]></code></example>
    </member>
    <member name="UnassignDeploymentResourcesAsync(WaitUntil,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call UnassignDeploymentResourcesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

using RequestContent content = RequestContent.Create(new
{
    assignedResourceIds = new object[]
    {
        "<assignedResourceIds>"
    },
});
Operation operation = await client.UnassignDeploymentResourcesAsync(WaitUntil.Completed, "<projectName>", content);
]]></code>
This sample shows how to call UnassignDeploymentResourcesAsync with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

using RequestContent content = RequestContent.Create(new
{
    assignedResourceIds = new object[]
    {
        "<assignedResourceIds>"
    },
});
Operation operation = await client.UnassignDeploymentResourcesAsync(WaitUntil.Completed, "<projectName>", content);
]]></code></example>
    </member>
    <member name="UnassignDeploymentResources(WaitUntil,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call UnassignDeploymentResources.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

using RequestContent content = RequestContent.Create(new
{
    assignedResourceIds = new object[]
    {
        "<assignedResourceIds>"
    },
});
Operation operation = client.UnassignDeploymentResources(WaitUntil.Completed, "<projectName>", content);
]]></code>
This sample shows how to call UnassignDeploymentResources with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

using RequestContent content = RequestContent.Create(new
{
    assignedResourceIds = new object[]
    {
        "<assignedResourceIds>"
    },
});
Operation operation = client.UnassignDeploymentResources(WaitUntil.Completed, "<projectName>", content);
]]></code></example>
    </member>
    <member name="DeployProjectAsync(WaitUntil,string,string,AnalyzeTextAuthoringCreateDeploymentDetails,CancellationToken)">
      <example>
This sample shows how to call DeployProjectAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

AnalyzeTextAuthoringCreateDeploymentDetails body = new AnalyzeTextAuthoringCreateDeploymentDetails("<trainedModelLabel>");
Operation operation = await client.DeployProjectAsync(WaitUntil.Completed, "<projectName>", "<deploymentName>", body);
]]></code>
This sample shows how to call DeployProjectAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

AnalyzeTextAuthoringCreateDeploymentDetails body = new AnalyzeTextAuthoringCreateDeploymentDetails("<trainedModelLabel>")
{
    AssignedResourceIds = { "<assignedResourceIds>" },
};
Operation operation = await client.DeployProjectAsync(WaitUntil.Completed, "<projectName>", "<deploymentName>", body);
]]></code></example>
    </member>
    <member name="DeployProject(WaitUntil,string,string,AnalyzeTextAuthoringCreateDeploymentDetails,CancellationToken)">
      <example>
This sample shows how to call DeployProject.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

AnalyzeTextAuthoringCreateDeploymentDetails body = new AnalyzeTextAuthoringCreateDeploymentDetails("<trainedModelLabel>");
Operation operation = client.DeployProject(WaitUntil.Completed, "<projectName>", "<deploymentName>", body);
]]></code>
This sample shows how to call DeployProject with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

AnalyzeTextAuthoringCreateDeploymentDetails body = new AnalyzeTextAuthoringCreateDeploymentDetails("<trainedModelLabel>")
{
    AssignedResourceIds = { "<assignedResourceIds>" },
};
Operation operation = client.DeployProject(WaitUntil.Completed, "<projectName>", "<deploymentName>", body);
]]></code></example>
    </member>
    <member name="DeployProjectAsync(WaitUntil,string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call DeployProjectAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

using RequestContent content = RequestContent.Create(new
{
    trainedModelLabel = "<trainedModelLabel>",
});
Operation operation = await client.DeployProjectAsync(WaitUntil.Completed, "<projectName>", "<deploymentName>", content);
]]></code>
This sample shows how to call DeployProjectAsync with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

using RequestContent content = RequestContent.Create(new
{
    trainedModelLabel = "<trainedModelLabel>",
    assignedResourceIds = new object[]
    {
        "<assignedResourceIds>"
    },
});
Operation operation = await client.DeployProjectAsync(WaitUntil.Completed, "<projectName>", "<deploymentName>", content);
]]></code></example>
    </member>
    <member name="DeployProject(WaitUntil,string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call DeployProject.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

using RequestContent content = RequestContent.Create(new
{
    trainedModelLabel = "<trainedModelLabel>",
});
Operation operation = client.DeployProject(WaitUntil.Completed, "<projectName>", "<deploymentName>", content);
]]></code>
This sample shows how to call DeployProject with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
TextAuthoringDeployments client = new TextAnalysisAuthoringClient(endpoint, credential).GetTextAuthoringDeploymentsClient();

using RequestContent content = RequestContent.Create(new
{
    trainedModelLabel = "<trainedModelLabel>",
    assignedResourceIds = new object[]
    {
        "<assignedResourceIds>"
    },
});
Operation operation = client.DeployProject(WaitUntil.Completed, "<projectName>", "<deploymentName>", content);
]]></code></example>
    </member>
  </members>
</doc>