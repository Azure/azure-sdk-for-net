// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Language.QuestionAnswering.Inference
{
    /// <summary> Represents fields for Prebuilt query matching. Prebuilt weights will be used for giving preference to question and answer columns when quering AI search. </summary>
    public partial class PrebuiltQueryMatchingPolicy : MatchingPolicy
    {
        /// <summary> Initializes a new instance of <see cref="PrebuiltQueryMatchingPolicy"/>. </summary>
        public PrebuiltQueryMatchingPolicy()
        {
            Kind = MatchingPolicyKind.Prebuilt;
            Fields = new ChangeTrackingList<MatchingPolicyFieldsType>();
        }

        /// <summary> Initializes a new instance of <see cref="PrebuiltQueryMatchingPolicy"/>. </summary>
        /// <param name="kind"> Kind of matching policy to be applied. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="fields"> List of fields to filter during query. For ex if only "questions" is used then query will be filtered on that column. </param>
        /// <param name="disableFullMatch"> Disabling full match on query. Enabling this will give preference to qna pairs that have exact match. </param>
        internal PrebuiltQueryMatchingPolicy(MatchingPolicyKind kind, IDictionary<string, BinaryData> serializedAdditionalRawData, IList<MatchingPolicyFieldsType> fields, bool? disableFullMatch) : base(kind, serializedAdditionalRawData)
        {
            Fields = fields;
            DisableFullMatch = disableFullMatch;
        }

        /// <summary> List of fields to filter during query. For ex if only "questions" is used then query will be filtered on that column. </summary>
        public IList<MatchingPolicyFieldsType> Fields { get; }
        /// <summary> Disabling full match on query. Enabling this will give preference to qna pairs that have exact match. </summary>
        public bool? DisableFullMatch { get; set; }
    }
}
