// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.ServiceBus;

/// <summary>
/// Represents the filter actions which are allowed for the transformation of a
/// message that have been matched by a filter expression.
/// </summary>
public partial class ServiceBusFilterAction : ProvisioningConstruct
{
    /// <summary>
    /// SQL expression. e.g. MyProperty=&apos;ABC&apos;.
    /// </summary>
    public BicepValue<string> SqlExpression { get => _sqlExpression; set => _sqlExpression.Assign(value); }
    private readonly BicepValue<string> _sqlExpression;

    /// <summary>
    /// This property is reserved for future use. An integer value showing the
    /// compatibility level, currently hard-coded to 20.
    /// </summary>
    public BicepValue<int> CompatibilityLevel { get => _compatibilityLevel; set => _compatibilityLevel.Assign(value); }
    private readonly BicepValue<int> _compatibilityLevel;

    /// <summary>
    /// Value that indicates whether the rule action requires preprocessing.
    /// </summary>
    public BicepValue<bool> RequiresPreprocessing { get => _requiresPreprocessing; set => _requiresPreprocessing.Assign(value); }
    private readonly BicepValue<bool> _requiresPreprocessing;

    /// <summary>
    /// Creates a new ServiceBusFilterAction.
    /// </summary>
    public ServiceBusFilterAction()
    {
        _sqlExpression = BicepValue<string>.DefineProperty(this, "SqlExpression", ["sqlExpression"]);
        _compatibilityLevel = BicepValue<int>.DefineProperty(this, "CompatibilityLevel", ["compatibilityLevel"]);
        _requiresPreprocessing = BicepValue<bool>.DefineProperty(this, "RequiresPreprocessing", ["requiresPreprocessing"]);
    }
}
