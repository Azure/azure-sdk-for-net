// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;

namespace Azure.Provisioning.ServiceBus;

/// <summary>
/// ServiceBusRule.
/// </summary>
public partial class ServiceBusRule : Resource
{
    /// <summary>
    /// The rule name.
    /// </summary>
    public BicepValue<string> Name { get => _name; set => _name.Assign(value); }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// Represents the filter actions which are allowed for the transformation
    /// of a message that have been matched by a filter expression.
    /// </summary>
    public BicepValue<ServiceBusFilterAction> Action { get => _action; set => _action.Assign(value); }
    private readonly BicepValue<ServiceBusFilterAction> _action;

    /// <summary>
    /// Properties of correlationFilter.
    /// </summary>
    public BicepValue<ServiceBusCorrelationFilter> CorrelationFilter { get => _correlationFilter; set => _correlationFilter.Assign(value); }
    private readonly BicepValue<ServiceBusCorrelationFilter> _correlationFilter;

    /// <summary>
    /// Filter type that is evaluated against a BrokeredMessage.
    /// </summary>
    public BicepValue<ServiceBusFilterType> FilterType { get => _filterType; set => _filterType.Assign(value); }
    private readonly BicepValue<ServiceBusFilterType> _filterType;

    /// <summary>
    /// Properties of sqlFilter.
    /// </summary>
    public BicepValue<ServiceBusSqlFilter> SqlFilter { get => _sqlFilter; set => _sqlFilter.Assign(value); }
    private readonly BicepValue<ServiceBusSqlFilter> _sqlFilter;

    /// <summary>
    /// Gets the Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id { get => _id; }
    private readonly BicepValue<ResourceIdentifier> _id;

    /// <summary>
    /// The geo-location where the resource lives.
    /// </summary>
    public BicepValue<AzureLocation> Location { get => _location; }
    private readonly BicepValue<AzureLocation> _location;

    /// <summary>
    /// Gets the SystemData.
    /// </summary>
    public BicepValue<SystemData> SystemData { get => _systemData; }
    private readonly BicepValue<SystemData> _systemData;

    /// <summary>
    /// Gets or sets a reference to the parent ServiceBusSubscription.
    /// </summary>
    public ServiceBusSubscription? Parent { get => _parent!.Value; set => _parent!.Value = value; }
    private readonly ResourceReference<ServiceBusSubscription> _parent;

    /// <summary>
    /// Creates a new ServiceBusRule.
    /// </summary>
    /// <param name="resourceName">Name of the ServiceBusRule.</param>
    /// <param name="resourceVersion">Version of the ServiceBusRule.</param>
    public ServiceBusRule(string resourceName, string? resourceVersion = default)
        : base(resourceName, "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules", resourceVersion ?? "2024-01-01")
    {
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"], isRequired: true);
        _action = BicepValue<ServiceBusFilterAction>.DefineProperty(this, "Action", ["properties", "action"]);
        _correlationFilter = BicepValue<ServiceBusCorrelationFilter>.DefineProperty(this, "CorrelationFilter", ["properties", "correlationFilter"]);
        _filterType = BicepValue<ServiceBusFilterType>.DefineProperty(this, "FilterType", ["properties", "filterType"]);
        _sqlFilter = BicepValue<ServiceBusSqlFilter>.DefineProperty(this, "SqlFilter", ["properties", "sqlFilter"]);
        _id = BicepValue<ResourceIdentifier>.DefineProperty(this, "Id", ["id"], isOutput: true);
        _location = BicepValue<AzureLocation>.DefineProperty(this, "Location", ["location"], isOutput: true);
        _systemData = BicepValue<SystemData>.DefineProperty(this, "SystemData", ["systemData"], isOutput: true);
        _parent = ResourceReference<ServiceBusSubscription>.DefineResource(this, "Parent", ["parent"], isRequired: true);
    }

    /// <summary>
    /// Supported ServiceBusRule resource versions.
    /// </summary>
    public static class ResourceVersions
    {
        /// <summary>
        /// 2024-01-01.
        /// </summary>
        public static readonly string V2024_01_01 = "2024-01-01";

        /// <summary>
        /// 2021-11-01.
        /// </summary>
        public static readonly string V2021_11_01 = "2021-11-01";

        /// <summary>
        /// 2017-04-01.
        /// </summary>
        public static readonly string V2017_04_01 = "2017-04-01";
    }

    /// <summary>
    /// Creates a reference to an existing ServiceBusRule.
    /// </summary>
    /// <param name="resourceName">Name of the ServiceBusRule.</param>
    /// <param name="resourceVersion">Version of the ServiceBusRule.</param>
    /// <returns>The existing ServiceBusRule resource.</returns>
    public static ServiceBusRule FromExisting(string resourceName, string? resourceVersion = default) =>
        new(resourceName, resourceVersion) { IsExistingResource = true };
}
