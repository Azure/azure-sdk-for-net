// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;

namespace Azure.Provisioning.Redis;

/// <summary>
/// RedisPrivateEndpointConnection.
/// </summary>
public partial class RedisPrivateEndpointConnection : Resource
{
    /// <summary>
    /// The name of the private endpoint connection associated with the Azure
    /// resource.
    /// </summary>
    public BicepValue<string> Name { get => _name; set => _name.Assign(value); }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// A collection of information about the state of the connection between
    /// service consumer and provider.
    /// </summary>
    public BicepValue<RedisPrivateLinkServiceConnectionState> RedisPrivateLinkServiceConnectionState { get => _redisPrivateLinkServiceConnectionState; set => _redisPrivateLinkServiceConnectionState.Assign(value); }
    private readonly BicepValue<RedisPrivateLinkServiceConnectionState> _redisPrivateLinkServiceConnectionState;

    /// <summary>
    /// Gets the Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id { get => _id; }
    private readonly BicepValue<ResourceIdentifier> _id;

    /// <summary>
    /// Gets Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> PrivateEndpointId { get => _privateEndpointId; }
    private readonly BicepValue<ResourceIdentifier> _privateEndpointId;

    /// <summary>
    /// The provisioning state of the private endpoint connection resource.
    /// </summary>
    public BicepValue<RedisPrivateEndpointConnectionProvisioningState> RedisProvisioningState { get => _redisProvisioningState; }
    private readonly BicepValue<RedisPrivateEndpointConnectionProvisioningState> _redisProvisioningState;

    /// <summary>
    /// Gets the SystemData.
    /// </summary>
    public BicepValue<SystemData> SystemData { get => _systemData; }
    private readonly BicepValue<SystemData> _systemData;

    /// <summary>
    /// Gets or sets a reference to the parent RedisResource.
    /// </summary>
    public RedisResource? Parent { get => _parent!.Value; set => _parent!.Value = value; }
    private readonly ResourceReference<RedisResource> _parent;

    /// <summary>
    /// Creates a new RedisPrivateEndpointConnection.
    /// </summary>
    /// <param name="resourceName">Name of the RedisPrivateEndpointConnection.</param>
    /// <param name="resourceVersion">Version of the RedisPrivateEndpointConnection.</param>
    /// <param name="context">Provisioning context for this resource.</param>
    public RedisPrivateEndpointConnection(string resourceName, string? resourceVersion = default, ProvisioningContext? context = default)
        : base(resourceName, "Microsoft.Cache/redis/privateEndpointConnections", resourceVersion, context)
    {
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"], isRequired: true);
        _redisPrivateLinkServiceConnectionState = BicepValue<RedisPrivateLinkServiceConnectionState>.DefineProperty(this, "RedisPrivateLinkServiceConnectionState", ["properties", "privateLinkServiceConnectionState"]);
        _id = BicepValue<ResourceIdentifier>.DefineProperty(this, "Id", ["id"], isOutput: true);
        _privateEndpointId = BicepValue<ResourceIdentifier>.DefineProperty(this, "PrivateEndpointId", ["properties", "privateEndpoint", "id"], isOutput: true);
        _redisProvisioningState = BicepValue<RedisPrivateEndpointConnectionProvisioningState>.DefineProperty(this, "RedisProvisioningState", ["properties", "provisioningState"], isOutput: true);
        _systemData = BicepValue<SystemData>.DefineProperty(this, "SystemData", ["systemData"], isOutput: true);
        _parent = ResourceReference<RedisResource>.DefineResource(this, "Parent", ["parent"], isRequired: true);
    }

    /// <summary>
    /// Creates a reference to an existing RedisPrivateEndpointConnection.
    /// </summary>
    /// <param name="resourceName">Name of the RedisPrivateEndpointConnection.</param>
    /// <param name="resourceVersion">Version of the RedisPrivateEndpointConnection.</param>
    /// <returns>The existing RedisPrivateEndpointConnection resource.</returns>
    public static RedisPrivateEndpointConnection FromExisting(string resourceName, string? resourceVersion = default) =>
        new(resourceName, resourceVersion) { IsExistingResource = true };
}
