// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Core;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;

namespace Azure.Provisioning.SignalR;

/// <summary>
/// A class representing the SignalRSharedPrivateLinkResource data model.
/// Describes a Shared Private Link Resource
/// </summary>
public partial class SignalRSharedPrivateLinkResourceData : ProvisioningConstruct
{
    /// <summary>
    /// The group id from the provider of resource the shared private link
    /// resource is for.
    /// </summary>
    public BicepValue<string> GroupId { get => _groupId; set => _groupId.Assign(value); }
    private readonly BicepValue<string> _groupId;

    /// <summary>
    /// The resource id of the resource the shared private link resource is for.
    /// </summary>
    public BicepValue<ResourceIdentifier> PrivateLinkResourceId { get => _privateLinkResourceId; set => _privateLinkResourceId.Assign(value); }
    private readonly BicepValue<ResourceIdentifier> _privateLinkResourceId;

    /// <summary>
    /// Provisioning state of the resource.
    /// </summary>
    public BicepValue<SignalRProvisioningState> ProvisioningState { get => _provisioningState; }
    private readonly BicepValue<SignalRProvisioningState> _provisioningState;

    /// <summary>
    /// The request message for requesting approval of the shared private link
    /// resource.
    /// </summary>
    public BicepValue<string> RequestMessage { get => _requestMessage; set => _requestMessage.Assign(value); }
    private readonly BicepValue<string> _requestMessage;

    /// <summary>
    /// Status of the shared private link resource.
    /// </summary>
    public BicepValue<SignalRSharedPrivateLinkResourceStatus> Status { get => _status; }
    private readonly BicepValue<SignalRSharedPrivateLinkResourceStatus> _status;

    /// <summary>
    /// Gets the Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id { get => _id; }
    private readonly BicepValue<ResourceIdentifier> _id;

    /// <summary>
    /// Gets the Name.
    /// </summary>
    public BicepValue<string> Name { get => _name; }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// Gets the SystemData.
    /// </summary>
    public BicepValue<SystemData> SystemData { get => _systemData; }
    private readonly BicepValue<SystemData> _systemData;

    /// <summary>
    /// Creates a new SignalRSharedPrivateLinkResourceData.
    /// </summary>
    public SignalRSharedPrivateLinkResourceData()
    {
        _groupId = BicepValue<string>.DefineProperty(this, "GroupId", ["properties", "groupId"]);
        _privateLinkResourceId = BicepValue<ResourceIdentifier>.DefineProperty(this, "PrivateLinkResourceId", ["properties", "privateLinkResourceId"]);
        _provisioningState = BicepValue<SignalRProvisioningState>.DefineProperty(this, "ProvisioningState", ["properties", "provisioningState"], isOutput: true);
        _requestMessage = BicepValue<string>.DefineProperty(this, "RequestMessage", ["properties", "requestMessage"]);
        _status = BicepValue<SignalRSharedPrivateLinkResourceStatus>.DefineProperty(this, "Status", ["properties", "status"], isOutput: true);
        _id = BicepValue<ResourceIdentifier>.DefineProperty(this, "Id", ["id"], isOutput: true);
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"], isOutput: true);
        _systemData = BicepValue<SystemData>.DefineProperty(this, "SystemData", ["systemData"], isOutput: true);
    }
}
