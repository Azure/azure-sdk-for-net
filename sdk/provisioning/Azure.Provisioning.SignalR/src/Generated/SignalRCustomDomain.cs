// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;

namespace Azure.Provisioning.SignalR;

/// <summary>
/// SignalRCustomDomain.
/// </summary>
public partial class SignalRCustomDomain : Resource
{
    /// <summary>
    /// Custom domain name.
    /// </summary>
    public BicepValue<string> Name { get => _name; set => _name.Assign(value); }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// The custom domain name.
    /// </summary>
    public BicepValue<string> DomainName { get => _domainName; set => _domainName.Assign(value); }
    private readonly BicepValue<string> _domainName;

    /// <summary>
    /// Gets or sets Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> CustomCertificateId { get => _customCertificateId; set => _customCertificateId.Assign(value); }
    private readonly BicepValue<ResourceIdentifier> _customCertificateId;

    /// <summary>
    /// Gets the Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id { get => _id; }
    private readonly BicepValue<ResourceIdentifier> _id;

    /// <summary>
    /// Provisioning state of the resource.
    /// </summary>
    public BicepValue<SignalRProvisioningState> ProvisioningState { get => _provisioningState; }
    private readonly BicepValue<SignalRProvisioningState> _provisioningState;

    /// <summary>
    /// Gets the SystemData.
    /// </summary>
    public BicepValue<SystemData> SystemData { get => _systemData; }
    private readonly BicepValue<SystemData> _systemData;

    /// <summary>
    /// Gets or sets a reference to the parent SignalRService.
    /// </summary>
    public SignalRService? Parent { get => _parent!.Value; set => _parent!.Value = value; }
    private readonly ResourceReference<SignalRService> _parent;

    /// <summary>
    /// Creates a new SignalRCustomDomain.
    /// </summary>
    /// <param name="resourceName">Name of the SignalRCustomDomain.</param>
    /// <param name="resourceVersion">Version of the SignalRCustomDomain.</param>
    /// <param name="context">Provisioning context for this resource.</param>
    public SignalRCustomDomain(string resourceName, string? resourceVersion = default, ProvisioningContext? context = default)
        : base(resourceName, "Microsoft.SignalRService/signalR/customDomains", resourceVersion, context)
    {
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"], isRequired: true);
        _domainName = BicepValue<string>.DefineProperty(this, "DomainName", ["properties", "domainName"], isRequired: true);
        _customCertificateId = BicepValue<ResourceIdentifier>.DefineProperty(this, "CustomCertificateId", ["properties", "customCertificate", "id"]);
        _id = BicepValue<ResourceIdentifier>.DefineProperty(this, "Id", ["id"], isOutput: true);
        _provisioningState = BicepValue<SignalRProvisioningState>.DefineProperty(this, "ProvisioningState", ["properties", "provisioningState"], isOutput: true);
        _systemData = BicepValue<SystemData>.DefineProperty(this, "SystemData", ["systemData"], isOutput: true);
        _parent = ResourceReference<SignalRService>.DefineResource(this, "Parent", ["parent"], isRequired: true);
    }

    /// <summary>
    /// Creates a reference to an existing SignalRCustomDomain.
    /// </summary>
    /// <param name="resourceName">Name of the SignalRCustomDomain.</param>
    /// <param name="resourceVersion">Version of the SignalRCustomDomain.</param>
    /// <returns>The existing SignalRCustomDomain resource.</returns>
    public static SignalRCustomDomain FromExisting(string resourceName, string? resourceVersion = default) =>
        new(resourceName, resourceVersion) { IsExistingResource = true };
}
