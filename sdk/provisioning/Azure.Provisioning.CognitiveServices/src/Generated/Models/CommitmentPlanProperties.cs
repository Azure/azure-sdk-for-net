// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.CognitiveServices;

/// <summary>
/// Properties of Cognitive Services account commitment plan.
/// </summary>
public partial class CommitmentPlanProperties : ProvisioningConstruct
{
    /// <summary>
    /// Gets the status of the resource at the time the operation was called.
    /// </summary>
    public BicepValue<CommitmentPlanProvisioningState> ProvisioningState { get => _provisioningState; }
    private readonly BicepValue<CommitmentPlanProvisioningState> _provisioningState;

    /// <summary>
    /// Commitment plan guid.
    /// </summary>
    public BicepValue<Guid> CommitmentPlanGuid { get => _commitmentPlanGuid; set => _commitmentPlanGuid.Assign(value); }
    private readonly BicepValue<Guid> _commitmentPlanGuid;

    /// <summary>
    /// Account hosting model.
    /// </summary>
    public BicepValue<ServiceAccountHostingModel> HostingModel { get => _hostingModel; set => _hostingModel.Assign(value); }
    private readonly BicepValue<ServiceAccountHostingModel> _hostingModel;

    /// <summary>
    /// Commitment plan type.
    /// </summary>
    public BicepValue<string> PlanType { get => _planType; set => _planType.Assign(value); }
    private readonly BicepValue<string> _planType;

    /// <summary>
    /// Cognitive Services account commitment period.
    /// </summary>
    public BicepValue<CommitmentPeriod> Current { get => _current; set => _current.Assign(value); }
    private readonly BicepValue<CommitmentPeriod> _current;

    /// <summary>
    /// AutoRenew commitment plan.
    /// </summary>
    public BicepValue<bool> AutoRenew { get => _autoRenew; set => _autoRenew.Assign(value); }
    private readonly BicepValue<bool> _autoRenew;

    /// <summary>
    /// Cognitive Services account commitment period.
    /// </summary>
    public BicepValue<CommitmentPeriod> Next { get => _next; set => _next.Assign(value); }
    private readonly BicepValue<CommitmentPeriod> _next;

    /// <summary>
    /// Cognitive Services account commitment period.
    /// </summary>
    public BicepValue<CommitmentPeriod> Last { get => _last; }
    private readonly BicepValue<CommitmentPeriod> _last;

    /// <summary>
    /// The list of ProvisioningIssue.
    /// </summary>
    public BicepList<string> ProvisioningIssues { get => _provisioningIssues; }
    private readonly BicepList<string> _provisioningIssues;

    /// <summary>
    /// Creates a new CommitmentPlanProperties.
    /// </summary>
    public CommitmentPlanProperties()
    {
        _provisioningState = BicepValue<CommitmentPlanProvisioningState>.DefineProperty(this, "ProvisioningState", ["provisioningState"], isOutput: true);
        _commitmentPlanGuid = BicepValue<Guid>.DefineProperty(this, "CommitmentPlanGuid", ["commitmentPlanGuid"]);
        _hostingModel = BicepValue<ServiceAccountHostingModel>.DefineProperty(this, "HostingModel", ["hostingModel"]);
        _planType = BicepValue<string>.DefineProperty(this, "PlanType", ["planType"]);
        _current = BicepValue<CommitmentPeriod>.DefineProperty(this, "Current", ["current"]);
        _autoRenew = BicepValue<bool>.DefineProperty(this, "AutoRenew", ["autoRenew"]);
        _next = BicepValue<CommitmentPeriod>.DefineProperty(this, "Next", ["next"]);
        _last = BicepValue<CommitmentPeriod>.DefineProperty(this, "Last", ["last"], isOutput: true);
        _provisioningIssues = BicepList<string>.DefineProperty(this, "ProvisioningIssues", ["provisioningIssues"], isOutput: true);
    }
}
