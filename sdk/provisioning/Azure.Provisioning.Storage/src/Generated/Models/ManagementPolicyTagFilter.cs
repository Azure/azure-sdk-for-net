// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.Storage;

/// <summary>
/// Blob index tag based filtering for blob objects.
/// </summary>
public partial class ManagementPolicyTagFilter : ProvisioningConstruct
{
    /// <summary>
    /// This is the filter tag name, it can have 1 - 128 characters.
    /// </summary>
    public BicepValue<string> Name { get => _name; set => _name.Assign(value); }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// This is the comparison operator which is used for object comparison and
    /// filtering. Only == (equality operator) is currently supported.
    /// </summary>
    public BicepValue<string> Operator { get => _operator; set => _operator.Assign(value); }
    private readonly BicepValue<string> _operator;

    /// <summary>
    /// This is the filter tag value field used for tag based filtering, it can
    /// have 0 - 256 characters.
    /// </summary>
    public BicepValue<string> Value { get => _value; set => _value.Assign(value); }
    private readonly BicepValue<string> _value;

    /// <summary>
    /// Creates a new ManagementPolicyTagFilter.
    /// </summary>
    public ManagementPolicyTagFilter()
    {
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"]);
        _operator = BicepValue<string>.DefineProperty(this, "Operator", ["op"]);
        _value = BicepValue<string>.DefineProperty(this, "Value", ["value"]);
    }
}
