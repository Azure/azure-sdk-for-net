// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.Storage;

/// <summary>
/// The storage account blob inventory policy rules.
/// </summary>
public partial class BlobInventoryPolicySchema : ProvisioningConstruct
{
    /// <summary>
    /// Policy is enabled if set to true.
    /// </summary>
    public BicepValue<bool> IsEnabled { get => _isEnabled; set => _isEnabled.Assign(value); }
    private readonly BicepValue<bool> _isEnabled;

    /// <summary>
    /// Deprecated Property from API version 2021-04-01 onwards, the required
    /// destination container name must be specified at the rule level
    /// &apos;policy.rule.destination&apos;.
    /// </summary>
    public BicepValue<string> Destination { get => _destination; }
    private readonly BicepValue<string> _destination;

    /// <summary>
    /// The valid value is Inventory.
    /// </summary>
    public BicepValue<BlobInventoryRuleType> RuleType { get => _ruleType; set => _ruleType.Assign(value); }
    private readonly BicepValue<BlobInventoryRuleType> _ruleType;

    /// <summary>
    /// The storage account blob inventory policy rules. The rule is applied
    /// when it is enabled.
    /// </summary>
    public BicepList<BlobInventoryPolicyRule> Rules { get => _rules; set => _rules.Assign(value); }
    private readonly BicepList<BlobInventoryPolicyRule> _rules;

    /// <summary>
    /// Creates a new BlobInventoryPolicySchema.
    /// </summary>
    public BlobInventoryPolicySchema()
    {
        _isEnabled = BicepValue<bool>.DefineProperty(this, "IsEnabled", ["enabled"]);
        _destination = BicepValue<string>.DefineProperty(this, "Destination", ["destination"], isOutput: true);
        _ruleType = BicepValue<BlobInventoryRuleType>.DefineProperty(this, "RuleType", ["type"]);
        _rules = BicepList<BlobInventoryPolicyRule>.DefineProperty(this, "Rules", ["rules"]);
    }
}
