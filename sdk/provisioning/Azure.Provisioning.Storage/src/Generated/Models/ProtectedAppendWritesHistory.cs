// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.Storage;

/// <summary>
/// Protected append writes history setting for the blob container with Legal
/// holds.
/// </summary>
public partial class ProtectedAppendWritesHistory : ProvisioningConstruct
{
    /// <summary>
    /// When enabled, new blocks can be written to both &apos;Append and Bock
    /// Blobs&apos; while maintaining legal hold protection and compliance.
    /// Only new blocks can be added and any existing blocks cannot be
    /// modified or deleted.
    /// </summary>
    public BicepValue<bool> AllowProtectedAppendWritesAll { get => _allowProtectedAppendWritesAll; }
    private readonly BicepValue<bool> _allowProtectedAppendWritesAll;

    /// <summary>
    /// Returns the date and time the tag was added.
    /// </summary>
    public BicepValue<DateTimeOffset> Timestamp { get => _timestamp; }
    private readonly BicepValue<DateTimeOffset> _timestamp;

    /// <summary>
    /// Creates a new ProtectedAppendWritesHistory.
    /// </summary>
    public ProtectedAppendWritesHistory()
    {
        _allowProtectedAppendWritesAll = BicepValue<bool>.DefineProperty(this, "AllowProtectedAppendWritesAll", ["allowProtectedAppendWritesAll"], isOutput: true);
        _timestamp = BicepValue<DateTimeOffset>.DefineProperty(this, "Timestamp", ["timestamp"], isOutput: true);
    }
}
