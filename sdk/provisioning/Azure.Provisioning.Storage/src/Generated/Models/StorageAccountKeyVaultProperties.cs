// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.Storage;

/// <summary>
/// Properties of key vault.
/// </summary>
public partial class StorageAccountKeyVaultProperties : ProvisioningConstruct
{
    /// <summary>
    /// The name of KeyVault key.
    /// </summary>
    public BicepValue<string> KeyName { get => _keyName; set => _keyName.Assign(value); }
    private readonly BicepValue<string> _keyName;

    /// <summary>
    /// The version of KeyVault key.
    /// </summary>
    public BicepValue<string> KeyVersion { get => _keyVersion; set => _keyVersion.Assign(value); }
    private readonly BicepValue<string> _keyVersion;

    /// <summary>
    /// The Uri of KeyVault.
    /// </summary>
    public BicepValue<Uri> KeyVaultUri { get => _keyVaultUri; set => _keyVaultUri.Assign(value); }
    private readonly BicepValue<Uri> _keyVaultUri;

    /// <summary>
    /// The object identifier of the current versioned Key Vault Key in use.
    /// </summary>
    public BicepValue<string> CurrentVersionedKeyIdentifier { get => _currentVersionedKeyIdentifier; }
    private readonly BicepValue<string> _currentVersionedKeyIdentifier;

    /// <summary>
    /// Timestamp of last rotation of the Key Vault Key.
    /// </summary>
    public BicepValue<DateTimeOffset> LastKeyRotationTimestamp { get => _lastKeyRotationTimestamp; }
    private readonly BicepValue<DateTimeOffset> _lastKeyRotationTimestamp;

    /// <summary>
    /// This is a read only property that represents the expiration time of the
    /// current version of the customer managed key used for encryption.
    /// </summary>
    public BicepValue<DateTimeOffset> CurrentVersionedKeyExpirationTimestamp { get => _currentVersionedKeyExpirationTimestamp; }
    private readonly BicepValue<DateTimeOffset> _currentVersionedKeyExpirationTimestamp;

    /// <summary>
    /// Creates a new StorageAccountKeyVaultProperties.
    /// </summary>
    public StorageAccountKeyVaultProperties()
    {
        _keyName = BicepValue<string>.DefineProperty(this, "KeyName", ["keyname"]);
        _keyVersion = BicepValue<string>.DefineProperty(this, "KeyVersion", ["keyversion"]);
        _keyVaultUri = BicepValue<Uri>.DefineProperty(this, "KeyVaultUri", ["keyvaulturi"]);
        _currentVersionedKeyIdentifier = BicepValue<string>.DefineProperty(this, "CurrentVersionedKeyIdentifier", ["currentVersionedKeyIdentifier"], isOutput: true);
        _lastKeyRotationTimestamp = BicepValue<DateTimeOffset>.DefineProperty(this, "LastKeyRotationTimestamp", ["lastKeyRotationTimestamp"], isOutput: true);
        _currentVersionedKeyExpirationTimestamp = BicepValue<DateTimeOffset>.DefineProperty(this, "CurrentVersionedKeyExpirationTimestamp", ["currentVersionedKeyExpirationTimestamp"], isOutput: true);
    }
}
