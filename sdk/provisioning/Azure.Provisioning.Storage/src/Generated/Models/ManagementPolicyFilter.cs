// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.Storage;

/// <summary>
/// Filters limit rule actions to a subset of blobs within the storage account.
/// If multiple filters are defined, a logical AND is performed on all filters.
/// </summary>
public partial class ManagementPolicyFilter : ProvisioningConstruct
{
    /// <summary>
    /// An array of strings for prefixes to be match.
    /// </summary>
    public BicepList<string> PrefixMatch { get => _prefixMatch; set => _prefixMatch.Assign(value); }
    private readonly BicepList<string> _prefixMatch;

    /// <summary>
    /// An array of predefined enum values. Currently blockBlob supports all
    /// tiering and delete actions. Only delete actions are supported for
    /// appendBlob.
    /// </summary>
    public BicepList<string> BlobTypes { get => _blobTypes; set => _blobTypes.Assign(value); }
    private readonly BicepList<string> _blobTypes;

    /// <summary>
    /// An array of blob index tag based filters, there can be at most 10 tag
    /// filters.
    /// </summary>
    public BicepList<ManagementPolicyTagFilter> BlobIndexMatch { get => _blobIndexMatch; set => _blobIndexMatch.Assign(value); }
    private readonly BicepList<ManagementPolicyTagFilter> _blobIndexMatch;

    /// <summary>
    /// Creates a new ManagementPolicyFilter.
    /// </summary>
    public ManagementPolicyFilter()
    {
        _prefixMatch = BicepList<string>.DefineProperty(this, "PrefixMatch", ["prefixMatch"]);
        _blobTypes = BicepList<string>.DefineProperty(this, "BlobTypes", ["blobTypes"]);
        _blobIndexMatch = BicepList<ManagementPolicyTagFilter>.DefineProperty(this, "BlobIndexMatch", ["blobIndexMatch"]);
    }
}
