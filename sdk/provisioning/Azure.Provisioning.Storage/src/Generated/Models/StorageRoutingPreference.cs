// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.Storage;

/// <summary>
/// Routing preference defines the type of network, either microsoft or
/// internet routing to be used to deliver the user data, the default option
/// is microsoft routing.
/// </summary>
public partial class StorageRoutingPreference : ProvisioningConstruct
{
    /// <summary>
    /// Routing Choice defines the kind of network routing opted by the user.
    /// </summary>
    public BicepValue<StorageRoutingChoice> RoutingChoice { get => _routingChoice; set => _routingChoice.Assign(value); }
    private readonly BicepValue<StorageRoutingChoice> _routingChoice;

    /// <summary>
    /// A boolean flag which indicates whether microsoft routing storage
    /// endpoints are to be published.
    /// </summary>
    public BicepValue<bool> IsMicrosoftEndpointsPublished { get => _isMicrosoftEndpointsPublished; set => _isMicrosoftEndpointsPublished.Assign(value); }
    private readonly BicepValue<bool> _isMicrosoftEndpointsPublished;

    /// <summary>
    /// A boolean flag which indicates whether internet routing storage
    /// endpoints are to be published.
    /// </summary>
    public BicepValue<bool> IsInternetEndpointsPublished { get => _isInternetEndpointsPublished; set => _isInternetEndpointsPublished.Assign(value); }
    private readonly BicepValue<bool> _isInternetEndpointsPublished;

    /// <summary>
    /// Creates a new StorageRoutingPreference.
    /// </summary>
    public StorageRoutingPreference()
    {
        _routingChoice = BicepValue<StorageRoutingChoice>.DefineProperty(this, "RoutingChoice", ["routingChoice"]);
        _isMicrosoftEndpointsPublished = BicepValue<bool>.DefineProperty(this, "IsMicrosoftEndpointsPublished", ["publishMicrosoftEndpoints"]);
        _isInternetEndpointsPublished = BicepValue<bool>.DefineProperty(this, "IsInternetEndpointsPublished", ["publishInternetEndpoints"]);
    }
}
