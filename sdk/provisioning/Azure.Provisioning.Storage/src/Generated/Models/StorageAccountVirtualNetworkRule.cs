// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Core;
using Azure.Provisioning.Primitives;

namespace Azure.Provisioning.Storage;

/// <summary>
/// Virtual Network rule.
/// </summary>
public partial class StorageAccountVirtualNetworkRule : ProvisioningConstruct
{
    /// <summary>
    /// Resource ID of a subnet, for example:
    /// /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
    /// </summary>
    public BicepValue<ResourceIdentifier> VirtualNetworkResourceId { get => _virtualNetworkResourceId; set => _virtualNetworkResourceId.Assign(value); }
    private readonly BicepValue<ResourceIdentifier> _virtualNetworkResourceId;

    /// <summary>
    /// The action of virtual network rule.
    /// </summary>
    public BicepValue<StorageAccountNetworkRuleAction> Action { get => _action; set => _action.Assign(value); }
    private readonly BicepValue<StorageAccountNetworkRuleAction> _action;

    /// <summary>
    /// Gets the state of virtual network rule.
    /// </summary>
    public BicepValue<StorageAccountNetworkRuleState> State { get => _state; set => _state.Assign(value); }
    private readonly BicepValue<StorageAccountNetworkRuleState> _state;

    /// <summary>
    /// Creates a new StorageAccountVirtualNetworkRule.
    /// </summary>
    public StorageAccountVirtualNetworkRule()
    {
        _virtualNetworkResourceId = BicepValue<ResourceIdentifier>.DefineProperty(this, "VirtualNetworkResourceId", ["id"]);
        _action = BicepValue<StorageAccountNetworkRuleAction>.DefineProperty(this, "Action", ["action"]);
        _state = BicepValue<StorageAccountNetworkRuleState>.DefineProperty(this, "State", ["state"]);
    }
}
