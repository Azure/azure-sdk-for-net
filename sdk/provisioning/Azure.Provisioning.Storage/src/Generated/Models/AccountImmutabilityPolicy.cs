// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.Storage;

/// <summary>
/// This defines account-level immutability policy properties.
/// </summary>
public partial class AccountImmutabilityPolicy : ProvisioningConstruct
{
    /// <summary>
    /// The immutability period for the blobs in the container since the policy
    /// creation, in days.
    /// </summary>
    public BicepValue<int> ImmutabilityPeriodSinceCreationInDays { get => _immutabilityPeriodSinceCreationInDays; set => _immutabilityPeriodSinceCreationInDays.Assign(value); }
    private readonly BicepValue<int> _immutabilityPeriodSinceCreationInDays;

    /// <summary>
    /// The ImmutabilityPolicy state defines the mode of the policy. Disabled
    /// state disables the policy, Unlocked state allows increase and decrease
    /// of immutability retention time and also allows toggling
    /// allowProtectedAppendWrites property, Locked state only allows the
    /// increase of the immutability retention time. A policy can only be
    /// created in a Disabled or Unlocked state and can be toggled between the
    /// two states. Only a policy in an Unlocked state can transition to a
    /// Locked state which cannot be reverted.
    /// </summary>
    public BicepValue<AccountImmutabilityPolicyState> State { get => _state; set => _state.Assign(value); }
    private readonly BicepValue<AccountImmutabilityPolicyState> _state;

    /// <summary>
    /// This property can only be changed for disabled and unlocked time-based
    /// retention policies. When enabled, new blocks can be written to an
    /// append blob while maintaining immutability protection and compliance.
    /// Only new blocks can be added and any existing blocks cannot be
    /// modified or deleted.
    /// </summary>
    public BicepValue<bool> AllowProtectedAppendWrites { get => _allowProtectedAppendWrites; set => _allowProtectedAppendWrites.Assign(value); }
    private readonly BicepValue<bool> _allowProtectedAppendWrites;

    /// <summary>
    /// Creates a new AccountImmutabilityPolicy.
    /// </summary>
    public AccountImmutabilityPolicy()
    {
        _immutabilityPeriodSinceCreationInDays = BicepValue<int>.DefineProperty(this, "ImmutabilityPeriodSinceCreationInDays", ["immutabilityPeriodSinceCreationInDays"]);
        _state = BicepValue<AccountImmutabilityPolicyState>.DefineProperty(this, "State", ["state"]);
        _allowProtectedAppendWrites = BicepValue<bool>.DefineProperty(this, "AllowProtectedAppendWrites", ["allowProtectedAppendWrites"]);
    }
}
