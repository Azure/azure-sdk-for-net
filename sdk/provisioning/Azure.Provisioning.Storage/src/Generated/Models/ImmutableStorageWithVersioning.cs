// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.Storage;

/// <summary>
/// Object level immutability properties of the container.
/// </summary>
public partial class ImmutableStorageWithVersioning : ProvisioningConstruct
{
    /// <summary>
    /// This is an immutable property, when set to true it enables object level
    /// immutability at the container level.
    /// </summary>
    public BicepValue<bool> IsEnabled { get => _isEnabled; set => _isEnabled.Assign(value); }
    private readonly BicepValue<bool> _isEnabled;

    /// <summary>
    /// Returns the date and time the object level immutability was enabled.
    /// </summary>
    public BicepValue<DateTimeOffset> TimeStamp { get => _timeStamp; }
    private readonly BicepValue<DateTimeOffset> _timeStamp;

    /// <summary>
    /// This property denotes the container level immutability to object level
    /// immutability migration state.
    /// </summary>
    public BicepValue<ImmutableStorageWithVersioningMigrationState> MigrationState { get => _migrationState; }
    private readonly BicepValue<ImmutableStorageWithVersioningMigrationState> _migrationState;

    /// <summary>
    /// Creates a new ImmutableStorageWithVersioning.
    /// </summary>
    public ImmutableStorageWithVersioning()
    {
        _isEnabled = BicepValue<bool>.DefineProperty(this, "IsEnabled", ["enabled"]);
        _timeStamp = BicepValue<DateTimeOffset>.DefineProperty(this, "TimeStamp", ["timeStamp"], isOutput: true);
        _migrationState = BicepValue<ImmutableStorageWithVersioningMigrationState>.DefineProperty(this, "MigrationState", ["migrationState"], isOutput: true);
    }
}
