// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;

namespace Azure.Provisioning.EventGrid;

/// <summary>
/// EventGridPartnerNamespacePrivateEndpointConnection.
/// </summary>
public partial class EventGridPartnerNamespacePrivateEndpointConnection : Resource
{
    /// <summary>
    /// The name of the private endpoint connection connection.
    /// </summary>
    public BicepValue<string> Name { get => _name; set => _name.Assign(value); }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// Details about the state of the connection.
    /// </summary>
    public BicepValue<EventGridPrivateEndpointConnectionState> ConnectionState { get => _connectionState; set => _connectionState.Assign(value); }
    private readonly BicepValue<EventGridPrivateEndpointConnectionState> _connectionState;

    /// <summary>
    /// GroupIds from the private link service resource.
    /// </summary>
    public BicepList<string> GroupIds { get => _groupIds; set => _groupIds.Assign(value); }
    private readonly BicepList<string> _groupIds;

    /// <summary>
    /// Gets or sets Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> PrivateEndpointId { get => _privateEndpointId; set => _privateEndpointId.Assign(value); }
    private readonly BicepValue<ResourceIdentifier> _privateEndpointId;

    /// <summary>
    /// Provisioning state of the Private Endpoint Connection.
    /// </summary>
    public BicepValue<EventGridResourceProvisioningState> ProvisioningState { get => _provisioningState; set => _provisioningState.Assign(value); }
    private readonly BicepValue<EventGridResourceProvisioningState> _provisioningState;

    /// <summary>
    /// Gets the Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id { get => _id; }
    private readonly BicepValue<ResourceIdentifier> _id;

    /// <summary>
    /// Gets the SystemData.
    /// </summary>
    public BicepValue<SystemData> SystemData { get => _systemData; }
    private readonly BicepValue<SystemData> _systemData;

    /// <summary>
    /// Gets or sets a reference to the parent PartnerNamespace.
    /// </summary>
    public PartnerNamespace? Parent { get => _parent!.Value; set => _parent!.Value = value; }
    private readonly ResourceReference<PartnerNamespace> _parent;

    /// <summary>
    /// Creates a new EventGridPartnerNamespacePrivateEndpointConnection.
    /// </summary>
    /// <param name="resourceName">Name of the EventGridPartnerNamespacePrivateEndpointConnection.</param>
    /// <param name="resourceVersion">Version of the EventGridPartnerNamespacePrivateEndpointConnection.</param>
    /// <param name="context">Provisioning context for this resource.</param>
    public EventGridPartnerNamespacePrivateEndpointConnection(string resourceName, string? resourceVersion = default, ProvisioningContext? context = default)
        : base(resourceName, "Microsoft.EventGrid/partnerNamespaces/privateEndpointConnections", resourceVersion, context)
    {
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"], isRequired: true);
        _connectionState = BicepValue<EventGridPrivateEndpointConnectionState>.DefineProperty(this, "ConnectionState", ["properties", "privateLinkServiceConnectionState"]);
        _groupIds = BicepList<string>.DefineProperty(this, "GroupIds", ["properties", "groupIds"]);
        _privateEndpointId = BicepValue<ResourceIdentifier>.DefineProperty(this, "PrivateEndpointId", ["properties", "privateEndpoint", "id"]);
        _provisioningState = BicepValue<EventGridResourceProvisioningState>.DefineProperty(this, "ProvisioningState", ["properties", "provisioningState"]);
        _id = BicepValue<ResourceIdentifier>.DefineProperty(this, "Id", ["id"], isOutput: true);
        _systemData = BicepValue<SystemData>.DefineProperty(this, "SystemData", ["systemData"], isOutput: true);
        _parent = ResourceReference<PartnerNamespace>.DefineResource(this, "Parent", ["parent"], isRequired: true);
    }

    /// <summary>
    /// Creates a reference to an existing
    /// EventGridPartnerNamespacePrivateEndpointConnection.
    /// </summary>
    /// <param name="resourceName">Name of the EventGridPartnerNamespacePrivateEndpointConnection.</param>
    /// <param name="resourceVersion">Version of the EventGridPartnerNamespacePrivateEndpointConnection.</param>
    /// <returns>The existing EventGridPartnerNamespacePrivateEndpointConnection resource.</returns>
    public static EventGridPartnerNamespacePrivateEndpointConnection FromExisting(string resourceName, string? resourceVersion = default) =>
        new(resourceName, resourceVersion) { IsExistingResource = true };
}
