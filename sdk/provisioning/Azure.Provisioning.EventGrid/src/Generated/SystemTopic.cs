// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;

namespace Azure.Provisioning.EventGrid;

/// <summary>
/// SystemTopic.
/// </summary>
public partial class SystemTopic : Resource
{
    /// <summary>
    /// Name of the system topic.
    /// </summary>
    public BicepValue<string> Name { get => _name; set => _name.Assign(value); }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// Gets or sets the Location.
    /// </summary>
    public BicepValue<AzureLocation> Location { get => _location; set => _location.Assign(value); }
    private readonly BicepValue<AzureLocation> _location;

    /// <summary>
    /// Identity information for the resource.
    /// </summary>
    public BicepValue<ManagedServiceIdentity> Identity { get => _identity; set => _identity.Assign(value); }
    private readonly BicepValue<ManagedServiceIdentity> _identity;

    /// <summary>
    /// Source for the system topic.
    /// </summary>
    public BicepValue<ResourceIdentifier> Source { get => _source; set => _source.Assign(value); }
    private readonly BicepValue<ResourceIdentifier> _source;

    /// <summary>
    /// Gets or sets the Tags.
    /// </summary>
    public BicepDictionary<string> Tags { get => _tags; set => _tags.Assign(value); }
    private readonly BicepDictionary<string> _tags;

    /// <summary>
    /// TopicType for the system topic.
    /// </summary>
    public BicepValue<string> TopicType { get => _topicType; set => _topicType.Assign(value); }
    private readonly BicepValue<string> _topicType;

    /// <summary>
    /// Gets the Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id { get => _id; }
    private readonly BicepValue<ResourceIdentifier> _id;

    /// <summary>
    /// Metric resource id for the system topic.
    /// </summary>
    public BicepValue<Guid> MetricResourceId { get => _metricResourceId; }
    private readonly BicepValue<Guid> _metricResourceId;

    /// <summary>
    /// Provisioning state of the system topic.
    /// </summary>
    public BicepValue<EventGridResourceProvisioningState> ProvisioningState { get => _provisioningState; }
    private readonly BicepValue<EventGridResourceProvisioningState> _provisioningState;

    /// <summary>
    /// Gets the SystemData.
    /// </summary>
    public BicepValue<SystemData> SystemData { get => _systemData; }
    private readonly BicepValue<SystemData> _systemData;

    /// <summary>
    /// Creates a new SystemTopic.
    /// </summary>
    /// <param name="resourceName">Name of the SystemTopic.</param>
    /// <param name="resourceVersion">Version of the SystemTopic.</param>
    public SystemTopic(string resourceName, string? resourceVersion = default)
        : base(resourceName, "Microsoft.EventGrid/systemTopics", resourceVersion ?? "2022-06-15")
    {
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"], isRequired: true);
        _location = BicepValue<AzureLocation>.DefineProperty(this, "Location", ["location"], isRequired: true);
        _identity = BicepValue<ManagedServiceIdentity>.DefineProperty(this, "Identity", ["identity"]);
        _source = BicepValue<ResourceIdentifier>.DefineProperty(this, "Source", ["properties", "source"]);
        _tags = BicepDictionary<string>.DefineProperty(this, "Tags", ["tags"]);
        _topicType = BicepValue<string>.DefineProperty(this, "TopicType", ["properties", "topicType"]);
        _id = BicepValue<ResourceIdentifier>.DefineProperty(this, "Id", ["id"], isOutput: true);
        _metricResourceId = BicepValue<Guid>.DefineProperty(this, "MetricResourceId", ["properties", "metricResourceId"], isOutput: true);
        _provisioningState = BicepValue<EventGridResourceProvisioningState>.DefineProperty(this, "ProvisioningState", ["properties", "provisioningState"], isOutput: true);
        _systemData = BicepValue<SystemData>.DefineProperty(this, "SystemData", ["systemData"], isOutput: true);
    }

    /// <summary>
    /// Supported SystemTopic resource versions.
    /// </summary>
    public static class ResourceVersions
    {
        /// <summary>
        /// 2024-06-01-preview.
        /// </summary>
        public static readonly string V2024_06_01_preview = "2024-06-01-preview";

        /// <summary>
        /// 2022-06-15.
        /// </summary>
        public static readonly string V2022_06_15 = "2022-06-15";

        /// <summary>
        /// 2021-12-01.
        /// </summary>
        public static readonly string V2021_12_01 = "2021-12-01";
    }

    /// <summary>
    /// Creates a reference to an existing SystemTopic.
    /// </summary>
    /// <param name="resourceName">Name of the SystemTopic.</param>
    /// <param name="resourceVersion">Version of the SystemTopic.</param>
    /// <returns>The existing SystemTopic resource.</returns>
    public static SystemTopic FromExisting(string resourceName, string? resourceVersion = default) =>
        new(resourceName, resourceVersion) { IsExistingResource = true };
}
