// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.EventGrid;

/// <summary>
/// Properties of the corresponding partner destination of a Channel.
/// Please note
/// Azure.ResourceManager.EventGrid.Models.PartnerDestinationInfo is the base
/// class. According to the scenario, a derived class of the base class might
/// need to be assigned here, or this property needs to be casted to one of
/// the possible derived classes.             The available derived classes
/// include
/// Azure.ResourceManager.EventGrid.Models.WebhookPartnerDestinationInfo.
/// </summary>
public partial class PartnerDestinationInfo : ProvisioningConstruct
{
    /// <summary>
    /// Azure subscription ID of the subscriber. The partner destination
    /// associated with the channel will be             created under this
    /// Azure subscription.
    /// </summary>
    public BicepValue<string> AzureSubscriptionId { get => _azureSubscriptionId; set => _azureSubscriptionId.Assign(value); }
    private readonly BicepValue<string> _azureSubscriptionId;

    /// <summary>
    /// Azure Resource Group of the subscriber. The partner destination
    /// associated with the channel will be             created under this
    /// resource group.
    /// </summary>
    public BicepValue<string> ResourceGroupName { get => _resourceGroupName; set => _resourceGroupName.Assign(value); }
    private readonly BicepValue<string> _resourceGroupName;

    /// <summary>
    /// Name of the partner destination associated with the channel.
    /// </summary>
    public BicepValue<string> Name { get => _name; set => _name.Assign(value); }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// Additional context of the partner destination endpoint.
    /// </summary>
    public BicepValue<string> EndpointServiceContext { get => _endpointServiceContext; set => _endpointServiceContext.Assign(value); }
    private readonly BicepValue<string> _endpointServiceContext;

    /// <summary>
    /// Change history of the resource move.
    /// </summary>
    public BicepList<ResourceMoveChangeHistory> ResourceMoveChangeHistory { get => _resourceMoveChangeHistory; set => _resourceMoveChangeHistory.Assign(value); }
    private readonly BicepList<ResourceMoveChangeHistory> _resourceMoveChangeHistory;

    /// <summary>
    /// Creates a new PartnerDestinationInfo.
    /// </summary>
    public PartnerDestinationInfo()
    {
        _azureSubscriptionId = BicepValue<string>.DefineProperty(this, "AzureSubscriptionId", ["azureSubscriptionId"]);
        _resourceGroupName = BicepValue<string>.DefineProperty(this, "ResourceGroupName", ["resourceGroupName"]);
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"]);
        _endpointServiceContext = BicepValue<string>.DefineProperty(this, "EndpointServiceContext", ["endpointServiceContext"]);
        _resourceMoveChangeHistory = BicepList<ResourceMoveChangeHistory>.DefineProperty(this, "ResourceMoveChangeHistory", ["resourceMoveChangeHistory"]);
    }
}
