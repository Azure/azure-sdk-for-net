// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.EventGrid;

/// <summary>
/// Properties of the Topic Spaces Configuration.
/// </summary>
public partial class TopicSpacesConfiguration : ProvisioningConstruct
{
    /// <summary>
    /// Indicate if Topic Spaces Configuration is enabled for the namespace.
    /// Default is Disabled.
    /// </summary>
    public BicepValue<TopicSpacesConfigurationState> State { get => _state; set => _state.Assign(value); }
    private readonly BicepValue<TopicSpacesConfigurationState> _state;

    /// <summary>
    /// Fully qualified Azure Resource Id for the Event Grid Topic to which
    /// events will be routed to from TopicSpaces under a namespace.
    /// This property should be in the following format
    /// &apos;/subscriptions/{subId}/resourcegroups/{resourceGroupName}/providers/microsoft.EventGrid/topics/{topicName}&apos;.
    /// This topic should reside in the same region where
    /// namespace is located.
    /// </summary>
    public BicepValue<string> RouteTopicResourceId { get => _routeTopicResourceId; set => _routeTopicResourceId.Assign(value); }
    private readonly BicepValue<string> _routeTopicResourceId;

    /// <summary>
    /// The endpoint for the topic spaces configuration. This is a read-only
    /// property.
    /// </summary>
    public BicepValue<string> Hostname { get => _hostname; }
    private readonly BicepValue<string> _hostname;

    /// <summary>
    /// Routing enrichments for topic spaces configuration.
    /// </summary>
    public BicepValue<RoutingEnrichments> RoutingEnrichments { get => _routingEnrichments; set => _routingEnrichments.Assign(value); }
    private readonly BicepValue<RoutingEnrichments> _routingEnrichments;

    /// <summary>
    /// Client authentication settings for topic spaces configuration.
    /// </summary>
    public BicepValue<ClientAuthenticationSettings> ClientAuthentication { get => _clientAuthentication; set => _clientAuthentication.Assign(value); }
    private readonly BicepValue<ClientAuthenticationSettings> _clientAuthentication;

    /// <summary>
    /// The maximum session expiry in hours. The property default value is 1
    /// hour.             Min allowed value is 1 hour and max allowed value is
    /// 8 hours.
    /// </summary>
    public BicepValue<int> MaximumSessionExpiryInHours { get => _maximumSessionExpiryInHours; set => _maximumSessionExpiryInHours.Assign(value); }
    private readonly BicepValue<int> _maximumSessionExpiryInHours;

    /// <summary>
    /// The maximum number of sessions per authentication name. The property
    /// default value is 1.             Min allowed value is 1 and max allowed
    /// value is 100.
    /// </summary>
    public BicepValue<int> MaximumClientSessionsPerAuthenticationName { get => _maximumClientSessionsPerAuthenticationName; set => _maximumClientSessionsPerAuthenticationName.Assign(value); }
    private readonly BicepValue<int> _maximumClientSessionsPerAuthenticationName;

    /// <summary>
    /// Routing identity info for topic spaces configuration.
    /// </summary>
    public BicepValue<RoutingIdentityInfo> RoutingIdentityInfo { get => _routingIdentityInfo; set => _routingIdentityInfo.Assign(value); }
    private readonly BicepValue<RoutingIdentityInfo> _routingIdentityInfo;

    /// <summary>
    /// List of custom domain configurations for the namespace.
    /// </summary>
    public BicepList<CustomDomainConfiguration> CustomDomains { get => _customDomains; set => _customDomains.Assign(value); }
    private readonly BicepList<CustomDomainConfiguration> _customDomains;

    /// <summary>
    /// Creates a new TopicSpacesConfiguration.
    /// </summary>
    public TopicSpacesConfiguration()
    {
        _state = BicepValue<TopicSpacesConfigurationState>.DefineProperty(this, "State", ["state"]);
        _routeTopicResourceId = BicepValue<string>.DefineProperty(this, "RouteTopicResourceId", ["routeTopicResourceId"]);
        _hostname = BicepValue<string>.DefineProperty(this, "Hostname", ["hostname"], isOutput: true);
        _routingEnrichments = BicepValue<RoutingEnrichments>.DefineProperty(this, "RoutingEnrichments", ["routingEnrichments"]);
        _clientAuthentication = BicepValue<ClientAuthenticationSettings>.DefineProperty(this, "ClientAuthentication", ["clientAuthentication"]);
        _maximumSessionExpiryInHours = BicepValue<int>.DefineProperty(this, "MaximumSessionExpiryInHours", ["maximumSessionExpiryInHours"]);
        _maximumClientSessionsPerAuthenticationName = BicepValue<int>.DefineProperty(this, "MaximumClientSessionsPerAuthenticationName", ["maximumClientSessionsPerAuthenticationName"]);
        _routingIdentityInfo = BicepValue<RoutingIdentityInfo>.DefineProperty(this, "RoutingIdentityInfo", ["routingIdentityInfo"]);
        _customDomains = BicepList<CustomDomainConfiguration>.DefineProperty(this, "CustomDomains", ["customDomains"]);
    }
}
