// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Core;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.EventGrid;

/// <summary>
/// Information about the storage queue destination for an event subscription.
/// </summary>
public partial class StorageQueueEventSubscriptionDestination : EventSubscriptionDestination
{
    /// <summary>
    /// The Azure Resource ID of the storage account that contains the queue
    /// that is the destination of an event subscription.
    /// </summary>
    public BicepValue<ResourceIdentifier> ResourceId { get => _resourceId; set => _resourceId.Assign(value); }
    private readonly BicepValue<ResourceIdentifier> _resourceId;

    /// <summary>
    /// The name of the Storage queue under a storage account that is the
    /// destination of an event subscription.
    /// </summary>
    public BicepValue<string> QueueName { get => _queueName; set => _queueName.Assign(value); }
    private readonly BicepValue<string> _queueName;

    /// <summary>
    /// Storage queue message time to live in seconds. This value cannot be
    /// zero or negative with the exception of using -1 to indicate that the
    /// Time To Live of the message is Infinite.
    /// </summary>
    public BicepValue<long> QueueMessageTimeToLiveInSeconds { get => _queueMessageTimeToLiveInSeconds; set => _queueMessageTimeToLiveInSeconds.Assign(value); }
    private readonly BicepValue<long> _queueMessageTimeToLiveInSeconds;

    /// <summary>
    /// Creates a new StorageQueueEventSubscriptionDestination.
    /// </summary>
    public StorageQueueEventSubscriptionDestination() : base()
    {
        BicepValue<string>.DefineProperty(this, "endpointType", ["endpointType"], defaultValue: "StorageQueue");
        _resourceId = BicepValue<ResourceIdentifier>.DefineProperty(this, "ResourceId", ["properties", "resourceId"]);
        _queueName = BicepValue<string>.DefineProperty(this, "QueueName", ["properties", "queueName"]);
        _queueMessageTimeToLiveInSeconds = BicepValue<long>.DefineProperty(this, "QueueMessageTimeToLiveInSeconds", ["properties", "queueMessageTimeToLiveInSeconds"]);
    }
}
