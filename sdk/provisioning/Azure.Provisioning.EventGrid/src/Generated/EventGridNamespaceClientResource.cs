// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;

namespace Azure.Provisioning.EventGrid;

/// <summary>
/// EventGridNamespaceClientResource.
/// </summary>
public partial class EventGridNamespaceClientResource : Resource
{
    /// <summary>
    /// The client name.
    /// </summary>
    public BicepValue<string> Name { get => _name; set => _name.Assign(value); }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// Attributes for the client. Supported values are int, bool, string,
    /// string[].             Example:             &quot;attributes&quot;: {
    /// &quot;room&quot;: &quot;345&quot;, &quot;floor&quot;: 12,
    /// &quot;deviceTypes&quot;: [&quot;Fan&quot;, &quot;Light&quot;] }
    /// To assign an object to the value of this
    /// property use
    /// System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions).
    /// To assign an already formatted json string to
    /// this property use System.BinaryData.FromString(System.String).
    /// Examples:
    /// BinaryData.FromObjectAsJson(&quot;foo&quot;)Creates a
    /// payload of
    /// &quot;foo&quot;.BinaryData.FromString(&quot;\&quot;foo\&quot;&quot;)Creates
    /// a payload of &quot;foo&quot;.BinaryData.FromObjectAsJson(new { key =
    /// &quot;value&quot; })Creates a payload of { &quot;key&quot;:
    /// &quot;value&quot; }.BinaryData.FromString(&quot;{\&quot;key\&quot;:
    /// \&quot;value\&quot;}&quot;)Creates a payload of { &quot;key&quot;:
    /// &quot;value&quot; }.
    /// </summary>
    public BicepDictionary<BinaryData> Attributes { get => _attributes; set => _attributes.Assign(value); }
    private readonly BicepDictionary<BinaryData> _attributes;

    /// <summary>
    /// The name presented by the client for authentication. The default value
    /// is the name of the resource.
    /// </summary>
    public BicepValue<string> AuthenticationName { get => _authenticationName; set => _authenticationName.Assign(value); }
    private readonly BicepValue<string> _authenticationName;

    /// <summary>
    /// The client certificate authentication information.
    /// </summary>
    public BicepValue<ClientCertificateAuthentication> ClientCertificateAuthentication { get => _clientCertificateAuthentication; set => _clientCertificateAuthentication.Assign(value); }
    private readonly BicepValue<ClientCertificateAuthentication> _clientCertificateAuthentication;

    /// <summary>
    /// Description for the Client resource.
    /// </summary>
    public BicepValue<string> Description { get => _description; set => _description.Assign(value); }
    private readonly BicepValue<string> _description;

    /// <summary>
    /// Indicates if the client is enabled or not. Default value is Enabled.
    /// </summary>
    public BicepValue<EventGridNamespaceClientState> State { get => _state; set => _state.Assign(value); }
    private readonly BicepValue<EventGridNamespaceClientState> _state;

    /// <summary>
    /// Gets the Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id { get => _id; }
    private readonly BicepValue<ResourceIdentifier> _id;

    /// <summary>
    /// Provisioning state of the Client resource.
    /// </summary>
    public BicepValue<EventGridNamespaceClientProvisioningState> ProvisioningState { get => _provisioningState; }
    private readonly BicepValue<EventGridNamespaceClientProvisioningState> _provisioningState;

    /// <summary>
    /// Gets the SystemData.
    /// </summary>
    public BicepValue<SystemData> SystemData { get => _systemData; }
    private readonly BicepValue<SystemData> _systemData;

    /// <summary>
    /// Gets or sets a reference to the parent EventGridNamespace.
    /// </summary>
    public EventGridNamespace? Parent { get => _parent!.Value; set => _parent!.Value = value; }
    private readonly ResourceReference<EventGridNamespace> _parent;

    /// <summary>
    /// Creates a new EventGridNamespaceClientResource.
    /// </summary>
    /// <param name="resourceName">Name of the EventGridNamespaceClientResource.</param>
    /// <param name="resourceVersion">Version of the EventGridNamespaceClientResource.</param>
    public EventGridNamespaceClientResource(string resourceName, string? resourceVersion = default)
        : base(resourceName, "Microsoft.EventGrid/namespaces/clients", resourceVersion ?? "2024-06-01-preview")
    {
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"], isRequired: true);
        _attributes = BicepDictionary<BinaryData>.DefineProperty(this, "Attributes", ["properties", "attributes"]);
        _authenticationName = BicepValue<string>.DefineProperty(this, "AuthenticationName", ["properties", "authenticationName"]);
        _clientCertificateAuthentication = BicepValue<ClientCertificateAuthentication>.DefineProperty(this, "ClientCertificateAuthentication", ["properties", "clientCertificateAuthentication"]);
        _description = BicepValue<string>.DefineProperty(this, "Description", ["properties", "description"]);
        _state = BicepValue<EventGridNamespaceClientState>.DefineProperty(this, "State", ["properties", "state"]);
        _id = BicepValue<ResourceIdentifier>.DefineProperty(this, "Id", ["id"], isOutput: true);
        _provisioningState = BicepValue<EventGridNamespaceClientProvisioningState>.DefineProperty(this, "ProvisioningState", ["properties", "provisioningState"], isOutput: true);
        _systemData = BicepValue<SystemData>.DefineProperty(this, "SystemData", ["systemData"], isOutput: true);
        _parent = ResourceReference<EventGridNamespace>.DefineResource(this, "Parent", ["parent"], isRequired: true);
    }

    /// <summary>
    /// Supported EventGridNamespaceClientResource resource versions.
    /// </summary>
    public static class ResourceVersions
    {
        /// <summary>
        /// 2024-06-01-preview.
        /// </summary>
        public static readonly string V2024_06_01_preview = "2024-06-01-preview";
    }

    /// <summary>
    /// Creates a reference to an existing EventGridNamespaceClientResource.
    /// </summary>
    /// <param name="resourceName">Name of the EventGridNamespaceClientResource.</param>
    /// <param name="resourceVersion">Version of the EventGridNamespaceClientResource.</param>
    /// <returns>The existing EventGridNamespaceClientResource resource.</returns>
    public static EventGridNamespaceClientResource FromExisting(string resourceName, string? resourceVersion = default) =>
        new(resourceName, resourceVersion) { IsExistingResource = true };
}
