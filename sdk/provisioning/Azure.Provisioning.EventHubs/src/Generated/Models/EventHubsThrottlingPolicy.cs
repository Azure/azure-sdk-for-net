// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.EventHubs;

/// <summary>
/// Properties of the throttling policy.
/// </summary>
public partial class EventHubsThrottlingPolicy : EventHubsApplicationGroupPolicy
{
    /// <summary>
    /// The Threshold limit above which the application group will be
    /// throttled.Rate limit is always per second.
    /// </summary>
    public BicepValue<long> RateLimitThreshold { get => _rateLimitThreshold; set => _rateLimitThreshold.Assign(value); }
    private readonly BicepValue<long> _rateLimitThreshold;

    /// <summary>
    /// Metric Id on which the throttle limit should be set, MetricId can be
    /// discovered by hovering over Metric in the Metrics section of Event Hub
    /// Namespace inside Azure Portal.
    /// </summary>
    public BicepValue<EventHubsMetricId> MetricId { get => _metricId; set => _metricId.Assign(value); }
    private readonly BicepValue<EventHubsMetricId> _metricId;

    /// <summary>
    /// Creates a new EventHubsThrottlingPolicy.
    /// </summary>
    public EventHubsThrottlingPolicy() : base()
    {
        BicepValue<string>.DefineProperty(this, "type", ["type"], defaultValue: "ThrottlingPolicy");
        _rateLimitThreshold = BicepValue<long>.DefineProperty(this, "RateLimitThreshold", ["rateLimitThreshold"]);
        _metricId = BicepValue<EventHubsMetricId>.DefineProperty(this, "MetricId", ["metricId"]);
    }
}
