// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;

namespace Azure.Provisioning.FrontDoor;

/// <summary>
/// FrontDoorResource.
/// </summary>
public partial class FrontDoorResource : ProvisionableResource
{
    /// <summary>
    /// Name of the Front Door which is globally unique.
    /// </summary>
    public BicepValue<string> Name 
    {
        get { Initialize(); return _name!; }
        set { Initialize(); _name!.Assign(value); }
    }
    private BicepValue<string>? _name;

    /// <summary>
    /// Gets or sets the Location.
    /// </summary>
    public BicepValue<AzureLocation> Location 
    {
        get { Initialize(); return _location!; }
        set { Initialize(); _location!.Assign(value); }
    }
    private BicepValue<AzureLocation>? _location;

    /// <summary>
    /// Backend pools available to routing rules.
    /// </summary>
    public BicepList<FrontDoorBackendPool> BackendPools 
    {
        get { Initialize(); return _backendPools!; }
        set { Initialize(); _backendPools!.Assign(value); }
    }
    private BicepList<FrontDoorBackendPool>? _backendPools;

    /// <summary>
    /// Settings for all backendPools.
    /// </summary>
    public BackendPoolsSettings BackendPoolsSettings 
    {
        get { Initialize(); return _backendPoolsSettings!; }
        set { Initialize(); AssignOrReplace(ref _backendPoolsSettings, value); }
    }
    private BackendPoolsSettings? _backendPoolsSettings;

    /// <summary>
    /// Operational status of the Front Door load balancer. Permitted values
    /// are &apos;Enabled&apos; or &apos;Disabled&apos;.
    /// </summary>
    public BicepValue<FrontDoorEnabledState> EnabledState 
    {
        get { Initialize(); return _enabledState!; }
        set { Initialize(); _enabledState!.Assign(value); }
    }
    private BicepValue<FrontDoorEnabledState>? _enabledState;

    /// <summary>
    /// A friendly name for the frontDoor.
    /// </summary>
    public BicepValue<string> FriendlyName 
    {
        get { Initialize(); return _friendlyName!; }
        set { Initialize(); _friendlyName!.Assign(value); }
    }
    private BicepValue<string>? _friendlyName;

    /// <summary>
    /// Frontend endpoints available to routing rules.
    /// </summary>
    public BicepList<FrontendEndpointData> FrontendEndpoints 
    {
        get { Initialize(); return _frontendEndpoints!; }
        set { Initialize(); _frontendEndpoints!.Assign(value); }
    }
    private BicepList<FrontendEndpointData>? _frontendEndpoints;

    /// <summary>
    /// Health probe settings associated with this Front Door instance.
    /// </summary>
    public BicepList<FrontDoorHealthProbeSettingsData> HealthProbeSettings 
    {
        get { Initialize(); return _healthProbeSettings!; }
        set { Initialize(); _healthProbeSettings!.Assign(value); }
    }
    private BicepList<FrontDoorHealthProbeSettingsData>? _healthProbeSettings;

    /// <summary>
    /// Load balancing settings associated with this Front Door instance.
    /// </summary>
    public BicepList<FrontDoorLoadBalancingSettingsData> LoadBalancingSettings 
    {
        get { Initialize(); return _loadBalancingSettings!; }
        set { Initialize(); _loadBalancingSettings!.Assign(value); }
    }
    private BicepList<FrontDoorLoadBalancingSettingsData>? _loadBalancingSettings;

    /// <summary>
    /// Routing rules associated with this Front Door.
    /// </summary>
    public BicepList<RoutingRuleData> RoutingRules 
    {
        get { Initialize(); return _routingRules!; }
        set { Initialize(); _routingRules!.Assign(value); }
    }
    private BicepList<RoutingRuleData>? _routingRules;

    /// <summary>
    /// Gets or sets the Tags.
    /// </summary>
    public BicepDictionary<string> Tags 
    {
        get { Initialize(); return _tags!; }
        set { Initialize(); _tags!.Assign(value); }
    }
    private BicepDictionary<string>? _tags;

    /// <summary>
    /// The host that each frontendEndpoint must CNAME to.
    /// </summary>
    public BicepValue<string> Cname 
    {
        get { Initialize(); return _cname!; }
    }
    private BicepValue<string>? _cname;

    /// <summary>
    /// Key-Value pair representing additional properties for frontdoor.
    /// </summary>
    public BicepDictionary<string> ExtendedProperties 
    {
        get { Initialize(); return _extendedProperties!; }
    }
    private BicepDictionary<string>? _extendedProperties;

    /// <summary>
    /// The Id of the frontdoor.
    /// </summary>
    public BicepValue<string> FrontdoorId 
    {
        get { Initialize(); return _frontdoorId!; }
    }
    private BicepValue<string>? _frontdoorId;

    /// <summary>
    /// Gets the Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id 
    {
        get { Initialize(); return _id!; }
    }
    private BicepValue<ResourceIdentifier>? _id;

    /// <summary>
    /// Provisioning state of the Front Door.
    /// </summary>
    public BicepValue<string> ProvisioningState 
    {
        get { Initialize(); return _provisioningState!; }
    }
    private BicepValue<string>? _provisioningState;

    /// <summary>
    /// Resource status of the Front Door.
    /// </summary>
    public BicepValue<FrontDoorResourceState> ResourceState 
    {
        get { Initialize(); return _resourceState!; }
    }
    private BicepValue<FrontDoorResourceState>? _resourceState;

    /// <summary>
    /// Rules Engine Configurations available to routing rules.
    /// </summary>
    public BicepList<FrontDoorRulesEngine> RulesEngines 
    {
        get { Initialize(); return _rulesEngines!; }
    }
    private BicepList<FrontDoorRulesEngine>? _rulesEngines;

    /// <summary>
    /// Gets the SystemData.
    /// </summary>
    public SystemData SystemData 
    {
        get { Initialize(); return _systemData!; }
    }
    private SystemData? _systemData;

    /// <summary>
    /// Creates a new FrontDoorResource.
    /// </summary>
    /// <param name="bicepIdentifier">
    /// The the Bicep identifier name of the FrontDoorResource resource.  This
    /// can be used to refer to the resource in expressions, but is not the
    /// Azure name of the resource.  This value can contain letters, numbers,
    /// and underscores.
    /// </param>
    /// <param name="resourceVersion">Version of the FrontDoorResource.</param>
    public FrontDoorResource(string bicepIdentifier, string? resourceVersion = default)
        : base(bicepIdentifier, "Microsoft.Network/frontDoors", resourceVersion ?? "2021-06-01")
    {
    }

    /// <summary>
    /// Define all the provisionable properties of FrontDoorResource.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _name = DefineProperty<string>("Name", ["name"], isRequired: true);
        _location = DefineProperty<AzureLocation>("Location", ["location"], isRequired: true);
        _backendPools = DefineListProperty<FrontDoorBackendPool>("BackendPools", ["properties", "backendPools"]);
        _backendPoolsSettings = DefineModelProperty<BackendPoolsSettings>("BackendPoolsSettings", ["properties", "backendPoolsSettings"]);
        _enabledState = DefineProperty<FrontDoorEnabledState>("EnabledState", ["properties", "enabledState"]);
        _friendlyName = DefineProperty<string>("FriendlyName", ["properties", "friendlyName"]);
        _frontendEndpoints = DefineListProperty<FrontendEndpointData>("FrontendEndpoints", ["properties", "frontendEndpoints"]);
        _healthProbeSettings = DefineListProperty<FrontDoorHealthProbeSettingsData>("HealthProbeSettings", ["properties", "healthProbeSettings"]);
        _loadBalancingSettings = DefineListProperty<FrontDoorLoadBalancingSettingsData>("LoadBalancingSettings", ["properties", "loadBalancingSettings"]);
        _routingRules = DefineListProperty<RoutingRuleData>("RoutingRules", ["properties", "routingRules"]);
        _tags = DefineDictionaryProperty<string>("Tags", ["tags"]);
        _cname = DefineProperty<string>("Cname", ["properties", "cname"], isOutput: true);
        _extendedProperties = DefineDictionaryProperty<string>("ExtendedProperties", ["properties", "extendedProperties"], isOutput: true);
        _frontdoorId = DefineProperty<string>("FrontdoorId", ["properties", "frontdoorId"], isOutput: true);
        _id = DefineProperty<ResourceIdentifier>("Id", ["id"], isOutput: true);
        _provisioningState = DefineProperty<string>("ProvisioningState", ["properties", "provisioningState"], isOutput: true);
        _resourceState = DefineProperty<FrontDoorResourceState>("ResourceState", ["properties", "resourceState"], isOutput: true);
        _rulesEngines = DefineListProperty<FrontDoorRulesEngine>("RulesEngines", ["properties", "rulesEngines"], isOutput: true);
        _systemData = DefineModelProperty<SystemData>("SystemData", ["systemData"], isOutput: true);
    }

    /// <summary>
    /// Supported FrontDoorResource resource versions.
    /// </summary>
    public static class ResourceVersions
    {
        /// <summary>
        /// 2021-06-01.
        /// </summary>
        public static readonly string V2021_06_01 = "2021-06-01";

        /// <summary>
        /// 2020-07-01.
        /// </summary>
        public static readonly string V2020_07_01 = "2020-07-01";

        /// <summary>
        /// 2020-05-01.
        /// </summary>
        public static readonly string V2020_05_01 = "2020-05-01";

        /// <summary>
        /// 2020-04-01.
        /// </summary>
        public static readonly string V2020_04_01 = "2020-04-01";

        /// <summary>
        /// 2020-01-01.
        /// </summary>
        public static readonly string V2020_01_01 = "2020-01-01";

        /// <summary>
        /// 2019-08-01.
        /// </summary>
        public static readonly string V2019_08_01 = "2019-08-01";

        /// <summary>
        /// 2019-05-01.
        /// </summary>
        public static readonly string V2019_05_01 = "2019-05-01";

        /// <summary>
        /// 2019-04-01.
        /// </summary>
        public static readonly string V2019_04_01 = "2019-04-01";

        /// <summary>
        /// 2018-08-01.
        /// </summary>
        public static readonly string V2018_08_01 = "2018-08-01";
    }

    /// <summary>
    /// Creates a reference to an existing FrontDoorResource.
    /// </summary>
    /// <param name="bicepIdentifier">
    /// The the Bicep identifier name of the FrontDoorResource resource.  This
    /// can be used to refer to the resource in expressions, but is not the
    /// Azure name of the resource.  This value can contain letters, numbers,
    /// and underscores.
    /// </param>
    /// <param name="resourceVersion">Version of the FrontDoorResource.</param>
    /// <returns>The existing FrontDoorResource resource.</returns>
    public static FrontDoorResource FromExisting(string bicepIdentifier, string? resourceVersion = default) =>
        new(bicepIdentifier, resourceVersion) { IsExistingResource = true };
}
