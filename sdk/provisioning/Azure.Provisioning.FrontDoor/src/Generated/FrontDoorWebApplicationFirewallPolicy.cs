// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure;
using Azure.Core;
using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;

namespace Azure.Provisioning.FrontDoor;

/// <summary>
/// FrontDoorWebApplicationFirewallPolicy.
/// </summary>
public partial class FrontDoorWebApplicationFirewallPolicy : ProvisionableResource
{
    /// <summary>
    /// The name of the Web Application Firewall Policy.
    /// </summary>
    public BicepValue<string> Name 
    {
        get { Initialize(); return _name!; }
        set { Initialize(); _name!.Assign(value); }
    }
    private BicepValue<string>? _name;

    /// <summary>
    /// Gets or sets the Location.
    /// </summary>
    public BicepValue<AzureLocation> Location 
    {
        get { Initialize(); return _location!; }
        set { Initialize(); _location!.Assign(value); }
    }
    private BicepValue<AzureLocation>? _location;

    /// <summary>
    /// Gets a unique read-only string that changes whenever the resource is
    /// updated.
    /// </summary>
    public BicepValue<ETag> ETag 
    {
        get { Initialize(); return _eTag!; }
        set { Initialize(); _eTag!.Assign(value); }
    }
    private BicepValue<ETag>? _eTag;

    /// <summary>
    /// List of rule sets.
    /// </summary>
    public BicepList<ManagedRuleSet> ManagedRuleSets 
    {
        get { Initialize(); return _managedRuleSets!; }
        set { Initialize(); _managedRuleSets!.Assign(value); }
    }
    private BicepList<ManagedRuleSet>? _managedRuleSets;

    /// <summary>
    /// Describes settings for the policy.
    /// </summary>
    public FrontDoorWebApplicationFirewallPolicySettings PolicySettings 
    {
        get { Initialize(); return _policySettings!; }
        set { Initialize(); AssignOrReplace(ref _policySettings, value); }
    }
    private FrontDoorWebApplicationFirewallPolicySettings? _policySettings;

    /// <summary>
    /// List of rules.
    /// </summary>
    public BicepList<WebApplicationCustomRule> Rules 
    {
        get { Initialize(); return _rules!; }
        set { Initialize(); _rules!.Assign(value); }
    }
    private BicepList<WebApplicationCustomRule>? _rules;

    /// <summary>
    /// Name of the pricing tier.
    /// </summary>
    public BicepValue<FrontDoorSkuName> SkuName 
    {
        get { Initialize(); return _skuName!; }
        set { Initialize(); _skuName!.Assign(value); }
    }
    private BicepValue<FrontDoorSkuName>? _skuName;

    /// <summary>
    /// Gets or sets the Tags.
    /// </summary>
    public BicepDictionary<string> Tags 
    {
        get { Initialize(); return _tags!; }
        set { Initialize(); _tags!.Assign(value); }
    }
    private BicepDictionary<string>? _tags;

    /// <summary>
    /// Describes Frontend Endpoints associated with this Web Application
    /// Firewall policy.
    /// </summary>
    public BicepList<SubResource> FrontendEndpointLinks 
    {
        get { Initialize(); return _frontendEndpointLinks!; }
    }
    private BicepList<SubResource>? _frontendEndpointLinks;

    /// <summary>
    /// Gets the Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id 
    {
        get { Initialize(); return _id!; }
    }
    private BicepValue<ResourceIdentifier>? _id;

    /// <summary>
    /// Provisioning state of the policy.
    /// </summary>
    public BicepValue<string> ProvisioningState 
    {
        get { Initialize(); return _provisioningState!; }
    }
    private BicepValue<string>? _provisioningState;

    /// <summary>
    /// Resource status of the policy.
    /// </summary>
    public BicepValue<FrontDoorWebApplicationFirewallPolicyResourceState> ResourceState 
    {
        get { Initialize(); return _resourceState!; }
    }
    private BicepValue<FrontDoorWebApplicationFirewallPolicyResourceState>? _resourceState;

    /// <summary>
    /// Describes Routing Rules associated with this Web Application Firewall
    /// policy.
    /// </summary>
    public BicepList<SubResource> RoutingRuleLinks 
    {
        get { Initialize(); return _routingRuleLinks!; }
    }
    private BicepList<SubResource>? _routingRuleLinks;

    /// <summary>
    /// Describes Security Policy associated with this Web Application Firewall
    /// policy.
    /// </summary>
    public BicepList<SubResource> SecurityPolicyLinks 
    {
        get { Initialize(); return _securityPolicyLinks!; }
    }
    private BicepList<SubResource>? _securityPolicyLinks;

    /// <summary>
    /// Gets the SystemData.
    /// </summary>
    public SystemData SystemData 
    {
        get { Initialize(); return _systemData!; }
    }
    private SystemData? _systemData;

    /// <summary>
    /// Creates a new FrontDoorWebApplicationFirewallPolicy.
    /// </summary>
    /// <param name="bicepIdentifier">
    /// The the Bicep identifier name of the
    /// FrontDoorWebApplicationFirewallPolicy resource.  This can be used to
    /// refer to the resource in expressions, but is not the Azure name of the
    /// resource.  This value can contain letters, numbers, and underscores.
    /// </param>
    /// <param name="resourceVersion">Version of the FrontDoorWebApplicationFirewallPolicy.</param>
    public FrontDoorWebApplicationFirewallPolicy(string bicepIdentifier, string? resourceVersion = default)
        : base(bicepIdentifier, "Microsoft.Network/FrontDoorWebApplicationFirewallPolicies", resourceVersion ?? "2025-03-01")
    {
    }

    /// <summary>
    /// Define all the provisionable properties of
    /// FrontDoorWebApplicationFirewallPolicy.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _name = DefineProperty<string>("Name", ["name"], isRequired: true);
        _location = DefineProperty<AzureLocation>("Location", ["location"], isRequired: true);
        _eTag = DefineProperty<ETag>("ETag", ["etag"]);
        _managedRuleSets = DefineListProperty<ManagedRuleSet>("ManagedRuleSets", ["properties", "managedRules", "managedRuleSets"]);
        _policySettings = DefineModelProperty<FrontDoorWebApplicationFirewallPolicySettings>("PolicySettings", ["properties", "policySettings"]);
        _rules = DefineListProperty<WebApplicationCustomRule>("Rules", ["properties", "customRules", "rules"]);
        _skuName = DefineProperty<FrontDoorSkuName>("SkuName", ["sku", "name"]);
        _tags = DefineDictionaryProperty<string>("Tags", ["tags"]);
        _frontendEndpointLinks = DefineListProperty<SubResource>("FrontendEndpointLinks", ["properties", "frontendEndpointLinks"], isOutput: true);
        _id = DefineProperty<ResourceIdentifier>("Id", ["id"], isOutput: true);
        _provisioningState = DefineProperty<string>("ProvisioningState", ["properties", "provisioningState"], isOutput: true);
        _resourceState = DefineProperty<FrontDoorWebApplicationFirewallPolicyResourceState>("ResourceState", ["properties", "resourceState"], isOutput: true);
        _routingRuleLinks = DefineListProperty<SubResource>("RoutingRuleLinks", ["properties", "routingRuleLinks"], isOutput: true);
        _securityPolicyLinks = DefineListProperty<SubResource>("SecurityPolicyLinks", ["properties", "securityPolicyLinks"], isOutput: true);
        _systemData = DefineModelProperty<SystemData>("SystemData", ["systemData"], isOutput: true);
    }

    /// <summary>
    /// Supported FrontDoorWebApplicationFirewallPolicy resource versions.
    /// </summary>
    public static class ResourceVersions
    {
        /// <summary>
        /// 2025-03-01.
        /// </summary>
        public static readonly string V2025_03_01 = "2025-03-01";

        /// <summary>
        /// 2024-02-01.
        /// </summary>
        public static readonly string V2024_02_01 = "2024-02-01";

        /// <summary>
        /// 2022-05-01.
        /// </summary>
        public static readonly string V2022_05_01 = "2022-05-01";

        /// <summary>
        /// 2020-11-01.
        /// </summary>
        public static readonly string V2020_11_01 = "2020-11-01";

        /// <summary>
        /// 2020-04-01.
        /// </summary>
        public static readonly string V2020_04_01 = "2020-04-01";

        /// <summary>
        /// 2019-10-01.
        /// </summary>
        public static readonly string V2019_10_01 = "2019-10-01";

        /// <summary>
        /// 2019-03-01.
        /// </summary>
        public static readonly string V2019_03_01 = "2019-03-01";

        /// <summary>
        /// 2018-08-01.
        /// </summary>
        public static readonly string V2018_08_01 = "2018-08-01";
    }

    /// <summary>
    /// Creates a reference to an existing
    /// FrontDoorWebApplicationFirewallPolicy.
    /// </summary>
    /// <param name="bicepIdentifier">
    /// The the Bicep identifier name of the
    /// FrontDoorWebApplicationFirewallPolicy resource.  This can be used to
    /// refer to the resource in expressions, but is not the Azure name of the
    /// resource.  This value can contain letters, numbers, and underscores.
    /// </param>
    /// <param name="resourceVersion">Version of the FrontDoorWebApplicationFirewallPolicy.</param>
    /// <returns>The existing FrontDoorWebApplicationFirewallPolicy resource.</returns>
    public static FrontDoorWebApplicationFirewallPolicy FromExisting(string bicepIdentifier, string? resourceVersion = default) =>
        new(bicepIdentifier, resourceVersion) { IsExistingResource = true };
}
