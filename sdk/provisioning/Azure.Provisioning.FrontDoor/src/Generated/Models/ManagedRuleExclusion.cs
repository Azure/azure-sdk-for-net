// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.FrontDoor;

/// <summary>
/// Exclude variables from managed rule evaluation.
/// </summary>
public partial class ManagedRuleExclusion : ProvisionableConstruct
{
    /// <summary>
    /// The variable type to be excluded.
    /// </summary>
    public BicepValue<ManagedRuleExclusionMatchVariable> MatchVariable 
    {
        get { Initialize(); return _matchVariable!; }
        set { Initialize(); _matchVariable!.Assign(value); }
    }
    private BicepValue<ManagedRuleExclusionMatchVariable>? _matchVariable;

    /// <summary>
    /// Comparison operator to apply to the selector when specifying which
    /// elements in the collection this exclusion applies to.
    /// </summary>
    public BicepValue<ManagedRuleExclusionSelectorMatchOperator> SelectorMatchOperator 
    {
        get { Initialize(); return _selectorMatchOperator!; }
        set { Initialize(); _selectorMatchOperator!.Assign(value); }
    }
    private BicepValue<ManagedRuleExclusionSelectorMatchOperator>? _selectorMatchOperator;

    /// <summary>
    /// Selector value for which elements in the collection this exclusion
    /// applies to.
    /// </summary>
    public BicepValue<string> Selector 
    {
        get { Initialize(); return _selector!; }
        set { Initialize(); _selector!.Assign(value); }
    }
    private BicepValue<string>? _selector;

    /// <summary>
    /// Creates a new ManagedRuleExclusion.
    /// </summary>
    public ManagedRuleExclusion()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of ManagedRuleExclusion.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _matchVariable = DefineProperty<ManagedRuleExclusionMatchVariable>("MatchVariable", ["matchVariable"]);
        _selectorMatchOperator = DefineProperty<ManagedRuleExclusionSelectorMatchOperator>("SelectorMatchOperator", ["selectorMatchOperator"]);
        _selector = DefineProperty<string>("Selector", ["selector"]);
    }
}
