// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.FrontDoor;

/// <summary>
/// Defines contents of a web application rule.
/// </summary>
public partial class WebApplicationCustomRule : ProvisionableConstruct
{
    /// <summary>
    /// Describes the name of the rule.
    /// </summary>
    public BicepValue<string> Name 
    {
        get { Initialize(); return _name!; }
        set { Initialize(); _name!.Assign(value); }
    }
    private BicepValue<string>? _name;

    /// <summary>
    /// Describes priority of the rule. Rules with a lower value will be
    /// evaluated before rules with a higher value.
    /// </summary>
    public BicepValue<int> Priority 
    {
        get { Initialize(); return _priority!; }
        set { Initialize(); _priority!.Assign(value); }
    }
    private BicepValue<int>? _priority;

    /// <summary>
    /// Describes if the custom rule is in enabled or disabled state. Defaults
    /// to Enabled if not specified.
    /// </summary>
    public BicepValue<CustomRuleEnabledState> EnabledState 
    {
        get { Initialize(); return _enabledState!; }
        set { Initialize(); _enabledState!.Assign(value); }
    }
    private BicepValue<CustomRuleEnabledState>? _enabledState;

    /// <summary>
    /// Describes type of rule.
    /// </summary>
    public BicepValue<WebApplicationRuleType> RuleType 
    {
        get { Initialize(); return _ruleType!; }
        set { Initialize(); _ruleType!.Assign(value); }
    }
    private BicepValue<WebApplicationRuleType>? _ruleType;

    /// <summary>
    /// Time window for resetting the rate limit count. Default is 1 minute.
    /// </summary>
    public BicepValue<int> RateLimitDurationInMinutes 
    {
        get { Initialize(); return _rateLimitDurationInMinutes!; }
        set { Initialize(); _rateLimitDurationInMinutes!.Assign(value); }
    }
    private BicepValue<int>? _rateLimitDurationInMinutes;

    /// <summary>
    /// Number of allowed requests per client within the time window.
    /// </summary>
    public BicepValue<int> RateLimitThreshold 
    {
        get { Initialize(); return _rateLimitThreshold!; }
        set { Initialize(); _rateLimitThreshold!.Assign(value); }
    }
    private BicepValue<int>? _rateLimitThreshold;

    /// <summary>
    /// Describes the list of variables to group the rate limit requests.
    /// </summary>
    public BicepList<FrontDoorWebApplicationFirewallPolicyGroupByVariable> GroupBy 
    {
        get { Initialize(); return _groupBy!; }
        set { Initialize(); _groupBy!.Assign(value); }
    }
    private BicepList<FrontDoorWebApplicationFirewallPolicyGroupByVariable>? _groupBy;

    /// <summary>
    /// List of match conditions.
    /// </summary>
    public BicepList<WebApplicationRuleMatchCondition> MatchConditions 
    {
        get { Initialize(); return _matchConditions!; }
        set { Initialize(); _matchConditions!.Assign(value); }
    }
    private BicepList<WebApplicationRuleMatchCondition>? _matchConditions;

    /// <summary>
    /// Describes what action to be applied when rule matches.
    /// </summary>
    public BicepValue<RuleMatchActionType> Action 
    {
        get { Initialize(); return _action!; }
        set { Initialize(); _action!.Assign(value); }
    }
    private BicepValue<RuleMatchActionType>? _action;

    /// <summary>
    /// Creates a new WebApplicationCustomRule.
    /// </summary>
    public WebApplicationCustomRule()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of WebApplicationCustomRule.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _name = DefineProperty<string>("Name", ["name"]);
        _priority = DefineProperty<int>("Priority", ["priority"]);
        _enabledState = DefineProperty<CustomRuleEnabledState>("EnabledState", ["enabledState"]);
        _ruleType = DefineProperty<WebApplicationRuleType>("RuleType", ["ruleType"]);
        _rateLimitDurationInMinutes = DefineProperty<int>("RateLimitDurationInMinutes", ["rateLimitDurationInMinutes"]);
        _rateLimitThreshold = DefineProperty<int>("RateLimitThreshold", ["rateLimitThreshold"]);
        _groupBy = DefineListProperty<FrontDoorWebApplicationFirewallPolicyGroupByVariable>("GroupBy", ["groupBy"]);
        _matchConditions = DefineListProperty<WebApplicationRuleMatchCondition>("MatchConditions", ["matchConditions"]);
        _action = DefineProperty<RuleMatchActionType>("Action", ["action"]);
    }
}
