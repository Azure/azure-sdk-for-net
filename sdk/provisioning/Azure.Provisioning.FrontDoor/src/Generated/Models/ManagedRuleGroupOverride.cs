// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.FrontDoor;

/// <summary>
/// Defines a managed rule group override setting.
/// </summary>
public partial class ManagedRuleGroupOverride : ProvisionableConstruct
{
    /// <summary>
    /// Describes the managed rule group to override.
    /// </summary>
    public BicepValue<string> RuleGroupName 
    {
        get { Initialize(); return _ruleGroupName!; }
        set { Initialize(); _ruleGroupName!.Assign(value); }
    }
    private BicepValue<string>? _ruleGroupName;

    /// <summary>
    /// Describes the exclusions that are applied to all rules in the group.
    /// </summary>
    public BicepList<ManagedRuleExclusion> Exclusions 
    {
        get { Initialize(); return _exclusions!; }
        set { Initialize(); _exclusions!.Assign(value); }
    }
    private BicepList<ManagedRuleExclusion>? _exclusions;

    /// <summary>
    /// List of rules that will be disabled. If none specified, all rules in
    /// the group will be disabled.
    /// </summary>
    public BicepList<ManagedRuleOverride> Rules 
    {
        get { Initialize(); return _rules!; }
        set { Initialize(); _rules!.Assign(value); }
    }
    private BicepList<ManagedRuleOverride>? _rules;

    /// <summary>
    /// Creates a new ManagedRuleGroupOverride.
    /// </summary>
    public ManagedRuleGroupOverride()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of ManagedRuleGroupOverride.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _ruleGroupName = DefineProperty<string>("RuleGroupName", ["ruleGroupName"]);
        _exclusions = DefineListProperty<ManagedRuleExclusion>("Exclusions", ["exclusions"]);
        _rules = DefineListProperty<ManagedRuleOverride>("Rules", ["rules"]);
    }
}
