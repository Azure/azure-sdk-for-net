// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.FrontDoor;

/// <summary>
/// Defines the contents of the log scrubbing rules.
/// </summary>
public partial class WebApplicationFirewallScrubbingRules : ProvisionableConstruct
{
    /// <summary>
    /// The variable to be scrubbed from the logs.
    /// </summary>
    public BicepValue<ScrubbingRuleEntryMatchVariable> MatchVariable 
    {
        get { Initialize(); return _matchVariable!; }
        set { Initialize(); _matchVariable!.Assign(value); }
    }
    private BicepValue<ScrubbingRuleEntryMatchVariable>? _matchVariable;

    /// <summary>
    /// When matchVariable is a collection, operate on the selector to specify
    /// which elements in the collection this rule applies to.
    /// </summary>
    public BicepValue<ScrubbingRuleEntryMatchOperator> SelectorMatchOperator 
    {
        get { Initialize(); return _selectorMatchOperator!; }
        set { Initialize(); _selectorMatchOperator!.Assign(value); }
    }
    private BicepValue<ScrubbingRuleEntryMatchOperator>? _selectorMatchOperator;

    /// <summary>
    /// When matchVariable is a collection, operator used to specify which
    /// elements in the collection this rule applies to.
    /// </summary>
    public BicepValue<string> Selector 
    {
        get { Initialize(); return _selector!; }
        set { Initialize(); _selector!.Assign(value); }
    }
    private BicepValue<string>? _selector;

    /// <summary>
    /// Defines the state of a log scrubbing rule. Default value is enabled.
    /// </summary>
    public BicepValue<ScrubbingRuleEntryState> State 
    {
        get { Initialize(); return _state!; }
        set { Initialize(); _state!.Assign(value); }
    }
    private BicepValue<ScrubbingRuleEntryState>? _state;

    /// <summary>
    /// Creates a new WebApplicationFirewallScrubbingRules.
    /// </summary>
    public WebApplicationFirewallScrubbingRules()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of
    /// WebApplicationFirewallScrubbingRules.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _matchVariable = DefineProperty<ScrubbingRuleEntryMatchVariable>("MatchVariable", ["matchVariable"]);
        _selectorMatchOperator = DefineProperty<ScrubbingRuleEntryMatchOperator>("SelectorMatchOperator", ["selectorMatchOperator"]);
        _selector = DefineProperty<string>("Selector", ["selector"]);
        _state = DefineProperty<ScrubbingRuleEntryState>("State", ["state"]);
    }
}
