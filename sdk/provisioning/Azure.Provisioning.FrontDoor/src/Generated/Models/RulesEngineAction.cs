// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.FrontDoor;

/// <summary>
/// One or more actions that will execute, modifying the request and/or
/// response.
/// </summary>
public partial class RulesEngineAction : ProvisionableConstruct
{
    /// <summary>
    /// A list of header actions to apply from the request from AFD to the
    /// origin.
    /// </summary>
    public BicepList<RulesEngineHeaderAction> RequestHeaderActions 
    {
        get { Initialize(); return _requestHeaderActions!; }
        set { Initialize(); _requestHeaderActions!.Assign(value); }
    }
    private BicepList<RulesEngineHeaderAction>? _requestHeaderActions;

    /// <summary>
    /// A list of header actions to apply from the response from AFD to the
    /// client.
    /// </summary>
    public BicepList<RulesEngineHeaderAction> ResponseHeaderActions 
    {
        get { Initialize(); return _responseHeaderActions!; }
        set { Initialize(); _responseHeaderActions!.Assign(value); }
    }
    private BicepList<RulesEngineHeaderAction>? _responseHeaderActions;

    /// <summary>
    /// Override the route configuration.             Please note
    /// Azure.ResourceManager.FrontDoor.Models.RouteConfiguration is the base
    /// class. According to the scenario, a derived class of the base class
    /// might need to be assigned here, or this property needs to be casted to
    /// one of the possible derived classes.             The available derived
    /// classes include
    /// Azure.ResourceManager.FrontDoor.Models.ForwardingConfiguration and
    /// Azure.ResourceManager.FrontDoor.Models.RedirectConfiguration.
    /// </summary>
    public RouteConfiguration RouteConfigurationOverride 
    {
        get { Initialize(); return _routeConfigurationOverride!; }
        set { Initialize(); AssignOrReplace(ref _routeConfigurationOverride, value); }
    }
    private RouteConfiguration? _routeConfigurationOverride;

    /// <summary>
    /// Creates a new RulesEngineAction.
    /// </summary>
    public RulesEngineAction()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of RulesEngineAction.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _requestHeaderActions = DefineListProperty<RulesEngineHeaderAction>("RequestHeaderActions", ["requestHeaderActions"]);
        _responseHeaderActions = DefineListProperty<RulesEngineHeaderAction>("ResponseHeaderActions", ["responseHeaderActions"]);
        _routeConfigurationOverride = DefineModelProperty<RouteConfiguration>("RouteConfigurationOverride", ["routeConfigurationOverride"]);
    }
}
