// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.FrontDoor;

/// <summary>
/// Defines a managed rule set.
/// </summary>
public partial class ManagedRuleSet : ProvisionableConstruct
{
    /// <summary>
    /// Defines the rule set type to use.
    /// </summary>
    public BicepValue<string> RuleSetType 
    {
        get { Initialize(); return _ruleSetType!; }
        set { Initialize(); _ruleSetType!.Assign(value); }
    }
    private BicepValue<string>? _ruleSetType;

    /// <summary>
    /// Defines the version of the rule set to use.
    /// </summary>
    public BicepValue<string> RuleSetVersion 
    {
        get { Initialize(); return _ruleSetVersion!; }
        set { Initialize(); _ruleSetVersion!.Assign(value); }
    }
    private BicepValue<string>? _ruleSetVersion;

    /// <summary>
    /// Defines the rule set action.
    /// </summary>
    public BicepValue<ManagedRuleSetActionType> RuleSetAction 
    {
        get { Initialize(); return _ruleSetAction!; }
        set { Initialize(); _ruleSetAction!.Assign(value); }
    }
    private BicepValue<ManagedRuleSetActionType>? _ruleSetAction;

    /// <summary>
    /// Describes the exclusions that are applied to all rules in the set.
    /// </summary>
    public BicepList<ManagedRuleExclusion> Exclusions 
    {
        get { Initialize(); return _exclusions!; }
        set { Initialize(); _exclusions!.Assign(value); }
    }
    private BicepList<ManagedRuleExclusion>? _exclusions;

    /// <summary>
    /// Defines the rule group overrides to apply to the rule set.
    /// </summary>
    public BicepList<ManagedRuleGroupOverride> RuleGroupOverrides 
    {
        get { Initialize(); return _ruleGroupOverrides!; }
        set { Initialize(); _ruleGroupOverrides!.Assign(value); }
    }
    private BicepList<ManagedRuleGroupOverride>? _ruleGroupOverrides;

    /// <summary>
    /// Creates a new ManagedRuleSet.
    /// </summary>
    public ManagedRuleSet()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of ManagedRuleSet.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _ruleSetType = DefineProperty<string>("RuleSetType", ["ruleSetType"]);
        _ruleSetVersion = DefineProperty<string>("RuleSetVersion", ["ruleSetVersion"]);
        _ruleSetAction = DefineProperty<ManagedRuleSetActionType>("RuleSetAction", ["ruleSetAction"]);
        _exclusions = DefineListProperty<ManagedRuleExclusion>("Exclusions", ["exclusions"]);
        _ruleGroupOverrides = DefineListProperty<ManagedRuleGroupOverride>("RuleGroupOverrides", ["ruleGroupOverrides"]);
    }
}
