// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.FrontDoor;

/// <summary>
/// Caching settings for a caching-type route. To disable caching, do not
/// provide a cacheConfiguration object.
/// </summary>
public partial class FrontDoorCacheConfiguration : ProvisionableConstruct
{
    /// <summary>
    /// Treatment of URL query terms when forming the cache key.
    /// </summary>
    public BicepValue<FrontDoorQuery> QueryParameterStripDirective 
    {
        get { Initialize(); return _queryParameterStripDirective!; }
        set { Initialize(); _queryParameterStripDirective!.Assign(value); }
    }
    private BicepValue<FrontDoorQuery>? _queryParameterStripDirective;

    /// <summary>
    /// query parameters to include or exclude (comma separated).
    /// </summary>
    public BicepValue<string> QueryParameters 
    {
        get { Initialize(); return _queryParameters!; }
        set { Initialize(); _queryParameters!.Assign(value); }
    }
    private BicepValue<string>? _queryParameters;

    /// <summary>
    /// Whether to use dynamic compression for cached content.
    /// </summary>
    public BicepValue<DynamicCompressionEnabled> DynamicCompression 
    {
        get { Initialize(); return _dynamicCompression!; }
        set { Initialize(); _dynamicCompression!.Assign(value); }
    }
    private BicepValue<DynamicCompressionEnabled>? _dynamicCompression;

    /// <summary>
    /// The duration for which the content needs to be cached. Allowed format
    /// is in ISO 8601 format
    /// (http://en.wikipedia.org/wiki/ISO_8601#Durations). HTTP requires the
    /// value to be no more than a year.
    /// </summary>
    public BicepValue<TimeSpan> CacheDuration 
    {
        get { Initialize(); return _cacheDuration!; }
        set { Initialize(); _cacheDuration!.Assign(value); }
    }
    private BicepValue<TimeSpan>? _cacheDuration;

    /// <summary>
    /// Creates a new FrontDoorCacheConfiguration.
    /// </summary>
    public FrontDoorCacheConfiguration()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of FrontDoorCacheConfiguration.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _queryParameterStripDirective = DefineProperty<FrontDoorQuery>("QueryParameterStripDirective", ["queryParameterStripDirective"]);
        _queryParameters = DefineProperty<string>("QueryParameters", ["queryParameters"]);
        _dynamicCompression = DefineProperty<DynamicCompressionEnabled>("DynamicCompression", ["dynamicCompression"]);
        _cacheDuration = DefineProperty<TimeSpan>("CacheDuration", ["cacheDuration"]);
    }
}
