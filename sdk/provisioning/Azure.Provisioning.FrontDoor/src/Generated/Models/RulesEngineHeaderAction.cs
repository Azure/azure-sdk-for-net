// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.FrontDoor;

/// <summary>
/// An action that can manipulate an http header.
/// </summary>
public partial class RulesEngineHeaderAction : ProvisionableConstruct
{
    /// <summary>
    /// Which type of manipulation to apply to the header.
    /// </summary>
    public BicepValue<RulesEngineHeaderActionType> HeaderActionType 
    {
        get { Initialize(); return _headerActionType!; }
        set { Initialize(); _headerActionType!.Assign(value); }
    }
    private BicepValue<RulesEngineHeaderActionType>? _headerActionType;

    /// <summary>
    /// The name of the header this action will apply to.
    /// </summary>
    public BicepValue<string> HeaderName 
    {
        get { Initialize(); return _headerName!; }
        set { Initialize(); _headerName!.Assign(value); }
    }
    private BicepValue<string>? _headerName;

    /// <summary>
    /// The value to update the given header name with. This value is not used
    /// if the actionType is Delete.
    /// </summary>
    public BicepValue<string> Value 
    {
        get { Initialize(); return _value!; }
        set { Initialize(); _value!.Assign(value); }
    }
    private BicepValue<string>? _value;

    /// <summary>
    /// Creates a new RulesEngineHeaderAction.
    /// </summary>
    public RulesEngineHeaderAction()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of RulesEngineHeaderAction.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _headerActionType = DefineProperty<RulesEngineHeaderActionType>("HeaderActionType", ["headerActionType"]);
        _headerName = DefineProperty<string>("HeaderName", ["headerName"]);
        _value = DefineProperty<string>("Value", ["value"]);
    }
}
