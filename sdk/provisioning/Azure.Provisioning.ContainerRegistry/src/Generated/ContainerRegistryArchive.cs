// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;

namespace Azure.Provisioning.ContainerRegistry;

/// <summary>
/// ContainerRegistryArchive.
/// </summary>
public partial class ContainerRegistryArchive : ProvisionableResource
{
    /// <summary>
    /// The name of the archive resource.
    /// </summary>
    public BicepValue<string> Name 
    {
        get { Initialize(); return _name!; }
        set { Initialize(); _name!.Assign(value); }
    }
    private BicepValue<string>? _name;

    /// <summary>
    /// The package source of the archive.
    /// </summary>
    public ArchivePackageSourceProperties PackageSource 
    {
        get { Initialize(); return _packageSource!; }
        set { Initialize(); AssignOrReplace(ref _packageSource, value); }
    }
    private ArchivePackageSourceProperties? _packageSource;

    /// <summary>
    /// The published version of the archive.
    /// </summary>
    public BicepValue<string> PublishedVersion 
    {
        get { Initialize(); return _publishedVersion!; }
        set { Initialize(); _publishedVersion!.Assign(value); }
    }
    private BicepValue<string>? _publishedVersion;

    /// <summary>
    /// Gets or sets the repository endpoint prefix.
    /// </summary>
    public BicepValue<string> RepositoryEndpointPrefix 
    {
        get { Initialize(); return _repositoryEndpointPrefix!; }
        set { Initialize(); _repositoryEndpointPrefix!.Assign(value); }
    }
    private BicepValue<string>? _repositoryEndpointPrefix;

    /// <summary>
    /// Gets the Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id 
    {
        get { Initialize(); return _id!; }
    }
    private BicepValue<ResourceIdentifier>? _id;

    /// <summary>
    /// The provisioning state of the archive at the time the operation was
    /// called.
    /// </summary>
    public BicepValue<ContainerRegistryProvisioningState> ProvisioningState 
    {
        get { Initialize(); return _provisioningState!; }
    }
    private BicepValue<ContainerRegistryProvisioningState>? _provisioningState;

    /// <summary>
    /// Gets the repository endpoint.
    /// </summary>
    public BicepValue<string> RepositoryEndpoint 
    {
        get { Initialize(); return _repositoryEndpoint!; }
    }
    private BicepValue<string>? _repositoryEndpoint;

    /// <summary>
    /// Gets the SystemData.
    /// </summary>
    public SystemData SystemData 
    {
        get { Initialize(); return _systemData!; }
    }
    private SystemData? _systemData;

    /// <summary>
    /// Creates a new ContainerRegistryArchive.
    /// </summary>
    /// <param name="bicepIdentifier">
    /// The the Bicep identifier name of the ContainerRegistryArchive resource.
    /// This can be used to refer to the resource in expressions, but is not
    /// the Azure name of the resource.  This value can contain letters,
    /// numbers, and underscores.
    /// </param>
    /// <param name="resourceVersion">Version of the ContainerRegistryArchive.</param>
    public ContainerRegistryArchive(string bicepIdentifier, string? resourceVersion = default)
        : base(bicepIdentifier, "Microsoft.ContainerRegistry/registries/packages/archives", resourceVersion)
    {
    }

    /// <summary>
    /// Define all the provisionable properties of ContainerRegistryArchive.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        _name = DefineProperty<string>("Name", ["name"], isRequired: true);
        _packageSource = DefineModelProperty<ArchivePackageSourceProperties>("PackageSource", ["properties", "packageSource"]);
        _publishedVersion = DefineProperty<string>("PublishedVersion", ["properties", "publishedVersion"]);
        _repositoryEndpointPrefix = DefineProperty<string>("RepositoryEndpointPrefix", ["properties", "repositoryEndpointPrefix"]);
        _id = DefineProperty<ResourceIdentifier>("Id", ["id"], isOutput: true);
        _provisioningState = DefineProperty<ContainerRegistryProvisioningState>("ProvisioningState", ["properties", "provisioningState"], isOutput: true);
        _repositoryEndpoint = DefineProperty<string>("RepositoryEndpoint", ["properties", "repositoryEndpoint"], isOutput: true);
        _systemData = DefineModelProperty<SystemData>("SystemData", ["systemData"], isOutput: true);
    }

    /// <summary>
    /// Creates a reference to an existing ContainerRegistryArchive.
    /// </summary>
    /// <param name="bicepIdentifier">
    /// The the Bicep identifier name of the ContainerRegistryArchive resource.
    /// This can be used to refer to the resource in expressions, but is not
    /// the Azure name of the resource.  This value can contain letters,
    /// numbers, and underscores.
    /// </param>
    /// <param name="resourceVersion">Version of the ContainerRegistryArchive.</param>
    /// <returns>The existing ContainerRegistryArchive resource.</returns>
    public static ContainerRegistryArchive FromExisting(string bicepIdentifier, string? resourceVersion = default) =>
        new(bicepIdentifier, resourceVersion) { IsExistingResource = true };
}
