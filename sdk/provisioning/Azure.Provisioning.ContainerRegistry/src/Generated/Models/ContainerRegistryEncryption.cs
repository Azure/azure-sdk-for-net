// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.ContainerRegistry;

/// <summary>
/// The ContainerRegistryEncryption.
/// </summary>
public partial class ContainerRegistryEncryption : ProvisioningConstruct
{
    /// <summary>
    /// Indicates whether or not the encryption is enabled for container
    /// registry.
    /// </summary>
    public BicepValue<ContainerRegistryEncryptionStatus> Status { get => _status; set => _status.Assign(value); }
    private readonly BicepValue<ContainerRegistryEncryptionStatus> _status;

    /// <summary>
    /// Key vault properties.
    /// </summary>
    public BicepValue<ContainerRegistryKeyVaultProperties> KeyVaultProperties { get => _keyVaultProperties; set => _keyVaultProperties.Assign(value); }
    private readonly BicepValue<ContainerRegistryKeyVaultProperties> _keyVaultProperties;

    /// <summary>
    /// Creates a new ContainerRegistryEncryption.
    /// </summary>
    public ContainerRegistryEncryption()
    {
        _status = BicepValue<ContainerRegistryEncryptionStatus>.DefineProperty(this, "Status", ["status"]);
        _keyVaultProperties = BicepValue<ContainerRegistryKeyVaultProperties>.DefineProperty(this, "KeyVaultProperties", ["keyVaultProperties"]);
    }
}
