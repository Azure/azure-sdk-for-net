// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.ContainerRegistry;

/// <summary>
/// The ContainerRegistryOverrideTaskStepProperties.
/// </summary>
public partial class ContainerRegistryOverrideTaskStepProperties : ProvisioningConstruct
{
    /// <summary>
    /// The source context against which run has to be queued.
    /// </summary>
    public BicepValue<string> ContextPath { get => _contextPath; set => _contextPath.Assign(value); }
    private readonly BicepValue<string> _contextPath;

    /// <summary>
    /// The file against which run has to be queued.
    /// </summary>
    public BicepValue<string> File { get => _file; set => _file.Assign(value); }
    private readonly BicepValue<string> _file;

    /// <summary>
    /// Gets or sets the collection of override arguments to be used when
    /// executing a build step.
    /// </summary>
    public BicepList<ContainerRegistryRunArgument> Arguments { get => _arguments; set => _arguments.Assign(value); }
    private readonly BicepList<ContainerRegistryRunArgument> _arguments;

    /// <summary>
    /// The name of the target build stage for the docker build.
    /// </summary>
    public BicepValue<string> Target { get => _target; set => _target.Assign(value); }
    private readonly BicepValue<string> _target;

    /// <summary>
    /// The collection of overridable values that can be passed when running a
    /// Task.
    /// </summary>
    public BicepList<ContainerRegistryTaskOverridableValue> Values { get => _values; set => _values.Assign(value); }
    private readonly BicepList<ContainerRegistryTaskOverridableValue> _values;

    /// <summary>
    /// Base64 encoded update trigger token that will be attached with the base
    /// image trigger webhook.
    /// </summary>
    public BicepValue<string> UpdateTriggerToken { get => _updateTriggerToken; set => _updateTriggerToken.Assign(value); }
    private readonly BicepValue<string> _updateTriggerToken;

    /// <summary>
    /// Creates a new ContainerRegistryOverrideTaskStepProperties.
    /// </summary>
    public ContainerRegistryOverrideTaskStepProperties()
    {
        _contextPath = BicepValue<string>.DefineProperty(this, "ContextPath", ["contextPath"]);
        _file = BicepValue<string>.DefineProperty(this, "File", ["file"]);
        _arguments = BicepList<ContainerRegistryRunArgument>.DefineProperty(this, "Arguments", ["arguments"]);
        _target = BicepValue<string>.DefineProperty(this, "Target", ["target"]);
        _values = BicepList<ContainerRegistryTaskOverridableValue>.DefineProperty(this, "Values", ["values"]);
        _updateTriggerToken = BicepValue<string>.DefineProperty(this, "UpdateTriggerToken", ["updateTriggerToken"]);
    }
}
