// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.ContainerRegistry;

/// <summary>
/// The properties of the connected registry parent.
/// </summary>
public partial class ConnectedRegistryParent : ProvisionableConstruct
{
    /// <summary>
    /// The resource ID of the parent to which the connected registry will be
    /// associated.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id 
    {
        get { Initialize(); return _id!; }
        set { Initialize(); _id!.Assign(value); }
    }
    private BicepValue<ResourceIdentifier>? _id;

    /// <summary>
    /// The sync properties of the connected registry with its parent.
    /// </summary>
    public ConnectedRegistrySyncProperties SyncProperties 
    {
        get { Initialize(); return _syncProperties!; }
        set { Initialize(); AssignOrReplace(ref _syncProperties, value); }
    }
    private ConnectedRegistrySyncProperties? _syncProperties;

    /// <summary>
    /// Creates a new ConnectedRegistryParent.
    /// </summary>
    public ConnectedRegistryParent()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of ConnectedRegistryParent.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _id = DefineProperty<ResourceIdentifier>("Id", ["id"]);
        _syncProperties = DefineModelProperty<ConnectedRegistrySyncProperties>("SyncProperties", ["syncProperties"]);
    }
}
