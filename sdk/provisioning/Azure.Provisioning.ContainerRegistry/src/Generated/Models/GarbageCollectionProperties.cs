// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.ContainerRegistry;

/// <summary>
/// The garbage collection properties of the connected registry.
/// </summary>
public partial class GarbageCollectionProperties : ProvisionableConstruct
{
    /// <summary>
    /// Indicates whether garbage collection is enabled for the connected
    /// registry.
    /// </summary>
    public BicepValue<bool> Enabled 
    {
        get { Initialize(); return _enabled!; }
        set { Initialize(); _enabled!.Assign(value); }
    }
    private BicepValue<bool>? _enabled;

    /// <summary>
    /// The cron expression indicating the schedule that the connected registry
    /// will run garbage collection.
    /// </summary>
    public BicepValue<string> Schedule 
    {
        get { Initialize(); return _schedule!; }
        set { Initialize(); _schedule!.Assign(value); }
    }
    private BicepValue<string>? _schedule;

    /// <summary>
    /// Creates a new GarbageCollectionProperties.
    /// </summary>
    public GarbageCollectionProperties()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of GarbageCollectionProperties.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _enabled = DefineProperty<bool>("Enabled", ["enabled"]);
        _schedule = DefineProperty<string>("Schedule", ["schedule"]);
    }
}
