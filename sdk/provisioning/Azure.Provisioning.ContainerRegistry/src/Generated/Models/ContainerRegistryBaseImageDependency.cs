// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.ContainerRegistry;

/// <summary>
/// Properties that describe a base image dependency.
/// </summary>
public partial class ContainerRegistryBaseImageDependency : ProvisioningConstruct
{
    /// <summary>
    /// The type of the base image dependency.
    /// </summary>
    public BicepValue<ContainerRegistryBaseImageDependencyType> DependencyType { get => _dependencyType; }
    private readonly BicepValue<ContainerRegistryBaseImageDependencyType> _dependencyType;

    /// <summary>
    /// The registry login server.
    /// </summary>
    public BicepValue<string> Registry { get => _registry; }
    private readonly BicepValue<string> _registry;

    /// <summary>
    /// The repository name.
    /// </summary>
    public BicepValue<string> Repository { get => _repository; }
    private readonly BicepValue<string> _repository;

    /// <summary>
    /// The tag name.
    /// </summary>
    public BicepValue<string> Tag { get => _tag; }
    private readonly BicepValue<string> _tag;

    /// <summary>
    /// The sha256-based digest of the image manifest.
    /// </summary>
    public BicepValue<string> Digest { get => _digest; }
    private readonly BicepValue<string> _digest;

    /// <summary>
    /// Creates a new ContainerRegistryBaseImageDependency.
    /// </summary>
    public ContainerRegistryBaseImageDependency()
    {
        _dependencyType = BicepValue<ContainerRegistryBaseImageDependencyType>.DefineProperty(this, "DependencyType", ["type"], isOutput: true);
        _registry = BicepValue<string>.DefineProperty(this, "Registry", ["registry"], isOutput: true);
        _repository = BicepValue<string>.DefineProperty(this, "Repository", ["repository"], isOutput: true);
        _tag = BicepValue<string>.DefineProperty(this, "Tag", ["tag"], isOutput: true);
        _digest = BicepValue<string>.DefineProperty(this, "Digest", ["digest"], isOutput: true);
    }
}
