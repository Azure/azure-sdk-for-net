// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.ContainerRegistry;

/// <summary>
/// The health of the auth credential.
/// </summary>
public partial class ContainerRegistryCredentialHealth : ProvisionableConstruct
{
    /// <summary>
    /// The health status of credential.
    /// </summary>
    public BicepValue<ContainerRegistryCredentialHealthStatus> Status 
    {
        get { Initialize(); return _status!; }
    }
    private BicepValue<ContainerRegistryCredentialHealthStatus>? _status;

    /// <summary>
    /// Error code representing the health check error.
    /// </summary>
    public BicepValue<string> ErrorCode 
    {
        get { Initialize(); return _errorCode!; }
    }
    private BicepValue<string>? _errorCode;

    /// <summary>
    /// Descriptive message representing the health check error.
    /// </summary>
    public BicepValue<string> ErrorMessage 
    {
        get { Initialize(); return _errorMessage!; }
    }
    private BicepValue<string>? _errorMessage;

    /// <summary>
    /// Creates a new ContainerRegistryCredentialHealth.
    /// </summary>
    public ContainerRegistryCredentialHealth()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of
    /// ContainerRegistryCredentialHealth.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _status = DefineProperty<ContainerRegistryCredentialHealthStatus>("Status", ["status"], isOutput: true);
        _errorCode = DefineProperty<string>("ErrorCode", ["errorCode"], isOutput: true);
        _errorMessage = DefineProperty<string>("ErrorMessage", ["errorMessage"], isOutput: true);
    }
}
