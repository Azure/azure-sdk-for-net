// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.ContainerRegistry;

/// <summary>
/// The retention policy for a container registry.
/// </summary>
public partial class ContainerRegistryRetentionPolicy : ProvisioningConstruct
{
    /// <summary>
    /// The number of days to retain an untagged manifest after which it gets
    /// purged.
    /// </summary>
    public BicepValue<int> Days { get => _days; set => _days.Assign(value); }
    private readonly BicepValue<int> _days;

    /// <summary>
    /// The timestamp when the policy was last updated.
    /// </summary>
    public BicepValue<DateTimeOffset> LastUpdatedOn { get => _lastUpdatedOn; }
    private readonly BicepValue<DateTimeOffset> _lastUpdatedOn;

    /// <summary>
    /// The value that indicates whether the policy is enabled or not.
    /// </summary>
    public BicepValue<ContainerRegistryPolicyStatus> Status { get => _status; set => _status.Assign(value); }
    private readonly BicepValue<ContainerRegistryPolicyStatus> _status;

    /// <summary>
    /// Creates a new ContainerRegistryRetentionPolicy.
    /// </summary>
    public ContainerRegistryRetentionPolicy()
    {
        _days = BicepValue<int>.DefineProperty(this, "Days", ["days"]);
        _lastUpdatedOn = BicepValue<DateTimeOffset>.DefineProperty(this, "LastUpdatedOn", ["lastUpdatedTime"], isOutput: true);
        _status = BicepValue<ContainerRegistryPolicyStatus>.DefineProperty(this, "Status", ["status"]);
    }
}
