// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.ContainerRegistry;

/// <summary>
/// The trigger based on base image dependency.
/// </summary>
public partial class ContainerRegistryBaseImageTrigger : ProvisioningConstruct
{
    /// <summary>
    /// The type of the auto trigger for base image dependency updates.
    /// </summary>
    public BicepValue<ContainerRegistryBaseImageTriggerType> BaseImageTriggerType { get => _baseImageTriggerType; set => _baseImageTriggerType.Assign(value); }
    private readonly BicepValue<ContainerRegistryBaseImageTriggerType> _baseImageTriggerType;

    /// <summary>
    /// The endpoint URL for receiving update triggers.
    /// </summary>
    public BicepValue<string> UpdateTriggerEndpoint { get => _updateTriggerEndpoint; set => _updateTriggerEndpoint.Assign(value); }
    private readonly BicepValue<string> _updateTriggerEndpoint;

    /// <summary>
    /// Type of Payload body for Base image update triggers.
    /// </summary>
    public BicepValue<ContainerRegistryUpdateTriggerPayloadType> UpdateTriggerPayloadType { get => _updateTriggerPayloadType; set => _updateTriggerPayloadType.Assign(value); }
    private readonly BicepValue<ContainerRegistryUpdateTriggerPayloadType> _updateTriggerPayloadType;

    /// <summary>
    /// The current status of trigger.
    /// </summary>
    public BicepValue<ContainerRegistryTriggerStatus> Status { get => _status; set => _status.Assign(value); }
    private readonly BicepValue<ContainerRegistryTriggerStatus> _status;

    /// <summary>
    /// The name of the trigger.
    /// </summary>
    public BicepValue<string> Name { get => _name; set => _name.Assign(value); }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// Creates a new ContainerRegistryBaseImageTrigger.
    /// </summary>
    public ContainerRegistryBaseImageTrigger()
    {
        _baseImageTriggerType = BicepValue<ContainerRegistryBaseImageTriggerType>.DefineProperty(this, "BaseImageTriggerType", ["baseImageTriggerType"]);
        _updateTriggerEndpoint = BicepValue<string>.DefineProperty(this, "UpdateTriggerEndpoint", ["updateTriggerEndpoint"]);
        _updateTriggerPayloadType = BicepValue<ContainerRegistryUpdateTriggerPayloadType>.DefineProperty(this, "UpdateTriggerPayloadType", ["updateTriggerPayloadType"]);
        _status = BicepValue<ContainerRegistryTriggerStatus>.DefineProperty(this, "Status", ["status"]);
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"]);
    }
}
