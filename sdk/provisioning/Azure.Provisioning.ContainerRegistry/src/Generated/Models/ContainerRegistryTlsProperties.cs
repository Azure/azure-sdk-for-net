// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.ContainerRegistry;

/// <summary>
/// The TLS properties of the connected registry login server.
/// </summary>
public partial class ContainerRegistryTlsProperties : ProvisionableConstruct
{
    /// <summary>
    /// Indicates whether HTTPS is enabled for the login server.
    /// </summary>
    public BicepValue<ContainerRegistryTlsStatus> Status 
    {
        get { Initialize(); return _status!; }
    }
    private BicepValue<ContainerRegistryTlsStatus>? _status;

    /// <summary>
    /// The certificate used to configure HTTPS for the login server.
    /// </summary>
    public ContainerRegistryTlsCertificateProperties Certificate 
    {
        get { Initialize(); return _certificate!; }
    }
    private ContainerRegistryTlsCertificateProperties? _certificate;

    /// <summary>
    /// Creates a new ContainerRegistryTlsProperties.
    /// </summary>
    public ContainerRegistryTlsProperties()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of
    /// ContainerRegistryTlsProperties.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _status = DefineProperty<ContainerRegistryTlsStatus>("Status", ["status"], isOutput: true);
        _certificate = DefineModelProperty<ContainerRegistryTlsCertificateProperties>("Certificate", ["certificate"], isOutput: true);
    }
}
