// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.ContainerRegistry;

/// <summary>
/// The login server properties of the connected registry.
/// </summary>
public partial class ConnectedRegistryLoginServer : ProvisionableConstruct
{
    /// <summary>
    /// The host of the connected registry. Can be FQDN or IP.
    /// </summary>
    public BicepValue<string> Host 
    {
        get { Initialize(); return _host!; }
    }
    private BicepValue<string>? _host;

    /// <summary>
    /// The TLS properties of the connected registry login server.
    /// </summary>
    public ContainerRegistryTlsProperties Tls 
    {
        get { Initialize(); return _tls!; }
    }
    private ContainerRegistryTlsProperties? _tls;

    /// <summary>
    /// Creates a new ConnectedRegistryLoginServer.
    /// </summary>
    public ConnectedRegistryLoginServer()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of ConnectedRegistryLoginServer.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _host = DefineProperty<string>("Host", ["host"], isOutput: true);
        _tls = DefineModelProperty<ContainerRegistryTlsProperties>("Tls", ["tls"], isOutput: true);
    }
}
