// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning.Primitives;

namespace Azure.Provisioning.ContainerRegistry;

/// <summary>
/// The platform properties against which the run has to happen.
/// </summary>
public partial class ContainerRegistryPlatformProperties : ProvisioningConstruct
{
    /// <summary>
    /// The operating system type required for the run.
    /// </summary>
    public BicepValue<ContainerRegistryOS> OS { get => _oS; set => _oS.Assign(value); }
    private readonly BicepValue<ContainerRegistryOS> _oS;

    /// <summary>
    /// The OS architecture.
    /// </summary>
    public BicepValue<ContainerRegistryOSArchitecture> Architecture { get => _architecture; set => _architecture.Assign(value); }
    private readonly BicepValue<ContainerRegistryOSArchitecture> _architecture;

    /// <summary>
    /// Variant of the CPU.
    /// </summary>
    public BicepValue<ContainerRegistryCpuVariant> Variant { get => _variant; set => _variant.Assign(value); }
    private readonly BicepValue<ContainerRegistryCpuVariant> _variant;

    /// <summary>
    /// Creates a new ContainerRegistryPlatformProperties.
    /// </summary>
    public ContainerRegistryPlatformProperties()
    {
        _oS = BicepValue<ContainerRegistryOS>.DefineProperty(this, "OS", ["os"]);
        _architecture = BicepValue<ContainerRegistryOSArchitecture>.DefineProperty(this, "Architecture", ["architecture"]);
        _variant = BicepValue<ContainerRegistryCpuVariant>.DefineProperty(this, "Variant", ["variant"]);
    }
}
