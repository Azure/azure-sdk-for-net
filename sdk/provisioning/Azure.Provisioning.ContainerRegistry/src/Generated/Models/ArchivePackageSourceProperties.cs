// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.ContainerRegistry;

/// <summary>
/// The properties of the archive package source.
/// </summary>
public partial class ArchivePackageSourceProperties : ProvisionableConstruct
{
    /// <summary>
    /// The type of package source for a archive.
    /// </summary>
    public BicepValue<ArchivePackageSourceType> SourceType 
    {
        get { Initialize(); return _sourceType!; }
        set { Initialize(); _sourceType!.Assign(value); }
    }
    private BicepValue<ArchivePackageSourceType>? _sourceType;

    /// <summary>
    /// The external repository url.
    /// </summary>
    public BicepValue<Uri> Uri 
    {
        get { Initialize(); return _uri!; }
        set { Initialize(); _uri!.Assign(value); }
    }
    private BicepValue<Uri>? _uri;

    /// <summary>
    /// Creates a new ArchivePackageSourceProperties.
    /// </summary>
    public ArchivePackageSourceProperties()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of
    /// ArchivePackageSourceProperties.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _sourceType = DefineProperty<ArchivePackageSourceType>("SourceType", ["type"]);
        _uri = DefineProperty<Uri>("Uri", ["url"]);
    }
}
