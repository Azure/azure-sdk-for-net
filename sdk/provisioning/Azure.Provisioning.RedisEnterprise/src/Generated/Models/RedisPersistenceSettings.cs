// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.RedisEnterprise;

/// <summary>
/// Persistence-related configuration for the Redis Enterprise database.
/// </summary>
public partial class RedisPersistenceSettings : ProvisionableConstruct
{
    /// <summary>
    /// Sets whether AOF is enabled. Note that at most one of AOF or RDB
    /// persistence may be enabled.
    /// </summary>
    public BicepValue<bool> IsAofEnabled 
    {
        get { Initialize(); return _isAofEnabled!; }
        set { Initialize(); _isAofEnabled!.Assign(value); }
    }
    private BicepValue<bool>? _isAofEnabled;

    /// <summary>
    /// Sets whether RDB is enabled. Note that at most one of AOF or RDB
    /// persistence may be enabled.
    /// </summary>
    public BicepValue<bool> IsRdbEnabled 
    {
        get { Initialize(); return _isRdbEnabled!; }
        set { Initialize(); _isRdbEnabled!.Assign(value); }
    }
    private BicepValue<bool>? _isRdbEnabled;

    /// <summary>
    /// Sets the frequency at which data is written to disk. Defaults to
    /// &apos;1s&apos;, meaning &apos;every second&apos;. Note that the
    /// &apos;always&apos; setting is deprecated, because of its performance
    /// impact.
    /// </summary>
    public BicepValue<PersistenceSettingAofFrequency> AofFrequency 
    {
        get { Initialize(); return _aofFrequency!; }
        set { Initialize(); _aofFrequency!.Assign(value); }
    }
    private BicepValue<PersistenceSettingAofFrequency>? _aofFrequency;

    /// <summary>
    /// Sets the frequency at which a snapshot of the database is created.
    /// </summary>
    public BicepValue<PersistenceSettingRdbFrequency> RdbFrequency 
    {
        get { Initialize(); return _rdbFrequency!; }
        set { Initialize(); _rdbFrequency!.Assign(value); }
    }
    private BicepValue<PersistenceSettingRdbFrequency>? _rdbFrequency;

    /// <summary>
    /// Creates a new RedisPersistenceSettings.
    /// </summary>
    public RedisPersistenceSettings()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of RedisPersistenceSettings.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _isAofEnabled = DefineProperty<bool>("IsAofEnabled", ["aofEnabled"]);
        _isRdbEnabled = DefineProperty<bool>("IsRdbEnabled", ["rdbEnabled"]);
        _aofFrequency = DefineProperty<PersistenceSettingAofFrequency>("AofFrequency", ["aofFrequency"]);
        _rdbFrequency = DefineProperty<PersistenceSettingRdbFrequency>("RdbFrequency", ["rdbFrequency"]);
    }
}
