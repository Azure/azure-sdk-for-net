// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.RedisEnterprise;

/// <summary>
/// SKU parameters supplied to the create Redis Enterprise cluster operation.
/// </summary>
public partial class RedisEnterpriseSku : ProvisionableConstruct
{
    /// <summary>
    /// The level of Redis Enterprise cluster to deploy. Possible values:
    /// (&apos;Balanced_B5&apos;, &apos;MemoryOptimized_M10&apos;,
    /// &apos;ComputeOptimized_X5&apos;, etc.). For more information on SKUs
    /// see the latest pricing documentation. Note that additional SKUs may
    /// become supported in the future.
    /// </summary>
    public BicepValue<RedisEnterpriseSkuName> Name 
    {
        get { Initialize(); return _name!; }
        set { Initialize(); _name!.Assign(value); }
    }
    private BicepValue<RedisEnterpriseSkuName>? _name;

    /// <summary>
    /// This property is only used with Enterprise and EnterpriseFlash SKUs.
    /// Determines the size of the cluster. Valid values are (2, 4, 6, ...)
    /// for Enterprise SKUs and (3, 9, 15, ...) for EnterpriseFlash SKUs.
    /// </summary>
    public BicepValue<int> Capacity 
    {
        get { Initialize(); return _capacity!; }
        set { Initialize(); _capacity!.Assign(value); }
    }
    private BicepValue<int>? _capacity;

    /// <summary>
    /// Creates a new RedisEnterpriseSku.
    /// </summary>
    public RedisEnterpriseSku()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of RedisEnterpriseSku.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _name = DefineProperty<RedisEnterpriseSkuName>("Name", ["name"]);
        _capacity = DefineProperty<int>("Capacity", ["capacity"]);
    }
}
