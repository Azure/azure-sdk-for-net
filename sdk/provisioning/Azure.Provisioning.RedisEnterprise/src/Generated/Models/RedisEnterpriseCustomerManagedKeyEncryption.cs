// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.RedisEnterprise;

/// <summary>
/// All Customer-managed key encryption properties for the resource. Set this
/// to an empty object to use Microsoft-managed key encryption.
/// </summary>
public partial class RedisEnterpriseCustomerManagedKeyEncryption : ProvisionableConstruct
{
    /// <summary>
    /// All identity configuration for Customer-managed key settings defining
    /// which identity should be used to auth to Key Vault.
    /// </summary>
    public RedisEnterpriseCustomerManagedKeyEncryptionKeyIdentity KeyEncryptionKeyIdentity 
    {
        get { Initialize(); return _keyEncryptionKeyIdentity!; }
        set { Initialize(); AssignOrReplace(ref _keyEncryptionKeyIdentity, value); }
    }
    private RedisEnterpriseCustomerManagedKeyEncryptionKeyIdentity? _keyEncryptionKeyIdentity;

    /// <summary>
    /// Key encryption key Url, versioned only. Ex:
    /// https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78.
    /// </summary>
    public BicepValue<Uri> KeyEncryptionKeyUri 
    {
        get { Initialize(); return _keyEncryptionKeyUri!; }
        set { Initialize(); _keyEncryptionKeyUri!.Assign(value); }
    }
    private BicepValue<Uri>? _keyEncryptionKeyUri;

    /// <summary>
    /// Creates a new RedisEnterpriseCustomerManagedKeyEncryption.
    /// </summary>
    public RedisEnterpriseCustomerManagedKeyEncryption()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of
    /// RedisEnterpriseCustomerManagedKeyEncryption.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _keyEncryptionKeyIdentity = DefineModelProperty<RedisEnterpriseCustomerManagedKeyEncryptionKeyIdentity>("KeyEncryptionKeyIdentity", ["keyEncryptionKeyIdentity"]);
        _keyEncryptionKeyUri = DefineProperty<Uri>("KeyEncryptionKeyUri", ["keyEncryptionKeyUrl"]);
    }
}
