// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.OperationalInsights;

/// <summary>
/// Table&apos;s schema.
/// </summary>
public partial class OperationalInsightsSchema : ProvisioningConstruct
{
    /// <summary>
    /// Table name.
    /// </summary>
    public BicepValue<string> Name { get => _name; set => _name.Assign(value); }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// Table display name.
    /// </summary>
    public BicepValue<string> DisplayName { get => _displayName; set => _displayName.Assign(value); }
    private readonly BicepValue<string> _displayName;

    /// <summary>
    /// Table description.
    /// </summary>
    public BicepValue<string> Description { get => _description; set => _description.Assign(value); }
    private readonly BicepValue<string> _description;

    /// <summary>
    /// A list of table custom columns.
    /// </summary>
    public BicepList<OperationalInsightsColumn> Columns { get => _columns; set => _columns.Assign(value); }
    private readonly BicepList<OperationalInsightsColumn> _columns;

    /// <summary>
    /// A list of table standard columns.
    /// </summary>
    public BicepList<OperationalInsightsColumn> StandardColumns { get => _standardColumns; }
    private readonly BicepList<OperationalInsightsColumn> _standardColumns;

    /// <summary>
    /// Table category.
    /// </summary>
    public BicepList<string> Categories { get => _categories; }
    private readonly BicepList<string> _categories;

    /// <summary>
    /// Table labels.
    /// </summary>
    public BicepList<string> Labels { get => _labels; }
    private readonly BicepList<string> _labels;

    /// <summary>
    /// Table&apos;s creator.
    /// </summary>
    public BicepValue<OperationalInsightsTableCreator> Source { get => _source; }
    private readonly BicepValue<OperationalInsightsTableCreator> _source;

    /// <summary>
    /// Table&apos;s creator.
    /// </summary>
    public BicepValue<OperationalInsightsTableType> TableType { get => _tableType; }
    private readonly BicepValue<OperationalInsightsTableType> _tableType;

    /// <summary>
    /// The subtype describes what APIs can be used to interact with the table,
    /// and what features are available against it.
    /// </summary>
    public BicepValue<OperationalInsightsTableSubType> TableSubType { get => _tableSubType; }
    private readonly BicepValue<OperationalInsightsTableSubType> _tableSubType;

    /// <summary>
    /// List of solutions the table is affiliated with.
    /// </summary>
    public BicepList<string> Solutions { get => _solutions; }
    private readonly BicepList<string> _solutions;

    /// <summary>
    /// Creates a new OperationalInsightsSchema.
    /// </summary>
    public OperationalInsightsSchema()
    {
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"]);
        _displayName = BicepValue<string>.DefineProperty(this, "DisplayName", ["displayName"]);
        _description = BicepValue<string>.DefineProperty(this, "Description", ["description"]);
        _columns = BicepList<OperationalInsightsColumn>.DefineProperty(this, "Columns", ["columns"]);
        _standardColumns = BicepList<OperationalInsightsColumn>.DefineProperty(this, "StandardColumns", ["standardColumns"], isOutput: true);
        _categories = BicepList<string>.DefineProperty(this, "Categories", ["categories"], isOutput: true);
        _labels = BicepList<string>.DefineProperty(this, "Labels", ["labels"], isOutput: true);
        _source = BicepValue<OperationalInsightsTableCreator>.DefineProperty(this, "Source", ["source"], isOutput: true);
        _tableType = BicepValue<OperationalInsightsTableType>.DefineProperty(this, "TableType", ["tableType"], isOutput: true);
        _tableSubType = BicepValue<OperationalInsightsTableSubType>.DefineProperty(this, "TableSubType", ["tableSubType"], isOutput: true);
        _solutions = BicepList<string>.DefineProperty(this, "Solutions", ["solutions"], isOutput: true);
    }
}
