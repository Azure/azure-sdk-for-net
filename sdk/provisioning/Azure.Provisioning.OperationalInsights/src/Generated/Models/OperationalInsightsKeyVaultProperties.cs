// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.OperationalInsights;

/// <summary>
/// The key vault properties.
/// </summary>
public partial class OperationalInsightsKeyVaultProperties : ProvisioningConstruct
{
    /// <summary>
    /// The Key Vault uri which holds they key associated with the Log
    /// Analytics cluster.
    /// </summary>
    public BicepValue<Uri> KeyVaultUri { get => _keyVaultUri; set => _keyVaultUri.Assign(value); }
    private readonly BicepValue<Uri> _keyVaultUri;

    /// <summary>
    /// The name of the key associated with the Log Analytics cluster.
    /// </summary>
    public BicepValue<string> KeyName { get => _keyName; set => _keyName.Assign(value); }
    private readonly BicepValue<string> _keyName;

    /// <summary>
    /// The version of the key associated with the Log Analytics cluster.
    /// </summary>
    public BicepValue<string> KeyVersion { get => _keyVersion; set => _keyVersion.Assign(value); }
    private readonly BicepValue<string> _keyVersion;

    /// <summary>
    /// Selected key minimum required size.
    /// </summary>
    public BicepValue<int> KeyRsaSize { get => _keyRsaSize; set => _keyRsaSize.Assign(value); }
    private readonly BicepValue<int> _keyRsaSize;

    /// <summary>
    /// Creates a new OperationalInsightsKeyVaultProperties.
    /// </summary>
    public OperationalInsightsKeyVaultProperties()
    {
        _keyVaultUri = BicepValue<Uri>.DefineProperty(this, "KeyVaultUri", ["keyVaultUri"]);
        _keyName = BicepValue<string>.DefineProperty(this, "KeyName", ["keyName"]);
        _keyVersion = BicepValue<string>.DefineProperty(this, "KeyVersion", ["keyVersion"]);
        _keyRsaSize = BicepValue<int>.DefineProperty(this, "KeyRsaSize", ["keyRsaSize"]);
    }
}
