// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure;
using Azure.Core;
using Azure.Provisioning;
using Azure.Provisioning.Expressions;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;
using System.ComponentModel;

namespace Azure.Provisioning.OperationalInsights;

/// <summary>
/// OperationalInsightsWorkspace.
/// </summary>
public partial class OperationalInsightsWorkspace : Resource
{
    /// <summary>
    /// The name of the workspace.
    /// </summary>
    public BicepValue<string> Name { get => _name; set => _name.Assign(value); }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// Gets or sets the Location.
    /// </summary>
    public BicepValue<AzureLocation> Location { get => _location; set => _location.Assign(value); }
    private readonly BicepValue<AzureLocation> _location;

    /// <summary>
    /// The resource ID of the default Data Collection Rule to use for this
    /// workspace. Expected format is -
    /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionRules/{dcrName}.
    /// </summary>
    public BicepValue<ResourceIdentifier> DefaultDataCollectionRuleResourceId { get => _defaultDataCollectionRuleResourceId; set => _defaultDataCollectionRuleResourceId.Assign(value); }
    private readonly BicepValue<ResourceIdentifier> _defaultDataCollectionRuleResourceId;

    /// <summary>
    /// The etag of the workspace.
    /// </summary>
    public BicepValue<ETag> ETag { get => _eTag; set => _eTag.Assign(value); }
    private readonly BicepValue<ETag> _eTag;

    /// <summary>
    /// Workspace features.
    /// </summary>
    public BicepValue<OperationalInsightsWorkspaceFeatures> Features { get => _features; set => _features.Assign(value); }
    private readonly BicepValue<OperationalInsightsWorkspaceFeatures> _features;

    /// <summary>
    /// Indicates whether customer managed storage is mandatory for query
    /// management.
    /// </summary>
    public BicepValue<bool> ForceCmkForQuery { get => _forceCmkForQuery; set => _forceCmkForQuery.Assign(value); }
    private readonly BicepValue<bool> _forceCmkForQuery;

    /// <summary>
    /// The identity of the resource. Current supported identity types: None,
    /// SystemAssigned, UserAssigned.
    /// </summary>
    public BicepValue<ManagedServiceIdentity> Identity { get => _identity; set => _identity.Assign(value); }
    private readonly BicepValue<ManagedServiceIdentity> _identity;

    /// <summary>
    /// The network access type for accessing Log Analytics ingestion.
    /// </summary>
    public BicepValue<OperationalInsightsPublicNetworkAccessType> PublicNetworkAccessForIngestion { get => _publicNetworkAccessForIngestion; set => _publicNetworkAccessForIngestion.Assign(value); }
    private readonly BicepValue<OperationalInsightsPublicNetworkAccessType> _publicNetworkAccessForIngestion;

    /// <summary>
    /// The network access type for accessing Log Analytics query.
    /// </summary>
    public BicepValue<OperationalInsightsPublicNetworkAccessType> PublicNetworkAccessForQuery { get => _publicNetworkAccessForQuery; set => _publicNetworkAccessForQuery.Assign(value); }
    private readonly BicepValue<OperationalInsightsPublicNetworkAccessType> _publicNetworkAccessForQuery;

    /// <summary>
    /// The workspace data retention in days. Allowed values are per pricing
    /// plan. See pricing tiers documentation for details.
    /// </summary>
    public BicepValue<int> RetentionInDays { get => _retentionInDays; set => _retentionInDays.Assign(value); }
    private readonly BicepValue<int> _retentionInDays;

    /// <summary>
    /// The SKU of the workspace.
    /// </summary>
    public BicepValue<OperationalInsightsWorkspaceSku> Sku { get => _sku; set => _sku.Assign(value); }
    private readonly BicepValue<OperationalInsightsWorkspaceSku> _sku;

    /// <summary>
    /// Gets or sets the Tags.
    /// </summary>
    public BicepDictionary<string> Tags { get => _tags; set => _tags.Assign(value); }
    private readonly BicepDictionary<string> _tags;

    /// <summary>
    /// The daily volume cap for ingestion.
    /// </summary>
    public BicepValue<OperationalInsightsWorkspaceCapping> WorkspaceCapping { get => _workspaceCapping; set => _workspaceCapping.Assign(value); }
    private readonly BicepValue<OperationalInsightsWorkspaceCapping> _workspaceCapping;

    /// <summary>
    /// Workspace creation date.
    /// </summary>
    public BicepValue<DateTimeOffset> CreatedOn { get => _createdOn; }
    private readonly BicepValue<DateTimeOffset> _createdOn;

    /// <summary>
    /// This is a read-only property. Represents the ID associated with the
    /// workspace.
    /// </summary>
    public BicepValue<Guid> CustomerId { get => _customerId; }
    private readonly BicepValue<Guid> _customerId;

    /// <summary>
    /// Gets the Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id { get => _id; }
    private readonly BicepValue<ResourceIdentifier> _id;

    /// <summary>
    /// Workspace modification date.
    /// </summary>
    public BicepValue<DateTimeOffset> ModifiedOn { get => _modifiedOn; }
    private readonly BicepValue<DateTimeOffset> _modifiedOn;

    /// <summary>
    /// List of linked private link scope resources.
    /// </summary>
    public BicepList<OperationalInsightsPrivateLinkScopedResourceInfo> PrivateLinkScopedResources { get => _privateLinkScopedResources; }
    private readonly BicepList<OperationalInsightsPrivateLinkScopedResourceInfo> _privateLinkScopedResources;

    /// <summary>
    /// The provisioning state of the workspace.
    /// </summary>
    public BicepValue<OperationalInsightsWorkspaceEntityStatus> ProvisioningState { get => _provisioningState; }
    private readonly BicepValue<OperationalInsightsWorkspaceEntityStatus> _provisioningState;

    /// <summary>
    /// Gets the SystemData.
    /// </summary>
    public BicepValue<SystemData> SystemData { get => _systemData; }
    private readonly BicepValue<SystemData> _systemData;

    /// <summary>
    /// Creates a new OperationalInsightsWorkspace.
    /// </summary>
    /// <param name="resourceName">Name of the OperationalInsightsWorkspace.</param>
    /// <param name="resourceVersion">Version of the OperationalInsightsWorkspace.</param>
    public OperationalInsightsWorkspace(string resourceName, string? resourceVersion = default)
        : base(resourceName, "Microsoft.OperationalInsights/workspaces", resourceVersion ?? "2023-09-01")
    {
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"], isRequired: true);
        _location = BicepValue<AzureLocation>.DefineProperty(this, "Location", ["location"], isRequired: true);
        _defaultDataCollectionRuleResourceId = BicepValue<ResourceIdentifier>.DefineProperty(this, "DefaultDataCollectionRuleResourceId", ["properties", "defaultDataCollectionRuleResourceId"]);
        _eTag = BicepValue<ETag>.DefineProperty(this, "ETag", ["etag"]);
        _features = BicepValue<OperationalInsightsWorkspaceFeatures>.DefineProperty(this, "Features", ["properties", "features"]);
        _forceCmkForQuery = BicepValue<bool>.DefineProperty(this, "ForceCmkForQuery", ["properties", "forceCmkForQuery"]);
        _identity = BicepValue<ManagedServiceIdentity>.DefineProperty(this, "Identity", ["identity"]);
        _publicNetworkAccessForIngestion = BicepValue<OperationalInsightsPublicNetworkAccessType>.DefineProperty(this, "PublicNetworkAccessForIngestion", ["properties", "publicNetworkAccessForIngestion"]);
        _publicNetworkAccessForQuery = BicepValue<OperationalInsightsPublicNetworkAccessType>.DefineProperty(this, "PublicNetworkAccessForQuery", ["properties", "publicNetworkAccessForQuery"]);
        _retentionInDays = BicepValue<int>.DefineProperty(this, "RetentionInDays", ["properties", "retentionInDays"]);
        _sku = BicepValue<OperationalInsightsWorkspaceSku>.DefineProperty(this, "Sku", ["properties", "sku"]);
        _tags = BicepDictionary<string>.DefineProperty(this, "Tags", ["tags"]);
        _workspaceCapping = BicepValue<OperationalInsightsWorkspaceCapping>.DefineProperty(this, "WorkspaceCapping", ["properties", "workspaceCapping"]);
        _createdOn = BicepValue<DateTimeOffset>.DefineProperty(this, "CreatedOn", ["properties", "createdDate"], isOutput: true);
        _customerId = BicepValue<Guid>.DefineProperty(this, "CustomerId", ["properties", "customerId"], isOutput: true);
        _id = BicepValue<ResourceIdentifier>.DefineProperty(this, "Id", ["id"], isOutput: true);
        _modifiedOn = BicepValue<DateTimeOffset>.DefineProperty(this, "ModifiedOn", ["properties", "modifiedDate"], isOutput: true);
        _privateLinkScopedResources = BicepList<OperationalInsightsPrivateLinkScopedResourceInfo>.DefineProperty(this, "PrivateLinkScopedResources", ["properties", "privateLinkScopedResources"], isOutput: true);
        _provisioningState = BicepValue<OperationalInsightsWorkspaceEntityStatus>.DefineProperty(this, "ProvisioningState", ["properties", "provisioningState"], isOutput: true);
        _systemData = BicepValue<SystemData>.DefineProperty(this, "SystemData", ["systemData"], isOutput: true);
    }

    /// <summary>
    /// Supported OperationalInsightsWorkspace resource versions.
    /// </summary>
    public static class ResourceVersions
    {
        /// <summary>
        /// 2023-09-01.
        /// </summary>
        public static readonly string V2023_09_01 = "2023-09-01";

        /// <summary>
        /// 2022-10-01.
        /// </summary>
        public static readonly string V2022_10_01 = "2022-10-01";

        /// <summary>
        /// 2021-06-01.
        /// </summary>
        public static readonly string V2021_06_01 = "2021-06-01";

        /// <summary>
        /// 2020-10-01.
        /// </summary>
        public static readonly string V2020_10_01 = "2020-10-01";

        /// <summary>
        /// 2020-08-01.
        /// </summary>
        public static readonly string V2020_08_01 = "2020-08-01";

        /// <summary>
        /// 2015-03-20.
        /// </summary>
        public static readonly string V2015_03_20 = "2015-03-20";
    }

    /// <summary>
    /// Creates a reference to an existing OperationalInsightsWorkspace.
    /// </summary>
    /// <param name="resourceName">Name of the OperationalInsightsWorkspace.</param>
    /// <param name="resourceVersion">Version of the OperationalInsightsWorkspace.</param>
    /// <returns>The existing OperationalInsightsWorkspace resource.</returns>
    public static OperationalInsightsWorkspace FromExisting(string resourceName, string? resourceVersion = default) =>
        new(resourceName, resourceVersion) { IsExistingResource = true };

    /// <summary>
    /// Get the requirements for naming this OperationalInsightsWorkspace
    /// resource.
    /// </summary>
    /// <returns>Naming requirements.</returns>
    [EditorBrowsable(EditorBrowsableState.Never)]
    public override ResourceNameRequirements GetResourceNameRequirements() =>
        new(minLength: 4, maxLength: 63, validCharacters: ResourceNameCharacters.LowercaseLetters | ResourceNameCharacters.UppercaseLetters | ResourceNameCharacters.Numbers | ResourceNameCharacters.Hyphen);

    /// <summary>
    /// Get access keys for this OperationalInsightsWorkspace resource.
    /// </summary>
    /// <returns>The keys for this OperationalInsightsWorkspace resource.</returns>
    public OperationalInsightsWorkspaceSharedKeys GetKeys() =>
        OperationalInsightsWorkspaceSharedKeys.FromExpression(
            new FunctionCallExpression(new MemberExpression(new IdentifierExpression(ResourceName), "listKeys")));
}
