// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;

namespace Azure.Provisioning.OperationalInsights;

/// <summary>
/// OperationalInsightsTable.
/// </summary>
public partial class OperationalInsightsTable : Resource
{
    /// <summary>
    /// The name of the table.
    /// </summary>
    public BicepValue<string> Name { get => _name; set => _name.Assign(value); }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// Instruct the system how to handle and charge the logs ingested to this
    /// table.
    /// </summary>
    public BicepValue<OperationalInsightsTablePlan> Plan { get => _plan; set => _plan.Assign(value); }
    private readonly BicepValue<OperationalInsightsTablePlan> _plan;

    /// <summary>
    /// Parameters of the restore operation that initiated this table.
    /// </summary>
    public BicepValue<OperationalInsightsTableRestoredLogs> RestoredLogs { get => _restoredLogs; set => _restoredLogs.Assign(value); }
    private readonly BicepValue<OperationalInsightsTableRestoredLogs> _restoredLogs;

    /// <summary>
    /// The table retention in days, between 4 and 730. Setting this property
    /// to -1 will default to the workspace retention.
    /// </summary>
    public BicepValue<int> RetentionInDays { get => _retentionInDays; set => _retentionInDays.Assign(value); }
    private readonly BicepValue<int> _retentionInDays;

    /// <summary>
    /// Table schema.
    /// </summary>
    public BicepValue<OperationalInsightsSchema> Schema { get => _schema; set => _schema.Assign(value); }
    private readonly BicepValue<OperationalInsightsSchema> _schema;

    /// <summary>
    /// Parameters of the search job that initiated this table.
    /// </summary>
    public BicepValue<OperationalInsightsTableSearchResults> SearchResults { get => _searchResults; set => _searchResults.Assign(value); }
    private readonly BicepValue<OperationalInsightsTableSearchResults> _searchResults;

    /// <summary>
    /// The table total retention in days, between 4 and 2556. Setting this
    /// property to -1 will default to table retention.
    /// </summary>
    public BicepValue<int> TotalRetentionInDays { get => _totalRetentionInDays; set => _totalRetentionInDays.Assign(value); }
    private readonly BicepValue<int> _totalRetentionInDays;

    /// <summary>
    /// The table data archive retention in days. Calculated as
    /// (totalRetentionInDays-retentionInDays).
    /// </summary>
    public BicepValue<int> ArchiveRetentionInDays { get => _archiveRetentionInDays; }
    private readonly BicepValue<int> _archiveRetentionInDays;

    /// <summary>
    /// Gets the Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id { get => _id; }
    private readonly BicepValue<ResourceIdentifier> _id;

    /// <summary>
    /// True - Value originates from workspace retention in days, False -
    /// Customer specific.
    /// </summary>
    public BicepValue<bool> IsRetentionInDaysAsDefault { get => _isRetentionInDaysAsDefault; }
    private readonly BicepValue<bool> _isRetentionInDaysAsDefault;

    /// <summary>
    /// True - Value originates from retention in days, False - Customer
    /// specific.
    /// </summary>
    public BicepValue<bool> IsTotalRetentionInDaysAsDefault { get => _isTotalRetentionInDaysAsDefault; }
    private readonly BicepValue<bool> _isTotalRetentionInDaysAsDefault;

    /// <summary>
    /// The timestamp that table plan was last modified (UTC).
    /// </summary>
    public BicepValue<string> LastPlanModifiedDate { get => _lastPlanModifiedDate; }
    private readonly BicepValue<string> _lastPlanModifiedDate;

    /// <summary>
    /// Table&apos;s current provisioning state. If set to
    /// &apos;updating&apos;, indicates a resource lock due to ongoing
    /// operation, forbidding any update to the table until the ongoing
    /// operation is concluded.
    /// </summary>
    public BicepValue<OperationalInsightsTableProvisioningState> ProvisioningState { get => _provisioningState; }
    private readonly BicepValue<OperationalInsightsTableProvisioningState> _provisioningState;

    /// <summary>
    /// Search job execution statistics.
    /// </summary>
    public BicepValue<OperationalInsightsTableResultStatistics> ResultStatistics { get => _resultStatistics; }
    private readonly BicepValue<OperationalInsightsTableResultStatistics> _resultStatistics;

    /// <summary>
    /// Gets the SystemData.
    /// </summary>
    public BicepValue<SystemData> SystemData { get => _systemData; }
    private readonly BicepValue<SystemData> _systemData;

    /// <summary>
    /// Gets or sets a reference to the parent OperationalInsightsWorkspace.
    /// </summary>
    public OperationalInsightsWorkspace? Parent { get => _parent!.Value; set => _parent!.Value = value; }
    private readonly ResourceReference<OperationalInsightsWorkspace> _parent;

    /// <summary>
    /// Creates a new OperationalInsightsTable.
    /// </summary>
    /// <param name="resourceName">Name of the OperationalInsightsTable.</param>
    /// <param name="resourceVersion">Version of the OperationalInsightsTable.</param>
    public OperationalInsightsTable(string resourceName, string? resourceVersion = default)
        : base(resourceName, "Microsoft.OperationalInsights/workspaces/tables", resourceVersion ?? "2023-09-01")
    {
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"], isRequired: true);
        _plan = BicepValue<OperationalInsightsTablePlan>.DefineProperty(this, "Plan", ["properties", "plan"]);
        _restoredLogs = BicepValue<OperationalInsightsTableRestoredLogs>.DefineProperty(this, "RestoredLogs", ["properties", "restoredLogs"]);
        _retentionInDays = BicepValue<int>.DefineProperty(this, "RetentionInDays", ["properties", "retentionInDays"]);
        _schema = BicepValue<OperationalInsightsSchema>.DefineProperty(this, "Schema", ["properties", "schema"]);
        _searchResults = BicepValue<OperationalInsightsTableSearchResults>.DefineProperty(this, "SearchResults", ["properties", "searchResults"]);
        _totalRetentionInDays = BicepValue<int>.DefineProperty(this, "TotalRetentionInDays", ["properties", "totalRetentionInDays"]);
        _archiveRetentionInDays = BicepValue<int>.DefineProperty(this, "ArchiveRetentionInDays", ["properties", "archiveRetentionInDays"], isOutput: true);
        _id = BicepValue<ResourceIdentifier>.DefineProperty(this, "Id", ["id"], isOutput: true);
        _isRetentionInDaysAsDefault = BicepValue<bool>.DefineProperty(this, "IsRetentionInDaysAsDefault", ["properties", "retentionInDaysAsDefault"], isOutput: true);
        _isTotalRetentionInDaysAsDefault = BicepValue<bool>.DefineProperty(this, "IsTotalRetentionInDaysAsDefault", ["properties", "totalRetentionInDaysAsDefault"], isOutput: true);
        _lastPlanModifiedDate = BicepValue<string>.DefineProperty(this, "LastPlanModifiedDate", ["properties", "lastPlanModifiedDate"], isOutput: true);
        _provisioningState = BicepValue<OperationalInsightsTableProvisioningState>.DefineProperty(this, "ProvisioningState", ["properties", "provisioningState"], isOutput: true);
        _resultStatistics = BicepValue<OperationalInsightsTableResultStatistics>.DefineProperty(this, "ResultStatistics", ["properties", "resultStatistics"], isOutput: true);
        _systemData = BicepValue<SystemData>.DefineProperty(this, "SystemData", ["systemData"], isOutput: true);
        _parent = ResourceReference<OperationalInsightsWorkspace>.DefineResource(this, "Parent", ["parent"], isRequired: true);
    }

    /// <summary>
    /// Supported OperationalInsightsTable resource versions.
    /// </summary>
    public static class ResourceVersions
    {
        /// <summary>
        /// 2023-09-01.
        /// </summary>
        public static readonly string V2023_09_01 = "2023-09-01";

        /// <summary>
        /// 2022-10-01.
        /// </summary>
        public static readonly string V2022_10_01 = "2022-10-01";

        /// <summary>
        /// 2020-08-01.
        /// </summary>
        public static readonly string V2020_08_01 = "2020-08-01";
    }

    /// <summary>
    /// Creates a reference to an existing OperationalInsightsTable.
    /// </summary>
    /// <param name="resourceName">Name of the OperationalInsightsTable.</param>
    /// <param name="resourceVersion">Version of the OperationalInsightsTable.</param>
    /// <returns>The existing OperationalInsightsTable resource.</returns>
    public static OperationalInsightsTable FromExisting(string resourceName, string? resourceVersion = default) =>
        new(resourceName, resourceVersion) { IsExistingResource = true };
}
