// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure;
using Azure.Core;
using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;
using System.ComponentModel;

namespace Azure.Provisioning.Network;

/// <summary>
/// PublicIPPrefix.
/// </summary>
public partial class PublicIPPrefix : ProvisionableResource
{
    /// <summary>
    /// The name of the public IP prefix.
    /// </summary>
    public BicepValue<string> Name 
    {
        get { Initialize(); return _name!; }
        set { Initialize(); _name!.Assign(value); }
    }
    private BicepValue<string>? _name;

    /// <summary>
    /// Gets or sets Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> CustomIPPrefixId 
    {
        get { Initialize(); return _customIPPrefixId!; }
        set { Initialize(); _customIPPrefixId!.Assign(value); }
    }
    private BicepValue<ResourceIdentifier>? _customIPPrefixId;

    /// <summary>
    /// The extended location of the public ip address.
    /// </summary>
    public ExtendedAzureLocation ExtendedLocation 
    {
        get { Initialize(); return _extendedLocation!; }
        set { Initialize(); AssignOrReplace(ref _extendedLocation, value); }
    }
    private ExtendedAzureLocation? _extendedLocation;

    /// <summary>
    /// Resource ID.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id 
    {
        get { Initialize(); return _id!; }
        set { Initialize(); _id!.Assign(value); }
    }
    private BicepValue<ResourceIdentifier>? _id;

    /// <summary>
    /// The list of tags associated with the public IP prefix.
    /// </summary>
    public BicepList<IPTag> IPTags 
    {
        get { Initialize(); return _iPTags!; }
        set { Initialize(); _iPTags!.Assign(value); }
    }
    private BicepList<IPTag>? _iPTags;

    /// <summary>
    /// Resource location.
    /// </summary>
    public BicepValue<AzureLocation> Location 
    {
        get { Initialize(); return _location!; }
        set { Initialize(); _location!.Assign(value); }
    }
    private BicepValue<AzureLocation>? _location;

    /// <summary>
    /// NatGateway of Public IP Prefix.
    /// </summary>
    public NatGateway NatGateway 
    {
        get { Initialize(); return _natGateway!; }
        set { Initialize(); AssignOrReplace(ref _natGateway, value); }
    }
    private NatGateway? _natGateway;

    /// <summary>
    /// The Length of the Public IP Prefix.
    /// </summary>
    public BicepValue<int> PrefixLength 
    {
        get { Initialize(); return _prefixLength!; }
        set { Initialize(); _prefixLength!.Assign(value); }
    }
    private BicepValue<int>? _prefixLength;

    /// <summary>
    /// The public IP address version.
    /// </summary>
    public BicepValue<NetworkIPVersion> PublicIPAddressVersion 
    {
        get { Initialize(); return _publicIPAddressVersion!; }
        set { Initialize(); _publicIPAddressVersion!.Assign(value); }
    }
    private BicepValue<NetworkIPVersion>? _publicIPAddressVersion;

    /// <summary>
    /// The public IP prefix SKU.
    /// </summary>
    public PublicIPPrefixSku Sku 
    {
        get { Initialize(); return _sku!; }
        set { Initialize(); AssignOrReplace(ref _sku, value); }
    }
    private PublicIPPrefixSku? _sku;

    /// <summary>
    /// Resource tags.
    /// </summary>
    public BicepDictionary<string> Tags 
    {
        get { Initialize(); return _tags!; }
        set { Initialize(); _tags!.Assign(value); }
    }
    private BicepDictionary<string>? _tags;

    /// <summary>
    /// A list of availability zones denoting the IP allocated for the resource
    /// needs to come from.
    /// </summary>
    public BicepList<string> Zones 
    {
        get { Initialize(); return _zones!; }
        set { Initialize(); _zones!.Assign(value); }
    }
    private BicepList<string>? _zones;

    /// <summary>
    /// A unique read-only string that changes whenever the resource is updated.
    /// </summary>
    public BicepValue<ETag> ETag 
    {
        get { Initialize(); return _eTag!; }
    }
    private BicepValue<ETag>? _eTag;

    /// <summary>
    /// The allocated Prefix.
    /// </summary>
    public BicepValue<string> IPPrefix 
    {
        get { Initialize(); return _iPPrefix!; }
    }
    private BicepValue<string>? _iPPrefix;

    /// <summary>
    /// Gets or sets Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> LoadBalancerFrontendIPConfigurationId 
    {
        get { Initialize(); return _loadBalancerFrontendIPConfigurationId!; }
    }
    private BicepValue<ResourceIdentifier>? _loadBalancerFrontendIPConfigurationId;

    /// <summary>
    /// The provisioning state of the public IP prefix resource.
    /// </summary>
    public BicepValue<NetworkProvisioningState> ProvisioningState 
    {
        get { Initialize(); return _provisioningState!; }
    }
    private BicepValue<NetworkProvisioningState>? _provisioningState;

    /// <summary>
    /// The list of all referenced PublicIPAddresses.
    /// </summary>
    public BicepList<SubResource> PublicIPAddresses 
    {
        get { Initialize(); return _publicIPAddresses!; }
    }
    private BicepList<SubResource>? _publicIPAddresses;

    /// <summary>
    /// The resource GUID property of the public IP prefix resource.
    /// </summary>
    public BicepValue<Guid> ResourceGuid 
    {
        get { Initialize(); return _resourceGuid!; }
    }
    private BicepValue<Guid>? _resourceGuid;

    /// <summary>
    /// Creates a new PublicIPPrefix.
    /// </summary>
    /// <param name="bicepIdentifier">
    /// The the Bicep identifier name of the PublicIPPrefix resource.  This can
    /// be used to refer to the resource in expressions, but is not the Azure
    /// name of the resource.  This value can contain letters, numbers, and
    /// underscores.
    /// </param>
    /// <param name="resourceVersion">Version of the PublicIPPrefix.</param>
    public PublicIPPrefix(string bicepIdentifier, string? resourceVersion = default)
        : base(bicepIdentifier, "Microsoft.Network/publicIPPrefixes", resourceVersion ?? "2025-01-01")
    {
    }

    /// <summary>
    /// Define all the provisionable properties of PublicIPPrefix.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _name = DefineProperty<string>("Name", ["name"], isRequired: true);
        _customIPPrefixId = DefineProperty<ResourceIdentifier>("CustomIPPrefixId", ["properties", "customIPPrefix", "id"]);
        _extendedLocation = DefineModelProperty<ExtendedAzureLocation>("ExtendedLocation", ["extendedLocation"]);
        _id = DefineProperty<ResourceIdentifier>("Id", ["id"]);
        _iPTags = DefineListProperty<IPTag>("IPTags", ["properties", "ipTags"]);
        _location = DefineProperty<AzureLocation>("Location", ["location"]);
        _natGateway = DefineModelProperty<NatGateway>("NatGateway", ["properties", "natGateway"], new NatGateway("natGateway"));
        _prefixLength = DefineProperty<int>("PrefixLength", ["properties", "prefixLength"]);
        _publicIPAddressVersion = DefineProperty<NetworkIPVersion>("PublicIPAddressVersion", ["properties", "publicIPAddressVersion"]);
        _sku = DefineModelProperty<PublicIPPrefixSku>("Sku", ["sku"]);
        _tags = DefineDictionaryProperty<string>("Tags", ["tags"]);
        _zones = DefineListProperty<string>("Zones", ["zones"]);
        _eTag = DefineProperty<ETag>("ETag", ["etag"], isOutput: true);
        _iPPrefix = DefineProperty<string>("IPPrefix", ["properties", "ipPrefix"], isOutput: true);
        _loadBalancerFrontendIPConfigurationId = DefineProperty<ResourceIdentifier>("LoadBalancerFrontendIPConfigurationId", ["properties", "loadBalancerFrontendIpConfiguration", "id"], isOutput: true);
        _provisioningState = DefineProperty<NetworkProvisioningState>("ProvisioningState", ["properties", "provisioningState"], isOutput: true);
        _publicIPAddresses = DefineListProperty<SubResource>("PublicIPAddresses", ["properties", "publicIPAddresses"], isOutput: true);
        _resourceGuid = DefineProperty<Guid>("ResourceGuid", ["properties", "resourceGuid"], isOutput: true);
    }

    /// <summary>
    /// Supported PublicIPPrefix resource versions.
    /// </summary>
    public static class ResourceVersions
    {
        /// <summary>
        /// 2025-01-01.
        /// </summary>
        public static readonly string V2025_01_01 = "2025-01-01";

        /// <summary>
        /// 2024-10-01.
        /// </summary>
        public static readonly string V2024_10_01 = "2024-10-01";

        /// <summary>
        /// 2024-07-01.
        /// </summary>
        public static readonly string V2024_07_01 = "2024-07-01";

        /// <summary>
        /// 2024-05-01.
        /// </summary>
        public static readonly string V2024_05_01 = "2024-05-01";

        /// <summary>
        /// 2024-03-01.
        /// </summary>
        public static readonly string V2024_03_01 = "2024-03-01";

        /// <summary>
        /// 2024-01-01.
        /// </summary>
        public static readonly string V2024_01_01 = "2024-01-01";

        /// <summary>
        /// 2023-11-01.
        /// </summary>
        public static readonly string V2023_11_01 = "2023-11-01";

        /// <summary>
        /// 2023-09-01.
        /// </summary>
        public static readonly string V2023_09_01 = "2023-09-01";

        /// <summary>
        /// 2023-06-01.
        /// </summary>
        public static readonly string V2023_06_01 = "2023-06-01";

        /// <summary>
        /// 2023-05-01.
        /// </summary>
        public static readonly string V2023_05_01 = "2023-05-01";

        /// <summary>
        /// 2023-04-01.
        /// </summary>
        public static readonly string V2023_04_01 = "2023-04-01";

        /// <summary>
        /// 2023-02-01.
        /// </summary>
        public static readonly string V2023_02_01 = "2023-02-01";

        /// <summary>
        /// 2022-11-01.
        /// </summary>
        public static readonly string V2022_11_01 = "2022-11-01";

        /// <summary>
        /// 2022-09-01.
        /// </summary>
        public static readonly string V2022_09_01 = "2022-09-01";

        /// <summary>
        /// 2022-07-01.
        /// </summary>
        public static readonly string V2022_07_01 = "2022-07-01";

        /// <summary>
        /// 2022-05-01.
        /// </summary>
        public static readonly string V2022_05_01 = "2022-05-01";

        /// <summary>
        /// 2022-01-01.
        /// </summary>
        public static readonly string V2022_01_01 = "2022-01-01";

        /// <summary>
        /// 2021-12-01.
        /// </summary>
        public static readonly string V2021_12_01 = "2021-12-01";

        /// <summary>
        /// 2021-08-01.
        /// </summary>
        public static readonly string V2021_08_01 = "2021-08-01";

        /// <summary>
        /// 2021-06-01.
        /// </summary>
        public static readonly string V2021_06_01 = "2021-06-01";

        /// <summary>
        /// 2021-05-01.
        /// </summary>
        public static readonly string V2021_05_01 = "2021-05-01";

        /// <summary>
        /// 2021-04-01.
        /// </summary>
        public static readonly string V2021_04_01 = "2021-04-01";

        /// <summary>
        /// 2021-03-01.
        /// </summary>
        public static readonly string V2021_03_01 = "2021-03-01";

        /// <summary>
        /// 2021-02-01.
        /// </summary>
        public static readonly string V2021_02_01 = "2021-02-01";

        /// <summary>
        /// 2021-01-01.
        /// </summary>
        public static readonly string V2021_01_01 = "2021-01-01";

        /// <summary>
        /// 2020-11-01.
        /// </summary>
        public static readonly string V2020_11_01 = "2020-11-01";

        /// <summary>
        /// 2020-08-01.
        /// </summary>
        public static readonly string V2020_08_01 = "2020-08-01";

        /// <summary>
        /// 2020-07-01.
        /// </summary>
        public static readonly string V2020_07_01 = "2020-07-01";

        /// <summary>
        /// 2020-06-01.
        /// </summary>
        public static readonly string V2020_06_01 = "2020-06-01";

        /// <summary>
        /// 2020-05-01.
        /// </summary>
        public static readonly string V2020_05_01 = "2020-05-01";

        /// <summary>
        /// 2020-04-01.
        /// </summary>
        public static readonly string V2020_04_01 = "2020-04-01";

        /// <summary>
        /// 2020-03-01.
        /// </summary>
        public static readonly string V2020_03_01 = "2020-03-01";

        /// <summary>
        /// 2020-01-01.
        /// </summary>
        public static readonly string V2020_01_01 = "2020-01-01";

        /// <summary>
        /// 2019-12-01.
        /// </summary>
        public static readonly string V2019_12_01 = "2019-12-01";

        /// <summary>
        /// 2019-11-01.
        /// </summary>
        public static readonly string V2019_11_01 = "2019-11-01";

        /// <summary>
        /// 2019-09-01.
        /// </summary>
        public static readonly string V2019_09_01 = "2019-09-01";

        /// <summary>
        /// 2019-08-01.
        /// </summary>
        public static readonly string V2019_08_01 = "2019-08-01";

        /// <summary>
        /// 2019-07-01.
        /// </summary>
        public static readonly string V2019_07_01 = "2019-07-01";

        /// <summary>
        /// 2019-06-01.
        /// </summary>
        public static readonly string V2019_06_01 = "2019-06-01";

        /// <summary>
        /// 2019-04-01.
        /// </summary>
        public static readonly string V2019_04_01 = "2019-04-01";

        /// <summary>
        /// 2019-02-01.
        /// </summary>
        public static readonly string V2019_02_01 = "2019-02-01";

        /// <summary>
        /// 2018-12-01.
        /// </summary>
        public static readonly string V2018_12_01 = "2018-12-01";

        /// <summary>
        /// 2018-11-01.
        /// </summary>
        public static readonly string V2018_11_01 = "2018-11-01";

        /// <summary>
        /// 2018-10-01.
        /// </summary>
        public static readonly string V2018_10_01 = "2018-10-01";

        /// <summary>
        /// 2018-08-01.
        /// </summary>
        public static readonly string V2018_08_01 = "2018-08-01";

        /// <summary>
        /// 2018-07-01.
        /// </summary>
        public static readonly string V2018_07_01 = "2018-07-01";
    }

    /// <summary>
    /// Creates a reference to an existing PublicIPPrefix.
    /// </summary>
    /// <param name="bicepIdentifier">
    /// The the Bicep identifier name of the PublicIPPrefix resource.  This can
    /// be used to refer to the resource in expressions, but is not the Azure
    /// name of the resource.  This value can contain letters, numbers, and
    /// underscores.
    /// </param>
    /// <param name="resourceVersion">Version of the PublicIPPrefix.</param>
    /// <returns>The existing PublicIPPrefix resource.</returns>
    public static PublicIPPrefix FromExisting(string bicepIdentifier, string? resourceVersion = default) =>
        new(bicepIdentifier, resourceVersion) { IsExistingResource = true };

    /// <summary>
    /// Get the requirements for naming this PublicIPPrefix resource.
    /// </summary>
    /// <returns>Naming requirements.</returns>
    [EditorBrowsable(EditorBrowsableState.Never)]
    public override ResourceNameRequirements GetResourceNameRequirements() =>
        new(minLength: 1, maxLength: 80, validCharacters: ResourceNameCharacters.LowercaseLetters | ResourceNameCharacters.UppercaseLetters | ResourceNameCharacters.Numbers | ResourceNameCharacters.Hyphen | ResourceNameCharacters.Underscore | ResourceNameCharacters.Period);
}
