// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.Network;

/// <summary>
/// Gateway load balancer tunnel interface of a load balancer backend address
/// pool.
/// </summary>
public partial class GatewayLoadBalancerTunnelInterface : ProvisionableConstruct
{
    /// <summary>
    /// Port of gateway load balancer tunnel interface.
    /// </summary>
    public BicepValue<int> Port 
    {
        get { Initialize(); return _port!; }
        set { Initialize(); _port!.Assign(value); }
    }
    private BicepValue<int>? _port;

    /// <summary>
    /// Identifier of gateway load balancer tunnel interface.
    /// </summary>
    public BicepValue<int> Identifier 
    {
        get { Initialize(); return _identifier!; }
        set { Initialize(); _identifier!.Assign(value); }
    }
    private BicepValue<int>? _identifier;

    /// <summary>
    /// Protocol of gateway load balancer tunnel interface.
    /// </summary>
    public BicepValue<GatewayLoadBalancerTunnelProtocol> Protocol 
    {
        get { Initialize(); return _protocol!; }
        set { Initialize(); _protocol!.Assign(value); }
    }
    private BicepValue<GatewayLoadBalancerTunnelProtocol>? _protocol;

    /// <summary>
    /// Traffic type of gateway load balancer tunnel interface.
    /// </summary>
    public BicepValue<GatewayLoadBalancerTunnelInterfaceType> InterfaceType 
    {
        get { Initialize(); return _interfaceType!; }
        set { Initialize(); _interfaceType!.Assign(value); }
    }
    private BicepValue<GatewayLoadBalancerTunnelInterfaceType>? _interfaceType;

    /// <summary>
    /// Creates a new GatewayLoadBalancerTunnelInterface.
    /// </summary>
    public GatewayLoadBalancerTunnelInterface()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of
    /// GatewayLoadBalancerTunnelInterface.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _port = DefineProperty<int>("Port", ["Port"]);
        _identifier = DefineProperty<int>("Identifier", ["Identifier"]);
        _protocol = DefineProperty<GatewayLoadBalancerTunnelProtocol>("Protocol", ["Protocol"]);
        _interfaceType = DefineProperty<GatewayLoadBalancerTunnelInterfaceType>("InterfaceType", ["InterfaceType"]);
    }
}
