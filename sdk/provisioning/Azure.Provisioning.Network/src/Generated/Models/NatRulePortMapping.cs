// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.Network;

/// <summary>
/// Individual port mappings for inbound NAT rule created for backend pool.
/// </summary>
public partial class NatRulePortMapping : ProvisionableConstruct
{
    /// <summary>
    /// Name of inbound NAT rule.
    /// </summary>
    public BicepValue<string> InboundNatRuleName 
    {
        get { Initialize(); return _inboundNatRuleName!; }
    }
    private BicepValue<string>? _inboundNatRuleName;

    /// <summary>
    /// Frontend port.
    /// </summary>
    public BicepValue<int> FrontendPort 
    {
        get { Initialize(); return _frontendPort!; }
    }
    private BicepValue<int>? _frontendPort;

    /// <summary>
    /// Backend port.
    /// </summary>
    public BicepValue<int> BackendPort 
    {
        get { Initialize(); return _backendPort!; }
    }
    private BicepValue<int>? _backendPort;

    /// <summary>
    /// Creates a new NatRulePortMapping.
    /// </summary>
    public NatRulePortMapping()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of NatRulePortMapping.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _inboundNatRuleName = DefineProperty<string>("InboundNatRuleName", ["inboundNatRuleName"], isOutput: true);
        _frontendPort = DefineProperty<int>("FrontendPort", ["frontendPort"], isOutput: true);
        _backendPort = DefineProperty<int>("BackendPort", ["backendPort"], isOutput: true);
    }
}
