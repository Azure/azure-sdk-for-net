// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure;
using Azure.Core;
using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;
using System.Net;

namespace Azure.Provisioning.Network;

/// <summary>
/// A class representing the NetworkPrivateEndpointConnection data model.
/// PrivateEndpointConnection resource.
/// </summary>
public partial class NetworkPrivateEndpointConnectionData : ProvisionableConstruct
{
    /// <summary>
    /// A unique read-only string that changes whenever the resource is updated.
    /// </summary>
    public BicepValue<ETag> ETag 
    {
        get { Initialize(); return _eTag!; }
    }
    private BicepValue<ETag>? _eTag;

    /// <summary>
    /// The resource of private end point.
    /// </summary>
    public PrivateEndpointData PrivateEndpoint 
    {
        get { Initialize(); return _privateEndpoint!; }
    }
    private PrivateEndpointData? _privateEndpoint;

    /// <summary>
    /// A collection of information about the state of the connection between
    /// service consumer and provider.
    /// </summary>
    public NetworkPrivateLinkServiceConnectionState ConnectionState 
    {
        get { Initialize(); return _connectionState!; }
        set { Initialize(); AssignOrReplace(ref _connectionState, value); }
    }
    private NetworkPrivateLinkServiceConnectionState? _connectionState;

    /// <summary>
    /// The provisioning state of the private endpoint connection resource.
    /// </summary>
    public BicepValue<NetworkProvisioningState> ProvisioningState 
    {
        get { Initialize(); return _provisioningState!; }
    }
    private BicepValue<NetworkProvisioningState>? _provisioningState;

    /// <summary>
    /// The consumer link id.
    /// </summary>
    public BicepValue<string> LinkIdentifier 
    {
        get { Initialize(); return _linkIdentifier!; }
    }
    private BicepValue<string>? _linkIdentifier;

    /// <summary>
    /// The location of the private endpoint.
    /// </summary>
    public BicepValue<string> PrivateEndpointLocation 
    {
        get { Initialize(); return _privateEndpointLocation!; }
    }
    private BicepValue<string>? _privateEndpointLocation;

    /// <summary>
    /// Resource ID.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id 
    {
        get { Initialize(); return _id!; }
        set { Initialize(); _id!.Assign(value); }
    }
    private BicepValue<ResourceIdentifier>? _id;

    /// <summary>
    /// Resource name.
    /// </summary>
    public BicepValue<string> Name 
    {
        get { Initialize(); return _name!; }
        set { Initialize(); _name!.Assign(value); }
    }
    private BicepValue<string>? _name;

    /// <summary>
    /// Resource type.
    /// </summary>
    public BicepValue<ResourceType> ResourceType 
    {
        get { Initialize(); return _resourceType!; }
    }
    private BicepValue<ResourceType>? _resourceType;

    /// <summary>
    /// Creates a new NetworkPrivateEndpointConnectionData.
    /// </summary>
    public NetworkPrivateEndpointConnectionData()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of
    /// NetworkPrivateEndpointConnectionData.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _eTag = DefineProperty<ETag>("ETag", ["ETag"], isOutput: true);
        _privateEndpoint = DefineModelProperty<PrivateEndpointData>("PrivateEndpoint", ["PrivateEndpoint"], isOutput: true);
        _connectionState = DefineModelProperty<NetworkPrivateLinkServiceConnectionState>("ConnectionState", ["ConnectionState"]);
        _provisioningState = DefineProperty<NetworkProvisioningState>("ProvisioningState", ["ProvisioningState"], isOutput: true);
        _linkIdentifier = DefineProperty<string>("LinkIdentifier", ["LinkIdentifier"], isOutput: true);
        _privateEndpointLocation = DefineProperty<string>("PrivateEndpointLocation", ["PrivateEndpointLocation"], isOutput: true);
        _id = DefineProperty<ResourceIdentifier>("Id", ["id"]);
        _name = DefineProperty<string>("Name", ["name"]);
        _resourceType = DefineProperty<ResourceType>("ResourceType", ["ResourceType"], isOutput: true);
    }
}
