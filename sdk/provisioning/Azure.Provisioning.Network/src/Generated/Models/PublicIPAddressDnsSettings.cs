// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.Network;

/// <summary>
/// Contains FQDN of the DNS record associated with the public IP address.
/// </summary>
public partial class PublicIPAddressDnsSettings : ProvisionableConstruct
{
    /// <summary>
    /// The domain name label. The concatenation of the domain name label and
    /// the regionalized DNS zone make up the fully qualified domain name
    /// associated with the public IP address. If a domain name label is
    /// specified, an A DNS record is created for the public IP in the
    /// Microsoft Azure DNS system.
    /// </summary>
    public BicepValue<string> DomainNameLabel 
    {
        get { Initialize(); return _domainNameLabel!; }
        set { Initialize(); _domainNameLabel!.Assign(value); }
    }
    private BicepValue<string>? _domainNameLabel;

    /// <summary>
    /// The domain name label scope. If a domain name label and a domain name
    /// label scope are specified, an A DNS record is created for the public
    /// IP in the Microsoft Azure DNS system with a hashed value includes in
    /// FQDN.
    /// </summary>
    public BicepValue<PublicIPAddressDnsSettingsDomainNameLabelScope> DomainNameLabelScope 
    {
        get { Initialize(); return _domainNameLabelScope!; }
        set { Initialize(); _domainNameLabelScope!.Assign(value); }
    }
    private BicepValue<PublicIPAddressDnsSettingsDomainNameLabelScope>? _domainNameLabelScope;

    /// <summary>
    /// The Fully Qualified Domain Name of the A DNS record associated with the
    /// public IP. This is the concatenation of the domainNameLabel and the
    /// regionalized DNS zone.
    /// </summary>
    public BicepValue<string> Fqdn 
    {
        get { Initialize(); return _fqdn!; }
        set { Initialize(); _fqdn!.Assign(value); }
    }
    private BicepValue<string>? _fqdn;

    /// <summary>
    /// The reverse FQDN. A user-visible, fully qualified domain name that
    /// resolves to this public IP address. If the reverseFqdn is specified,
    /// then a PTR DNS record is created pointing from the IP address in the
    /// in-addr.arpa domain to the reverse FQDN.
    /// </summary>
    public BicepValue<string> ReverseFqdn 
    {
        get { Initialize(); return _reverseFqdn!; }
        set { Initialize(); _reverseFqdn!.Assign(value); }
    }
    private BicepValue<string>? _reverseFqdn;

    /// <summary>
    /// Creates a new PublicIPAddressDnsSettings.
    /// </summary>
    public PublicIPAddressDnsSettings()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of PublicIPAddressDnsSettings.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _domainNameLabel = DefineProperty<string>("DomainNameLabel", ["domainNameLabel"]);
        _domainNameLabelScope = DefineProperty<PublicIPAddressDnsSettingsDomainNameLabelScope>("DomainNameLabelScope", ["domainNameLabelScope"]);
        _fqdn = DefineProperty<string>("Fqdn", ["fqdn"]);
        _reverseFqdn = DefineProperty<string>("ReverseFqdn", ["reverseFqdn"]);
    }
}
