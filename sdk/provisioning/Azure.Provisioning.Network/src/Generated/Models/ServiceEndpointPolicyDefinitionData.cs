// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure;
using Azure.Core;
using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.Network;

/// <summary>
/// A class representing the ServiceEndpointPolicyDefinition data model.
/// Service Endpoint policy definitions.
/// </summary>
public partial class ServiceEndpointPolicyDefinitionData : ProvisionableConstruct
{
    /// <summary>
    /// A unique read-only string that changes whenever the resource is updated.
    /// </summary>
    public BicepValue<ETag> ETag 
    {
        get { Initialize(); return _eTag!; }
    }
    private BicepValue<ETag>? _eTag;

    /// <summary>
    /// A description for this rule. Restricted to 140 chars.
    /// </summary>
    public BicepValue<string> Description 
    {
        get { Initialize(); return _description!; }
        set { Initialize(); _description!.Assign(value); }
    }
    private BicepValue<string>? _description;

    /// <summary>
    /// Service endpoint name.
    /// </summary>
    public BicepValue<string> Service 
    {
        get { Initialize(); return _service!; }
        set { Initialize(); _service!.Assign(value); }
    }
    private BicepValue<string>? _service;

    /// <summary>
    /// A list of service resources.
    /// </summary>
    public BicepList<ResourceIdentifier> ServiceResources 
    {
        get { Initialize(); return _serviceResources!; }
        set { Initialize(); _serviceResources!.Assign(value); }
    }
    private BicepList<ResourceIdentifier>? _serviceResources;

    /// <summary>
    /// The provisioning state of the service endpoint policy definition
    /// resource.
    /// </summary>
    public BicepValue<NetworkProvisioningState> ProvisioningState 
    {
        get { Initialize(); return _provisioningState!; }
    }
    private BicepValue<NetworkProvisioningState>? _provisioningState;

    /// <summary>
    /// Resource ID.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id 
    {
        get { Initialize(); return _id!; }
        set { Initialize(); _id!.Assign(value); }
    }
    private BicepValue<ResourceIdentifier>? _id;

    /// <summary>
    /// Resource name.
    /// </summary>
    public BicepValue<string> Name 
    {
        get { Initialize(); return _name!; }
        set { Initialize(); _name!.Assign(value); }
    }
    private BicepValue<string>? _name;

    /// <summary>
    /// Resource type.
    /// </summary>
    public BicepValue<ResourceType> ResourceType 
    {
        get { Initialize(); return _resourceType!; }
    }
    private BicepValue<ResourceType>? _resourceType;

    /// <summary>
    /// Creates a new ServiceEndpointPolicyDefinitionData.
    /// </summary>
    public ServiceEndpointPolicyDefinitionData()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of
    /// ServiceEndpointPolicyDefinitionData.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _eTag = DefineProperty<ETag>("ETag", ["ETag"], isOutput: true);
        _description = DefineProperty<string>("Description", ["Description"]);
        _service = DefineProperty<string>("Service", ["Service"]);
        _serviceResources = DefineListProperty<ResourceIdentifier>("ServiceResources", ["ServiceResources"]);
        _provisioningState = DefineProperty<NetworkProvisioningState>("ProvisioningState", ["ProvisioningState"], isOutput: true);
        _id = DefineProperty<ResourceIdentifier>("Id", ["id"]);
        _name = DefineProperty<string>("Name", ["name"]);
        _resourceType = DefineProperty<ResourceType>("ResourceType", ["ResourceType"], isOutput: true);
    }
}
