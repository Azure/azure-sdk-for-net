// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure;
using Azure.Core;
using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;
using System.Net;

namespace Azure.Provisioning.Network;

/// <summary>
/// Backend Address Pool of an application gateway.
/// </summary>
public partial class ApplicationGatewayBackendAddressPool : ProvisionableConstruct
{
    /// <summary>
    /// A unique read-only string that changes whenever the resource is updated.
    /// </summary>
    public BicepValue<ETag> ETag 
    {
        get { Initialize(); return _eTag!; }
    }
    private BicepValue<ETag>? _eTag;

    /// <summary>
    /// Collection of references to IPs defined in network interfaces.
    /// </summary>
    public BicepList<NetworkInterfaceIPConfigurationData> BackendIPConfigurations 
    {
        get { Initialize(); return _backendIPConfigurations!; }
    }
    private BicepList<NetworkInterfaceIPConfigurationData>? _backendIPConfigurations;

    /// <summary>
    /// Backend addresses.
    /// </summary>
    public BicepList<ApplicationGatewayBackendAddress> BackendAddresses 
    {
        get { Initialize(); return _backendAddresses!; }
        set { Initialize(); _backendAddresses!.Assign(value); }
    }
    private BicepList<ApplicationGatewayBackendAddress>? _backendAddresses;

    /// <summary>
    /// The provisioning state of the backend address pool resource.
    /// </summary>
    public BicepValue<NetworkProvisioningState> ProvisioningState 
    {
        get { Initialize(); return _provisioningState!; }
    }
    private BicepValue<NetworkProvisioningState>? _provisioningState;

    /// <summary>
    /// Resource ID.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id 
    {
        get { Initialize(); return _id!; }
        set { Initialize(); _id!.Assign(value); }
    }
    private BicepValue<ResourceIdentifier>? _id;

    /// <summary>
    /// Resource name.
    /// </summary>
    public BicepValue<string> Name 
    {
        get { Initialize(); return _name!; }
        set { Initialize(); _name!.Assign(value); }
    }
    private BicepValue<string>? _name;

    /// <summary>
    /// Resource type.
    /// </summary>
    public BicepValue<ResourceType> ResourceType 
    {
        get { Initialize(); return _resourceType!; }
    }
    private BicepValue<ResourceType>? _resourceType;

    /// <summary>
    /// Creates a new ApplicationGatewayBackendAddressPool.
    /// </summary>
    public ApplicationGatewayBackendAddressPool()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of
    /// ApplicationGatewayBackendAddressPool.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _eTag = DefineProperty<ETag>("ETag", ["etag"], isOutput: true);
        _backendIPConfigurations = DefineListProperty<NetworkInterfaceIPConfigurationData>("BackendIPConfigurations", ["properties", "backendIPConfigurations"], isOutput: true);
        _backendAddresses = DefineListProperty<ApplicationGatewayBackendAddress>("BackendAddresses", ["properties", "backendAddresses"]);
        _provisioningState = DefineProperty<NetworkProvisioningState>("ProvisioningState", ["properties", "provisioningState"], isOutput: true);
        _id = DefineProperty<ResourceIdentifier>("Id", ["id"]);
        _name = DefineProperty<string>("Name", ["name"]);
        _resourceType = DefineProperty<ResourceType>("ResourceType", ["type"], isOutput: true);
    }
}
