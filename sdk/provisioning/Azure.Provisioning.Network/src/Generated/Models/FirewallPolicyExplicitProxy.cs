// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.Network;

/// <summary>
/// Explicit Proxy Settings in Firewall Policy.
/// </summary>
public partial class FirewallPolicyExplicitProxy : ProvisionableConstruct
{
    /// <summary>
    /// When set to true, explicit proxy mode is enabled.
    /// </summary>
    public BicepValue<bool> EnableExplicitProxy 
    {
        get { Initialize(); return _enableExplicitProxy!; }
        set { Initialize(); _enableExplicitProxy!.Assign(value); }
    }
    private BicepValue<bool>? _enableExplicitProxy;

    /// <summary>
    /// Port number for explicit proxy http protocol, cannot be greater than
    /// 64000.
    /// </summary>
    public BicepValue<int> HttpPort 
    {
        get { Initialize(); return _httpPort!; }
        set { Initialize(); _httpPort!.Assign(value); }
    }
    private BicepValue<int>? _httpPort;

    /// <summary>
    /// Port number for explicit proxy https protocol, cannot be greater than
    /// 64000.
    /// </summary>
    public BicepValue<int> HttpsPort 
    {
        get { Initialize(); return _httpsPort!; }
        set { Initialize(); _httpsPort!.Assign(value); }
    }
    private BicepValue<int>? _httpsPort;

    /// <summary>
    /// When set to true, pac file port and url needs to be provided.
    /// </summary>
    public BicepValue<bool> EnablePacFile 
    {
        get { Initialize(); return _enablePacFile!; }
        set { Initialize(); _enablePacFile!.Assign(value); }
    }
    private BicepValue<bool>? _enablePacFile;

    /// <summary>
    /// Port number for firewall to serve PAC file.
    /// </summary>
    public BicepValue<int> PacFilePort 
    {
        get { Initialize(); return _pacFilePort!; }
        set { Initialize(); _pacFilePort!.Assign(value); }
    }
    private BicepValue<int>? _pacFilePort;

    /// <summary>
    /// SAS URL for PAC file.
    /// </summary>
    public BicepValue<string> PacFile 
    {
        get { Initialize(); return _pacFile!; }
        set { Initialize(); _pacFile!.Assign(value); }
    }
    private BicepValue<string>? _pacFile;

    /// <summary>
    /// Creates a new FirewallPolicyExplicitProxy.
    /// </summary>
    public FirewallPolicyExplicitProxy()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of FirewallPolicyExplicitProxy.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _enableExplicitProxy = DefineProperty<bool>("EnableExplicitProxy", ["enableExplicitProxy"]);
        _httpPort = DefineProperty<int>("HttpPort", ["httpPort"]);
        _httpsPort = DefineProperty<int>("HttpsPort", ["httpsPort"]);
        _enablePacFile = DefineProperty<bool>("EnablePacFile", ["enablePacFile"]);
        _pacFilePort = DefineProperty<int>("PacFilePort", ["pacFilePort"]);
        _pacFile = DefineProperty<string>("PacFile", ["pacFile"]);
    }
}
