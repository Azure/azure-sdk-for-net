// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.Network;

/// <summary>
/// DNS Proxy Settings in Firewall Policy.
/// </summary>
public partial class DnsSettings : ProvisionableConstruct
{
    /// <summary>
    /// List of Custom DNS Servers.
    /// </summary>
    public BicepList<string> Servers 
    {
        get { Initialize(); return _servers!; }
        set { Initialize(); _servers!.Assign(value); }
    }
    private BicepList<string>? _servers;

    /// <summary>
    /// Enable DNS Proxy on Firewalls attached to the Firewall Policy.
    /// </summary>
    public BicepValue<bool> EnableProxy 
    {
        get { Initialize(); return _enableProxy!; }
        set { Initialize(); _enableProxy!.Assign(value); }
    }
    private BicepValue<bool>? _enableProxy;

    /// <summary>
    /// FQDNs in Network Rules are supported when set to true.
    /// </summary>
    public BicepValue<bool> RequireProxyForNetworkRules 
    {
        get { Initialize(); return _requireProxyForNetworkRules!; }
        set { Initialize(); _requireProxyForNetworkRules!.Assign(value); }
    }
    private BicepValue<bool>? _requireProxyForNetworkRules;

    /// <summary>
    /// Creates a new DnsSettings.
    /// </summary>
    public DnsSettings()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of DnsSettings.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _servers = DefineListProperty<string>("Servers", ["servers"]);
        _enableProxy = DefineProperty<bool>("EnableProxy", ["enableProxy"]);
        _requireProxyForNetworkRules = DefineProperty<bool>("RequireProxyForNetworkRules", ["requireProxyForNetworkRules"]);
    }
}
