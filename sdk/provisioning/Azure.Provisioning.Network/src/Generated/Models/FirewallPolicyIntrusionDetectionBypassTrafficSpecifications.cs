// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.Network;

/// <summary>
/// Intrusion detection bypass traffic specification.
/// </summary>
public partial class FirewallPolicyIntrusionDetectionBypassTrafficSpecifications : ProvisionableConstruct
{
    /// <summary>
    /// Name of the bypass traffic rule.
    /// </summary>
    public BicepValue<string> Name 
    {
        get { Initialize(); return _name!; }
        set { Initialize(); _name!.Assign(value); }
    }
    private BicepValue<string>? _name;

    /// <summary>
    /// Description of the bypass traffic rule.
    /// </summary>
    public BicepValue<string> Description 
    {
        get { Initialize(); return _description!; }
        set { Initialize(); _description!.Assign(value); }
    }
    private BicepValue<string>? _description;

    /// <summary>
    /// The rule bypass protocol.
    /// </summary>
    public BicepValue<FirewallPolicyIntrusionDetectionProtocol> Protocol 
    {
        get { Initialize(); return _protocol!; }
        set { Initialize(); _protocol!.Assign(value); }
    }
    private BicepValue<FirewallPolicyIntrusionDetectionProtocol>? _protocol;

    /// <summary>
    /// List of source IP addresses or ranges for this rule.
    /// </summary>
    public BicepList<string> SourceAddresses 
    {
        get { Initialize(); return _sourceAddresses!; }
        set { Initialize(); _sourceAddresses!.Assign(value); }
    }
    private BicepList<string>? _sourceAddresses;

    /// <summary>
    /// List of destination IP addresses or ranges for this rule.
    /// </summary>
    public BicepList<string> DestinationAddresses 
    {
        get { Initialize(); return _destinationAddresses!; }
        set { Initialize(); _destinationAddresses!.Assign(value); }
    }
    private BicepList<string>? _destinationAddresses;

    /// <summary>
    /// List of destination ports or ranges.
    /// </summary>
    public BicepList<string> DestinationPorts 
    {
        get { Initialize(); return _destinationPorts!; }
        set { Initialize(); _destinationPorts!.Assign(value); }
    }
    private BicepList<string>? _destinationPorts;

    /// <summary>
    /// List of source IpGroups for this rule.
    /// </summary>
    public BicepList<string> SourceIPGroups 
    {
        get { Initialize(); return _sourceIPGroups!; }
        set { Initialize(); _sourceIPGroups!.Assign(value); }
    }
    private BicepList<string>? _sourceIPGroups;

    /// <summary>
    /// List of destination IpGroups for this rule.
    /// </summary>
    public BicepList<string> DestinationIPGroups 
    {
        get { Initialize(); return _destinationIPGroups!; }
        set { Initialize(); _destinationIPGroups!.Assign(value); }
    }
    private BicepList<string>? _destinationIPGroups;

    /// <summary>
    /// Creates a new
    /// FirewallPolicyIntrusionDetectionBypassTrafficSpecifications.
    /// </summary>
    public FirewallPolicyIntrusionDetectionBypassTrafficSpecifications()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of
    /// FirewallPolicyIntrusionDetectionBypassTrafficSpecifications.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _name = DefineProperty<string>("Name", ["name"]);
        _description = DefineProperty<string>("Description", ["description"]);
        _protocol = DefineProperty<FirewallPolicyIntrusionDetectionProtocol>("Protocol", ["protocol"]);
        _sourceAddresses = DefineListProperty<string>("SourceAddresses", ["sourceAddresses"]);
        _destinationAddresses = DefineListProperty<string>("DestinationAddresses", ["destinationAddresses"]);
        _destinationPorts = DefineListProperty<string>("DestinationPorts", ["destinationPorts"]);
        _sourceIPGroups = DefineListProperty<string>("SourceIPGroups", ["sourceIpGroups"]);
        _destinationIPGroups = DefineListProperty<string>("DestinationIPGroups", ["destinationIpGroups"]);
    }
}
