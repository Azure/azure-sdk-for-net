// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.Network;

/// <summary>
/// The private IP addresses/IP ranges to which traffic will not be SNAT.
/// </summary>
public partial class FirewallPolicySnat : ProvisionableConstruct
{
    /// <summary>
    /// List of private IP addresses/IP address ranges to not be SNAT.
    /// </summary>
    public BicepList<string> PrivateRanges 
    {
        get { Initialize(); return _privateRanges!; }
        set { Initialize(); _privateRanges!.Assign(value); }
    }
    private BicepList<string>? _privateRanges;

    /// <summary>
    /// The operation mode for automatically learning private ranges to not be
    /// SNAT.
    /// </summary>
    public BicepValue<AutoLearnPrivateRangesMode> AutoLearnPrivateRanges 
    {
        get { Initialize(); return _autoLearnPrivateRanges!; }
        set { Initialize(); _autoLearnPrivateRanges!.Assign(value); }
    }
    private BicepValue<AutoLearnPrivateRangesMode>? _autoLearnPrivateRanges;

    /// <summary>
    /// Creates a new FirewallPolicySnat.
    /// </summary>
    public FirewallPolicySnat()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of FirewallPolicySnat.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _privateRanges = DefineListProperty<string>("PrivateRanges", ["privateRanges"]);
        _autoLearnPrivateRanges = DefineProperty<AutoLearnPrivateRangesMode>("AutoLearnPrivateRanges", ["autoLearnPrivateRanges"]);
    }
}
