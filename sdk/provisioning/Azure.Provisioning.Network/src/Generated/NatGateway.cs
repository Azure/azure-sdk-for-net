// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure;
using Azure.Core;
using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;

namespace Azure.Provisioning.Network;

/// <summary>
/// NatGateway.
/// </summary>
public partial class NatGateway : ProvisionableResource
{
    /// <summary>
    /// The name of the nat gateway.
    /// </summary>
    public BicepValue<string> Name 
    {
        get { Initialize(); return _name!; }
        set { Initialize(); _name!.Assign(value); }
    }
    private BicepValue<string>? _name;

    /// <summary>
    /// Resource ID.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id 
    {
        get { Initialize(); return _id!; }
        set { Initialize(); _id!.Assign(value); }
    }
    private BicepValue<ResourceIdentifier>? _id;

    /// <summary>
    /// The idle timeout of the nat gateway.
    /// </summary>
    public BicepValue<int> IdleTimeoutInMinutes 
    {
        get { Initialize(); return _idleTimeoutInMinutes!; }
        set { Initialize(); _idleTimeoutInMinutes!.Assign(value); }
    }
    private BicepValue<int>? _idleTimeoutInMinutes;

    /// <summary>
    /// Resource location.
    /// </summary>
    public BicepValue<AzureLocation> Location 
    {
        get { Initialize(); return _location!; }
        set { Initialize(); _location!.Assign(value); }
    }
    private BicepValue<AzureLocation>? _location;

    /// <summary>
    /// An array of public ip addresses V4 associated with the nat gateway
    /// resource.
    /// </summary>
    public BicepList<WritableSubResource> PublicIPAddresses 
    {
        get { Initialize(); return _publicIPAddresses!; }
        set { Initialize(); _publicIPAddresses!.Assign(value); }
    }
    private BicepList<WritableSubResource>? _publicIPAddresses;

    /// <summary>
    /// An array of public ip addresses V6 associated with the nat gateway
    /// resource.
    /// </summary>
    public BicepList<WritableSubResource> PublicIPAddressesV6 
    {
        get { Initialize(); return _publicIPAddressesV6!; }
        set { Initialize(); _publicIPAddressesV6!.Assign(value); }
    }
    private BicepList<WritableSubResource>? _publicIPAddressesV6;

    /// <summary>
    /// An array of public ip prefixes V4 associated with the nat gateway
    /// resource.
    /// </summary>
    public BicepList<WritableSubResource> PublicIPPrefixes 
    {
        get { Initialize(); return _publicIPPrefixes!; }
        set { Initialize(); _publicIPPrefixes!.Assign(value); }
    }
    private BicepList<WritableSubResource>? _publicIPPrefixes;

    /// <summary>
    /// An array of public ip prefixes V6 associated with the nat gateway
    /// resource.
    /// </summary>
    public BicepList<WritableSubResource> PublicIPPrefixesV6 
    {
        get { Initialize(); return _publicIPPrefixesV6!; }
        set { Initialize(); _publicIPPrefixesV6!.Assign(value); }
    }
    private BicepList<WritableSubResource>? _publicIPPrefixesV6;

    /// <summary>
    /// Name of Nat Gateway SKU.
    /// </summary>
    public BicepValue<NatGatewaySkuName> SkuName 
    {
        get { Initialize(); return _skuName!; }
        set { Initialize(); _skuName!.Assign(value); }
    }
    private BicepValue<NatGatewaySkuName>? _skuName;

    /// <summary>
    /// Gets or sets Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> SourceVirtualNetworkId 
    {
        get { Initialize(); return _sourceVirtualNetworkId!; }
        set { Initialize(); _sourceVirtualNetworkId!.Assign(value); }
    }
    private BicepValue<ResourceIdentifier>? _sourceVirtualNetworkId;

    /// <summary>
    /// Resource tags.
    /// </summary>
    public BicepDictionary<string> Tags 
    {
        get { Initialize(); return _tags!; }
        set { Initialize(); _tags!.Assign(value); }
    }
    private BicepDictionary<string>? _tags;

    /// <summary>
    /// A list of availability zones denoting the zone in which Nat Gateway
    /// should be deployed.
    /// </summary>
    public BicepList<string> Zones 
    {
        get { Initialize(); return _zones!; }
        set { Initialize(); _zones!.Assign(value); }
    }
    private BicepList<string>? _zones;

    /// <summary>
    /// A unique read-only string that changes whenever the resource is updated.
    /// </summary>
    public BicepValue<ETag> ETag 
    {
        get { Initialize(); return _eTag!; }
    }
    private BicepValue<ETag>? _eTag;

    /// <summary>
    /// The provisioning state of the NAT gateway resource.
    /// </summary>
    public BicepValue<NetworkProvisioningState> ProvisioningState 
    {
        get { Initialize(); return _provisioningState!; }
    }
    private BicepValue<NetworkProvisioningState>? _provisioningState;

    /// <summary>
    /// The resource GUID property of the NAT gateway resource.
    /// </summary>
    public BicepValue<Guid> ResourceGuid 
    {
        get { Initialize(); return _resourceGuid!; }
    }
    private BicepValue<Guid>? _resourceGuid;

    /// <summary>
    /// An array of references to the subnets using this nat gateway resource.
    /// </summary>
    public BicepList<WritableSubResource> Subnets 
    {
        get { Initialize(); return _subnets!; }
    }
    private BicepList<WritableSubResource>? _subnets;

    /// <summary>
    /// Creates a new NatGateway.
    /// </summary>
    /// <param name="bicepIdentifier">
    /// The the Bicep identifier name of the NatGateway resource.  This can be
    /// used to refer to the resource in expressions, but is not the Azure
    /// name of the resource.  This value can contain letters, numbers, and
    /// underscores.
    /// </param>
    /// <param name="resourceVersion">Version of the NatGateway.</param>
    public NatGateway(string bicepIdentifier, string? resourceVersion = default)
        : base(bicepIdentifier, "Microsoft.Network/natGateways", resourceVersion ?? "2025-01-01")
    {
    }

    /// <summary>
    /// Define all the provisionable properties of NatGateway.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _name = DefineProperty<string>("Name", ["name"], isRequired: true);
        _id = DefineProperty<ResourceIdentifier>("Id", ["id"]);
        _idleTimeoutInMinutes = DefineProperty<int>("IdleTimeoutInMinutes", ["properties", "idleTimeoutInMinutes"]);
        _location = DefineProperty<AzureLocation>("Location", ["location"]);
        _publicIPAddresses = DefineListProperty<WritableSubResource>("PublicIPAddresses", ["properties", "publicIpAddresses"]);
        _publicIPAddressesV6 = DefineListProperty<WritableSubResource>("PublicIPAddressesV6", ["properties", "publicIpAddressesV6"]);
        _publicIPPrefixes = DefineListProperty<WritableSubResource>("PublicIPPrefixes", ["properties", "publicIpPrefixes"]);
        _publicIPPrefixesV6 = DefineListProperty<WritableSubResource>("PublicIPPrefixesV6", ["properties", "publicIpPrefixesV6"]);
        _skuName = DefineProperty<NatGatewaySkuName>("SkuName", ["sku", "name"]);
        _sourceVirtualNetworkId = DefineProperty<ResourceIdentifier>("SourceVirtualNetworkId", ["properties", "sourceVirtualNetwork", "id"]);
        _tags = DefineDictionaryProperty<string>("Tags", ["tags"]);
        _zones = DefineListProperty<string>("Zones", ["zones"]);
        _eTag = DefineProperty<ETag>("ETag", ["etag"], isOutput: true);
        _provisioningState = DefineProperty<NetworkProvisioningState>("ProvisioningState", ["properties", "provisioningState"], isOutput: true);
        _resourceGuid = DefineProperty<Guid>("ResourceGuid", ["properties", "resourceGuid"], isOutput: true);
        _subnets = DefineListProperty<WritableSubResource>("Subnets", ["properties", "subnets"], isOutput: true);
    }

    /// <summary>
    /// Supported NatGateway resource versions.
    /// </summary>
    public static class ResourceVersions
    {
        /// <summary>
        /// 2025-01-01.
        /// </summary>
        public static readonly string V2025_01_01 = "2025-01-01";

        /// <summary>
        /// 2024-10-01.
        /// </summary>
        public static readonly string V2024_10_01 = "2024-10-01";

        /// <summary>
        /// 2024-07-01.
        /// </summary>
        public static readonly string V2024_07_01 = "2024-07-01";

        /// <summary>
        /// 2024-05-01.
        /// </summary>
        public static readonly string V2024_05_01 = "2024-05-01";

        /// <summary>
        /// 2024-03-01.
        /// </summary>
        public static readonly string V2024_03_01 = "2024-03-01";

        /// <summary>
        /// 2024-01-01.
        /// </summary>
        public static readonly string V2024_01_01 = "2024-01-01";

        /// <summary>
        /// 2023-11-01.
        /// </summary>
        public static readonly string V2023_11_01 = "2023-11-01";

        /// <summary>
        /// 2023-09-01.
        /// </summary>
        public static readonly string V2023_09_01 = "2023-09-01";

        /// <summary>
        /// 2023-06-01.
        /// </summary>
        public static readonly string V2023_06_01 = "2023-06-01";

        /// <summary>
        /// 2023-05-01.
        /// </summary>
        public static readonly string V2023_05_01 = "2023-05-01";

        /// <summary>
        /// 2023-04-01.
        /// </summary>
        public static readonly string V2023_04_01 = "2023-04-01";

        /// <summary>
        /// 2023-02-01.
        /// </summary>
        public static readonly string V2023_02_01 = "2023-02-01";

        /// <summary>
        /// 2022-11-01.
        /// </summary>
        public static readonly string V2022_11_01 = "2022-11-01";

        /// <summary>
        /// 2022-09-01.
        /// </summary>
        public static readonly string V2022_09_01 = "2022-09-01";

        /// <summary>
        /// 2022-07-01.
        /// </summary>
        public static readonly string V2022_07_01 = "2022-07-01";

        /// <summary>
        /// 2022-05-01.
        /// </summary>
        public static readonly string V2022_05_01 = "2022-05-01";

        /// <summary>
        /// 2022-01-01.
        /// </summary>
        public static readonly string V2022_01_01 = "2022-01-01";

        /// <summary>
        /// 2021-12-01.
        /// </summary>
        public static readonly string V2021_12_01 = "2021-12-01";

        /// <summary>
        /// 2021-08-01.
        /// </summary>
        public static readonly string V2021_08_01 = "2021-08-01";

        /// <summary>
        /// 2021-06-01.
        /// </summary>
        public static readonly string V2021_06_01 = "2021-06-01";

        /// <summary>
        /// 2021-05-01.
        /// </summary>
        public static readonly string V2021_05_01 = "2021-05-01";

        /// <summary>
        /// 2021-04-01.
        /// </summary>
        public static readonly string V2021_04_01 = "2021-04-01";

        /// <summary>
        /// 2021-03-01.
        /// </summary>
        public static readonly string V2021_03_01 = "2021-03-01";

        /// <summary>
        /// 2021-02-01.
        /// </summary>
        public static readonly string V2021_02_01 = "2021-02-01";

        /// <summary>
        /// 2021-01-01.
        /// </summary>
        public static readonly string V2021_01_01 = "2021-01-01";

        /// <summary>
        /// 2020-11-01.
        /// </summary>
        public static readonly string V2020_11_01 = "2020-11-01";

        /// <summary>
        /// 2020-08-01.
        /// </summary>
        public static readonly string V2020_08_01 = "2020-08-01";

        /// <summary>
        /// 2020-07-01.
        /// </summary>
        public static readonly string V2020_07_01 = "2020-07-01";

        /// <summary>
        /// 2020-06-01.
        /// </summary>
        public static readonly string V2020_06_01 = "2020-06-01";

        /// <summary>
        /// 2020-05-01.
        /// </summary>
        public static readonly string V2020_05_01 = "2020-05-01";

        /// <summary>
        /// 2020-04-01.
        /// </summary>
        public static readonly string V2020_04_01 = "2020-04-01";

        /// <summary>
        /// 2020-03-01.
        /// </summary>
        public static readonly string V2020_03_01 = "2020-03-01";

        /// <summary>
        /// 2020-01-01.
        /// </summary>
        public static readonly string V2020_01_01 = "2020-01-01";

        /// <summary>
        /// 2019-12-01.
        /// </summary>
        public static readonly string V2019_12_01 = "2019-12-01";

        /// <summary>
        /// 2019-11-01.
        /// </summary>
        public static readonly string V2019_11_01 = "2019-11-01";

        /// <summary>
        /// 2019-09-01.
        /// </summary>
        public static readonly string V2019_09_01 = "2019-09-01";

        /// <summary>
        /// 2019-08-01.
        /// </summary>
        public static readonly string V2019_08_01 = "2019-08-01";

        /// <summary>
        /// 2019-07-01.
        /// </summary>
        public static readonly string V2019_07_01 = "2019-07-01";

        /// <summary>
        /// 2019-06-01.
        /// </summary>
        public static readonly string V2019_06_01 = "2019-06-01";

        /// <summary>
        /// 2019-04-01.
        /// </summary>
        public static readonly string V2019_04_01 = "2019-04-01";

        /// <summary>
        /// 2019-02-01.
        /// </summary>
        public static readonly string V2019_02_01 = "2019-02-01";

        /// <summary>
        /// 2018-12-01.
        /// </summary>
        public static readonly string V2018_12_01 = "2018-12-01";

        /// <summary>
        /// 2018-11-01.
        /// </summary>
        public static readonly string V2018_11_01 = "2018-11-01";
    }

    /// <summary>
    /// Creates a reference to an existing NatGateway.
    /// </summary>
    /// <param name="bicepIdentifier">
    /// The the Bicep identifier name of the NatGateway resource.  This can be
    /// used to refer to the resource in expressions, but is not the Azure
    /// name of the resource.  This value can contain letters, numbers, and
    /// underscores.
    /// </param>
    /// <param name="resourceVersion">Version of the NatGateway.</param>
    /// <returns>The existing NatGateway resource.</returns>
    public static NatGateway FromExisting(string bicepIdentifier, string? resourceVersion = default) =>
        new(bicepIdentifier, resourceVersion) { IsExistingResource = true };
}
