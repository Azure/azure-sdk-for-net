// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure;
using Azure.Core;
using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;
using System.ComponentModel;
using System.Net;

namespace Azure.Provisioning.Network;

/// <summary>
/// PublicIPAddress.
/// </summary>
public partial class PublicIPAddress : ProvisionableResource
{
    /// <summary>
    /// The name of the public IP address.
    /// </summary>
    public BicepValue<string> Name 
    {
        get { Initialize(); return _name!; }
        set { Initialize(); _name!.Assign(value); }
    }
    private BicepValue<string>? _name;

    /// <summary>
    /// The DDoS protection custom policy associated with the public IP address.
    /// </summary>
    public DdosSettings DdosSettings 
    {
        get { Initialize(); return _ddosSettings!; }
        set { Initialize(); AssignOrReplace(ref _ddosSettings, value); }
    }
    private DdosSettings? _ddosSettings;

    /// <summary>
    /// Specify what happens to the public IP address when the VM using it is
    /// deleted.
    /// </summary>
    public BicepValue<IPAddressDeleteOption> DeleteOption 
    {
        get { Initialize(); return _deleteOption!; }
        set { Initialize(); _deleteOption!.Assign(value); }
    }
    private BicepValue<IPAddressDeleteOption>? _deleteOption;

    /// <summary>
    /// The FQDN of the DNS record associated with the public IP address.
    /// </summary>
    public PublicIPAddressDnsSettings DnsSettings 
    {
        get { Initialize(); return _dnsSettings!; }
        set { Initialize(); AssignOrReplace(ref _dnsSettings, value); }
    }
    private PublicIPAddressDnsSettings? _dnsSettings;

    /// <summary>
    /// The extended location of the public ip address.
    /// </summary>
    public ExtendedAzureLocation ExtendedLocation 
    {
        get { Initialize(); return _extendedLocation!; }
        set { Initialize(); AssignOrReplace(ref _extendedLocation, value); }
    }
    private ExtendedAzureLocation? _extendedLocation;

    /// <summary>
    /// Resource ID.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id 
    {
        get { Initialize(); return _id!; }
        set { Initialize(); _id!.Assign(value); }
    }
    private BicepValue<ResourceIdentifier>? _id;

    /// <summary>
    /// The idle timeout of the public IP address.
    /// </summary>
    public BicepValue<int> IdleTimeoutInMinutes 
    {
        get { Initialize(); return _idleTimeoutInMinutes!; }
        set { Initialize(); _idleTimeoutInMinutes!.Assign(value); }
    }
    private BicepValue<int>? _idleTimeoutInMinutes;

    /// <summary>
    /// The IP address associated with the public IP address resource.
    /// </summary>
    public BicepValue<string> IPAddress 
    {
        get { Initialize(); return _iPAddress!; }
        set { Initialize(); _iPAddress!.Assign(value); }
    }
    private BicepValue<string>? _iPAddress;

    /// <summary>
    /// The list of tags associated with the public IP address.
    /// </summary>
    public BicepList<IPTag> IPTags 
    {
        get { Initialize(); return _iPTags!; }
        set { Initialize(); _iPTags!.Assign(value); }
    }
    private BicepList<IPTag>? _iPTags;

    /// <summary>
    /// The linked public IP address of the public IP address resource.
    /// </summary>
    public PublicIPAddress LinkedPublicIPAddress 
    {
        get { Initialize(); return _linkedPublicIPAddress!; }
        set { Initialize(); AssignOrReplace(ref _linkedPublicIPAddress, value); }
    }
    private PublicIPAddress? _linkedPublicIPAddress;

    /// <summary>
    /// Resource location.
    /// </summary>
    public BicepValue<AzureLocation> Location 
    {
        get { Initialize(); return _location!; }
        set { Initialize(); _location!.Assign(value); }
    }
    private BicepValue<AzureLocation>? _location;

    /// <summary>
    /// Migration phase of Public IP Address.
    /// </summary>
    public BicepValue<PublicIPAddressMigrationPhase> MigrationPhase 
    {
        get { Initialize(); return _migrationPhase!; }
        set { Initialize(); _migrationPhase!.Assign(value); }
    }
    private BicepValue<PublicIPAddressMigrationPhase>? _migrationPhase;

    /// <summary>
    /// The NatGateway for the Public IP address.
    /// </summary>
    public NatGateway NatGateway 
    {
        get { Initialize(); return _natGateway!; }
        set { Initialize(); AssignOrReplace(ref _natGateway, value); }
    }
    private NatGateway? _natGateway;

    /// <summary>
    /// The public IP address version.
    /// </summary>
    public BicepValue<NetworkIPVersion> PublicIPAddressVersion 
    {
        get { Initialize(); return _publicIPAddressVersion!; }
        set { Initialize(); _publicIPAddressVersion!.Assign(value); }
    }
    private BicepValue<NetworkIPVersion>? _publicIPAddressVersion;

    /// <summary>
    /// The public IP address allocation method.
    /// </summary>
    public BicepValue<NetworkIPAllocationMethod> PublicIPAllocationMethod 
    {
        get { Initialize(); return _publicIPAllocationMethod!; }
        set { Initialize(); _publicIPAllocationMethod!.Assign(value); }
    }
    private BicepValue<NetworkIPAllocationMethod>? _publicIPAllocationMethod;

    /// <summary>
    /// Gets or sets Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> PublicIPPrefixId 
    {
        get { Initialize(); return _publicIPPrefixId!; }
        set { Initialize(); _publicIPPrefixId!.Assign(value); }
    }
    private BicepValue<ResourceIdentifier>? _publicIPPrefixId;

    /// <summary>
    /// The service public IP address of the public IP address resource.
    /// </summary>
    public PublicIPAddress ServicePublicIPAddress 
    {
        get { Initialize(); return _servicePublicIPAddress!; }
        set { Initialize(); AssignOrReplace(ref _servicePublicIPAddress, value); }
    }
    private PublicIPAddress? _servicePublicIPAddress;

    /// <summary>
    /// The public IP address SKU.
    /// </summary>
    public PublicIPAddressSku Sku 
    {
        get { Initialize(); return _sku!; }
        set { Initialize(); AssignOrReplace(ref _sku, value); }
    }
    private PublicIPAddressSku? _sku;

    /// <summary>
    /// Resource tags.
    /// </summary>
    public BicepDictionary<string> Tags 
    {
        get { Initialize(); return _tags!; }
        set { Initialize(); _tags!.Assign(value); }
    }
    private BicepDictionary<string>? _tags;

    /// <summary>
    /// A list of availability zones denoting the IP allocated for the resource
    /// needs to come from.
    /// </summary>
    public BicepList<string> Zones 
    {
        get { Initialize(); return _zones!; }
        set { Initialize(); _zones!.Assign(value); }
    }
    private BicepList<string>? _zones;

    /// <summary>
    /// A unique read-only string that changes whenever the resource is updated.
    /// </summary>
    public BicepValue<ETag> ETag 
    {
        get { Initialize(); return _eTag!; }
    }
    private BicepValue<ETag>? _eTag;

    /// <summary>
    /// The IP configuration associated with the public IP address.
    /// </summary>
    public NetworkIPConfiguration IPConfiguration 
    {
        get { Initialize(); return _iPConfiguration!; }
    }
    private NetworkIPConfiguration? _iPConfiguration;

    /// <summary>
    /// The provisioning state of the public IP address resource.
    /// </summary>
    public BicepValue<NetworkProvisioningState> ProvisioningState 
    {
        get { Initialize(); return _provisioningState!; }
    }
    private BicepValue<NetworkProvisioningState>? _provisioningState;

    /// <summary>
    /// The resource GUID property of the public IP address resource.
    /// </summary>
    public BicepValue<Guid> ResourceGuid 
    {
        get { Initialize(); return _resourceGuid!; }
    }
    private BicepValue<Guid>? _resourceGuid;

    /// <summary>
    /// Creates a new PublicIPAddress.
    /// </summary>
    /// <param name="bicepIdentifier">
    /// The the Bicep identifier name of the PublicIPAddress resource.  This
    /// can be used to refer to the resource in expressions, but is not the
    /// Azure name of the resource.  This value can contain letters, numbers,
    /// and underscores.
    /// </param>
    /// <param name="resourceVersion">Version of the PublicIPAddress.</param>
    public PublicIPAddress(string bicepIdentifier, string? resourceVersion = default)
        : base(bicepIdentifier, "Microsoft.Network/publicIPAddresses", resourceVersion ?? "2025-01-01")
    {
    }

    /// <summary>
    /// Define all the provisionable properties of PublicIPAddress.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _name = DefineProperty<string>("Name", ["name"], isRequired: true);
        _ddosSettings = DefineModelProperty<DdosSettings>("DdosSettings", ["properties", "ddosSettings"]);
        _deleteOption = DefineProperty<IPAddressDeleteOption>("DeleteOption", ["properties", "deleteOption"]);
        _dnsSettings = DefineModelProperty<PublicIPAddressDnsSettings>("DnsSettings", ["properties", "dnsSettings"]);
        _extendedLocation = DefineModelProperty<ExtendedAzureLocation>("ExtendedLocation", ["extendedLocation"]);
        _id = DefineProperty<ResourceIdentifier>("Id", ["id"]);
        _idleTimeoutInMinutes = DefineProperty<int>("IdleTimeoutInMinutes", ["properties", "idleTimeoutInMinutes"]);
        _iPAddress = DefineProperty<string>("IPAddress", ["properties", "ipAddress"]);
        _iPTags = DefineListProperty<IPTag>("IPTags", ["properties", "ipTags"]);
        _linkedPublicIPAddress = DefineModelProperty<PublicIPAddress>("LinkedPublicIPAddress", ["properties", "linkedPublicIPAddress"], new PublicIPAddress("publicIPAddress"));
        _location = DefineProperty<AzureLocation>("Location", ["location"]);
        _migrationPhase = DefineProperty<PublicIPAddressMigrationPhase>("MigrationPhase", ["properties", "migrationPhase"]);
        _natGateway = DefineModelProperty<NatGateway>("NatGateway", ["properties", "natGateway"], new NatGateway("natGateway"));
        _publicIPAddressVersion = DefineProperty<NetworkIPVersion>("PublicIPAddressVersion", ["properties", "publicIPAddressVersion"]);
        _publicIPAllocationMethod = DefineProperty<NetworkIPAllocationMethod>("PublicIPAllocationMethod", ["properties", "publicIPAllocationMethod"]);
        _publicIPPrefixId = DefineProperty<ResourceIdentifier>("PublicIPPrefixId", ["properties", "publicIPPrefix", "id"]);
        _servicePublicIPAddress = DefineModelProperty<PublicIPAddress>("ServicePublicIPAddress", ["properties", "servicePublicIPAddress"], new PublicIPAddress("publicIPAddress"));
        _sku = DefineModelProperty<PublicIPAddressSku>("Sku", ["sku"]);
        _tags = DefineDictionaryProperty<string>("Tags", ["tags"]);
        _zones = DefineListProperty<string>("Zones", ["zones"]);
        _eTag = DefineProperty<ETag>("ETag", ["etag"], isOutput: true);
        _iPConfiguration = DefineModelProperty<NetworkIPConfiguration>("IPConfiguration", ["properties", "ipConfiguration"], isOutput: true);
        _provisioningState = DefineProperty<NetworkProvisioningState>("ProvisioningState", ["properties", "provisioningState"], isOutput: true);
        _resourceGuid = DefineProperty<Guid>("ResourceGuid", ["properties", "resourceGuid"], isOutput: true);
    }

    /// <summary>
    /// Supported PublicIPAddress resource versions.
    /// </summary>
    public static class ResourceVersions
    {
        /// <summary>
        /// 2025-01-01.
        /// </summary>
        public static readonly string V2025_01_01 = "2025-01-01";

        /// <summary>
        /// 2024-10-01.
        /// </summary>
        public static readonly string V2024_10_01 = "2024-10-01";

        /// <summary>
        /// 2024-07-01.
        /// </summary>
        public static readonly string V2024_07_01 = "2024-07-01";

        /// <summary>
        /// 2024-05-01.
        /// </summary>
        public static readonly string V2024_05_01 = "2024-05-01";

        /// <summary>
        /// 2024-03-01.
        /// </summary>
        public static readonly string V2024_03_01 = "2024-03-01";

        /// <summary>
        /// 2024-01-01.
        /// </summary>
        public static readonly string V2024_01_01 = "2024-01-01";

        /// <summary>
        /// 2023-11-01.
        /// </summary>
        public static readonly string V2023_11_01 = "2023-11-01";

        /// <summary>
        /// 2023-09-01.
        /// </summary>
        public static readonly string V2023_09_01 = "2023-09-01";

        /// <summary>
        /// 2023-06-01.
        /// </summary>
        public static readonly string V2023_06_01 = "2023-06-01";

        /// <summary>
        /// 2023-05-01.
        /// </summary>
        public static readonly string V2023_05_01 = "2023-05-01";

        /// <summary>
        /// 2023-04-01.
        /// </summary>
        public static readonly string V2023_04_01 = "2023-04-01";

        /// <summary>
        /// 2023-02-01.
        /// </summary>
        public static readonly string V2023_02_01 = "2023-02-01";

        /// <summary>
        /// 2022-11-01.
        /// </summary>
        public static readonly string V2022_11_01 = "2022-11-01";

        /// <summary>
        /// 2022-09-01.
        /// </summary>
        public static readonly string V2022_09_01 = "2022-09-01";

        /// <summary>
        /// 2022-07-01.
        /// </summary>
        public static readonly string V2022_07_01 = "2022-07-01";

        /// <summary>
        /// 2022-05-01.
        /// </summary>
        public static readonly string V2022_05_01 = "2022-05-01";

        /// <summary>
        /// 2022-01-01.
        /// </summary>
        public static readonly string V2022_01_01 = "2022-01-01";

        /// <summary>
        /// 2021-12-01.
        /// </summary>
        public static readonly string V2021_12_01 = "2021-12-01";

        /// <summary>
        /// 2021-08-01.
        /// </summary>
        public static readonly string V2021_08_01 = "2021-08-01";

        /// <summary>
        /// 2021-06-01.
        /// </summary>
        public static readonly string V2021_06_01 = "2021-06-01";

        /// <summary>
        /// 2021-05-01.
        /// </summary>
        public static readonly string V2021_05_01 = "2021-05-01";

        /// <summary>
        /// 2021-04-01.
        /// </summary>
        public static readonly string V2021_04_01 = "2021-04-01";

        /// <summary>
        /// 2021-03-01.
        /// </summary>
        public static readonly string V2021_03_01 = "2021-03-01";

        /// <summary>
        /// 2021-02-01.
        /// </summary>
        public static readonly string V2021_02_01 = "2021-02-01";

        /// <summary>
        /// 2021-01-01.
        /// </summary>
        public static readonly string V2021_01_01 = "2021-01-01";

        /// <summary>
        /// 2020-11-01.
        /// </summary>
        public static readonly string V2020_11_01 = "2020-11-01";

        /// <summary>
        /// 2020-08-01.
        /// </summary>
        public static readonly string V2020_08_01 = "2020-08-01";

        /// <summary>
        /// 2020-07-01.
        /// </summary>
        public static readonly string V2020_07_01 = "2020-07-01";

        /// <summary>
        /// 2020-06-01.
        /// </summary>
        public static readonly string V2020_06_01 = "2020-06-01";

        /// <summary>
        /// 2020-05-01.
        /// </summary>
        public static readonly string V2020_05_01 = "2020-05-01";

        /// <summary>
        /// 2020-04-01.
        /// </summary>
        public static readonly string V2020_04_01 = "2020-04-01";

        /// <summary>
        /// 2020-03-01.
        /// </summary>
        public static readonly string V2020_03_01 = "2020-03-01";

        /// <summary>
        /// 2020-01-01.
        /// </summary>
        public static readonly string V2020_01_01 = "2020-01-01";

        /// <summary>
        /// 2019-12-01.
        /// </summary>
        public static readonly string V2019_12_01 = "2019-12-01";

        /// <summary>
        /// 2019-11-01.
        /// </summary>
        public static readonly string V2019_11_01 = "2019-11-01";

        /// <summary>
        /// 2019-09-01.
        /// </summary>
        public static readonly string V2019_09_01 = "2019-09-01";

        /// <summary>
        /// 2019-08-01.
        /// </summary>
        public static readonly string V2019_08_01 = "2019-08-01";

        /// <summary>
        /// 2019-07-01.
        /// </summary>
        public static readonly string V2019_07_01 = "2019-07-01";

        /// <summary>
        /// 2019-06-01.
        /// </summary>
        public static readonly string V2019_06_01 = "2019-06-01";

        /// <summary>
        /// 2019-04-01.
        /// </summary>
        public static readonly string V2019_04_01 = "2019-04-01";

        /// <summary>
        /// 2019-02-01.
        /// </summary>
        public static readonly string V2019_02_01 = "2019-02-01";

        /// <summary>
        /// 2018-12-01.
        /// </summary>
        public static readonly string V2018_12_01 = "2018-12-01";

        /// <summary>
        /// 2018-11-01.
        /// </summary>
        public static readonly string V2018_11_01 = "2018-11-01";

        /// <summary>
        /// 2018-10-01.
        /// </summary>
        public static readonly string V2018_10_01 = "2018-10-01";

        /// <summary>
        /// 2018-08-01.
        /// </summary>
        public static readonly string V2018_08_01 = "2018-08-01";

        /// <summary>
        /// 2018-07-01.
        /// </summary>
        public static readonly string V2018_07_01 = "2018-07-01";

        /// <summary>
        /// 2018-06-01.
        /// </summary>
        public static readonly string V2018_06_01 = "2018-06-01";

        /// <summary>
        /// 2018-05-01.
        /// </summary>
        public static readonly string V2018_05_01 = "2018-05-01";

        /// <summary>
        /// 2018-04-01.
        /// </summary>
        public static readonly string V2018_04_01 = "2018-04-01";

        /// <summary>
        /// 2018-03-01.
        /// </summary>
        public static readonly string V2018_03_01 = "2018-03-01";

        /// <summary>
        /// 2018-02-01.
        /// </summary>
        public static readonly string V2018_02_01 = "2018-02-01";

        /// <summary>
        /// 2018-01-01.
        /// </summary>
        public static readonly string V2018_01_01 = "2018-01-01";

        /// <summary>
        /// 2017-11-01.
        /// </summary>
        public static readonly string V2017_11_01 = "2017-11-01";

        /// <summary>
        /// 2017-10-01.
        /// </summary>
        public static readonly string V2017_10_01 = "2017-10-01";

        /// <summary>
        /// 2017-09-01.
        /// </summary>
        public static readonly string V2017_09_01 = "2017-09-01";

        /// <summary>
        /// 2017-08-01.
        /// </summary>
        public static readonly string V2017_08_01 = "2017-08-01";

        /// <summary>
        /// 2017-06-01.
        /// </summary>
        public static readonly string V2017_06_01 = "2017-06-01";

        /// <summary>
        /// 2017-04-01.
        /// </summary>
        public static readonly string V2017_04_01 = "2017-04-01";

        /// <summary>
        /// 2017-03-01.
        /// </summary>
        public static readonly string V2017_03_01 = "2017-03-01";

        /// <summary>
        /// 2016-12-01.
        /// </summary>
        public static readonly string V2016_12_01 = "2016-12-01";

        /// <summary>
        /// 2016-11-01.
        /// </summary>
        public static readonly string V2016_11_01 = "2016-11-01";

        /// <summary>
        /// 2016-10-01.
        /// </summary>
        public static readonly string V2016_10_01 = "2016-10-01";

        /// <summary>
        /// 2016-09-01.
        /// </summary>
        public static readonly string V2016_09_01 = "2016-09-01";

        /// <summary>
        /// 2016-08-01.
        /// </summary>
        public static readonly string V2016_08_01 = "2016-08-01";

        /// <summary>
        /// 2016-07-01.
        /// </summary>
        public static readonly string V2016_07_01 = "2016-07-01";

        /// <summary>
        /// 2016-06-01.
        /// </summary>
        public static readonly string V2016_06_01 = "2016-06-01";

        /// <summary>
        /// 2016-03-30.
        /// </summary>
        public static readonly string V2016_03_30 = "2016-03-30";

        /// <summary>
        /// 2015-06-15.
        /// </summary>
        public static readonly string V2015_06_15 = "2015-06-15";
    }

    /// <summary>
    /// Creates a reference to an existing PublicIPAddress.
    /// </summary>
    /// <param name="bicepIdentifier">
    /// The the Bicep identifier name of the PublicIPAddress resource.  This
    /// can be used to refer to the resource in expressions, but is not the
    /// Azure name of the resource.  This value can contain letters, numbers,
    /// and underscores.
    /// </param>
    /// <param name="resourceVersion">Version of the PublicIPAddress.</param>
    /// <returns>The existing PublicIPAddress resource.</returns>
    public static PublicIPAddress FromExisting(string bicepIdentifier, string? resourceVersion = default) =>
        new(bicepIdentifier, resourceVersion) { IsExistingResource = true };

    /// <summary>
    /// Get the requirements for naming this PublicIPAddress resource.
    /// </summary>
    /// <returns>Naming requirements.</returns>
    [EditorBrowsable(EditorBrowsableState.Never)]
    public override ResourceNameRequirements GetResourceNameRequirements() =>
        new(minLength: 1, maxLength: 80, validCharacters: ResourceNameCharacters.LowercaseLetters | ResourceNameCharacters.UppercaseLetters | ResourceNameCharacters.Numbers | ResourceNameCharacters.Hyphen | ResourceNameCharacters.Underscore | ResourceNameCharacters.Period);
}
