// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure;
using Azure.Core;
using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;
using System.ComponentModel;

namespace Azure.Provisioning.Network;

/// <summary>
/// SecurityRule.
/// </summary>
public partial class SecurityRule : ProvisionableResource
{
    /// <summary>
    /// The name of the security rule.
    /// </summary>
    public BicepValue<string> Name 
    {
        get { Initialize(); return _name!; }
        set { Initialize(); _name!.Assign(value); }
    }
    private BicepValue<string>? _name;

    /// <summary>
    /// The network traffic is allowed or denied.
    /// </summary>
    public BicepValue<SecurityRuleAccess> Access 
    {
        get { Initialize(); return _access!; }
        set { Initialize(); _access!.Assign(value); }
    }
    private BicepValue<SecurityRuleAccess>? _access;

    /// <summary>
    /// A description for this rule. Restricted to 140 chars.
    /// </summary>
    public BicepValue<string> Description 
    {
        get { Initialize(); return _description!; }
        set { Initialize(); _description!.Assign(value); }
    }
    private BicepValue<string>? _description;

    /// <summary>
    /// The destination address prefix. CIDR or destination IP range. Asterisk
    /// &apos;*&apos; can also be used to match all source IPs. Default tags
    /// such as &apos;VirtualNetwork&apos;, &apos;AzureLoadBalancer&apos; and
    /// &apos;Internet&apos; can also be used.
    /// </summary>
    public BicepValue<string> DestinationAddressPrefix 
    {
        get { Initialize(); return _destinationAddressPrefix!; }
        set { Initialize(); _destinationAddressPrefix!.Assign(value); }
    }
    private BicepValue<string>? _destinationAddressPrefix;

    /// <summary>
    /// The destination address prefixes. CIDR or destination IP ranges.
    /// </summary>
    public BicepList<string> DestinationAddressPrefixes 
    {
        get { Initialize(); return _destinationAddressPrefixes!; }
        set { Initialize(); _destinationAddressPrefixes!.Assign(value); }
    }
    private BicepList<string>? _destinationAddressPrefixes;

    /// <summary>
    /// The application security group specified as destination.
    /// </summary>
    public BicepList<ApplicationSecurityGroup> DestinationApplicationSecurityGroups 
    {
        get { Initialize(); return _destinationApplicationSecurityGroups!; }
        set { Initialize(); _destinationApplicationSecurityGroups!.Assign(value); }
    }
    private BicepList<ApplicationSecurityGroup>? _destinationApplicationSecurityGroups;

    /// <summary>
    /// The destination port or range. Integer or range between 0 and 65535.
    /// Asterisk &apos;*&apos; can also be used to match all ports.
    /// </summary>
    public BicepValue<string> DestinationPortRange 
    {
        get { Initialize(); return _destinationPortRange!; }
        set { Initialize(); _destinationPortRange!.Assign(value); }
    }
    private BicepValue<string>? _destinationPortRange;

    /// <summary>
    /// The destination port ranges.
    /// </summary>
    public BicepList<string> DestinationPortRanges 
    {
        get { Initialize(); return _destinationPortRanges!; }
        set { Initialize(); _destinationPortRanges!.Assign(value); }
    }
    private BicepList<string>? _destinationPortRanges;

    /// <summary>
    /// The direction of the rule. The direction specifies if rule will be
    /// evaluated on incoming or outgoing traffic.
    /// </summary>
    public BicepValue<SecurityRuleDirection> Direction 
    {
        get { Initialize(); return _direction!; }
        set { Initialize(); _direction!.Assign(value); }
    }
    private BicepValue<SecurityRuleDirection>? _direction;

    /// <summary>
    /// Resource ID.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id 
    {
        get { Initialize(); return _id!; }
        set { Initialize(); _id!.Assign(value); }
    }
    private BicepValue<ResourceIdentifier>? _id;

    /// <summary>
    /// The priority of the rule. The value can be between 100 and 4096. The
    /// priority number must be unique for each rule in the collection. The
    /// lower the priority number, the higher the priority of the rule.
    /// </summary>
    public BicepValue<int> Priority 
    {
        get { Initialize(); return _priority!; }
        set { Initialize(); _priority!.Assign(value); }
    }
    private BicepValue<int>? _priority;

    /// <summary>
    /// Network protocol this rule applies to.
    /// </summary>
    public BicepValue<SecurityRuleProtocol> Protocol 
    {
        get { Initialize(); return _protocol!; }
        set { Initialize(); _protocol!.Assign(value); }
    }
    private BicepValue<SecurityRuleProtocol>? _protocol;

    /// <summary>
    /// The CIDR or source IP range. Asterisk &apos;*&apos; can also be used to
    /// match all source IPs. Default tags such as &apos;VirtualNetwork&apos;,
    /// &apos;AzureLoadBalancer&apos; and &apos;Internet&apos; can also be
    /// used. If this is an ingress rule, specifies where network traffic
    /// originates from.
    /// </summary>
    public BicepValue<string> SourceAddressPrefix 
    {
        get { Initialize(); return _sourceAddressPrefix!; }
        set { Initialize(); _sourceAddressPrefix!.Assign(value); }
    }
    private BicepValue<string>? _sourceAddressPrefix;

    /// <summary>
    /// The CIDR or source IP ranges.
    /// </summary>
    public BicepList<string> SourceAddressPrefixes 
    {
        get { Initialize(); return _sourceAddressPrefixes!; }
        set { Initialize(); _sourceAddressPrefixes!.Assign(value); }
    }
    private BicepList<string>? _sourceAddressPrefixes;

    /// <summary>
    /// The application security group specified as source.
    /// </summary>
    public BicepList<ApplicationSecurityGroup> SourceApplicationSecurityGroups 
    {
        get { Initialize(); return _sourceApplicationSecurityGroups!; }
        set { Initialize(); _sourceApplicationSecurityGroups!.Assign(value); }
    }
    private BicepList<ApplicationSecurityGroup>? _sourceApplicationSecurityGroups;

    /// <summary>
    /// The source port or range. Integer or range between 0 and 65535.
    /// Asterisk &apos;*&apos; can also be used to match all ports.
    /// </summary>
    public BicepValue<string> SourcePortRange 
    {
        get { Initialize(); return _sourcePortRange!; }
        set { Initialize(); _sourcePortRange!.Assign(value); }
    }
    private BicepValue<string>? _sourcePortRange;

    /// <summary>
    /// The source port ranges.
    /// </summary>
    public BicepList<string> SourcePortRanges 
    {
        get { Initialize(); return _sourcePortRanges!; }
        set { Initialize(); _sourcePortRanges!.Assign(value); }
    }
    private BicepList<string>? _sourcePortRanges;

    /// <summary>
    /// A unique read-only string that changes whenever the resource is updated.
    /// </summary>
    public BicepValue<ETag> ETag 
    {
        get { Initialize(); return _eTag!; }
    }
    private BicepValue<ETag>? _eTag;

    /// <summary>
    /// The provisioning state of the security rule resource.
    /// </summary>
    public BicepValue<NetworkProvisioningState> ProvisioningState 
    {
        get { Initialize(); return _provisioningState!; }
    }
    private BicepValue<NetworkProvisioningState>? _provisioningState;

    /// <summary>
    /// Gets or sets a reference to the parent NetworkSecurityGroup.
    /// </summary>
    public NetworkSecurityGroup? Parent
    {
        get { Initialize(); return _parent!.Value; }
        set { Initialize(); _parent!.Value = value; }
    }
    private ResourceReference<NetworkSecurityGroup>? _parent;

    /// <summary>
    /// Creates a new SecurityRule.
    /// </summary>
    /// <param name="bicepIdentifier">
    /// The the Bicep identifier name of the SecurityRule resource.  This can
    /// be used to refer to the resource in expressions, but is not the Azure
    /// name of the resource.  This value can contain letters, numbers, and
    /// underscores.
    /// </param>
    /// <param name="resourceVersion">Version of the SecurityRule.</param>
    public SecurityRule(string bicepIdentifier, string? resourceVersion = default)
        : base(bicepIdentifier, "Microsoft.Network/networkSecurityGroups/securityRules", resourceVersion ?? "2025-01-01")
    {
    }

    /// <summary>
    /// Define all the provisionable properties of SecurityRule.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _name = DefineProperty<string>("Name", ["name"], isRequired: true);
        _access = DefineProperty<SecurityRuleAccess>("Access", ["properties", "access"]);
        _description = DefineProperty<string>("Description", ["properties", "description"]);
        _destinationAddressPrefix = DefineProperty<string>("DestinationAddressPrefix", ["properties", "destinationAddressPrefix"]);
        _destinationAddressPrefixes = DefineListProperty<string>("DestinationAddressPrefixes", ["properties", "destinationAddressPrefixes"]);
        _destinationApplicationSecurityGroups = DefineListProperty<ApplicationSecurityGroup>("DestinationApplicationSecurityGroups", ["properties", "destinationApplicationSecurityGroups"]);
        _destinationPortRange = DefineProperty<string>("DestinationPortRange", ["properties", "destinationPortRange"]);
        _destinationPortRanges = DefineListProperty<string>("DestinationPortRanges", ["properties", "destinationPortRanges"]);
        _direction = DefineProperty<SecurityRuleDirection>("Direction", ["properties", "direction"]);
        _id = DefineProperty<ResourceIdentifier>("Id", ["id"]);
        _priority = DefineProperty<int>("Priority", ["properties", "priority"]);
        _protocol = DefineProperty<SecurityRuleProtocol>("Protocol", ["properties", "protocol"]);
        _sourceAddressPrefix = DefineProperty<string>("SourceAddressPrefix", ["properties", "sourceAddressPrefix"]);
        _sourceAddressPrefixes = DefineListProperty<string>("SourceAddressPrefixes", ["properties", "sourceAddressPrefixes"]);
        _sourceApplicationSecurityGroups = DefineListProperty<ApplicationSecurityGroup>("SourceApplicationSecurityGroups", ["properties", "sourceApplicationSecurityGroups"]);
        _sourcePortRange = DefineProperty<string>("SourcePortRange", ["properties", "sourcePortRange"]);
        _sourcePortRanges = DefineListProperty<string>("SourcePortRanges", ["properties", "sourcePortRanges"]);
        _eTag = DefineProperty<ETag>("ETag", ["etag"], isOutput: true);
        _provisioningState = DefineProperty<NetworkProvisioningState>("ProvisioningState", ["properties", "provisioningState"], isOutput: true);
        _parent = DefineResource<NetworkSecurityGroup>("Parent", ["parent"], isRequired: true);
    }

    /// <summary>
    /// Supported SecurityRule resource versions.
    /// </summary>
    public static class ResourceVersions
    {
        /// <summary>
        /// 2025-01-01.
        /// </summary>
        public static readonly string V2025_01_01 = "2025-01-01";

        /// <summary>
        /// 2024-10-01.
        /// </summary>
        public static readonly string V2024_10_01 = "2024-10-01";

        /// <summary>
        /// 2024-07-01.
        /// </summary>
        public static readonly string V2024_07_01 = "2024-07-01";

        /// <summary>
        /// 2024-05-01.
        /// </summary>
        public static readonly string V2024_05_01 = "2024-05-01";

        /// <summary>
        /// 2024-03-01.
        /// </summary>
        public static readonly string V2024_03_01 = "2024-03-01";

        /// <summary>
        /// 2024-01-01.
        /// </summary>
        public static readonly string V2024_01_01 = "2024-01-01";

        /// <summary>
        /// 2023-11-01.
        /// </summary>
        public static readonly string V2023_11_01 = "2023-11-01";

        /// <summary>
        /// 2023-09-01.
        /// </summary>
        public static readonly string V2023_09_01 = "2023-09-01";

        /// <summary>
        /// 2023-06-01.
        /// </summary>
        public static readonly string V2023_06_01 = "2023-06-01";

        /// <summary>
        /// 2023-05-01.
        /// </summary>
        public static readonly string V2023_05_01 = "2023-05-01";

        /// <summary>
        /// 2023-04-01.
        /// </summary>
        public static readonly string V2023_04_01 = "2023-04-01";

        /// <summary>
        /// 2023-02-01.
        /// </summary>
        public static readonly string V2023_02_01 = "2023-02-01";

        /// <summary>
        /// 2022-11-01.
        /// </summary>
        public static readonly string V2022_11_01 = "2022-11-01";

        /// <summary>
        /// 2022-09-01.
        /// </summary>
        public static readonly string V2022_09_01 = "2022-09-01";

        /// <summary>
        /// 2022-07-01.
        /// </summary>
        public static readonly string V2022_07_01 = "2022-07-01";

        /// <summary>
        /// 2022-05-01.
        /// </summary>
        public static readonly string V2022_05_01 = "2022-05-01";

        /// <summary>
        /// 2022-01-01.
        /// </summary>
        public static readonly string V2022_01_01 = "2022-01-01";

        /// <summary>
        /// 2021-12-01.
        /// </summary>
        public static readonly string V2021_12_01 = "2021-12-01";

        /// <summary>
        /// 2021-08-01.
        /// </summary>
        public static readonly string V2021_08_01 = "2021-08-01";

        /// <summary>
        /// 2021-06-01.
        /// </summary>
        public static readonly string V2021_06_01 = "2021-06-01";

        /// <summary>
        /// 2021-05-01.
        /// </summary>
        public static readonly string V2021_05_01 = "2021-05-01";

        /// <summary>
        /// 2021-04-01.
        /// </summary>
        public static readonly string V2021_04_01 = "2021-04-01";

        /// <summary>
        /// 2021-03-01.
        /// </summary>
        public static readonly string V2021_03_01 = "2021-03-01";

        /// <summary>
        /// 2021-02-01.
        /// </summary>
        public static readonly string V2021_02_01 = "2021-02-01";

        /// <summary>
        /// 2021-01-01.
        /// </summary>
        public static readonly string V2021_01_01 = "2021-01-01";

        /// <summary>
        /// 2020-11-01.
        /// </summary>
        public static readonly string V2020_11_01 = "2020-11-01";

        /// <summary>
        /// 2020-08-01.
        /// </summary>
        public static readonly string V2020_08_01 = "2020-08-01";

        /// <summary>
        /// 2020-07-01.
        /// </summary>
        public static readonly string V2020_07_01 = "2020-07-01";

        /// <summary>
        /// 2020-06-01.
        /// </summary>
        public static readonly string V2020_06_01 = "2020-06-01";

        /// <summary>
        /// 2020-05-01.
        /// </summary>
        public static readonly string V2020_05_01 = "2020-05-01";

        /// <summary>
        /// 2020-04-01.
        /// </summary>
        public static readonly string V2020_04_01 = "2020-04-01";

        /// <summary>
        /// 2020-03-01.
        /// </summary>
        public static readonly string V2020_03_01 = "2020-03-01";

        /// <summary>
        /// 2020-01-01.
        /// </summary>
        public static readonly string V2020_01_01 = "2020-01-01";

        /// <summary>
        /// 2019-12-01.
        /// </summary>
        public static readonly string V2019_12_01 = "2019-12-01";

        /// <summary>
        /// 2019-11-01.
        /// </summary>
        public static readonly string V2019_11_01 = "2019-11-01";

        /// <summary>
        /// 2019-09-01.
        /// </summary>
        public static readonly string V2019_09_01 = "2019-09-01";

        /// <summary>
        /// 2019-08-01.
        /// </summary>
        public static readonly string V2019_08_01 = "2019-08-01";

        /// <summary>
        /// 2019-07-01.
        /// </summary>
        public static readonly string V2019_07_01 = "2019-07-01";

        /// <summary>
        /// 2019-06-01.
        /// </summary>
        public static readonly string V2019_06_01 = "2019-06-01";

        /// <summary>
        /// 2019-04-01.
        /// </summary>
        public static readonly string V2019_04_01 = "2019-04-01";

        /// <summary>
        /// 2019-02-01.
        /// </summary>
        public static readonly string V2019_02_01 = "2019-02-01";

        /// <summary>
        /// 2018-12-01.
        /// </summary>
        public static readonly string V2018_12_01 = "2018-12-01";

        /// <summary>
        /// 2018-11-01.
        /// </summary>
        public static readonly string V2018_11_01 = "2018-11-01";

        /// <summary>
        /// 2018-10-01.
        /// </summary>
        public static readonly string V2018_10_01 = "2018-10-01";

        /// <summary>
        /// 2018-08-01.
        /// </summary>
        public static readonly string V2018_08_01 = "2018-08-01";

        /// <summary>
        /// 2018-07-01.
        /// </summary>
        public static readonly string V2018_07_01 = "2018-07-01";

        /// <summary>
        /// 2018-06-01.
        /// </summary>
        public static readonly string V2018_06_01 = "2018-06-01";

        /// <summary>
        /// 2018-05-01.
        /// </summary>
        public static readonly string V2018_05_01 = "2018-05-01";

        /// <summary>
        /// 2018-04-01.
        /// </summary>
        public static readonly string V2018_04_01 = "2018-04-01";

        /// <summary>
        /// 2018-03-01.
        /// </summary>
        public static readonly string V2018_03_01 = "2018-03-01";

        /// <summary>
        /// 2018-02-01.
        /// </summary>
        public static readonly string V2018_02_01 = "2018-02-01";

        /// <summary>
        /// 2018-01-01.
        /// </summary>
        public static readonly string V2018_01_01 = "2018-01-01";

        /// <summary>
        /// 2017-11-01.
        /// </summary>
        public static readonly string V2017_11_01 = "2017-11-01";

        /// <summary>
        /// 2017-10-01.
        /// </summary>
        public static readonly string V2017_10_01 = "2017-10-01";

        /// <summary>
        /// 2017-09-01.
        /// </summary>
        public static readonly string V2017_09_01 = "2017-09-01";

        /// <summary>
        /// 2017-08-01.
        /// </summary>
        public static readonly string V2017_08_01 = "2017-08-01";

        /// <summary>
        /// 2017-06-01.
        /// </summary>
        public static readonly string V2017_06_01 = "2017-06-01";

        /// <summary>
        /// 2017-04-01.
        /// </summary>
        public static readonly string V2017_04_01 = "2017-04-01";

        /// <summary>
        /// 2017-03-01.
        /// </summary>
        public static readonly string V2017_03_01 = "2017-03-01";

        /// <summary>
        /// 2016-12-01.
        /// </summary>
        public static readonly string V2016_12_01 = "2016-12-01";

        /// <summary>
        /// 2016-11-01.
        /// </summary>
        public static readonly string V2016_11_01 = "2016-11-01";

        /// <summary>
        /// 2016-10-01.
        /// </summary>
        public static readonly string V2016_10_01 = "2016-10-01";

        /// <summary>
        /// 2016-09-01.
        /// </summary>
        public static readonly string V2016_09_01 = "2016-09-01";

        /// <summary>
        /// 2016-08-01.
        /// </summary>
        public static readonly string V2016_08_01 = "2016-08-01";

        /// <summary>
        /// 2016-07-01.
        /// </summary>
        public static readonly string V2016_07_01 = "2016-07-01";

        /// <summary>
        /// 2016-06-01.
        /// </summary>
        public static readonly string V2016_06_01 = "2016-06-01";

        /// <summary>
        /// 2016-03-30.
        /// </summary>
        public static readonly string V2016_03_30 = "2016-03-30";

        /// <summary>
        /// 2015-06-15.
        /// </summary>
        public static readonly string V2015_06_15 = "2015-06-15";
    }

    /// <summary>
    /// Creates a reference to an existing SecurityRule.
    /// </summary>
    /// <param name="bicepIdentifier">
    /// The the Bicep identifier name of the SecurityRule resource.  This can
    /// be used to refer to the resource in expressions, but is not the Azure
    /// name of the resource.  This value can contain letters, numbers, and
    /// underscores.
    /// </param>
    /// <param name="resourceVersion">Version of the SecurityRule.</param>
    /// <returns>The existing SecurityRule resource.</returns>
    public static SecurityRule FromExisting(string bicepIdentifier, string? resourceVersion = default) =>
        new(bicepIdentifier, resourceVersion) { IsExistingResource = true };

    /// <summary>
    /// Get the requirements for naming this SecurityRule resource.
    /// </summary>
    /// <returns>Naming requirements.</returns>
    [EditorBrowsable(EditorBrowsableState.Never)]
    public override ResourceNameRequirements GetResourceNameRequirements() =>
        new(minLength: 1, maxLength: 80, validCharacters: ResourceNameCharacters.LowercaseLetters | ResourceNameCharacters.UppercaseLetters | ResourceNameCharacters.Numbers | ResourceNameCharacters.Hyphen | ResourceNameCharacters.Underscore | ResourceNameCharacters.Period);
}
