// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;

namespace Azure.Provisioning.CosmosDB;

/// <summary>
/// CassandraDataCenter.
/// </summary>
public partial class CassandraDataCenter : Resource
{
    /// <summary>
    /// Data center name in a managed Cassandra cluster.
    /// </summary>
    public BicepValue<string> Name { get => _name; set => _name.Assign(value); }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// Properties of a managed Cassandra data center.
    /// </summary>
    public BicepValue<CassandraDataCenterProperties> Properties { get => _properties; set => _properties.Assign(value); }
    private readonly BicepValue<CassandraDataCenterProperties> _properties;

    /// <summary>
    /// Gets the Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id { get => _id; }
    private readonly BicepValue<ResourceIdentifier> _id;

    /// <summary>
    /// Gets the SystemData.
    /// </summary>
    public BicepValue<SystemData> SystemData { get => _systemData; }
    private readonly BicepValue<SystemData> _systemData;

    /// <summary>
    /// Gets or sets a reference to the parent CassandraCluster.
    /// </summary>
    public CassandraCluster? Parent { get => _parent!.Value; set => _parent!.Value = value; }
    private readonly ResourceReference<CassandraCluster> _parent;

    /// <summary>
    /// Creates a new CassandraDataCenter.
    /// </summary>
    /// <param name="resourceName">Name of the CassandraDataCenter.</param>
    /// <param name="resourceVersion">Version of the CassandraDataCenter.</param>
    /// <param name="context">Provisioning context for this resource.</param>
    public CassandraDataCenter(string resourceName, string? resourceVersion = default, ProvisioningContext? context = default)
        : base(resourceName, "Microsoft.DocumentDB/cassandraClusters/dataCenters", resourceVersion, context)
    {
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"], isRequired: true);
        _properties = BicepValue<CassandraDataCenterProperties>.DefineProperty(this, "Properties", ["properties"]);
        _id = BicepValue<ResourceIdentifier>.DefineProperty(this, "Id", ["id"], isOutput: true);
        _systemData = BicepValue<SystemData>.DefineProperty(this, "SystemData", ["systemData"], isOutput: true);
        _parent = ResourceReference<CassandraCluster>.DefineResource(this, "Parent", ["parent"], isRequired: true);
    }

    /// <summary>
    /// Creates a reference to an existing CassandraDataCenter.
    /// </summary>
    /// <param name="resourceName">Name of the CassandraDataCenter.</param>
    /// <param name="resourceVersion">Version of the CassandraDataCenter.</param>
    /// <returns>The existing CassandraDataCenter resource.</returns>
    public static CassandraDataCenter FromExisting(string resourceName, string? resourceVersion = default) =>
        new(resourceName, resourceVersion) { IsExistingResource = true };
}
