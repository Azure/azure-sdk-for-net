// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;

namespace Azure.Provisioning.CosmosDB;

/// <summary>
/// CosmosDBPrivateEndpointConnection.
/// </summary>
public partial class CosmosDBPrivateEndpointConnection : Resource
{
    /// <summary>
    /// The name of the private endpoint connection.
    /// </summary>
    public BicepValue<string> Name { get => _name; set => _name.Assign(value); }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// Connection State of the Private Endpoint Connection.
    /// </summary>
    public BicepValue<CosmosDBPrivateLinkServiceConnectionStateProperty> ConnectionState { get => _connectionState; set => _connectionState.Assign(value); }
    private readonly BicepValue<CosmosDBPrivateLinkServiceConnectionStateProperty> _connectionState;

    /// <summary>
    /// Group id of the private endpoint.
    /// </summary>
    public BicepValue<string> GroupId { get => _groupId; set => _groupId.Assign(value); }
    private readonly BicepValue<string> _groupId;

    /// <summary>
    /// Resource id of the private endpoint.
    /// </summary>
    public BicepValue<ResourceIdentifier> PrivateEndpointId { get => _privateEndpointId; set => _privateEndpointId.Assign(value); }
    private readonly BicepValue<ResourceIdentifier> _privateEndpointId;

    /// <summary>
    /// Provisioning state of the private endpoint.
    /// </summary>
    public BicepValue<string> ProvisioningState { get => _provisioningState; set => _provisioningState.Assign(value); }
    private readonly BicepValue<string> _provisioningState;

    /// <summary>
    /// Gets the Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id { get => _id; }
    private readonly BicepValue<ResourceIdentifier> _id;

    /// <summary>
    /// Gets the SystemData.
    /// </summary>
    public BicepValue<SystemData> SystemData { get => _systemData; }
    private readonly BicepValue<SystemData> _systemData;

    /// <summary>
    /// Gets or sets a reference to the parent CosmosDBAccount.
    /// </summary>
    public CosmosDBAccount? Parent { get => _parent!.Value; set => _parent!.Value = value; }
    private readonly ResourceReference<CosmosDBAccount> _parent;

    /// <summary>
    /// Creates a new CosmosDBPrivateEndpointConnection.
    /// </summary>
    /// <param name="resourceName">Name of the CosmosDBPrivateEndpointConnection.</param>
    /// <param name="resourceVersion">Version of the CosmosDBPrivateEndpointConnection.</param>
    /// <param name="context">Provisioning context for this resource.</param>
    public CosmosDBPrivateEndpointConnection(string resourceName, string? resourceVersion = default, ProvisioningContext? context = default)
        : base(resourceName, "Microsoft.DocumentDB/databaseAccounts/privateEndpointConnections", resourceVersion, context)
    {
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"], isRequired: true);
        _connectionState = BicepValue<CosmosDBPrivateLinkServiceConnectionStateProperty>.DefineProperty(this, "ConnectionState", ["properties", "privateLinkServiceConnectionState"]);
        _groupId = BicepValue<string>.DefineProperty(this, "GroupId", ["properties", "groupId"]);
        _privateEndpointId = BicepValue<ResourceIdentifier>.DefineProperty(this, "PrivateEndpointId", ["properties", "privateEndpoint", "id"]);
        _provisioningState = BicepValue<string>.DefineProperty(this, "ProvisioningState", ["properties", "provisioningState"]);
        _id = BicepValue<ResourceIdentifier>.DefineProperty(this, "Id", ["id"], isOutput: true);
        _systemData = BicepValue<SystemData>.DefineProperty(this, "SystemData", ["systemData"], isOutput: true);
        _parent = ResourceReference<CosmosDBAccount>.DefineResource(this, "Parent", ["parent"], isRequired: true);
    }

    /// <summary>
    /// Creates a reference to an existing CosmosDBPrivateEndpointConnection.
    /// </summary>
    /// <param name="resourceName">Name of the CosmosDBPrivateEndpointConnection.</param>
    /// <param name="resourceVersion">Version of the CosmosDBPrivateEndpointConnection.</param>
    /// <returns>The existing CosmosDBPrivateEndpointConnection resource.</returns>
    public static CosmosDBPrivateEndpointConnection FromExisting(string resourceName, string? resourceVersion = default) =>
        new(resourceName, resourceVersion) { IsExistingResource = true };
}
