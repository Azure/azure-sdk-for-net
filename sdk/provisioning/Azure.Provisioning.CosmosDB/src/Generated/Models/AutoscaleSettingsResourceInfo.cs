// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.CosmosDB;

/// <summary>
/// Cosmos DB provisioned throughput settings object.
/// </summary>
public partial class AutoscaleSettingsResourceInfo : ProvisioningConstruct
{
    /// <summary>
    /// Represents maximum throughput container can scale up to.
    /// </summary>
    public BicepValue<int> MaxThroughput { get => _maxThroughput; set => _maxThroughput.Assign(value); }
    private readonly BicepValue<int> _maxThroughput;

    /// <summary>
    /// Represents throughput policy which service must adhere to for
    /// auto-upgrade.
    /// </summary>
    public BicepValue<ThroughputPolicyResourceInfo> AutoUpgradeThroughputPolicy { get => _autoUpgradeThroughputPolicy; set => _autoUpgradeThroughputPolicy.Assign(value); }
    private readonly BicepValue<ThroughputPolicyResourceInfo> _autoUpgradeThroughputPolicy;

    /// <summary>
    /// Represents target maximum throughput container can scale up to once
    /// offer is no longer in pending state.
    /// </summary>
    public BicepValue<int> TargetMaxThroughput { get => _targetMaxThroughput; }
    private readonly BicepValue<int> _targetMaxThroughput;

    /// <summary>
    /// Creates a new AutoscaleSettingsResourceInfo.
    /// </summary>
    public AutoscaleSettingsResourceInfo()
    {
        _maxThroughput = BicepValue<int>.DefineProperty(this, "MaxThroughput", ["maxThroughput"]);
        _autoUpgradeThroughputPolicy = BicepValue<ThroughputPolicyResourceInfo>.DefineProperty(this, "AutoUpgradeThroughputPolicy", ["autoUpgradePolicy", "throughputPolicy"]);
        _targetMaxThroughput = BicepValue<int>.DefineProperty(this, "TargetMaxThroughput", ["targetMaxThroughput"], isOutput: true);
    }
}
