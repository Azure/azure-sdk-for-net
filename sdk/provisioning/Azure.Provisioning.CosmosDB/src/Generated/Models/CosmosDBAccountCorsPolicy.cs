// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.CosmosDB;

/// <summary>
/// The CORS policy for the Cosmos DB database account.
/// </summary>
public partial class CosmosDBAccountCorsPolicy : ProvisioningConstruct
{
    /// <summary>
    /// The origin domains that are permitted to make a request against the
    /// service via CORS.
    /// </summary>
    public BicepValue<string> AllowedOrigins { get => _allowedOrigins; set => _allowedOrigins.Assign(value); }
    private readonly BicepValue<string> _allowedOrigins;

    /// <summary>
    /// The methods (HTTP request verbs) that the origin domain may use for a
    /// CORS request.
    /// </summary>
    public BicepValue<string> AllowedMethods { get => _allowedMethods; set => _allowedMethods.Assign(value); }
    private readonly BicepValue<string> _allowedMethods;

    /// <summary>
    /// The request headers that the origin domain may specify on the CORS
    /// request.
    /// </summary>
    public BicepValue<string> AllowedHeaders { get => _allowedHeaders; set => _allowedHeaders.Assign(value); }
    private readonly BicepValue<string> _allowedHeaders;

    /// <summary>
    /// The response headers that may be sent in the response to the CORS
    /// request and exposed by the browser to the request issuer.
    /// </summary>
    public BicepValue<string> ExposedHeaders { get => _exposedHeaders; set => _exposedHeaders.Assign(value); }
    private readonly BicepValue<string> _exposedHeaders;

    /// <summary>
    /// The maximum amount time that a browser should cache the preflight
    /// OPTIONS request.
    /// </summary>
    public BicepValue<long> MaxAgeInSeconds { get => _maxAgeInSeconds; set => _maxAgeInSeconds.Assign(value); }
    private readonly BicepValue<long> _maxAgeInSeconds;

    /// <summary>
    /// Creates a new CosmosDBAccountCorsPolicy.
    /// </summary>
    public CosmosDBAccountCorsPolicy()
    {
        _allowedOrigins = BicepValue<string>.DefineProperty(this, "AllowedOrigins", ["allowedOrigins"]);
        _allowedMethods = BicepValue<string>.DefineProperty(this, "AllowedMethods", ["allowedMethods"]);
        _allowedHeaders = BicepValue<string>.DefineProperty(this, "AllowedHeaders", ["allowedHeaders"]);
        _exposedHeaders = BicepValue<string>.DefineProperty(this, "ExposedHeaders", ["exposedHeaders"]);
        _maxAgeInSeconds = BicepValue<long>.DefineProperty(this, "MaxAgeInSeconds", ["maxAgeInSeconds"]);
    }
}
