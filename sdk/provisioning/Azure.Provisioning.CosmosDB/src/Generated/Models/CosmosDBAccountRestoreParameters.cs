// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.CosmosDB;

/// <summary>
/// Parameters to indicate the information about the restore.
/// </summary>
public partial class CosmosDBAccountRestoreParameters : ProvisioningConstruct
{
    /// <summary>
    /// Describes the mode of the restore.
    /// </summary>
    public BicepValue<CosmosDBAccountRestoreMode> RestoreMode { get => _restoreMode; set => _restoreMode.Assign(value); }
    private readonly BicepValue<CosmosDBAccountRestoreMode> _restoreMode;

    /// <summary>
    /// List of specific databases available for restore.
    /// </summary>
    public BicepList<DatabaseRestoreResourceInfo> DatabasesToRestore { get => _databasesToRestore; set => _databasesToRestore.Assign(value); }
    private readonly BicepList<DatabaseRestoreResourceInfo> _databasesToRestore;

    /// <summary>
    /// List of specific gremlin databases available for restore.
    /// </summary>
    public BicepList<GremlinDatabaseRestoreResourceInfo> GremlinDatabasesToRestore { get => _gremlinDatabasesToRestore; set => _gremlinDatabasesToRestore.Assign(value); }
    private readonly BicepList<GremlinDatabaseRestoreResourceInfo> _gremlinDatabasesToRestore;

    /// <summary>
    /// List of specific tables available for restore.
    /// </summary>
    public BicepList<string> TablesToRestore { get => _tablesToRestore; set => _tablesToRestore.Assign(value); }
    private readonly BicepList<string> _tablesToRestore;

    /// <summary>
    /// The source backup location for restore.
    /// </summary>
    public BicepValue<string> SourceBackupLocation { get => _sourceBackupLocation; set => _sourceBackupLocation.Assign(value); }
    private readonly BicepValue<string> _sourceBackupLocation;

    /// <summary>
    /// The id of the restorable database account from which the restore has to
    /// be initiated. For example:
    /// /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}.
    /// </summary>
    public BicepValue<string> RestoreSource { get => _restoreSource; set => _restoreSource.Assign(value); }
    private readonly BicepValue<string> _restoreSource;

    /// <summary>
    /// Time to which the account has to be restored (ISO-8601 format).
    /// </summary>
    public BicepValue<DateTimeOffset> RestoreTimestampInUtc { get => _restoreTimestampInUtc; set => _restoreTimestampInUtc.Assign(value); }
    private readonly BicepValue<DateTimeOffset> _restoreTimestampInUtc;

    /// <summary>
    /// Specifies whether the restored account will have Time-To-Live disabled
    /// upon the successful restore.
    /// </summary>
    public BicepValue<bool> IsRestoreWithTtlDisabled { get => _isRestoreWithTtlDisabled; set => _isRestoreWithTtlDisabled.Assign(value); }
    private readonly BicepValue<bool> _isRestoreWithTtlDisabled;

    /// <summary>
    /// Creates a new CosmosDBAccountRestoreParameters.
    /// </summary>
    public CosmosDBAccountRestoreParameters()
    {
        _restoreMode = BicepValue<CosmosDBAccountRestoreMode>.DefineProperty(this, "RestoreMode", ["restoreMode"]);
        _databasesToRestore = BicepList<DatabaseRestoreResourceInfo>.DefineProperty(this, "DatabasesToRestore", ["databasesToRestore"]);
        _gremlinDatabasesToRestore = BicepList<GremlinDatabaseRestoreResourceInfo>.DefineProperty(this, "GremlinDatabasesToRestore", ["gremlinDatabasesToRestore"]);
        _tablesToRestore = BicepList<string>.DefineProperty(this, "TablesToRestore", ["tablesToRestore"]);
        _sourceBackupLocation = BicepValue<string>.DefineProperty(this, "SourceBackupLocation", ["sourceBackupLocation"]);
        _restoreSource = BicepValue<string>.DefineProperty(this, "RestoreSource", ["restoreSource"]);
        _restoreTimestampInUtc = BicepValue<DateTimeOffset>.DefineProperty(this, "RestoreTimestampInUtc", ["restoreTimestampInUtc"]);
        _isRestoreWithTtlDisabled = BicepValue<bool>.DefineProperty(this, "IsRestoreWithTtlDisabled", ["restoreWithTtlDisabled"]);
    }
}
