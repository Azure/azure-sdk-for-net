// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.CosmosDB;

/// <summary>
/// Cosmos DB MongoDB collection resource object.
/// </summary>
public partial class MongoDBCollectionResourceInfo : ProvisioningConstruct
{
    /// <summary>
    /// Name of the Cosmos DB MongoDB collection.
    /// </summary>
    public BicepValue<string> CollectionName { get => _collectionName; set => _collectionName.Assign(value); }
    private readonly BicepValue<string> _collectionName;

    /// <summary>
    /// A key-value pair of shard keys to be applied for the request.
    /// </summary>
    public BicepDictionary<string> ShardKey { get => _shardKey; set => _shardKey.Assign(value); }
    private readonly BicepDictionary<string> _shardKey;

    /// <summary>
    /// List of index keys.
    /// </summary>
    public BicepList<MongoDBIndex> Indexes { get => _indexes; set => _indexes.Assign(value); }
    private readonly BicepList<MongoDBIndex> _indexes;

    /// <summary>
    /// Analytical TTL.
    /// </summary>
    public BicepValue<int> AnalyticalStorageTtl { get => _analyticalStorageTtl; set => _analyticalStorageTtl.Assign(value); }
    private readonly BicepValue<int> _analyticalStorageTtl;

    /// <summary>
    /// Parameters to indicate the information about the restore.
    /// </summary>
    public BicepValue<ResourceRestoreParameters> RestoreParameters { get => _restoreParameters; set => _restoreParameters.Assign(value); }
    private readonly BicepValue<ResourceRestoreParameters> _restoreParameters;

    /// <summary>
    /// Enum to indicate the mode of resource creation.
    /// </summary>
    public BicepValue<CosmosDBAccountCreateMode> CreateMode { get => _createMode; set => _createMode.Assign(value); }
    private readonly BicepValue<CosmosDBAccountCreateMode> _createMode;

    /// <summary>
    /// Creates a new MongoDBCollectionResourceInfo.
    /// </summary>
    public MongoDBCollectionResourceInfo()
    {
        _collectionName = BicepValue<string>.DefineProperty(this, "CollectionName", ["id"]);
        _shardKey = BicepDictionary<string>.DefineProperty(this, "ShardKey", ["shardKey"]);
        _indexes = BicepList<MongoDBIndex>.DefineProperty(this, "Indexes", ["indexes"]);
        _analyticalStorageTtl = BicepValue<int>.DefineProperty(this, "AnalyticalStorageTtl", ["analyticalStorageTtl"]);
        _restoreParameters = BicepValue<ResourceRestoreParameters>.DefineProperty(this, "RestoreParameters", ["restoreParameters"]);
        _createMode = BicepValue<CosmosDBAccountCreateMode>.DefineProperty(this, "CreateMode", ["createMode"]);
    }
}
