// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.CosmosDB;

/// <summary>
/// The configuration of the partition key to be used for partitioning data
/// into multiple partitions.
/// </summary>
public partial class CosmosDBContainerPartitionKey : ProvisioningConstruct
{
    /// <summary>
    /// List of paths using which data within the container can be partitioned.
    /// </summary>
    public BicepList<string> Paths { get => _paths; set => _paths.Assign(value); }
    private readonly BicepList<string> _paths;

    /// <summary>
    /// Indicates the kind of algorithm used for partitioning. For MultiHash,
    /// multiple partition keys (upto three maximum) are supported for
    /// container create.
    /// </summary>
    public BicepValue<CosmosDBPartitionKind> Kind { get => _kind; set => _kind.Assign(value); }
    private readonly BicepValue<CosmosDBPartitionKind> _kind;

    /// <summary>
    /// Indicates the version of the partition key definition.
    /// </summary>
    public BicepValue<int> Version { get => _version; set => _version.Assign(value); }
    private readonly BicepValue<int> _version;

    /// <summary>
    /// Indicates if the container is using a system generated partition key.
    /// </summary>
    public BicepValue<bool> IsSystemKey { get => _isSystemKey; }
    private readonly BicepValue<bool> _isSystemKey;

    /// <summary>
    /// Creates a new CosmosDBContainerPartitionKey.
    /// </summary>
    public CosmosDBContainerPartitionKey()
    {
        _paths = BicepList<string>.DefineProperty(this, "Paths", ["paths"]);
        _kind = BicepValue<CosmosDBPartitionKind>.DefineProperty(this, "Kind", ["kind"]);
        _version = BicepValue<int>.DefineProperty(this, "Version", ["version"]);
        _isSystemKey = BicepValue<bool>.DefineProperty(this, "IsSystemKey", ["systemKey"], isOutput: true);
    }
}
