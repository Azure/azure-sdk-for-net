// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.CosmosDB;

/// <summary>
/// Cosmos DB indexing policy.
/// </summary>
public partial class CosmosDBIndexingPolicy : ProvisioningConstruct
{
    /// <summary>
    /// Indicates if the indexing policy is automatic.
    /// </summary>
    public BicepValue<bool> IsAutomatic { get => _isAutomatic; set => _isAutomatic.Assign(value); }
    private readonly BicepValue<bool> _isAutomatic;

    /// <summary>
    /// Indicates the indexing mode.
    /// </summary>
    public BicepValue<CosmosDBIndexingMode> IndexingMode { get => _indexingMode; set => _indexingMode.Assign(value); }
    private readonly BicepValue<CosmosDBIndexingMode> _indexingMode;

    /// <summary>
    /// List of paths to include in the indexing.
    /// </summary>
    public BicepList<CosmosDBIncludedPath> IncludedPaths { get => _includedPaths; set => _includedPaths.Assign(value); }
    private readonly BicepList<CosmosDBIncludedPath> _includedPaths;

    /// <summary>
    /// List of paths to exclude from indexing.
    /// </summary>
    public BicepList<CosmosDBExcludedPath> ExcludedPaths { get => _excludedPaths; set => _excludedPaths.Assign(value); }
    private readonly BicepList<CosmosDBExcludedPath> _excludedPaths;

    /// <summary>
    /// List of composite path list.
    /// </summary>
    public BicepList<BicepList<CosmosDBCompositePath>> CompositeIndexes { get => _compositeIndexes; set => _compositeIndexes.Assign(value); }
    private readonly BicepList<BicepList<CosmosDBCompositePath>> _compositeIndexes;

    /// <summary>
    /// List of spatial specifics.
    /// </summary>
    public BicepList<SpatialSpec> SpatialIndexes { get => _spatialIndexes; set => _spatialIndexes.Assign(value); }
    private readonly BicepList<SpatialSpec> _spatialIndexes;

    /// <summary>
    /// Creates a new CosmosDBIndexingPolicy.
    /// </summary>
    public CosmosDBIndexingPolicy()
    {
        _isAutomatic = BicepValue<bool>.DefineProperty(this, "IsAutomatic", ["automatic"]);
        _indexingMode = BicepValue<CosmosDBIndexingMode>.DefineProperty(this, "IndexingMode", ["indexingMode"]);
        _includedPaths = BicepList<CosmosDBIncludedPath>.DefineProperty(this, "IncludedPaths", ["includedPaths"]);
        _excludedPaths = BicepList<CosmosDBExcludedPath>.DefineProperty(this, "ExcludedPaths", ["excludedPaths"]);
        _compositeIndexes = BicepList<BicepList<CosmosDBCompositePath>>.DefineProperty(this, "CompositeIndexes", ["compositeIndexes"]);
        _spatialIndexes = BicepList<SpatialSpec>.DefineProperty(this, "SpatialIndexes", ["spatialIndexes"]);
    }
}
