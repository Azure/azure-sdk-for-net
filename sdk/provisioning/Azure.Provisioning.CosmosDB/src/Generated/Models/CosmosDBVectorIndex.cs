// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.CosmosDB;

/// <summary>
/// The CosmosDBVectorIndex.
/// </summary>
public partial class CosmosDBVectorIndex : ProvisionableConstruct
{
    /// <summary>
    /// The path to the vector field in the document.
    /// </summary>
    public BicepValue<string> Path 
    {
        get { Initialize(); return _path!; }
        set { Initialize(); _path!.Assign(value); }
    }
    private BicepValue<string>? _path;

    /// <summary>
    /// The index type of the vector. Currently, flat, diskANN, and
    /// quantizedFlat are supported.
    /// </summary>
    public BicepValue<CosmosDBVectorIndexType> IndexType 
    {
        get { Initialize(); return _indexType!; }
        set { Initialize(); _indexType!.Assign(value); }
    }
    private BicepValue<CosmosDBVectorIndexType>? _indexType;

    /// <summary>
    /// Creates a new CosmosDBVectorIndex.
    /// </summary>
    public CosmosDBVectorIndex()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of CosmosDBVectorIndex.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _path = DefineProperty<string>("Path", ["path"]);
        _indexType = DefineProperty<CosmosDBVectorIndexType>("IndexType", ["type"]);
    }
}
