// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.CosmosDB;

/// <summary>
/// Cosmos DB MongoDB collection index options.
/// </summary>
public partial class MongoDBIndexConfig : ProvisioningConstruct
{
    /// <summary>
    /// Expire after seconds.
    /// </summary>
    public BicepValue<int> ExpireAfterSeconds { get => _expireAfterSeconds; set => _expireAfterSeconds.Assign(value); }
    private readonly BicepValue<int> _expireAfterSeconds;

    /// <summary>
    /// Is unique or not.
    /// </summary>
    public BicepValue<bool> IsUnique { get => _isUnique; set => _isUnique.Assign(value); }
    private readonly BicepValue<bool> _isUnique;

    /// <summary>
    /// Creates a new MongoDBIndexConfig.
    /// </summary>
    public MongoDBIndexConfig()
    {
        _expireAfterSeconds = BicepValue<int>.DefineProperty(this, "ExpireAfterSeconds", ["expireAfterSeconds"]);
        _isUnique = BicepValue<bool>.DefineProperty(this, "IsUnique", ["unique"]);
    }
}
