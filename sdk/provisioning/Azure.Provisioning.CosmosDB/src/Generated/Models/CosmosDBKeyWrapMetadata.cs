// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.CosmosDB;

/// <summary>
/// Represents key wrap metadata that a key wrapping provider can use to
/// wrap/unwrap a client encryption key.
/// </summary>
public partial class CosmosDBKeyWrapMetadata : ProvisioningConstruct
{
    /// <summary>
    /// The name of associated KeyEncryptionKey (aka CustomerManagedKey).
    /// </summary>
    public BicepValue<string> Name { get => _name; set => _name.Assign(value); }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// ProviderName of KeyStoreProvider.
    /// </summary>
    public BicepValue<string> CosmosDBKeyWrapMetadataType { get => _cosmosDBKeyWrapMetadataType; set => _cosmosDBKeyWrapMetadataType.Assign(value); }
    private readonly BicepValue<string> _cosmosDBKeyWrapMetadataType;

    /// <summary>
    /// Reference / link to the KeyEncryptionKey.
    /// </summary>
    public BicepValue<string> Value { get => _value; set => _value.Assign(value); }
    private readonly BicepValue<string> _value;

    /// <summary>
    /// Algorithm used in wrapping and unwrapping of the data encryption key.
    /// </summary>
    public BicepValue<string> Algorithm { get => _algorithm; set => _algorithm.Assign(value); }
    private readonly BicepValue<string> _algorithm;

    /// <summary>
    /// Creates a new CosmosDBKeyWrapMetadata.
    /// </summary>
    public CosmosDBKeyWrapMetadata()
    {
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"]);
        _cosmosDBKeyWrapMetadataType = BicepValue<string>.DefineProperty(this, "CosmosDBKeyWrapMetadataType", ["type"]);
        _value = BicepValue<string>.DefineProperty(this, "Value", ["value"]);
        _algorithm = BicepValue<string>.DefineProperty(this, "Algorithm", ["algorithm"]);
    }
}
