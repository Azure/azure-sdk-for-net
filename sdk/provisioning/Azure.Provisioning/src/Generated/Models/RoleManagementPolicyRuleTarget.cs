// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.Authorization;

/// <summary>
/// The role management policy rule target.
/// </summary>
public partial class RoleManagementPolicyRuleTarget : ProvisioningConstruct
{
    /// <summary>
    /// The caller of the setting.
    /// </summary>
    public BicepValue<string> Caller { get => _caller; set => _caller.Assign(value); }
    private readonly BicepValue<string> _caller;

    /// <summary>
    /// The type of operation.
    /// </summary>
    public BicepList<string> Operations { get => _operations; set => _operations.Assign(value); }
    private readonly BicepList<string> _operations;

    /// <summary>
    /// The assignment level to which rule is applied.
    /// </summary>
    public BicepValue<RoleManagementAssignmentLevel> Level { get => _level; set => _level.Assign(value); }
    private readonly BicepValue<RoleManagementAssignmentLevel> _level;

    /// <summary>
    /// The list of target objects.
    /// </summary>
    public BicepList<string> TargetObjects { get => _targetObjects; set => _targetObjects.Assign(value); }
    private readonly BicepList<string> _targetObjects;

    /// <summary>
    /// The list of inheritable settings.
    /// </summary>
    public BicepList<string> InheritableSettings { get => _inheritableSettings; set => _inheritableSettings.Assign(value); }
    private readonly BicepList<string> _inheritableSettings;

    /// <summary>
    /// The list of enforced settings.
    /// </summary>
    public BicepList<string> EnforcedSettings { get => _enforcedSettings; set => _enforcedSettings.Assign(value); }
    private readonly BicepList<string> _enforcedSettings;

    /// <summary>
    /// Creates a new RoleManagementPolicyRuleTarget.
    /// </summary>
    public RoleManagementPolicyRuleTarget()
    {
        _caller = BicepValue<string>.DefineProperty(this, "Caller", ["caller"]);
        _operations = BicepList<string>.DefineProperty(this, "Operations", ["operations"]);
        _level = BicepValue<RoleManagementAssignmentLevel>.DefineProperty(this, "Level", ["level"]);
        _targetObjects = BicepList<string>.DefineProperty(this, "TargetObjects", ["targetObjects"]);
        _inheritableSettings = BicepList<string>.DefineProperty(this, "InheritableSettings", ["inheritableSettings"]);
        _enforcedSettings = BicepList<string>.DefineProperty(this, "EnforcedSettings", ["enforcedSettings"]);
    }
}
