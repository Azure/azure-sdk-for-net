// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.Authorization;

/// <summary>
/// The role management policy expiration rule.
/// </summary>
public partial class RoleManagementPolicyExpirationRule : RoleManagementPolicyRule
{
    /// <summary>
    /// The value indicating whether expiration is required.
    /// </summary>
    public BicepValue<bool> IsExpirationRequired { get => _isExpirationRequired; set => _isExpirationRequired.Assign(value); }
    private readonly BicepValue<bool> _isExpirationRequired;

    /// <summary>
    /// The maximum duration of expiration in timespan.
    /// </summary>
    public BicepValue<TimeSpan> MaximumDuration { get => _maximumDuration; set => _maximumDuration.Assign(value); }
    private readonly BicepValue<TimeSpan> _maximumDuration;

    /// <summary>
    /// Creates a new RoleManagementPolicyExpirationRule.
    /// </summary>
    public RoleManagementPolicyExpirationRule() : base()
    {
        BicepValue<string>.DefineProperty(this, "ruleType", ["ruleType"], defaultValue: "RoleManagementPolicyExpirationRule");
        _isExpirationRequired = BicepValue<bool>.DefineProperty(this, "IsExpirationRequired", ["isExpirationRequired"]);
        _maximumDuration = BicepValue<TimeSpan>.DefineProperty(this, "MaximumDuration", ["maximumDuration"]);
    }
}
