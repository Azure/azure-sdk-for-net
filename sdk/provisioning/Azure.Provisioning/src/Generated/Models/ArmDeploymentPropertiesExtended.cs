// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure;
using Azure.Core;
using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.Resources;

/// <summary>
/// Deployment properties with additional details.
/// </summary>
public partial class ArmDeploymentPropertiesExtended : ProvisioningConstruct
{
    /// <summary>
    /// Denotes the state of provisioning.
    /// </summary>
    public BicepValue<ResourcesProvisioningState> ProvisioningState { get => _provisioningState; }
    private readonly BicepValue<ResourcesProvisioningState> _provisioningState;

    /// <summary>
    /// The correlation ID of the deployment.
    /// </summary>
    public BicepValue<string> CorrelationId { get => _correlationId; }
    private readonly BicepValue<string> _correlationId;

    /// <summary>
    /// The timestamp of the template deployment.
    /// </summary>
    public BicepValue<DateTimeOffset> Timestamp { get => _timestamp; }
    private readonly BicepValue<DateTimeOffset> _timestamp;

    /// <summary>
    /// The duration of the template deployment.
    /// </summary>
    public BicepValue<TimeSpan> Duration { get => _duration; }
    private readonly BicepValue<TimeSpan> _duration;

    /// <summary>
    /// Key/value pairs that represent deployment output.
    /// To assign an object to this property use
    /// System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions).
    /// To assign an already formatted json string to
    /// this property use System.BinaryData.FromString(System.String).
    /// Examples:
    /// BinaryData.FromObjectAsJson(&quot;foo&quot;)Creates a
    /// payload of
    /// &quot;foo&quot;.BinaryData.FromString(&quot;\&quot;foo\&quot;&quot;)Creates
    /// a payload of &quot;foo&quot;.BinaryData.FromObjectAsJson(new { key =
    /// &quot;value&quot; })Creates a payload of { &quot;key&quot;:
    /// &quot;value&quot; }.BinaryData.FromString(&quot;{\&quot;key\&quot;:
    /// \&quot;value\&quot;}&quot;)Creates a payload of { &quot;key&quot;:
    /// &quot;value&quot; }.
    /// </summary>
    public BicepValue<BinaryData> Outputs { get => _outputs; }
    private readonly BicepValue<BinaryData> _outputs;

    /// <summary>
    /// The list of resource providers needed for the deployment.
    /// </summary>
    public BicepList<ResourceProviderData> Providers { get => _providers; }
    private readonly BicepList<ResourceProviderData> _providers;

    /// <summary>
    /// The list of deployment dependencies.
    /// </summary>
    public BicepList<ArmDependency> Dependencies { get => _dependencies; }
    private readonly BicepList<ArmDependency> _dependencies;

    /// <summary>
    /// The URI referencing the template.
    /// </summary>
    public BicepValue<ArmDeploymentTemplateLink> TemplateLink { get => _templateLink; }
    private readonly BicepValue<ArmDeploymentTemplateLink> _templateLink;

    /// <summary>
    /// Deployment parameters.                          To assign an object to
    /// this property use
    /// System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions).
    /// To assign an already formatted json string to
    /// this property use System.BinaryData.FromString(System.String).
    /// Examples:
    /// BinaryData.FromObjectAsJson(&quot;foo&quot;)Creates a
    /// payload of
    /// &quot;foo&quot;.BinaryData.FromString(&quot;\&quot;foo\&quot;&quot;)Creates
    /// a payload of &quot;foo&quot;.BinaryData.FromObjectAsJson(new { key =
    /// &quot;value&quot; })Creates a payload of { &quot;key&quot;:
    /// &quot;value&quot; }.BinaryData.FromString(&quot;{\&quot;key\&quot;:
    /// \&quot;value\&quot;}&quot;)Creates a payload of { &quot;key&quot;:
    /// &quot;value&quot; }.
    /// </summary>
    public BicepValue<BinaryData> Parameters { get => _parameters; }
    private readonly BicepValue<BinaryData> _parameters;

    /// <summary>
    /// The URI referencing the parameters.
    /// </summary>
    public BicepValue<ArmDeploymentParametersLink> ParametersLink { get => _parametersLink; }
    private readonly BicepValue<ArmDeploymentParametersLink> _parametersLink;

    /// <summary>
    /// The deployment mode. Possible values are Incremental and Complete.
    /// </summary>
    public BicepValue<ArmDeploymentMode> Mode { get => _mode; }
    private readonly BicepValue<ArmDeploymentMode> _mode;

    /// <summary>
    /// The deployment on error behavior.
    /// </summary>
    public BicepValue<ErrorDeploymentExtended> ErrorDeployment { get => _errorDeployment; }
    private readonly BicepValue<ErrorDeploymentExtended> _errorDeployment;

    /// <summary>
    /// The hash produced for the template.
    /// </summary>
    public BicepValue<string> TemplateHash { get => _templateHash; }
    private readonly BicepValue<string> _templateHash;

    /// <summary>
    /// Array of provisioned resources.
    /// </summary>
    public BicepList<SubResource> OutputResources { get => _outputResources; }
    private readonly BicepList<SubResource> _outputResources;

    /// <summary>
    /// Array of validated resources.
    /// </summary>
    public BicepList<SubResource> ValidatedResources { get => _validatedResources; }
    private readonly BicepList<SubResource> _validatedResources;

    /// <summary>
    /// The deployment error.
    /// </summary>
    public BicepValue<ResponseError> Error { get => _error; }
    private readonly BicepValue<ResponseError> _error;

    /// <summary>
    /// Creates a new ArmDeploymentPropertiesExtended.
    /// </summary>
    public ArmDeploymentPropertiesExtended()
    {
        _provisioningState = BicepValue<ResourcesProvisioningState>.DefineProperty(this, "ProvisioningState", ["provisioningState"], isOutput: true);
        _correlationId = BicepValue<string>.DefineProperty(this, "CorrelationId", ["correlationId"], isOutput: true);
        _timestamp = BicepValue<DateTimeOffset>.DefineProperty(this, "Timestamp", ["timestamp"], isOutput: true);
        _duration = BicepValue<TimeSpan>.DefineProperty(this, "Duration", ["duration"], isOutput: true);
        _outputs = BicepValue<BinaryData>.DefineProperty(this, "Outputs", ["outputs"], isOutput: true);
        _providers = BicepList<ResourceProviderData>.DefineProperty(this, "Providers", ["providers"], isOutput: true);
        _dependencies = BicepList<ArmDependency>.DefineProperty(this, "Dependencies", ["dependencies"], isOutput: true);
        _templateLink = BicepValue<ArmDeploymentTemplateLink>.DefineProperty(this, "TemplateLink", ["templateLink"], isOutput: true);
        _parameters = BicepValue<BinaryData>.DefineProperty(this, "Parameters", ["parameters"], isOutput: true);
        _parametersLink = BicepValue<ArmDeploymentParametersLink>.DefineProperty(this, "ParametersLink", ["parametersLink"], isOutput: true);
        _mode = BicepValue<ArmDeploymentMode>.DefineProperty(this, "Mode", ["mode"], isOutput: true);
        _errorDeployment = BicepValue<ErrorDeploymentExtended>.DefineProperty(this, "ErrorDeployment", ["onErrorDeployment"], isOutput: true);
        _templateHash = BicepValue<string>.DefineProperty(this, "TemplateHash", ["templateHash"], isOutput: true);
        _outputResources = BicepList<SubResource>.DefineProperty(this, "OutputResources", ["outputResources"], isOutput: true);
        _validatedResources = BicepList<SubResource>.DefineProperty(this, "ValidatedResources", ["validatedResources"], isOutput: true);
        _error = BicepValue<ResponseError>.DefineProperty(this, "Error", ["error"], isOutput: true);
    }
}
