// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.Authorization;

/// <summary>
/// The approval stage.
/// </summary>
public partial class RoleManagementApprovalStage : ProvisioningConstruct
{
    /// <summary>
    /// The time in days when approval request would be timed out.
    /// </summary>
    public BicepValue<int> ApprovalStageTimeOutInDays { get => _approvalStageTimeOutInDays; set => _approvalStageTimeOutInDays.Assign(value); }
    private readonly BicepValue<int> _approvalStageTimeOutInDays;

    /// <summary>
    /// Determines whether approver need to provide justification for his
    /// decision.
    /// </summary>
    public BicepValue<bool> IsApproverJustificationRequired { get => _isApproverJustificationRequired; set => _isApproverJustificationRequired.Assign(value); }
    private readonly BicepValue<bool> _isApproverJustificationRequired;

    /// <summary>
    /// The time in minutes when the approval request would be escalated if the
    /// primary approver does not approve.
    /// </summary>
    public BicepValue<int> EscalationTimeInMinutes { get => _escalationTimeInMinutes; set => _escalationTimeInMinutes.Assign(value); }
    private readonly BicepValue<int> _escalationTimeInMinutes;

    /// <summary>
    /// The primary approver of the request.
    /// </summary>
    public BicepList<RoleManagementUserInfo> PrimaryApprovers { get => _primaryApprovers; set => _primaryApprovers.Assign(value); }
    private readonly BicepList<RoleManagementUserInfo> _primaryApprovers;

    /// <summary>
    /// The value determine whether escalation feature is enabled.
    /// </summary>
    public BicepValue<bool> IsEscalationEnabled { get => _isEscalationEnabled; set => _isEscalationEnabled.Assign(value); }
    private readonly BicepValue<bool> _isEscalationEnabled;

    /// <summary>
    /// The escalation approver of the request.
    /// </summary>
    public BicepList<RoleManagementUserInfo> EscalationApprovers { get => _escalationApprovers; set => _escalationApprovers.Assign(value); }
    private readonly BicepList<RoleManagementUserInfo> _escalationApprovers;

    /// <summary>
    /// Creates a new RoleManagementApprovalStage.
    /// </summary>
    public RoleManagementApprovalStage()
    {
        _approvalStageTimeOutInDays = BicepValue<int>.DefineProperty(this, "ApprovalStageTimeOutInDays", ["approvalStageTimeOutInDays"]);
        _isApproverJustificationRequired = BicepValue<bool>.DefineProperty(this, "IsApproverJustificationRequired", ["isApproverJustificationRequired"]);
        _escalationTimeInMinutes = BicepValue<int>.DefineProperty(this, "EscalationTimeInMinutes", ["escalationTimeInMinutes"]);
        _primaryApprovers = BicepList<RoleManagementUserInfo>.DefineProperty(this, "PrimaryApprovers", ["primaryApprovers"]);
        _isEscalationEnabled = BicepValue<bool>.DefineProperty(this, "IsEscalationEnabled", ["isEscalationEnabled"]);
        _escalationApprovers = BicepList<RoleManagementUserInfo>.DefineProperty(this, "EscalationApprovers", ["escalationApprovers"]);
    }
}
