// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.Resources;

/// <summary>
/// The resource Id model.
/// </summary>
public partial class ArmResourceReference : ProvisionableConstruct
{
    /// <summary>
    /// The fully qualified Azure resource ID.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id 
    {
        get { Initialize(); return _id!; }
    }
    private BicepValue<ResourceIdentifier>? _id;

    /// <summary>
    /// The extension the resource was deployed with.
    /// </summary>
    public ArmDeploymentExtensionDefinition Extension 
    {
        get { Initialize(); return _extension!; }
    }
    private ArmDeploymentExtensionDefinition? _extension;

    /// <summary>
    /// The resource type.
    /// </summary>
    public BicepValue<string> ResourceType 
    {
        get { Initialize(); return _resourceType!; }
    }
    private BicepValue<string>? _resourceType;

    /// <summary>
    /// The extensible resource identifiers.                          To assign
    /// an object to this property use
    /// System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions).
    /// To assign an already formatted json string to
    /// this property use System.BinaryData.FromString(System.String).
    /// Examples:
    /// BinaryData.FromObjectAsJson(&quot;foo&quot;)Creates a
    /// payload of
    /// &quot;foo&quot;.BinaryData.FromString(&quot;\&quot;foo\&quot;&quot;)Creates
    /// a payload of &quot;foo&quot;.BinaryData.FromObjectAsJson(new { key =
    /// &quot;value&quot; })Creates a payload of { &quot;key&quot;:
    /// &quot;value&quot; }.BinaryData.FromString(&quot;{\&quot;key\&quot;:
    /// \&quot;value\&quot;}&quot;)Creates a payload of { &quot;key&quot;:
    /// &quot;value&quot; }.
    /// </summary>
    public BicepValue<BinaryData> Identifiers 
    {
        get { Initialize(); return _identifiers!; }
    }
    private BicepValue<BinaryData>? _identifiers;

    /// <summary>
    /// The API version the resource was deployed with.
    /// </summary>
    public BicepValue<string> ApiVersion 
    {
        get { Initialize(); return _apiVersion!; }
    }
    private BicepValue<string>? _apiVersion;

    /// <summary>
    /// Creates a new ArmResourceReference.
    /// </summary>
    public ArmResourceReference()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of ArmResourceReference.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _id = DefineProperty<ResourceIdentifier>("Id", ["id"], isOutput: true);
        _extension = DefineModelProperty<ArmDeploymentExtensionDefinition>("Extension", ["extension"], isOutput: true);
        _resourceType = DefineProperty<string>("ResourceType", ["resourceType"], isOutput: true);
        _identifiers = DefineProperty<BinaryData>("Identifiers", ["identifiers"], isOutput: true);
        _apiVersion = DefineProperty<string>("ApiVersion", ["apiVersion"], isOutput: true);
    }
}
