// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Core;
using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.Resources;

/// <summary>
/// ProviderResourceType.
/// </summary>
public partial class ProviderResourceType : ProvisioningConstruct
{
    /// <summary>
    /// Gets the ResourceType.
    /// </summary>
    public BicepValue<string> ResourceType { get => _resourceType; }
    private readonly BicepValue<string> _resourceType;

    /// <summary>
    /// Gets the Locations.
    /// </summary>
    public BicepList<string> Locations { get => _locations; }
    private readonly BicepList<string> _locations;

    /// <summary>
    /// Gets the LocationMappings.
    /// </summary>
    public BicepList<ProviderExtendedLocation> LocationMappings { get => _locationMappings; }
    private readonly BicepList<ProviderExtendedLocation> _locationMappings;

    /// <summary>
    /// Gets the Aliases.
    /// </summary>
    public BicepList<ResourceTypeAlias> Aliases { get => _aliases; }
    private readonly BicepList<ResourceTypeAlias> _aliases;

    /// <summary>
    /// Gets the ApiVersions.
    /// </summary>
    public BicepList<string> ApiVersions { get => _apiVersions; }
    private readonly BicepList<string> _apiVersions;

    /// <summary>
    /// Gets the DefaultApiVersion.
    /// </summary>
    public BicepValue<string> DefaultApiVersion { get => _defaultApiVersion; }
    private readonly BicepValue<string> _defaultApiVersion;

    /// <summary>
    /// Gets the ZoneMappings.
    /// </summary>
    public BicepList<ZoneMapping> ZoneMappings { get => _zoneMappings; }
    private readonly BicepList<ZoneMapping> _zoneMappings;

    /// <summary>
    /// Gets the ApiProfiles.
    /// </summary>
    public BicepList<ApiProfile> ApiProfiles { get => _apiProfiles; }
    private readonly BicepList<ApiProfile> _apiProfiles;

    /// <summary>
    /// Gets the Capabilities.
    /// </summary>
    public BicepValue<string> Capabilities { get => _capabilities; }
    private readonly BicepValue<string> _capabilities;

    /// <summary>
    /// Gets the Properties.
    /// </summary>
    public BicepDictionary<string> Properties { get => _properties; }
    private readonly BicepDictionary<string> _properties;

    /// <summary>
    /// Creates a new ProviderResourceType.
    /// </summary>
    public ProviderResourceType()
    {
        _resourceType = BicepValue<string>.DefineProperty(this, "ResourceType", ["resourceType"], isOutput: true);
        _locations = BicepList<string>.DefineProperty(this, "Locations", ["locations"], isOutput: true);
        _locationMappings = BicepList<ProviderExtendedLocation>.DefineProperty(this, "LocationMappings", ["locationMappings"], isOutput: true);
        _aliases = BicepList<ResourceTypeAlias>.DefineProperty(this, "Aliases", ["aliases"], isOutput: true);
        _apiVersions = BicepList<string>.DefineProperty(this, "ApiVersions", ["apiVersions"], isOutput: true);
        _defaultApiVersion = BicepValue<string>.DefineProperty(this, "DefaultApiVersion", ["defaultApiVersion"], isOutput: true);
        _zoneMappings = BicepList<ZoneMapping>.DefineProperty(this, "ZoneMappings", ["zoneMappings"], isOutput: true);
        _apiProfiles = BicepList<ApiProfile>.DefineProperty(this, "ApiProfiles", ["apiProfiles"], isOutput: true);
        _capabilities = BicepValue<string>.DefineProperty(this, "Capabilities", ["capabilities"], isOutput: true);
        _properties = BicepDictionary<string>.DefineProperty(this, "Properties", ["properties"], isOutput: true);
    }
}
