// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Core;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.Authorization;

/// <summary>
/// The RoleManagementExpandedProperties.
/// </summary>
public partial class RoleManagementExpandedProperties : ProvisioningConstruct
{
    /// <summary>
    /// Id of the principal.
    /// </summary>
    public BicepValue<Guid> PrincipalId { get => _principalId; }
    private readonly BicepValue<Guid> _principalId;

    /// <summary>
    /// Display name of the principal.
    /// </summary>
    public BicepValue<string> PrincipalDisplayName { get => _principalDisplayName; }
    private readonly BicepValue<string> _principalDisplayName;

    /// <summary>
    /// Email id of the principal.
    /// </summary>
    public BicepValue<string> Email { get => _email; }
    private readonly BicepValue<string> _email;

    /// <summary>
    /// Type of the principal.
    /// </summary>
    public BicepValue<RoleManagementPrincipalType> PrincipalType { get => _principalType; }
    private readonly BicepValue<RoleManagementPrincipalType> _principalType;

    /// <summary>
    /// Id of the role definition.
    /// </summary>
    public BicepValue<ResourceIdentifier> RoleDefinitionId { get => _roleDefinitionId; }
    private readonly BicepValue<ResourceIdentifier> _roleDefinitionId;

    /// <summary>
    /// Display name of the role definition.
    /// </summary>
    public BicepValue<string> RoleDefinitionDisplayName { get => _roleDefinitionDisplayName; }
    private readonly BicepValue<string> _roleDefinitionDisplayName;

    /// <summary>
    /// The role type.
    /// </summary>
    public BicepValue<AuthorizationRoleType> RoleType { get => _roleType; }
    private readonly BicepValue<AuthorizationRoleType> _roleType;

    /// <summary>
    /// Scope id of the resource.
    /// </summary>
    public BicepValue<ResourceIdentifier> ScopeId { get => _scopeId; }
    private readonly BicepValue<ResourceIdentifier> _scopeId;

    /// <summary>
    /// Display name of the resource.
    /// </summary>
    public BicepValue<string> ScopeDisplayName { get => _scopeDisplayName; }
    private readonly BicepValue<string> _scopeDisplayName;

    /// <summary>
    /// Type of the scope.
    /// </summary>
    public BicepValue<RoleManagementScopeType> ScopeType { get => _scopeType; }
    private readonly BicepValue<RoleManagementScopeType> _scopeType;

    /// <summary>
    /// Creates a new RoleManagementExpandedProperties.
    /// </summary>
    public RoleManagementExpandedProperties()
    {
        _principalId = BicepValue<Guid>.DefineProperty(this, "PrincipalId", ["principal", "id"], isOutput: true);
        _principalDisplayName = BicepValue<string>.DefineProperty(this, "PrincipalDisplayName", ["principal", "displayName"], isOutput: true);
        _email = BicepValue<string>.DefineProperty(this, "Email", ["principal", "email"], isOutput: true);
        _principalType = BicepValue<RoleManagementPrincipalType>.DefineProperty(this, "PrincipalType", ["principal", "type"], isOutput: true);
        _roleDefinitionId = BicepValue<ResourceIdentifier>.DefineProperty(this, "RoleDefinitionId", ["roleDefinition", "id"], isOutput: true);
        _roleDefinitionDisplayName = BicepValue<string>.DefineProperty(this, "RoleDefinitionDisplayName", ["roleDefinition", "displayName"], isOutput: true);
        _roleType = BicepValue<AuthorizationRoleType>.DefineProperty(this, "RoleType", ["roleDefinition", "type"], isOutput: true);
        _scopeId = BicepValue<ResourceIdentifier>.DefineProperty(this, "ScopeId", ["scope", "id"], isOutput: true);
        _scopeDisplayName = BicepValue<string>.DefineProperty(this, "ScopeDisplayName", ["scope", "displayName"], isOutput: true);
        _scopeType = BicepValue<RoleManagementScopeType>.DefineProperty(this, "ScopeType", ["scope", "type"], isOutput: true);
    }
}
