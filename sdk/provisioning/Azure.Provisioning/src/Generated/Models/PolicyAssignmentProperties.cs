// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Core;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;

namespace Azure.Provisioning.Authorization;

/// <summary>
/// Expanded info of resource scope, role definition and policy.
/// </summary>
public partial class PolicyAssignmentProperties : ProvisioningConstruct
{
    /// <summary>
    /// Id of the policy.
    /// </summary>
    public BicepValue<ResourceIdentifier> PolicyId { get => _policyId; }
    private readonly BicepValue<ResourceIdentifier> _policyId;

    /// <summary>
    /// The name of the entity last modified it.
    /// </summary>
    public BicepValue<RoleManagementPrincipal> LastModifiedBy { get => _lastModifiedBy; }
    private readonly BicepValue<RoleManagementPrincipal> _lastModifiedBy;

    /// <summary>
    /// The last modified date time.
    /// </summary>
    public BicepValue<DateTimeOffset> LastModifiedOn { get => _lastModifiedOn; }
    private readonly BicepValue<DateTimeOffset> _lastModifiedOn;

    /// <summary>
    /// Id of the role definition.
    /// </summary>
    public BicepValue<ResourceIdentifier> RoleDefinitionId { get => _roleDefinitionId; }
    private readonly BicepValue<ResourceIdentifier> _roleDefinitionId;

    /// <summary>
    /// Display name of the role definition.
    /// </summary>
    public BicepValue<string> RoleDefinitionDisplayName { get => _roleDefinitionDisplayName; }
    private readonly BicepValue<string> _roleDefinitionDisplayName;

    /// <summary>
    /// The role type.
    /// </summary>
    public BicepValue<AuthorizationRoleType> RoleType { get => _roleType; }
    private readonly BicepValue<AuthorizationRoleType> _roleType;

    /// <summary>
    /// Scope id of the resource.
    /// </summary>
    public BicepValue<ResourceIdentifier> ScopeId { get => _scopeId; }
    private readonly BicepValue<ResourceIdentifier> _scopeId;

    /// <summary>
    /// Display name of the resource.
    /// </summary>
    public BicepValue<string> ScopeDisplayName { get => _scopeDisplayName; }
    private readonly BicepValue<string> _scopeDisplayName;

    /// <summary>
    /// Type of the scope.
    /// </summary>
    public BicepValue<RoleManagementScopeType> ScopeType { get => _scopeType; }
    private readonly BicepValue<RoleManagementScopeType> _scopeType;

    /// <summary>
    /// Gets the Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id { get => _id; }
    private readonly BicepValue<ResourceIdentifier> _id;

    /// <summary>
    /// Gets the Name.
    /// </summary>
    public BicepValue<string> Name { get => _name; }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// Gets the SystemData.
    /// </summary>
    public BicepValue<SystemData> SystemData { get => _systemData; }
    private readonly BicepValue<SystemData> _systemData;

    /// <summary>
    /// Creates a new PolicyAssignmentProperties.
    /// </summary>
    public PolicyAssignmentProperties()
    {
        _policyId = BicepValue<ResourceIdentifier>.DefineProperty(this, "PolicyId", ["policy", "id"], isOutput: true);
        _lastModifiedBy = BicepValue<RoleManagementPrincipal>.DefineProperty(this, "LastModifiedBy", ["policy", "lastModifiedBy"], isOutput: true);
        _lastModifiedOn = BicepValue<DateTimeOffset>.DefineProperty(this, "LastModifiedOn", ["policy", "lastModifiedDateTime"], isOutput: true);
        _roleDefinitionId = BicepValue<ResourceIdentifier>.DefineProperty(this, "RoleDefinitionId", ["roleDefinition", "id"], isOutput: true);
        _roleDefinitionDisplayName = BicepValue<string>.DefineProperty(this, "RoleDefinitionDisplayName", ["roleDefinition", "displayName"], isOutput: true);
        _roleType = BicepValue<AuthorizationRoleType>.DefineProperty(this, "RoleType", ["roleDefinition", "type"], isOutput: true);
        _scopeId = BicepValue<ResourceIdentifier>.DefineProperty(this, "ScopeId", ["scope", "id"], isOutput: true);
        _scopeDisplayName = BicepValue<string>.DefineProperty(this, "ScopeDisplayName", ["scope", "displayName"], isOutput: true);
        _scopeType = BicepValue<RoleManagementScopeType>.DefineProperty(this, "ScopeType", ["scope", "type"], isOutput: true);
        _id = BicepValue<ResourceIdentifier>.DefineProperty(this, "Id", ["id"], isOutput: true);
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"], isOutput: true);
        _systemData = BicepValue<SystemData>.DefineProperty(this, "SystemData", ["systemData"], isOutput: true);
    }
}
