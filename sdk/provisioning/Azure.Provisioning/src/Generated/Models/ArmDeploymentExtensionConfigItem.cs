// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.Resources;

/// <summary>
/// The ArmDeploymentExtensionConfigItem.
/// </summary>
public partial class ArmDeploymentExtensionConfigItem : ProvisionableConstruct
{
    /// <summary>
    /// The value type of the extension config property.
    /// </summary>
    public BicepValue<ExtensionConfigPropertyType> ExtensionConfigPropertyType 
    {
        get { Initialize(); return _extensionConfigPropertyType!; }
    }
    private BicepValue<ExtensionConfigPropertyType>? _extensionConfigPropertyType;

    /// <summary>
    /// The value of the extension config property.                          To
    /// assign an object to this property use
    /// System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions).
    /// To assign an already formatted json string to
    /// this property use System.BinaryData.FromString(System.String).
    /// Examples:
    /// BinaryData.FromObjectAsJson(&quot;foo&quot;)Creates a
    /// payload of
    /// &quot;foo&quot;.BinaryData.FromString(&quot;\&quot;foo\&quot;&quot;)Creates
    /// a payload of &quot;foo&quot;.BinaryData.FromObjectAsJson(new { key =
    /// &quot;value&quot; })Creates a payload of { &quot;key&quot;:
    /// &quot;value&quot; }.BinaryData.FromString(&quot;{\&quot;key\&quot;:
    /// \&quot;value\&quot;}&quot;)Creates a payload of { &quot;key&quot;:
    /// &quot;value&quot; }.
    /// </summary>
    public BicepValue<BinaryData> Value 
    {
        get { Initialize(); return _value!; }
        set { Initialize(); _value!.Assign(value); }
    }
    private BicepValue<BinaryData>? _value;

    /// <summary>
    /// The Azure Key Vault reference used to retrieve the secret value of the
    /// extension config property.
    /// </summary>
    public KeyVaultParameterReference KeyVaultReference 
    {
        get { Initialize(); return _keyVaultReference!; }
        set { Initialize(); AssignOrReplace(ref _keyVaultReference, value); }
    }
    private KeyVaultParameterReference? _keyVaultReference;

    /// <summary>
    /// Creates a new ArmDeploymentExtensionConfigItem.
    /// </summary>
    public ArmDeploymentExtensionConfigItem()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of
    /// ArmDeploymentExtensionConfigItem.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _extensionConfigPropertyType = DefineProperty<ExtensionConfigPropertyType>("ExtensionConfigPropertyType", ["type"], isOutput: true);
        _value = DefineProperty<BinaryData>("Value", ["value"]);
        _keyVaultReference = DefineModelProperty<KeyVaultParameterReference>("KeyVaultReference", ["keyVaultReference"]);
    }
}
