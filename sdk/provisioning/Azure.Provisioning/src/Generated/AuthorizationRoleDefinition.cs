// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;

namespace Azure.Provisioning.Authorization;

/// <summary>
/// AuthorizationRoleDefinition.
/// </summary>
public partial class AuthorizationRoleDefinition : Resource
{
    /// <summary>
    /// Gets the Name.
    /// </summary>
    public BicepValue<string> Name { get => _name; }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// Role definition assignable scopes.
    /// </summary>
    public BicepList<string> AssignableScopes { get => _assignableScopes; set => _assignableScopes.Assign(value); }
    private readonly BicepList<string> _assignableScopes;

    /// <summary>
    /// The role definition description.
    /// </summary>
    public BicepValue<string> Description { get => _description; set => _description.Assign(value); }
    private readonly BicepValue<string> _description;

    /// <summary>
    /// Role definition permissions.
    /// </summary>
    public BicepList<RoleDefinitionPermission> Permissions { get => _permissions; set => _permissions.Assign(value); }
    private readonly BicepList<RoleDefinitionPermission> _permissions;

    /// <summary>
    /// The role name.
    /// </summary>
    public BicepValue<string> RoleName { get => _roleName; set => _roleName.Assign(value); }
    private readonly BicepValue<string> _roleName;

    /// <summary>
    /// The role type.
    /// </summary>
    public BicepValue<AuthorizationRoleType> RoleType { get => _roleType; set => _roleType.Assign(value); }
    private readonly BicepValue<AuthorizationRoleType> _roleType;

    /// <summary>
    /// Gets the Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id { get => _id; }
    private readonly BicepValue<ResourceIdentifier> _id;

    /// <summary>
    /// Gets the SystemData.
    /// </summary>
    public BicepValue<SystemData> SystemData { get => _systemData; }
    private readonly BicepValue<SystemData> _systemData;

    /// <summary>
    /// Get the default value for the Name property.
    /// </summary>
    private partial BicepValue<string> GetNameDefaultValue();

    /// <summary>
    /// Creates a new AuthorizationRoleDefinition.
    /// </summary>
    /// <param name="resourceName">Name of the AuthorizationRoleDefinition.</param>
    /// <param name="resourceVersion">Version of the AuthorizationRoleDefinition.</param>
    public AuthorizationRoleDefinition(string resourceName, string? resourceVersion = default)
        : base(resourceName, "Microsoft.Authorization/roleDefinitions", resourceVersion ?? "2022-04-01")
    {
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"], isOutput: true, defaultValue: GetNameDefaultValue());
        _assignableScopes = BicepList<string>.DefineProperty(this, "AssignableScopes", ["properties", "assignableScopes"]);
        _description = BicepValue<string>.DefineProperty(this, "Description", ["properties", "description"]);
        _permissions = BicepList<RoleDefinitionPermission>.DefineProperty(this, "Permissions", ["properties", "permissions"]);
        _roleName = BicepValue<string>.DefineProperty(this, "RoleName", ["properties", "roleName"]);
        _roleType = BicepValue<AuthorizationRoleType>.DefineProperty(this, "RoleType", ["properties", "type"]);
        _id = BicepValue<ResourceIdentifier>.DefineProperty(this, "Id", ["id"], isOutput: true);
        _systemData = BicepValue<SystemData>.DefineProperty(this, "SystemData", ["systemData"], isOutput: true);
    }

    /// <summary>
    /// Supported AuthorizationRoleDefinition resource versions.
    /// </summary>
    public static class ResourceVersions
    {
        /// <summary>
        /// 2023-07-01-preview.
        /// </summary>
        public static readonly string V2023_07_01_preview = "2023-07-01-preview";

        /// <summary>
        /// 2022-04-01.
        /// </summary>
        public static readonly string V2022_04_01 = "2022-04-01";

        /// <summary>
        /// 2018-07-01.
        /// </summary>
        public static readonly string V2018_07_01 = "2018-07-01";

        /// <summary>
        /// 2017-09-01.
        /// </summary>
        public static readonly string V2017_09_01 = "2017-09-01";

        /// <summary>
        /// 2017-05-01.
        /// </summary>
        public static readonly string V2017_05_01 = "2017-05-01";

        /// <summary>
        /// 2016-07-01.
        /// </summary>
        public static readonly string V2016_07_01 = "2016-07-01";

        /// <summary>
        /// 2015-07-01.
        /// </summary>
        public static readonly string V2015_07_01 = "2015-07-01";

        /// <summary>
        /// 2015-06-01.
        /// </summary>
        public static readonly string V2015_06_01 = "2015-06-01";
    }

    /// <summary>
    /// Creates a reference to an existing AuthorizationRoleDefinition.
    /// </summary>
    /// <param name="resourceName">Name of the AuthorizationRoleDefinition.</param>
    /// <param name="resourceVersion">Version of the AuthorizationRoleDefinition.</param>
    /// <returns>The existing AuthorizationRoleDefinition resource.</returns>
    public static AuthorizationRoleDefinition FromExisting(string resourceName, string? resourceVersion = default) =>
        new(resourceName, resourceVersion) { IsExistingResource = true };
}
