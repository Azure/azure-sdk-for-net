// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;

namespace Azure.Provisioning.Authorization;

/// <summary>
/// RoleAssignment.
/// </summary>
public partial class RoleAssignment : Resource
{
    /// <summary>
    /// The name of the role assignment. It can be any valid GUID.
    /// </summary>
    public BicepValue<string> Name { get => _name; set => _name.Assign(value); }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// The principal ID.
    /// </summary>
    public BicepValue<Guid> PrincipalId { get => _principalId; set => _principalId.Assign(value); }
    private readonly BicepValue<Guid> _principalId;

    /// <summary>
    /// The role definition ID.
    /// </summary>
    public BicepValue<ResourceIdentifier> RoleDefinitionId { get => _roleDefinitionId; set => _roleDefinitionId.Assign(value); }
    private readonly BicepValue<ResourceIdentifier> _roleDefinitionId;

    /// <summary>
    /// The conditions on the role assignment. This limits the resources it can
    /// be assigned to. e.g.:
    /// @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName]
    /// StringEqualsIgnoreCase &apos;foo_storage_container&apos;.
    /// </summary>
    public BicepValue<string> Condition { get => _condition; set => _condition.Assign(value); }
    private readonly BicepValue<string> _condition;

    /// <summary>
    /// Version of the condition. Currently the only accepted value is
    /// &apos;2.0&apos;.
    /// </summary>
    public BicepValue<string> ConditionVersion { get => _conditionVersion; set => _conditionVersion.Assign(value); }
    private readonly BicepValue<string> _conditionVersion;

    /// <summary>
    /// Id of the delegated managed identity resource.
    /// </summary>
    public BicepValue<ResourceIdentifier> DelegatedManagedIdentityResourceId { get => _delegatedManagedIdentityResourceId; set => _delegatedManagedIdentityResourceId.Assign(value); }
    private readonly BicepValue<ResourceIdentifier> _delegatedManagedIdentityResourceId;

    /// <summary>
    /// Description of role assignment.
    /// </summary>
    public BicepValue<string> Description { get => _description; set => _description.Assign(value); }
    private readonly BicepValue<string> _description;

    /// <summary>
    /// The principal type of the assigned principal ID.
    /// </summary>
    public BicepValue<RoleManagementPrincipalType> PrincipalType { get => _principalType; set => _principalType.Assign(value); }
    private readonly BicepValue<RoleManagementPrincipalType> _principalType;

    /// <summary>
    /// Id of the user who created the assignment.
    /// </summary>
    public BicepValue<string> CreatedBy { get => _createdBy; }
    private readonly BicepValue<string> _createdBy;

    /// <summary>
    /// Time it was created.
    /// </summary>
    public BicepValue<DateTimeOffset> CreatedOn { get => _createdOn; }
    private readonly BicepValue<DateTimeOffset> _createdOn;

    /// <summary>
    /// Gets the Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id { get => _id; }
    private readonly BicepValue<ResourceIdentifier> _id;

    /// <summary>
    /// The role assignment scope.
    /// </summary>
    public BicepValue<string> Scope { get => _scope; set => _scope.Assign(value); }
    private readonly BicepValue<string> _scope;

    /// <summary>
    /// Gets the SystemData.
    /// </summary>
    public BicepValue<SystemData> SystemData { get => _systemData; }
    private readonly BicepValue<SystemData> _systemData;

    /// <summary>
    /// Id of the user who updated the assignment.
    /// </summary>
    public BicepValue<string> UpdatedBy { get => _updatedBy; }
    private readonly BicepValue<string> _updatedBy;

    /// <summary>
    /// Time it was updated.
    /// </summary>
    public BicepValue<DateTimeOffset> UpdatedOn { get => _updatedOn; }
    private readonly BicepValue<DateTimeOffset> _updatedOn;

    /// <summary>
    /// Get the default value for the Name property.
    /// </summary>
    private partial BicepValue<string> GetNameDefaultValue();

    /// <summary>
    /// Creates a new RoleAssignment.
    /// </summary>
    /// <param name="resourceName">Name of the RoleAssignment.</param>
    /// <param name="resourceVersion">Version of the RoleAssignment.</param>
    public RoleAssignment(string resourceName, string? resourceVersion = default)
        : base(resourceName, "Microsoft.Authorization/roleAssignments", resourceVersion ?? "2022-04-01")
    {
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"], isRequired: true, defaultValue: GetNameDefaultValue());
        _principalId = BicepValue<Guid>.DefineProperty(this, "PrincipalId", ["properties", "principalId"], isRequired: true);
        _roleDefinitionId = BicepValue<ResourceIdentifier>.DefineProperty(this, "RoleDefinitionId", ["properties", "roleDefinitionId"], isRequired: true);
        _condition = BicepValue<string>.DefineProperty(this, "Condition", ["properties", "condition"]);
        _conditionVersion = BicepValue<string>.DefineProperty(this, "ConditionVersion", ["properties", "conditionVersion"]);
        _delegatedManagedIdentityResourceId = BicepValue<ResourceIdentifier>.DefineProperty(this, "DelegatedManagedIdentityResourceId", ["properties", "delegatedManagedIdentityResourceId"]);
        _description = BicepValue<string>.DefineProperty(this, "Description", ["properties", "description"]);
        _principalType = BicepValue<RoleManagementPrincipalType>.DefineProperty(this, "PrincipalType", ["properties", "principalType"]);
        _createdBy = BicepValue<string>.DefineProperty(this, "CreatedBy", ["properties", "createdBy"], isOutput: true);
        _createdOn = BicepValue<DateTimeOffset>.DefineProperty(this, "CreatedOn", ["properties", "createdOn"], isOutput: true);
        _id = BicepValue<ResourceIdentifier>.DefineProperty(this, "Id", ["id"], isOutput: true);
        _scope = BicepValue<string>.DefineProperty(this, "Scope", ["scope"]);
        _systemData = BicepValue<SystemData>.DefineProperty(this, "SystemData", ["systemData"], isOutput: true);
        _updatedBy = BicepValue<string>.DefineProperty(this, "UpdatedBy", ["properties", "updatedBy"], isOutput: true);
        _updatedOn = BicepValue<DateTimeOffset>.DefineProperty(this, "UpdatedOn", ["properties", "updatedOn"], isOutput: true);
    }

    /// <summary>
    /// Supported RoleAssignment resource versions.
    /// </summary>
    public static class ResourceVersions
    {
        /// <summary>
        /// 2022-04-01.
        /// </summary>
        public static readonly string V2022_04_01 = "2022-04-01";

        /// <summary>
        /// 2018-07-01.
        /// </summary>
        public static readonly string V2018_07_01 = "2018-07-01";

        /// <summary>
        /// 2017-09-01.
        /// </summary>
        public static readonly string V2017_09_01 = "2017-09-01";

        /// <summary>
        /// 2017-05-01.
        /// </summary>
        public static readonly string V2017_05_01 = "2017-05-01";

        /// <summary>
        /// 2016-07-01.
        /// </summary>
        public static readonly string V2016_07_01 = "2016-07-01";

        /// <summary>
        /// 2015-07-01.
        /// </summary>
        public static readonly string V2015_07_01 = "2015-07-01";

        /// <summary>
        /// 2015-06-01.
        /// </summary>
        public static readonly string V2015_06_01 = "2015-06-01";
    }

    /// <summary>
    /// Creates a reference to an existing RoleAssignment.
    /// </summary>
    /// <param name="resourceName">Name of the RoleAssignment.</param>
    /// <param name="resourceVersion">Version of the RoleAssignment.</param>
    /// <returns>The existing RoleAssignment resource.</returns>
    public static RoleAssignment FromExisting(string resourceName, string? resourceVersion = default) =>
        new(resourceName, resourceVersion) { IsExistingResource = true };
}
