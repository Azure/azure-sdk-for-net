// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.PostgreSql;

/// <summary>
/// Replica properties of a server.
/// </summary>
public partial class PostgreSqlFlexibleServersReplica : ProvisionableConstruct
{
    /// <summary>
    /// Used to indicate role of the server in replication set.
    /// </summary>
    public BicepValue<PostgreSqlFlexibleServerReplicationRole> Role 
    {
        get { Initialize(); return _role!; }
        set { Initialize(); _role!.Assign(value); }
    }
    private BicepValue<PostgreSqlFlexibleServerReplicationRole>? _role;

    /// <summary>
    /// Replicas allowed for a server.
    /// </summary>
    public BicepValue<int> Capacity 
    {
        get { Initialize(); return _capacity!; }
    }
    private BicepValue<int>? _capacity;

    /// <summary>
    /// Gets the replication state of a replica server. This property is
    /// returned only for replicas api call. Supported values are Active,
    /// Catchup, Provisioning, Updating, Broken, Reconfiguring.
    /// </summary>
    public BicepValue<PostgreSqlFlexibleServersReplicationState> ReplicationState 
    {
        get { Initialize(); return _replicationState!; }
    }
    private BicepValue<PostgreSqlFlexibleServersReplicationState>? _replicationState;

    /// <summary>
    /// Sets the promote mode for a replica server. This is a write only
    /// property.
    /// </summary>
    public BicepValue<ReadReplicaPromoteMode> PromoteMode 
    {
        get { Initialize(); return _promoteMode!; }
        set { Initialize(); _promoteMode!.Assign(value); }
    }
    private BicepValue<ReadReplicaPromoteMode>? _promoteMode;

    /// <summary>
    /// Sets the promote options for a replica server. This is a write only
    /// property.
    /// </summary>
    public BicepValue<ReplicationPromoteOption> PromoteOption 
    {
        get { Initialize(); return _promoteOption!; }
        set { Initialize(); _promoteOption!.Assign(value); }
    }
    private BicepValue<ReplicationPromoteOption>? _promoteOption;

    /// <summary>
    /// Creates a new PostgreSqlFlexibleServersReplica.
    /// </summary>
    public PostgreSqlFlexibleServersReplica()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of
    /// PostgreSqlFlexibleServersReplica.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _role = DefineProperty<PostgreSqlFlexibleServerReplicationRole>("Role", ["role"]);
        _capacity = DefineProperty<int>("Capacity", ["capacity"], isOutput: true);
        _replicationState = DefineProperty<PostgreSqlFlexibleServersReplicationState>("ReplicationState", ["replicationState"], isOutput: true);
        _promoteMode = DefineProperty<ReadReplicaPromoteMode>("PromoteMode", ["promoteMode"]);
        _promoteOption = DefineProperty<ReplicationPromoteOption>("PromoteOption", ["promoteOption"]);
    }
}
