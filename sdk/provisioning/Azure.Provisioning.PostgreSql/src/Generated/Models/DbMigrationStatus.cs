// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.PostgreSql;

/// <summary>
/// Migration status of an individual database.
/// </summary>
public partial class DbMigrationStatus : ProvisionableConstruct
{
    /// <summary>
    /// Number of tables queued for the migration of a DB.
    /// </summary>
    public BicepValue<int> NumFullLoadQueuedTables 
    {
        get { Initialize(); return _numFullLoadQueuedTables!; }
    }
    private BicepValue<int>? _numFullLoadQueuedTables;

    /// <summary>
    /// Number of tables errored out during the migration of a DB.
    /// </summary>
    public BicepValue<int> NumFullLoadErroredTables 
    {
        get { Initialize(); return _numFullLoadErroredTables!; }
    }
    private BicepValue<int>? _numFullLoadErroredTables;

    /// <summary>
    /// Number of tables loading during the migration of a DB.
    /// </summary>
    public BicepValue<int> NumFullLoadLoadingTables 
    {
        get { Initialize(); return _numFullLoadLoadingTables!; }
    }
    private BicepValue<int>? _numFullLoadLoadingTables;

    /// <summary>
    /// Number of tables loaded during the migration of a DB.
    /// </summary>
    public BicepValue<int> NumFullLoadCompletedTables 
    {
        get { Initialize(); return _numFullLoadCompletedTables!; }
    }
    private BicepValue<int>? _numFullLoadCompletedTables;

    /// <summary>
    /// Name of the database.
    /// </summary>
    public BicepValue<string> DatabaseName 
    {
        get { Initialize(); return _databaseName!; }
    }
    private BicepValue<string>? _databaseName;

    /// <summary>
    /// Migration db state of an individual database.
    /// </summary>
    public BicepValue<MigrationDbState> MigrationState 
    {
        get { Initialize(); return _migrationState!; }
    }
    private BicepValue<MigrationDbState>? _migrationState;

    /// <summary>
    /// Migration operation of an individual database.
    /// </summary>
    public BicepValue<string> MigrationOperation 
    {
        get { Initialize(); return _migrationOperation!; }
    }
    private BicepValue<string>? _migrationOperation;

    /// <summary>
    /// Start date-time of a migration state.
    /// </summary>
    public BicepValue<DateTimeOffset> StartedOn 
    {
        get { Initialize(); return _startedOn!; }
    }
    private BicepValue<DateTimeOffset>? _startedOn;

    /// <summary>
    /// End date-time of a migration state.
    /// </summary>
    public BicepValue<DateTimeOffset> EndedOn 
    {
        get { Initialize(); return _endedOn!; }
    }
    private BicepValue<DateTimeOffset>? _endedOn;

    /// <summary>
    /// Number of tables queued for the migration of a DB.
    /// </summary>
    public BicepValue<int> FullLoadQueuedTables 
    {
        get { Initialize(); return _fullLoadQueuedTables!; }
    }
    private BicepValue<int>? _fullLoadQueuedTables;

    /// <summary>
    /// Number of tables errored out during the migration of a DB.
    /// </summary>
    public BicepValue<int> FullLoadErroredTables 
    {
        get { Initialize(); return _fullLoadErroredTables!; }
    }
    private BicepValue<int>? _fullLoadErroredTables;

    /// <summary>
    /// Number of tables loading during the migration of a DB.
    /// </summary>
    public BicepValue<int> FullLoadLoadingTables 
    {
        get { Initialize(); return _fullLoadLoadingTables!; }
    }
    private BicepValue<int>? _fullLoadLoadingTables;

    /// <summary>
    /// Number of tables loaded during the migration of a DB.
    /// </summary>
    public BicepValue<int> FullLoadCompletedTables 
    {
        get { Initialize(); return _fullLoadCompletedTables!; }
    }
    private BicepValue<int>? _fullLoadCompletedTables;

    /// <summary>
    /// CDC update counter.
    /// </summary>
    public BicepValue<int> CdcUpdateCounter 
    {
        get { Initialize(); return _cdcUpdateCounter!; }
    }
    private BicepValue<int>? _cdcUpdateCounter;

    /// <summary>
    /// CDC delete counter.
    /// </summary>
    public BicepValue<int> CdcDeleteCounter 
    {
        get { Initialize(); return _cdcDeleteCounter!; }
    }
    private BicepValue<int>? _cdcDeleteCounter;

    /// <summary>
    /// CDC insert counter.
    /// </summary>
    public BicepValue<int> CdcInsertCounter 
    {
        get { Initialize(); return _cdcInsertCounter!; }
    }
    private BicepValue<int>? _cdcInsertCounter;

    /// <summary>
    /// CDC applied changes counter.
    /// </summary>
    public BicepValue<int> AppliedChanges 
    {
        get { Initialize(); return _appliedChanges!; }
    }
    private BicepValue<int>? _appliedChanges;

    /// <summary>
    /// CDC incoming changes counter.
    /// </summary>
    public BicepValue<int> IncomingChanges 
    {
        get { Initialize(); return _incomingChanges!; }
    }
    private BicepValue<int>? _incomingChanges;

    /// <summary>
    /// Lag in seconds between source and target during online phase.
    /// </summary>
    public BicepValue<int> Latency 
    {
        get { Initialize(); return _latency!; }
    }
    private BicepValue<int>? _latency;

    /// <summary>
    /// Error message, if any, for the migration state.
    /// </summary>
    public BicepValue<string> Message 
    {
        get { Initialize(); return _message!; }
    }
    private BicepValue<string>? _message;

    /// <summary>
    /// Creates a new DbMigrationStatus.
    /// </summary>
    public DbMigrationStatus()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of DbMigrationStatus.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _numFullLoadQueuedTables = DefineProperty<int>("NumFullLoadQueuedTables", ["fullLoadQueuedTables"], isOutput: true);
        _numFullLoadErroredTables = DefineProperty<int>("NumFullLoadErroredTables", ["fullLoadErroredTables"], isOutput: true);
        _numFullLoadLoadingTables = DefineProperty<int>("NumFullLoadLoadingTables", ["fullLoadLoadingTables"], isOutput: true);
        _numFullLoadCompletedTables = DefineProperty<int>("NumFullLoadCompletedTables", ["fullLoadCompletedTables"], isOutput: true);
        _databaseName = DefineProperty<string>("DatabaseName", ["databaseName"], isOutput: true);
        _migrationState = DefineProperty<MigrationDbState>("MigrationState", ["migrationState"], isOutput: true);
        _migrationOperation = DefineProperty<string>("MigrationOperation", ["migrationOperation"], isOutput: true);
        _startedOn = DefineProperty<DateTimeOffset>("StartedOn", ["startedOn"], isOutput: true);
        _endedOn = DefineProperty<DateTimeOffset>("EndedOn", ["endedOn"], isOutput: true);
        _fullLoadQueuedTables = DefineProperty<int>("FullLoadQueuedTables", ["fullLoadQueuedTables"], isOutput: true);
        _fullLoadErroredTables = DefineProperty<int>("FullLoadErroredTables", ["fullLoadErroredTables"], isOutput: true);
        _fullLoadLoadingTables = DefineProperty<int>("FullLoadLoadingTables", ["fullLoadLoadingTables"], isOutput: true);
        _fullLoadCompletedTables = DefineProperty<int>("FullLoadCompletedTables", ["fullLoadCompletedTables"], isOutput: true);
        _cdcUpdateCounter = DefineProperty<int>("CdcUpdateCounter", ["cdcUpdateCounter"], isOutput: true);
        _cdcDeleteCounter = DefineProperty<int>("CdcDeleteCounter", ["cdcDeleteCounter"], isOutput: true);
        _cdcInsertCounter = DefineProperty<int>("CdcInsertCounter", ["cdcInsertCounter"], isOutput: true);
        _appliedChanges = DefineProperty<int>("AppliedChanges", ["appliedChanges"], isOutput: true);
        _incomingChanges = DefineProperty<int>("IncomingChanges", ["incomingChanges"], isOutput: true);
        _latency = DefineProperty<int>("Latency", ["latency"], isOutput: true);
        _message = DefineProperty<string>("Message", ["message"], isOutput: true);
    }
}
