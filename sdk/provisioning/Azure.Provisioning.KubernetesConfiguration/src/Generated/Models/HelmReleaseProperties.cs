// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.KubernetesConfiguration;

/// <summary>
/// Properties for HelmRelease objects.
/// </summary>
public partial class HelmReleaseProperties : ProvisioningConstruct
{
    /// <summary>
    /// The revision number of the last released object change.
    /// </summary>
    public BicepValue<long> LastRevisionApplied { get => _lastRevisionApplied; }
    private readonly BicepValue<long> _lastRevisionApplied;

    /// <summary>
    /// The reference to the HelmChart object used as the source to this
    /// HelmRelease.
    /// </summary>
    public BicepValue<KubernetesObjectReference> HelmChartRef { get => _helmChartRef; }
    private readonly BicepValue<KubernetesObjectReference> _helmChartRef;

    /// <summary>
    /// Total number of times that the HelmRelease failed to install or upgrade.
    /// </summary>
    public BicepValue<long> FailureCount { get => _failureCount; }
    private readonly BicepValue<long> _failureCount;

    /// <summary>
    /// Number of times that the HelmRelease failed to install.
    /// </summary>
    public BicepValue<long> InstallFailureCount { get => _installFailureCount; }
    private readonly BicepValue<long> _installFailureCount;

    /// <summary>
    /// Number of times that the HelmRelease failed to upgrade.
    /// </summary>
    public BicepValue<long> UpgradeFailureCount { get => _upgradeFailureCount; }
    private readonly BicepValue<long> _upgradeFailureCount;

    /// <summary>
    /// Creates a new HelmReleaseProperties.
    /// </summary>
    public HelmReleaseProperties()
    {
        _lastRevisionApplied = BicepValue<long>.DefineProperty(this, "LastRevisionApplied", ["lastRevisionApplied"], isOutput: true);
        _helmChartRef = BicepValue<KubernetesObjectReference>.DefineProperty(this, "HelmChartRef", ["helmChartRef"], isOutput: true);
        _failureCount = BicepValue<long>.DefineProperty(this, "FailureCount", ["failureCount"], isOutput: true);
        _installFailureCount = BicepValue<long>.DefineProperty(this, "InstallFailureCount", ["installFailureCount"], isOutput: true);
        _upgradeFailureCount = BicepValue<long>.DefineProperty(this, "UpgradeFailureCount", ["upgradeFailureCount"], isOutput: true);
    }
}
