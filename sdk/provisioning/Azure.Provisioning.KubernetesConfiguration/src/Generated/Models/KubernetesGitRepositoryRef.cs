// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.KubernetesConfiguration;

/// <summary>
/// The source reference for the GitRepository object.
/// </summary>
public partial class KubernetesGitRepositoryRef : ProvisioningConstruct
{
    /// <summary>
    /// The git repository branch name to checkout.
    /// </summary>
    public BicepValue<string> Branch { get => _branch; set => _branch.Assign(value); }
    private readonly BicepValue<string> _branch;

    /// <summary>
    /// The git repository tag name to checkout. This takes precedence over
    /// branch.
    /// </summary>
    public BicepValue<string> Tag { get => _tag; set => _tag.Assign(value); }
    private readonly BicepValue<string> _tag;

    /// <summary>
    /// The semver range used to match against git repository tags. This takes
    /// precedence over tag.
    /// </summary>
    public BicepValue<string> Semver { get => _semver; set => _semver.Assign(value); }
    private readonly BicepValue<string> _semver;

    /// <summary>
    /// The commit SHA to checkout. This value must be combined with the branch
    /// name to be valid. This takes precedence over semver.
    /// </summary>
    public BicepValue<string> Commit { get => _commit; set => _commit.Assign(value); }
    private readonly BicepValue<string> _commit;

    /// <summary>
    /// Creates a new KubernetesGitRepositoryRef.
    /// </summary>
    public KubernetesGitRepositoryRef()
    {
        _branch = BicepValue<string>.DefineProperty(this, "Branch", ["branch"]);
        _tag = BicepValue<string>.DefineProperty(this, "Tag", ["tag"]);
        _semver = BicepValue<string>.DefineProperty(this, "Semver", ["semver"]);
        _commit = BicepValue<string>.DefineProperty(this, "Commit", ["commit"]);
    }
}
