// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.KubernetesConfiguration;

/// <summary>
/// Scope of the extension. It can be either Cluster or Namespace; but not both.
/// </summary>
public partial class KubernetesClusterExtensionScope : ProvisioningConstruct
{
    /// <summary>
    /// Namespace where the extension Release must be placed, for a Cluster
    /// scoped extension.  If this namespace does not exist, it will be
    /// created.
    /// </summary>
    public BicepValue<string> ClusterReleaseNamespace { get => _clusterReleaseNamespace; set => _clusterReleaseNamespace.Assign(value); }
    private readonly BicepValue<string> _clusterReleaseNamespace;

    /// <summary>
    /// Namespace where the extension will be created for an Namespace scoped
    /// extension.  If this namespace does not exist, it will be created.
    /// </summary>
    public BicepValue<string> TargetNamespace { get => _targetNamespace; set => _targetNamespace.Assign(value); }
    private readonly BicepValue<string> _targetNamespace;

    /// <summary>
    /// Creates a new KubernetesClusterExtensionScope.
    /// </summary>
    public KubernetesClusterExtensionScope()
    {
        _clusterReleaseNamespace = BicepValue<string>.DefineProperty(this, "ClusterReleaseNamespace", ["cluster", "releaseNamespace"]);
        _targetNamespace = BicepValue<string>.DefineProperty(this, "TargetNamespace", ["namespace", "targetNamespace"]);
    }
}
