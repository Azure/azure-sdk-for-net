// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.KubernetesConfiguration;

/// <summary>
/// Parameters to authenticate using Service Principal.
/// </summary>
public partial class KubernetesServicePrincipal : ProvisioningConstruct
{
    /// <summary>
    /// The client Id for authenticating a Service Principal.
    /// </summary>
    public BicepValue<Guid> ClientId { get => _clientId; set => _clientId.Assign(value); }
    private readonly BicepValue<Guid> _clientId;

    /// <summary>
    /// The tenant Id for authenticating a Service Principal.
    /// </summary>
    public BicepValue<Guid> TenantId { get => _tenantId; set => _tenantId.Assign(value); }
    private readonly BicepValue<Guid> _tenantId;

    /// <summary>
    /// The client secret for authenticating a Service Principal.
    /// </summary>
    public BicepValue<string> ClientSecret { get => _clientSecret; set => _clientSecret.Assign(value); }
    private readonly BicepValue<string> _clientSecret;

    /// <summary>
    /// Base64-encoded certificate used to authenticate a Service Principal.
    /// </summary>
    public BicepValue<string> ClientCertificate { get => _clientCertificate; set => _clientCertificate.Assign(value); }
    private readonly BicepValue<string> _clientCertificate;

    /// <summary>
    /// The password for the certificate used to authenticate a Service
    /// Principal.
    /// </summary>
    public BicepValue<string> ClientCertificatePassword { get => _clientCertificatePassword; set => _clientCertificatePassword.Assign(value); }
    private readonly BicepValue<string> _clientCertificatePassword;

    /// <summary>
    /// Specifies whether to include x5c header in client claims when acquiring
    /// a token to enable subject name / issuer based authentication for the
    /// Client Certificate.
    /// </summary>
    public BicepValue<bool> ClientCertificateSendChain { get => _clientCertificateSendChain; set => _clientCertificateSendChain.Assign(value); }
    private readonly BicepValue<bool> _clientCertificateSendChain;

    /// <summary>
    /// Creates a new KubernetesServicePrincipal.
    /// </summary>
    public KubernetesServicePrincipal()
    {
        _clientId = BicepValue<Guid>.DefineProperty(this, "ClientId", ["clientId"]);
        _tenantId = BicepValue<Guid>.DefineProperty(this, "TenantId", ["tenantId"]);
        _clientSecret = BicepValue<string>.DefineProperty(this, "ClientSecret", ["clientSecret"]);
        _clientCertificate = BicepValue<string>.DefineProperty(this, "ClientCertificate", ["clientCertificate"]);
        _clientCertificatePassword = BicepValue<string>.DefineProperty(this, "ClientCertificatePassword", ["clientCertificatePassword"]);
        _clientCertificateSendChain = BicepValue<bool>.DefineProperty(this, "ClientCertificateSendChain", ["clientCertificateSendChain"]);
    }
}
