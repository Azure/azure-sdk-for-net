// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;

namespace Azure.Provisioning.AppService;

/// <summary>
/// SiteSlotInstanceExtension.
/// </summary>
public partial class SiteSlotInstanceExtension : Resource
{
    /// <summary>
    /// Gets the Name.
    /// </summary>
    public BicepValue<string> Name { get => _name; }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// SQL Connection String.
    /// </summary>
    public BicepValue<string> ConnectionString { get => _connectionString; set => _connectionString.Assign(value); }
    private readonly BicepValue<string> _connectionString;

    /// <summary>
    /// Database Type.
    /// </summary>
    public BicepValue<string> DBType { get => _dBType; set => _dBType.Assign(value); }
    private readonly BicepValue<string> _dBType;

    /// <summary>
    /// Sets the AppOffline rule while the MSDeploy operation executes.
    /// Setting is &lt;code&gt;false&lt;/code&gt; by default.
    /// </summary>
    public BicepValue<bool> IsAppOffline { get => _isAppOffline; set => _isAppOffline.Assign(value); }
    private readonly BicepValue<bool> _isAppOffline;

    /// <summary>
    /// Kind of resource.
    /// </summary>
    public BicepValue<string> Kind { get => _kind; set => _kind.Assign(value); }
    private readonly BicepValue<string> _kind;

    /// <summary>
    /// Package URI.
    /// </summary>
    public BicepValue<Uri> PackageUri { get => _packageUri; set => _packageUri.Assign(value); }
    private readonly BicepValue<Uri> _packageUri;

    /// <summary>
    /// MSDeploy Parameters. Must not be set if SetParametersXmlFileUri is used.
    /// </summary>
    public BicepDictionary<string> SetParameters { get => _setParameters; set => _setParameters.Assign(value); }
    private readonly BicepDictionary<string> _setParameters;

    /// <summary>
    /// URI of MSDeploy Parameters file. Must not be set if SetParameters is
    /// used.
    /// </summary>
    public BicepValue<Uri> SetParametersXmlFileUri { get => _setParametersXmlFileUri; set => _setParametersXmlFileUri.Assign(value); }
    private readonly BicepValue<Uri> _setParametersXmlFileUri;

    /// <summary>
    /// Controls whether the MSDeploy operation skips the App_Data directory.
    /// If set to &lt;code&gt;true&lt;/code&gt;, the existing
    /// App_Data directory on the destination             will not be deleted,
    /// and any App_Data directory in the source will be ignored.
    /// Setting is &lt;code&gt;false&lt;/code&gt; by default.
    /// </summary>
    public BicepValue<bool> SkipAppData { get => _skipAppData; set => _skipAppData.Assign(value); }
    private readonly BicepValue<bool> _skipAppData;

    /// <summary>
    /// Username of deployer.
    /// </summary>
    public BicepValue<string> Deployer { get => _deployer; }
    private readonly BicepValue<string> _deployer;

    /// <summary>
    /// End time of deploy operation.
    /// </summary>
    public BicepValue<DateTimeOffset> EndOn { get => _endOn; }
    private readonly BicepValue<DateTimeOffset> _endOn;

    /// <summary>
    /// Gets the Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id { get => _id; }
    private readonly BicepValue<ResourceIdentifier> _id;

    /// <summary>
    /// Whether the deployment operation has completed.
    /// </summary>
    public BicepValue<bool> IsComplete { get => _isComplete; }
    private readonly BicepValue<bool> _isComplete;

    /// <summary>
    /// Provisioning state.
    /// </summary>
    public BicepValue<MSDeployProvisioningState> ProvisioningState { get => _provisioningState; }
    private readonly BicepValue<MSDeployProvisioningState> _provisioningState;

    /// <summary>
    /// Start time of deploy operation.
    /// </summary>
    public BicepValue<DateTimeOffset> StartOn { get => _startOn; }
    private readonly BicepValue<DateTimeOffset> _startOn;

    /// <summary>
    /// Gets the SystemData.
    /// </summary>
    public BicepValue<SystemData> SystemData { get => _systemData; }
    private readonly BicepValue<SystemData> _systemData;

    /// <summary>
    /// Creates a new SiteSlotInstanceExtension.
    /// </summary>
    /// <param name="resourceName">Name of the SiteSlotInstanceExtension.</param>
    /// <param name="resourceVersion">Version of the SiteSlotInstanceExtension.</param>
    public SiteSlotInstanceExtension(string resourceName, string? resourceVersion = default)
        : base(resourceName, "Microsoft.Web/sites/slots/instances/extensions", resourceVersion)
    {
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"], isOutput: true);
        _connectionString = BicepValue<string>.DefineProperty(this, "ConnectionString", ["properties", "connectionString"]);
        _dBType = BicepValue<string>.DefineProperty(this, "DBType", ["properties", "dbType"]);
        _isAppOffline = BicepValue<bool>.DefineProperty(this, "IsAppOffline", ["properties", "appOffline"]);
        _kind = BicepValue<string>.DefineProperty(this, "Kind", ["kind"]);
        _packageUri = BicepValue<Uri>.DefineProperty(this, "PackageUri", ["properties", "packageUri"]);
        _setParameters = BicepDictionary<string>.DefineProperty(this, "SetParameters", ["properties", "setParameters"]);
        _setParametersXmlFileUri = BicepValue<Uri>.DefineProperty(this, "SetParametersXmlFileUri", ["properties", "setParametersXmlFileUri"]);
        _skipAppData = BicepValue<bool>.DefineProperty(this, "SkipAppData", ["properties", "skipAppData"]);
        _deployer = BicepValue<string>.DefineProperty(this, "Deployer", ["properties", "deployer"], isOutput: true);
        _endOn = BicepValue<DateTimeOffset>.DefineProperty(this, "EndOn", ["properties", "endTime"], isOutput: true);
        _id = BicepValue<ResourceIdentifier>.DefineProperty(this, "Id", ["id"], isOutput: true);
        _isComplete = BicepValue<bool>.DefineProperty(this, "IsComplete", ["properties", "complete"], isOutput: true);
        _provisioningState = BicepValue<MSDeployProvisioningState>.DefineProperty(this, "ProvisioningState", ["properties", "provisioningState"], isOutput: true);
        _startOn = BicepValue<DateTimeOffset>.DefineProperty(this, "StartOn", ["properties", "startTime"], isOutput: true);
        _systemData = BicepValue<SystemData>.DefineProperty(this, "SystemData", ["systemData"], isOutput: true);
    }

    /// <summary>
    /// Creates a reference to an existing SiteSlotInstanceExtension.
    /// </summary>
    /// <param name="resourceName">Name of the SiteSlotInstanceExtension.</param>
    /// <param name="resourceVersion">Version of the SiteSlotInstanceExtension.</param>
    /// <returns>The existing SiteSlotInstanceExtension resource.</returns>
    public static SiteSlotInstanceExtension FromExisting(string resourceName, string? resourceVersion = default) =>
        new(resourceName, resourceVersion) { IsExistingResource = true };
}
