// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;

namespace Azure.Provisioning.AppService;

/// <summary>
/// WebSitePremierAddon.
/// </summary>
public partial class WebSitePremierAddon : Resource
{
    /// <summary>
    /// Add-on name.
    /// </summary>
    public BicepValue<string> Name { get => _name; set => _name.Assign(value); }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// Gets or sets the Location.
    /// </summary>
    public BicepValue<AzureLocation> Location { get => _location; set => _location.Assign(value); }
    private readonly BicepValue<AzureLocation> _location;

    /// <summary>
    /// Kind of resource.
    /// </summary>
    public BicepValue<string> Kind { get => _kind; set => _kind.Assign(value); }
    private readonly BicepValue<string> _kind;

    /// <summary>
    /// Premier add on Marketplace offer.
    /// </summary>
    public BicepValue<string> MarketplaceOffer { get => _marketplaceOffer; set => _marketplaceOffer.Assign(value); }
    private readonly BicepValue<string> _marketplaceOffer;

    /// <summary>
    /// Premier add on Marketplace publisher.
    /// </summary>
    public BicepValue<string> MarketplacePublisher { get => _marketplacePublisher; set => _marketplacePublisher.Assign(value); }
    private readonly BicepValue<string> _marketplacePublisher;

    /// <summary>
    /// Premier add on Product.
    /// </summary>
    public BicepValue<string> Product { get => _product; set => _product.Assign(value); }
    private readonly BicepValue<string> _product;

    /// <summary>
    /// Premier add on SKU.
    /// </summary>
    public BicepValue<string> Sku { get => _sku; set => _sku.Assign(value); }
    private readonly BicepValue<string> _sku;

    /// <summary>
    /// Gets or sets the Tags.
    /// </summary>
    public BicepDictionary<string> Tags { get => _tags; set => _tags.Assign(value); }
    private readonly BicepDictionary<string> _tags;

    /// <summary>
    /// Premier add on Vendor.
    /// </summary>
    public BicepValue<string> Vendor { get => _vendor; set => _vendor.Assign(value); }
    private readonly BicepValue<string> _vendor;

    /// <summary>
    /// Gets the Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id { get => _id; }
    private readonly BicepValue<ResourceIdentifier> _id;

    /// <summary>
    /// Gets the SystemData.
    /// </summary>
    public BicepValue<SystemData> SystemData { get => _systemData; }
    private readonly BicepValue<SystemData> _systemData;

    /// <summary>
    /// Gets or sets a reference to the parent WebSite.
    /// </summary>
    public WebSite? Parent { get => _parent!.Value; set => _parent!.Value = value; }
    private readonly ResourceReference<WebSite> _parent;

    /// <summary>
    /// Creates a new WebSitePremierAddon.
    /// </summary>
    /// <param name="resourceName">Name of the WebSitePremierAddon.</param>
    /// <param name="resourceVersion">Version of the WebSitePremierAddon.</param>
    public WebSitePremierAddon(string resourceName, string? resourceVersion = default)
        : base(resourceName, "Microsoft.Web/sites/premieraddons", resourceVersion ?? "2024-04-01")
    {
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"], isRequired: true);
        _location = BicepValue<AzureLocation>.DefineProperty(this, "Location", ["location"], isRequired: true);
        _kind = BicepValue<string>.DefineProperty(this, "Kind", ["kind"]);
        _marketplaceOffer = BicepValue<string>.DefineProperty(this, "MarketplaceOffer", ["properties", "marketplaceOffer"]);
        _marketplacePublisher = BicepValue<string>.DefineProperty(this, "MarketplacePublisher", ["properties", "marketplacePublisher"]);
        _product = BicepValue<string>.DefineProperty(this, "Product", ["properties", "product"]);
        _sku = BicepValue<string>.DefineProperty(this, "Sku", ["properties", "sku"]);
        _tags = BicepDictionary<string>.DefineProperty(this, "Tags", ["tags"]);
        _vendor = BicepValue<string>.DefineProperty(this, "Vendor", ["properties", "vendor"]);
        _id = BicepValue<ResourceIdentifier>.DefineProperty(this, "Id", ["id"], isOutput: true);
        _systemData = BicepValue<SystemData>.DefineProperty(this, "SystemData", ["systemData"], isOutput: true);
        _parent = ResourceReference<WebSite>.DefineResource(this, "Parent", ["parent"], isRequired: true);
    }

    /// <summary>
    /// Supported WebSitePremierAddon resource versions.
    /// </summary>
    public static class ResourceVersions
    {
        /// <summary>
        /// 2024-04-01.
        /// </summary>
        public static readonly string V2024_04_01 = "2024-04-01";

        /// <summary>
        /// 2023-12-01.
        /// </summary>
        public static readonly string V2023_12_01 = "2023-12-01";

        /// <summary>
        /// 2023-01-01.
        /// </summary>
        public static readonly string V2023_01_01 = "2023-01-01";

        /// <summary>
        /// 2022-09-01.
        /// </summary>
        public static readonly string V2022_09_01 = "2022-09-01";

        /// <summary>
        /// 2022-03-01.
        /// </summary>
        public static readonly string V2022_03_01 = "2022-03-01";

        /// <summary>
        /// 2021-03-01.
        /// </summary>
        public static readonly string V2021_03_01 = "2021-03-01";

        /// <summary>
        /// 2021-02-01.
        /// </summary>
        public static readonly string V2021_02_01 = "2021-02-01";

        /// <summary>
        /// 2021-01-15.
        /// </summary>
        public static readonly string V2021_01_15 = "2021-01-15";

        /// <summary>
        /// 2021-01-01.
        /// </summary>
        public static readonly string V2021_01_01 = "2021-01-01";

        /// <summary>
        /// 2020-12-01.
        /// </summary>
        public static readonly string V2020_12_01 = "2020-12-01";

        /// <summary>
        /// 2020-10-01.
        /// </summary>
        public static readonly string V2020_10_01 = "2020-10-01";

        /// <summary>
        /// 2020-09-01.
        /// </summary>
        public static readonly string V2020_09_01 = "2020-09-01";

        /// <summary>
        /// 2020-06-01.
        /// </summary>
        public static readonly string V2020_06_01 = "2020-06-01";

        /// <summary>
        /// 2019-08-01.
        /// </summary>
        public static readonly string V2019_08_01 = "2019-08-01";

        /// <summary>
        /// 2018-11-01.
        /// </summary>
        public static readonly string V2018_11_01 = "2018-11-01";

        /// <summary>
        /// 2018-02-01.
        /// </summary>
        public static readonly string V2018_02_01 = "2018-02-01";

        /// <summary>
        /// 2016-03-01.
        /// </summary>
        public static readonly string V2016_03_01 = "2016-03-01";

        /// <summary>
        /// 2015-08-01.
        /// </summary>
        public static readonly string V2015_08_01 = "2015-08-01";

        /// <summary>
        /// 2015-07-01.
        /// </summary>
        public static readonly string V2015_07_01 = "2015-07-01";

        /// <summary>
        /// 2015-06-01.
        /// </summary>
        public static readonly string V2015_06_01 = "2015-06-01";

        /// <summary>
        /// 2015-05-01.
        /// </summary>
        public static readonly string V2015_05_01 = "2015-05-01";

        /// <summary>
        /// 2015-04-01.
        /// </summary>
        public static readonly string V2015_04_01 = "2015-04-01";
    }

    /// <summary>
    /// Creates a reference to an existing WebSitePremierAddon.
    /// </summary>
    /// <param name="resourceName">Name of the WebSitePremierAddon.</param>
    /// <param name="resourceVersion">Version of the WebSitePremierAddon.</param>
    /// <returns>The existing WebSitePremierAddon resource.</returns>
    public static WebSitePremierAddon FromExisting(string resourceName, string? resourceVersion = default) =>
        new(resourceName, resourceVersion) { IsExistingResource = true };
}
