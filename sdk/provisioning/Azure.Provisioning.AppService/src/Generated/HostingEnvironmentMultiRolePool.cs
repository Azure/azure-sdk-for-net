// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;

namespace Azure.Provisioning.AppService;

/// <summary>
/// HostingEnvironmentMultiRolePool.
/// </summary>
public partial class HostingEnvironmentMultiRolePool : Resource
{
    /// <summary>
    /// Gets the Name.
    /// </summary>
    public BicepValue<string> Name { get => _name; }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// Shared or dedicated app hosting.
    /// </summary>
    public BicepValue<ComputeModeOption> ComputeMode { get => _computeMode; set => _computeMode.Assign(value); }
    private readonly BicepValue<ComputeModeOption> _computeMode;

    /// <summary>
    /// Kind of resource.
    /// </summary>
    public BicepValue<string> Kind { get => _kind; set => _kind.Assign(value); }
    private readonly BicepValue<string> _kind;

    /// <summary>
    /// Description of a SKU for a scalable resource.
    /// </summary>
    public BicepValue<AppServiceSkuDescription> Sku { get => _sku; set => _sku.Assign(value); }
    private readonly BicepValue<AppServiceSkuDescription> _sku;

    /// <summary>
    /// Number of instances in the worker pool.
    /// </summary>
    public BicepValue<int> WorkerCount { get => _workerCount; set => _workerCount.Assign(value); }
    private readonly BicepValue<int> _workerCount;

    /// <summary>
    /// VM size of the worker pool instances.
    /// </summary>
    public BicepValue<string> WorkerSize { get => _workerSize; set => _workerSize.Assign(value); }
    private readonly BicepValue<string> _workerSize;

    /// <summary>
    /// Worker size ID for referencing this worker pool.
    /// </summary>
    public BicepValue<int> WorkerSizeId { get => _workerSizeId; set => _workerSizeId.Assign(value); }
    private readonly BicepValue<int> _workerSizeId;

    /// <summary>
    /// Gets the Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id { get => _id; }
    private readonly BicepValue<ResourceIdentifier> _id;

    /// <summary>
    /// Names of all instances in the worker pool (read only).
    /// </summary>
    public BicepList<string> InstanceNames { get => _instanceNames; }
    private readonly BicepList<string> _instanceNames;

    /// <summary>
    /// Gets the SystemData.
    /// </summary>
    public BicepValue<SystemData> SystemData { get => _systemData; }
    private readonly BicepValue<SystemData> _systemData;

    /// <summary>
    /// Gets or sets a reference to the parent AppServiceEnvironment.
    /// </summary>
    public AppServiceEnvironment? Parent { get => _parent!.Value; set => _parent!.Value = value; }
    private readonly ResourceReference<AppServiceEnvironment> _parent;

    /// <summary>
    /// Creates a new HostingEnvironmentMultiRolePool.
    /// </summary>
    /// <param name="resourceName">Name of the HostingEnvironmentMultiRolePool.</param>
    /// <param name="resourceVersion">Version of the HostingEnvironmentMultiRolePool.</param>
    public HostingEnvironmentMultiRolePool(string resourceName, string? resourceVersion = default)
        : base(resourceName, "Microsoft.Web/hostingEnvironments/multiRolePools", resourceVersion ?? "2024-04-01")
    {
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"], isOutput: true);
        _computeMode = BicepValue<ComputeModeOption>.DefineProperty(this, "ComputeMode", ["properties", "computeMode"]);
        _kind = BicepValue<string>.DefineProperty(this, "Kind", ["kind"]);
        _sku = BicepValue<AppServiceSkuDescription>.DefineProperty(this, "Sku", ["sku"]);
        _workerCount = BicepValue<int>.DefineProperty(this, "WorkerCount", ["properties", "workerCount"]);
        _workerSize = BicepValue<string>.DefineProperty(this, "WorkerSize", ["properties", "workerSize"]);
        _workerSizeId = BicepValue<int>.DefineProperty(this, "WorkerSizeId", ["properties", "workerSizeId"]);
        _id = BicepValue<ResourceIdentifier>.DefineProperty(this, "Id", ["id"], isOutput: true);
        _instanceNames = BicepList<string>.DefineProperty(this, "InstanceNames", ["properties", "instanceNames"], isOutput: true);
        _systemData = BicepValue<SystemData>.DefineProperty(this, "SystemData", ["systemData"], isOutput: true);
        _parent = ResourceReference<AppServiceEnvironment>.DefineResource(this, "Parent", ["parent"], isRequired: true);
    }

    /// <summary>
    /// Supported HostingEnvironmentMultiRolePool resource versions.
    /// </summary>
    public static class ResourceVersions
    {
        /// <summary>
        /// 2024-04-01.
        /// </summary>
        public static readonly string V2024_04_01 = "2024-04-01";

        /// <summary>
        /// 2023-12-01.
        /// </summary>
        public static readonly string V2023_12_01 = "2023-12-01";

        /// <summary>
        /// 2023-01-01.
        /// </summary>
        public static readonly string V2023_01_01 = "2023-01-01";

        /// <summary>
        /// 2022-09-01.
        /// </summary>
        public static readonly string V2022_09_01 = "2022-09-01";

        /// <summary>
        /// 2022-03-01.
        /// </summary>
        public static readonly string V2022_03_01 = "2022-03-01";

        /// <summary>
        /// 2021-03-01.
        /// </summary>
        public static readonly string V2021_03_01 = "2021-03-01";

        /// <summary>
        /// 2021-02-01.
        /// </summary>
        public static readonly string V2021_02_01 = "2021-02-01";

        /// <summary>
        /// 2021-01-15.
        /// </summary>
        public static readonly string V2021_01_15 = "2021-01-15";

        /// <summary>
        /// 2021-01-01.
        /// </summary>
        public static readonly string V2021_01_01 = "2021-01-01";

        /// <summary>
        /// 2020-12-01.
        /// </summary>
        public static readonly string V2020_12_01 = "2020-12-01";

        /// <summary>
        /// 2020-10-01.
        /// </summary>
        public static readonly string V2020_10_01 = "2020-10-01";

        /// <summary>
        /// 2020-09-01.
        /// </summary>
        public static readonly string V2020_09_01 = "2020-09-01";

        /// <summary>
        /// 2020-06-01.
        /// </summary>
        public static readonly string V2020_06_01 = "2020-06-01";

        /// <summary>
        /// 2019-08-01.
        /// </summary>
        public static readonly string V2019_08_01 = "2019-08-01";

        /// <summary>
        /// 2019-02-01.
        /// </summary>
        public static readonly string V2019_02_01 = "2019-02-01";

        /// <summary>
        /// 2018-11-01.
        /// </summary>
        public static readonly string V2018_11_01 = "2018-11-01";

        /// <summary>
        /// 2018-08-01.
        /// </summary>
        public static readonly string V2018_08_01 = "2018-08-01";

        /// <summary>
        /// 2018-02-01.
        /// </summary>
        public static readonly string V2018_02_01 = "2018-02-01";

        /// <summary>
        /// 2017-08-01.
        /// </summary>
        public static readonly string V2017_08_01 = "2017-08-01";

        /// <summary>
        /// 2016-09-01.
        /// </summary>
        public static readonly string V2016_09_01 = "2016-09-01";

        /// <summary>
        /// 2016-03-01.
        /// </summary>
        public static readonly string V2016_03_01 = "2016-03-01";

        /// <summary>
        /// 2015-08-01.
        /// </summary>
        public static readonly string V2015_08_01 = "2015-08-01";

        /// <summary>
        /// 2015-07-01.
        /// </summary>
        public static readonly string V2015_07_01 = "2015-07-01";

        /// <summary>
        /// 2015-06-01.
        /// </summary>
        public static readonly string V2015_06_01 = "2015-06-01";

        /// <summary>
        /// 2015-05-01.
        /// </summary>
        public static readonly string V2015_05_01 = "2015-05-01";

        /// <summary>
        /// 2015-04-01.
        /// </summary>
        public static readonly string V2015_04_01 = "2015-04-01";

        /// <summary>
        /// 2015-02-01.
        /// </summary>
        public static readonly string V2015_02_01 = "2015-02-01";

        /// <summary>
        /// 2014-11-01.
        /// </summary>
        public static readonly string V2014_11_01 = "2014-11-01";

        /// <summary>
        /// 2014-06-01.
        /// </summary>
        public static readonly string V2014_06_01 = "2014-06-01";

        /// <summary>
        /// 2014-04-01.
        /// </summary>
        public static readonly string V2014_04_01 = "2014-04-01";
    }

    /// <summary>
    /// Creates a reference to an existing HostingEnvironmentMultiRolePool.
    /// </summary>
    /// <param name="resourceName">Name of the HostingEnvironmentMultiRolePool.</param>
    /// <param name="resourceVersion">Version of the HostingEnvironmentMultiRolePool.</param>
    /// <returns>The existing HostingEnvironmentMultiRolePool resource.</returns>
    public static HostingEnvironmentMultiRolePool FromExisting(string resourceName, string? resourceVersion = default) =>
        new(resourceName, resourceVersion) { IsExistingResource = true };
}
