// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;

namespace Azure.Provisioning.AppService;

/// <summary>
/// WebSiteSlotHybridConnection.
/// </summary>
public partial class WebSiteSlotHybridConnection : Resource
{
    /// <summary>
    /// Name of the hybrid connection configuration.
    /// </summary>
    public BicepValue<string> Name { get => _name; set => _name.Assign(value); }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// Gets or sets the biztalk uri.
    /// </summary>
    public BicepValue<Uri> BiztalkUri { get => _biztalkUri; set => _biztalkUri.Assign(value); }
    private readonly BicepValue<Uri> _biztalkUri;

    /// <summary>
    /// Gets or sets the entity connection string.
    /// </summary>
    public BicepValue<string> EntityConnectionString { get => _entityConnectionString; set => _entityConnectionString.Assign(value); }
    private readonly BicepValue<string> _entityConnectionString;

    /// <summary>
    /// Gets or sets the entity name.
    /// </summary>
    public BicepValue<string> EntityName { get => _entityName; set => _entityName.Assign(value); }
    private readonly BicepValue<string> _entityName;

    /// <summary>
    /// Gets or sets the hostname.
    /// </summary>
    public BicepValue<string> Hostname { get => _hostname; set => _hostname.Assign(value); }
    private readonly BicepValue<string> _hostname;

    /// <summary>
    /// Kind of resource.
    /// </summary>
    public BicepValue<string> Kind { get => _kind; set => _kind.Assign(value); }
    private readonly BicepValue<string> _kind;

    /// <summary>
    /// Gets or sets the port.
    /// </summary>
    public BicepValue<int> Port { get => _port; set => _port.Assign(value); }
    private readonly BicepValue<int> _port;

    /// <summary>
    /// Gets or sets the resource connection string.
    /// </summary>
    public BicepValue<string> ResourceConnectionString { get => _resourceConnectionString; set => _resourceConnectionString.Assign(value); }
    private readonly BicepValue<string> _resourceConnectionString;

    /// <summary>
    /// Gets the Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id { get => _id; }
    private readonly BicepValue<ResourceIdentifier> _id;

    /// <summary>
    /// Gets the SystemData.
    /// </summary>
    public BicepValue<SystemData> SystemData { get => _systemData; }
    private readonly BicepValue<SystemData> _systemData;

    /// <summary>
    /// Gets or sets a reference to the parent WebSiteSlot.
    /// </summary>
    public WebSiteSlot? Parent { get => _parent!.Value; set => _parent!.Value = value; }
    private readonly ResourceReference<WebSiteSlot> _parent;

    /// <summary>
    /// Creates a new WebSiteSlotHybridConnection.
    /// </summary>
    /// <param name="resourceName">Name of the WebSiteSlotHybridConnection.</param>
    /// <param name="resourceVersion">Version of the WebSiteSlotHybridConnection.</param>
    public WebSiteSlotHybridConnection(string resourceName, string? resourceVersion = default)
        : base(resourceName, "Microsoft.Web/sites/slots/hybridconnection", resourceVersion ?? "2024-04-01")
    {
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"], isRequired: true);
        _biztalkUri = BicepValue<Uri>.DefineProperty(this, "BiztalkUri", ["properties", "biztalkUri"]);
        _entityConnectionString = BicepValue<string>.DefineProperty(this, "EntityConnectionString", ["properties", "entityConnectionString"]);
        _entityName = BicepValue<string>.DefineProperty(this, "EntityName", ["properties", "entityName"]);
        _hostname = BicepValue<string>.DefineProperty(this, "Hostname", ["properties", "hostname"]);
        _kind = BicepValue<string>.DefineProperty(this, "Kind", ["kind"]);
        _port = BicepValue<int>.DefineProperty(this, "Port", ["properties", "port"]);
        _resourceConnectionString = BicepValue<string>.DefineProperty(this, "ResourceConnectionString", ["properties", "resourceConnectionString"]);
        _id = BicepValue<ResourceIdentifier>.DefineProperty(this, "Id", ["id"], isOutput: true);
        _systemData = BicepValue<SystemData>.DefineProperty(this, "SystemData", ["systemData"], isOutput: true);
        _parent = ResourceReference<WebSiteSlot>.DefineResource(this, "Parent", ["parent"], isRequired: true);
    }

    /// <summary>
    /// Supported WebSiteSlotHybridConnection resource versions.
    /// </summary>
    public static class ResourceVersions
    {
        /// <summary>
        /// 2024-04-01.
        /// </summary>
        public static readonly string V2024_04_01 = "2024-04-01";

        /// <summary>
        /// 2023-12-01.
        /// </summary>
        public static readonly string V2023_12_01 = "2023-12-01";

        /// <summary>
        /// 2023-01-01.
        /// </summary>
        public static readonly string V2023_01_01 = "2023-01-01";

        /// <summary>
        /// 2022-09-01.
        /// </summary>
        public static readonly string V2022_09_01 = "2022-09-01";

        /// <summary>
        /// 2022-03-01.
        /// </summary>
        public static readonly string V2022_03_01 = "2022-03-01";

        /// <summary>
        /// 2021-03-01.
        /// </summary>
        public static readonly string V2021_03_01 = "2021-03-01";

        /// <summary>
        /// 2021-02-01.
        /// </summary>
        public static readonly string V2021_02_01 = "2021-02-01";

        /// <summary>
        /// 2021-01-15.
        /// </summary>
        public static readonly string V2021_01_15 = "2021-01-15";

        /// <summary>
        /// 2021-01-01.
        /// </summary>
        public static readonly string V2021_01_01 = "2021-01-01";

        /// <summary>
        /// 2020-12-01.
        /// </summary>
        public static readonly string V2020_12_01 = "2020-12-01";

        /// <summary>
        /// 2020-10-01.
        /// </summary>
        public static readonly string V2020_10_01 = "2020-10-01";

        /// <summary>
        /// 2020-09-01.
        /// </summary>
        public static readonly string V2020_09_01 = "2020-09-01";

        /// <summary>
        /// 2020-06-01.
        /// </summary>
        public static readonly string V2020_06_01 = "2020-06-01";

        /// <summary>
        /// 2019-08-01.
        /// </summary>
        public static readonly string V2019_08_01 = "2019-08-01";

        /// <summary>
        /// 2018-11-01.
        /// </summary>
        public static readonly string V2018_11_01 = "2018-11-01";

        /// <summary>
        /// 2018-02-01.
        /// </summary>
        public static readonly string V2018_02_01 = "2018-02-01";

        /// <summary>
        /// 2017-08-01.
        /// </summary>
        public static readonly string V2017_08_01 = "2017-08-01";

        /// <summary>
        /// 2016-09-01.
        /// </summary>
        public static readonly string V2016_09_01 = "2016-09-01";

        /// <summary>
        /// 2016-08-01.
        /// </summary>
        public static readonly string V2016_08_01 = "2016-08-01";

        /// <summary>
        /// 2016-03-01.
        /// </summary>
        public static readonly string V2016_03_01 = "2016-03-01";

        /// <summary>
        /// 2015-11-01.
        /// </summary>
        public static readonly string V2015_11_01 = "2015-11-01";

        /// <summary>
        /// 2015-08-01.
        /// </summary>
        public static readonly string V2015_08_01 = "2015-08-01";

        /// <summary>
        /// 2015-07-01.
        /// </summary>
        public static readonly string V2015_07_01 = "2015-07-01";

        /// <summary>
        /// 2015-06-01.
        /// </summary>
        public static readonly string V2015_06_01 = "2015-06-01";

        /// <summary>
        /// 2015-05-01.
        /// </summary>
        public static readonly string V2015_05_01 = "2015-05-01";

        /// <summary>
        /// 2015-04-01.
        /// </summary>
        public static readonly string V2015_04_01 = "2015-04-01";

        /// <summary>
        /// 2015-02-01.
        /// </summary>
        public static readonly string V2015_02_01 = "2015-02-01";

        /// <summary>
        /// 2015-01-01.
        /// </summary>
        public static readonly string V2015_01_01 = "2015-01-01";

        /// <summary>
        /// 2014-11-01.
        /// </summary>
        public static readonly string V2014_11_01 = "2014-11-01";

        /// <summary>
        /// 2014-06-01.
        /// </summary>
        public static readonly string V2014_06_01 = "2014-06-01";

        /// <summary>
        /// 2014-04-01.
        /// </summary>
        public static readonly string V2014_04_01 = "2014-04-01";
    }

    /// <summary>
    /// Creates a reference to an existing WebSiteSlotHybridConnection.
    /// </summary>
    /// <param name="resourceName">Name of the WebSiteSlotHybridConnection.</param>
    /// <param name="resourceVersion">Version of the WebSiteSlotHybridConnection.</param>
    /// <returns>The existing WebSiteSlotHybridConnection resource.</returns>
    public static WebSiteSlotHybridConnection FromExisting(string resourceName, string? resourceVersion = default) =>
        new(resourceName, resourceVersion) { IsExistingResource = true };
}
