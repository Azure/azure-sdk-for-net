// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.AppService;

/// <summary>
/// Function app configuration.
/// </summary>
public partial class FunctionAppConfig : ProvisioningConstruct
{
    /// <summary>
    /// Storage for deployed package used by the function app.
    /// </summary>
    public BicepValue<FunctionAppStorage> DeploymentStorage { get => _deploymentStorage; set => _deploymentStorage.Assign(value); }
    private readonly BicepValue<FunctionAppStorage> _deploymentStorage;

    /// <summary>
    /// Function app runtime settings.
    /// </summary>
    public BicepValue<FunctionAppRuntime> Runtime { get => _runtime; set => _runtime.Assign(value); }
    private readonly BicepValue<FunctionAppRuntime> _runtime;

    /// <summary>
    /// Function app scale and concurrency settings.
    /// </summary>
    public BicepValue<FunctionAppScaleAndConcurrency> ScaleAndConcurrency { get => _scaleAndConcurrency; set => _scaleAndConcurrency.Assign(value); }
    private readonly BicepValue<FunctionAppScaleAndConcurrency> _scaleAndConcurrency;

    /// <summary>
    /// Creates a new FunctionAppConfig.
    /// </summary>
    public FunctionAppConfig()
    {
        _deploymentStorage = BicepValue<FunctionAppStorage>.DefineProperty(this, "DeploymentStorage", ["deployment", "storage"]);
        _runtime = BicepValue<FunctionAppRuntime>.DefineProperty(this, "Runtime", ["runtime"]);
        _scaleAndConcurrency = BicepValue<FunctionAppScaleAndConcurrency>.DefineProperty(this, "ScaleAndConcurrency", ["scaleAndConcurrency"]);
    }
}
