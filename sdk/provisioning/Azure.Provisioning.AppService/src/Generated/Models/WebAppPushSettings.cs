// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Core;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;

namespace Azure.Provisioning.AppService;

/// <summary>
/// Push settings for the App.
/// </summary>
public partial class WebAppPushSettings : ProvisioningConstruct
{
    /// <summary>
    /// Gets or sets a flag indicating whether the Push endpoint is enabled.
    /// </summary>
    public BicepValue<bool> IsPushEnabled { get => _isPushEnabled; set => _isPushEnabled.Assign(value); }
    private readonly BicepValue<bool> _isPushEnabled;

    /// <summary>
    /// Gets or sets a JSON string containing a list of tags that are
    /// whitelisted for use by the push registration endpoint.
    /// </summary>
    public BicepValue<string> TagWhitelistJson { get => _tagWhitelistJson; set => _tagWhitelistJson.Assign(value); }
    private readonly BicepValue<string> _tagWhitelistJson;

    /// <summary>
    /// Gets or sets a JSON string containing a list of tags that require user
    /// authentication to be used in the push registration endpoint.
    /// Tags can consist of alphanumeric characters and the
    /// following:             &apos;_&apos;, &apos;@&apos;, &apos;#&apos;,
    /// &apos;.&apos;, &apos;:&apos;, &apos;-&apos;.             Validation
    /// should be performed at the PushRequestHandler.
    /// </summary>
    public BicepValue<string> TagsRequiringAuth { get => _tagsRequiringAuth; set => _tagsRequiringAuth.Assign(value); }
    private readonly BicepValue<string> _tagsRequiringAuth;

    /// <summary>
    /// Gets or sets a JSON string containing a list of dynamic tags that will
    /// be evaluated from user claims in the push registration endpoint.
    /// </summary>
    public BicepValue<string> DynamicTagsJson { get => _dynamicTagsJson; set => _dynamicTagsJson.Assign(value); }
    private readonly BicepValue<string> _dynamicTagsJson;

    /// <summary>
    /// Kind of resource.
    /// </summary>
    public BicepValue<string> Kind { get => _kind; set => _kind.Assign(value); }
    private readonly BicepValue<string> _kind;

    /// <summary>
    /// Gets the Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id { get => _id; }
    private readonly BicepValue<ResourceIdentifier> _id;

    /// <summary>
    /// Gets the Name.
    /// </summary>
    public BicepValue<string> Name { get => _name; }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// Gets the SystemData.
    /// </summary>
    public BicepValue<SystemData> SystemData { get => _systemData; }
    private readonly BicepValue<SystemData> _systemData;

    /// <summary>
    /// Creates a new WebAppPushSettings.
    /// </summary>
    public WebAppPushSettings()
    {
        _isPushEnabled = BicepValue<bool>.DefineProperty(this, "IsPushEnabled", ["properties", "isPushEnabled"]);
        _tagWhitelistJson = BicepValue<string>.DefineProperty(this, "TagWhitelistJson", ["properties", "tagWhitelistJson"]);
        _tagsRequiringAuth = BicepValue<string>.DefineProperty(this, "TagsRequiringAuth", ["properties", "tagsRequiringAuth"]);
        _dynamicTagsJson = BicepValue<string>.DefineProperty(this, "DynamicTagsJson", ["properties", "dynamicTagsJson"]);
        _kind = BicepValue<string>.DefineProperty(this, "Kind", ["kind"]);
        _id = BicepValue<ResourceIdentifier>.DefineProperty(this, "Id", ["id"], isOutput: true);
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"], isOutput: true);
        _systemData = BicepValue<SystemData>.DefineProperty(this, "SystemData", ["systemData"], isOutput: true);
    }
}
