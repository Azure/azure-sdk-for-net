// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.AppService;

/// <summary>
/// Azure Files or Blob Storage access information value for dictionary storage.
/// </summary>
public partial class AppServiceStorageAccessInfo : ProvisioningConstruct
{
    /// <summary>
    /// Type of storage.
    /// </summary>
    public BicepValue<AppServiceStorageType> StorageType { get => _storageType; set => _storageType.Assign(value); }
    private readonly BicepValue<AppServiceStorageType> _storageType;

    /// <summary>
    /// Name of the storage account.
    /// </summary>
    public BicepValue<string> AccountName { get => _accountName; set => _accountName.Assign(value); }
    private readonly BicepValue<string> _accountName;

    /// <summary>
    /// Name of the file share (container name, for Blob storage).
    /// </summary>
    public BicepValue<string> ShareName { get => _shareName; set => _shareName.Assign(value); }
    private readonly BicepValue<string> _shareName;

    /// <summary>
    /// Access key for the storage account.
    /// </summary>
    public BicepValue<string> AccessKey { get => _accessKey; set => _accessKey.Assign(value); }
    private readonly BicepValue<string> _accessKey;

    /// <summary>
    /// Path to mount the storage within the site&apos;s runtime environment.
    /// </summary>
    public BicepValue<string> MountPath { get => _mountPath; set => _mountPath.Assign(value); }
    private readonly BicepValue<string> _mountPath;

    /// <summary>
    /// State of the storage account.
    /// </summary>
    public BicepValue<AppServiceStorageAccountState> State { get => _state; }
    private readonly BicepValue<AppServiceStorageAccountState> _state;

    /// <summary>
    /// Mounting protocol to use for the storage account.
    /// </summary>
    public BicepValue<AppServiceStorageProtocol> Protocol { get => _protocol; set => _protocol.Assign(value); }
    private readonly BicepValue<AppServiceStorageProtocol> _protocol;

    /// <summary>
    /// Creates a new AppServiceStorageAccessInfo.
    /// </summary>
    public AppServiceStorageAccessInfo()
    {
        _storageType = BicepValue<AppServiceStorageType>.DefineProperty(this, "StorageType", ["type"]);
        _accountName = BicepValue<string>.DefineProperty(this, "AccountName", ["accountName"]);
        _shareName = BicepValue<string>.DefineProperty(this, "ShareName", ["shareName"]);
        _accessKey = BicepValue<string>.DefineProperty(this, "AccessKey", ["accessKey"]);
        _mountPath = BicepValue<string>.DefineProperty(this, "MountPath", ["mountPath"]);
        _state = BicepValue<AppServiceStorageAccountState>.DefineProperty(this, "State", ["state"], isOutput: true);
        _protocol = BicepValue<AppServiceStorageProtocol>.DefineProperty(this, "Protocol", ["protocol"]);
    }
}
