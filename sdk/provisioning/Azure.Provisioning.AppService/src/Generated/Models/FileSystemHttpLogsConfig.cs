// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.AppService;

/// <summary>
/// Http logs to file system configuration.
/// </summary>
public partial class FileSystemHttpLogsConfig : ProvisioningConstruct
{
    /// <summary>
    /// Maximum size in megabytes that http log files can use.             When
    /// reached old log files will be removed to make space for new ones.
    /// Value can range between 25 and 100.
    /// </summary>
    public BicepValue<int> RetentionInMb { get => _retentionInMb; set => _retentionInMb.Assign(value); }
    private readonly BicepValue<int> _retentionInMb;

    /// <summary>
    /// Retention in days.             Remove files older than X days.
    /// 0 or lower means no retention.
    /// </summary>
    public BicepValue<int> RetentionInDays { get => _retentionInDays; set => _retentionInDays.Assign(value); }
    private readonly BicepValue<int> _retentionInDays;

    /// <summary>
    /// True if configuration is enabled, false if it is disabled and null if
    /// configuration is not set.
    /// </summary>
    public BicepValue<bool> IsEnabled { get => _isEnabled; set => _isEnabled.Assign(value); }
    private readonly BicepValue<bool> _isEnabled;

    /// <summary>
    /// Creates a new FileSystemHttpLogsConfig.
    /// </summary>
    public FileSystemHttpLogsConfig()
    {
        _retentionInMb = BicepValue<int>.DefineProperty(this, "RetentionInMb", ["retentionInMb"]);
        _retentionInDays = BicepValue<int>.DefineProperty(this, "RetentionInDays", ["retentionInDays"]);
        _isEnabled = BicepValue<bool>.DefineProperty(this, "IsEnabled", ["enabled"]);
    }
}
