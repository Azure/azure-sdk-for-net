// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.AppService;

/// <summary>
/// Virtual application in an app.
/// </summary>
public partial class VirtualApplication : ProvisioningConstruct
{
    /// <summary>
    /// Virtual path.
    /// </summary>
    public BicepValue<string> VirtualPath { get => _virtualPath; set => _virtualPath.Assign(value); }
    private readonly BicepValue<string> _virtualPath;

    /// <summary>
    /// Physical path.
    /// </summary>
    public BicepValue<string> PhysicalPath { get => _physicalPath; set => _physicalPath.Assign(value); }
    private readonly BicepValue<string> _physicalPath;

    /// <summary>
    /// &lt;code&gt;true&lt;/code&gt; if preloading is enabled; otherwise,
    /// &lt;code&gt;false&lt;/code&gt;.
    /// </summary>
    public BicepValue<bool> IsPreloadEnabled { get => _isPreloadEnabled; set => _isPreloadEnabled.Assign(value); }
    private readonly BicepValue<bool> _isPreloadEnabled;

    /// <summary>
    /// Virtual directories for virtual application.
    /// </summary>
    public BicepList<VirtualDirectory> VirtualDirectories { get => _virtualDirectories; set => _virtualDirectories.Assign(value); }
    private readonly BicepList<VirtualDirectory> _virtualDirectories;

    /// <summary>
    /// Creates a new VirtualApplication.
    /// </summary>
    public VirtualApplication()
    {
        _virtualPath = BicepValue<string>.DefineProperty(this, "VirtualPath", ["virtualPath"]);
        _physicalPath = BicepValue<string>.DefineProperty(this, "PhysicalPath", ["physicalPath"]);
        _isPreloadEnabled = BicepValue<bool>.DefineProperty(this, "IsPreloadEnabled", ["preloadEnabled"]);
        _virtualDirectories = BicepList<VirtualDirectory>.DefineProperty(this, "VirtualDirectories", ["virtualDirectories"]);
    }
}
