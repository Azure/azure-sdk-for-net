// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.AppService;

/// <summary>
/// The configuration settings of the HTTP requests for authentication and
/// authorization requests made against App Service
/// Authentication/Authorization.
/// </summary>
public partial class AppServiceHttpSettings : ProvisionableConstruct
{
    /// <summary>
    /// &lt;code&gt;false&lt;/code&gt; if the authentication/authorization
    /// responses not having the HTTPS scheme are permissible; otherwise,
    /// &lt;code&gt;true&lt;/code&gt;.
    /// </summary>
    public BicepValue<bool> IsHttpsRequired 
    {
        get { Initialize(); return _isHttpsRequired!; }
        set { Initialize(); _isHttpsRequired!.Assign(value); }
    }
    private BicepValue<bool>? _isHttpsRequired;

    /// <summary>
    /// The prefix that should precede all the authentication/authorization
    /// paths.
    /// </summary>
    public BicepValue<string> RoutesApiPrefix 
    {
        get { Initialize(); return _routesApiPrefix!; }
        set { Initialize(); _routesApiPrefix!.Assign(value); }
    }
    private BicepValue<string>? _routesApiPrefix;

    /// <summary>
    /// The configuration settings of a forward proxy used to make the requests.
    /// </summary>
    public AppServiceForwardProxy ForwardProxy 
    {
        get { Initialize(); return _forwardProxy!; }
        set { Initialize(); AssignOrReplace(ref _forwardProxy, value); }
    }
    private AppServiceForwardProxy? _forwardProxy;

    /// <summary>
    /// Creates a new AppServiceHttpSettings.
    /// </summary>
    public AppServiceHttpSettings()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of AppServiceHttpSettings.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _isHttpsRequired = DefineProperty<bool>("IsHttpsRequired", ["requireHttps"]);
        _routesApiPrefix = DefineProperty<string>("RoutesApiPrefix", ["routes", "apiPrefix"]);
        _forwardProxy = DefineModelProperty<AppServiceForwardProxy>("ForwardProxy", ["forwardProxy"]);
    }
}
