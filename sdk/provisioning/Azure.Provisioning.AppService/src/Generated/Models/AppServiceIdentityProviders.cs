// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.AppService;

/// <summary>
/// The configuration settings of each of the identity providers used to
/// configure App Service Authentication/Authorization.
/// </summary>
public partial class AppServiceIdentityProviders : ProvisionableConstruct
{
    /// <summary>
    /// The configuration settings of the Azure Active directory provider.
    /// </summary>
    public AppServiceAadProvider AzureActiveDirectory 
    {
        get { Initialize(); return _azureActiveDirectory!; }
        set { Initialize(); AssignOrReplace(ref _azureActiveDirectory, value); }
    }
    private AppServiceAadProvider? _azureActiveDirectory;

    /// <summary>
    /// The configuration settings of the Facebook provider.
    /// </summary>
    public AppServiceFacebookProvider Facebook 
    {
        get { Initialize(); return _facebook!; }
        set { Initialize(); AssignOrReplace(ref _facebook, value); }
    }
    private AppServiceFacebookProvider? _facebook;

    /// <summary>
    /// The configuration settings of the GitHub provider.
    /// </summary>
    public AppServiceGitHubProvider GitHub 
    {
        get { Initialize(); return _gitHub!; }
        set { Initialize(); AssignOrReplace(ref _gitHub, value); }
    }
    private AppServiceGitHubProvider? _gitHub;

    /// <summary>
    /// The configuration settings of the Google provider.
    /// </summary>
    public AppServiceGoogleProvider Google 
    {
        get { Initialize(); return _google!; }
        set { Initialize(); AssignOrReplace(ref _google, value); }
    }
    private AppServiceGoogleProvider? _google;

    /// <summary>
    /// The configuration settings of the legacy Microsoft Account provider.
    /// </summary>
    public LegacyMicrosoftAccount LegacyMicrosoftAccount 
    {
        get { Initialize(); return _legacyMicrosoftAccount!; }
        set { Initialize(); AssignOrReplace(ref _legacyMicrosoftAccount, value); }
    }
    private LegacyMicrosoftAccount? _legacyMicrosoftAccount;

    /// <summary>
    /// The configuration settings of the Twitter provider.
    /// </summary>
    public AppServiceTwitterProvider Twitter 
    {
        get { Initialize(); return _twitter!; }
        set { Initialize(); AssignOrReplace(ref _twitter, value); }
    }
    private AppServiceTwitterProvider? _twitter;

    /// <summary>
    /// The configuration settings of the Apple provider.
    /// </summary>
    public AppServiceAppleProvider Apple 
    {
        get { Initialize(); return _apple!; }
        set { Initialize(); AssignOrReplace(ref _apple, value); }
    }
    private AppServiceAppleProvider? _apple;

    /// <summary>
    /// The configuration settings of the Azure Static Web Apps provider.
    /// </summary>
    public AppServiceStaticWebAppsProvider AzureStaticWebApps 
    {
        get { Initialize(); return _azureStaticWebApps!; }
        set { Initialize(); AssignOrReplace(ref _azureStaticWebApps, value); }
    }
    private AppServiceStaticWebAppsProvider? _azureStaticWebApps;

    /// <summary>
    /// The map of the name of the alias of each custom Open ID Connect
    /// provider to the             configuration settings of the custom Open
    /// ID Connect provider.
    /// </summary>
    public BicepDictionary<CustomOpenIdConnectProvider> CustomOpenIdConnectProviders 
    {
        get { Initialize(); return _customOpenIdConnectProviders!; }
        set { Initialize(); _customOpenIdConnectProviders!.Assign(value); }
    }
    private BicepDictionary<CustomOpenIdConnectProvider>? _customOpenIdConnectProviders;

    /// <summary>
    /// Creates a new AppServiceIdentityProviders.
    /// </summary>
    public AppServiceIdentityProviders()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of AppServiceIdentityProviders.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _azureActiveDirectory = DefineModelProperty<AppServiceAadProvider>("AzureActiveDirectory", ["azureActiveDirectory"]);
        _facebook = DefineModelProperty<AppServiceFacebookProvider>("Facebook", ["facebook"]);
        _gitHub = DefineModelProperty<AppServiceGitHubProvider>("GitHub", ["gitHub"]);
        _google = DefineModelProperty<AppServiceGoogleProvider>("Google", ["google"]);
        _legacyMicrosoftAccount = DefineModelProperty<LegacyMicrosoftAccount>("LegacyMicrosoftAccount", ["legacyMicrosoftAccount"]);
        _twitter = DefineModelProperty<AppServiceTwitterProvider>("Twitter", ["twitter"]);
        _apple = DefineModelProperty<AppServiceAppleProvider>("Apple", ["apple"]);
        _azureStaticWebApps = DefineModelProperty<AppServiceStaticWebAppsProvider>("AzureStaticWebApps", ["azureStaticWebApps"]);
        _customOpenIdConnectProviders = DefineDictionaryProperty<CustomOpenIdConnectProvider>("CustomOpenIdConnectProviders", ["customOpenIdConnectProviders"]);
    }
}
