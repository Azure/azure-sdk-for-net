// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.AppService;

/// <summary>
/// Trigger based on request execution time.
/// </summary>
public partial class SlowRequestsBasedTrigger : ProvisioningConstruct
{
    /// <summary>
    /// Time taken.
    /// </summary>
    public BicepValue<string> TimeTaken { get => _timeTaken; set => _timeTaken.Assign(value); }
    private readonly BicepValue<string> _timeTaken;

    /// <summary>
    /// Request Path.
    /// </summary>
    public BicepValue<string> Path { get => _path; set => _path.Assign(value); }
    private readonly BicepValue<string> _path;

    /// <summary>
    /// Request Count.
    /// </summary>
    public BicepValue<int> Count { get => _count; set => _count.Assign(value); }
    private readonly BicepValue<int> _count;

    /// <summary>
    /// Time interval.
    /// </summary>
    public BicepValue<string> TimeInterval { get => _timeInterval; set => _timeInterval.Assign(value); }
    private readonly BicepValue<string> _timeInterval;

    /// <summary>
    /// Creates a new SlowRequestsBasedTrigger.
    /// </summary>
    public SlowRequestsBasedTrigger()
    {
        _timeTaken = BicepValue<string>.DefineProperty(this, "TimeTaken", ["timeTaken"]);
        _path = BicepValue<string>.DefineProperty(this, "Path", ["path"]);
        _count = BicepValue<int>.DefineProperty(this, "Count", ["count"]);
        _timeInterval = BicepValue<string>.DefineProperty(this, "TimeInterval", ["timeInterval"]);
    }
}
