// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.AppService;

/// <summary>
/// Authentication method to access the storage account for deployment.
/// </summary>
public partial class FunctionAppStorageAuthentication : ProvisioningConstruct
{
    /// <summary>
    /// Property to select authentication type to access the selected storage
    /// account. Available options: SystemAssignedIdentity,
    /// UserAssignedIdentity, StorageAccountConnectionString.
    /// </summary>
    public BicepValue<FunctionAppStorageAccountAuthenticationType> AuthenticationType { get => _authenticationType; set => _authenticationType.Assign(value); }
    private readonly BicepValue<FunctionAppStorageAccountAuthenticationType> _authenticationType;

    /// <summary>
    /// Use this property for UserAssignedIdentity. Set the resource ID of the
    /// identity. Do not set a value for this property when using other
    /// authentication type.
    /// </summary>
    public BicepValue<string> UserAssignedIdentityResourceId { get => _userAssignedIdentityResourceId; set => _userAssignedIdentityResourceId.Assign(value); }
    private readonly BicepValue<string> _userAssignedIdentityResourceId;

    /// <summary>
    /// Use this property for StorageAccountConnectionString. Set the name of
    /// the app setting that has the storage account connection string. Do not
    /// set a value for this property when using other authentication type.
    /// </summary>
    public BicepValue<string> StorageAccountConnectionStringName { get => _storageAccountConnectionStringName; set => _storageAccountConnectionStringName.Assign(value); }
    private readonly BicepValue<string> _storageAccountConnectionStringName;

    /// <summary>
    /// Creates a new FunctionAppStorageAuthentication.
    /// </summary>
    public FunctionAppStorageAuthentication()
    {
        _authenticationType = BicepValue<FunctionAppStorageAccountAuthenticationType>.DefineProperty(this, "AuthenticationType", ["type"]);
        _userAssignedIdentityResourceId = BicepValue<string>.DefineProperty(this, "UserAssignedIdentityResourceId", ["userAssignedIdentityResourceId"]);
        _storageAccountConnectionStringName = BicepValue<string>.DefineProperty(this, "StorageAccountConnectionStringName", ["storageAccountConnectionStringName"]);
    }
}
