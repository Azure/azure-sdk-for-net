// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Core;
using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.AppService;

/// <summary>
/// Description of a Virtual Network that is useable for private site access.
/// </summary>
public partial class PrivateAccessVirtualNetwork : ProvisioningConstruct
{
    /// <summary>
    /// The name of the Virtual Network.
    /// </summary>
    public BicepValue<string> Name { get => _name; set => _name.Assign(value); }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// The key (ID) of the Virtual Network.
    /// </summary>
    public BicepValue<int> Key { get => _key; set => _key.Assign(value); }
    private readonly BicepValue<int> _key;

    /// <summary>
    /// The ARM uri of the Virtual Network.
    /// </summary>
    public BicepValue<ResourceIdentifier> ResourceId { get => _resourceId; set => _resourceId.Assign(value); }
    private readonly BicepValue<ResourceIdentifier> _resourceId;

    /// <summary>
    /// A List of subnets that access is allowed to on this Virtual Network. An
    /// empty array (but not null) is interpreted to mean that all subnets are
    /// allowed within this Virtual Network.
    /// </summary>
    public BicepList<PrivateAccessSubnet> Subnets { get => _subnets; set => _subnets.Assign(value); }
    private readonly BicepList<PrivateAccessSubnet> _subnets;

    /// <summary>
    /// Creates a new PrivateAccessVirtualNetwork.
    /// </summary>
    public PrivateAccessVirtualNetwork()
    {
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"]);
        _key = BicepValue<int>.DefineProperty(this, "Key", ["key"]);
        _resourceId = BicepValue<ResourceIdentifier>.DefineProperty(this, "ResourceId", ["resourceId"]);
        _subnets = BicepList<PrivateAccessSubnet>.DefineProperty(this, "Subnets", ["subnets"]);
    }
}
