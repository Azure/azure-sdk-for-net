// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Core;
using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.AppService;

/// <summary>
/// Information needed for cloning operation.
/// </summary>
public partial class CloningInfo : ProvisioningConstruct
{
    /// <summary>
    /// Correlation ID of cloning operation. This ID ties multiple cloning
    /// operations             together to use the same snapshot.
    /// </summary>
    public BicepValue<Guid> CorrelationId { get => _correlationId; set => _correlationId.Assign(value); }
    private readonly BicepValue<Guid> _correlationId;

    /// <summary>
    /// &lt;code&gt;true&lt;/code&gt; to overwrite destination app; otherwise,
    /// &lt;code&gt;false&lt;/code&gt;.
    /// </summary>
    public BicepValue<bool> CanOverwrite { get => _canOverwrite; set => _canOverwrite.Assign(value); }
    private readonly BicepValue<bool> _canOverwrite;

    /// <summary>
    /// &lt;code&gt;true&lt;/code&gt; to clone custom hostnames from source
    /// app; otherwise, &lt;code&gt;false&lt;/code&gt;.
    /// </summary>
    public BicepValue<bool> CloneCustomHostNames { get => _cloneCustomHostNames; set => _cloneCustomHostNames.Assign(value); }
    private readonly BicepValue<bool> _cloneCustomHostNames;

    /// <summary>
    /// &lt;code&gt;true&lt;/code&gt; to clone source control from source app;
    /// otherwise, &lt;code&gt;false&lt;/code&gt;.
    /// </summary>
    public BicepValue<bool> CloneSourceControl { get => _cloneSourceControl; set => _cloneSourceControl.Assign(value); }
    private readonly BicepValue<bool> _cloneSourceControl;

    /// <summary>
    /// ARM resource ID of the source app. App resource ID is of the form
    /// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}
    /// for production slots and
    /// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName}
    /// for other slots.
    /// </summary>
    public BicepValue<ResourceIdentifier> SourceWebAppId { get => _sourceWebAppId; set => _sourceWebAppId.Assign(value); }
    private readonly BicepValue<ResourceIdentifier> _sourceWebAppId;

    /// <summary>
    /// Location of source app ex: West US or North Europe.
    /// </summary>
    public BicepValue<AzureLocation> SourceWebAppLocation { get => _sourceWebAppLocation; set => _sourceWebAppLocation.Assign(value); }
    private readonly BicepValue<AzureLocation> _sourceWebAppLocation;

    /// <summary>
    /// App Service Environment.
    /// </summary>
    public BicepValue<string> HostingEnvironment { get => _hostingEnvironment; set => _hostingEnvironment.Assign(value); }
    private readonly BicepValue<string> _hostingEnvironment;

    /// <summary>
    /// Application setting overrides for cloned app. If specified, these
    /// settings override the settings cloned             from source app.
    /// Otherwise, application settings from source app are retained.
    /// </summary>
    public BicepDictionary<string> AppSettingsOverrides { get => _appSettingsOverrides; set => _appSettingsOverrides.Assign(value); }
    private readonly BicepDictionary<string> _appSettingsOverrides;

    /// <summary>
    /// &lt;code&gt;true&lt;/code&gt; to configure load balancing for source
    /// and destination app.
    /// </summary>
    public BicepValue<bool> ConfigureLoadBalancing { get => _configureLoadBalancing; set => _configureLoadBalancing.Assign(value); }
    private readonly BicepValue<bool> _configureLoadBalancing;

    /// <summary>
    /// ARM resource ID of the Traffic Manager profile to use, if it exists.
    /// Traffic Manager resource ID is of the form
    /// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
    /// </summary>
    public BicepValue<ResourceIdentifier> TrafficManagerProfileId { get => _trafficManagerProfileId; set => _trafficManagerProfileId.Assign(value); }
    private readonly BicepValue<ResourceIdentifier> _trafficManagerProfileId;

    /// <summary>
    /// Name of Traffic Manager profile to create. This is only needed if
    /// Traffic Manager profile does not already exist.
    /// </summary>
    public BicepValue<string> TrafficManagerProfileName { get => _trafficManagerProfileName; set => _trafficManagerProfileName.Assign(value); }
    private readonly BicepValue<string> _trafficManagerProfileName;

    /// <summary>
    /// Creates a new CloningInfo.
    /// </summary>
    public CloningInfo()
    {
        _correlationId = BicepValue<Guid>.DefineProperty(this, "CorrelationId", ["correlationId"]);
        _canOverwrite = BicepValue<bool>.DefineProperty(this, "CanOverwrite", ["overwrite"]);
        _cloneCustomHostNames = BicepValue<bool>.DefineProperty(this, "CloneCustomHostNames", ["cloneCustomHostNames"]);
        _cloneSourceControl = BicepValue<bool>.DefineProperty(this, "CloneSourceControl", ["cloneSourceControl"]);
        _sourceWebAppId = BicepValue<ResourceIdentifier>.DefineProperty(this, "SourceWebAppId", ["sourceWebAppId"]);
        _sourceWebAppLocation = BicepValue<AzureLocation>.DefineProperty(this, "SourceWebAppLocation", ["sourceWebAppLocation"]);
        _hostingEnvironment = BicepValue<string>.DefineProperty(this, "HostingEnvironment", ["hostingEnvironment"]);
        _appSettingsOverrides = BicepDictionary<string>.DefineProperty(this, "AppSettingsOverrides", ["appSettingsOverrides"]);
        _configureLoadBalancing = BicepValue<bool>.DefineProperty(this, "ConfigureLoadBalancing", ["configureLoadBalancing"]);
        _trafficManagerProfileId = BicepValue<ResourceIdentifier>.DefineProperty(this, "TrafficManagerProfileId", ["trafficManagerProfileId"]);
        _trafficManagerProfileName = BicepValue<string>.DefineProperty(this, "TrafficManagerProfileName", ["trafficManagerProfileName"]);
    }
}
