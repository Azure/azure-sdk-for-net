// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.AppService;

/// <summary>
/// The SiteContainerVolumeMount.
/// </summary>
public partial class SiteContainerVolumeMount : ProvisioningConstruct
{
    /// <summary>
    /// Sub path in the volume where volume is mounted from.
    /// </summary>
    public BicepValue<string> VolumeSubPath { get => _volumeSubPath; set => _volumeSubPath.Assign(value); }
    private readonly BicepValue<string> _volumeSubPath;

    /// <summary>
    /// Target path on the container where volume is mounted on.
    /// </summary>
    public BicepValue<string> ContainerMountPath { get => _containerMountPath; set => _containerMountPath.Assign(value); }
    private readonly BicepValue<string> _containerMountPath;

    /// <summary>
    /// Config Data to be mounted on the volume.
    /// </summary>
    public BicepValue<string> Data { get => _data; set => _data.Assign(value); }
    private readonly BicepValue<string> _data;

    /// <summary>
    /// Boolean to specify if the mount is read only on the container.
    /// </summary>
    public BicepValue<bool> IsReadOnly { get => _isReadOnly; set => _isReadOnly.Assign(value); }
    private readonly BicepValue<bool> _isReadOnly;

    /// <summary>
    /// Creates a new SiteContainerVolumeMount.
    /// </summary>
    public SiteContainerVolumeMount()
    {
        _volumeSubPath = BicepValue<string>.DefineProperty(this, "VolumeSubPath", ["volumeSubPath"]);
        _containerMountPath = BicepValue<string>.DefineProperty(this, "ContainerMountPath", ["containerMountPath"]);
        _data = BicepValue<string>.DefineProperty(this, "Data", ["data"]);
        _isReadOnly = BicepValue<bool>.DefineProperty(this, "IsReadOnly", ["readOnly"]);
    }
}
