// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.AppService;

/// <summary>
/// Trigger based on status code.
/// </summary>
public partial class StatusCodesBasedTrigger : ProvisioningConstruct
{
    /// <summary>
    /// HTTP status code.
    /// </summary>
    public BicepValue<int> Status { get => _status; set => _status.Assign(value); }
    private readonly BicepValue<int> _status;

    /// <summary>
    /// Request Sub Status.
    /// </summary>
    public BicepValue<int> SubStatus { get => _subStatus; set => _subStatus.Assign(value); }
    private readonly BicepValue<int> _subStatus;

    /// <summary>
    /// Win32 error code.
    /// </summary>
    public BicepValue<int> Win32Status { get => _win32Status; set => _win32Status.Assign(value); }
    private readonly BicepValue<int> _win32Status;

    /// <summary>
    /// Request Count.
    /// </summary>
    public BicepValue<int> Count { get => _count; set => _count.Assign(value); }
    private readonly BicepValue<int> _count;

    /// <summary>
    /// Time interval.
    /// </summary>
    public BicepValue<string> TimeInterval { get => _timeInterval; set => _timeInterval.Assign(value); }
    private readonly BicepValue<string> _timeInterval;

    /// <summary>
    /// Request Path.
    /// </summary>
    public BicepValue<string> Path { get => _path; set => _path.Assign(value); }
    private readonly BicepValue<string> _path;

    /// <summary>
    /// Creates a new StatusCodesBasedTrigger.
    /// </summary>
    public StatusCodesBasedTrigger()
    {
        _status = BicepValue<int>.DefineProperty(this, "Status", ["status"]);
        _subStatus = BicepValue<int>.DefineProperty(this, "SubStatus", ["subStatus"]);
        _win32Status = BicepValue<int>.DefineProperty(this, "Win32Status", ["win32Status"]);
        _count = BicepValue<int>.DefineProperty(this, "Count", ["count"]);
        _timeInterval = BicepValue<string>.DefineProperty(this, "TimeInterval", ["timeInterval"]);
        _path = BicepValue<string>.DefineProperty(this, "Path", ["path"]);
    }
}
