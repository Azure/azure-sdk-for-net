// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Core;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.AppService;

/// <summary>
/// Key Vault container for a certificate that is purchased through Azure.
/// </summary>
public partial class AppServiceCertificateProperties : ProvisioningConstruct
{
    /// <summary>
    /// Key Vault resource Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> KeyVaultId { get => _keyVaultId; set => _keyVaultId.Assign(value); }
    private readonly BicepValue<ResourceIdentifier> _keyVaultId;

    /// <summary>
    /// Key Vault secret name.
    /// </summary>
    public BicepValue<string> KeyVaultSecretName { get => _keyVaultSecretName; set => _keyVaultSecretName.Assign(value); }
    private readonly BicepValue<string> _keyVaultSecretName;

    /// <summary>
    /// Status of the Key Vault secret.
    /// </summary>
    public BicepValue<KeyVaultSecretStatus> ProvisioningState { get => _provisioningState; }
    private readonly BicepValue<KeyVaultSecretStatus> _provisioningState;

    /// <summary>
    /// Creates a new AppServiceCertificateProperties.
    /// </summary>
    public AppServiceCertificateProperties()
    {
        _keyVaultId = BicepValue<ResourceIdentifier>.DefineProperty(this, "KeyVaultId", ["keyVaultId"]);
        _keyVaultSecretName = BicepValue<string>.DefineProperty(this, "KeyVaultSecretName", ["keyVaultSecretName"]);
        _provisioningState = BicepValue<KeyVaultSecretStatus>.DefineProperty(this, "ProvisioningState", ["provisioningState"], isOutput: true);
    }
}
