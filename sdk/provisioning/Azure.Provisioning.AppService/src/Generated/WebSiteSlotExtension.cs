// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;

namespace Azure.Provisioning.AppService;

/// <summary>
/// WebSiteSlotExtension.
/// </summary>
public partial class WebSiteSlotExtension : Resource
{
    /// <summary>
    /// Gets the Name.
    /// </summary>
    public BicepValue<string> Name { get => _name; }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// List of authors.
    /// </summary>
    public BicepList<string> Authors { get => _authors; }
    private readonly BicepList<string> _authors;

    /// <summary>
    /// Site Extension comment.
    /// </summary>
    public BicepValue<string> Comment { get => _comment; }
    private readonly BicepValue<string> _comment;

    /// <summary>
    /// Detailed description.
    /// </summary>
    public BicepValue<string> Description { get => _description; }
    private readonly BicepValue<string> _description;

    /// <summary>
    /// Count of downloads.
    /// </summary>
    public BicepValue<int> DownloadCount { get => _downloadCount; }
    private readonly BicepValue<int> _downloadCount;

    /// <summary>
    /// Site extension ID.
    /// </summary>
    public BicepValue<string> ExtensionId { get => _extensionId; }
    private readonly BicepValue<string> _extensionId;

    /// <summary>
    /// Site extension type.
    /// </summary>
    public BicepValue<SiteExtensionType> ExtensionType { get => _extensionType; }
    private readonly BicepValue<SiteExtensionType> _extensionType;

    /// <summary>
    /// Extension URL.
    /// </summary>
    public BicepValue<Uri> ExtensionUri { get => _extensionUri; }
    private readonly BicepValue<Uri> _extensionUri;

    /// <summary>
    /// Feed URL.
    /// </summary>
    public BicepValue<Uri> FeedUri { get => _feedUri; }
    private readonly BicepValue<Uri> _feedUri;

    /// <summary>
    /// Icon URL.
    /// </summary>
    public BicepValue<Uri> IconUri { get => _iconUri; }
    private readonly BicepValue<Uri> _iconUri;

    /// <summary>
    /// Gets the Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id { get => _id; }
    private readonly BicepValue<ResourceIdentifier> _id;

    /// <summary>
    /// Installed timestamp.
    /// </summary>
    public BicepValue<DateTimeOffset> InstalledOn { get => _installedOn; }
    private readonly BicepValue<DateTimeOffset> _installedOn;

    /// <summary>
    /// Installer command line parameters.
    /// </summary>
    public BicepValue<string> InstallerCommandLineParams { get => _installerCommandLineParams; }
    private readonly BicepValue<string> _installerCommandLineParams;

    /// <summary>
    /// Kind of resource.
    /// </summary>
    public BicepValue<string> Kind { get => _kind; }
    private readonly BicepValue<string> _kind;

    /// <summary>
    /// License URL.
    /// </summary>
    public BicepValue<Uri> LicenseUri { get => _licenseUri; }
    private readonly BicepValue<Uri> _licenseUri;

    /// <summary>
    /// &lt;code&gt;true&lt;/code&gt; if the local version is the latest
    /// version; &lt;code&gt;false&lt;/code&gt; otherwise.
    /// </summary>
    public BicepValue<bool> LocalIsLatestVersion { get => _localIsLatestVersion; }
    private readonly BicepValue<bool> _localIsLatestVersion;

    /// <summary>
    /// Local path.
    /// </summary>
    public BicepValue<string> LocalPath { get => _localPath; }
    private readonly BicepValue<string> _localPath;

    /// <summary>
    /// Project URL.
    /// </summary>
    public BicepValue<Uri> ProjectUri { get => _projectUri; }
    private readonly BicepValue<Uri> _projectUri;

    /// <summary>
    /// Provisioning state.
    /// </summary>
    public BicepValue<string> ProvisioningState { get => _provisioningState; }
    private readonly BicepValue<string> _provisioningState;

    /// <summary>
    /// Published timestamp.
    /// </summary>
    public BicepValue<DateTimeOffset> PublishedOn { get => _publishedOn; }
    private readonly BicepValue<DateTimeOffset> _publishedOn;

    /// <summary>
    /// Summary description.
    /// </summary>
    public BicepValue<string> Summary { get => _summary; }
    private readonly BicepValue<string> _summary;

    /// <summary>
    /// Gets the SystemData.
    /// </summary>
    public BicepValue<SystemData> SystemData { get => _systemData; }
    private readonly BicepValue<SystemData> _systemData;

    /// <summary>
    /// Gets or sets the title.
    /// </summary>
    public BicepValue<string> Title { get => _title; }
    private readonly BicepValue<string> _title;

    /// <summary>
    /// Version information.
    /// </summary>
    public BicepValue<string> Version { get => _version; }
    private readonly BicepValue<string> _version;

    /// <summary>
    /// Gets or sets a reference to the parent WebSiteSlot.
    /// </summary>
    public WebSiteSlot? Parent { get => _parent!.Value; set => _parent!.Value = value; }
    private readonly ResourceReference<WebSiteSlot> _parent;

    /// <summary>
    /// Creates a new WebSiteSlotExtension.
    /// </summary>
    /// <param name="resourceName">Name of the WebSiteSlotExtension.</param>
    /// <param name="resourceVersion">Version of the WebSiteSlotExtension.</param>
    public WebSiteSlotExtension(string resourceName, string? resourceVersion = default)
        : base(resourceName, "Microsoft.Web/sites/slots/siteextensions", resourceVersion ?? "2024-04-01")
    {
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"], isOutput: true);
        _authors = BicepList<string>.DefineProperty(this, "Authors", ["properties", "authors"], isOutput: true);
        _comment = BicepValue<string>.DefineProperty(this, "Comment", ["properties", "comment"], isOutput: true);
        _description = BicepValue<string>.DefineProperty(this, "Description", ["properties", "description"], isOutput: true);
        _downloadCount = BicepValue<int>.DefineProperty(this, "DownloadCount", ["properties", "download_count"], isOutput: true);
        _extensionId = BicepValue<string>.DefineProperty(this, "ExtensionId", ["properties", "extension_id"], isOutput: true);
        _extensionType = BicepValue<SiteExtensionType>.DefineProperty(this, "ExtensionType", ["properties", "extension_type"], isOutput: true);
        _extensionUri = BicepValue<Uri>.DefineProperty(this, "ExtensionUri", ["properties", "extension_url"], isOutput: true);
        _feedUri = BicepValue<Uri>.DefineProperty(this, "FeedUri", ["properties", "feed_url"], isOutput: true);
        _iconUri = BicepValue<Uri>.DefineProperty(this, "IconUri", ["properties", "icon_url"], isOutput: true);
        _id = BicepValue<ResourceIdentifier>.DefineProperty(this, "Id", ["id"], isOutput: true);
        _installedOn = BicepValue<DateTimeOffset>.DefineProperty(this, "InstalledOn", ["properties", "installed_date_time"], isOutput: true);
        _installerCommandLineParams = BicepValue<string>.DefineProperty(this, "InstallerCommandLineParams", ["properties", "installer_command_line_params"], isOutput: true);
        _kind = BicepValue<string>.DefineProperty(this, "Kind", ["kind"], isOutput: true);
        _licenseUri = BicepValue<Uri>.DefineProperty(this, "LicenseUri", ["properties", "license_url"], isOutput: true);
        _localIsLatestVersion = BicepValue<bool>.DefineProperty(this, "LocalIsLatestVersion", ["properties", "local_is_latest_version"], isOutput: true);
        _localPath = BicepValue<string>.DefineProperty(this, "LocalPath", ["properties", "local_path"], isOutput: true);
        _projectUri = BicepValue<Uri>.DefineProperty(this, "ProjectUri", ["properties", "project_url"], isOutput: true);
        _provisioningState = BicepValue<string>.DefineProperty(this, "ProvisioningState", ["properties", "provisioningState"], isOutput: true);
        _publishedOn = BicepValue<DateTimeOffset>.DefineProperty(this, "PublishedOn", ["properties", "published_date_time"], isOutput: true);
        _summary = BicepValue<string>.DefineProperty(this, "Summary", ["properties", "summary"], isOutput: true);
        _systemData = BicepValue<SystemData>.DefineProperty(this, "SystemData", ["systemData"], isOutput: true);
        _title = BicepValue<string>.DefineProperty(this, "Title", ["properties", "title"], isOutput: true);
        _version = BicepValue<string>.DefineProperty(this, "Version", ["properties", "version"], isOutput: true);
        _parent = ResourceReference<WebSiteSlot>.DefineResource(this, "Parent", ["parent"], isRequired: true);
    }

    /// <summary>
    /// Supported WebSiteSlotExtension resource versions.
    /// </summary>
    public static class ResourceVersions
    {
        /// <summary>
        /// 2024-04-01.
        /// </summary>
        public static readonly string V2024_04_01 = "2024-04-01";

        /// <summary>
        /// 2023-12-01.
        /// </summary>
        public static readonly string V2023_12_01 = "2023-12-01";

        /// <summary>
        /// 2023-01-01.
        /// </summary>
        public static readonly string V2023_01_01 = "2023-01-01";

        /// <summary>
        /// 2022-09-01.
        /// </summary>
        public static readonly string V2022_09_01 = "2022-09-01";

        /// <summary>
        /// 2022-03-01.
        /// </summary>
        public static readonly string V2022_03_01 = "2022-03-01";

        /// <summary>
        /// 2021-03-01.
        /// </summary>
        public static readonly string V2021_03_01 = "2021-03-01";

        /// <summary>
        /// 2021-02-01.
        /// </summary>
        public static readonly string V2021_02_01 = "2021-02-01";

        /// <summary>
        /// 2021-01-15.
        /// </summary>
        public static readonly string V2021_01_15 = "2021-01-15";

        /// <summary>
        /// 2021-01-01.
        /// </summary>
        public static readonly string V2021_01_01 = "2021-01-01";

        /// <summary>
        /// 2020-12-01.
        /// </summary>
        public static readonly string V2020_12_01 = "2020-12-01";

        /// <summary>
        /// 2020-10-01.
        /// </summary>
        public static readonly string V2020_10_01 = "2020-10-01";

        /// <summary>
        /// 2020-09-01.
        /// </summary>
        public static readonly string V2020_09_01 = "2020-09-01";

        /// <summary>
        /// 2020-06-01.
        /// </summary>
        public static readonly string V2020_06_01 = "2020-06-01";

        /// <summary>
        /// 2019-08-01.
        /// </summary>
        public static readonly string V2019_08_01 = "2019-08-01";

        /// <summary>
        /// 2018-11-01.
        /// </summary>
        public static readonly string V2018_11_01 = "2018-11-01";

        /// <summary>
        /// 2018-02-01.
        /// </summary>
        public static readonly string V2018_02_01 = "2018-02-01";

        /// <summary>
        /// 2017-08-01.
        /// </summary>
        public static readonly string V2017_08_01 = "2017-08-01";

        /// <summary>
        /// 2016-09-01.
        /// </summary>
        public static readonly string V2016_09_01 = "2016-09-01";

        /// <summary>
        /// 2016-08-01.
        /// </summary>
        public static readonly string V2016_08_01 = "2016-08-01";

        /// <summary>
        /// 2016-03-01.
        /// </summary>
        public static readonly string V2016_03_01 = "2016-03-01";

        /// <summary>
        /// 2015-11-01.
        /// </summary>
        public static readonly string V2015_11_01 = "2015-11-01";

        /// <summary>
        /// 2015-08-01.
        /// </summary>
        public static readonly string V2015_08_01 = "2015-08-01";

        /// <summary>
        /// 2015-07-01.
        /// </summary>
        public static readonly string V2015_07_01 = "2015-07-01";

        /// <summary>
        /// 2015-06-01.
        /// </summary>
        public static readonly string V2015_06_01 = "2015-06-01";

        /// <summary>
        /// 2015-05-01.
        /// </summary>
        public static readonly string V2015_05_01 = "2015-05-01";

        /// <summary>
        /// 2015-04-01.
        /// </summary>
        public static readonly string V2015_04_01 = "2015-04-01";

        /// <summary>
        /// 2015-02-01.
        /// </summary>
        public static readonly string V2015_02_01 = "2015-02-01";

        /// <summary>
        /// 2015-01-01.
        /// </summary>
        public static readonly string V2015_01_01 = "2015-01-01";

        /// <summary>
        /// 2014-11-01.
        /// </summary>
        public static readonly string V2014_11_01 = "2014-11-01";

        /// <summary>
        /// 2014-06-01.
        /// </summary>
        public static readonly string V2014_06_01 = "2014-06-01";

        /// <summary>
        /// 2014-04-01.
        /// </summary>
        public static readonly string V2014_04_01 = "2014-04-01";
    }

    /// <summary>
    /// Creates a reference to an existing WebSiteSlotExtension.
    /// </summary>
    /// <param name="resourceName">Name of the WebSiteSlotExtension.</param>
    /// <param name="resourceVersion">Version of the WebSiteSlotExtension.</param>
    /// <returns>The existing WebSiteSlotExtension resource.</returns>
    public static WebSiteSlotExtension FromExisting(string resourceName, string? resourceVersion = default) =>
        new(resourceName, resourceVersion) { IsExistingResource = true };
}
