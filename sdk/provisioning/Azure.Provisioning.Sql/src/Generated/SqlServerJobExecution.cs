// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;

namespace Azure.Provisioning.Sql;

/// <summary>
/// SqlServerJobExecution.
/// </summary>
public partial class SqlServerJobExecution : Resource
{
    /// <summary>
    /// Gets the Name.
    /// </summary>
    public BicepValue<string> Name { get => _name; }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// The time that the job execution was created.
    /// </summary>
    public BicepValue<DateTimeOffset> CreateOn { get => _createOn; }
    private readonly BicepValue<DateTimeOffset> _createOn;

    /// <summary>
    /// Number of times the job execution has been attempted.
    /// </summary>
    public BicepValue<int> CurrentAttempts { get => _currentAttempts; }
    private readonly BicepValue<int> _currentAttempts;

    /// <summary>
    /// Start time of the current attempt.
    /// </summary>
    public BicepValue<DateTimeOffset> CurrentAttemptStartOn { get => _currentAttemptStartOn; }
    private readonly BicepValue<DateTimeOffset> _currentAttemptStartOn;

    /// <summary>
    /// The time that the job execution completed.
    /// </summary>
    public BicepValue<DateTimeOffset> EndOn { get => _endOn; }
    private readonly BicepValue<DateTimeOffset> _endOn;

    /// <summary>
    /// Gets the Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id { get => _id; }
    private readonly BicepValue<ResourceIdentifier> _id;

    /// <summary>
    /// The unique identifier of the job execution.
    /// </summary>
    public BicepValue<Guid> JobExecutionId { get => _jobExecutionId; }
    private readonly BicepValue<Guid> _jobExecutionId;

    /// <summary>
    /// The job version number.
    /// </summary>
    public BicepValue<int> JobVersion { get => _jobVersion; }
    private readonly BicepValue<int> _jobVersion;

    /// <summary>
    /// The last status or error message.
    /// </summary>
    public BicepValue<string> LastMessage { get => _lastMessage; }
    private readonly BicepValue<string> _lastMessage;

    /// <summary>
    /// The detailed state of the job execution.
    /// </summary>
    public BicepValue<JobExecutionLifecycle> Lifecycle { get => _lifecycle; }
    private readonly BicepValue<JobExecutionLifecycle> _lifecycle;

    /// <summary>
    /// The ARM provisioning state of the job execution.
    /// </summary>
    public BicepValue<JobExecutionProvisioningState> ProvisioningState { get => _provisioningState; }
    private readonly BicepValue<JobExecutionProvisioningState> _provisioningState;

    /// <summary>
    /// The time that the job execution started.
    /// </summary>
    public BicepValue<DateTimeOffset> StartOn { get => _startOn; }
    private readonly BicepValue<DateTimeOffset> _startOn;

    /// <summary>
    /// The job step id.
    /// </summary>
    public BicepValue<int> StepId { get => _stepId; }
    private readonly BicepValue<int> _stepId;

    /// <summary>
    /// The job step name.
    /// </summary>
    public BicepValue<string> StepName { get => _stepName; }
    private readonly BicepValue<string> _stepName;

    /// <summary>
    /// Gets the SystemData.
    /// </summary>
    public BicepValue<SystemData> SystemData { get => _systemData; }
    private readonly BicepValue<SystemData> _systemData;

    /// <summary>
    /// The target that this execution is executed on.
    /// </summary>
    public BicepValue<JobExecutionTarget> Target { get => _target; }
    private readonly BicepValue<JobExecutionTarget> _target;

    /// <summary>
    /// Gets or sets a reference to the parent SqlServerJob.
    /// </summary>
    public SqlServerJob? Parent { get => _parent!.Value; set => _parent!.Value = value; }
    private readonly ResourceReference<SqlServerJob> _parent;

    /// <summary>
    /// Creates a new SqlServerJobExecution.
    /// </summary>
    /// <param name="resourceName">Name of the SqlServerJobExecution.</param>
    /// <param name="resourceVersion">Version of the SqlServerJobExecution.</param>
    public SqlServerJobExecution(string resourceName, string? resourceVersion = default)
        : base(resourceName, "Microsoft.Sql/servers/jobAgents/jobs/executions", resourceVersion ?? "2021-11-01")
    {
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"], isOutput: true);
        _createOn = BicepValue<DateTimeOffset>.DefineProperty(this, "CreateOn", ["properties", "createTime"], isOutput: true);
        _currentAttempts = BicepValue<int>.DefineProperty(this, "CurrentAttempts", ["properties", "currentAttempts"], isOutput: true);
        _currentAttemptStartOn = BicepValue<DateTimeOffset>.DefineProperty(this, "CurrentAttemptStartOn", ["properties", "currentAttemptStartTime"], isOutput: true);
        _endOn = BicepValue<DateTimeOffset>.DefineProperty(this, "EndOn", ["properties", "endTime"], isOutput: true);
        _id = BicepValue<ResourceIdentifier>.DefineProperty(this, "Id", ["id"], isOutput: true);
        _jobExecutionId = BicepValue<Guid>.DefineProperty(this, "JobExecutionId", ["properties", "jobExecutionId"], isOutput: true);
        _jobVersion = BicepValue<int>.DefineProperty(this, "JobVersion", ["properties", "jobVersion"], isOutput: true);
        _lastMessage = BicepValue<string>.DefineProperty(this, "LastMessage", ["properties", "lastMessage"], isOutput: true);
        _lifecycle = BicepValue<JobExecutionLifecycle>.DefineProperty(this, "Lifecycle", ["properties", "lifecycle"], isOutput: true);
        _provisioningState = BicepValue<JobExecutionProvisioningState>.DefineProperty(this, "ProvisioningState", ["properties", "provisioningState"], isOutput: true);
        _startOn = BicepValue<DateTimeOffset>.DefineProperty(this, "StartOn", ["properties", "startTime"], isOutput: true);
        _stepId = BicepValue<int>.DefineProperty(this, "StepId", ["properties", "stepId"], isOutput: true);
        _stepName = BicepValue<string>.DefineProperty(this, "StepName", ["properties", "stepName"], isOutput: true);
        _systemData = BicepValue<SystemData>.DefineProperty(this, "SystemData", ["systemData"], isOutput: true);
        _target = BicepValue<JobExecutionTarget>.DefineProperty(this, "Target", ["properties", "target"], isOutput: true);
        _parent = ResourceReference<SqlServerJob>.DefineResource(this, "Parent", ["parent"], isRequired: true);
    }

    /// <summary>
    /// Supported SqlServerJobExecution resource versions.
    /// </summary>
    public static class ResourceVersions
    {
        /// <summary>
        /// 2024-05-01-preview.
        /// </summary>
        public static readonly string V2024_05_01_preview = "2024-05-01-preview";

        /// <summary>
        /// 2021-11-01.
        /// </summary>
        public static readonly string V2021_11_01 = "2021-11-01";
    }

    /// <summary>
    /// Creates a reference to an existing SqlServerJobExecution.
    /// </summary>
    /// <param name="resourceName">Name of the SqlServerJobExecution.</param>
    /// <param name="resourceVersion">Version of the SqlServerJobExecution.</param>
    /// <returns>The existing SqlServerJobExecution resource.</returns>
    public static SqlServerJobExecution FromExisting(string resourceName, string? resourceVersion = default) =>
        new(resourceName, resourceVersion) { IsExistingResource = true };
}
