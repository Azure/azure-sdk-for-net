// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;

namespace Azure.Provisioning.Sql;

/// <summary>
/// ManagedInstanceStartStopSchedule.
/// </summary>
public partial class ManagedInstanceStartStopSchedule : Resource
{
    /// <summary>
    /// Gets the Name.
    /// </summary>
    public BicepValue<string> Name { get => _name; }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// The description of the schedule.
    /// </summary>
    public BicepValue<string> Description { get => _description; set => _description.Assign(value); }
    private readonly BicepValue<string> _description;

    /// <summary>
    /// Schedule list.
    /// </summary>
    public BicepList<SqlScheduleItem> ScheduleList { get => _scheduleList; set => _scheduleList.Assign(value); }
    private readonly BicepList<SqlScheduleItem> _scheduleList;

    /// <summary>
    /// The time zone of the schedule.
    /// </summary>
    public BicepValue<string> TimeZoneId { get => _timeZoneId; set => _timeZoneId.Assign(value); }
    private readonly BicepValue<string> _timeZoneId;

    /// <summary>
    /// Gets the Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id { get => _id; }
    private readonly BicepValue<ResourceIdentifier> _id;

    /// <summary>
    /// Timestamp when the next action will be executed in the corresponding
    /// schedule time zone.
    /// </summary>
    public BicepValue<string> NextExecutionTime { get => _nextExecutionTime; }
    private readonly BicepValue<string> _nextExecutionTime;

    /// <summary>
    /// Next action to be executed (Start or Stop).
    /// </summary>
    public BicepValue<string> NextRunAction { get => _nextRunAction; }
    private readonly BicepValue<string> _nextRunAction;

    /// <summary>
    /// Gets the SystemData.
    /// </summary>
    public BicepValue<SystemData> SystemData { get => _systemData; }
    private readonly BicepValue<SystemData> _systemData;

    /// <summary>
    /// Gets or sets a reference to the parent ManagedInstance.
    /// </summary>
    public ManagedInstance? Parent { get => _parent!.Value; set => _parent!.Value = value; }
    private readonly ResourceReference<ManagedInstance> _parent;

    /// <summary>
    /// Creates a new ManagedInstanceStartStopSchedule.
    /// </summary>
    /// <param name="resourceName">Name of the ManagedInstanceStartStopSchedule.</param>
    /// <param name="resourceVersion">Version of the ManagedInstanceStartStopSchedule.</param>
    public ManagedInstanceStartStopSchedule(string resourceName, string? resourceVersion = default)
        : base(resourceName, "Microsoft.Sql/managedInstances/startStopSchedules", resourceVersion ?? "2021-11-01")
    {
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"], isOutput: true);
        _description = BicepValue<string>.DefineProperty(this, "Description", ["properties", "description"]);
        _scheduleList = BicepList<SqlScheduleItem>.DefineProperty(this, "ScheduleList", ["properties", "scheduleList"]);
        _timeZoneId = BicepValue<string>.DefineProperty(this, "TimeZoneId", ["properties", "timeZoneId"]);
        _id = BicepValue<ResourceIdentifier>.DefineProperty(this, "Id", ["id"], isOutput: true);
        _nextExecutionTime = BicepValue<string>.DefineProperty(this, "NextExecutionTime", ["properties", "nextExecutionTime"], isOutput: true);
        _nextRunAction = BicepValue<string>.DefineProperty(this, "NextRunAction", ["properties", "nextRunAction"], isOutput: true);
        _systemData = BicepValue<SystemData>.DefineProperty(this, "SystemData", ["systemData"], isOutput: true);
        _parent = ResourceReference<ManagedInstance>.DefineResource(this, "Parent", ["parent"], isRequired: true);
    }

    /// <summary>
    /// Supported ManagedInstanceStartStopSchedule resource versions.
    /// </summary>
    public static class ResourceVersions
    {
        /// <summary>
        /// 2024-05-01-preview.
        /// </summary>
        public static readonly string V2024_05_01_preview = "2024-05-01-preview";

        /// <summary>
        /// 2021-11-01.
        /// </summary>
        public static readonly string V2021_11_01 = "2021-11-01";
    }

    /// <summary>
    /// Creates a reference to an existing ManagedInstanceStartStopSchedule.
    /// </summary>
    /// <param name="resourceName">Name of the ManagedInstanceStartStopSchedule.</param>
    /// <param name="resourceVersion">Version of the ManagedInstanceStartStopSchedule.</param>
    /// <returns>The existing ManagedInstanceStartStopSchedule resource.</returns>
    public static ManagedInstanceStartStopSchedule FromExisting(string resourceName, string? resourceVersion = default) =>
        new(resourceName, resourceVersion) { IsExistingResource = true };
}
