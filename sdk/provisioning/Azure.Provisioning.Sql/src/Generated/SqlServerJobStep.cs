// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;

namespace Azure.Provisioning.Sql;

/// <summary>
/// SqlServerJobStep.
/// </summary>
public partial class SqlServerJobStep : Resource
{
    /// <summary>
    /// The name of the job step.
    /// </summary>
    public BicepValue<string> Name { get => _name; set => _name.Assign(value); }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// The action payload of the job step.
    /// </summary>
    public BicepValue<JobStepAction> Action { get => _action; set => _action.Assign(value); }
    private readonly BicepValue<JobStepAction> _action;

    /// <summary>
    /// The resource ID of the job credential that will be used to connect to
    /// the targets.
    /// </summary>
    public BicepValue<string> Credential { get => _credential; set => _credential.Assign(value); }
    private readonly BicepValue<string> _credential;

    /// <summary>
    /// Execution options for the job step.
    /// </summary>
    public BicepValue<JobStepExecutionOptions> ExecutionOptions { get => _executionOptions; set => _executionOptions.Assign(value); }
    private readonly BicepValue<JobStepExecutionOptions> _executionOptions;

    /// <summary>
    /// Output destination properties of the job step.
    /// </summary>
    public BicepValue<JobStepOutput> Output { get => _output; set => _output.Assign(value); }
    private readonly BicepValue<JobStepOutput> _output;

    /// <summary>
    /// The job step&apos;s index within the job. If not specified when
    /// creating the job step, it will be created as the last step. If not
    /// specified when updating the job step, the step id is not modified.
    /// </summary>
    public BicepValue<int> StepId { get => _stepId; set => _stepId.Assign(value); }
    private readonly BicepValue<int> _stepId;

    /// <summary>
    /// The resource ID of the target group that the job step will be executed
    /// on.
    /// </summary>
    public BicepValue<string> TargetGroup { get => _targetGroup; set => _targetGroup.Assign(value); }
    private readonly BicepValue<string> _targetGroup;

    /// <summary>
    /// Gets the Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id { get => _id; }
    private readonly BicepValue<ResourceIdentifier> _id;

    /// <summary>
    /// Gets the SystemData.
    /// </summary>
    public BicepValue<SystemData> SystemData { get => _systemData; }
    private readonly BicepValue<SystemData> _systemData;

    /// <summary>
    /// Gets or sets a reference to the parent SqlServerJob.
    /// </summary>
    public SqlServerJob? Parent { get => _parent!.Value; set => _parent!.Value = value; }
    private readonly ResourceReference<SqlServerJob> _parent;

    /// <summary>
    /// Creates a new SqlServerJobStep.
    /// </summary>
    /// <param name="resourceName">Name of the SqlServerJobStep.</param>
    /// <param name="resourceVersion">Version of the SqlServerJobStep.</param>
    public SqlServerJobStep(string resourceName, string? resourceVersion = default)
        : base(resourceName, "Microsoft.Sql/servers/jobAgents/jobs/steps", resourceVersion ?? "2021-11-01")
    {
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"], isRequired: true);
        _action = BicepValue<JobStepAction>.DefineProperty(this, "Action", ["properties", "action"]);
        _credential = BicepValue<string>.DefineProperty(this, "Credential", ["properties", "credential"]);
        _executionOptions = BicepValue<JobStepExecutionOptions>.DefineProperty(this, "ExecutionOptions", ["properties", "executionOptions"]);
        _output = BicepValue<JobStepOutput>.DefineProperty(this, "Output", ["properties", "output"]);
        _stepId = BicepValue<int>.DefineProperty(this, "StepId", ["properties", "stepId"]);
        _targetGroup = BicepValue<string>.DefineProperty(this, "TargetGroup", ["properties", "targetGroup"]);
        _id = BicepValue<ResourceIdentifier>.DefineProperty(this, "Id", ["id"], isOutput: true);
        _systemData = BicepValue<SystemData>.DefineProperty(this, "SystemData", ["systemData"], isOutput: true);
        _parent = ResourceReference<SqlServerJob>.DefineResource(this, "Parent", ["parent"], isRequired: true);
    }

    /// <summary>
    /// Supported SqlServerJobStep resource versions.
    /// </summary>
    public static class ResourceVersions
    {
        /// <summary>
        /// 2024-05-01-preview.
        /// </summary>
        public static readonly string V2024_05_01_preview = "2024-05-01-preview";

        /// <summary>
        /// 2021-11-01.
        /// </summary>
        public static readonly string V2021_11_01 = "2021-11-01";
    }

    /// <summary>
    /// Creates a reference to an existing SqlServerJobStep.
    /// </summary>
    /// <param name="resourceName">Name of the SqlServerJobStep.</param>
    /// <param name="resourceVersion">Version of the SqlServerJobStep.</param>
    /// <returns>The existing SqlServerJobStep resource.</returns>
    public static SqlServerJobStep FromExisting(string resourceName, string? resourceVersion = default) =>
        new(resourceName, resourceVersion) { IsExistingResource = true };
}
