// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;

namespace Azure.Provisioning.Sql;

/// <summary>
/// SqlDistributedAvailabilityGroup.
/// </summary>
public partial class SqlDistributedAvailabilityGroup : ProvisionableResource
{
    /// <summary>
    /// The distributed availability group name.
    /// </summary>
    public BicepValue<string> Name 
    {
        get { Initialize(); return _name!; }
        set { Initialize(); _name!.Assign(value); }
    }
    private BicepValue<string>? _name;

    /// <summary>
    /// Databases in the distributed availability group.
    /// </summary>
    public BicepList<DistributedAvailabilityGroupDatabase> Databases 
    {
        get { Initialize(); return _databases!; }
        set { Initialize(); _databases!.Assign(value); }
    }
    private BicepList<DistributedAvailabilityGroupDatabase>? _databases;

    /// <summary>
    /// The link failover mode - can be Manual if intended to be used for
    /// two-way failover with a supported SQL Server, or None for one-way
    /// failover to Azure.
    /// </summary>
    public BicepValue<SqlServerFailoverModeType> FailoverMode 
    {
        get { Initialize(); return _failoverMode!; }
        set { Initialize(); _failoverMode!.Assign(value); }
    }
    private BicepValue<SqlServerFailoverModeType>? _failoverMode;

    /// <summary>
    /// Managed instance side availability group name.
    /// </summary>
    public BicepValue<string> InstanceAvailabilityGroupName 
    {
        get { Initialize(); return _instanceAvailabilityGroupName!; }
        set { Initialize(); _instanceAvailabilityGroupName!.Assign(value); }
    }
    private BicepValue<string>? _instanceAvailabilityGroupName;

    /// <summary>
    /// Managed instance side link role.
    /// </summary>
    public BicepValue<SqlServerSideLinkRole> InstanceLinkRole 
    {
        get { Initialize(); return _instanceLinkRole!; }
        set { Initialize(); _instanceLinkRole!.Assign(value); }
    }
    private BicepValue<SqlServerSideLinkRole>? _instanceLinkRole;

    /// <summary>
    /// SQL server side availability group name.
    /// </summary>
    public BicepValue<string> PartnerAvailabilityGroupName 
    {
        get { Initialize(); return _partnerAvailabilityGroupName!; }
        set { Initialize(); _partnerAvailabilityGroupName!.Assign(value); }
    }
    private BicepValue<string>? _partnerAvailabilityGroupName;

    /// <summary>
    /// SQL server side endpoint - IP or DNS resolvable name.
    /// </summary>
    public BicepValue<string> PartnerEndpoint 
    {
        get { Initialize(); return _partnerEndpoint!; }
        set { Initialize(); _partnerEndpoint!.Assign(value); }
    }
    private BicepValue<string>? _partnerEndpoint;

    /// <summary>
    /// Replication mode of the link.
    /// </summary>
    public BicepValue<SqlReplicationModeType> ReplicationMode 
    {
        get { Initialize(); return _replicationMode!; }
        set { Initialize(); _replicationMode!.Assign(value); }
    }
    private BicepValue<SqlReplicationModeType>? _replicationMode;

    /// <summary>
    /// Database seeding mode â€“ can be Automatic (default), or Manual for
    /// supported scenarios.
    /// </summary>
    public BicepValue<SeedingModeType> SeedingMode 
    {
        get { Initialize(); return _seedingMode!; }
        set { Initialize(); _seedingMode!.Assign(value); }
    }
    private BicepValue<SeedingModeType>? _seedingMode;

    /// <summary>
    /// ID of the distributed availability group.
    /// </summary>
    public BicepValue<Guid> DistributedAvailabilityGroupId 
    {
        get { Initialize(); return _distributedAvailabilityGroupId!; }
    }
    private BicepValue<Guid>? _distributedAvailabilityGroupId;

    /// <summary>
    /// Name of the distributed availability group.
    /// </summary>
    public BicepValue<string> DistributedAvailabilityGroupName 
    {
        get { Initialize(); return _distributedAvailabilityGroupName!; }
    }
    private BicepValue<string>? _distributedAvailabilityGroupName;

    /// <summary>
    /// Gets the Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id 
    {
        get { Initialize(); return _id!; }
    }
    private BicepValue<ResourceIdentifier>? _id;

    /// <summary>
    /// SQL server side link role.
    /// </summary>
    public BicepValue<SqlServerSideLinkRole> PartnerLinkRole 
    {
        get { Initialize(); return _partnerLinkRole!; }
    }
    private BicepValue<SqlServerSideLinkRole>? _partnerLinkRole;

    /// <summary>
    /// Gets the SystemData.
    /// </summary>
    public SystemData SystemData 
    {
        get { Initialize(); return _systemData!; }
    }
    private SystemData? _systemData;

    /// <summary>
    /// Gets or sets a reference to the parent ManagedInstance.
    /// </summary>
    public ManagedInstance? Parent
    {
        get { Initialize(); return _parent!.Value; }
        set { Initialize(); _parent!.Value = value; }
    }
    private ResourceReference<ManagedInstance>? _parent;

    /// <summary>
    /// Creates a new SqlDistributedAvailabilityGroup.
    /// </summary>
    /// <param name="bicepIdentifier">
    /// The the Bicep identifier name of the SqlDistributedAvailabilityGroup
    /// resource.  This can be used to refer to the resource in expressions,
    /// but is not the Azure name of the resource.  This value can contain
    /// letters, numbers, and underscores.
    /// </param>
    /// <param name="resourceVersion">Version of the SqlDistributedAvailabilityGroup.</param>
    public SqlDistributedAvailabilityGroup(string bicepIdentifier, string? resourceVersion = default)
        : base(bicepIdentifier, "Microsoft.Sql/managedInstances/distributedAvailabilityGroups", resourceVersion ?? "2023-08-01")
    {
    }

    /// <summary>
    /// Define all the provisionable properties of
    /// SqlDistributedAvailabilityGroup.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        _name = DefineProperty<string>("Name", ["name"], isRequired: true);
        _databases = DefineListProperty<DistributedAvailabilityGroupDatabase>("Databases", ["properties", "databases"]);
        _failoverMode = DefineProperty<SqlServerFailoverModeType>("FailoverMode", ["properties", "failoverMode"]);
        _instanceAvailabilityGroupName = DefineProperty<string>("InstanceAvailabilityGroupName", ["properties", "instanceAvailabilityGroupName"]);
        _instanceLinkRole = DefineProperty<SqlServerSideLinkRole>("InstanceLinkRole", ["properties", "instanceLinkRole"]);
        _partnerAvailabilityGroupName = DefineProperty<string>("PartnerAvailabilityGroupName", ["properties", "partnerAvailabilityGroupName"]);
        _partnerEndpoint = DefineProperty<string>("PartnerEndpoint", ["properties", "partnerEndpoint"]);
        _replicationMode = DefineProperty<SqlReplicationModeType>("ReplicationMode", ["properties", "replicationMode"]);
        _seedingMode = DefineProperty<SeedingModeType>("SeedingMode", ["properties", "seedingMode"]);
        _distributedAvailabilityGroupId = DefineProperty<Guid>("DistributedAvailabilityGroupId", ["properties", "distributedAvailabilityGroupId"], isOutput: true);
        _distributedAvailabilityGroupName = DefineProperty<string>("DistributedAvailabilityGroupName", ["properties", "distributedAvailabilityGroupName"], isOutput: true);
        _id = DefineProperty<ResourceIdentifier>("Id", ["id"], isOutput: true);
        _partnerLinkRole = DefineProperty<SqlServerSideLinkRole>("PartnerLinkRole", ["properties", "partnerLinkRole"], isOutput: true);
        _systemData = DefineModelProperty<SystemData>("SystemData", ["systemData"], isOutput: true);
        _parent = DefineResource<ManagedInstance>("Parent", ["parent"], isRequired: true);
    }

    /// <summary>
    /// Supported SqlDistributedAvailabilityGroup resource versions.
    /// </summary>
    public static class ResourceVersions
    {
        /// <summary>
        /// 2023-08-01.
        /// </summary>
        public static readonly string V2023_08_01 = "2023-08-01";

        /// <summary>
        /// 2021-11-01.
        /// </summary>
        public static readonly string V2021_11_01 = "2021-11-01";
    }

    /// <summary>
    /// Creates a reference to an existing SqlDistributedAvailabilityGroup.
    /// </summary>
    /// <param name="bicepIdentifier">
    /// The the Bicep identifier name of the SqlDistributedAvailabilityGroup
    /// resource.  This can be used to refer to the resource in expressions,
    /// but is not the Azure name of the resource.  This value can contain
    /// letters, numbers, and underscores.
    /// </param>
    /// <param name="resourceVersion">Version of the SqlDistributedAvailabilityGroup.</param>
    /// <returns>The existing SqlDistributedAvailabilityGroup resource.</returns>
    public static SqlDistributedAvailabilityGroup FromExisting(string bicepIdentifier, string? resourceVersion = default) =>
        new(bicepIdentifier, resourceVersion) { IsExistingResource = true };
}
