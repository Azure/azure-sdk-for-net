// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.Sql;

/// <summary>
/// The Security Settings of managed instance DTC.
/// </summary>
public partial class ManagedInstanceDtcSecuritySettings : ProvisioningConstruct
{
    /// <summary>
    /// Transaction Manager communication settings of managed instance DTC.
    /// </summary>
    public BicepValue<ManagedInstanceDtcTransactionManagerCommunicationSettings> TransactionManagerCommunicationSettings { get => _transactionManagerCommunicationSettings; set => _transactionManagerCommunicationSettings.Assign(value); }
    private readonly BicepValue<ManagedInstanceDtcTransactionManagerCommunicationSettings> _transactionManagerCommunicationSettings;

    /// <summary>
    /// Allow XA Transactions to managed instance DTC.
    /// </summary>
    public BicepValue<bool> IsXATransactionsEnabled { get => _isXATransactionsEnabled; set => _isXATransactionsEnabled.Assign(value); }
    private readonly BicepValue<bool> _isXATransactionsEnabled;

    /// <summary>
    /// Allow SNA LU 6.2 Transactions to managed instance DTC.
    /// </summary>
    public BicepValue<bool> SnaLu6Point2TransactionsEnabled { get => _snaLu6Point2TransactionsEnabled; set => _snaLu6Point2TransactionsEnabled.Assign(value); }
    private readonly BicepValue<bool> _snaLu6Point2TransactionsEnabled;

    /// <summary>
    /// Default timeout for XA Transactions (in seconds).
    /// </summary>
    public BicepValue<int> XATransactionsDefaultTimeoutInSeconds { get => _xATransactionsDefaultTimeoutInSeconds; set => _xATransactionsDefaultTimeoutInSeconds.Assign(value); }
    private readonly BicepValue<int> _xATransactionsDefaultTimeoutInSeconds;

    /// <summary>
    /// Maximum timeout for XA Transactions (in seconds).
    /// </summary>
    public BicepValue<int> XATransactionsMaximumTimeoutInSeconds { get => _xATransactionsMaximumTimeoutInSeconds; set => _xATransactionsMaximumTimeoutInSeconds.Assign(value); }
    private readonly BicepValue<int> _xATransactionsMaximumTimeoutInSeconds;

    /// <summary>
    /// Creates a new ManagedInstanceDtcSecuritySettings.
    /// </summary>
    public ManagedInstanceDtcSecuritySettings()
    {
        _transactionManagerCommunicationSettings = BicepValue<ManagedInstanceDtcTransactionManagerCommunicationSettings>.DefineProperty(this, "TransactionManagerCommunicationSettings", ["transactionManagerCommunicationSettings"]);
        _isXATransactionsEnabled = BicepValue<bool>.DefineProperty(this, "IsXATransactionsEnabled", ["xaTransactionsEnabled"]);
        _snaLu6Point2TransactionsEnabled = BicepValue<bool>.DefineProperty(this, "SnaLu6Point2TransactionsEnabled", ["snaLu6point2TransactionsEnabled"]);
        _xATransactionsDefaultTimeoutInSeconds = BicepValue<int>.DefineProperty(this, "XATransactionsDefaultTimeoutInSeconds", ["xaTransactionsDefaultTimeout"]);
        _xATransactionsMaximumTimeoutInSeconds = BicepValue<int>.DefineProperty(this, "XATransactionsMaximumTimeoutInSeconds", ["xaTransactionsMaximumTimeout"]);
    }
}
