// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.Sql;

/// <summary>
/// The execution options of a job step.
/// </summary>
public partial class JobStepExecutionOptions : ProvisioningConstruct
{
    /// <summary>
    /// Execution timeout for the job step.
    /// </summary>
    public BicepValue<int> TimeoutSeconds { get => _timeoutSeconds; set => _timeoutSeconds.Assign(value); }
    private readonly BicepValue<int> _timeoutSeconds;

    /// <summary>
    /// Maximum number of times the job step will be reattempted if the first
    /// attempt fails.
    /// </summary>
    public BicepValue<int> RetryAttempts { get => _retryAttempts; set => _retryAttempts.Assign(value); }
    private readonly BicepValue<int> _retryAttempts;

    /// <summary>
    /// Initial delay between retries for job step execution.
    /// </summary>
    public BicepValue<int> InitialRetryIntervalSeconds { get => _initialRetryIntervalSeconds; set => _initialRetryIntervalSeconds.Assign(value); }
    private readonly BicepValue<int> _initialRetryIntervalSeconds;

    /// <summary>
    /// The maximum amount of time to wait between retries for job step
    /// execution.
    /// </summary>
    public BicepValue<int> MaximumRetryIntervalSeconds { get => _maximumRetryIntervalSeconds; set => _maximumRetryIntervalSeconds.Assign(value); }
    private readonly BicepValue<int> _maximumRetryIntervalSeconds;

    /// <summary>
    /// The backoff multiplier for the time between retries.
    /// </summary>
    public BicepValue<float> RetryIntervalBackoffMultiplier { get => _retryIntervalBackoffMultiplier; set => _retryIntervalBackoffMultiplier.Assign(value); }
    private readonly BicepValue<float> _retryIntervalBackoffMultiplier;

    /// <summary>
    /// Creates a new JobStepExecutionOptions.
    /// </summary>
    public JobStepExecutionOptions()
    {
        _timeoutSeconds = BicepValue<int>.DefineProperty(this, "TimeoutSeconds", ["timeoutSeconds"]);
        _retryAttempts = BicepValue<int>.DefineProperty(this, "RetryAttempts", ["retryAttempts"]);
        _initialRetryIntervalSeconds = BicepValue<int>.DefineProperty(this, "InitialRetryIntervalSeconds", ["initialRetryIntervalSeconds"]);
        _maximumRetryIntervalSeconds = BicepValue<int>.DefineProperty(this, "MaximumRetryIntervalSeconds", ["maximumRetryIntervalSeconds"]);
        _retryIntervalBackoffMultiplier = BicepValue<float>.DefineProperty(this, "RetryIntervalBackoffMultiplier", ["retryIntervalBackoffMultiplier"]);
    }
}
