// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;

namespace Azure.Provisioning.Sql;

/// <summary>
/// SqlServerDatabaseReplicationLink.
/// </summary>
public partial class SqlServerDatabaseReplicationLink : ProvisionableResource
{
    /// <summary>
    /// Gets the Name.
    /// </summary>
    public BicepValue<string> Name 
    {
        get { Initialize(); return _name!; }
    }
    private BicepValue<string>? _name;

    /// <summary>
    /// The System.String to use.
    /// </summary>
    public BicepValue<string> LinkId 
    {
        get { Initialize(); return _linkId!; }
        set { Initialize(); _linkId!.Assign(value); }
    }
    private BicepValue<string>? _linkId;

    /// <summary>
    /// Link type (GEO, NAMED, STANDBY). Update operation does not support
    /// NAMED.
    /// </summary>
    public BicepValue<ReplicationLinkType> LinkType 
    {
        get { Initialize(); return _linkType!; }
        set { Initialize(); _linkType!.Assign(value); }
    }
    private BicepValue<ReplicationLinkType>? _linkType;

    /// <summary>
    /// Gets the Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id 
    {
        get { Initialize(); return _id!; }
    }
    private BicepValue<ResourceIdentifier>? _id;

    /// <summary>
    /// Whether the user is currently allowed to terminate the link.
    /// </summary>
    public BicepValue<bool> IsTerminationAllowed 
    {
        get { Initialize(); return _isTerminationAllowed!; }
    }
    private BicepValue<bool>? _isTerminationAllowed;

    /// <summary>
    /// Resource partner database.
    /// </summary>
    public BicepValue<string> PartnerDatabase 
    {
        get { Initialize(); return _partnerDatabase!; }
    }
    private BicepValue<string>? _partnerDatabase;

    /// <summary>
    /// Resource partner database Id.
    /// </summary>
    public BicepValue<string> PartnerDatabaseId 
    {
        get { Initialize(); return _partnerDatabaseId!; }
    }
    private BicepValue<string>? _partnerDatabaseId;

    /// <summary>
    /// Resource partner location.
    /// </summary>
    public BicepValue<AzureLocation> PartnerLocation 
    {
        get { Initialize(); return _partnerLocation!; }
    }
    private BicepValue<AzureLocation>? _partnerLocation;

    /// <summary>
    /// Partner replication role.
    /// </summary>
    public BicepValue<SqlServerDatabaseReplicationRole> PartnerRole 
    {
        get { Initialize(); return _partnerRole!; }
    }
    private BicepValue<SqlServerDatabaseReplicationRole>? _partnerRole;

    /// <summary>
    /// Resource partner server.
    /// </summary>
    public BicepValue<string> PartnerServer 
    {
        get { Initialize(); return _partnerServer!; }
    }
    private BicepValue<string>? _partnerServer;

    /// <summary>
    /// Seeding completion percentage for the link.
    /// </summary>
    public BicepValue<int> PercentComplete 
    {
        get { Initialize(); return _percentComplete!; }
    }
    private BicepValue<int>? _percentComplete;

    /// <summary>
    /// Replication mode.
    /// </summary>
    public BicepValue<string> ReplicationMode 
    {
        get { Initialize(); return _replicationMode!; }
    }
    private BicepValue<string>? _replicationMode;

    /// <summary>
    /// Replication state (PENDING, SEEDING, CATCHUP, SUSPENDED).
    /// </summary>
    public BicepValue<ReplicationLinkState> ReplicationState 
    {
        get { Initialize(); return _replicationState!; }
    }
    private BicepValue<ReplicationLinkState>? _replicationState;

    /// <summary>
    /// Local replication role.
    /// </summary>
    public BicepValue<SqlServerDatabaseReplicationRole> Role 
    {
        get { Initialize(); return _role!; }
    }
    private BicepValue<SqlServerDatabaseReplicationRole>? _role;

    /// <summary>
    /// Time at which the link was created.
    /// </summary>
    public BicepValue<DateTimeOffset> StartOn 
    {
        get { Initialize(); return _startOn!; }
    }
    private BicepValue<DateTimeOffset>? _startOn;

    /// <summary>
    /// Gets the SystemData.
    /// </summary>
    public SystemData SystemData 
    {
        get { Initialize(); return _systemData!; }
    }
    private SystemData? _systemData;

    /// <summary>
    /// Gets or sets a reference to the parent SqlDatabase.
    /// </summary>
    public SqlDatabase? Parent
    {
        get { Initialize(); return _parent!.Value; }
        set { Initialize(); _parent!.Value = value; }
    }
    private ResourceReference<SqlDatabase>? _parent;

    /// <summary>
    /// Creates a new SqlServerDatabaseReplicationLink.
    /// </summary>
    /// <param name="bicepIdentifier">
    /// The the Bicep identifier name of the SqlServerDatabaseReplicationLink
    /// resource.  This can be used to refer to the resource in expressions,
    /// but is not the Azure name of the resource.  This value can contain
    /// letters, numbers, and underscores.
    /// </param>
    /// <param name="resourceVersion">Version of the SqlServerDatabaseReplicationLink.</param>
    public SqlServerDatabaseReplicationLink(string bicepIdentifier, string? resourceVersion = default)
        : base(bicepIdentifier, "Microsoft.Sql/servers/databases/replicationLinks", resourceVersion ?? "2023-08-01")
    {
    }

    /// <summary>
    /// Define all the provisionable properties of
    /// SqlServerDatabaseReplicationLink.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        _name = DefineProperty<string>("Name", ["name"], isOutput: true);
        _linkId = DefineProperty<string>("LinkId", ["LinkId"], isRequired: true);
        _linkType = DefineProperty<ReplicationLinkType>("LinkType", ["properties", "linkType"]);
        _id = DefineProperty<ResourceIdentifier>("Id", ["id"], isOutput: true);
        _isTerminationAllowed = DefineProperty<bool>("IsTerminationAllowed", ["properties", "isTerminationAllowed"], isOutput: true);
        _partnerDatabase = DefineProperty<string>("PartnerDatabase", ["properties", "partnerDatabase"], isOutput: true);
        _partnerDatabaseId = DefineProperty<string>("PartnerDatabaseId", ["properties", "partnerDatabaseId"], isOutput: true);
        _partnerLocation = DefineProperty<AzureLocation>("PartnerLocation", ["properties", "partnerLocation"], isOutput: true);
        _partnerRole = DefineProperty<SqlServerDatabaseReplicationRole>("PartnerRole", ["properties", "partnerRole"], isOutput: true);
        _partnerServer = DefineProperty<string>("PartnerServer", ["properties", "partnerServer"], isOutput: true);
        _percentComplete = DefineProperty<int>("PercentComplete", ["properties", "percentComplete"], isOutput: true);
        _replicationMode = DefineProperty<string>("ReplicationMode", ["properties", "replicationMode"], isOutput: true);
        _replicationState = DefineProperty<ReplicationLinkState>("ReplicationState", ["properties", "replicationState"], isOutput: true);
        _role = DefineProperty<SqlServerDatabaseReplicationRole>("Role", ["properties", "role"], isOutput: true);
        _startOn = DefineProperty<DateTimeOffset>("StartOn", ["properties", "startTime"], isOutput: true);
        _systemData = DefineModelProperty<SystemData>("SystemData", ["systemData"], isOutput: true);
        _parent = DefineResource<SqlDatabase>("Parent", ["parent"], isRequired: true);
    }

    /// <summary>
    /// Supported SqlServerDatabaseReplicationLink resource versions.
    /// </summary>
    public static class ResourceVersions
    {
        /// <summary>
        /// 2023-08-01.
        /// </summary>
        public static readonly string V2023_08_01 = "2023-08-01";

        /// <summary>
        /// 2021-11-01.
        /// </summary>
        public static readonly string V2021_11_01 = "2021-11-01";

        /// <summary>
        /// 2014-04-01.
        /// </summary>
        public static readonly string V2014_04_01 = "2014-04-01";

        /// <summary>
        /// 2014-01-01.
        /// </summary>
        public static readonly string V2014_01_01 = "2014-01-01";
    }

    /// <summary>
    /// Creates a reference to an existing SqlServerDatabaseReplicationLink.
    /// </summary>
    /// <param name="bicepIdentifier">
    /// The the Bicep identifier name of the SqlServerDatabaseReplicationLink
    /// resource.  This can be used to refer to the resource in expressions,
    /// but is not the Azure name of the resource.  This value can contain
    /// letters, numbers, and underscores.
    /// </param>
    /// <param name="resourceVersion">Version of the SqlServerDatabaseReplicationLink.</param>
    /// <returns>The existing SqlServerDatabaseReplicationLink resource.</returns>
    public static SqlServerDatabaseReplicationLink FromExisting(string bicepIdentifier, string? resourceVersion = default) =>
        new(bicepIdentifier, resourceVersion) { IsExistingResource = true };
}
