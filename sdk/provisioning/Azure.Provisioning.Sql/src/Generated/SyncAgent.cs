// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;

namespace Azure.Provisioning.Sql;

/// <summary>
/// SyncAgent.
/// </summary>
public partial class SyncAgent : Resource
{
    /// <summary>
    /// The name of the sync agent.
    /// </summary>
    public BicepValue<string> Name { get => _name; set => _name.Assign(value); }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// ARM resource id of the sync database in the sync agent.
    /// </summary>
    public BicepValue<ResourceIdentifier> SyncDatabaseId { get => _syncDatabaseId; set => _syncDatabaseId.Assign(value); }
    private readonly BicepValue<ResourceIdentifier> _syncDatabaseId;

    /// <summary>
    /// Expiration time of the sync agent version.
    /// </summary>
    public BicepValue<DateTimeOffset> ExpireOn { get => _expireOn; }
    private readonly BicepValue<DateTimeOffset> _expireOn;

    /// <summary>
    /// Gets the Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id { get => _id; }
    private readonly BicepValue<ResourceIdentifier> _id;

    /// <summary>
    /// If the sync agent version is up to date.
    /// </summary>
    public BicepValue<bool> IsUpToDate { get => _isUpToDate; }
    private readonly BicepValue<bool> _isUpToDate;

    /// <summary>
    /// Last alive time of the sync agent.
    /// </summary>
    public BicepValue<DateTimeOffset> LastAliveOn { get => _lastAliveOn; }
    private readonly BicepValue<DateTimeOffset> _lastAliveOn;

    /// <summary>
    /// State of the sync agent.
    /// </summary>
    public BicepValue<SyncAgentState> State { get => _state; }
    private readonly BicepValue<SyncAgentState> _state;

    /// <summary>
    /// Gets the SystemData.
    /// </summary>
    public BicepValue<SystemData> SystemData { get => _systemData; }
    private readonly BicepValue<SystemData> _systemData;

    /// <summary>
    /// Version of the sync agent.
    /// </summary>
    public BicepValue<string> Version { get => _version; }
    private readonly BicepValue<string> _version;

    /// <summary>
    /// Gets or sets a reference to the parent SqlServer.
    /// </summary>
    public SqlServer? Parent { get => _parent!.Value; set => _parent!.Value = value; }
    private readonly ResourceReference<SqlServer> _parent;

    /// <summary>
    /// Creates a new SyncAgent.
    /// </summary>
    /// <param name="resourceName">Name of the SyncAgent.</param>
    /// <param name="resourceVersion">Version of the SyncAgent.</param>
    public SyncAgent(string resourceName, string? resourceVersion = default)
        : base(resourceName, "Microsoft.Sql/servers/syncAgents", resourceVersion ?? "2021-11-01")
    {
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"], isRequired: true);
        _syncDatabaseId = BicepValue<ResourceIdentifier>.DefineProperty(this, "SyncDatabaseId", ["properties", "syncDatabaseId"]);
        _expireOn = BicepValue<DateTimeOffset>.DefineProperty(this, "ExpireOn", ["properties", "expiryTime"], isOutput: true);
        _id = BicepValue<ResourceIdentifier>.DefineProperty(this, "Id", ["id"], isOutput: true);
        _isUpToDate = BicepValue<bool>.DefineProperty(this, "IsUpToDate", ["properties", "isUpToDate"], isOutput: true);
        _lastAliveOn = BicepValue<DateTimeOffset>.DefineProperty(this, "LastAliveOn", ["properties", "lastAliveTime"], isOutput: true);
        _state = BicepValue<SyncAgentState>.DefineProperty(this, "State", ["properties", "state"], isOutput: true);
        _systemData = BicepValue<SystemData>.DefineProperty(this, "SystemData", ["systemData"], isOutput: true);
        _version = BicepValue<string>.DefineProperty(this, "Version", ["properties", "version"], isOutput: true);
        _parent = ResourceReference<SqlServer>.DefineResource(this, "Parent", ["parent"], isRequired: true);
    }

    /// <summary>
    /// Supported SyncAgent resource versions.
    /// </summary>
    public static class ResourceVersions
    {
        /// <summary>
        /// 2024-05-01-preview.
        /// </summary>
        public static readonly string V2024_05_01_preview = "2024-05-01-preview";

        /// <summary>
        /// 2021-11-01.
        /// </summary>
        public static readonly string V2021_11_01 = "2021-11-01";
    }

    /// <summary>
    /// Creates a reference to an existing SyncAgent.
    /// </summary>
    /// <param name="resourceName">Name of the SyncAgent.</param>
    /// <param name="resourceVersion">Version of the SyncAgent.</param>
    /// <returns>The existing SyncAgent resource.</returns>
    public static SyncAgent FromExisting(string resourceName, string? resourceVersion = default) =>
        new(resourceName, resourceVersion) { IsExistingResource = true };
}
