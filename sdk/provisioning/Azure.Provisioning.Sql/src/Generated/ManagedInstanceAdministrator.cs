// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;

namespace Azure.Provisioning.Sql;

/// <summary>
/// ManagedInstanceAdministrator.
/// </summary>
public partial class ManagedInstanceAdministrator : Resource
{
    /// <summary>
    /// Gets the Name.
    /// </summary>
    public BicepValue<string> Name { get => _name; }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// Type of the managed instance administrator.
    /// </summary>
    public BicepValue<ManagedInstanceAdministratorType> AdministratorType { get => _administratorType; set => _administratorType.Assign(value); }
    private readonly BicepValue<ManagedInstanceAdministratorType> _administratorType;

    /// <summary>
    /// Login name of the managed instance administrator.
    /// </summary>
    public BicepValue<string> Login { get => _login; set => _login.Assign(value); }
    private readonly BicepValue<string> _login;

    /// <summary>
    /// SID (object ID) of the managed instance administrator.
    /// </summary>
    public BicepValue<Guid> Sid { get => _sid; set => _sid.Assign(value); }
    private readonly BicepValue<Guid> _sid;

    /// <summary>
    /// Tenant ID of the managed instance administrator.
    /// </summary>
    public BicepValue<Guid> TenantId { get => _tenantId; set => _tenantId.Assign(value); }
    private readonly BicepValue<Guid> _tenantId;

    /// <summary>
    /// Gets the Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id { get => _id; }
    private readonly BicepValue<ResourceIdentifier> _id;

    /// <summary>
    /// Gets the SystemData.
    /// </summary>
    public BicepValue<SystemData> SystemData { get => _systemData; }
    private readonly BicepValue<SystemData> _systemData;

    /// <summary>
    /// Gets or sets a reference to the parent ManagedInstance.
    /// </summary>
    public ManagedInstance? Parent { get => _parent!.Value; set => _parent!.Value = value; }
    private readonly ResourceReference<ManagedInstance> _parent;

    /// <summary>
    /// Creates a new ManagedInstanceAdministrator.
    /// </summary>
    /// <param name="resourceName">Name of the ManagedInstanceAdministrator.</param>
    /// <param name="resourceVersion">Version of the ManagedInstanceAdministrator.</param>
    public ManagedInstanceAdministrator(string resourceName, string? resourceVersion = default)
        : base(resourceName, "Microsoft.Sql/managedInstances/administrators", resourceVersion ?? "2021-11-01")
    {
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"], isOutput: true);
        _administratorType = BicepValue<ManagedInstanceAdministratorType>.DefineProperty(this, "AdministratorType", ["properties", "administratorType"]);
        _login = BicepValue<string>.DefineProperty(this, "Login", ["properties", "login"]);
        _sid = BicepValue<Guid>.DefineProperty(this, "Sid", ["properties", "sid"]);
        _tenantId = BicepValue<Guid>.DefineProperty(this, "TenantId", ["properties", "tenantId"]);
        _id = BicepValue<ResourceIdentifier>.DefineProperty(this, "Id", ["id"], isOutput: true);
        _systemData = BicepValue<SystemData>.DefineProperty(this, "SystemData", ["systemData"], isOutput: true);
        _parent = ResourceReference<ManagedInstance>.DefineResource(this, "Parent", ["parent"], isRequired: true);
    }

    /// <summary>
    /// Supported ManagedInstanceAdministrator resource versions.
    /// </summary>
    public static class ResourceVersions
    {
        /// <summary>
        /// 2024-05-01-preview.
        /// </summary>
        public static readonly string V2024_05_01_preview = "2024-05-01-preview";

        /// <summary>
        /// 2021-11-01.
        /// </summary>
        public static readonly string V2021_11_01 = "2021-11-01";
    }

    /// <summary>
    /// Creates a reference to an existing ManagedInstanceAdministrator.
    /// </summary>
    /// <param name="resourceName">Name of the ManagedInstanceAdministrator.</param>
    /// <param name="resourceVersion">Version of the ManagedInstanceAdministrator.</param>
    /// <returns>The existing ManagedInstanceAdministrator resource.</returns>
    public static ManagedInstanceAdministrator FromExisting(string resourceName, string? resourceVersion = default) =>
        new(resourceName, resourceVersion) { IsExistingResource = true };
}
