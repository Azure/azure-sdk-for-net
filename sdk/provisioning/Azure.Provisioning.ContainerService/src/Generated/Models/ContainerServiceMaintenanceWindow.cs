// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.ContainerService;

/// <summary>
/// Maintenance window used to configure scheduled auto-upgrade for a Managed
/// Cluster.
/// </summary>
public partial class ContainerServiceMaintenanceWindow : ProvisioningConstruct
{
    /// <summary>
    /// Recurrence schedule for the maintenance window.
    /// </summary>
    public BicepValue<ContainerServiceMaintenanceSchedule> Schedule { get => _schedule; set => _schedule.Assign(value); }
    private readonly BicepValue<ContainerServiceMaintenanceSchedule> _schedule;

    /// <summary>
    /// Length of maintenance window range from 4 to 24 hours.
    /// </summary>
    public BicepValue<int> DurationHours { get => _durationHours; set => _durationHours.Assign(value); }
    private readonly BicepValue<int> _durationHours;

    /// <summary>
    /// The UTC offset in format +/-HH:mm. For example, &apos;+05:30&apos; for
    /// IST and &apos;-07:00&apos; for PST. If not specified, the default is
    /// &apos;+00:00&apos;.
    /// </summary>
    public BicepValue<string> UtcOffset { get => _utcOffset; set => _utcOffset.Assign(value); }
    private readonly BicepValue<string> _utcOffset;

    /// <summary>
    /// The date the maintenance window activates. If the current date is
    /// before this date, the maintenance window is inactive and will not be
    /// used for upgrades. If not specified, the maintenance window will be
    /// active right away.
    /// </summary>
    public BicepValue<string> StartDate { get => _startDate; set => _startDate.Assign(value); }
    private readonly BicepValue<string> _startDate;

    /// <summary>
    /// The start time of the maintenance window. Accepted values are from
    /// &apos;00:00&apos; to &apos;23:59&apos;. &apos;utcOffset&apos; applies
    /// to this field. For example: &apos;02:00&apos; with &apos;utcOffset:
    /// +02:00&apos; means UTC time &apos;00:00&apos;.
    /// </summary>
    public BicepValue<string> StartTime { get => _startTime; set => _startTime.Assign(value); }
    private readonly BicepValue<string> _startTime;

    /// <summary>
    /// Date ranges on which upgrade is not allowed. &apos;utcOffset&apos;
    /// applies to this field. For example, with &apos;utcOffset: +02:00&apos;
    /// and &apos;dateSpan&apos; being &apos;2022-12-23&apos; to
    /// &apos;2023-01-03&apos;, maintenance will be blocked from
    /// &apos;2022-12-22 22:00&apos; to &apos;2023-01-03 22:00&apos; in UTC
    /// time.
    /// </summary>
    public BicepList<ContainerServiceDateSpan> NotAllowedDates { get => _notAllowedDates; set => _notAllowedDates.Assign(value); }
    private readonly BicepList<ContainerServiceDateSpan> _notAllowedDates;

    /// <summary>
    /// Creates a new ContainerServiceMaintenanceWindow.
    /// </summary>
    public ContainerServiceMaintenanceWindow()
    {
        _schedule = BicepValue<ContainerServiceMaintenanceSchedule>.DefineProperty(this, "Schedule", ["schedule"]);
        _durationHours = BicepValue<int>.DefineProperty(this, "DurationHours", ["durationHours"]);
        _utcOffset = BicepValue<string>.DefineProperty(this, "UtcOffset", ["utcOffset"]);
        _startDate = BicepValue<string>.DefineProperty(this, "StartDate", ["startDate"]);
        _startTime = BicepValue<string>.DefineProperty(this, "StartTime", ["startTime"]);
        _notAllowedDates = BicepList<ContainerServiceDateSpan>.DefineProperty(this, "NotAllowedDates", ["notAllowedDates"]);
    }
}
