// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.ContainerService;

/// <summary>
/// Profile for Windows VMs in the managed cluster.
/// </summary>
public partial class ManagedClusterWindowsProfile : ProvisioningConstruct
{
    /// <summary>
    /// Specifies the name of the administrator account. &lt;br&gt;&lt;br&gt;
    /// **Restriction:** Cannot end in &quot;.&quot; &lt;br&gt;&lt;br&gt;
    /// **Disallowed values:** &quot;administrator&quot;, &quot;admin&quot;,
    /// &quot;user&quot;, &quot;user1&quot;, &quot;test&quot;,
    /// &quot;user2&quot;, &quot;test1&quot;, &quot;user3&quot;,
    /// &quot;admin1&quot;, &quot;1&quot;, &quot;123&quot;, &quot;a&quot;,
    /// &quot;actuser&quot;, &quot;adm&quot;, &quot;admin2&quot;,
    /// &quot;aspnet&quot;, &quot;backup&quot;, &quot;console&quot;,
    /// &quot;david&quot;, &quot;guest&quot;, &quot;john&quot;,
    /// &quot;owner&quot;, &quot;root&quot;, &quot;server&quot;,
    /// &quot;sql&quot;, &quot;support&quot;, &quot;support_388945a0&quot;,
    /// &quot;sys&quot;, &quot;test2&quot;, &quot;test3&quot;,
    /// &quot;user4&quot;, &quot;user5&quot;. &lt;br&gt;&lt;br&gt;
    /// **Minimum-length:** 1 character &lt;br&gt;&lt;br&gt; **Max-length:**
    /// 20 characters.
    /// </summary>
    public BicepValue<string> AdminUsername { get => _adminUsername; set => _adminUsername.Assign(value); }
    private readonly BicepValue<string> _adminUsername;

    /// <summary>
    /// Specifies the password of the administrator account.
    /// &lt;br&gt;&lt;br&gt; **Minimum-length:** 8 characters
    /// &lt;br&gt;&lt;br&gt; **Max-length:** 123 characters
    /// &lt;br&gt;&lt;br&gt; **Complexity requirements:** 3 out of 4
    /// conditions below need to be fulfilled &lt;br&gt; Has lower characters
    /// &lt;br&gt;Has upper characters &lt;br&gt; Has a digit &lt;br&gt; Has a
    /// special character (Regex match [\W_]) &lt;br&gt;&lt;br&gt;
    /// **Disallowed values:** &quot;abc@123&quot;, &quot;P@$$w0rd&quot;,
    /// &quot;P@ssw0rd&quot;, &quot;P@ssword123&quot;, &quot;Pa$$word&quot;,
    /// &quot;pass@word1&quot;, &quot;Password!&quot;, &quot;Password1&quot;,
    /// &quot;Password22&quot;, &quot;iloveyou!&quot;.
    /// </summary>
    public BicepValue<string> AdminPassword { get => _adminPassword; set => _adminPassword.Assign(value); }
    private readonly BicepValue<string> _adminPassword;

    /// <summary>
    /// The license type to use for Windows VMs. See [Azure Hybrid User
    /// Benefits](https://azure.microsoft.com/pricing/hybrid-benefit/faq/) for
    /// more details.
    /// </summary>
    public BicepValue<WindowsVmLicenseType> LicenseType { get => _licenseType; set => _licenseType.Assign(value); }
    private readonly BicepValue<WindowsVmLicenseType> _licenseType;

    /// <summary>
    /// For more details on CSI proxy, see the [CSI proxy GitHub
    /// repo](https://github.com/kubernetes-csi/csi-proxy).
    /// </summary>
    public BicepValue<bool> IsCsiProxyEnabled { get => _isCsiProxyEnabled; set => _isCsiProxyEnabled.Assign(value); }
    private readonly BicepValue<bool> _isCsiProxyEnabled;

    /// <summary>
    /// The Windows gMSA Profile in the Managed Cluster.
    /// </summary>
    public BicepValue<WindowsGmsaProfile> GmsaProfile { get => _gmsaProfile; set => _gmsaProfile.Assign(value); }
    private readonly BicepValue<WindowsGmsaProfile> _gmsaProfile;

    /// <summary>
    /// Creates a new ManagedClusterWindowsProfile.
    /// </summary>
    public ManagedClusterWindowsProfile()
    {
        _adminUsername = BicepValue<string>.DefineProperty(this, "AdminUsername", ["adminUsername"]);
        _adminPassword = BicepValue<string>.DefineProperty(this, "AdminPassword", ["adminPassword"]);
        _licenseType = BicepValue<WindowsVmLicenseType>.DefineProperty(this, "LicenseType", ["licenseType"]);
        _isCsiProxyEnabled = BicepValue<bool>.DefineProperty(this, "IsCsiProxyEnabled", ["enableCSIProxy"]);
        _gmsaProfile = BicepValue<WindowsGmsaProfile>.DefineProperty(this, "GmsaProfile", ["gmsaProfile"]);
    }
}
