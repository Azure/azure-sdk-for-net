// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.ContainerService;

/// <summary>
/// Cluster HTTP proxy configuration.
/// </summary>
public partial class ManagedClusterHttpProxyConfig : ProvisioningConstruct
{
    /// <summary>
    /// The HTTP proxy server endpoint to use.
    /// </summary>
    public BicepValue<string> HttpProxy { get => _httpProxy; set => _httpProxy.Assign(value); }
    private readonly BicepValue<string> _httpProxy;

    /// <summary>
    /// The HTTPS proxy server endpoint to use.
    /// </summary>
    public BicepValue<string> HttpsProxy { get => _httpsProxy; set => _httpsProxy.Assign(value); }
    private readonly BicepValue<string> _httpsProxy;

    /// <summary>
    /// The endpoints that should not go through proxy.
    /// </summary>
    public BicepList<string> NoProxy { get => _noProxy; set => _noProxy.Assign(value); }
    private readonly BicepList<string> _noProxy;

    /// <summary>
    /// Alternative CA cert to use for connecting to proxy servers.
    /// </summary>
    public BicepValue<string> TrustedCA { get => _trustedCA; set => _trustedCA.Assign(value); }
    private readonly BicepValue<string> _trustedCA;

    /// <summary>
    /// Creates a new ManagedClusterHttpProxyConfig.
    /// </summary>
    public ManagedClusterHttpProxyConfig()
    {
        _httpProxy = BicepValue<string>.DefineProperty(this, "HttpProxy", ["httpProxy"]);
        _httpsProxy = BicepValue<string>.DefineProperty(this, "HttpsProxy", ["httpsProxy"]);
        _noProxy = BicepList<string>.DefineProperty(this, "NoProxy", ["noProxy"]);
        _trustedCA = BicepValue<string>.DefineProperty(this, "TrustedCA", ["trustedCa"]);
    }
}
