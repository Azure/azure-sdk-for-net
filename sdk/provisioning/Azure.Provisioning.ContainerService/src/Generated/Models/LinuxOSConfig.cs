// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.ContainerService;

/// <summary>
/// See [AKS custom node
/// configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration)
/// for more details.
/// </summary>
public partial class LinuxOSConfig : ProvisioningConstruct
{
    /// <summary>
    /// Sysctl settings for Linux agent nodes.
    /// </summary>
    public BicepValue<SysctlConfig> Sysctls { get => _sysctls; set => _sysctls.Assign(value); }
    private readonly BicepValue<SysctlConfig> _sysctls;

    /// <summary>
    /// Valid values are &apos;always&apos;, &apos;madvise&apos;, and
    /// &apos;never&apos;. The default is &apos;always&apos;. For more
    /// information see [Transparent
    /// Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
    /// </summary>
    public BicepValue<string> TransparentHugePageEnabled { get => _transparentHugePageEnabled; set => _transparentHugePageEnabled.Assign(value); }
    private readonly BicepValue<string> _transparentHugePageEnabled;

    /// <summary>
    /// Valid values are &apos;always&apos;, &apos;defer&apos;,
    /// &apos;defer+madvise&apos;, &apos;madvise&apos; and &apos;never&apos;.
    /// The default is &apos;madvise&apos;. For more information see
    /// [Transparent
    /// Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
    /// </summary>
    public BicepValue<string> TransparentHugePageDefrag { get => _transparentHugePageDefrag; set => _transparentHugePageDefrag.Assign(value); }
    private readonly BicepValue<string> _transparentHugePageDefrag;

    /// <summary>
    /// The size in MB of a swap file that will be created on each node.
    /// </summary>
    public BicepValue<int> SwapFileSizeInMB { get => _swapFileSizeInMB; set => _swapFileSizeInMB.Assign(value); }
    private readonly BicepValue<int> _swapFileSizeInMB;

    /// <summary>
    /// Creates a new LinuxOSConfig.
    /// </summary>
    public LinuxOSConfig()
    {
        _sysctls = BicepValue<SysctlConfig>.DefineProperty(this, "Sysctls", ["sysctls"]);
        _transparentHugePageEnabled = BicepValue<string>.DefineProperty(this, "TransparentHugePageEnabled", ["transparentHugePageEnabled"]);
        _transparentHugePageDefrag = BicepValue<string>.DefineProperty(this, "TransparentHugePageDefrag", ["transparentHugePageDefrag"]);
        _swapFileSizeInMB = BicepValue<int>.DefineProperty(this, "SwapFileSizeInMB", ["swapFileSizeMB"]);
    }
}
