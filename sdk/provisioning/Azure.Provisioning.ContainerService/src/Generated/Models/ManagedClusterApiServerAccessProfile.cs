// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.ContainerService;

/// <summary>
/// Access profile for managed cluster API server.
/// </summary>
public partial class ManagedClusterApiServerAccessProfile : ProvisioningConstruct
{
    /// <summary>
    /// IP ranges are specified in CIDR format, e.g. 137.117.106.88/29. This
    /// feature is not compatible with clusters that use Public IP Per Node,
    /// or clusters that are using a Basic Load Balancer. For more information
    /// see [API server authorized IP
    /// ranges](https://docs.microsoft.com/azure/aks/api-server-authorized-ip-ranges).
    /// </summary>
    public BicepList<string> AuthorizedIPRanges { get => _authorizedIPRanges; set => _authorizedIPRanges.Assign(value); }
    private readonly BicepList<string> _authorizedIPRanges;

    /// <summary>
    /// For more details, see [Creating a private AKS
    /// cluster](https://docs.microsoft.com/azure/aks/private-clusters).
    /// </summary>
    public BicepValue<bool> EnablePrivateCluster { get => _enablePrivateCluster; set => _enablePrivateCluster.Assign(value); }
    private readonly BicepValue<bool> _enablePrivateCluster;

    /// <summary>
    /// The default is System. For more details see [configure private DNS
    /// zone](https://docs.microsoft.com/azure/aks/private-clusters#configure-private-dns-zone).
    /// Allowed values are &apos;system&apos; and &apos;none&apos;.
    /// </summary>
    public BicepValue<string> PrivateDnsZone { get => _privateDnsZone; set => _privateDnsZone.Assign(value); }
    private readonly BicepValue<string> _privateDnsZone;

    /// <summary>
    /// Whether to create additional public FQDN for private cluster or not.
    /// </summary>
    public BicepValue<bool> EnablePrivateClusterPublicFqdn { get => _enablePrivateClusterPublicFqdn; set => _enablePrivateClusterPublicFqdn.Assign(value); }
    private readonly BicepValue<bool> _enablePrivateClusterPublicFqdn;

    /// <summary>
    /// Whether to disable run command for the cluster or not.
    /// </summary>
    public BicepValue<bool> DisableRunCommand { get => _disableRunCommand; set => _disableRunCommand.Assign(value); }
    private readonly BicepValue<bool> _disableRunCommand;

    /// <summary>
    /// Creates a new ManagedClusterApiServerAccessProfile.
    /// </summary>
    public ManagedClusterApiServerAccessProfile()
    {
        _authorizedIPRanges = BicepList<string>.DefineProperty(this, "AuthorizedIPRanges", ["authorizedIPRanges"]);
        _enablePrivateCluster = BicepValue<bool>.DefineProperty(this, "EnablePrivateCluster", ["enablePrivateCluster"]);
        _privateDnsZone = BicepValue<string>.DefineProperty(this, "PrivateDnsZone", ["privateDNSZone"]);
        _enablePrivateClusterPublicFqdn = BicepValue<bool>.DefineProperty(this, "EnablePrivateClusterPublicFqdn", ["enablePrivateClusterPublicFQDN"]);
        _disableRunCommand = BicepValue<bool>.DefineProperty(this, "DisableRunCommand", ["disableRunCommand"]);
    }
}
