// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Core;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.ContainerService;

/// <summary>
/// Security profile for the container service cluster.
/// </summary>
public partial class ManagedClusterSecurityProfile : ProvisioningConstruct
{
    /// <summary>
    /// Microsoft Defender settings for the security profile.
    /// </summary>
    public BicepValue<ManagedClusterSecurityProfileDefender> Defender { get => _defender; set => _defender.Assign(value); }
    private readonly BicepValue<ManagedClusterSecurityProfileDefender> _defender;

    /// <summary>
    /// Azure Key Vault [key management
    /// service](https://kubernetes.io/docs/tasks/administer-cluster/kms-provider/)
    /// settings for the security profile.
    /// </summary>
    public BicepValue<ManagedClusterSecurityProfileKeyVaultKms> AzureKeyVaultKms { get => _azureKeyVaultKms; set => _azureKeyVaultKms.Assign(value); }
    private readonly BicepValue<ManagedClusterSecurityProfileKeyVaultKms> _azureKeyVaultKms;

    /// <summary>
    /// Whether to enable workload identity.
    /// </summary>
    public BicepValue<bool> IsWorkloadIdentityEnabled { get => _isWorkloadIdentityEnabled; set => _isWorkloadIdentityEnabled.Assign(value); }
    private readonly BicepValue<bool> _isWorkloadIdentityEnabled;

    /// <summary>
    /// Image Cleaner settings for the security profile.
    /// </summary>
    public BicepValue<ManagedClusterSecurityProfileImageCleaner> ImageCleaner { get => _imageCleaner; set => _imageCleaner.Assign(value); }
    private readonly BicepValue<ManagedClusterSecurityProfileImageCleaner> _imageCleaner;

    /// <summary>
    /// Creates a new ManagedClusterSecurityProfile.
    /// </summary>
    public ManagedClusterSecurityProfile()
    {
        _defender = BicepValue<ManagedClusterSecurityProfileDefender>.DefineProperty(this, "Defender", ["defender"]);
        _azureKeyVaultKms = BicepValue<ManagedClusterSecurityProfileKeyVaultKms>.DefineProperty(this, "AzureKeyVaultKms", ["azureKeyVaultKms"]);
        _isWorkloadIdentityEnabled = BicepValue<bool>.DefineProperty(this, "IsWorkloadIdentityEnabled", ["workloadIdentity", "enabled"]);
        _imageCleaner = BicepValue<ManagedClusterSecurityProfileImageCleaner>.DefineProperty(this, "ImageCleaner", ["imageCleaner"]);
    }
}
