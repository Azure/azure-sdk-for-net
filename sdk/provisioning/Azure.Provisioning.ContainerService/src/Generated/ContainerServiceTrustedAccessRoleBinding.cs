// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;

namespace Azure.Provisioning.ContainerService;

/// <summary>
/// ContainerServiceTrustedAccessRoleBinding.
/// </summary>
public partial class ContainerServiceTrustedAccessRoleBinding : Resource
{
    /// <summary>
    /// The name of trusted access role binding.
    /// </summary>
    public BicepValue<string> Name { get => _name; set => _name.Assign(value); }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// A list of roles to bind, each item is a resource type qualified role
    /// name. For example:
    /// &apos;Microsoft.MachineLearningServices/workspaces/reader&apos;.
    /// </summary>
    public BicepList<string> Roles { get => _roles; set => _roles.Assign(value); }
    private readonly BicepList<string> _roles;

    /// <summary>
    /// The ARM resource ID of source resource that trusted access is
    /// configured for.
    /// </summary>
    public BicepValue<ResourceIdentifier> SourceResourceId { get => _sourceResourceId; set => _sourceResourceId.Assign(value); }
    private readonly BicepValue<ResourceIdentifier> _sourceResourceId;

    /// <summary>
    /// Gets the Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id { get => _id; }
    private readonly BicepValue<ResourceIdentifier> _id;

    /// <summary>
    /// The current provisioning state of trusted access role binding.
    /// </summary>
    public BicepValue<ContainerServiceTrustedAccessRoleBindingProvisioningState> ProvisioningState { get => _provisioningState; }
    private readonly BicepValue<ContainerServiceTrustedAccessRoleBindingProvisioningState> _provisioningState;

    /// <summary>
    /// Gets the SystemData.
    /// </summary>
    public BicepValue<SystemData> SystemData { get => _systemData; }
    private readonly BicepValue<SystemData> _systemData;

    /// <summary>
    /// Gets or sets a reference to the parent ContainerServiceManagedCluster.
    /// </summary>
    public ContainerServiceManagedCluster? Parent { get => _parent!.Value; set => _parent!.Value = value; }
    private readonly ResourceReference<ContainerServiceManagedCluster> _parent;

    /// <summary>
    /// Creates a new ContainerServiceTrustedAccessRoleBinding.
    /// </summary>
    /// <param name="resourceName">Name of the ContainerServiceTrustedAccessRoleBinding.</param>
    /// <param name="resourceVersion">Version of the ContainerServiceTrustedAccessRoleBinding.</param>
    /// <param name="context">Provisioning context for this resource.</param>
    public ContainerServiceTrustedAccessRoleBinding(string resourceName, string? resourceVersion = default, ProvisioningContext? context = default)
        : base(resourceName, "Microsoft.ContainerService/managedClusters/trustedAccessRoleBindings", resourceVersion, context)
    {
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"], isRequired: true);
        _roles = BicepList<string>.DefineProperty(this, "Roles", ["properties", "roles"], isRequired: true);
        _sourceResourceId = BicepValue<ResourceIdentifier>.DefineProperty(this, "SourceResourceId", ["properties", "sourceResourceId"], isRequired: true);
        _id = BicepValue<ResourceIdentifier>.DefineProperty(this, "Id", ["id"], isOutput: true);
        _provisioningState = BicepValue<ContainerServiceTrustedAccessRoleBindingProvisioningState>.DefineProperty(this, "ProvisioningState", ["properties", "provisioningState"], isOutput: true);
        _systemData = BicepValue<SystemData>.DefineProperty(this, "SystemData", ["systemData"], isOutput: true);
        _parent = ResourceReference<ContainerServiceManagedCluster>.DefineResource(this, "Parent", ["parent"], isRequired: true);
    }

    /// <summary>
    /// Creates a reference to an existing
    /// ContainerServiceTrustedAccessRoleBinding.
    /// </summary>
    /// <param name="resourceName">Name of the ContainerServiceTrustedAccessRoleBinding.</param>
    /// <param name="resourceVersion">Version of the ContainerServiceTrustedAccessRoleBinding.</param>
    /// <returns>The existing ContainerServiceTrustedAccessRoleBinding resource.</returns>
    public static ContainerServiceTrustedAccessRoleBinding FromExisting(string resourceName, string? resourceVersion = default) =>
        new(resourceName, resourceVersion) { IsExistingResource = true };
}
