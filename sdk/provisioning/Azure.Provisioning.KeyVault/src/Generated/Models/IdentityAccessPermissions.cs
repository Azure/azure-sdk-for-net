// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning;
using Azure.Provisioning.Primitives;

namespace Azure.Provisioning.KeyVault;

/// <summary>
/// Permissions the identity has for keys, secrets, certificates and storage.
/// </summary>
public partial class IdentityAccessPermissions : ProvisioningConstruct
{
    /// <summary>
    /// Permissions to keys.
    /// </summary>
    public BicepList<IdentityAccessKeyPermission> Keys { get => _keys; set => _keys.Assign(value); }
    private readonly BicepList<IdentityAccessKeyPermission> _keys;

    /// <summary>
    /// Permissions to secrets.
    /// </summary>
    public BicepList<IdentityAccessSecretPermission> Secrets { get => _secrets; set => _secrets.Assign(value); }
    private readonly BicepList<IdentityAccessSecretPermission> _secrets;

    /// <summary>
    /// Permissions to certificates.
    /// </summary>
    public BicepList<IdentityAccessCertificatePermission> Certificates { get => _certificates; set => _certificates.Assign(value); }
    private readonly BicepList<IdentityAccessCertificatePermission> _certificates;

    /// <summary>
    /// Permissions to storage accounts.
    /// </summary>
    public BicepList<IdentityAccessStoragePermission> Storage { get => _storage; set => _storage.Assign(value); }
    private readonly BicepList<IdentityAccessStoragePermission> _storage;

    /// <summary>
    /// Creates a new IdentityAccessPermissions.
    /// </summary>
    public IdentityAccessPermissions()
    {
        _keys = BicepList<IdentityAccessKeyPermission>.DefineProperty(this, "Keys", ["keys"]);
        _secrets = BicepList<IdentityAccessSecretPermission>.DefineProperty(this, "Secrets", ["secrets"]);
        _certificates = BicepList<IdentityAccessCertificatePermission>.DefineProperty(this, "Certificates", ["certificates"]);
        _storage = BicepList<IdentityAccessStoragePermission>.DefineProperty(this, "Storage", ["storage"]);
    }
}
