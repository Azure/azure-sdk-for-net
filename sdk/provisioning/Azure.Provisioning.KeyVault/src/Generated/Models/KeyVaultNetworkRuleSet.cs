// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.KeyVault;

/// <summary>
/// A set of rules governing the network accessibility of a vault.
/// </summary>
public partial class KeyVaultNetworkRuleSet : ProvisioningConstruct
{
    /// <summary>
    /// Tells what traffic can bypass network rules. This can be
    /// &apos;AzureServices&apos; or &apos;None&apos;.  If not specified the
    /// default is &apos;AzureServices&apos;.
    /// </summary>
    public BicepValue<KeyVaultNetworkRuleBypassOption> Bypass { get => _bypass; set => _bypass.Assign(value); }
    private readonly BicepValue<KeyVaultNetworkRuleBypassOption> _bypass;

    /// <summary>
    /// The default action when no rule from ipRules and from
    /// virtualNetworkRules match. This is only used after the bypass property
    /// has been evaluated.
    /// </summary>
    public BicepValue<KeyVaultNetworkRuleAction> DefaultAction { get => _defaultAction; set => _defaultAction.Assign(value); }
    private readonly BicepValue<KeyVaultNetworkRuleAction> _defaultAction;

    /// <summary>
    /// The list of IP address rules.
    /// </summary>
    public BicepList<KeyVaultIPRule> IPRules { get => _iPRules; set => _iPRules.Assign(value); }
    private readonly BicepList<KeyVaultIPRule> _iPRules;

    /// <summary>
    /// The list of virtual network rules.
    /// </summary>
    public BicepList<KeyVaultVirtualNetworkRule> VirtualNetworkRules { get => _virtualNetworkRules; set => _virtualNetworkRules.Assign(value); }
    private readonly BicepList<KeyVaultVirtualNetworkRule> _virtualNetworkRules;

    /// <summary>
    /// Creates a new KeyVaultNetworkRuleSet.
    /// </summary>
    public KeyVaultNetworkRuleSet()
    {
        _bypass = BicepValue<KeyVaultNetworkRuleBypassOption>.DefineProperty(this, "Bypass", ["bypass"]);
        _defaultAction = BicepValue<KeyVaultNetworkRuleAction>.DefineProperty(this, "DefaultAction", ["defaultAction"]);
        _iPRules = BicepList<KeyVaultIPRule>.DefineProperty(this, "IPRules", ["ipRules"]);
        _virtualNetworkRules = BicepList<KeyVaultVirtualNetworkRule>.DefineProperty(this, "VirtualNetworkRules", ["virtualNetworkRules"]);
    }
}
