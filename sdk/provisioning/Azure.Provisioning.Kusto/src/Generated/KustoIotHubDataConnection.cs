// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.Kusto;

/// <summary>
/// KustoIotHubDataConnection.
/// </summary>
public partial class KustoIotHubDataConnection : KustoDataConnection
{
    /// <summary>
    /// The iot hub consumer group.
    /// </summary>
    public BicepValue<string> ConsumerGroup 
    {
        get { Initialize(); return _consumerGroup!; }
        set { Initialize(); _consumerGroup!.Assign(value); }
    }
    private BicepValue<string>? _consumerGroup;

    /// <summary>
    /// Indication for database routing information from the data connection,
    /// by default only database routing information is allowed.
    /// </summary>
    public BicepValue<KustoDatabaseRouting> DatabaseRouting 
    {
        get { Initialize(); return _databaseRouting!; }
        set { Initialize(); _databaseRouting!.Assign(value); }
    }
    private BicepValue<KustoDatabaseRouting>? _databaseRouting;

    /// <summary>
    /// The data format of the message. Optionally the data format can be added
    /// to each message.
    /// </summary>
    public BicepValue<KustoIotHubDataFormat> DataFormat 
    {
        get { Initialize(); return _dataFormat!; }
        set { Initialize(); _dataFormat!.Assign(value); }
    }
    private BicepValue<KustoIotHubDataFormat>? _dataFormat;

    /// <summary>
    /// System properties of the iot hub.
    /// </summary>
    public BicepList<string> EventSystemProperties 
    {
        get { Initialize(); return _eventSystemProperties!; }
        set { Initialize(); _eventSystemProperties!.Assign(value); }
    }
    private BicepList<string>? _eventSystemProperties;

    /// <summary>
    /// The resource ID of the Iot hub to be used to create a data connection.
    /// </summary>
    public BicepValue<ResourceIdentifier> IotHubResourceId 
    {
        get { Initialize(); return _iotHubResourceId!; }
        set { Initialize(); _iotHubResourceId!.Assign(value); }
    }
    private BicepValue<ResourceIdentifier>? _iotHubResourceId;

    /// <summary>
    /// The mapping rule to be used to ingest the data. Optionally the mapping
    /// information can be added to each message.
    /// </summary>
    public BicepValue<string> MappingRuleName 
    {
        get { Initialize(); return _mappingRuleName!; }
        set { Initialize(); _mappingRuleName!.Assign(value); }
    }
    private BicepValue<string>? _mappingRuleName;

    /// <summary>
    /// When defined, the data connection retrieves existing Event hub events
    /// created since the Retrieval start date. It can only retrieve events
    /// retained by the Event hub, based on its retention period.
    /// </summary>
    public BicepValue<DateTimeOffset> RetrievalStartOn 
    {
        get { Initialize(); return _retrievalStartOn!; }
        set { Initialize(); _retrievalStartOn!.Assign(value); }
    }
    private BicepValue<DateTimeOffset>? _retrievalStartOn;

    /// <summary>
    /// The name of the share access policy.
    /// </summary>
    public BicepValue<string> SharedAccessPolicyName 
    {
        get { Initialize(); return _sharedAccessPolicyName!; }
        set { Initialize(); _sharedAccessPolicyName!.Assign(value); }
    }
    private BicepValue<string>? _sharedAccessPolicyName;

    /// <summary>
    /// The table where the data should be ingested. Optionally the table
    /// information can be added to each message.
    /// </summary>
    public BicepValue<string> TableName 
    {
        get { Initialize(); return _tableName!; }
        set { Initialize(); _tableName!.Assign(value); }
    }
    private BicepValue<string>? _tableName;

    /// <summary>
    /// The provisioned state of the resource.
    /// </summary>
    public BicepValue<KustoProvisioningState> ProvisioningState 
    {
        get { Initialize(); return _provisioningState!; }
    }
    private BicepValue<KustoProvisioningState>? _provisioningState;

    /// <summary>
    /// Creates a new KustoIotHubDataConnection.
    /// </summary>
    /// <param name="bicepIdentifier">
    /// The the Bicep identifier name of the KustoIotHubDataConnection
    /// resource.  This can be used to refer to the resource in expressions,
    /// but is not the Azure name of the resource.  This value can contain
    /// letters, numbers, and underscores.
    /// </param>
    /// <param name="resourceVersion">Version of the KustoIotHubDataConnection.</param>
    public KustoIotHubDataConnection(string bicepIdentifier, string? resourceVersion = default)
        : base(bicepIdentifier, resourceVersion)
    {
    }

    /// <summary>
    /// Define all the provisionable properties of KustoIotHubDataConnection.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        DefineProperty<string>("kind", ["kind"], defaultValue: "IotHub");
        _consumerGroup = DefineProperty<string>("ConsumerGroup", ["properties", "consumerGroup"]);
        _databaseRouting = DefineProperty<KustoDatabaseRouting>("DatabaseRouting", ["properties", "databaseRouting"]);
        _dataFormat = DefineProperty<KustoIotHubDataFormat>("DataFormat", ["properties", "dataFormat"]);
        _eventSystemProperties = DefineListProperty<string>("EventSystemProperties", ["properties", "eventSystemProperties"]);
        _iotHubResourceId = DefineProperty<ResourceIdentifier>("IotHubResourceId", ["properties", "iotHubResourceId"]);
        _mappingRuleName = DefineProperty<string>("MappingRuleName", ["properties", "mappingRuleName"]);
        _retrievalStartOn = DefineProperty<DateTimeOffset>("RetrievalStartOn", ["properties", "retrievalStartDate"]);
        _sharedAccessPolicyName = DefineProperty<string>("SharedAccessPolicyName", ["properties", "sharedAccessPolicyName"]);
        _tableName = DefineProperty<string>("TableName", ["properties", "tableName"]);
        _provisioningState = DefineProperty<KustoProvisioningState>("ProvisioningState", ["properties", "provisioningState"], isOutput: true);
    }
}
