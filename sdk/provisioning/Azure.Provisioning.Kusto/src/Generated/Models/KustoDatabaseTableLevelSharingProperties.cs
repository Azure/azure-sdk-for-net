// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.Kusto;

/// <summary>
/// Tables that will be included and excluded in the follower database.
/// </summary>
public partial class KustoDatabaseTableLevelSharingProperties : ProvisionableConstruct
{
    /// <summary>
    /// List of tables to include in the follower database.
    /// </summary>
    public BicepList<string> TablesToInclude 
    {
        get { Initialize(); return _tablesToInclude!; }
        set { Initialize(); _tablesToInclude!.Assign(value); }
    }
    private BicepList<string>? _tablesToInclude;

    /// <summary>
    /// List of tables to exclude from the follower database.
    /// </summary>
    public BicepList<string> TablesToExclude 
    {
        get { Initialize(); return _tablesToExclude!; }
        set { Initialize(); _tablesToExclude!.Assign(value); }
    }
    private BicepList<string>? _tablesToExclude;

    /// <summary>
    /// List of external tables to include in the follower database.
    /// </summary>
    public BicepList<string> ExternalTablesToInclude 
    {
        get { Initialize(); return _externalTablesToInclude!; }
        set { Initialize(); _externalTablesToInclude!.Assign(value); }
    }
    private BicepList<string>? _externalTablesToInclude;

    /// <summary>
    /// List of external tables to exclude from the follower database.
    /// </summary>
    public BicepList<string> ExternalTablesToExclude 
    {
        get { Initialize(); return _externalTablesToExclude!; }
        set { Initialize(); _externalTablesToExclude!.Assign(value); }
    }
    private BicepList<string>? _externalTablesToExclude;

    /// <summary>
    /// List of materialized views to include in the follower database.
    /// </summary>
    public BicepList<string> MaterializedViewsToInclude 
    {
        get { Initialize(); return _materializedViewsToInclude!; }
        set { Initialize(); _materializedViewsToInclude!.Assign(value); }
    }
    private BicepList<string>? _materializedViewsToInclude;

    /// <summary>
    /// List of materialized views to exclude from the follower database.
    /// </summary>
    public BicepList<string> MaterializedViewsToExclude 
    {
        get { Initialize(); return _materializedViewsToExclude!; }
        set { Initialize(); _materializedViewsToExclude!.Assign(value); }
    }
    private BicepList<string>? _materializedViewsToExclude;

    /// <summary>
    /// List of functions to include in the follower database.
    /// </summary>
    public BicepList<string> FunctionsToInclude 
    {
        get { Initialize(); return _functionsToInclude!; }
        set { Initialize(); _functionsToInclude!.Assign(value); }
    }
    private BicepList<string>? _functionsToInclude;

    /// <summary>
    /// List of functions to exclude from the follower database.
    /// </summary>
    public BicepList<string> FunctionsToExclude 
    {
        get { Initialize(); return _functionsToExclude!; }
        set { Initialize(); _functionsToExclude!.Assign(value); }
    }
    private BicepList<string>? _functionsToExclude;

    /// <summary>
    /// Creates a new KustoDatabaseTableLevelSharingProperties.
    /// </summary>
    public KustoDatabaseTableLevelSharingProperties()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of
    /// KustoDatabaseTableLevelSharingProperties.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _tablesToInclude = DefineListProperty<string>("TablesToInclude", ["tablesToInclude"]);
        _tablesToExclude = DefineListProperty<string>("TablesToExclude", ["tablesToExclude"]);
        _externalTablesToInclude = DefineListProperty<string>("ExternalTablesToInclude", ["externalTablesToInclude"]);
        _externalTablesToExclude = DefineListProperty<string>("ExternalTablesToExclude", ["externalTablesToExclude"]);
        _materializedViewsToInclude = DefineListProperty<string>("MaterializedViewsToInclude", ["materializedViewsToInclude"]);
        _materializedViewsToExclude = DefineListProperty<string>("MaterializedViewsToExclude", ["materializedViewsToExclude"]);
        _functionsToInclude = DefineListProperty<string>("FunctionsToInclude", ["functionsToInclude"]);
        _functionsToExclude = DefineListProperty<string>("FunctionsToExclude", ["functionsToExclude"]);
    }
}
