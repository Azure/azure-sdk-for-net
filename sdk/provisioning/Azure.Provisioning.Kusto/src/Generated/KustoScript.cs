// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;

namespace Azure.Provisioning.Kusto;

/// <summary>
/// KustoScript.
/// </summary>
public partial class KustoScript : ProvisionableResource
{
    /// <summary>
    /// The name of the Kusto database script.
    /// </summary>
    public BicepValue<string> Name 
    {
        get { Initialize(); return _name!; }
        set { Initialize(); _name!.Assign(value); }
    }
    private BicepValue<string>? _name;

    /// <summary>
    /// A unique string. If changed the script will be applied again.
    /// </summary>
    public BicepValue<string> ForceUpdateTag 
    {
        get { Initialize(); return _forceUpdateTag!; }
        set { Initialize(); _forceUpdateTag!.Assign(value); }
    }
    private BicepValue<string>? _forceUpdateTag;

    /// <summary>
    /// Indicates if the permissions for the script caller are kept following
    /// completion of the script.
    /// </summary>
    public BicepValue<PrincipalPermissionsAction> PrincipalPermissionsAction 
    {
        get { Initialize(); return _principalPermissionsAction!; }
        set { Initialize(); _principalPermissionsAction!.Assign(value); }
    }
    private BicepValue<PrincipalPermissionsAction>? _principalPermissionsAction;

    /// <summary>
    /// The script content. This property should be used when the script is
    /// provide inline and not through file in a SA. Must not be used together
    /// with scriptUrl and scriptUrlSasToken properties.
    /// </summary>
    public BicepValue<string> ScriptContent 
    {
        get { Initialize(); return _scriptContent!; }
        set { Initialize(); _scriptContent!.Assign(value); }
    }
    private BicepValue<string>? _scriptContent;

    /// <summary>
    /// Differentiates between the type of script commands included - Database
    /// or Cluster. The default is Database.
    /// </summary>
    public BicepValue<KustoScriptLevel> ScriptLevel 
    {
        get { Initialize(); return _scriptLevel!; }
        set { Initialize(); _scriptLevel!.Assign(value); }
    }
    private BicepValue<KustoScriptLevel>? _scriptLevel;

    /// <summary>
    /// The url to the KQL script blob file. Must not be used together with
    /// scriptContent property.
    /// </summary>
    public BicepValue<Uri> ScriptUri 
    {
        get { Initialize(); return _scriptUri!; }
        set { Initialize(); _scriptUri!.Assign(value); }
    }
    private BicepValue<Uri>? _scriptUri;

    /// <summary>
    /// The SaS token that provide read access to the file which contain the
    /// script. Must be provided when using scriptUrl property.
    /// </summary>
    public BicepValue<string> ScriptUriSasToken 
    {
        get { Initialize(); return _scriptUriSasToken!; }
        set { Initialize(); _scriptUriSasToken!.Assign(value); }
    }
    private BicepValue<string>? _scriptUriSasToken;

    /// <summary>
    /// Flag that indicates whether to continue if one of the command fails.
    /// </summary>
    public BicepValue<bool> ShouldContinueOnErrors 
    {
        get { Initialize(); return _shouldContinueOnErrors!; }
        set { Initialize(); _shouldContinueOnErrors!.Assign(value); }
    }
    private BicepValue<bool>? _shouldContinueOnErrors;

    /// <summary>
    /// Gets the Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id 
    {
        get { Initialize(); return _id!; }
    }
    private BicepValue<ResourceIdentifier>? _id;

    /// <summary>
    /// The provisioned state of the resource.
    /// </summary>
    public BicepValue<KustoProvisioningState> ProvisioningState 
    {
        get { Initialize(); return _provisioningState!; }
    }
    private BicepValue<KustoProvisioningState>? _provisioningState;

    /// <summary>
    /// Gets the SystemData.
    /// </summary>
    public SystemData SystemData 
    {
        get { Initialize(); return _systemData!; }
    }
    private SystemData? _systemData;

    /// <summary>
    /// Gets or sets a reference to the parent KustoDatabase.
    /// </summary>
    public KustoDatabase? Parent
    {
        get { Initialize(); return _parent!.Value; }
        set { Initialize(); _parent!.Value = value; }
    }
    private ResourceReference<KustoDatabase>? _parent;

    /// <summary>
    /// Creates a new KustoScript.
    /// </summary>
    /// <param name="bicepIdentifier">
    /// The the Bicep identifier name of the KustoScript resource.  This can be
    /// used to refer to the resource in expressions, but is not the Azure
    /// name of the resource.  This value can contain letters, numbers, and
    /// underscores.
    /// </param>
    /// <param name="resourceVersion">Version of the KustoScript.</param>
    public KustoScript(string bicepIdentifier, string? resourceVersion = default)
        : base(bicepIdentifier, "Microsoft.Kusto/clusters/databases/scripts", resourceVersion ?? "2024-04-13")
    {
    }

    /// <summary>
    /// Define all the provisionable properties of KustoScript.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _name = DefineProperty<string>("Name", ["name"], isRequired: true);
        _forceUpdateTag = DefineProperty<string>("ForceUpdateTag", ["properties", "forceUpdateTag"]);
        _principalPermissionsAction = DefineProperty<PrincipalPermissionsAction>("PrincipalPermissionsAction", ["properties", "principalPermissionsAction"]);
        _scriptContent = DefineProperty<string>("ScriptContent", ["properties", "scriptContent"]);
        _scriptLevel = DefineProperty<KustoScriptLevel>("ScriptLevel", ["properties", "scriptLevel"]);
        _scriptUri = DefineProperty<Uri>("ScriptUri", ["properties", "scriptUrl"]);
        _scriptUriSasToken = DefineProperty<string>("ScriptUriSasToken", ["properties", "scriptUrlSasToken"]);
        _shouldContinueOnErrors = DefineProperty<bool>("ShouldContinueOnErrors", ["properties", "continueOnErrors"]);
        _id = DefineProperty<ResourceIdentifier>("Id", ["id"], isOutput: true);
        _provisioningState = DefineProperty<KustoProvisioningState>("ProvisioningState", ["properties", "provisioningState"], isOutput: true);
        _systemData = DefineModelProperty<SystemData>("SystemData", ["systemData"], isOutput: true);
        _parent = DefineResource<KustoDatabase>("Parent", ["parent"], isRequired: true);
    }

    /// <summary>
    /// Supported KustoScript resource versions.
    /// </summary>
    public static class ResourceVersions
    {
        /// <summary>
        /// 2024-04-13.
        /// </summary>
        public static readonly string V2024_04_13 = "2024-04-13";

        /// <summary>
        /// 2023-08-15.
        /// </summary>
        public static readonly string V2023_08_15 = "2023-08-15";

        /// <summary>
        /// 2023-05-02.
        /// </summary>
        public static readonly string V2023_05_02 = "2023-05-02";

        /// <summary>
        /// 2022-12-29.
        /// </summary>
        public static readonly string V2022_12_29 = "2022-12-29";

        /// <summary>
        /// 2022-11-11.
        /// </summary>
        public static readonly string V2022_11_11 = "2022-11-11";

        /// <summary>
        /// 2022-07-07.
        /// </summary>
        public static readonly string V2022_07_07 = "2022-07-07";

        /// <summary>
        /// 2022-02-01.
        /// </summary>
        public static readonly string V2022_02_01 = "2022-02-01";

        /// <summary>
        /// 2021-08-27.
        /// </summary>
        public static readonly string V2021_08_27 = "2021-08-27";

        /// <summary>
        /// 2021-01-01.
        /// </summary>
        public static readonly string V2021_01_01 = "2021-01-01";
    }

    /// <summary>
    /// Creates a reference to an existing KustoScript.
    /// </summary>
    /// <param name="bicepIdentifier">
    /// The the Bicep identifier name of the KustoScript resource.  This can be
    /// used to refer to the resource in expressions, but is not the Azure
    /// name of the resource.  This value can contain letters, numbers, and
    /// underscores.
    /// </param>
    /// <param name="resourceVersion">Version of the KustoScript.</param>
    /// <returns>The existing KustoScript resource.</returns>
    public static KustoScript FromExisting(string bicepIdentifier, string? resourceVersion = default) =>
        new(bicepIdentifier, resourceVersion) { IsExistingResource = true };
}
