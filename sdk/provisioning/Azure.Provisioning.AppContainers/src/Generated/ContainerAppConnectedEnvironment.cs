// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;
using System.Net;

namespace Azure.Provisioning.AppContainers;

/// <summary>
/// ContainerAppConnectedEnvironment.
/// </summary>
public partial class ContainerAppConnectedEnvironment : Resource
{
    /// <summary>
    /// Name of the connectedEnvironment.
    /// </summary>
    public BicepValue<string> Name { get => _name; set => _name.Assign(value); }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// Gets or sets the Location.
    /// </summary>
    public BicepValue<AzureLocation> Location { get => _location; set => _location.Assign(value); }
    private readonly BicepValue<AzureLocation> _location;

    /// <summary>
    /// Custom domain configuration for the environment.
    /// </summary>
    public BicepValue<ContainerAppCustomDomainConfiguration> CustomDomainConfiguration { get => _customDomainConfiguration; set => _customDomainConfiguration.Assign(value); }
    private readonly BicepValue<ContainerAppCustomDomainConfiguration> _customDomainConfiguration;

    /// <summary>
    /// Application Insights connection string used by Dapr to export Service
    /// to Service communication telemetry.
    /// </summary>
    public BicepValue<string> DaprAIConnectionString { get => _daprAIConnectionString; set => _daprAIConnectionString.Assign(value); }
    private readonly BicepValue<string> _daprAIConnectionString;

    /// <summary>
    /// The complex type of the extended location.
    /// </summary>
    public BicepValue<ContainerAppExtendedLocation> ExtendedLocation { get => _extendedLocation; set => _extendedLocation.Assign(value); }
    private readonly BicepValue<ContainerAppExtendedLocation> _extendedLocation;

    /// <summary>
    /// Static IP of the connectedEnvironment.
    /// </summary>
    public BicepValue<IPAddress> StaticIP { get => _staticIP; set => _staticIP.Assign(value); }
    private readonly BicepValue<IPAddress> _staticIP;

    /// <summary>
    /// Gets or sets the Tags.
    /// </summary>
    public BicepDictionary<string> Tags { get => _tags; set => _tags.Assign(value); }
    private readonly BicepDictionary<string> _tags;

    /// <summary>
    /// Default Domain Name for the cluster.
    /// </summary>
    public BicepValue<string> DefaultDomain { get => _defaultDomain; }
    private readonly BicepValue<string> _defaultDomain;

    /// <summary>
    /// Any errors that occurred during deployment or deployment validation.
    /// </summary>
    public BicepValue<string> DeploymentErrors { get => _deploymentErrors; }
    private readonly BicepValue<string> _deploymentErrors;

    /// <summary>
    /// Gets the Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id { get => _id; }
    private readonly BicepValue<ResourceIdentifier> _id;

    /// <summary>
    /// Provisioning state of the Kubernetes Environment.
    /// </summary>
    public BicepValue<ContainerAppConnectedEnvironmentProvisioningState> ProvisioningState { get => _provisioningState; }
    private readonly BicepValue<ContainerAppConnectedEnvironmentProvisioningState> _provisioningState;

    /// <summary>
    /// Gets the SystemData.
    /// </summary>
    public BicepValue<SystemData> SystemData { get => _systemData; }
    private readonly BicepValue<SystemData> _systemData;

    /// <summary>
    /// Creates a new ContainerAppConnectedEnvironment.
    /// </summary>
    /// <param name="resourceName">Name of the ContainerAppConnectedEnvironment.</param>
    /// <param name="resourceVersion">Version of the ContainerAppConnectedEnvironment.</param>
    public ContainerAppConnectedEnvironment(string resourceName, string? resourceVersion = default)
        : base(resourceName, "Microsoft.App/connectedEnvironments", resourceVersion ?? "2024-03-01")
    {
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"], isRequired: true);
        _location = BicepValue<AzureLocation>.DefineProperty(this, "Location", ["location"], isRequired: true);
        _customDomainConfiguration = BicepValue<ContainerAppCustomDomainConfiguration>.DefineProperty(this, "CustomDomainConfiguration", ["properties", "customDomainConfiguration"]);
        _daprAIConnectionString = BicepValue<string>.DefineProperty(this, "DaprAIConnectionString", ["properties", "daprAIConnectionString"]);
        _extendedLocation = BicepValue<ContainerAppExtendedLocation>.DefineProperty(this, "ExtendedLocation", ["extendedLocation"]);
        _staticIP = BicepValue<IPAddress>.DefineProperty(this, "StaticIP", ["properties", "staticIp"]);
        _tags = BicepDictionary<string>.DefineProperty(this, "Tags", ["tags"]);
        _defaultDomain = BicepValue<string>.DefineProperty(this, "DefaultDomain", ["properties", "defaultDomain"], isOutput: true);
        _deploymentErrors = BicepValue<string>.DefineProperty(this, "DeploymentErrors", ["properties", "deploymentErrors"], isOutput: true);
        _id = BicepValue<ResourceIdentifier>.DefineProperty(this, "Id", ["id"], isOutput: true);
        _provisioningState = BicepValue<ContainerAppConnectedEnvironmentProvisioningState>.DefineProperty(this, "ProvisioningState", ["properties", "provisioningState"], isOutput: true);
        _systemData = BicepValue<SystemData>.DefineProperty(this, "SystemData", ["systemData"], isOutput: true);
    }

    /// <summary>
    /// Supported ContainerAppConnectedEnvironment resource versions.
    /// </summary>
    public static class ResourceVersions
    {
        /// <summary>
        /// 2024-08-02-preview.
        /// </summary>
        public static readonly string V2024_08_02_preview = "2024-08-02-preview";

        /// <summary>
        /// 2024-03-01.
        /// </summary>
        public static readonly string V2024_03_01 = "2024-03-01";

        /// <summary>
        /// 2023-05-01.
        /// </summary>
        public static readonly string V2023_05_01 = "2023-05-01";

        /// <summary>
        /// 2022-10-01.
        /// </summary>
        public static readonly string V2022_10_01 = "2022-10-01";
    }

    /// <summary>
    /// Creates a reference to an existing ContainerAppConnectedEnvironment.
    /// </summary>
    /// <param name="resourceName">Name of the ContainerAppConnectedEnvironment.</param>
    /// <param name="resourceVersion">Version of the ContainerAppConnectedEnvironment.</param>
    /// <returns>The existing ContainerAppConnectedEnvironment resource.</returns>
    public static ContainerAppConnectedEnvironment FromExisting(string resourceName, string? resourceVersion = default) =>
        new(resourceName, resourceVersion) { IsExistingResource = true };
}
