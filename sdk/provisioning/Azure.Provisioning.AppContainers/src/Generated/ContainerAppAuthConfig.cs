// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Core;
using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using Azure.Provisioning.Resources;
using System;

namespace Azure.Provisioning.AppContainers;

/// <summary>
/// ContainerAppAuthConfig.
/// </summary>
public partial class ContainerAppAuthConfig : Resource
{
    /// <summary>
    /// Name of the Container App AuthConfig.
    /// </summary>
    public BicepValue<string> Name { get => _name; set => _name.Assign(value); }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// The configuration settings of the secrets references of encryption key
    /// and signing key for ContainerApp Service Authentication/Authorization.
    /// </summary>
    public BicepValue<EncryptionSettings> EncryptionSettings { get => _encryptionSettings; set => _encryptionSettings.Assign(value); }
    private readonly BicepValue<EncryptionSettings> _encryptionSettings;

    /// <summary>
    /// The configuration settings that determines the validation flow of users
    /// using  Service Authentication/Authorization.
    /// </summary>
    public BicepValue<ContainerAppGlobalValidation> GlobalValidation { get => _globalValidation; set => _globalValidation.Assign(value); }
    private readonly BicepValue<ContainerAppGlobalValidation> _globalValidation;

    /// <summary>
    /// The configuration settings of the HTTP requests for authentication and
    /// authorization requests made against ContainerApp Service
    /// Authentication/Authorization.
    /// </summary>
    public BicepValue<ContainerAppHttpSettings> HttpSettings { get => _httpSettings; set => _httpSettings.Assign(value); }
    private readonly BicepValue<ContainerAppHttpSettings> _httpSettings;

    /// <summary>
    /// The configuration settings of each of the identity providers used to
    /// configure ContainerApp Service Authentication/Authorization.
    /// </summary>
    public BicepValue<ContainerAppIdentityProvidersConfiguration> IdentityProviders { get => _identityProviders; set => _identityProviders.Assign(value); }
    private readonly BicepValue<ContainerAppIdentityProvidersConfiguration> _identityProviders;

    /// <summary>
    /// The configuration settings of the login flow of users using
    /// ContainerApp Service Authentication/Authorization.
    /// </summary>
    public BicepValue<ContainerAppLogin> Login { get => _login; set => _login.Assign(value); }
    private readonly BicepValue<ContainerAppLogin> _login;

    /// <summary>
    /// The configuration settings of the platform of ContainerApp Service
    /// Authentication/Authorization.
    /// </summary>
    public BicepValue<ContainerAppAuthPlatform> Platform { get => _platform; set => _platform.Assign(value); }
    private readonly BicepValue<ContainerAppAuthPlatform> _platform;

    /// <summary>
    /// Gets the Id.
    /// </summary>
    public BicepValue<ResourceIdentifier> Id { get => _id; }
    private readonly BicepValue<ResourceIdentifier> _id;

    /// <summary>
    /// Gets the SystemData.
    /// </summary>
    public BicepValue<SystemData> SystemData { get => _systemData; }
    private readonly BicepValue<SystemData> _systemData;

    /// <summary>
    /// Gets or sets a reference to the parent ContainerApp.
    /// </summary>
    public ContainerApp? Parent { get => _parent!.Value; set => _parent!.Value = value; }
    private readonly ResourceReference<ContainerApp> _parent;

    /// <summary>
    /// Creates a new ContainerAppAuthConfig.
    /// </summary>
    /// <param name="resourceName">Name of the ContainerAppAuthConfig.</param>
    /// <param name="resourceVersion">Version of the ContainerAppAuthConfig.</param>
    public ContainerAppAuthConfig(string resourceName, string? resourceVersion = default)
        : base(resourceName, "Microsoft.App/containerApps/authConfigs", resourceVersion ?? "2024-03-01")
    {
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"], isRequired: true);
        _encryptionSettings = BicepValue<EncryptionSettings>.DefineProperty(this, "EncryptionSettings", ["properties", "encryptionSettings"]);
        _globalValidation = BicepValue<ContainerAppGlobalValidation>.DefineProperty(this, "GlobalValidation", ["properties", "globalValidation"]);
        _httpSettings = BicepValue<ContainerAppHttpSettings>.DefineProperty(this, "HttpSettings", ["properties", "httpSettings"]);
        _identityProviders = BicepValue<ContainerAppIdentityProvidersConfiguration>.DefineProperty(this, "IdentityProviders", ["properties", "identityProviders"]);
        _login = BicepValue<ContainerAppLogin>.DefineProperty(this, "Login", ["properties", "login"]);
        _platform = BicepValue<ContainerAppAuthPlatform>.DefineProperty(this, "Platform", ["properties", "platform"]);
        _id = BicepValue<ResourceIdentifier>.DefineProperty(this, "Id", ["id"], isOutput: true);
        _systemData = BicepValue<SystemData>.DefineProperty(this, "SystemData", ["systemData"], isOutput: true);
        _parent = ResourceReference<ContainerApp>.DefineResource(this, "Parent", ["parent"], isRequired: true);
    }

    /// <summary>
    /// Supported ContainerAppAuthConfig resource versions.
    /// </summary>
    public static class ResourceVersions
    {
        /// <summary>
        /// 2024-08-02-preview.
        /// </summary>
        public static readonly string V2024_08_02_preview = "2024-08-02-preview";

        /// <summary>
        /// 2024-03-01.
        /// </summary>
        public static readonly string V2024_03_01 = "2024-03-01";

        /// <summary>
        /// 2023-05-01.
        /// </summary>
        public static readonly string V2023_05_01 = "2023-05-01";

        /// <summary>
        /// 2022-10-01.
        /// </summary>
        public static readonly string V2022_10_01 = "2022-10-01";

        /// <summary>
        /// 2022-03-01.
        /// </summary>
        public static readonly string V2022_03_01 = "2022-03-01";
    }

    /// <summary>
    /// Creates a reference to an existing ContainerAppAuthConfig.
    /// </summary>
    /// <param name="resourceName">Name of the ContainerAppAuthConfig.</param>
    /// <param name="resourceVersion">Version of the ContainerAppAuthConfig.</param>
    /// <returns>The existing ContainerAppAuthConfig resource.</returns>
    public static ContainerAppAuthConfig FromExisting(string resourceName, string? resourceVersion = default) =>
        new(resourceName, resourceVersion) { IsExistingResource = true };
}
