// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.AppContainers;

/// <summary>
/// The configuration settings of the Azure Active Directory token validation
/// flow.
/// </summary>
public partial class ContainerAppAzureActiveDirectoryValidationConfiguration : ProvisioningConstruct
{
    /// <summary>
    /// The configuration settings of the checks that should be made while
    /// validating the JWT Claims.
    /// </summary>
    public BicepValue<ContainerAppJwtClaimChecks> JwtClaimChecks { get => _jwtClaimChecks; set => _jwtClaimChecks.Assign(value); }
    private readonly BicepValue<ContainerAppJwtClaimChecks> _jwtClaimChecks;

    /// <summary>
    /// The list of audiences that can make successful
    /// authentication/authorization requests.
    /// </summary>
    public BicepList<string> AllowedAudiences { get => _allowedAudiences; set => _allowedAudiences.Assign(value); }
    private readonly BicepList<string> _allowedAudiences;

    /// <summary>
    /// The configuration settings of the default authorization policy.
    /// </summary>
    public BicepValue<ContainerAppDefaultAuthorizationPolicy> DefaultAuthorizationPolicy { get => _defaultAuthorizationPolicy; set => _defaultAuthorizationPolicy.Assign(value); }
    private readonly BicepValue<ContainerAppDefaultAuthorizationPolicy> _defaultAuthorizationPolicy;

    /// <summary>
    /// Creates a new ContainerAppAzureActiveDirectoryValidationConfiguration.
    /// </summary>
    public ContainerAppAzureActiveDirectoryValidationConfiguration()
    {
        _jwtClaimChecks = BicepValue<ContainerAppJwtClaimChecks>.DefineProperty(this, "JwtClaimChecks", ["jwtClaimChecks"]);
        _allowedAudiences = BicepList<string>.DefineProperty(this, "AllowedAudiences", ["allowedAudiences"]);
        _defaultAuthorizationPolicy = BicepValue<ContainerAppDefaultAuthorizationPolicy>.DefineProperty(this, "DefaultAuthorizationPolicy", ["defaultAuthorizationPolicy"]);
    }
}
