// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Core;
using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.AppContainers;

/// <summary>
/// Container App versioned application definition.             Defines the
/// desired state of an immutable revision.             Any changes to this
/// section Will result in a new revision being created
/// </summary>
public partial class ContainerAppTemplate : ProvisioningConstruct
{
    /// <summary>
    /// User friendly suffix that is appended to the revision name.
    /// </summary>
    public BicepValue<string> RevisionSuffix { get => _revisionSuffix; set => _revisionSuffix.Assign(value); }
    private readonly BicepValue<string> _revisionSuffix;

    /// <summary>
    /// Optional duration in seconds the Container App Instance needs to
    /// terminate gracefully. Value must be non-negative integer. The value
    /// zero indicates stop immediately via the kill signal (no opportunity to
    /// shut down). If this value is nil, the default grace period will be
    /// used instead. Set this value longer than the expected cleanup time for
    /// your process. Defaults to 30 seconds.
    /// </summary>
    public BicepValue<long> TerminationGracePeriodSeconds { get => _terminationGracePeriodSeconds; set => _terminationGracePeriodSeconds.Assign(value); }
    private readonly BicepValue<long> _terminationGracePeriodSeconds;

    /// <summary>
    /// List of specialized containers that run before app containers.
    /// </summary>
    public BicepList<ContainerAppInitContainer> InitContainers { get => _initContainers; set => _initContainers.Assign(value); }
    private readonly BicepList<ContainerAppInitContainer> _initContainers;

    /// <summary>
    /// List of container definitions for the Container App.
    /// </summary>
    public BicepList<ContainerAppContainer> Containers { get => _containers; set => _containers.Assign(value); }
    private readonly BicepList<ContainerAppContainer> _containers;

    /// <summary>
    /// Scaling properties for the Container App.
    /// </summary>
    public BicepValue<ContainerAppScale> Scale { get => _scale; set => _scale.Assign(value); }
    private readonly BicepValue<ContainerAppScale> _scale;

    /// <summary>
    /// List of volume definitions for the Container App.
    /// </summary>
    public BicepList<ContainerAppVolume> Volumes { get => _volumes; set => _volumes.Assign(value); }
    private readonly BicepList<ContainerAppVolume> _volumes;

    /// <summary>
    /// List of container app services bound to the app.
    /// </summary>
    public BicepList<ContainerAppServiceBind> ServiceBinds { get => _serviceBinds; set => _serviceBinds.Assign(value); }
    private readonly BicepList<ContainerAppServiceBind> _serviceBinds;

    /// <summary>
    /// Creates a new ContainerAppTemplate.
    /// </summary>
    public ContainerAppTemplate()
    {
        _revisionSuffix = BicepValue<string>.DefineProperty(this, "RevisionSuffix", ["revisionSuffix"]);
        _terminationGracePeriodSeconds = BicepValue<long>.DefineProperty(this, "TerminationGracePeriodSeconds", ["terminationGracePeriodSeconds"]);
        _initContainers = BicepList<ContainerAppInitContainer>.DefineProperty(this, "InitContainers", ["initContainers"]);
        _containers = BicepList<ContainerAppContainer>.DefineProperty(this, "Containers", ["containers"]);
        _scale = BicepValue<ContainerAppScale>.DefineProperty(this, "Scale", ["scale"]);
        _volumes = BicepList<ContainerAppVolume>.DefineProperty(this, "Volumes", ["volumes"]);
        _serviceBinds = BicepList<ContainerAppServiceBind>.DefineProperty(this, "ServiceBinds", ["serviceBinds"]);
    }
}
