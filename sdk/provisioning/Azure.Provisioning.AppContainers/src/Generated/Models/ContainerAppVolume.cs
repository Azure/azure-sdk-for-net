// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.AppContainers;

/// <summary>
/// Volume definitions for the Container App.
/// </summary>
public partial class ContainerAppVolume : ProvisioningConstruct
{
    /// <summary>
    /// Volume name.
    /// </summary>
    public BicepValue<string> Name { get => _name; set => _name.Assign(value); }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// Storage type for the volume. If not provided, use EmptyDir.
    /// </summary>
    public BicepValue<ContainerAppStorageType> StorageType { get => _storageType; set => _storageType.Assign(value); }
    private readonly BicepValue<ContainerAppStorageType> _storageType;

    /// <summary>
    /// Name of storage resource. No need to provide for EmptyDir and Secret.
    /// </summary>
    public BicepValue<string> StorageName { get => _storageName; set => _storageName.Assign(value); }
    private readonly BicepValue<string> _storageName;

    /// <summary>
    /// List of secrets to be added in volume. If no secrets are provided, all
    /// secrets in collection will be added to volume.
    /// </summary>
    public BicepList<SecretVolumeItem> Secrets { get => _secrets; set => _secrets.Assign(value); }
    private readonly BicepList<SecretVolumeItem> _secrets;

    /// <summary>
    /// Mount options used while mounting the AzureFile. Must be a
    /// comma-separated string.
    /// </summary>
    public BicepValue<string> MountOptions { get => _mountOptions; set => _mountOptions.Assign(value); }
    private readonly BicepValue<string> _mountOptions;

    /// <summary>
    /// Creates a new ContainerAppVolume.
    /// </summary>
    public ContainerAppVolume()
    {
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"]);
        _storageType = BicepValue<ContainerAppStorageType>.DefineProperty(this, "StorageType", ["storageType"]);
        _storageName = BicepValue<string>.DefineProperty(this, "StorageName", ["storageName"]);
        _secrets = BicepList<SecretVolumeItem>.DefineProperty(this, "Secrets", ["secrets"]);
        _mountOptions = BicepValue<string>.DefineProperty(this, "MountOptions", ["mountOptions"]);
    }
}
