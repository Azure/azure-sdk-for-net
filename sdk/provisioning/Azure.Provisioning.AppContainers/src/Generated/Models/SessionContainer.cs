// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.AppContainers;

/// <summary>
/// Container definitions for the sessions of the session pool.
/// </summary>
public partial class SessionContainer : ProvisionableConstruct
{
    /// <summary>
    /// Container image tag.
    /// </summary>
    public BicepValue<string> Image 
    {
        get { Initialize(); return _image!; }
        set { Initialize(); _image!.Assign(value); }
    }
    private BicepValue<string>? _image;

    /// <summary>
    /// Custom container name.
    /// </summary>
    public BicepValue<string> Name 
    {
        get { Initialize(); return _name!; }
        set { Initialize(); _name!.Assign(value); }
    }
    private BicepValue<string>? _name;

    /// <summary>
    /// Container start command.
    /// </summary>
    public BicepList<string> Command 
    {
        get { Initialize(); return _command!; }
        set { Initialize(); _command!.Assign(value); }
    }
    private BicepList<string>? _command;

    /// <summary>
    /// Container start command arguments.
    /// </summary>
    public BicepList<string> Args 
    {
        get { Initialize(); return _args!; }
        set { Initialize(); _args!.Assign(value); }
    }
    private BicepList<string>? _args;

    /// <summary>
    /// Container environment variables.
    /// </summary>
    public BicepList<ContainerAppEnvironmentVariable> Env 
    {
        get { Initialize(); return _env!; }
        set { Initialize(); _env!.Assign(value); }
    }
    private BicepList<ContainerAppEnvironmentVariable>? _env;

    /// <summary>
    /// Container resource requirements.
    /// </summary>
    public SessionContainerResources Resources 
    {
        get { Initialize(); return _resources!; }
        set { Initialize(); AssignOrReplace(ref _resources, value); }
    }
    private SessionContainerResources? _resources;

    /// <summary>
    /// Creates a new SessionContainer.
    /// </summary>
    public SessionContainer()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of SessionContainer.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _image = DefineProperty<string>("Image", ["image"]);
        _name = DefineProperty<string>("Name", ["name"]);
        _command = DefineListProperty<string>("Command", ["command"]);
        _args = DefineListProperty<string>("Args", ["args"]);
        _env = DefineListProperty<ContainerAppEnvironmentVariable>("Env", ["env"]);
        _resources = DefineModelProperty<SessionContainerResources>("Resources", ["resources"]);
    }
}
