// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.AppContainers;

/// <summary>
/// Workload profile to scope container app execution.
/// </summary>
public partial class ContainerAppWorkloadProfile : ProvisioningConstruct
{
    /// <summary>
    /// Workload profile type for the workloads to run on.
    /// </summary>
    public BicepValue<string> Name { get => _name; set => _name.Assign(value); }
    private readonly BicepValue<string> _name;

    /// <summary>
    /// Workload profile type for the workloads to run on.
    /// </summary>
    public BicepValue<string> WorkloadProfileType { get => _workloadProfileType; set => _workloadProfileType.Assign(value); }
    private readonly BicepValue<string> _workloadProfileType;

    /// <summary>
    /// The minimum capacity.
    /// </summary>
    public BicepValue<int> MinimumNodeCount { get => _minimumNodeCount; set => _minimumNodeCount.Assign(value); }
    private readonly BicepValue<int> _minimumNodeCount;

    /// <summary>
    /// The maximum capacity.
    /// </summary>
    public BicepValue<int> MaximumNodeCount { get => _maximumNodeCount; set => _maximumNodeCount.Assign(value); }
    private readonly BicepValue<int> _maximumNodeCount;

    /// <summary>
    /// Creates a new ContainerAppWorkloadProfile.
    /// </summary>
    public ContainerAppWorkloadProfile()
    {
        _name = BicepValue<string>.DefineProperty(this, "Name", ["name"]);
        _workloadProfileType = BicepValue<string>.DefineProperty(this, "WorkloadProfileType", ["workloadProfileType"]);
        _minimumNodeCount = BicepValue<int>.DefineProperty(this, "MinimumNodeCount", ["minimumCount"]);
        _maximumNodeCount = BicepValue<int>.DefineProperty(this, "MaximumNodeCount", ["maximumCount"]);
    }
}
