// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Core;
using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.AppContainers;

/// <summary>
/// Non versioned Container App configuration properties that define the
/// mutable settings of a Container app.
/// </summary>
public partial class ContainerAppConfiguration : ProvisioningConstruct
{
    /// <summary>
    /// Collection of secrets used by a Container app.
    /// </summary>
    public BicepList<ContainerAppWritableSecret> Secrets { get => _secrets; set => _secrets.Assign(value); }
    private readonly BicepList<ContainerAppWritableSecret> _secrets;

    /// <summary>
    /// ActiveRevisionsMode controls how active revisions are handled for the
    /// Container app:             &lt;list&gt;&lt;item&gt;Multiple: multiple
    /// revisions can be active.&lt;/item&gt;&lt;item&gt;Single: Only one
    /// revision can be active at a time. Revision weights can not be used in
    /// this mode. If no value if provided, this is the
    /// default.&lt;/item&gt;&lt;/list&gt;
    /// </summary>
    public BicepValue<ContainerAppActiveRevisionsMode> ActiveRevisionsMode { get => _activeRevisionsMode; set => _activeRevisionsMode.Assign(value); }
    private readonly BicepValue<ContainerAppActiveRevisionsMode> _activeRevisionsMode;

    /// <summary>
    /// Ingress configurations.
    /// </summary>
    public BicepValue<ContainerAppIngressConfiguration> Ingress { get => _ingress; set => _ingress.Assign(value); }
    private readonly BicepValue<ContainerAppIngressConfiguration> _ingress;

    /// <summary>
    /// Collection of private container registry credentials for containers
    /// used by the Container app.
    /// </summary>
    public BicepList<ContainerAppRegistryCredentials> Registries { get => _registries; set => _registries.Assign(value); }
    private readonly BicepList<ContainerAppRegistryCredentials> _registries;

    /// <summary>
    /// Dapr configuration for the Container App.
    /// </summary>
    public BicepValue<ContainerAppDaprConfiguration> Dapr { get => _dapr; set => _dapr.Assign(value); }
    private readonly BicepValue<ContainerAppDaprConfiguration> _dapr;

    /// <summary>
    /// Optional. Max inactive revisions a Container App can have.
    /// </summary>
    public BicepValue<int> MaxInactiveRevisions { get => _maxInactiveRevisions; set => _maxInactiveRevisions.Assign(value); }
    private readonly BicepValue<int> _maxInactiveRevisions;

    /// <summary>
    /// Dev ContainerApp service type.
    /// </summary>
    public BicepValue<string> ServiceType { get => _serviceType; set => _serviceType.Assign(value); }
    private readonly BicepValue<string> _serviceType;

    /// <summary>
    /// Creates a new ContainerAppConfiguration.
    /// </summary>
    public ContainerAppConfiguration()
    {
        _secrets = BicepList<ContainerAppWritableSecret>.DefineProperty(this, "Secrets", ["secrets"]);
        _activeRevisionsMode = BicepValue<ContainerAppActiveRevisionsMode>.DefineProperty(this, "ActiveRevisionsMode", ["activeRevisionsMode"]);
        _ingress = BicepValue<ContainerAppIngressConfiguration>.DefineProperty(this, "Ingress", ["ingress"]);
        _registries = BicepList<ContainerAppRegistryCredentials>.DefineProperty(this, "Registries", ["registries"]);
        _dapr = BicepValue<ContainerAppDaprConfiguration>.DefineProperty(this, "Dapr", ["dapr"]);
        _maxInactiveRevisions = BicepValue<int>.DefineProperty(this, "MaxInactiveRevisions", ["maxInactiveRevisions"]);
        _serviceType = BicepValue<string>.DefineProperty(this, "ServiceType", ["service", "type"]);
    }
}
