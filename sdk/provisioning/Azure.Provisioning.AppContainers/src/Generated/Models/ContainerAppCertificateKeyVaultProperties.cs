// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.AppContainers;

/// <summary>
/// Properties for a certificate stored in a Key Vault.
/// </summary>
public partial class ContainerAppCertificateKeyVaultProperties : ProvisionableConstruct
{
    /// <summary>
    /// Resource ID of a managed identity to authenticate with Azure Key Vault,
    /// or System to use a system-assigned identity.
    /// </summary>
    public BicepValue<string> Identity 
    {
        get { Initialize(); return _identity!; }
        set { Initialize(); _identity!.Assign(value); }
    }
    private BicepValue<string>? _identity;

    /// <summary>
    /// URL pointing to the Azure Key Vault secret that holds the certificate.
    /// </summary>
    public BicepValue<Uri> KeyVaultUri 
    {
        get { Initialize(); return _keyVaultUri!; }
        set { Initialize(); _keyVaultUri!.Assign(value); }
    }
    private BicepValue<Uri>? _keyVaultUri;

    /// <summary>
    /// Creates a new ContainerAppCertificateKeyVaultProperties.
    /// </summary>
    public ContainerAppCertificateKeyVaultProperties()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of
    /// ContainerAppCertificateKeyVaultProperties.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _identity = DefineProperty<string>("Identity", ["identity"]);
        _keyVaultUri = DefineProperty<Uri>("KeyVaultUri", ["keyVaultUrl"]);
    }
}
