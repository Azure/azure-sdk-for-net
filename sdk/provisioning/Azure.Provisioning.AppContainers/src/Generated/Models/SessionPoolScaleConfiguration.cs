// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable enable

using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.AppContainers;

/// <summary>
/// Scale configuration.
/// </summary>
public partial class SessionPoolScaleConfiguration : ProvisionableConstruct
{
    /// <summary>
    /// The maximum count of sessions at the same time.
    /// </summary>
    public BicepValue<int> MaxConcurrentSessions 
    {
        get { Initialize(); return _maxConcurrentSessions!; }
        set { Initialize(); _maxConcurrentSessions!.Assign(value); }
    }
    private BicepValue<int>? _maxConcurrentSessions;

    /// <summary>
    /// The minimum count of ready session instances.
    /// </summary>
    public BicepValue<int> ReadySessionInstances 
    {
        get { Initialize(); return _readySessionInstances!; }
        set { Initialize(); _readySessionInstances!.Assign(value); }
    }
    private BicepValue<int>? _readySessionInstances;

    /// <summary>
    /// Creates a new SessionPoolScaleConfiguration.
    /// </summary>
    public SessionPoolScaleConfiguration()
    {
    }

    /// <summary>
    /// Define all the provisionable properties of
    /// SessionPoolScaleConfiguration.
    /// </summary>
    protected override void DefineProvisionableProperties()
    {
        base.DefineProvisionableProperties();
        _maxConcurrentSessions = DefineProperty<int>("MaxConcurrentSessions", ["maxConcurrentSessions"]);
        _readySessionInstances = DefineProperty<int>("ReadySessionInstances", ["readySessionInstances"]);
    }
}
