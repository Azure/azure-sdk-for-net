// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

using Azure.Provisioning;
using Azure.Provisioning.Primitives;
using System;

namespace Azure.Provisioning.AppContainers;

/// <summary>
/// The configuration settings of the login flow of users using ContainerApp
/// Service Authentication/Authorization.
/// </summary>
public partial class ContainerAppLogin : ProvisioningConstruct
{
    /// <summary>
    /// The endpoint at which a logout request should be made.
    /// </summary>
    public BicepValue<string> RoutesLogoutEndpoint { get => _routesLogoutEndpoint; set => _routesLogoutEndpoint.Assign(value); }
    private readonly BicepValue<string> _routesLogoutEndpoint;

    /// <summary>
    /// The configuration settings of the token store.
    /// </summary>
    public BicepValue<ContainerAppTokenStore> TokenStore { get => _tokenStore; set => _tokenStore.Assign(value); }
    private readonly BicepValue<ContainerAppTokenStore> _tokenStore;

    /// <summary>
    /// &lt;code&gt;true&lt;/code&gt; if the fragments from the request are
    /// preserved after the login request is made; otherwise,
    /// &lt;code&gt;false&lt;/code&gt;.
    /// </summary>
    public BicepValue<bool> PreserveUrlFragmentsForLogins { get => _preserveUrlFragmentsForLogins; set => _preserveUrlFragmentsForLogins.Assign(value); }
    private readonly BicepValue<bool> _preserveUrlFragmentsForLogins;

    /// <summary>
    /// External URLs that can be redirected to as part of logging in or
    /// logging out of the app. Note that the query string part of the URL is
    /// ignored.             This is an advanced setting typically only needed
    /// by Windows Store application backends.             Note that URLs
    /// within the current domain are always implicitly allowed.
    /// </summary>
    public BicepList<string> AllowedExternalRedirectUrls { get => _allowedExternalRedirectUrls; set => _allowedExternalRedirectUrls.Assign(value); }
    private readonly BicepList<string> _allowedExternalRedirectUrls;

    /// <summary>
    /// The configuration settings of the session cookie&apos;s expiration.
    /// </summary>
    public BicepValue<ContainerAppCookieExpiration> CookieExpiration { get => _cookieExpiration; set => _cookieExpiration.Assign(value); }
    private readonly BicepValue<ContainerAppCookieExpiration> _cookieExpiration;

    /// <summary>
    /// The configuration settings of the nonce used in the login flow.
    /// </summary>
    public BicepValue<ContainerAppLoginNonce> Nonce { get => _nonce; set => _nonce.Assign(value); }
    private readonly BicepValue<ContainerAppLoginNonce> _nonce;

    /// <summary>
    /// Creates a new ContainerAppLogin.
    /// </summary>
    public ContainerAppLogin()
    {
        _routesLogoutEndpoint = BicepValue<string>.DefineProperty(this, "RoutesLogoutEndpoint", ["routes", "logoutEndpoint"]);
        _tokenStore = BicepValue<ContainerAppTokenStore>.DefineProperty(this, "TokenStore", ["tokenStore"]);
        _preserveUrlFragmentsForLogins = BicepValue<bool>.DefineProperty(this, "PreserveUrlFragmentsForLogins", ["preserveUrlFragmentsForLogins"]);
        _allowedExternalRedirectUrls = BicepList<string>.DefineProperty(this, "AllowedExternalRedirectUrls", ["allowedExternalRedirectUrls"]);
        _cookieExpiration = BicepValue<ContainerAppCookieExpiration>.DefineProperty(this, "CookieExpiration", ["cookieExpiration"]);
        _nonce = BicepValue<ContainerAppLoginNonce>.DefineProperty(this, "Nonce", ["nonce"]);
    }
}
