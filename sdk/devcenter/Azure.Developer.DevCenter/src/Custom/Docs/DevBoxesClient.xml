<?xml version="1.0" encoding="utf-8" ?>
<doc>
  <members>
    <member name="CreateDevBoxAsync(WaitUntil,string,string,DevBox,CancellationToken)">
      <example>
        This sample shows how to call CreateDevBoxAsync.
        <code>
          <![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

DevBox devBox = new DevBox("<devBoxName>", "<poolName>");
Operation<DevBox> operation = await client.CreateDevBoxAsync(WaitUntil.Completed, "<projectName>", "<userId>", devBox);
DevBox responseData = operation.Value;
]]>
        </code>
        This sample shows how to call CreateDevBoxAsync with all parameters.
        <code>
          <![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

DevBox devBox = new DevBox("<devBoxName>", "<poolName>")
{
    LocalAdministratorStatus = LocalAdministratorStatus.Enabled,
};
Operation<DevBox> operation = await client.CreateDevBoxAsync(WaitUntil.Completed, "<projectName>", "<userId>", devBox);
DevBox responseData = operation.Value;
]]>
        </code>
      </example>
    </member>
    <member name="CreateDevBox(WaitUntil,string,string,DevBox,CancellationToken)">
      <example>
        This sample shows how to call CreateDevBox.
        <code>
          <![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

DevBox devBox = new DevBox("<devBoxName>", "<poolName>");
Operation<DevBox> operation = client.CreateDevBox(WaitUntil.Completed, "<projectName>", "<userId>", devBox);
DevBox responseData = operation.Value;
]]>
        </code>
        This sample shows how to call CreateDevBox with all parameters.
        <code>
          <![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

DevBox devBox = new DevBox("<devBoxName>", "<poolName>")
{
    LocalAdministratorStatus = LocalAdministratorStatus.Enabled,
};
Operation<DevBox> operation = client.CreateDevBox(WaitUntil.Completed, "<projectName>", "<userId>", devBox);
DevBox responseData = operation.Value;
]]>
        </code>
      </example>
    </member>
  </members>
</doc>
