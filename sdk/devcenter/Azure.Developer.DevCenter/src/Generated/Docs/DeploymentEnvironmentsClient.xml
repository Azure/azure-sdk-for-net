<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetEnvironmentAsync(string,string,string,CancellationToken)">
      <example>
This sample shows how to call GetEnvironmentAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response<DevCenterEnvironment> response = await client.GetEnvironmentAsync("myProject", "me", "mydevenv");
]]></code></example>
    </member>
    <member name="GetEnvironment(string,string,string,CancellationToken)">
      <example>
This sample shows how to call GetEnvironment.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response<DevCenterEnvironment> response = client.GetEnvironment("myProject", "me", "mydevenv");
]]></code></example>
    </member>
    <member name="GetEnvironmentAsync(string,string,string,RequestContext)">
      <example>
This sample shows how to call GetEnvironmentAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response response = await client.GetEnvironmentAsync("myProject", "me", "mydevenv", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("environmentType").ToString());
Console.WriteLine(result.GetProperty("catalogName").ToString());
Console.WriteLine(result.GetProperty("environmentDefinitionName").ToString());
]]></code></example>
    </member>
    <member name="GetEnvironment(string,string,string,RequestContext)">
      <example>
This sample shows how to call GetEnvironment and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response response = client.GetEnvironment("myProject", "me", "mydevenv", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("environmentType").ToString());
Console.WriteLine(result.GetProperty("catalogName").ToString());
Console.WriteLine(result.GetProperty("environmentDefinitionName").ToString());
]]></code></example>
    </member>
    <member name="GetCatalogAsync(string,string,CancellationToken)">
      <example>
This sample shows how to call GetCatalogAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response<DevCenterCatalog> response = await client.GetCatalogAsync("myProject", "foo");
]]></code></example>
    </member>
    <member name="GetCatalog(string,string,CancellationToken)">
      <example>
This sample shows how to call GetCatalog.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response<DevCenterCatalog> response = client.GetCatalog("myProject", "foo");
]]></code></example>
    </member>
    <member name="GetCatalogAsync(string,string,RequestContext)">
      <example>
This sample shows how to call GetCatalogAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response response = await client.GetCatalogAsync("myProject", "foo", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="GetCatalog(string,string,RequestContext)">
      <example>
This sample shows how to call GetCatalog and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response response = client.GetCatalog("myProject", "foo", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="GetEnvironmentDefinitionAsync(string,string,string,CancellationToken)">
      <example>
This sample shows how to call GetEnvironmentDefinitionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response<EnvironmentDefinition> response = await client.GetEnvironmentDefinitionAsync("myProject", "myCatalog", "foo");
]]></code></example>
    </member>
    <member name="GetEnvironmentDefinition(string,string,string,CancellationToken)">
      <example>
This sample shows how to call GetEnvironmentDefinition.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response<EnvironmentDefinition> response = client.GetEnvironmentDefinition("myProject", "myCatalog", "foo");
]]></code></example>
    </member>
    <member name="GetEnvironmentDefinitionAsync(string,string,string,RequestContext)">
      <example>
This sample shows how to call GetEnvironmentDefinitionAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response response = await client.GetEnvironmentDefinitionAsync("myProject", "myCatalog", "foo", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("catalogName").ToString());
]]></code></example>
    </member>
    <member name="GetEnvironmentDefinition(string,string,string,RequestContext)">
      <example>
This sample shows how to call GetEnvironmentDefinition and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response response = client.GetEnvironmentDefinition("myProject", "myCatalog", "foo", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("catalogName").ToString());
]]></code></example>
    </member>
    <member name="GetAllEnvironmentsAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetAllEnvironmentsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (DevCenterEnvironment item in client.GetAllEnvironmentsAsync("myProject"))
{
}
]]></code></example>
    </member>
    <member name="GetAllEnvironments(string,CancellationToken)">
      <example>
This sample shows how to call GetAllEnvironments.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (DevCenterEnvironment item in client.GetAllEnvironments("myProject"))
{
}
]]></code></example>
    </member>
    <member name="GetAllEnvironmentsAsync(string,RequestContext)">
      <example>
This sample shows how to call GetAllEnvironmentsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (BinaryData item in client.GetAllEnvironmentsAsync("myProject", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("environmentType").ToString());
    Console.WriteLine(result.GetProperty("catalogName").ToString());
    Console.WriteLine(result.GetProperty("environmentDefinitionName").ToString());
}
]]></code></example>
    </member>
    <member name="GetAllEnvironments(string,RequestContext)">
      <example>
This sample shows how to call GetAllEnvironments and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (BinaryData item in client.GetAllEnvironments("myProject", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("environmentType").ToString());
    Console.WriteLine(result.GetProperty("catalogName").ToString());
    Console.WriteLine(result.GetProperty("environmentDefinitionName").ToString());
}
]]></code></example>
    </member>
    <member name="GetEnvironmentsAsync(string,string,CancellationToken)">
      <example>
This sample shows how to call GetEnvironmentsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (DevCenterEnvironment item in client.GetEnvironmentsAsync("myProject", "me"))
{
}
]]></code></example>
    </member>
    <member name="GetEnvironments(string,string,CancellationToken)">
      <example>
This sample shows how to call GetEnvironments.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (DevCenterEnvironment item in client.GetEnvironments("myProject", "me"))
{
}
]]></code></example>
    </member>
    <member name="GetEnvironmentsAsync(string,string,RequestContext)">
      <example>
This sample shows how to call GetEnvironmentsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (BinaryData item in client.GetEnvironmentsAsync("myProject", "me", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("environmentType").ToString());
    Console.WriteLine(result.GetProperty("catalogName").ToString());
    Console.WriteLine(result.GetProperty("environmentDefinitionName").ToString());
}
]]></code></example>
    </member>
    <member name="GetEnvironments(string,string,RequestContext)">
      <example>
This sample shows how to call GetEnvironments and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (BinaryData item in client.GetEnvironments("myProject", "me", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("environmentType").ToString());
    Console.WriteLine(result.GetProperty("catalogName").ToString());
    Console.WriteLine(result.GetProperty("environmentDefinitionName").ToString());
}
]]></code></example>
    </member>
    <member name="GetCatalogsAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetCatalogsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (DevCenterCatalog item in client.GetCatalogsAsync("myProject"))
{
}
]]></code></example>
    </member>
    <member name="GetCatalogs(string,CancellationToken)">
      <example>
This sample shows how to call GetCatalogs.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (DevCenterCatalog item in client.GetCatalogs("myProject"))
{
}
]]></code></example>
    </member>
    <member name="GetCatalogsAsync(string,RequestContext)">
      <example>
This sample shows how to call GetCatalogsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (BinaryData item in client.GetCatalogsAsync("myProject", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
}
]]></code></example>
    </member>
    <member name="GetCatalogs(string,RequestContext)">
      <example>
This sample shows how to call GetCatalogs and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (BinaryData item in client.GetCatalogs("myProject", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
}
]]></code></example>
    </member>
    <member name="GetEnvironmentDefinitionsAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetEnvironmentDefinitionsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (EnvironmentDefinition item in client.GetEnvironmentDefinitionsAsync("myProject"))
{
}
]]></code></example>
    </member>
    <member name="GetEnvironmentDefinitions(string,CancellationToken)">
      <example>
This sample shows how to call GetEnvironmentDefinitions.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (EnvironmentDefinition item in client.GetEnvironmentDefinitions("myProject"))
{
}
]]></code></example>
    </member>
    <member name="GetEnvironmentDefinitionsAsync(string,RequestContext)">
      <example>
This sample shows how to call GetEnvironmentDefinitionsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (BinaryData item in client.GetEnvironmentDefinitionsAsync("myProject", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("catalogName").ToString());
}
]]></code></example>
    </member>
    <member name="GetEnvironmentDefinitions(string,RequestContext)">
      <example>
This sample shows how to call GetEnvironmentDefinitions and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (BinaryData item in client.GetEnvironmentDefinitions("myProject", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("catalogName").ToString());
}
]]></code></example>
    </member>
    <member name="GetEnvironmentDefinitionsByCatalogAsync(string,string,CancellationToken)">
      <example>
This sample shows how to call GetEnvironmentDefinitionsByCatalogAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (EnvironmentDefinition item in client.GetEnvironmentDefinitionsByCatalogAsync("myProject", "myCatalog"))
{
}
]]></code></example>
    </member>
    <member name="GetEnvironmentDefinitionsByCatalog(string,string,CancellationToken)">
      <example>
This sample shows how to call GetEnvironmentDefinitionsByCatalog.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (EnvironmentDefinition item in client.GetEnvironmentDefinitionsByCatalog("myProject", "myCatalog"))
{
}
]]></code></example>
    </member>
    <member name="GetEnvironmentDefinitionsByCatalogAsync(string,string,RequestContext)">
      <example>
This sample shows how to call GetEnvironmentDefinitionsByCatalogAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (BinaryData item in client.GetEnvironmentDefinitionsByCatalogAsync("myProject", "myCatalog", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("catalogName").ToString());
}
]]></code></example>
    </member>
    <member name="GetEnvironmentDefinitionsByCatalog(string,string,RequestContext)">
      <example>
This sample shows how to call GetEnvironmentDefinitionsByCatalog and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (BinaryData item in client.GetEnvironmentDefinitionsByCatalog("myProject", "myCatalog", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("catalogName").ToString());
}
]]></code></example>
    </member>
    <member name="GetEnvironmentTypesAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetEnvironmentTypesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (DevCenterEnvironmentType item in client.GetEnvironmentTypesAsync("myProject"))
{
}
]]></code></example>
    </member>
    <member name="GetEnvironmentTypes(string,CancellationToken)">
      <example>
This sample shows how to call GetEnvironmentTypes.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (DevCenterEnvironmentType item in client.GetEnvironmentTypes("myProject"))
{
}
]]></code></example>
    </member>
    <member name="GetEnvironmentTypesAsync(string,RequestContext)">
      <example>
This sample shows how to call GetEnvironmentTypesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (BinaryData item in client.GetEnvironmentTypesAsync("myProject", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("deploymentTargetId").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
}
]]></code></example>
    </member>
    <member name="GetEnvironmentTypes(string,RequestContext)">
      <example>
This sample shows how to call GetEnvironmentTypes and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (BinaryData item in client.GetEnvironmentTypes("myProject", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("deploymentTargetId").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
}
]]></code></example>
    </member>
    <member name="CreateOrUpdateEnvironmentAsync(WaitUntil,string,string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrUpdateEnvironmentAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    environmentType = "DevTest",
    catalogName = "main",
    environmentDefinitionName = "helloworld",
    parameters = new
    {
        functionAppRuntime = "node",
        storageAccountType = "Standard_LRS",
    },
});
Operation<BinaryData> operation = await client.CreateOrUpdateEnvironmentAsync(WaitUntil.Completed, "myProject", "me", "mydevenv", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("environmentType").ToString());
Console.WriteLine(result.GetProperty("catalogName").ToString());
Console.WriteLine(result.GetProperty("environmentDefinitionName").ToString());
]]></code></example>
    </member>
    <member name="CreateOrUpdateEnvironment(WaitUntil,string,string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrUpdateEnvironment and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    environmentType = "DevTest",
    catalogName = "main",
    environmentDefinitionName = "helloworld",
    parameters = new
    {
        functionAppRuntime = "node",
        storageAccountType = "Standard_LRS",
    },
});
Operation<BinaryData> operation = client.CreateOrUpdateEnvironment(WaitUntil.Completed, "myProject", "me", "mydevenv", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("environmentType").ToString());
Console.WriteLine(result.GetProperty("catalogName").ToString());
Console.WriteLine(result.GetProperty("environmentDefinitionName").ToString());
]]></code></example>
    </member>
    <member name="DeleteEnvironmentAsync(WaitUntil,string,string,string,RequestContext)">
      <example>
This sample shows how to call DeleteEnvironmentAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Operation operation = await client.DeleteEnvironmentAsync(WaitUntil.Completed, "myProject", "me", "mydevenv");
]]></code></example>
    </member>
    <member name="DeleteEnvironment(WaitUntil,string,string,string,RequestContext)">
      <example>
This sample shows how to call DeleteEnvironment.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Operation operation = client.DeleteEnvironment(WaitUntil.Completed, "myProject", "me", "mydevenv");
]]></code></example>
    </member>
  </members>
</doc>