<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetEnvironmentAsync(string,string,string,CancellationToken)">
      <example>
This sample shows how to call GetEnvironmentAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response<DevCenterEnvironment> response = await client.GetEnvironmentAsync("<projectName>", "<userId>", "<environmentName>");
]]></code>
This sample shows how to call GetEnvironmentAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response<DevCenterEnvironment> response = await client.GetEnvironmentAsync("<projectName>", "<userId>", "<environmentName>");
]]></code></example>
    </member>
    <member name="GetEnvironment(string,string,string,CancellationToken)">
      <example>
This sample shows how to call GetEnvironment.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response<DevCenterEnvironment> response = client.GetEnvironment("<projectName>", "<userId>", "<environmentName>");
]]></code>
This sample shows how to call GetEnvironment with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response<DevCenterEnvironment> response = client.GetEnvironment("<projectName>", "<userId>", "<environmentName>");
]]></code></example>
    </member>
    <member name="GetEnvironmentAsync(string,string,string,RequestContext)">
      <example>
This sample shows how to call GetEnvironmentAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response response = await client.GetEnvironmentAsync("<projectName>", "<userId>", "<environmentName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("environmentType").ToString());
Console.WriteLine(result.GetProperty("catalogName").ToString());
Console.WriteLine(result.GetProperty("environmentDefinitionName").ToString());
]]></code>
This sample shows how to call GetEnvironmentAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response response = await client.GetEnvironmentAsync("<projectName>", "<userId>", "<environmentName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("parameters").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("environmentType").ToString());
Console.WriteLine(result.GetProperty("user").ToString());
Console.WriteLine(result.GetProperty("provisioningState").ToString());
Console.WriteLine(result.GetProperty("resourceGroupId").ToString());
Console.WriteLine(result.GetProperty("catalogName").ToString());
Console.WriteLine(result.GetProperty("environmentDefinitionName").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
]]></code></example>
    </member>
    <member name="GetEnvironment(string,string,string,RequestContext)">
      <example>
This sample shows how to call GetEnvironment and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response response = client.GetEnvironment("<projectName>", "<userId>", "<environmentName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("environmentType").ToString());
Console.WriteLine(result.GetProperty("catalogName").ToString());
Console.WriteLine(result.GetProperty("environmentDefinitionName").ToString());
]]></code>
This sample shows how to call GetEnvironment with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response response = client.GetEnvironment("<projectName>", "<userId>", "<environmentName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("parameters").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("environmentType").ToString());
Console.WriteLine(result.GetProperty("user").ToString());
Console.WriteLine(result.GetProperty("provisioningState").ToString());
Console.WriteLine(result.GetProperty("resourceGroupId").ToString());
Console.WriteLine(result.GetProperty("catalogName").ToString());
Console.WriteLine(result.GetProperty("environmentDefinitionName").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
]]></code></example>
    </member>
    <member name="GetCatalogAsync(string,string,CancellationToken)">
      <example>
This sample shows how to call GetCatalogAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response<DevCenterCatalog> response = await client.GetCatalogAsync("<projectName>", "<catalogName>");
]]></code>
This sample shows how to call GetCatalogAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response<DevCenterCatalog> response = await client.GetCatalogAsync("<projectName>", "<catalogName>");
]]></code></example>
    </member>
    <member name="GetCatalog(string,string,CancellationToken)">
      <example>
This sample shows how to call GetCatalog.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response<DevCenterCatalog> response = client.GetCatalog("<projectName>", "<catalogName>");
]]></code>
This sample shows how to call GetCatalog with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response<DevCenterCatalog> response = client.GetCatalog("<projectName>", "<catalogName>");
]]></code></example>
    </member>
    <member name="GetCatalogAsync(string,string,RequestContext)">
      <example>
This sample shows how to call GetCatalogAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response response = await client.GetCatalogAsync("<projectName>", "<catalogName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call GetCatalogAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response response = await client.GetCatalogAsync("<projectName>", "<catalogName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="GetCatalog(string,string,RequestContext)">
      <example>
This sample shows how to call GetCatalog and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response response = client.GetCatalog("<projectName>", "<catalogName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code>
This sample shows how to call GetCatalog with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response response = client.GetCatalog("<projectName>", "<catalogName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
]]></code></example>
    </member>
    <member name="GetEnvironmentDefinitionAsync(string,string,string,CancellationToken)">
      <example>
This sample shows how to call GetEnvironmentDefinitionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response<EnvironmentDefinition> response = await client.GetEnvironmentDefinitionAsync("<projectName>", "<catalogName>", "<definitionName>");
]]></code>
This sample shows how to call GetEnvironmentDefinitionAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response<EnvironmentDefinition> response = await client.GetEnvironmentDefinitionAsync("<projectName>", "<catalogName>", "<definitionName>");
]]></code></example>
    </member>
    <member name="GetEnvironmentDefinition(string,string,string,CancellationToken)">
      <example>
This sample shows how to call GetEnvironmentDefinition.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response<EnvironmentDefinition> response = client.GetEnvironmentDefinition("<projectName>", "<catalogName>", "<definitionName>");
]]></code>
This sample shows how to call GetEnvironmentDefinition with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response<EnvironmentDefinition> response = client.GetEnvironmentDefinition("<projectName>", "<catalogName>", "<definitionName>");
]]></code></example>
    </member>
    <member name="GetEnvironmentDefinitionAsync(string,string,string,RequestContext)">
      <example>
This sample shows how to call GetEnvironmentDefinitionAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response response = await client.GetEnvironmentDefinitionAsync("<projectName>", "<catalogName>", "<definitionName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("catalogName").ToString());
]]></code>
This sample shows how to call GetEnvironmentDefinitionAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response response = await client.GetEnvironmentDefinitionAsync("<projectName>", "<catalogName>", "<definitionName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("catalogName").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("default").ToString());
Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("readOnly").ToString());
Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("required").ToString());
Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("allowed")[0].ToString());
Console.WriteLine(result.GetProperty("parametersSchema").ToString());
Console.WriteLine(result.GetProperty("templatePath").ToString());
]]></code></example>
    </member>
    <member name="GetEnvironmentDefinition(string,string,string,RequestContext)">
      <example>
This sample shows how to call GetEnvironmentDefinition and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response response = client.GetEnvironmentDefinition("<projectName>", "<catalogName>", "<definitionName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("catalogName").ToString());
]]></code>
This sample shows how to call GetEnvironmentDefinition with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Response response = client.GetEnvironmentDefinition("<projectName>", "<catalogName>", "<definitionName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("catalogName").ToString());
Console.WriteLine(result.GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("default").ToString());
Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("readOnly").ToString());
Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("required").ToString());
Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("allowed")[0].ToString());
Console.WriteLine(result.GetProperty("parametersSchema").ToString());
Console.WriteLine(result.GetProperty("templatePath").ToString());
]]></code></example>
    </member>
    <member name="GetAllEnvironmentsAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetAllEnvironmentsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (DevCenterEnvironment item in client.GetAllEnvironmentsAsync("<projectName>"))
{
}
]]></code>
This sample shows how to call GetAllEnvironmentsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (DevCenterEnvironment item in client.GetAllEnvironmentsAsync("<projectName>"))
{
}
]]></code></example>
    </member>
    <member name="GetAllEnvironments(string,CancellationToken)">
      <example>
This sample shows how to call GetAllEnvironments.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (DevCenterEnvironment item in client.GetAllEnvironments("<projectName>"))
{
}
]]></code>
This sample shows how to call GetAllEnvironments with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (DevCenterEnvironment item in client.GetAllEnvironments("<projectName>"))
{
}
]]></code></example>
    </member>
    <member name="GetAllEnvironmentsAsync(string,RequestContext)">
      <example>
This sample shows how to call GetAllEnvironmentsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (BinaryData item in client.GetAllEnvironmentsAsync("<projectName>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("environmentType").ToString());
    Console.WriteLine(result.GetProperty("catalogName").ToString());
    Console.WriteLine(result.GetProperty("environmentDefinitionName").ToString());
}
]]></code>
This sample shows how to call GetAllEnvironmentsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (BinaryData item in client.GetAllEnvironmentsAsync("<projectName>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("parameters").GetProperty("<key>").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("environmentType").ToString());
    Console.WriteLine(result.GetProperty("user").ToString());
    Console.WriteLine(result.GetProperty("provisioningState").ToString());
    Console.WriteLine(result.GetProperty("resourceGroupId").ToString());
    Console.WriteLine(result.GetProperty("catalogName").ToString());
    Console.WriteLine(result.GetProperty("environmentDefinitionName").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
}
]]></code></example>
    </member>
    <member name="GetAllEnvironments(string,RequestContext)">
      <example>
This sample shows how to call GetAllEnvironments and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (BinaryData item in client.GetAllEnvironments("<projectName>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("environmentType").ToString());
    Console.WriteLine(result.GetProperty("catalogName").ToString());
    Console.WriteLine(result.GetProperty("environmentDefinitionName").ToString());
}
]]></code>
This sample shows how to call GetAllEnvironments with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (BinaryData item in client.GetAllEnvironments("<projectName>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("parameters").GetProperty("<key>").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("environmentType").ToString());
    Console.WriteLine(result.GetProperty("user").ToString());
    Console.WriteLine(result.GetProperty("provisioningState").ToString());
    Console.WriteLine(result.GetProperty("resourceGroupId").ToString());
    Console.WriteLine(result.GetProperty("catalogName").ToString());
    Console.WriteLine(result.GetProperty("environmentDefinitionName").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
}
]]></code></example>
    </member>
    <member name="GetEnvironmentsAsync(string,string,CancellationToken)">
      <example>
This sample shows how to call GetEnvironmentsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (DevCenterEnvironment item in client.GetEnvironmentsAsync("<projectName>", "<userId>"))
{
}
]]></code>
This sample shows how to call GetEnvironmentsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (DevCenterEnvironment item in client.GetEnvironmentsAsync("<projectName>", "<userId>"))
{
}
]]></code></example>
    </member>
    <member name="GetEnvironments(string,string,CancellationToken)">
      <example>
This sample shows how to call GetEnvironments.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (DevCenterEnvironment item in client.GetEnvironments("<projectName>", "<userId>"))
{
}
]]></code>
This sample shows how to call GetEnvironments with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (DevCenterEnvironment item in client.GetEnvironments("<projectName>", "<userId>"))
{
}
]]></code></example>
    </member>
    <member name="GetEnvironmentsAsync(string,string,RequestContext)">
      <example>
This sample shows how to call GetEnvironmentsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (BinaryData item in client.GetEnvironmentsAsync("<projectName>", "<userId>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("environmentType").ToString());
    Console.WriteLine(result.GetProperty("catalogName").ToString());
    Console.WriteLine(result.GetProperty("environmentDefinitionName").ToString());
}
]]></code>
This sample shows how to call GetEnvironmentsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (BinaryData item in client.GetEnvironmentsAsync("<projectName>", "<userId>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("parameters").GetProperty("<key>").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("environmentType").ToString());
    Console.WriteLine(result.GetProperty("user").ToString());
    Console.WriteLine(result.GetProperty("provisioningState").ToString());
    Console.WriteLine(result.GetProperty("resourceGroupId").ToString());
    Console.WriteLine(result.GetProperty("catalogName").ToString());
    Console.WriteLine(result.GetProperty("environmentDefinitionName").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
}
]]></code></example>
    </member>
    <member name="GetEnvironments(string,string,RequestContext)">
      <example>
This sample shows how to call GetEnvironments and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (BinaryData item in client.GetEnvironments("<projectName>", "<userId>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("environmentType").ToString());
    Console.WriteLine(result.GetProperty("catalogName").ToString());
    Console.WriteLine(result.GetProperty("environmentDefinitionName").ToString());
}
]]></code>
This sample shows how to call GetEnvironments with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (BinaryData item in client.GetEnvironments("<projectName>", "<userId>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("parameters").GetProperty("<key>").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("environmentType").ToString());
    Console.WriteLine(result.GetProperty("user").ToString());
    Console.WriteLine(result.GetProperty("provisioningState").ToString());
    Console.WriteLine(result.GetProperty("resourceGroupId").ToString());
    Console.WriteLine(result.GetProperty("catalogName").ToString());
    Console.WriteLine(result.GetProperty("environmentDefinitionName").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
    Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
}
]]></code></example>
    </member>
    <member name="GetCatalogsAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetCatalogsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (DevCenterCatalog item in client.GetCatalogsAsync("<projectName>"))
{
}
]]></code>
This sample shows how to call GetCatalogsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (DevCenterCatalog item in client.GetCatalogsAsync("<projectName>"))
{
}
]]></code></example>
    </member>
    <member name="GetCatalogs(string,CancellationToken)">
      <example>
This sample shows how to call GetCatalogs.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (DevCenterCatalog item in client.GetCatalogs("<projectName>"))
{
}
]]></code>
This sample shows how to call GetCatalogs with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (DevCenterCatalog item in client.GetCatalogs("<projectName>"))
{
}
]]></code></example>
    </member>
    <member name="GetCatalogsAsync(string,RequestContext)">
      <example>
This sample shows how to call GetCatalogsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (BinaryData item in client.GetCatalogsAsync("<projectName>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
}
]]></code>
This sample shows how to call GetCatalogsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (BinaryData item in client.GetCatalogsAsync("<projectName>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
}
]]></code></example>
    </member>
    <member name="GetCatalogs(string,RequestContext)">
      <example>
This sample shows how to call GetCatalogs and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (BinaryData item in client.GetCatalogs("<projectName>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
}
]]></code>
This sample shows how to call GetCatalogs with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (BinaryData item in client.GetCatalogs("<projectName>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
}
]]></code></example>
    </member>
    <member name="GetEnvironmentDefinitionsAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetEnvironmentDefinitionsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (EnvironmentDefinition item in client.GetEnvironmentDefinitionsAsync("<projectName>"))
{
}
]]></code>
This sample shows how to call GetEnvironmentDefinitionsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (EnvironmentDefinition item in client.GetEnvironmentDefinitionsAsync("<projectName>"))
{
}
]]></code></example>
    </member>
    <member name="GetEnvironmentDefinitions(string,CancellationToken)">
      <example>
This sample shows how to call GetEnvironmentDefinitions.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (EnvironmentDefinition item in client.GetEnvironmentDefinitions("<projectName>"))
{
}
]]></code>
This sample shows how to call GetEnvironmentDefinitions with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (EnvironmentDefinition item in client.GetEnvironmentDefinitions("<projectName>"))
{
}
]]></code></example>
    </member>
    <member name="GetEnvironmentDefinitionsAsync(string,RequestContext)">
      <example>
This sample shows how to call GetEnvironmentDefinitionsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (BinaryData item in client.GetEnvironmentDefinitionsAsync("<projectName>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("catalogName").ToString());
}
]]></code>
This sample shows how to call GetEnvironmentDefinitionsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (BinaryData item in client.GetEnvironmentDefinitionsAsync("<projectName>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("catalogName").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("default").ToString());
    Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("readOnly").ToString());
    Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("required").ToString());
    Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("allowed")[0].ToString());
    Console.WriteLine(result.GetProperty("parametersSchema").ToString());
    Console.WriteLine(result.GetProperty("templatePath").ToString());
}
]]></code></example>
    </member>
    <member name="GetEnvironmentDefinitions(string,RequestContext)">
      <example>
This sample shows how to call GetEnvironmentDefinitions and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (BinaryData item in client.GetEnvironmentDefinitions("<projectName>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("catalogName").ToString());
}
]]></code>
This sample shows how to call GetEnvironmentDefinitions with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (BinaryData item in client.GetEnvironmentDefinitions("<projectName>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("catalogName").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("default").ToString());
    Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("readOnly").ToString());
    Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("required").ToString());
    Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("allowed")[0].ToString());
    Console.WriteLine(result.GetProperty("parametersSchema").ToString());
    Console.WriteLine(result.GetProperty("templatePath").ToString());
}
]]></code></example>
    </member>
    <member name="GetEnvironmentDefinitionsByCatalogAsync(string,string,CancellationToken)">
      <example>
This sample shows how to call GetEnvironmentDefinitionsByCatalogAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (EnvironmentDefinition item in client.GetEnvironmentDefinitionsByCatalogAsync("<projectName>", "<catalogName>"))
{
}
]]></code>
This sample shows how to call GetEnvironmentDefinitionsByCatalogAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (EnvironmentDefinition item in client.GetEnvironmentDefinitionsByCatalogAsync("<projectName>", "<catalogName>"))
{
}
]]></code></example>
    </member>
    <member name="GetEnvironmentDefinitionsByCatalog(string,string,CancellationToken)">
      <example>
This sample shows how to call GetEnvironmentDefinitionsByCatalog.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (EnvironmentDefinition item in client.GetEnvironmentDefinitionsByCatalog("<projectName>", "<catalogName>"))
{
}
]]></code>
This sample shows how to call GetEnvironmentDefinitionsByCatalog with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (EnvironmentDefinition item in client.GetEnvironmentDefinitionsByCatalog("<projectName>", "<catalogName>"))
{
}
]]></code></example>
    </member>
    <member name="GetEnvironmentDefinitionsByCatalogAsync(string,string,RequestContext)">
      <example>
This sample shows how to call GetEnvironmentDefinitionsByCatalogAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (BinaryData item in client.GetEnvironmentDefinitionsByCatalogAsync("<projectName>", "<catalogName>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("catalogName").ToString());
}
]]></code>
This sample shows how to call GetEnvironmentDefinitionsByCatalogAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (BinaryData item in client.GetEnvironmentDefinitionsByCatalogAsync("<projectName>", "<catalogName>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("catalogName").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("default").ToString());
    Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("readOnly").ToString());
    Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("required").ToString());
    Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("allowed")[0].ToString());
    Console.WriteLine(result.GetProperty("parametersSchema").ToString());
    Console.WriteLine(result.GetProperty("templatePath").ToString());
}
]]></code></example>
    </member>
    <member name="GetEnvironmentDefinitionsByCatalog(string,string,RequestContext)">
      <example>
This sample shows how to call GetEnvironmentDefinitionsByCatalog and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (BinaryData item in client.GetEnvironmentDefinitionsByCatalog("<projectName>", "<catalogName>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("catalogName").ToString());
}
]]></code>
This sample shows how to call GetEnvironmentDefinitionsByCatalog with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (BinaryData item in client.GetEnvironmentDefinitionsByCatalog("<projectName>", "<catalogName>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("catalogName").ToString());
    Console.WriteLine(result.GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("default").ToString());
    Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("readOnly").ToString());
    Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("required").ToString());
    Console.WriteLine(result.GetProperty("parameters")[0].GetProperty("allowed")[0].ToString());
    Console.WriteLine(result.GetProperty("parametersSchema").ToString());
    Console.WriteLine(result.GetProperty("templatePath").ToString());
}
]]></code></example>
    </member>
    <member name="GetEnvironmentTypesAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetEnvironmentTypesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (DevCenterEnvironmentType item in client.GetEnvironmentTypesAsync("<projectName>"))
{
}
]]></code>
This sample shows how to call GetEnvironmentTypesAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (DevCenterEnvironmentType item in client.GetEnvironmentTypesAsync("<projectName>"))
{
}
]]></code></example>
    </member>
    <member name="GetEnvironmentTypes(string,CancellationToken)">
      <example>
This sample shows how to call GetEnvironmentTypes.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (DevCenterEnvironmentType item in client.GetEnvironmentTypes("<projectName>"))
{
}
]]></code>
This sample shows how to call GetEnvironmentTypes with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (DevCenterEnvironmentType item in client.GetEnvironmentTypes("<projectName>"))
{
}
]]></code></example>
    </member>
    <member name="GetEnvironmentTypesAsync(string,RequestContext)">
      <example>
This sample shows how to call GetEnvironmentTypesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (BinaryData item in client.GetEnvironmentTypesAsync("<projectName>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("deploymentTargetId").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
}
]]></code>
This sample shows how to call GetEnvironmentTypesAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

await foreach (BinaryData item in client.GetEnvironmentTypesAsync("<projectName>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("deploymentTargetId").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
}
]]></code></example>
    </member>
    <member name="GetEnvironmentTypes(string,RequestContext)">
      <example>
This sample shows how to call GetEnvironmentTypes and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (BinaryData item in client.GetEnvironmentTypes("<projectName>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("deploymentTargetId").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
}
]]></code>
This sample shows how to call GetEnvironmentTypes with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

foreach (BinaryData item in client.GetEnvironmentTypes("<projectName>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("deploymentTargetId").ToString());
    Console.WriteLine(result.GetProperty("status").ToString());
}
]]></code></example>
    </member>
    <member name="CreateOrUpdateEnvironmentAsync(WaitUntil,string,string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrUpdateEnvironmentAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    environmentType = "<environmentType>",
    catalogName = "<catalogName>",
    environmentDefinitionName = "<environmentDefinitionName>",
});
Operation<BinaryData> operation = await client.CreateOrUpdateEnvironmentAsync(WaitUntil.Completed, "<projectName>", "<userId>", "<environmentName>", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("environmentType").ToString());
Console.WriteLine(result.GetProperty("catalogName").ToString());
Console.WriteLine(result.GetProperty("environmentDefinitionName").ToString());
]]></code>
This sample shows how to call CreateOrUpdateEnvironmentAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    parameters = new
    {
        key = new object(),
    },
    environmentType = "<environmentType>",
    catalogName = "<catalogName>",
    environmentDefinitionName = "<environmentDefinitionName>",
});
Operation<BinaryData> operation = await client.CreateOrUpdateEnvironmentAsync(WaitUntil.Completed, "<projectName>", "<userId>", "<environmentName>", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("parameters").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("environmentType").ToString());
Console.WriteLine(result.GetProperty("user").ToString());
Console.WriteLine(result.GetProperty("provisioningState").ToString());
Console.WriteLine(result.GetProperty("resourceGroupId").ToString());
Console.WriteLine(result.GetProperty("catalogName").ToString());
Console.WriteLine(result.GetProperty("environmentDefinitionName").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
]]></code></example>
    </member>
    <member name="CreateOrUpdateEnvironment(WaitUntil,string,string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrUpdateEnvironment and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    environmentType = "<environmentType>",
    catalogName = "<catalogName>",
    environmentDefinitionName = "<environmentDefinitionName>",
});
Operation<BinaryData> operation = client.CreateOrUpdateEnvironment(WaitUntil.Completed, "<projectName>", "<userId>", "<environmentName>", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("environmentType").ToString());
Console.WriteLine(result.GetProperty("catalogName").ToString());
Console.WriteLine(result.GetProperty("environmentDefinitionName").ToString());
]]></code>
This sample shows how to call CreateOrUpdateEnvironment with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    parameters = new
    {
        key = new object(),
    },
    environmentType = "<environmentType>",
    catalogName = "<catalogName>",
    environmentDefinitionName = "<environmentDefinitionName>",
});
Operation<BinaryData> operation = client.CreateOrUpdateEnvironment(WaitUntil.Completed, "<projectName>", "<userId>", "<environmentName>", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("parameters").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("environmentType").ToString());
Console.WriteLine(result.GetProperty("user").ToString());
Console.WriteLine(result.GetProperty("provisioningState").ToString());
Console.WriteLine(result.GetProperty("resourceGroupId").ToString());
Console.WriteLine(result.GetProperty("catalogName").ToString());
Console.WriteLine(result.GetProperty("environmentDefinitionName").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("code").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("message").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("target").ToString());
Console.WriteLine(result.GetProperty("error").GetProperty("innererror").GetProperty("code").ToString());
]]></code></example>
    </member>
    <member name="DeleteEnvironmentAsync(WaitUntil,string,string,string,RequestContext)">
      <example>
This sample shows how to call DeleteEnvironmentAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Operation operation = await client.DeleteEnvironmentAsync(WaitUntil.Completed, "<projectName>", "<userId>", "<environmentName>");
]]></code>
This sample shows how to call DeleteEnvironmentAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Operation operation = await client.DeleteEnvironmentAsync(WaitUntil.Completed, "<projectName>", "<userId>", "<environmentName>");
]]></code></example>
    </member>
    <member name="DeleteEnvironment(WaitUntil,string,string,string,RequestContext)">
      <example>
This sample shows how to call DeleteEnvironment.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Operation operation = client.DeleteEnvironment(WaitUntil.Completed, "<projectName>", "<userId>", "<environmentName>");
]]></code>
This sample shows how to call DeleteEnvironment with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TokenCredential credential = new DefaultAzureCredential();
DeploymentEnvironmentsClient client = new DeploymentEnvironmentsClient(endpoint, credential);

Operation operation = client.DeleteEnvironment(WaitUntil.Completed, "<projectName>", "<userId>", "<environmentName>");
]]></code></example>
    </member>
  </members>
</doc>