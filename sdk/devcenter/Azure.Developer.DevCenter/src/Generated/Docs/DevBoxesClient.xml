<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetPoolAsync(string,string,CancellationToken)">
      <example>
This sample shows how to call GetPoolAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

Response<DevBoxPool> response = await client.GetPoolAsync("myProject", "DevPool");
]]></code></example>
    </member>
    <member name="GetPool(string,string,CancellationToken)">
      <example>
This sample shows how to call GetPool.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

Response<DevBoxPool> response = client.GetPool("myProject", "DevPool");
]]></code></example>
    </member>
    <member name="GetPoolAsync(string,string,RequestContext)">
      <example>
This sample shows how to call GetPoolAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

Response response = await client.GetPoolAsync("myProject", "DevPool", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("healthStatus").ToString());
]]></code></example>
    </member>
    <member name="GetPool(string,string,RequestContext)">
      <example>
This sample shows how to call GetPool and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

Response response = client.GetPool("myProject", "DevPool", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("healthStatus").ToString());
]]></code></example>
    </member>
    <member name="GetScheduleAsync(string,string,string,CancellationToken)">
      <example>
This sample shows how to call GetScheduleAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

Response<DevBoxSchedule> response = await client.GetScheduleAsync("myProject", "DevPool", "default");
]]></code></example>
    </member>
    <member name="GetSchedule(string,string,string,CancellationToken)">
      <example>
This sample shows how to call GetSchedule.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

Response<DevBoxSchedule> response = client.GetSchedule("myProject", "DevPool", "default");
]]></code></example>
    </member>
    <member name="GetScheduleAsync(string,string,string,RequestContext)">
      <example>
This sample shows how to call GetScheduleAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

Response response = await client.GetScheduleAsync("myProject", "DevPool", "default", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("frequency").ToString());
Console.WriteLine(result.GetProperty("time").ToString());
Console.WriteLine(result.GetProperty("timeZone").ToString());
]]></code></example>
    </member>
    <member name="GetSchedule(string,string,string,RequestContext)">
      <example>
This sample shows how to call GetSchedule and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

Response response = client.GetSchedule("myProject", "DevPool", "default", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("frequency").ToString());
Console.WriteLine(result.GetProperty("time").ToString());
Console.WriteLine(result.GetProperty("timeZone").ToString());
]]></code></example>
    </member>
    <member name="GetDevBoxAsync(string,string,string,CancellationToken)">
      <example>
This sample shows how to call GetDevBoxAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

Response<DevBox> response = await client.GetDevBoxAsync("myProject", "me", "MyDevBox");
]]></code></example>
    </member>
    <member name="GetDevBox(string,string,string,CancellationToken)">
      <example>
This sample shows how to call GetDevBox.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

Response<DevBox> response = client.GetDevBox("myProject", "me", "MyDevBox");
]]></code></example>
    </member>
    <member name="GetDevBoxAsync(string,string,string,RequestContext)">
      <example>
This sample shows how to call GetDevBoxAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

Response response = await client.GetDevBoxAsync("myProject", "me", "MyDevBox", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("poolName").ToString());
]]></code></example>
    </member>
    <member name="GetDevBox(string,string,string,RequestContext)">
      <example>
This sample shows how to call GetDevBox and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

Response response = client.GetDevBox("myProject", "me", "MyDevBox", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("poolName").ToString());
]]></code></example>
    </member>
    <member name="GetRemoteConnectionAsync(string,string,string,CancellationToken)">
      <example>
This sample shows how to call GetRemoteConnectionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

Response<RemoteConnection> response = await client.GetRemoteConnectionAsync("myProject", "me", "MyDevBox");
]]></code></example>
    </member>
    <member name="GetRemoteConnection(string,string,string,CancellationToken)">
      <example>
This sample shows how to call GetRemoteConnection.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

Response<RemoteConnection> response = client.GetRemoteConnection("myProject", "me", "MyDevBox");
]]></code></example>
    </member>
    <member name="GetRemoteConnectionAsync(string,string,string,RequestContext)">
      <example>
This sample shows how to call GetRemoteConnectionAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

Response response = await client.GetRemoteConnectionAsync("myProject", "me", "MyDevBox", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetRemoteConnection(string,string,string,RequestContext)">
      <example>
This sample shows how to call GetRemoteConnection and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

Response response = client.GetRemoteConnection("myProject", "me", "MyDevBox", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetDevBoxActionAsync(string,string,string,string,CancellationToken)">
      <example>
This sample shows how to call GetDevBoxActionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

Response<DevBoxAction> response = await client.GetDevBoxActionAsync("myProject", "me", "myDevBox", "schedule-default");
]]></code></example>
    </member>
    <member name="GetDevBoxAction(string,string,string,string,CancellationToken)">
      <example>
This sample shows how to call GetDevBoxAction.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

Response<DevBoxAction> response = client.GetDevBoxAction("myProject", "me", "myDevBox", "schedule-default");
]]></code></example>
    </member>
    <member name="GetDevBoxActionAsync(string,string,string,string,RequestContext)">
      <example>
This sample shows how to call GetDevBoxActionAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

Response response = await client.GetDevBoxActionAsync("myProject", "me", "myDevBox", "schedule-default", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("actionType").ToString());
Console.WriteLine(result.GetProperty("sourceId").ToString());
]]></code></example>
    </member>
    <member name="GetDevBoxAction(string,string,string,string,RequestContext)">
      <example>
This sample shows how to call GetDevBoxAction and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

Response response = client.GetDevBoxAction("myProject", "me", "myDevBox", "schedule-default", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("actionType").ToString());
Console.WriteLine(result.GetProperty("sourceId").ToString());
]]></code></example>
    </member>
    <member name="SkipActionAsync(string,string,string,string,RequestContext)">
      <example>
This sample shows how to call SkipActionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

Response response = await client.SkipActionAsync("myProject", "me", "myDevBox", "schedule-default");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="SkipAction(string,string,string,string,RequestContext)">
      <example>
This sample shows how to call SkipAction.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

Response response = client.SkipAction("myProject", "me", "myDevBox", "schedule-default");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DelayActionAsync(string,string,string,string,DateTimeOffset,CancellationToken)">
      <example>
This sample shows how to call DelayActionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

Response<DevBoxAction> response = await client.DelayActionAsync("myProject", "me", "myDevBox", "schedule-default", DateTimeOffset.Parse("2022-09-30T17:00:00Z"));
]]></code></example>
    </member>
    <member name="DelayAction(string,string,string,string,DateTimeOffset,CancellationToken)">
      <example>
This sample shows how to call DelayAction.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

Response<DevBoxAction> response = client.DelayAction("myProject", "me", "myDevBox", "schedule-default", DateTimeOffset.Parse("2022-09-30T17:00:00Z"));
]]></code></example>
    </member>
    <member name="DelayActionAsync(string,string,string,string,DateTimeOffset,RequestContext)">
      <example>
This sample shows how to call DelayActionAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

Response response = await client.DelayActionAsync("myProject", "me", "myDevBox", "schedule-default", DateTimeOffset.Parse("2022-09-30T17:00:00Z"), null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("actionType").ToString());
Console.WriteLine(result.GetProperty("sourceId").ToString());
]]></code></example>
    </member>
    <member name="DelayAction(string,string,string,string,DateTimeOffset,RequestContext)">
      <example>
This sample shows how to call DelayAction and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

Response response = client.DelayAction("myProject", "me", "myDevBox", "schedule-default", DateTimeOffset.Parse("2022-09-30T17:00:00Z"), null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("actionType").ToString());
Console.WriteLine(result.GetProperty("sourceId").ToString());
]]></code></example>
    </member>
    <member name="GetPoolsAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetPoolsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

await foreach (DevBoxPool item in client.GetPoolsAsync("myProject"))
{
}
]]></code></example>
    </member>
    <member name="GetPools(string,CancellationToken)">
      <example>
This sample shows how to call GetPools.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

foreach (DevBoxPool item in client.GetPools("myProject"))
{
}
]]></code></example>
    </member>
    <member name="GetPoolsAsync(string,RequestContext)">
      <example>
This sample shows how to call GetPoolsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

await foreach (BinaryData item in client.GetPoolsAsync("myProject", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("location").ToString());
    Console.WriteLine(result.GetProperty("healthStatus").ToString());
}
]]></code></example>
    </member>
    <member name="GetPools(string,RequestContext)">
      <example>
This sample shows how to call GetPools and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

foreach (BinaryData item in client.GetPools("myProject", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("location").ToString());
    Console.WriteLine(result.GetProperty("healthStatus").ToString());
}
]]></code></example>
    </member>
    <member name="GetSchedulesAsync(string,string,CancellationToken)">
      <example>
This sample shows how to call GetSchedulesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

await foreach (DevBoxSchedule item in client.GetSchedulesAsync("myProject", "DevPool"))
{
}
]]></code></example>
    </member>
    <member name="GetSchedules(string,string,CancellationToken)">
      <example>
This sample shows how to call GetSchedules.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

foreach (DevBoxSchedule item in client.GetSchedules("myProject", "DevPool"))
{
}
]]></code></example>
    </member>
    <member name="GetSchedulesAsync(string,string,RequestContext)">
      <example>
This sample shows how to call GetSchedulesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

await foreach (BinaryData item in client.GetSchedulesAsync("myProject", "DevPool", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("frequency").ToString());
    Console.WriteLine(result.GetProperty("time").ToString());
    Console.WriteLine(result.GetProperty("timeZone").ToString());
}
]]></code></example>
    </member>
    <member name="GetSchedules(string,string,RequestContext)">
      <example>
This sample shows how to call GetSchedules and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

foreach (BinaryData item in client.GetSchedules("myProject", "DevPool", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("frequency").ToString());
    Console.WriteLine(result.GetProperty("time").ToString());
    Console.WriteLine(result.GetProperty("timeZone").ToString());
}
]]></code></example>
    </member>
    <member name="GetAllDevBoxesAsync(CancellationToken)">
      <example>
This sample shows how to call GetAllDevBoxesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

await foreach (DevBox item in client.GetAllDevBoxesAsync())
{
}
]]></code></example>
    </member>
    <member name="GetAllDevBoxes(CancellationToken)">
      <example>
This sample shows how to call GetAllDevBoxes.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

foreach (DevBox item in client.GetAllDevBoxes())
{
}
]]></code></example>
    </member>
    <member name="GetAllDevBoxesAsync(RequestContext)">
      <example>
This sample shows how to call GetAllDevBoxesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

await foreach (BinaryData item in client.GetAllDevBoxesAsync(null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("poolName").ToString());
}
]]></code></example>
    </member>
    <member name="GetAllDevBoxes(RequestContext)">
      <example>
This sample shows how to call GetAllDevBoxes and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

foreach (BinaryData item in client.GetAllDevBoxes(null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("poolName").ToString());
}
]]></code></example>
    </member>
    <member name="GetAllDevBoxesByUserAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetAllDevBoxesByUserAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

await foreach (DevBox item in client.GetAllDevBoxesByUserAsync("me"))
{
}
]]></code></example>
    </member>
    <member name="GetAllDevBoxesByUser(string,CancellationToken)">
      <example>
This sample shows how to call GetAllDevBoxesByUser.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

foreach (DevBox item in client.GetAllDevBoxesByUser("me"))
{
}
]]></code></example>
    </member>
    <member name="GetAllDevBoxesByUserAsync(string,RequestContext)">
      <example>
This sample shows how to call GetAllDevBoxesByUserAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

await foreach (BinaryData item in client.GetAllDevBoxesByUserAsync("me", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("poolName").ToString());
}
]]></code></example>
    </member>
    <member name="GetAllDevBoxesByUser(string,RequestContext)">
      <example>
This sample shows how to call GetAllDevBoxesByUser and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

foreach (BinaryData item in client.GetAllDevBoxesByUser("me", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("poolName").ToString());
}
]]></code></example>
    </member>
    <member name="GetDevBoxesAsync(string,string,CancellationToken)">
      <example>
This sample shows how to call GetDevBoxesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

await foreach (DevBox item in client.GetDevBoxesAsync("myProject", "me"))
{
}
]]></code></example>
    </member>
    <member name="GetDevBoxes(string,string,CancellationToken)">
      <example>
This sample shows how to call GetDevBoxes.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

foreach (DevBox item in client.GetDevBoxes("myProject", "me"))
{
}
]]></code></example>
    </member>
    <member name="GetDevBoxesAsync(string,string,RequestContext)">
      <example>
This sample shows how to call GetDevBoxesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

await foreach (BinaryData item in client.GetDevBoxesAsync("myProject", "me", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("poolName").ToString());
}
]]></code></example>
    </member>
    <member name="GetDevBoxes(string,string,RequestContext)">
      <example>
This sample shows how to call GetDevBoxes and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

foreach (BinaryData item in client.GetDevBoxes("myProject", "me", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("poolName").ToString());
}
]]></code></example>
    </member>
    <member name="GetDevBoxActionsAsync(string,string,string,CancellationToken)">
      <example>
This sample shows how to call GetDevBoxActionsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

await foreach (DevBoxAction item in client.GetDevBoxActionsAsync("myProject", "me", "myDevBox"))
{
}
]]></code></example>
    </member>
    <member name="GetDevBoxActions(string,string,string,CancellationToken)">
      <example>
This sample shows how to call GetDevBoxActions.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

foreach (DevBoxAction item in client.GetDevBoxActions("myProject", "me", "myDevBox"))
{
}
]]></code></example>
    </member>
    <member name="GetDevBoxActionsAsync(string,string,string,RequestContext)">
      <example>
This sample shows how to call GetDevBoxActionsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

await foreach (BinaryData item in client.GetDevBoxActionsAsync("myProject", "me", "myDevBox", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("actionType").ToString());
    Console.WriteLine(result.GetProperty("sourceId").ToString());
}
]]></code></example>
    </member>
    <member name="GetDevBoxActions(string,string,string,RequestContext)">
      <example>
This sample shows how to call GetDevBoxActions and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

foreach (BinaryData item in client.GetDevBoxActions("myProject", "me", "myDevBox", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("actionType").ToString());
    Console.WriteLine(result.GetProperty("sourceId").ToString());
}
]]></code></example>
    </member>
    <member name="DelayAllActionsAsync(string,string,string,DateTimeOffset,CancellationToken)">
      <example>
This sample shows how to call DelayAllActionsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

await foreach (DevBoxActionDelayResult item in client.DelayAllActionsAsync("myProject", "me", "myDevBox", DateTimeOffset.Parse("2022-09-30T17:00:00Z")))
{
}
]]></code></example>
    </member>
    <member name="DelayAllActions(string,string,string,DateTimeOffset,CancellationToken)">
      <example>
This sample shows how to call DelayAllActions.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

foreach (DevBoxActionDelayResult item in client.DelayAllActions("myProject", "me", "myDevBox", DateTimeOffset.Parse("2022-09-30T17:00:00Z")))
{
}
]]></code></example>
    </member>
    <member name="DelayAllActionsAsync(string,string,string,DateTimeOffset,RequestContext)">
      <example>
This sample shows how to call DelayAllActionsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

await foreach (BinaryData item in client.DelayAllActionsAsync("myProject", "me", "myDevBox", DateTimeOffset.Parse("2022-09-30T17:00:00Z"), null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("result").ToString());
}
]]></code></example>
    </member>
    <member name="DelayAllActions(string,string,string,DateTimeOffset,RequestContext)">
      <example>
This sample shows how to call DelayAllActions and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

foreach (BinaryData item in client.DelayAllActions("myProject", "me", "myDevBox", DateTimeOffset.Parse("2022-09-30T17:00:00Z"), null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("result").ToString());
}
]]></code></example>
    </member>
    <member name="CreateDevBoxAsync(WaitUntil,string,string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateDevBoxAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    poolName = "LargeDevWorkStationPool",
});
Operation<BinaryData> operation = await client.CreateDevBoxAsync(WaitUntil.Completed, "myProject", "me", "MyDevBox", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("poolName").ToString());
]]></code></example>
    </member>
    <member name="CreateDevBox(WaitUntil,string,string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateDevBox and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    poolName = "LargeDevWorkStationPool",
});
Operation<BinaryData> operation = client.CreateDevBox(WaitUntil.Completed, "myProject", "me", "MyDevBox", content);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("poolName").ToString());
]]></code></example>
    </member>
    <member name="DeleteDevBoxAsync(WaitUntil,string,string,string,RequestContext)">
      <example>
This sample shows how to call DeleteDevBoxAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

Operation operation = await client.DeleteDevBoxAsync(WaitUntil.Completed, "myProject", "me", "MyDevBox");
]]></code></example>
    </member>
    <member name="DeleteDevBox(WaitUntil,string,string,string,RequestContext)">
      <example>
This sample shows how to call DeleteDevBox.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

Operation operation = client.DeleteDevBox(WaitUntil.Completed, "myProject", "me", "MyDevBox");
]]></code></example>
    </member>
    <member name="StartDevBoxAsync(WaitUntil,string,string,string,RequestContext)">
      <example>
This sample shows how to call StartDevBoxAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

Operation operation = await client.StartDevBoxAsync(WaitUntil.Completed, "myProject", "me", "MyDevBox");
]]></code></example>
    </member>
    <member name="StartDevBox(WaitUntil,string,string,string,RequestContext)">
      <example>
This sample shows how to call StartDevBox.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

Operation operation = client.StartDevBox(WaitUntil.Completed, "myProject", "me", "MyDevBox");
]]></code></example>
    </member>
    <member name="StopDevBoxAsync(WaitUntil,string,string,string,bool?,RequestContext)">
      <example>
This sample shows how to call StopDevBoxAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

Operation operation = await client.StopDevBoxAsync(WaitUntil.Completed, "myProject", "me", "MyDevBox");
]]></code></example>
    </member>
    <member name="StopDevBox(WaitUntil,string,string,string,bool?,RequestContext)">
      <example>
This sample shows how to call StopDevBox.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

Operation operation = client.StopDevBox(WaitUntil.Completed, "myProject", "me", "MyDevBox");
]]></code></example>
    </member>
    <member name="RestartDevBoxAsync(WaitUntil,string,string,string,RequestContext)">
      <example>
This sample shows how to call RestartDevBoxAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

Operation operation = await client.RestartDevBoxAsync(WaitUntil.Completed, "myProject", "me", "MyDevBox");
]]></code></example>
    </member>
    <member name="RestartDevBox(WaitUntil,string,string,string,RequestContext)">
      <example>
This sample shows how to call RestartDevBox.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
DevBoxesClient client = new DevBoxesClient(endpoint, credential);

Operation operation = client.RestartDevBox(WaitUntil.Completed, "myProject", "me", "MyDevBox");
]]></code></example>
    </member>
  </members>
</doc>