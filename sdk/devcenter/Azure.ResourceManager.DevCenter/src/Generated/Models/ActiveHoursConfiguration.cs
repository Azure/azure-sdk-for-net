// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.DevCenter.Models
{
    /// <summary> Active hours configuration. </summary>
    public partial class ActiveHoursConfiguration
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ActiveHoursConfiguration"/>. </summary>
        public ActiveHoursConfiguration()
        {
            DefaultDaysOfWeek = new ChangeTrackingList<DayOfWeek>();
        }

        /// <summary> Initializes a new instance of <see cref="ActiveHoursConfiguration"/>. </summary>
        /// <param name="keepAwakeEnableStatus"> Enables or disables whether the Dev Box should be kept awake during active hours. </param>
        /// <param name="autoStartEnableStatus"> Enables or disables whether the Dev Box should be automatically started at commencement of active hours. </param>
        /// <param name="defaultTimeZone"> The default IANA timezone id of the active hours. </param>
        /// <param name="defaultStartTimeHour"> The default start time of the active hours. </param>
        /// <param name="defaultEndTimeHour"> The default end time of the active hours. </param>
        /// <param name="defaultDaysOfWeek"> The days of the week that active hours features will be enabled. This serves as a default that can be updated by each individual user. </param>
        /// <param name="daysOfWeekLimit"> The maximum amount of days per week that a user can enable active hours related features. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ActiveHoursConfiguration(KeepAwakeEnableStatus? keepAwakeEnableStatus, AutoStartEnableStatus? autoStartEnableStatus, string defaultTimeZone, int? defaultStartTimeHour, int? defaultEndTimeHour, IList<DayOfWeek> defaultDaysOfWeek, int? daysOfWeekLimit, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            KeepAwakeEnableStatus = keepAwakeEnableStatus;
            AutoStartEnableStatus = autoStartEnableStatus;
            DefaultTimeZone = defaultTimeZone;
            DefaultStartTimeHour = defaultStartTimeHour;
            DefaultEndTimeHour = defaultEndTimeHour;
            DefaultDaysOfWeek = defaultDaysOfWeek;
            DaysOfWeekLimit = daysOfWeekLimit;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Enables or disables whether the Dev Box should be kept awake during active hours. </summary>
        public KeepAwakeEnableStatus? KeepAwakeEnableStatus { get; set; }
        /// <summary> Enables or disables whether the Dev Box should be automatically started at commencement of active hours. </summary>
        public AutoStartEnableStatus? AutoStartEnableStatus { get; set; }
        /// <summary> The default IANA timezone id of the active hours. </summary>
        public string DefaultTimeZone { get; set; }
        /// <summary> The default start time of the active hours. </summary>
        public int? DefaultStartTimeHour { get; set; }
        /// <summary> The default end time of the active hours. </summary>
        public int? DefaultEndTimeHour { get; set; }
        /// <summary> The days of the week that active hours features will be enabled. This serves as a default that can be updated by each individual user. </summary>
        public IList<DayOfWeek> DefaultDaysOfWeek { get; }
        /// <summary> The maximum amount of days per week that a user can enable active hours related features. </summary>
        public int? DaysOfWeekLimit { get; set; }
    }
}
