// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.DevCenter.Models
{
    /// <summary> Catalog resource validation status. </summary>
    public readonly partial struct CatalogResourceValidationStatus : IEquatable<CatalogResourceValidationStatus>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="CatalogResourceValidationStatus"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public CatalogResourceValidationStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string UnknownValue = "Unknown";
        private const string PendingValue = "Pending";
        private const string SucceededValue = "Succeeded";
        private const string FailedValue = "Failed";

        /// <summary> Unknown validation status. </summary>
        public static CatalogResourceValidationStatus Unknown { get; } = new CatalogResourceValidationStatus(UnknownValue);
        /// <summary> Pending validation status. </summary>
        public static CatalogResourceValidationStatus Pending { get; } = new CatalogResourceValidationStatus(PendingValue);
        /// <summary> Succeeded validation status. </summary>
        public static CatalogResourceValidationStatus Succeeded { get; } = new CatalogResourceValidationStatus(SucceededValue);
        /// <summary> Failed validation status. </summary>
        public static CatalogResourceValidationStatus Failed { get; } = new CatalogResourceValidationStatus(FailedValue);
        /// <summary> Determines if two <see cref="CatalogResourceValidationStatus"/> values are the same. </summary>
        public static bool operator ==(CatalogResourceValidationStatus left, CatalogResourceValidationStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="CatalogResourceValidationStatus"/> values are not the same. </summary>
        public static bool operator !=(CatalogResourceValidationStatus left, CatalogResourceValidationStatus right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="CatalogResourceValidationStatus"/>. </summary>
        public static implicit operator CatalogResourceValidationStatus(string value) => new CatalogResourceValidationStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is CatalogResourceValidationStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(CatalogResourceValidationStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
