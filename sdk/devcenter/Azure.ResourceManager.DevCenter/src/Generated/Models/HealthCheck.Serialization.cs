// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DevCenter.Models
{
    public partial class HealthCheck
    {
        internal static HealthCheck DeserializeHealthCheck(JsonElement element)
        {
            Optional<HealthCheckStatus> status = default;
            Optional<string> displayName = default;
            Optional<DateTimeOffset> startDateTime = default;
            Optional<DateTimeOffset> endDateTime = default;
            Optional<string> errorType = default;
            Optional<string> recommendedAction = default;
            Optional<string> additionalDetails = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("status"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    status = new HealthCheckStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("displayName"))
                {
                    displayName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("startDateTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    startDateTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("endDateTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    endDateTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("errorType"))
                {
                    errorType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("recommendedAction"))
                {
                    recommendedAction = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("additionalDetails"))
                {
                    additionalDetails = property.Value.GetString();
                    continue;
                }
            }
            return new HealthCheck(Optional.ToNullable(status), displayName.Value, Optional.ToNullable(startDateTime), Optional.ToNullable(endDateTime), errorType.Value, recommendedAction.Value, additionalDetails.Value);
        }
    }
}
