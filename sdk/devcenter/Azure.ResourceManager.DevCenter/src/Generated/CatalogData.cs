// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.ResourceManager.DevCenter.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.DevCenter
{
    /// <summary> A class representing the Catalog data model. </summary>
    public partial class CatalogData : ResourceData
    {
        /// <summary> Initializes a new instance of CatalogData. </summary>
        public CatalogData()
        {
        }

        /// <summary> Initializes a new instance of CatalogData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="gitHub"> Properties for a GitHub catalog type. </param>
        /// <param name="adoGit"> Properties for an Azure DevOps catalog type. </param>
        /// <param name="provisioningState"> The provisioning state of the resource. </param>
        /// <param name="lastSyncOn"> When the catalog was last synced. </param>
        internal CatalogData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, GitCatalog gitHub, GitCatalog adoGit, string provisioningState, DateTimeOffset? lastSyncOn) : base(id, name, resourceType, systemData)
        {
            GitHub = gitHub;
            AdoGit = adoGit;
            ProvisioningState = provisioningState;
            LastSyncOn = lastSyncOn;
        }

        /// <summary> Properties for a GitHub catalog type. </summary>
        public GitCatalog GitHub { get; set; }
        /// <summary> Properties for an Azure DevOps catalog type. </summary>
        public GitCatalog AdoGit { get; set; }
        /// <summary> The provisioning state of the resource. </summary>
        public string ProvisioningState { get; }
        /// <summary> When the catalog was last synced. </summary>
        public DateTimeOffset? LastSyncOn { get; }
    }
}
