// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.ResourceManager.DevCenter.Samples
{
    public partial class Sample_ProjectImageVersionCollection
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_ImageVersionsGetByProject()
        {
            // Generated from example definition: specification/devcenter/resource-manager/Microsoft.DevCenter/preview/2025-07-01-preview/examples/ImageVersions_GetByProject.json
            // this example is just showing the usage of "ImageVersions_GetByProject" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ProjectImageResource created on azure
            // for more information of creating ProjectImageResource, please refer to the document of ProjectImageResource
            string subscriptionId = "0ac520ee-14c0-480f-b6c9-0a90c58fffff";
            string resourceGroupName = "rg1";
            string projectName = "myProject";
            string imageName = "~gallery~DefaultDevGallery~ContosoImageDefinition";
            ResourceIdentifier projectImageResourceId = ProjectImageResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName, imageName);
            ProjectImageResource projectImage = client.GetProjectImageResource(projectImageResourceId);

            // get the collection of this ProjectImageVersionResource
            ProjectImageVersionCollection collection = projectImage.GetProjectImageVersions();

            // invoke the operation
            string versionName = "1.0.0";
            ProjectImageVersionResource result = await collection.GetAsync(versionName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ImageVersionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetAll_ImageVersionsListByProject()
        {
            // Generated from example definition: specification/devcenter/resource-manager/Microsoft.DevCenter/preview/2025-07-01-preview/examples/ImageVersions_ListByProject.json
            // this example is just showing the usage of "ImageVersions_ListByProject" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ProjectImageResource created on azure
            // for more information of creating ProjectImageResource, please refer to the document of ProjectImageResource
            string subscriptionId = "0ac520ee-14c0-480f-b6c9-0a90c58fffff";
            string resourceGroupName = "rg1";
            string projectName = "myProject";
            string imageName = "~gallery~DefaultDevGallery~ContosoImageDefinition";
            ResourceIdentifier projectImageResourceId = ProjectImageResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName, imageName);
            ProjectImageResource projectImage = client.GetProjectImageResource(projectImageResourceId);

            // get the collection of this ProjectImageVersionResource
            ProjectImageVersionCollection collection = projectImage.GetProjectImageVersions();

            // invoke the operation and iterate over the result
            await foreach (ProjectImageVersionResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                ImageVersionData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Exists_ImageVersionsGetByProject()
        {
            // Generated from example definition: specification/devcenter/resource-manager/Microsoft.DevCenter/preview/2025-07-01-preview/examples/ImageVersions_GetByProject.json
            // this example is just showing the usage of "ImageVersions_GetByProject" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ProjectImageResource created on azure
            // for more information of creating ProjectImageResource, please refer to the document of ProjectImageResource
            string subscriptionId = "0ac520ee-14c0-480f-b6c9-0a90c58fffff";
            string resourceGroupName = "rg1";
            string projectName = "myProject";
            string imageName = "~gallery~DefaultDevGallery~ContosoImageDefinition";
            ResourceIdentifier projectImageResourceId = ProjectImageResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName, imageName);
            ProjectImageResource projectImage = client.GetProjectImageResource(projectImageResourceId);

            // get the collection of this ProjectImageVersionResource
            ProjectImageVersionCollection collection = projectImage.GetProjectImageVersions();

            // invoke the operation
            string versionName = "1.0.0";
            bool result = await collection.ExistsAsync(versionName);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetIfExists_ImageVersionsGetByProject()
        {
            // Generated from example definition: specification/devcenter/resource-manager/Microsoft.DevCenter/preview/2025-07-01-preview/examples/ImageVersions_GetByProject.json
            // this example is just showing the usage of "ImageVersions_GetByProject" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ProjectImageResource created on azure
            // for more information of creating ProjectImageResource, please refer to the document of ProjectImageResource
            string subscriptionId = "0ac520ee-14c0-480f-b6c9-0a90c58fffff";
            string resourceGroupName = "rg1";
            string projectName = "myProject";
            string imageName = "~gallery~DefaultDevGallery~ContosoImageDefinition";
            ResourceIdentifier projectImageResourceId = ProjectImageResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName, imageName);
            ProjectImageResource projectImage = client.GetProjectImageResource(projectImageResourceId);

            // get the collection of this ProjectImageVersionResource
            ProjectImageVersionCollection collection = projectImage.GetProjectImageVersions();

            // invoke the operation
            string versionName = "1.0.0";
            NullableResponse<ProjectImageVersionResource> response = await collection.GetIfExistsAsync(versionName);
            ProjectImageVersionResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine("Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                ImageVersionData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }
    }
}
