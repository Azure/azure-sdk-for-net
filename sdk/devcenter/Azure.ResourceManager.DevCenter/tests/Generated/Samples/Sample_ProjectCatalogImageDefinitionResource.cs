// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.DevCenter.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.DevCenter.Samples
{
    public partial class Sample_ProjectCatalogImageDefinitionResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_ImageDefinitionsGetByProjectCatalog()
        {
            // Generated from example definition: specification/devcenter/resource-manager/Microsoft.DevCenter/preview/2025-07-01-preview/examples/ImageDefinitions_GetByProjectCatalog.json
            // this example is just showing the usage of "ProjectCatalogImageDefinitions_GetByProjectCatalog" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ProjectCatalogImageDefinitionResource created on azure
            // for more information of creating ProjectCatalogImageDefinitionResource, please refer to the document of ProjectCatalogImageDefinitionResource
            string subscriptionId = "0ac520ee-14c0-480f-b6c9-0a90c58fffff";
            string resourceGroupName = "rg1";
            string projectName = "ContosoProject";
            string catalogName = "TeamCatalog";
            string imageDefinitionName = "WebDevBox";
            ResourceIdentifier projectCatalogImageDefinitionResourceId = ProjectCatalogImageDefinitionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName, catalogName, imageDefinitionName);
            ProjectCatalogImageDefinitionResource projectCatalogImageDefinition = client.GetProjectCatalogImageDefinitionResource(projectCatalogImageDefinitionResourceId);

            // invoke the operation
            ProjectCatalogImageDefinitionResource result = await projectCatalogImageDefinition.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ImageDefinitionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task BuildImage_ProjectCatalogImageDefinitionsBuildImage()
        {
            // Generated from example definition: specification/devcenter/resource-manager/Microsoft.DevCenter/preview/2025-07-01-preview/examples/ImageDefinitions_BuildImage.json
            // this example is just showing the usage of "ProjectCatalogImageDefinitions_BuildImage" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ProjectCatalogImageDefinitionResource created on azure
            // for more information of creating ProjectCatalogImageDefinitionResource, please refer to the document of ProjectCatalogImageDefinitionResource
            string subscriptionId = "0ac520ee-14c0-480f-b6c9-0a90c58fffff";
            string resourceGroupName = "rg1";
            string projectName = "DevProject";
            string catalogName = "CentralCatalog";
            string imageDefinitionName = "DefaultDevImage";
            ResourceIdentifier projectCatalogImageDefinitionResourceId = ProjectCatalogImageDefinitionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName, catalogName, imageDefinitionName);
            ProjectCatalogImageDefinitionResource projectCatalogImageDefinition = client.GetProjectCatalogImageDefinitionResource(projectCatalogImageDefinitionResourceId);

            // invoke the operation
            await projectCatalogImageDefinition.BuildImageAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetErrorDetails_ProjectCatalogImageDefinitionsGetErrorDetails()
        {
            // Generated from example definition: specification/devcenter/resource-manager/Microsoft.DevCenter/preview/2025-07-01-preview/examples/ProjectCatalogImageDefinitions_GetErrorDetails.json
            // this example is just showing the usage of "ProjectCatalogImageDefinitions_GetErrorDetails" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ProjectCatalogImageDefinitionResource created on azure
            // for more information of creating ProjectCatalogImageDefinitionResource, please refer to the document of ProjectCatalogImageDefinitionResource
            string subscriptionId = "0ac520ee-14c0-480f-b6c9-0a90c58fffff";
            string resourceGroupName = "rg1";
            string projectName = "DevProject";
            string catalogName = "TeamCatalog";
            string imageDefinitionName = "WebDevBox";
            ResourceIdentifier projectCatalogImageDefinitionResourceId = ProjectCatalogImageDefinitionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName, catalogName, imageDefinitionName);
            ProjectCatalogImageDefinitionResource projectCatalogImageDefinition = client.GetProjectCatalogImageDefinitionResource(projectCatalogImageDefinitionResourceId);

            // invoke the operation
            CatalogResourceValidationErrorDetails result = await projectCatalogImageDefinition.GetErrorDetailsAsync();

            Console.WriteLine($"Succeeded: {result}");
        }
    }
}
