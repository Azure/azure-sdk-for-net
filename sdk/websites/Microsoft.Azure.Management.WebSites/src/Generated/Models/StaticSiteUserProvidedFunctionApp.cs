// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Microsoft.Azure.Management.WebSites.Models
{
    /// <summary> A static site user provided function. </summary>
    public partial class StaticSiteUserProvidedFunctionApp : ProxyOnlyResource
    {
        /// <summary> Initializes a new instance of StaticSiteUserProvidedFunctionApp. </summary>
        public StaticSiteUserProvidedFunctionApp()
        {
        }

        /// <summary> Initializes a new instance of StaticSiteUserProvidedFunctionApp. </summary>
        /// <param name="id"> Resource Id. </param>
        /// <param name="name"> Resource Name. </param>
        /// <param name="kind"> Kind of resource. </param>
        /// <param name="type"> Resource type. </param>
        /// <param name="functionAppResourceId"> The resource id of the function app registered with the static site. </param>
        /// <param name="functionAppRegion"> The region of the function app registered with the static site. </param>
        /// <param name="createdOn"> The date and time on which the function app was registered with the static site. </param>
        internal StaticSiteUserProvidedFunctionApp(string id, string name, string kind, string type, string functionAppResourceId, string functionAppRegion, DateTimeOffset? createdOn) : base(id, name, kind, type)
        {
            FunctionAppResourceId = functionAppResourceId;
            FunctionAppRegion = functionAppRegion;
            CreatedOn = createdOn;
        }

        /// <summary> The resource id of the function app registered with the static site. </summary>
        public string FunctionAppResourceId { get; set; }
        /// <summary> The region of the function app registered with the static site. </summary>
        public string FunctionAppRegion { get; set; }
        /// <summary> The date and time on which the function app was registered with the static site. </summary>
        public DateTimeOffset? CreatedOn { get; }
    }
}
