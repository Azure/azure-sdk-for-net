// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Microsoft.Azure.Management.WebSites.Models
{
    /// <summary> Full view of network features for an app (presently VNET integration and Hybrid Connections). </summary>
    public partial class NetworkFeatures : ProxyOnlyResource
    {
        /// <summary> Initializes a new instance of NetworkFeatures. </summary>
        public NetworkFeatures()
        {
            HybridConnections = new ChangeTrackingList<RelayServiceConnectionEntity>();
            HybridConnectionsV2 = new ChangeTrackingList<HybridConnection>();
        }

        /// <summary> Initializes a new instance of NetworkFeatures. </summary>
        /// <param name="id"> Resource Id. </param>
        /// <param name="name"> Resource Name. </param>
        /// <param name="kind"> Kind of resource. </param>
        /// <param name="type"> Resource type. </param>
        /// <param name="virtualNetworkName"> The Virtual Network name. </param>
        /// <param name="virtualNetworkConnection"> The Virtual Network summary view. </param>
        /// <param name="hybridConnections"> The Hybrid Connections summary view. </param>
        /// <param name="hybridConnectionsV2"> The Hybrid Connection V2 (Service Bus) view. </param>
        internal NetworkFeatures(string id, string name, string kind, string type, string virtualNetworkName, VnetInfo virtualNetworkConnection, IReadOnlyList<RelayServiceConnectionEntity> hybridConnections, IReadOnlyList<HybridConnection> hybridConnectionsV2) : base(id, name, kind, type)
        {
            VirtualNetworkName = virtualNetworkName;
            VirtualNetworkConnection = virtualNetworkConnection;
            HybridConnections = hybridConnections;
            HybridConnectionsV2 = hybridConnectionsV2;
        }

        /// <summary> The Virtual Network name. </summary>
        public string VirtualNetworkName { get; }
        /// <summary> The Virtual Network summary view. </summary>
        public VnetInfo VirtualNetworkConnection { get; }
        /// <summary> The Hybrid Connections summary view. </summary>
        public IReadOnlyList<RelayServiceConnectionEntity> HybridConnections { get; }
        /// <summary> The Hybrid Connection V2 (Service Bus) view. </summary>
        public IReadOnlyList<HybridConnection> HybridConnectionsV2 { get; }
    }
}
