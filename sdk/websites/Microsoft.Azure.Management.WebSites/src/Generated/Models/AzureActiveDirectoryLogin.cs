// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.WebSites.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The configuration settings of the Azure Active Directory login flow.
    /// </summary>
    public partial class AzureActiveDirectoryLogin
    {
        /// <summary>
        /// Initializes a new instance of the AzureActiveDirectoryLogin class.
        /// </summary>
        public AzureActiveDirectoryLogin()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AzureActiveDirectoryLogin class.
        /// </summary>
        /// <param name="loginParameters">Login parameters to send to the
        /// OpenID Connect authorization endpoint when
        /// a user logs in. Each parameter must be in the form
        /// "key=value".</param>
        /// <param name="disableWWWAuthenticate">&lt;code&gt;true&lt;/code&gt;
        /// if the www-authenticate provider should be omitted from the
        /// request; otherwise, &lt;code&gt;false&lt;/code&gt;.</param>
        public AzureActiveDirectoryLogin(IList<string> loginParameters = default(IList<string>), bool? disableWWWAuthenticate = default(bool?))
        {
            LoginParameters = loginParameters;
            DisableWWWAuthenticate = disableWWWAuthenticate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets login parameters to send to the OpenID Connect
        /// authorization endpoint when
        /// a user logs in. Each parameter must be in the form "key=value".
        /// </summary>
        [JsonProperty(PropertyName = "loginParameters")]
        public IList<string> LoginParameters { get; set; }

        /// <summary>
        /// Gets or sets &amp;lt;code&amp;gt;true&amp;lt;/code&amp;gt; if the
        /// www-authenticate provider should be omitted from the request;
        /// otherwise, &amp;lt;code&amp;gt;false&amp;lt;/code&amp;gt;.
        /// </summary>
        [JsonProperty(PropertyName = "disableWWWAuthenticate")]
        public bool? DisableWWWAuthenticate { get; set; }

    }
}
