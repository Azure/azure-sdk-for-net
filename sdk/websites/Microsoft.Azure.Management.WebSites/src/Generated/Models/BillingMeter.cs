// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.WebSites.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// App Service billing entity that contains information about meter which
    /// the Azure billing system utilizes to charge users for services.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class BillingMeter : ProxyOnlyResource
    {
        /// <summary>
        /// Initializes a new instance of the BillingMeter class.
        /// </summary>
        public BillingMeter()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BillingMeter class.
        /// </summary>
        /// <param name="id">Resource Id.</param>
        /// <param name="name">Resource Name.</param>
        /// <param name="kind">Kind of resource.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="meterId">Meter GUID onboarded in Commerce</param>
        /// <param name="billingLocation">Azure Location of billable
        /// resource</param>
        /// <param name="shortName">Short Name from App Service Azure pricing
        /// Page</param>
        /// <param name="friendlyName">Friendly name of the meter</param>
        /// <param name="resourceType">App Service ResourceType meter used
        /// for</param>
        /// <param name="osType">App Service OS type meter used for</param>
        /// <param name="multiplier">Meter Multiplier</param>
        public BillingMeter(string id = default(string), string name = default(string), string kind = default(string), string type = default(string), string meterId = default(string), string billingLocation = default(string), string shortName = default(string), string friendlyName = default(string), string resourceType = default(string), string osType = default(string), double? multiplier = default(double?))
            : base(id, name, kind, type)
        {
            MeterId = meterId;
            BillingLocation = billingLocation;
            ShortName = shortName;
            FriendlyName = friendlyName;
            ResourceType = resourceType;
            OsType = osType;
            Multiplier = multiplier;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets meter GUID onboarded in Commerce
        /// </summary>
        [JsonProperty(PropertyName = "properties.meterId")]
        public string MeterId { get; set; }

        /// <summary>
        /// Gets or sets azure Location of billable resource
        /// </summary>
        [JsonProperty(PropertyName = "properties.billingLocation")]
        public string BillingLocation { get; set; }

        /// <summary>
        /// Gets or sets short Name from App Service Azure pricing Page
        /// </summary>
        [JsonProperty(PropertyName = "properties.shortName")]
        public string ShortName { get; set; }

        /// <summary>
        /// Gets or sets friendly name of the meter
        /// </summary>
        [JsonProperty(PropertyName = "properties.friendlyName")]
        public string FriendlyName { get; set; }

        /// <summary>
        /// Gets or sets app Service ResourceType meter used for
        /// </summary>
        [JsonProperty(PropertyName = "properties.resourceType")]
        public string ResourceType { get; set; }

        /// <summary>
        /// Gets or sets app Service OS type meter used for
        /// </summary>
        [JsonProperty(PropertyName = "properties.osType")]
        public string OsType { get; set; }

        /// <summary>
        /// Gets or sets meter Multiplier
        /// </summary>
        [JsonProperty(PropertyName = "properties.multiplier")]
        public double? Multiplier { get; set; }

    }
}
