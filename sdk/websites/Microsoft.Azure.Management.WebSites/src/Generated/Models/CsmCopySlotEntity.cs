// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.WebSites.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Copy deployment slot parameters.
    /// </summary>
    public partial class CsmCopySlotEntity
    {
        /// <summary>
        /// Initializes a new instance of the CsmCopySlotEntity class.
        /// </summary>
        public CsmCopySlotEntity()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CsmCopySlotEntity class.
        /// </summary>
        /// <param name="targetSlot">Destination deployment slot during copy
        /// operation.</param>
        /// <param name="siteConfig">The site object which will be merged with
        /// the source slot site
        /// to produce new destination slot site object.
        /// &lt;code&gt;null&lt;/code&gt; to just copy source slot content.
        /// Otherwise a &lt;code&gt;Site&lt;/code&gt;
        /// object with properties to override source slot site.</param>
        public CsmCopySlotEntity(string targetSlot, SiteConfig siteConfig)
        {
            TargetSlot = targetSlot;
            SiteConfig = siteConfig;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets destination deployment slot during copy operation.
        /// </summary>
        [JsonProperty(PropertyName = "targetSlot")]
        public string TargetSlot { get; set; }

        /// <summary>
        /// Gets or sets the site object which will be merged with the source
        /// slot site
        /// to produce new destination slot site object.
        /// &amp;lt;code&amp;gt;null&amp;lt;/code&amp;gt; to just copy source
        /// slot content. Otherwise a
        /// &amp;lt;code&amp;gt;Site&amp;lt;/code&amp;gt;
        /// object with properties to override source slot site.
        /// </summary>
        [JsonProperty(PropertyName = "siteConfig")]
        public SiteConfig SiteConfig { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (TargetSlot == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TargetSlot");
            }
            if (SiteConfig == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SiteConfig");
            }
            if (SiteConfig != null)
            {
                SiteConfig.Validate();
            }
        }
    }
}
