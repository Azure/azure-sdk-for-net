// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.WebSites.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for RenderingType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum RenderingType
    {
        [EnumMember(Value = "NoGraph")]
        NoGraph,
        [EnumMember(Value = "Table")]
        Table,
        [EnumMember(Value = "TimeSeries")]
        TimeSeries,
        [EnumMember(Value = "TimeSeriesPerInstance")]
        TimeSeriesPerInstance,
        [EnumMember(Value = "PieChart")]
        PieChart,
        [EnumMember(Value = "DataSummary")]
        DataSummary,
        [EnumMember(Value = "Email")]
        Email,
        [EnumMember(Value = "Insights")]
        Insights,
        [EnumMember(Value = "DynamicInsight")]
        DynamicInsight,
        [EnumMember(Value = "Markdown")]
        Markdown,
        [EnumMember(Value = "Detector")]
        Detector,
        [EnumMember(Value = "DropDown")]
        DropDown,
        [EnumMember(Value = "Card")]
        Card,
        [EnumMember(Value = "Solution")]
        Solution,
        [EnumMember(Value = "Guage")]
        Guage,
        [EnumMember(Value = "Form")]
        Form,
        [EnumMember(Value = "ChangeSets")]
        ChangeSets,
        [EnumMember(Value = "ChangeAnalysisOnboarding")]
        ChangeAnalysisOnboarding,
        [EnumMember(Value = "ChangesView")]
        ChangesView,
        [EnumMember(Value = "AppInsight")]
        AppInsight,
        [EnumMember(Value = "DependencyGraph")]
        DependencyGraph,
        [EnumMember(Value = "DownTime")]
        DownTime,
        [EnumMember(Value = "SummaryCard")]
        SummaryCard,
        [EnumMember(Value = "SearchComponent")]
        SearchComponent,
        [EnumMember(Value = "AppInsightEnablement")]
        AppInsightEnablement
    }
    internal static class RenderingTypeEnumExtension
    {
        internal static string ToSerializedValue(this RenderingType? value)
        {
            return value == null ? null : ((RenderingType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this RenderingType value)
        {
            switch( value )
            {
                case RenderingType.NoGraph:
                    return "NoGraph";
                case RenderingType.Table:
                    return "Table";
                case RenderingType.TimeSeries:
                    return "TimeSeries";
                case RenderingType.TimeSeriesPerInstance:
                    return "TimeSeriesPerInstance";
                case RenderingType.PieChart:
                    return "PieChart";
                case RenderingType.DataSummary:
                    return "DataSummary";
                case RenderingType.Email:
                    return "Email";
                case RenderingType.Insights:
                    return "Insights";
                case RenderingType.DynamicInsight:
                    return "DynamicInsight";
                case RenderingType.Markdown:
                    return "Markdown";
                case RenderingType.Detector:
                    return "Detector";
                case RenderingType.DropDown:
                    return "DropDown";
                case RenderingType.Card:
                    return "Card";
                case RenderingType.Solution:
                    return "Solution";
                case RenderingType.Guage:
                    return "Guage";
                case RenderingType.Form:
                    return "Form";
                case RenderingType.ChangeSets:
                    return "ChangeSets";
                case RenderingType.ChangeAnalysisOnboarding:
                    return "ChangeAnalysisOnboarding";
                case RenderingType.ChangesView:
                    return "ChangesView";
                case RenderingType.AppInsight:
                    return "AppInsight";
                case RenderingType.DependencyGraph:
                    return "DependencyGraph";
                case RenderingType.DownTime:
                    return "DownTime";
                case RenderingType.SummaryCard:
                    return "SummaryCard";
                case RenderingType.SearchComponent:
                    return "SearchComponent";
                case RenderingType.AppInsightEnablement:
                    return "AppInsightEnablement";
            }
            return null;
        }

        internal static RenderingType? ParseRenderingType(this string value)
        {
            switch( value )
            {
                case "NoGraph":
                    return RenderingType.NoGraph;
                case "Table":
                    return RenderingType.Table;
                case "TimeSeries":
                    return RenderingType.TimeSeries;
                case "TimeSeriesPerInstance":
                    return RenderingType.TimeSeriesPerInstance;
                case "PieChart":
                    return RenderingType.PieChart;
                case "DataSummary":
                    return RenderingType.DataSummary;
                case "Email":
                    return RenderingType.Email;
                case "Insights":
                    return RenderingType.Insights;
                case "DynamicInsight":
                    return RenderingType.DynamicInsight;
                case "Markdown":
                    return RenderingType.Markdown;
                case "Detector":
                    return RenderingType.Detector;
                case "DropDown":
                    return RenderingType.DropDown;
                case "Card":
                    return RenderingType.Card;
                case "Solution":
                    return RenderingType.Solution;
                case "Guage":
                    return RenderingType.Guage;
                case "Form":
                    return RenderingType.Form;
                case "ChangeSets":
                    return RenderingType.ChangeSets;
                case "ChangeAnalysisOnboarding":
                    return RenderingType.ChangeAnalysisOnboarding;
                case "ChangesView":
                    return RenderingType.ChangesView;
                case "AppInsight":
                    return RenderingType.AppInsight;
                case "DependencyGraph":
                    return RenderingType.DependencyGraph;
                case "DownTime":
                    return RenderingType.DownTime;
                case "SummaryCard":
                    return RenderingType.SummaryCard;
                case "SearchComponent":
                    return RenderingType.SearchComponent;
                case "AppInsightEnablement":
                    return RenderingType.AppInsightEnablement;
            }
            return null;
        }
    }
}
