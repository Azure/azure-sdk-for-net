// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.WebSites.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Data Table which defines columns and raw row values
    /// </summary>
    public partial class DataTableResponseObject
    {
        /// <summary>
        /// Initializes a new instance of the DataTableResponseObject class.
        /// </summary>
        public DataTableResponseObject()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DataTableResponseObject class.
        /// </summary>
        /// <param name="tableName">Name of the table</param>
        /// <param name="columns">List of columns with data types</param>
        /// <param name="rows">Raw row values</param>
        public DataTableResponseObject(string tableName = default(string), IList<DataTableResponseColumn> columns = default(IList<DataTableResponseColumn>), IList<IList<string>> rows = default(IList<IList<string>>))
        {
            TableName = tableName;
            Columns = columns;
            Rows = rows;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the table
        /// </summary>
        [JsonProperty(PropertyName = "tableName")]
        public string TableName { get; set; }

        /// <summary>
        /// Gets or sets list of columns with data types
        /// </summary>
        [JsonProperty(PropertyName = "columns")]
        public IList<DataTableResponseColumn> Columns { get; set; }

        /// <summary>
        /// Gets or sets raw row values
        /// </summary>
        [JsonProperty(PropertyName = "rows")]
        public IList<IList<string>> Rows { get; set; }

    }
}
