// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.WebSites.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for RedundancyMode.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum RedundancyMode
    {
        [EnumMember(Value = "None")]
        None,
        [EnumMember(Value = "Manual")]
        Manual,
        [EnumMember(Value = "Failover")]
        Failover,
        [EnumMember(Value = "ActiveActive")]
        ActiveActive,
        [EnumMember(Value = "GeoRedundant")]
        GeoRedundant
    }
    internal static class RedundancyModeEnumExtension
    {
        internal static string ToSerializedValue(this RedundancyMode? value)
        {
            return value == null ? null : ((RedundancyMode)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this RedundancyMode value)
        {
            switch( value )
            {
                case RedundancyMode.None:
                    return "None";
                case RedundancyMode.Manual:
                    return "Manual";
                case RedundancyMode.Failover:
                    return "Failover";
                case RedundancyMode.ActiveActive:
                    return "ActiveActive";
                case RedundancyMode.GeoRedundant:
                    return "GeoRedundant";
            }
            return null;
        }

        internal static RedundancyMode? ParseRedundancyMode(this string value)
        {
            switch( value )
            {
                case "None":
                    return RedundancyMode.None;
                case "Manual":
                    return RedundancyMode.Manual;
                case "Failover":
                    return RedundancyMode.Failover;
                case "ActiveActive":
                    return RedundancyMode.ActiveActive;
                case "GeoRedundant":
                    return RedundancyMode.GeoRedundant;
            }
            return null;
        }
    }
}
