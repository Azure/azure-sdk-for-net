// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.WebSites.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The configuration settings of the login flow of users using App Service
    /// Authentication/Authorization.
    /// </summary>
    public partial class Login
    {
        /// <summary>
        /// Initializes a new instance of the Login class.
        /// </summary>
        public Login()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Login class.
        /// </summary>
        /// <param name="routes">The routes that specify the endpoints used for
        /// login and logout requests.</param>
        /// <param name="tokenStore">The configuration settings of the token
        /// store.</param>
        /// <param
        /// name="preserveUrlFragmentsForLogins">&lt;code&gt;true&lt;/code&gt;
        /// if the fragments from the request are preserved after the login
        /// request is made; otherwise, &lt;code&gt;false&lt;/code&gt;.</param>
        /// <param name="allowedExternalRedirectUrls">External URLs that can be
        /// redirected to as part of logging in or logging out of the app. Note
        /// that the query string part of the URL is ignored.
        /// This is an advanced setting typically only needed by Windows Store
        /// application backends.
        /// Note that URLs within the current domain are always implicitly
        /// allowed.</param>
        /// <param name="cookieExpiration">The configuration settings of the
        /// session cookie's expiration.</param>
        /// <param name="nonce">The configuration settings of the nonce used in
        /// the login flow.</param>
        public Login(LoginRoutes routes = default(LoginRoutes), TokenStore tokenStore = default(TokenStore), bool? preserveUrlFragmentsForLogins = default(bool?), IList<string> allowedExternalRedirectUrls = default(IList<string>), CookieExpiration cookieExpiration = default(CookieExpiration), Nonce nonce = default(Nonce))
        {
            Routes = routes;
            TokenStore = tokenStore;
            PreserveUrlFragmentsForLogins = preserveUrlFragmentsForLogins;
            AllowedExternalRedirectUrls = allowedExternalRedirectUrls;
            CookieExpiration = cookieExpiration;
            Nonce = nonce;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the routes that specify the endpoints used for login
        /// and logout requests.
        /// </summary>
        [JsonProperty(PropertyName = "routes")]
        public LoginRoutes Routes { get; set; }

        /// <summary>
        /// Gets or sets the configuration settings of the token store.
        /// </summary>
        [JsonProperty(PropertyName = "tokenStore")]
        public TokenStore TokenStore { get; set; }

        /// <summary>
        /// Gets or sets &amp;lt;code&amp;gt;true&amp;lt;/code&amp;gt; if the
        /// fragments from the request are preserved after the login request is
        /// made; otherwise, &amp;lt;code&amp;gt;false&amp;lt;/code&amp;gt;.
        /// </summary>
        [JsonProperty(PropertyName = "preserveUrlFragmentsForLogins")]
        public bool? PreserveUrlFragmentsForLogins { get; set; }

        /// <summary>
        /// Gets or sets external URLs that can be redirected to as part of
        /// logging in or logging out of the app. Note that the query string
        /// part of the URL is ignored.
        /// This is an advanced setting typically only needed by Windows Store
        /// application backends.
        /// Note that URLs within the current domain are always implicitly
        /// allowed.
        /// </summary>
        [JsonProperty(PropertyName = "allowedExternalRedirectUrls")]
        public IList<string> AllowedExternalRedirectUrls { get; set; }

        /// <summary>
        /// Gets or sets the configuration settings of the session cookie's
        /// expiration.
        /// </summary>
        [JsonProperty(PropertyName = "cookieExpiration")]
        public CookieExpiration CookieExpiration { get; set; }

        /// <summary>
        /// Gets or sets the configuration settings of the nonce used in the
        /// login flow.
        /// </summary>
        [JsonProperty(PropertyName = "nonce")]
        public Nonce Nonce { get; set; }

    }
}
