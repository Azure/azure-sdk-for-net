// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.WebSites.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for ClientCertMode.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ClientCertMode
    {
        [EnumMember(Value = "Required")]
        Required,
        [EnumMember(Value = "Optional")]
        Optional,
        [EnumMember(Value = "OptionalInteractiveUser")]
        OptionalInteractiveUser
    }
    internal static class ClientCertModeEnumExtension
    {
        internal static string ToSerializedValue(this ClientCertMode? value)
        {
            return value == null ? null : ((ClientCertMode)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this ClientCertMode value)
        {
            switch( value )
            {
                case ClientCertMode.Required:
                    return "Required";
                case ClientCertMode.Optional:
                    return "Optional";
                case ClientCertMode.OptionalInteractiveUser:
                    return "OptionalInteractiveUser";
            }
            return null;
        }

        internal static ClientCertMode? ParseClientCertMode(this string value)
        {
            switch( value )
            {
                case "Required":
                    return ClientCertMode.Required;
                case "Optional":
                    return ClientCertMode.Optional;
                case "OptionalInteractiveUser":
                    return ClientCertMode.OptionalInteractiveUser;
            }
            return null;
        }
    }
}
