// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Microsoft.Azure.Management.WebSites.Models
{
    /// <summary> The required set of inputs to validate a VNET. </summary>
    public partial class VnetParameters : ProxyOnlyResource
    {
        /// <summary> Initializes a new instance of VnetParameters. </summary>
        public VnetParameters()
        {
        }

        /// <summary> Initializes a new instance of VnetParameters. </summary>
        /// <param name="id"> Resource Id. </param>
        /// <param name="name"> Resource Name. </param>
        /// <param name="kind"> Kind of resource. </param>
        /// <param name="type"> Resource type. </param>
        /// <param name="vnetResourceGroup"> The Resource Group of the VNET to be validated. </param>
        /// <param name="vnetName"> The name of the VNET to be validated. </param>
        /// <param name="vnetSubnetName"> The subnet name to be validated. </param>
        /// <param name="subnetResourceId"> The ARM Resource ID of the subnet to validate. </param>
        internal VnetParameters(string id, string name, string kind, string type, string vnetResourceGroup, string vnetName, string vnetSubnetName, string subnetResourceId) : base(id, name, kind, type)
        {
            VnetResourceGroup = vnetResourceGroup;
            VnetName = vnetName;
            VnetSubnetName = vnetSubnetName;
            SubnetResourceId = subnetResourceId;
        }

        /// <summary> The Resource Group of the VNET to be validated. </summary>
        public string VnetResourceGroup { get; set; }
        /// <summary> The name of the VNET to be validated. </summary>
        public string VnetName { get; set; }
        /// <summary> The subnet name to be validated. </summary>
        public string VnetSubnetName { get; set; }
        /// <summary> The ARM Resource ID of the subnet to validate. </summary>
        public string SubnetResourceId { get; set; }
    }
}
