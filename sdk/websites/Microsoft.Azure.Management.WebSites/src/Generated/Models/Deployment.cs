// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Microsoft.Azure.Management.WebSites.Models
{
    /// <summary> User credentials used for publishing activity. </summary>
    public partial class Deployment : ProxyOnlyResource
    {
        /// <summary> Initializes a new instance of Deployment. </summary>
        public Deployment()
        {
        }

        /// <summary> Initializes a new instance of Deployment. </summary>
        /// <param name="id"> Resource Id. </param>
        /// <param name="name"> Resource Name. </param>
        /// <param name="kind"> Kind of resource. </param>
        /// <param name="type"> Resource type. </param>
        /// <param name="status"> Deployment status. </param>
        /// <param name="message"> Details about deployment status. </param>
        /// <param name="author"> Who authored the deployment. </param>
        /// <param name="deployer"> Who performed the deployment. </param>
        /// <param name="authorEmail"> Author email. </param>
        /// <param name="startTime"> Start time. </param>
        /// <param name="endTime"> End time. </param>
        /// <param name="active"> True if deployment is currently active, false if completed and null if not started. </param>
        /// <param name="details"> Details on deployment. </param>
        internal Deployment(string id, string name, string kind, string type, int? status, string message, string author, string deployer, string authorEmail, DateTimeOffset? startTime, DateTimeOffset? endTime, bool? active, string details) : base(id, name, kind, type)
        {
            Status = status;
            Message = message;
            Author = author;
            Deployer = deployer;
            AuthorEmail = authorEmail;
            StartTime = startTime;
            EndTime = endTime;
            Active = active;
            Details = details;
        }

        /// <summary> Deployment status. </summary>
        public int? Status { get; set; }
        /// <summary> Details about deployment status. </summary>
        public string Message { get; set; }
        /// <summary> Who authored the deployment. </summary>
        public string Author { get; set; }
        /// <summary> Who performed the deployment. </summary>
        public string Deployer { get; set; }
        /// <summary> Author email. </summary>
        public string AuthorEmail { get; set; }
        /// <summary> Start time. </summary>
        public DateTimeOffset? StartTime { get; set; }
        /// <summary> End time. </summary>
        public DateTimeOffset? EndTime { get; set; }
        /// <summary> True if deployment is currently active, false if completed and null if not started. </summary>
        public bool? Active { get; set; }
        /// <summary> Details on deployment. </summary>
        public string Details { get; set; }
    }
}
