// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.WebSites.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Template Options for the static site.
    /// </summary>
    public partial class StaticSiteTemplateOptions
    {
        /// <summary>
        /// Initializes a new instance of the StaticSiteTemplateOptions class.
        /// </summary>
        public StaticSiteTemplateOptions()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the StaticSiteTemplateOptions class.
        /// </summary>
        /// <param name="templateRepositoryUrl">URL of the template repository.
        /// The newly generated repository will be based on this one.</param>
        /// <param name="owner">Owner of the newly generated
        /// repository.</param>
        /// <param name="repositoryName">Name of the newly generated
        /// repository.</param>
        /// <param name="description">Description of the newly generated
        /// repository.</param>
        /// <param name="isPrivate">Whether or not the newly generated
        /// repository is a private repository. Defaults to false (i.e.
        /// public).</param>
        public StaticSiteTemplateOptions(string templateRepositoryUrl = default(string), string owner = default(string), string repositoryName = default(string), string description = default(string), bool? isPrivate = default(bool?))
        {
            TemplateRepositoryUrl = templateRepositoryUrl;
            Owner = owner;
            RepositoryName = repositoryName;
            Description = description;
            IsPrivate = isPrivate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets URL of the template repository. The newly generated
        /// repository will be based on this one.
        /// </summary>
        [JsonProperty(PropertyName = "templateRepositoryUrl")]
        public string TemplateRepositoryUrl { get; set; }

        /// <summary>
        /// Gets or sets owner of the newly generated repository.
        /// </summary>
        [JsonProperty(PropertyName = "owner")]
        public string Owner { get; set; }

        /// <summary>
        /// Gets or sets name of the newly generated repository.
        /// </summary>
        [JsonProperty(PropertyName = "repositoryName")]
        public string RepositoryName { get; set; }

        /// <summary>
        /// Gets or sets description of the newly generated repository.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets whether or not the newly generated repository is a
        /// private repository. Defaults to false (i.e. public).
        /// </summary>
        [JsonProperty(PropertyName = "isPrivate")]
        public bool? IsPrivate { get; set; }

    }
}
