// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Microsoft.Azure.Management.WebSites.Models
{
    /// <summary> Class representing Response from Detector. </summary>
    public partial class DetectorResponse : ProxyOnlyResource
    {
        /// <summary> Initializes a new instance of DetectorResponse. </summary>
        public DetectorResponse()
        {
            Dataset = new ChangeTrackingList<DiagnosticData>();
            DataProvidersMetadata = new ChangeTrackingList<DataProviderMetadata>();
        }

        /// <summary> Initializes a new instance of DetectorResponse. </summary>
        /// <param name="id"> Resource Id. </param>
        /// <param name="name"> Resource Name. </param>
        /// <param name="kind"> Kind of resource. </param>
        /// <param name="type"> Resource type. </param>
        /// <param name="metadata"> metadata for the detector. </param>
        /// <param name="dataset"> Data Set. </param>
        /// <param name="status"> Indicates status of the most severe insight. </param>
        /// <param name="dataProvidersMetadata"> Additional configuration for different data providers to be used by the UI. </param>
        /// <param name="suggestedUtterances"> Suggested utterances where the detector can be applicable. </param>
        internal DetectorResponse(string id, string name, string kind, string type, DetectorInfo metadata, IList<DiagnosticData> dataset, Status status, IList<DataProviderMetadata> dataProvidersMetadata, QueryUtterancesResults suggestedUtterances) : base(id, name, kind, type)
        {
            Metadata = metadata;
            Dataset = dataset;
            Status = status;
            DataProvidersMetadata = dataProvidersMetadata;
            SuggestedUtterances = suggestedUtterances;
        }

        /// <summary> metadata for the detector. </summary>
        public DetectorInfo Metadata { get; set; }
        /// <summary> Data Set. </summary>
        public IList<DiagnosticData> Dataset { get; }
        /// <summary> Indicates status of the most severe insight. </summary>
        public Status Status { get; set; }
        /// <summary> Additional configuration for different data providers to be used by the UI. </summary>
        public IList<DataProviderMetadata> DataProvidersMetadata { get; }
        /// <summary> Suggested utterances where the detector can be applicable. </summary>
        public QueryUtterancesResults SuggestedUtterances { get; set; }
    }
}
