// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.WebSites.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Describes main public IP address and any extra virtual IPs.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class AddressResponse : ProxyOnlyResource
    {
        /// <summary>
        /// Initializes a new instance of the AddressResponse class.
        /// </summary>
        public AddressResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AddressResponse class.
        /// </summary>
        /// <param name="id">Resource Id.</param>
        /// <param name="name">Resource Name.</param>
        /// <param name="kind">Kind of resource.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="serviceIpAddress">Main public virtual IP.</param>
        /// <param name="internalIpAddress">Virtual Network internal IP address
        /// of the App Service Environment if it is in internal load-balancing
        /// mode.</param>
        /// <param name="outboundIpAddresses">IP addresses appearing on
        /// outbound connections.</param>
        /// <param name="vipMappings">Additional virtual IPs.</param>
        public AddressResponse(string id = default(string), string name = default(string), string kind = default(string), string type = default(string), string serviceIpAddress = default(string), string internalIpAddress = default(string), IList<string> outboundIpAddresses = default(IList<string>), IList<VirtualIPMapping> vipMappings = default(IList<VirtualIPMapping>))
            : base(id, name, kind, type)
        {
            ServiceIpAddress = serviceIpAddress;
            InternalIpAddress = internalIpAddress;
            OutboundIpAddresses = outboundIpAddresses;
            VipMappings = vipMappings;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets main public virtual IP.
        /// </summary>
        [JsonProperty(PropertyName = "properties.serviceIpAddress")]
        public string ServiceIpAddress { get; set; }

        /// <summary>
        /// Gets or sets virtual Network internal IP address of the App Service
        /// Environment if it is in internal load-balancing mode.
        /// </summary>
        [JsonProperty(PropertyName = "properties.internalIpAddress")]
        public string InternalIpAddress { get; set; }

        /// <summary>
        /// Gets or sets IP addresses appearing on outbound connections.
        /// </summary>
        [JsonProperty(PropertyName = "properties.outboundIpAddresses")]
        public IList<string> OutboundIpAddresses { get; set; }

        /// <summary>
        /// Gets or sets additional virtual IPs.
        /// </summary>
        [JsonProperty(PropertyName = "properties.vipMappings")]
        public IList<VirtualIPMapping> VipMappings { get; set; }

    }
}
