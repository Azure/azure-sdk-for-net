// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.WebSites.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Identify the status of the most severe insight generated by the
    /// detector.
    /// </summary>
    public partial class Status
    {
        /// <summary>
        /// Initializes a new instance of the Status class.
        /// </summary>
        public Status()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Status class.
        /// </summary>
        /// <param name="message">Descriptive message.</param>
        /// <param name="statusId">Level of the most severe insight generated
        /// by the detector. Possible values include: 'Critical', 'Warning',
        /// 'Info', 'Success', 'None'</param>
        public Status(string message = default(string), InsightStatus? statusId = default(InsightStatus?))
        {
            Message = message;
            StatusId = statusId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets descriptive message.
        /// </summary>
        [JsonProperty(PropertyName = "message")]
        public string Message { get; set; }

        /// <summary>
        /// Gets or sets level of the most severe insight generated by the
        /// detector. Possible values include: 'Critical', 'Warning', 'Info',
        /// 'Success', 'None'
        /// </summary>
        [JsonProperty(PropertyName = "statusId")]
        public InsightStatus? StatusId { get; set; }

    }
}
