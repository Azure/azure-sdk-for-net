// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.AppService.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.AppService
{
    /// <summary>
    /// A class representing the TriggeredWebJob data model.
    /// Triggered Web Job Information.
    /// </summary>
    public partial class TriggeredWebJobData : ResourceData
    {
        /// <summary> Initializes a new instance of <see cref="TriggeredWebJobData"/>. </summary>
        public TriggeredWebJobData()
        {
            Settings = new ChangeTrackingDictionary<string, BinaryData>();
        }

        /// <summary> Initializes a new instance of <see cref="TriggeredWebJobData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="latestRun"> Latest job run information. </param>
        /// <param name="historyUri"> History URL. </param>
        /// <param name="schedulerLogsUri"> Scheduler Logs URL. </param>
        /// <param name="runCommand"> Run command. </param>
        /// <param name="uri"> Job URL. </param>
        /// <param name="extraInfoUri"> Extra Info URL. </param>
        /// <param name="webJobType"> Job type. </param>
        /// <param name="error"> Error information. </param>
        /// <param name="isUsingSdk"> Using SDK?. </param>
        /// <param name="settings"> Job settings. </param>
        /// <param name="kind"> Kind of resource. </param>
        internal TriggeredWebJobData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, TriggeredJobRun latestRun, Uri historyUri, Uri schedulerLogsUri, string runCommand, Uri uri, Uri extraInfoUri, WebJobType? webJobType, string error, bool? isUsingSdk, IDictionary<string, BinaryData> settings, string kind) : base(id, name, resourceType, systemData)
        {
            LatestRun = latestRun;
            HistoryUri = historyUri;
            SchedulerLogsUri = schedulerLogsUri;
            RunCommand = runCommand;
            Uri = uri;
            ExtraInfoUri = extraInfoUri;
            WebJobType = webJobType;
            Error = error;
            IsUsingSdk = isUsingSdk;
            Settings = settings;
            Kind = kind;
        }

        /// <summary> Latest job run information. </summary>
        public TriggeredJobRun LatestRun { get; set; }
        /// <summary> History URL. </summary>
        public Uri HistoryUri { get; set; }
        /// <summary> Scheduler Logs URL. </summary>
        public Uri SchedulerLogsUri { get; set; }
        /// <summary> Run command. </summary>
        public string RunCommand { get; set; }
        /// <summary> Job URL. </summary>
        public Uri Uri { get; set; }
        /// <summary> Extra Info URL. </summary>
        public Uri ExtraInfoUri { get; set; }
        /// <summary> Job type. </summary>
        public WebJobType? WebJobType { get; set; }
        /// <summary> Error information. </summary>
        public string Error { get; set; }
        /// <summary> Using SDK?. </summary>
        public bool? IsUsingSdk { get; set; }
        /// <summary>
        /// Job settings.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public IDictionary<string, BinaryData> Settings { get; }
        /// <summary> Kind of resource. </summary>
        public string Kind { get; set; }
    }
}
