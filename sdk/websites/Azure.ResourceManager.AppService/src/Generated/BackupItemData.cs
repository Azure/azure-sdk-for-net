// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.AppService.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.AppService
{
    /// <summary> A class representing the BackupItem data model. </summary>
    public partial class BackupItemData : ResourceData
    {
        /// <summary> Initializes a new instance of BackupItemData. </summary>
        public BackupItemData()
        {
            Databases = new ChangeTrackingList<DatabaseBackupSetting>();
        }

        /// <summary> Initializes a new instance of BackupItemData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="backupId">
        /// Id of the backup.
        /// Serialized Name: BackupItem.properties.id
        /// </param>
        /// <param name="storageAccountUri">
        /// SAS URL for the storage account container which contains this backup.
        /// Serialized Name: BackupItem.properties.storageAccountUrl
        /// </param>
        /// <param name="blobName">
        /// Name of the blob which contains data for this backup.
        /// Serialized Name: BackupItem.properties.blobName
        /// </param>
        /// <param name="namePropertiesName">
        /// Name of this backup.
        /// Serialized Name: BackupItem.properties.name
        /// </param>
        /// <param name="status">
        /// Backup status.
        /// Serialized Name: BackupItem.properties.status
        /// </param>
        /// <param name="sizeInBytes">
        /// Size of the backup in bytes.
        /// Serialized Name: BackupItem.properties.sizeInBytes
        /// </param>
        /// <param name="createdOn">
        /// Timestamp of the backup creation.
        /// Serialized Name: BackupItem.properties.created
        /// </param>
        /// <param name="log">
        /// Details regarding this backup. Might contain an error message.
        /// Serialized Name: BackupItem.properties.log
        /// </param>
        /// <param name="databases">
        /// List of databases included in the backup.
        /// Serialized Name: BackupItem.properties.databases
        /// </param>
        /// <param name="isScheduled">
        /// True if this backup has been created due to a schedule being triggered.
        /// Serialized Name: BackupItem.properties.scheduled
        /// </param>
        /// <param name="lastRestoreOn">
        /// Timestamp of a last restore operation which used this backup.
        /// Serialized Name: BackupItem.properties.lastRestoreTimeStamp
        /// </param>
        /// <param name="finishedOn">
        /// Timestamp when this backup finished.
        /// Serialized Name: BackupItem.properties.finishedTimeStamp
        /// </param>
        /// <param name="correlationId">
        /// Unique correlation identifier. Please use this along with the timestamp while communicating with Azure support.
        /// Serialized Name: BackupItem.properties.correlationId
        /// </param>
        /// <param name="websiteSizeInBytes">
        /// Size of the original web app which has been backed up.
        /// Serialized Name: BackupItem.properties.websiteSizeInBytes
        /// </param>
        /// <param name="kind">
        /// Kind of resource.
        /// Serialized Name: ProxyOnlyResource.kind
        /// </param>
        internal BackupItemData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, int? backupId, Uri storageAccountUri, string blobName, string namePropertiesName, BackupItemStatus? status, long? sizeInBytes, DateTimeOffset? createdOn, string log, IReadOnlyList<DatabaseBackupSetting> databases, bool? isScheduled, DateTimeOffset? lastRestoreOn, DateTimeOffset? finishedOn, string correlationId, long? websiteSizeInBytes, string kind) : base(id, name, resourceType, systemData)
        {
            BackupId = backupId;
            StorageAccountUri = storageAccountUri;
            BlobName = blobName;
            NamePropertiesName = namePropertiesName;
            Status = status;
            SizeInBytes = sizeInBytes;
            CreatedOn = createdOn;
            Log = log;
            Databases = databases;
            IsScheduled = isScheduled;
            LastRestoreOn = lastRestoreOn;
            FinishedOn = finishedOn;
            CorrelationId = correlationId;
            WebsiteSizeInBytes = websiteSizeInBytes;
            Kind = kind;
        }

        /// <summary>
        /// Id of the backup.
        /// Serialized Name: BackupItem.properties.id
        /// </summary>
        public int? BackupId { get; }
        /// <summary>
        /// SAS URL for the storage account container which contains this backup.
        /// Serialized Name: BackupItem.properties.storageAccountUrl
        /// </summary>
        public Uri StorageAccountUri { get; }
        /// <summary>
        /// Name of the blob which contains data for this backup.
        /// Serialized Name: BackupItem.properties.blobName
        /// </summary>
        public string BlobName { get; }
        /// <summary>
        /// Name of this backup.
        /// Serialized Name: BackupItem.properties.name
        /// </summary>
        public string NamePropertiesName { get; }
        /// <summary>
        /// Backup status.
        /// Serialized Name: BackupItem.properties.status
        /// </summary>
        public BackupItemStatus? Status { get; }
        /// <summary>
        /// Size of the backup in bytes.
        /// Serialized Name: BackupItem.properties.sizeInBytes
        /// </summary>
        public long? SizeInBytes { get; }
        /// <summary>
        /// Timestamp of the backup creation.
        /// Serialized Name: BackupItem.properties.created
        /// </summary>
        public DateTimeOffset? CreatedOn { get; }
        /// <summary>
        /// Details regarding this backup. Might contain an error message.
        /// Serialized Name: BackupItem.properties.log
        /// </summary>
        public string Log { get; }
        /// <summary>
        /// List of databases included in the backup.
        /// Serialized Name: BackupItem.properties.databases
        /// </summary>
        public IReadOnlyList<DatabaseBackupSetting> Databases { get; }
        /// <summary>
        /// True if this backup has been created due to a schedule being triggered.
        /// Serialized Name: BackupItem.properties.scheduled
        /// </summary>
        public bool? IsScheduled { get; }
        /// <summary>
        /// Timestamp of a last restore operation which used this backup.
        /// Serialized Name: BackupItem.properties.lastRestoreTimeStamp
        /// </summary>
        public DateTimeOffset? LastRestoreOn { get; }
        /// <summary>
        /// Timestamp when this backup finished.
        /// Serialized Name: BackupItem.properties.finishedTimeStamp
        /// </summary>
        public DateTimeOffset? FinishedOn { get; }
        /// <summary>
        /// Unique correlation identifier. Please use this along with the timestamp while communicating with Azure support.
        /// Serialized Name: BackupItem.properties.correlationId
        /// </summary>
        public string CorrelationId { get; }
        /// <summary>
        /// Size of the original web app which has been backed up.
        /// Serialized Name: BackupItem.properties.websiteSizeInBytes
        /// </summary>
        public long? WebsiteSizeInBytes { get; }
        /// <summary>
        /// Kind of resource.
        /// Serialized Name: ProxyOnlyResource.kind
        /// </summary>
        public string Kind { get; set; }
    }
}
