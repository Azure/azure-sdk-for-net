// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.AppService.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.AppService
{
    /// <summary> A class representing the PrivateAccess data model. </summary>
    public partial class PrivateAccessData : ResourceData
    {
        /// <summary> Initializes a new instance of PrivateAccessData. </summary>
        public PrivateAccessData()
        {
            VirtualNetworks = new ChangeTrackingList<PrivateAccessVirtualNetwork>();
        }

        /// <summary> Initializes a new instance of PrivateAccessData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="isEnabled">
        /// Whether private access is enabled or not.
        /// Serialized Name: PrivateAccess.properties.enabled
        /// </param>
        /// <param name="virtualNetworks">
        /// The Virtual Networks (and subnets) allowed to access the site privately.
        /// Serialized Name: PrivateAccess.properties.virtualNetworks
        /// </param>
        /// <param name="kind">
        /// Kind of resource.
        /// Serialized Name: ProxyOnlyResource.kind
        /// </param>
        internal PrivateAccessData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, bool? isEnabled, IList<PrivateAccessVirtualNetwork> virtualNetworks, string kind) : base(id, name, resourceType, systemData)
        {
            IsEnabled = isEnabled;
            VirtualNetworks = virtualNetworks;
            Kind = kind;
        }

        /// <summary>
        /// Whether private access is enabled or not.
        /// Serialized Name: PrivateAccess.properties.enabled
        /// </summary>
        public bool? IsEnabled { get; set; }
        /// <summary>
        /// The Virtual Networks (and subnets) allowed to access the site privately.
        /// Serialized Name: PrivateAccess.properties.virtualNetworks
        /// </summary>
        public IList<PrivateAccessVirtualNetwork> VirtualNetworks { get; }
        /// <summary>
        /// Kind of resource.
        /// Serialized Name: ProxyOnlyResource.kind
        /// </summary>
        public string Kind { get; set; }
    }
}
