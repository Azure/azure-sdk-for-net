// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager.AppService.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.AppService
{
    /// <summary> A class representing the ApiKeyVaultReference data model. </summary>
    public partial class ApiKeyVaultReferenceData : ProxyOnlyResource
    {
        /// <summary> Initializes a new instance of ApiKeyVaultReferenceData. </summary>
        public ApiKeyVaultReferenceData()
        {
            Source = "KeyVault";
        }

        /// <summary> Initializes a new instance of ApiKeyVaultReferenceData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="type"> The type. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="kind"> Kind of resource. </param>
        /// <param name="reference"></param>
        /// <param name="status"></param>
        /// <param name="vaultName"></param>
        /// <param name="secretName"></param>
        /// <param name="secretVersion"></param>
        /// <param name="identityType"> Managed service identity. </param>
        /// <param name="details"></param>
        /// <param name="source"></param>
        /// <param name="activeVersion"></param>
        internal ApiKeyVaultReferenceData(ResourceIdentifier id, string name, ResourceType type, SystemData systemData, string kind, string reference, ResolveStatus? status, string vaultName, string secretName, string secretVersion, ManagedServiceIdentity identityType, string details, string source, string activeVersion) : base(id, name, type, systemData, kind)
        {
            Reference = reference;
            Status = status;
            VaultName = vaultName;
            SecretName = secretName;
            SecretVersion = secretVersion;
            IdentityType = identityType;
            Details = details;
            Source = source;
            ActiveVersion = activeVersion;
        }

        /// <summary> Gets or sets the reference. </summary>
        public string Reference { get; set; }
        /// <summary> Gets or sets the status. </summary>
        public ResolveStatus? Status { get; set; }
        /// <summary> Gets or sets the vault name. </summary>
        public string VaultName { get; set; }
        /// <summary> Gets or sets the secret name. </summary>
        public string SecretName { get; set; }
        /// <summary> Gets or sets the secret version. </summary>
        public string SecretVersion { get; set; }
        /// <summary> Managed service identity. </summary>
        public ManagedServiceIdentity IdentityType { get; set; }
        /// <summary> Gets or sets the details. </summary>
        public string Details { get; set; }
        /// <summary> Gets or sets the source. </summary>
        public string Source { get; set; }
        /// <summary> Gets or sets the active version. </summary>
        public string ActiveVersion { get; set; }
    }
}
