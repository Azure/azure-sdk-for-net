// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.AppService.Models
{
    /// <summary> Resource type used for verification. </summary>
    public readonly partial struct CheckNameResourceTypes : IEquatable<CheckNameResourceTypes>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="CheckNameResourceTypes"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public CheckNameResourceTypes(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string WebSiteValue = "Site";
        private const string SlotValue = "Slot";
        private const string HostingEnvironmentValue = "HostingEnvironment";
        private const string PublishingUserValue = "PublishingUser";
        private const string MicrosoftWebSitesValue = "Microsoft.Web/sites";
        private const string MicrosoftWebSitesSlotsValue = "Microsoft.Web/sites/slots";
        private const string MicrosoftWebHostingEnvironmentsValue = "Microsoft.Web/hostingEnvironments";
        private const string MicrosoftWebPublishingUsersValue = "Microsoft.Web/publishingUsers";

        /// <summary> Site. </summary>
        public static CheckNameResourceTypes WebSite { get; } = new CheckNameResourceTypes(WebSiteValue);
        /// <summary> Slot. </summary>
        public static CheckNameResourceTypes Slot { get; } = new CheckNameResourceTypes(SlotValue);
        /// <summary> HostingEnvironment. </summary>
        public static CheckNameResourceTypes HostingEnvironment { get; } = new CheckNameResourceTypes(HostingEnvironmentValue);
        /// <summary> PublishingUser. </summary>
        public static CheckNameResourceTypes PublishingUser { get; } = new CheckNameResourceTypes(PublishingUserValue);
        /// <summary> Microsoft.Web/sites. </summary>
        public static CheckNameResourceTypes MicrosoftWebSites { get; } = new CheckNameResourceTypes(MicrosoftWebSitesValue);
        /// <summary> Microsoft.Web/sites/slots. </summary>
        public static CheckNameResourceTypes MicrosoftWebSitesSlots { get; } = new CheckNameResourceTypes(MicrosoftWebSitesSlotsValue);
        /// <summary> Microsoft.Web/hostingEnvironments. </summary>
        public static CheckNameResourceTypes MicrosoftWebHostingEnvironments { get; } = new CheckNameResourceTypes(MicrosoftWebHostingEnvironmentsValue);
        /// <summary> Microsoft.Web/publishingUsers. </summary>
        public static CheckNameResourceTypes MicrosoftWebPublishingUsers { get; } = new CheckNameResourceTypes(MicrosoftWebPublishingUsersValue);
        /// <summary> Determines if two <see cref="CheckNameResourceTypes"/> values are the same. </summary>
        public static bool operator ==(CheckNameResourceTypes left, CheckNameResourceTypes right) => left.Equals(right);
        /// <summary> Determines if two <see cref="CheckNameResourceTypes"/> values are not the same. </summary>
        public static bool operator !=(CheckNameResourceTypes left, CheckNameResourceTypes right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="CheckNameResourceTypes"/>. </summary>
        public static implicit operator CheckNameResourceTypes(string value) => new CheckNameResourceTypes(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is CheckNameResourceTypes other && Equals(other);
        /// <inheritdoc />
        public bool Equals(CheckNameResourceTypes other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
