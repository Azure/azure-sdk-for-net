// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.AppService.Models
{
    /// <summary> Container App Dapr configuration. </summary>
    public partial class Dapr
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="Dapr"/>. </summary>
        public Dapr()
        {
            Components = new ChangeTrackingList<DaprComponent>();
        }

        /// <summary> Initializes a new instance of <see cref="Dapr"/>. </summary>
        /// <param name="enabled"> Boolean indicating if the Dapr side car is enabled. </param>
        /// <param name="appId"> Dapr application identifier. </param>
        /// <param name="appPort"> Port on which the Dapr side car. </param>
        /// <param name="components"> Collection of Dapr components. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal Dapr(bool? enabled, string appId, int? appPort, IList<DaprComponent> components, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Enabled = enabled;
            AppId = appId;
            AppPort = appPort;
            Components = components;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Boolean indicating if the Dapr side car is enabled. </summary>
        [WirePath("enabled")]
        public bool? Enabled { get; set; }
        /// <summary> Dapr application identifier. </summary>
        [WirePath("appId")]
        public string AppId { get; set; }
        /// <summary> Port on which the Dapr side car. </summary>
        [WirePath("appPort")]
        public int? AppPort { get; set; }
        /// <summary> Collection of Dapr components. </summary>
        [WirePath("components")]
        public IList<DaprComponent> Components { get; }
    }
}
