// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.AppService.Models
{
    public partial class SiteAuthSettingsV2 : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Kind))
            {
                writer.WritePropertyName("kind");
                writer.WriteStringValue(Kind);
            }
            writer.WritePropertyName("properties");
            writer.WriteStartObject();
            if (Optional.IsDefined(Platform))
            {
                writer.WritePropertyName("platform");
                writer.WriteObjectValue(Platform);
            }
            if (Optional.IsDefined(GlobalValidation))
            {
                writer.WritePropertyName("globalValidation");
                writer.WriteObjectValue(GlobalValidation);
            }
            if (Optional.IsDefined(IdentityProviders))
            {
                writer.WritePropertyName("identityProviders");
                writer.WriteObjectValue(IdentityProviders);
            }
            if (Optional.IsDefined(Login))
            {
                writer.WritePropertyName("login");
                writer.WriteObjectValue(Login);
            }
            if (Optional.IsDefined(HttpSettings))
            {
                writer.WritePropertyName("httpSettings");
                writer.WriteObjectValue(HttpSettings);
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
        }

        internal static SiteAuthSettingsV2 DeserializeSiteAuthSettingsV2(JsonElement element)
        {
            Optional<string> kind = default;
            ResourceIdentifier id = default;
            string name = default;
            ResourceType type = default;
            SystemData systemData = default;
            Optional<AuthPlatform> platform = default;
            Optional<GlobalValidation> globalValidation = default;
            Optional<IdentityProviders> identityProviders = default;
            Optional<LoginInformation> login = default;
            Optional<HttpSettings> httpSettings = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("kind"))
                {
                    kind = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("id"))
                {
                    id = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("systemData"))
                {
                    systemData = JsonSerializer.Deserialize<SystemData>(property.Value.ToString());
                    continue;
                }
                if (property.NameEquals("properties"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("platform"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            platform = AuthPlatform.DeserializeAuthPlatform(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("globalValidation"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            globalValidation = GlobalValidation.DeserializeGlobalValidation(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("identityProviders"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            identityProviders = IdentityProviders.DeserializeIdentityProviders(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("login"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            login = LoginInformation.DeserializeLoginInformation(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("httpSettings"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            httpSettings = HttpSettings.DeserializeHttpSettings(property0.Value);
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new SiteAuthSettingsV2(id, name, type, systemData, kind.Value, platform.Value, globalValidation.Value, identityProviders.Value, login.Value, httpSettings.Value);
        }
    }
}
