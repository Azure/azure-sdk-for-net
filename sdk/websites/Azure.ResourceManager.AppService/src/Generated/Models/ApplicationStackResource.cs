// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.AppService.Models
{
    /// <summary>
    /// ARM resource for a ApplicationStack.
    /// Serialized Name: ApplicationStackResource
    /// </summary>
    public partial class ApplicationStackResource : ResourceData
    {
        /// <summary> Initializes a new instance of ApplicationStackResource. </summary>
        public ApplicationStackResource()
        {
            MajorVersions = new ChangeTrackingList<StackMajorVersion>();
            Frameworks = new ChangeTrackingList<ApplicationStack>();
            IsDeprecated = new ChangeTrackingList<ApplicationStack>();
        }

        /// <summary> Initializes a new instance of ApplicationStackResource. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="namePropertiesName">
        /// Application stack name.
        /// Serialized Name: ApplicationStackResource.properties.name
        /// </param>
        /// <param name="display">
        /// Application stack display name.
        /// Serialized Name: ApplicationStackResource.properties.display
        /// </param>
        /// <param name="dependency">
        /// Application stack dependency.
        /// Serialized Name: ApplicationStackResource.properties.dependency
        /// </param>
        /// <param name="majorVersions">
        /// List of major versions available.
        /// Serialized Name: ApplicationStackResource.properties.majorVersions
        /// </param>
        /// <param name="frameworks">
        /// List of frameworks associated with application stack.
        /// Serialized Name: ApplicationStackResource.properties.frameworks
        /// </param>
        /// <param name="isDeprecated">
        /// &lt;code&gt;true&lt;/code&gt; if this is the stack is deprecated; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// Serialized Name: ApplicationStackResource.properties.isDeprecated
        /// </param>
        /// <param name="kind">
        /// Kind of resource.
        /// Serialized Name: ProxyOnlyResource.kind
        /// </param>
        internal ApplicationStackResource(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string namePropertiesName, string display, string dependency, IList<StackMajorVersion> majorVersions, IList<ApplicationStack> frameworks, IList<ApplicationStack> isDeprecated, string kind) : base(id, name, resourceType, systemData)
        {
            NamePropertiesName = namePropertiesName;
            Display = display;
            Dependency = dependency;
            MajorVersions = majorVersions;
            Frameworks = frameworks;
            IsDeprecated = isDeprecated;
            Kind = kind;
        }

        /// <summary>
        /// Application stack name.
        /// Serialized Name: ApplicationStackResource.properties.name
        /// </summary>
        public string NamePropertiesName { get; set; }
        /// <summary>
        /// Application stack display name.
        /// Serialized Name: ApplicationStackResource.properties.display
        /// </summary>
        public string Display { get; set; }
        /// <summary>
        /// Application stack dependency.
        /// Serialized Name: ApplicationStackResource.properties.dependency
        /// </summary>
        public string Dependency { get; set; }
        /// <summary>
        /// List of major versions available.
        /// Serialized Name: ApplicationStackResource.properties.majorVersions
        /// </summary>
        public IList<StackMajorVersion> MajorVersions { get; }
        /// <summary>
        /// List of frameworks associated with application stack.
        /// Serialized Name: ApplicationStackResource.properties.frameworks
        /// </summary>
        public IList<ApplicationStack> Frameworks { get; }
        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; if this is the stack is deprecated; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// Serialized Name: ApplicationStackResource.properties.isDeprecated
        /// </summary>
        public IList<ApplicationStack> IsDeprecated { get; }
        /// <summary>
        /// Kind of resource.
        /// Serialized Name: ProxyOnlyResource.kind
        /// </summary>
        public string Kind { get; set; }
    }
}
