// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.AppService.Models
{
    /// <summary> Non versioned Container App configuration properties that define the mutable settings of a Container app. </summary>
    public partial class Configuration
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="Configuration"/>. </summary>
        public Configuration()
        {
            Secrets = new ChangeTrackingList<Secret>();
            Registries = new ChangeTrackingList<RegistryCredentials>();
        }

        /// <summary> Initializes a new instance of <see cref="Configuration"/>. </summary>
        /// <param name="secrets"> Collection of secrets used by a Container app. </param>
        /// <param name="activeRevisionsMode">
        /// ActiveRevisionsMode controls how active revisions are handled for the Container app:
        /// &lt;list&gt;&lt;item&gt;Multiple: multiple revisions can be active. If no value if provided, this is the default&lt;/item&gt;&lt;item&gt;Single: Only one revision can be active at a time. Revision weights can not be used in this mode&lt;/item&gt;&lt;/list&gt;
        /// </param>
        /// <param name="ingress"> Ingress configurations. </param>
        /// <param name="registries"> Collection of private container registry credentials for containers used by the Container app. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal Configuration(IList<Secret> secrets, ActiveRevisionsMode? activeRevisionsMode, Ingress ingress, IList<RegistryCredentials> registries, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Secrets = secrets;
            ActiveRevisionsMode = activeRevisionsMode;
            Ingress = ingress;
            Registries = registries;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Collection of secrets used by a Container app. </summary>
        [WirePath("secrets")]
        public IList<Secret> Secrets { get; }
        /// <summary>
        /// ActiveRevisionsMode controls how active revisions are handled for the Container app:
        /// &lt;list&gt;&lt;item&gt;Multiple: multiple revisions can be active. If no value if provided, this is the default&lt;/item&gt;&lt;item&gt;Single: Only one revision can be active at a time. Revision weights can not be used in this mode&lt;/item&gt;&lt;/list&gt;
        /// </summary>
        [WirePath("activeRevisionsMode")]
        public ActiveRevisionsMode? ActiveRevisionsMode { get; set; }
        /// <summary> Ingress configurations. </summary>
        [WirePath("ingress")]
        public Ingress Ingress { get; set; }
        /// <summary> Collection of private container registry credentials for containers used by the Container app. </summary>
        [WirePath("registries")]
        public IList<RegistryCredentials> Registries { get; }
    }
}
