// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.AppService.Models
{
    /// <summary>
    /// Metric information.
    /// Serialized Name: PerfMonSet
    /// </summary>
    public partial class PerfMonSet
    {
        /// <summary> Initializes a new instance of PerfMonSet. </summary>
        internal PerfMonSet()
        {
            Values = new ChangeTrackingList<PerfMonSample>();
        }

        /// <summary> Initializes a new instance of PerfMonSet. </summary>
        /// <param name="name">
        /// Unique key name of the counter.
        /// Serialized Name: PerfMonSet.name
        /// </param>
        /// <param name="startOn">
        /// Start time of the period.
        /// Serialized Name: PerfMonSet.startTime
        /// </param>
        /// <param name="endOn">
        /// End time of the period.
        /// Serialized Name: PerfMonSet.endTime
        /// </param>
        /// <param name="timeGrain">
        /// Presented time grain.
        /// Serialized Name: PerfMonSet.timeGrain
        /// </param>
        /// <param name="values">
        /// Collection of workers that are active during this time.
        /// Serialized Name: PerfMonSet.values
        /// </param>
        internal PerfMonSet(string name, DateTimeOffset? startOn, DateTimeOffset? endOn, string timeGrain, IReadOnlyList<PerfMonSample> values)
        {
            Name = name;
            StartOn = startOn;
            EndOn = endOn;
            TimeGrain = timeGrain;
            Values = values;
        }

        /// <summary>
        /// Unique key name of the counter.
        /// Serialized Name: PerfMonSet.name
        /// </summary>
        public string Name { get; }
        /// <summary>
        /// Start time of the period.
        /// Serialized Name: PerfMonSet.startTime
        /// </summary>
        public DateTimeOffset? StartOn { get; }
        /// <summary>
        /// End time of the period.
        /// Serialized Name: PerfMonSet.endTime
        /// </summary>
        public DateTimeOffset? EndOn { get; }
        /// <summary>
        /// Presented time grain.
        /// Serialized Name: PerfMonSet.timeGrain
        /// </summary>
        public string TimeGrain { get; }
        /// <summary>
        /// Collection of workers that are active during this time.
        /// Serialized Name: PerfMonSet.values
        /// </summary>
        public IReadOnlyList<PerfMonSample> Values { get; }
    }
}
