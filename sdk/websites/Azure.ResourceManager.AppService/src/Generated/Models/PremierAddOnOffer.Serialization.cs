// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.AppService.Models
{
    public partial class PremierAddOnOffer : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Kind))
            {
                writer.WritePropertyName("kind");
                writer.WriteStringValue(Kind);
            }
            writer.WritePropertyName("properties");
            writer.WriteStartObject();
            if (Optional.IsDefined(Sku))
            {
                writer.WritePropertyName("sku");
                writer.WriteStringValue(Sku);
            }
            if (Optional.IsDefined(Product))
            {
                writer.WritePropertyName("product");
                writer.WriteStringValue(Product);
            }
            if (Optional.IsDefined(Vendor))
            {
                writer.WritePropertyName("vendor");
                writer.WriteStringValue(Vendor);
            }
            if (Optional.IsDefined(IsPromoCodeRequired))
            {
                writer.WritePropertyName("promoCodeRequired");
                writer.WriteBooleanValue(IsPromoCodeRequired.Value);
            }
            if (Optional.IsDefined(Quota))
            {
                writer.WritePropertyName("quota");
                writer.WriteNumberValue(Quota.Value);
            }
            if (Optional.IsDefined(WebHostingPlanRestrictions))
            {
                writer.WritePropertyName("webHostingPlanRestrictions");
                writer.WriteStringValue(WebHostingPlanRestrictions.Value.ToSerialString());
            }
            if (Optional.IsDefined(PrivacyPolicyUri))
            {
                writer.WritePropertyName("privacyPolicyUrl");
                writer.WriteStringValue(PrivacyPolicyUri.AbsoluteUri);
            }
            if (Optional.IsDefined(LegalTermsUri))
            {
                writer.WritePropertyName("legalTermsUrl");
                writer.WriteStringValue(LegalTermsUri.AbsoluteUri);
            }
            if (Optional.IsDefined(MarketplacePublisher))
            {
                writer.WritePropertyName("marketplacePublisher");
                writer.WriteStringValue(MarketplacePublisher);
            }
            if (Optional.IsDefined(MarketplaceOffer))
            {
                writer.WritePropertyName("marketplaceOffer");
                writer.WriteStringValue(MarketplaceOffer);
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
        }

        internal static PremierAddOnOffer DeserializePremierAddOnOffer(JsonElement element)
        {
            Optional<string> kind = default;
            ResourceIdentifier id = default;
            string name = default;
            ResourceType type = default;
            Optional<SystemData> systemData = default;
            Optional<string> sku = default;
            Optional<string> product = default;
            Optional<string> vendor = default;
            Optional<bool> promoCodeRequired = default;
            Optional<int> quota = default;
            Optional<AppServicePlanRestriction> webHostingPlanRestrictions = default;
            Optional<Uri> privacyPolicyUrl = default;
            Optional<Uri> legalTermsUrl = default;
            Optional<string> marketplacePublisher = default;
            Optional<string> marketplaceOffer = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("kind"))
                {
                    kind = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("id"))
                {
                    id = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = new ResourceType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("systemData"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    systemData = JsonSerializer.Deserialize<SystemData>(property.Value.ToString());
                    continue;
                }
                if (property.NameEquals("properties"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("sku"))
                        {
                            sku = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("product"))
                        {
                            product = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("vendor"))
                        {
                            vendor = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("promoCodeRequired"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            promoCodeRequired = property0.Value.GetBoolean();
                            continue;
                        }
                        if (property0.NameEquals("quota"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            quota = property0.Value.GetInt32();
                            continue;
                        }
                        if (property0.NameEquals("webHostingPlanRestrictions"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            webHostingPlanRestrictions = property0.Value.GetString().ToAppServicePlanRestriction();
                            continue;
                        }
                        if (property0.NameEquals("privacyPolicyUrl"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                privacyPolicyUrl = null;
                                continue;
                            }
                            privacyPolicyUrl = new Uri(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("legalTermsUrl"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                legalTermsUrl = null;
                                continue;
                            }
                            legalTermsUrl = new Uri(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("marketplacePublisher"))
                        {
                            marketplacePublisher = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("marketplaceOffer"))
                        {
                            marketplaceOffer = property0.Value.GetString();
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new PremierAddOnOffer(id, name, type, systemData.Value, sku.Value, product.Value, vendor.Value, Optional.ToNullable(promoCodeRequired), Optional.ToNullable(quota), Optional.ToNullable(webHostingPlanRestrictions), privacyPolicyUrl.Value, legalTermsUrl.Value, marketplacePublisher.Value, marketplaceOffer.Value, kind.Value);
        }
    }
}
