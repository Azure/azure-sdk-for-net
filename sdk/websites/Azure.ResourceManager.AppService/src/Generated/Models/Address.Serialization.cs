// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppService.Models
{
    public partial class Address : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("address1");
            writer.WriteStringValue(Address1);
            if (Optional.IsDefined(Address2))
            {
                writer.WritePropertyName("address2");
                writer.WriteStringValue(Address2);
            }
            writer.WritePropertyName("city");
            writer.WriteStringValue(City);
            writer.WritePropertyName("country");
            writer.WriteStringValue(Country);
            writer.WritePropertyName("postalCode");
            writer.WriteStringValue(PostalCode);
            writer.WritePropertyName("state");
            writer.WriteStringValue(State);
            writer.WriteEndObject();
        }

        internal static Address DeserializeAddress(JsonElement element)
        {
            string address1 = default;
            Optional<string> address2 = default;
            string city = default;
            string country = default;
            string postalCode = default;
            string state = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("address1"))
                {
                    address1 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("address2"))
                {
                    address2 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("city"))
                {
                    city = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("country"))
                {
                    country = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("postalCode"))
                {
                    postalCode = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("state"))
                {
                    state = property.Value.GetString();
                    continue;
                }
            }
            return new Address(address1, address2.Value, city, country, postalCode, state);
        }
    }
}
