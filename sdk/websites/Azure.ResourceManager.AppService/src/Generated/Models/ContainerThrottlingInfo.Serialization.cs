// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppService.Models
{
    public partial class ContainerThrottlingInfo : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Periods))
            {
                writer.WritePropertyName("periods"u8);
                writer.WriteNumberValue(Periods.Value);
            }
            if (Optional.IsDefined(ThrottledPeriods))
            {
                writer.WritePropertyName("throttledPeriods"u8);
                writer.WriteNumberValue(ThrottledPeriods.Value);
            }
            if (Optional.IsDefined(ThrottledTime))
            {
                writer.WritePropertyName("throttledTime"u8);
                writer.WriteNumberValue(ThrottledTime.Value);
            }
            writer.WriteEndObject();
        }

        internal static ContainerThrottlingInfo DeserializeContainerThrottlingInfo(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<int> periods = default;
            Optional<int> throttledPeriods = default;
            Optional<int> throttledTime = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("periods"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    periods = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("throttledPeriods"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    throttledPeriods = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("throttledTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    throttledTime = property.Value.GetInt32();
                    continue;
                }
            }
            return new ContainerThrottlingInfo(Optional.ToNullable(periods), Optional.ToNullable(throttledPeriods), Optional.ToNullable(throttledTime));
        }
    }
}
