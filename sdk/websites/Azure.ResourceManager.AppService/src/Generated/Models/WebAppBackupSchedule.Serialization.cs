// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;
using Azure.Core.Serialization;

namespace Azure.ResourceManager.AppService.Models
{
    public partial class WebAppBackupSchedule : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer) => ((IUtf8JsonSerializable)this).Write(writer, new SerializableOptions());

        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer, SerializableOptions options)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("frequencyInterval"u8);
            writer.WriteNumberValue(FrequencyInterval);
            writer.WritePropertyName("frequencyUnit"u8);
            writer.WriteStringValue(FrequencyUnit.ToSerialString());
            writer.WritePropertyName("keepAtLeastOneBackup"u8);
            writer.WriteBooleanValue(ShouldKeepAtLeastOneBackup);
            writer.WritePropertyName("retentionPeriodInDays"u8);
            writer.WriteNumberValue(RetentionPeriodInDays);
            if (Optional.IsDefined(StartOn))
            {
                writer.WritePropertyName("startTime"u8);
                writer.WriteStringValue(StartOn.Value, "O");
            }
            writer.WriteEndObject();
        }

        internal static WebAppBackupSchedule DeserializeWebAppBackupSchedule(JsonElement element, SerializableOptions options = default)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            int frequencyInterval = default;
            BackupFrequencyUnit frequencyUnit = default;
            bool keepAtLeastOneBackup = default;
            int retentionPeriodInDays = default;
            Optional<DateTimeOffset> startTime = default;
            Optional<DateTimeOffset> lastExecutionTime = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("frequencyInterval"u8))
                {
                    frequencyInterval = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("frequencyUnit"u8))
                {
                    frequencyUnit = property.Value.GetString().ToBackupFrequencyUnit();
                    continue;
                }
                if (property.NameEquals("keepAtLeastOneBackup"u8))
                {
                    keepAtLeastOneBackup = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("retentionPeriodInDays"u8))
                {
                    retentionPeriodInDays = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("startTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    startTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("lastExecutionTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    lastExecutionTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
            }
            return new WebAppBackupSchedule(frequencyInterval, frequencyUnit, keepAtLeastOneBackup, retentionPeriodInDays, Optional.ToNullable(startTime), Optional.ToNullable(lastExecutionTime));
        }
    }
}
