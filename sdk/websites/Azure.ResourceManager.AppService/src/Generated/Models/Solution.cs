// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.AppService.Models
{
    /// <summary>
    /// Class Representing Solution for problems detected.
    /// Serialized Name: Solution
    /// </summary>
    public partial class Solution
    {
        /// <summary> Initializes a new instance of Solution. </summary>
        public Solution()
        {
            Data = new ChangeTrackingList<IList<NameValuePair>>();
            Metadata = new ChangeTrackingList<IList<NameValuePair>>();
        }

        /// <summary> Initializes a new instance of Solution. </summary>
        /// <param name="id">
        /// Solution Id.
        /// Serialized Name: Solution.id
        /// </param>
        /// <param name="displayName">
        /// Display Name of the solution
        /// Serialized Name: Solution.displayName
        /// </param>
        /// <param name="order">
        /// Order of the solution.
        /// Serialized Name: Solution.order
        /// </param>
        /// <param name="description">
        /// Description of the solution
        /// Serialized Name: Solution.description
        /// </param>
        /// <param name="solutionType">
        /// Type of Solution
        /// Serialized Name: Solution.type
        /// </param>
        /// <param name="data">
        /// Solution Data.
        /// Serialized Name: Solution.data
        /// </param>
        /// <param name="metadata">
        /// Solution Metadata.
        /// Serialized Name: Solution.metadata
        /// </param>
        internal Solution(double? id, string displayName, double? order, string description, SolutionType? solutionType, IList<IList<NameValuePair>> data, IList<IList<NameValuePair>> metadata)
        {
            Id = id;
            DisplayName = displayName;
            Order = order;
            Description = description;
            SolutionType = solutionType;
            Data = data;
            Metadata = metadata;
        }

        /// <summary>
        /// Solution Id.
        /// Serialized Name: Solution.id
        /// </summary>
        public double? Id { get; set; }
        /// <summary>
        /// Display Name of the solution
        /// Serialized Name: Solution.displayName
        /// </summary>
        public string DisplayName { get; set; }
        /// <summary>
        /// Order of the solution.
        /// Serialized Name: Solution.order
        /// </summary>
        public double? Order { get; set; }
        /// <summary>
        /// Description of the solution
        /// Serialized Name: Solution.description
        /// </summary>
        public string Description { get; set; }
        /// <summary>
        /// Type of Solution
        /// Serialized Name: Solution.type
        /// </summary>
        public SolutionType? SolutionType { get; set; }
        /// <summary>
        /// Solution Data.
        /// Serialized Name: Solution.data
        /// </summary>
        public IList<IList<NameValuePair>> Data { get; }
        /// <summary>
        /// Solution Metadata.
        /// Serialized Name: Solution.metadata
        /// </summary>
        public IList<IList<NameValuePair>> Metadata { get; }
    }
}
