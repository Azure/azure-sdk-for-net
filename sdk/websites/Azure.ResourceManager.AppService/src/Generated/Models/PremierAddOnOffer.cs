// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.AppService.Models
{
    /// <summary> Premier add-on offer. </summary>
    public partial class PremierAddOnOffer : ResourceData
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="PremierAddOnOffer"/>. </summary>
        public PremierAddOnOffer()
        {
        }

        /// <summary> Initializes a new instance of <see cref="PremierAddOnOffer"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="sku"> Premier add on SKU. </param>
        /// <param name="product"> Premier add on offer Product. </param>
        /// <param name="vendor"> Premier add on offer Vendor. </param>
        /// <param name="isPromoCodeRequired"> &lt;code&gt;true&lt;/code&gt; if promotion code is required; otherwise, &lt;code&gt;false&lt;/code&gt;. </param>
        /// <param name="quota"> Premier add on offer Quota. </param>
        /// <param name="webHostingPlanRestrictions"> App Service plans this offer is restricted to. </param>
        /// <param name="privacyPolicyUri"> Privacy policy URL. </param>
        /// <param name="legalTermsUri"> Legal terms URL. </param>
        /// <param name="marketplacePublisher"> Marketplace publisher. </param>
        /// <param name="marketplaceOffer"> Marketplace offer. </param>
        /// <param name="kind"> Kind of resource. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal PremierAddOnOffer(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string sku, string product, string vendor, bool? isPromoCodeRequired, int? quota, AppServicePlanRestriction? webHostingPlanRestrictions, Uri privacyPolicyUri, Uri legalTermsUri, string marketplacePublisher, string marketplaceOffer, string kind, IDictionary<string, BinaryData> serializedAdditionalRawData) : base(id, name, resourceType, systemData)
        {
            Sku = sku;
            Product = product;
            Vendor = vendor;
            IsPromoCodeRequired = isPromoCodeRequired;
            Quota = quota;
            WebHostingPlanRestrictions = webHostingPlanRestrictions;
            PrivacyPolicyUri = privacyPolicyUri;
            LegalTermsUri = legalTermsUri;
            MarketplacePublisher = marketplacePublisher;
            MarketplaceOffer = marketplaceOffer;
            Kind = kind;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Premier add on SKU. </summary>
        [WirePath("properties.sku")]
        public string Sku { get; set; }
        /// <summary> Premier add on offer Product. </summary>
        [WirePath("properties.product")]
        public string Product { get; set; }
        /// <summary> Premier add on offer Vendor. </summary>
        [WirePath("properties.vendor")]
        public string Vendor { get; set; }
        /// <summary> &lt;code&gt;true&lt;/code&gt; if promotion code is required; otherwise, &lt;code&gt;false&lt;/code&gt;. </summary>
        [WirePath("properties.promoCodeRequired")]
        public bool? IsPromoCodeRequired { get; set; }
        /// <summary> Premier add on offer Quota. </summary>
        [WirePath("properties.quota")]
        public int? Quota { get; set; }
        /// <summary> App Service plans this offer is restricted to. </summary>
        [WirePath("properties.webHostingPlanRestrictions")]
        public AppServicePlanRestriction? WebHostingPlanRestrictions { get; set; }
        /// <summary> Privacy policy URL. </summary>
        [WirePath("properties.privacyPolicyUrl")]
        public Uri PrivacyPolicyUri { get; set; }
        /// <summary> Legal terms URL. </summary>
        [WirePath("properties.legalTermsUrl")]
        public Uri LegalTermsUri { get; set; }
        /// <summary> Marketplace publisher. </summary>
        [WirePath("properties.marketplacePublisher")]
        public string MarketplacePublisher { get; set; }
        /// <summary> Marketplace offer. </summary>
        [WirePath("properties.marketplaceOffer")]
        public string MarketplaceOffer { get; set; }
        /// <summary> Kind of resource. </summary>
        [WirePath("kind")]
        public string Kind { get; set; }
    }
}
