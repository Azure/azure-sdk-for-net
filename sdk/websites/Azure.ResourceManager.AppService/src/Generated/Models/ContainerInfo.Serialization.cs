// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppService.Models
{
    public partial class ContainerInfo : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(CurrentTimeStamp))
            {
                writer.WritePropertyName("currentTimeStamp"u8);
                writer.WriteStringValue(CurrentTimeStamp.Value, "O");
            }
            if (Optional.IsDefined(PreviousTimeStamp))
            {
                writer.WritePropertyName("previousTimeStamp"u8);
                writer.WriteStringValue(PreviousTimeStamp.Value, "O");
            }
            if (Optional.IsDefined(CurrentCpuStats))
            {
                writer.WritePropertyName("currentCpuStats"u8);
                writer.WriteObjectValue(CurrentCpuStats);
            }
            if (Optional.IsDefined(PreviousCpuStats))
            {
                writer.WritePropertyName("previousCpuStats"u8);
                writer.WriteObjectValue(PreviousCpuStats);
            }
            if (Optional.IsDefined(MemoryStats))
            {
                writer.WritePropertyName("memoryStats"u8);
                writer.WriteObjectValue(MemoryStats);
            }
            if (Optional.IsDefined(Name))
            {
                writer.WritePropertyName("name"u8);
                writer.WriteStringValue(Name);
            }
            if (Optional.IsDefined(Id))
            {
                writer.WritePropertyName("id"u8);
                writer.WriteStringValue(Id);
            }
            if (Optional.IsDefined(Eth0))
            {
                writer.WritePropertyName("eth0"u8);
                writer.WriteObjectValue(Eth0);
            }
            writer.WriteEndObject();
        }

        internal static ContainerInfo DeserializeContainerInfo(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<DateTimeOffset> currentTimeStamp = default;
            Optional<DateTimeOffset> previousTimeStamp = default;
            Optional<ContainerCpuStatistics> currentCpuStats = default;
            Optional<ContainerCpuStatistics> previousCpuStats = default;
            Optional<ContainerMemoryStatistics> memoryStats = default;
            Optional<string> name = default;
            Optional<string> id = default;
            Optional<ContainerNetworkInterfaceStatistics> eth0 = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("currentTimeStamp"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    currentTimeStamp = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("previousTimeStamp"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    previousTimeStamp = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("currentCpuStats"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    currentCpuStats = ContainerCpuStatistics.DeserializeContainerCpuStatistics(property.Value);
                    continue;
                }
                if (property.NameEquals("previousCpuStats"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    previousCpuStats = ContainerCpuStatistics.DeserializeContainerCpuStatistics(property.Value);
                    continue;
                }
                if (property.NameEquals("memoryStats"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    memoryStats = ContainerMemoryStatistics.DeserializeContainerMemoryStatistics(property.Value);
                    continue;
                }
                if (property.NameEquals("name"u8))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("id"u8))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("eth0"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    eth0 = ContainerNetworkInterfaceStatistics.DeserializeContainerNetworkInterfaceStatistics(property.Value);
                    continue;
                }
            }
            return new ContainerInfo(Optional.ToNullable(currentTimeStamp), Optional.ToNullable(previousTimeStamp), currentCpuStats.Value, previousCpuStats.Value, memoryStats.Value, name.Value, id.Value, eth0.Value);
        }
    }
}
