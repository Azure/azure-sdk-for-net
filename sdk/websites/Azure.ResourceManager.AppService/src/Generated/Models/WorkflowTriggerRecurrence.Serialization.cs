// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppService.Models
{
    public partial class WorkflowTriggerRecurrence
    {
        internal static WorkflowTriggerRecurrence DeserializeWorkflowTriggerRecurrence(JsonElement element)
        {
            Optional<RecurrenceFrequency> frequency = default;
            Optional<int> interval = default;
            Optional<string> startTime = default;
            Optional<string> endTime = default;
            Optional<string> timeZone = default;
            Optional<RecurrenceSchedule> schedule = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("frequency"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    frequency = new RecurrenceFrequency(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("interval"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    interval = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("startTime"))
                {
                    startTime = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("endTime"))
                {
                    endTime = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("timeZone"))
                {
                    timeZone = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("schedule"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    schedule = RecurrenceSchedule.DeserializeRecurrenceSchedule(property.Value);
                    continue;
                }
            }
            return new WorkflowTriggerRecurrence(Optional.ToNullable(frequency), Optional.ToNullable(interval), startTime.Value, endTime.Value, timeZone.Value, schedule.Value);
        }
    }
}
