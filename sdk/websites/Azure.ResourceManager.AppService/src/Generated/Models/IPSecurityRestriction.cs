// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.AppService.Models
{
    /// <summary>
    /// IP security restriction on an app.
    /// Serialized Name: IpSecurityRestriction
    /// </summary>
    public partial class IPSecurityRestriction
    {
        /// <summary> Initializes a new instance of IPSecurityRestriction. </summary>
        public IPSecurityRestriction()
        {
            Headers = new ChangeTrackingDictionary<string, IList<string>>();
        }

        /// <summary> Initializes a new instance of IPSecurityRestriction. </summary>
        /// <param name="ipAddress">
        /// IP address the security restriction is valid for.
        /// It can be in form of pure ipv4 address (required SubnetMask property) or
        /// CIDR notation such as ipv4/mask (leading bit match). For CIDR,
        /// SubnetMask property must not be specified.
        /// Serialized Name: IpSecurityRestriction.ipAddress
        /// </param>
        /// <param name="subnetMask">
        /// Subnet mask for the range of IP addresses the restriction is valid for.
        /// Serialized Name: IpSecurityRestriction.subnetMask
        /// </param>
        /// <param name="vnetSubnetResourceId">
        /// Virtual network resource id
        /// Serialized Name: IpSecurityRestriction.vnetSubnetResourceId
        /// </param>
        /// <param name="vnetTrafficTag">
        /// (internal) Vnet traffic tag
        /// Serialized Name: IpSecurityRestriction.vnetTrafficTag
        /// </param>
        /// <param name="subnetTrafficTag">
        /// (internal) Subnet traffic tag
        /// Serialized Name: IpSecurityRestriction.subnetTrafficTag
        /// </param>
        /// <param name="action">
        /// Allow or Deny access for this IP range.
        /// Serialized Name: IpSecurityRestriction.action
        /// </param>
        /// <param name="tag">
        /// Defines what this IP filter will be used for. This is to support IP filtering on proxies.
        /// Serialized Name: IpSecurityRestriction.tag
        /// </param>
        /// <param name="priority">
        /// Priority of IP restriction rule.
        /// Serialized Name: IpSecurityRestriction.priority
        /// </param>
        /// <param name="name">
        /// IP restriction rule name.
        /// Serialized Name: IpSecurityRestriction.name
        /// </param>
        /// <param name="description">
        /// IP restriction rule description.
        /// Serialized Name: IpSecurityRestriction.description
        /// </param>
        /// <param name="headers">
        /// IP restriction rule headers.
        /// X-Forwarded-Host (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-Host#Examples). 
        /// The matching logic is ..
        /// - If the property is null or empty (default), all hosts(or lack of) are allowed.
        /// - A value is compared using ordinal-ignore-case (excluding port number).
        /// - Subdomain wildcards are permitted but don&apos;t match the root domain. For example, *.contoso.com matches the subdomain foo.contoso.com
        ///  but not the root domain contoso.com or multi-level foo.bar.contoso.com
        /// - Unicode host names are allowed but are converted to Punycode for matching.
        /// 
        /// X-Forwarded-For (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For#Examples).
        /// The matching logic is ..
        /// - If the property is null or empty (default), any forwarded-for chains (or lack of) are allowed.
        /// - If any address (excluding port number) in the chain (comma separated) matches the CIDR defined by the property.
        /// 
        /// X-Azure-FDID and X-FD-HealthProbe.
        /// The matching logic is exact match.
        /// Serialized Name: IpSecurityRestriction.headers
        /// </param>
        internal IPSecurityRestriction(string ipAddress, string subnetMask, string vnetSubnetResourceId, int? vnetTrafficTag, int? subnetTrafficTag, string action, IPFilterTag? tag, int? priority, string name, string description, IDictionary<string, IList<string>> headers)
        {
            IPAddress = ipAddress;
            SubnetMask = subnetMask;
            VnetSubnetResourceId = vnetSubnetResourceId;
            VnetTrafficTag = vnetTrafficTag;
            SubnetTrafficTag = subnetTrafficTag;
            Action = action;
            Tag = tag;
            Priority = priority;
            Name = name;
            Description = description;
            Headers = headers;
        }

        /// <summary>
        /// IP address the security restriction is valid for.
        /// It can be in form of pure ipv4 address (required SubnetMask property) or
        /// CIDR notation such as ipv4/mask (leading bit match). For CIDR,
        /// SubnetMask property must not be specified.
        /// Serialized Name: IpSecurityRestriction.ipAddress
        /// </summary>
        public string IPAddress { get; set; }
        /// <summary>
        /// Subnet mask for the range of IP addresses the restriction is valid for.
        /// Serialized Name: IpSecurityRestriction.subnetMask
        /// </summary>
        public string SubnetMask { get; set; }
        /// <summary>
        /// Virtual network resource id
        /// Serialized Name: IpSecurityRestriction.vnetSubnetResourceId
        /// </summary>
        public string VnetSubnetResourceId { get; set; }
        /// <summary>
        /// (internal) Vnet traffic tag
        /// Serialized Name: IpSecurityRestriction.vnetTrafficTag
        /// </summary>
        public int? VnetTrafficTag { get; set; }
        /// <summary>
        /// (internal) Subnet traffic tag
        /// Serialized Name: IpSecurityRestriction.subnetTrafficTag
        /// </summary>
        public int? SubnetTrafficTag { get; set; }
        /// <summary>
        /// Allow or Deny access for this IP range.
        /// Serialized Name: IpSecurityRestriction.action
        /// </summary>
        public string Action { get; set; }
        /// <summary>
        /// Defines what this IP filter will be used for. This is to support IP filtering on proxies.
        /// Serialized Name: IpSecurityRestriction.tag
        /// </summary>
        public IPFilterTag? Tag { get; set; }
        /// <summary>
        /// Priority of IP restriction rule.
        /// Serialized Name: IpSecurityRestriction.priority
        /// </summary>
        public int? Priority { get; set; }
        /// <summary>
        /// IP restriction rule name.
        /// Serialized Name: IpSecurityRestriction.name
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// IP restriction rule description.
        /// Serialized Name: IpSecurityRestriction.description
        /// </summary>
        public string Description { get; set; }
        /// <summary>
        /// IP restriction rule headers.
        /// X-Forwarded-Host (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-Host#Examples). 
        /// The matching logic is ..
        /// - If the property is null or empty (default), all hosts(or lack of) are allowed.
        /// - A value is compared using ordinal-ignore-case (excluding port number).
        /// - Subdomain wildcards are permitted but don&apos;t match the root domain. For example, *.contoso.com matches the subdomain foo.contoso.com
        ///  but not the root domain contoso.com or multi-level foo.bar.contoso.com
        /// - Unicode host names are allowed but are converted to Punycode for matching.
        /// 
        /// X-Forwarded-For (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For#Examples).
        /// The matching logic is ..
        /// - If the property is null or empty (default), any forwarded-for chains (or lack of) are allowed.
        /// - If any address (excluding port number) in the chain (comma separated) matches the CIDR defined by the property.
        /// 
        /// X-Azure-FDID and X-FD-HealthProbe.
        /// The matching logic is exact match.
        /// Serialized Name: IpSecurityRestriction.headers
        /// </summary>
        public IDictionary<string, IList<string>> Headers { get; }
    }
}
