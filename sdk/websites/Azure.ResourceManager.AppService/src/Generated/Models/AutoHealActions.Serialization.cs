// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppService.Models
{
    public partial class AutoHealActions : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(ActionType))
            {
                writer.WritePropertyName("actionType");
                writer.WriteStringValue(ActionType.Value.ToSerialString());
            }
            if (Optional.IsDefined(CustomAction))
            {
                writer.WritePropertyName("customAction");
                writer.WriteObjectValue(CustomAction);
            }
            if (Optional.IsDefined(MinProcessExecutionTime))
            {
                writer.WritePropertyName("minProcessExecutionTime");
                writer.WriteStringValue(MinProcessExecutionTime);
            }
            writer.WriteEndObject();
        }

        internal static AutoHealActions DeserializeAutoHealActions(JsonElement element)
        {
            Optional<AutoHealActionType> actionType = default;
            Optional<AutoHealCustomAction> customAction = default;
            Optional<string> minProcessExecutionTime = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("actionType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    actionType = property.Value.GetString().ToAutoHealActionType();
                    continue;
                }
                if (property.NameEquals("customAction"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    customAction = AutoHealCustomAction.DeserializeAutoHealCustomAction(property.Value);
                    continue;
                }
                if (property.NameEquals("minProcessExecutionTime"))
                {
                    minProcessExecutionTime = property.Value.GetString();
                    continue;
                }
            }
            return new AutoHealActions(Optional.ToNullable(actionType), customAction.Value, minProcessExecutionTime.Value);
        }
    }
}
