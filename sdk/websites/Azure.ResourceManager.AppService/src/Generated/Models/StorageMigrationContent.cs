// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.AppService.Models
{
    /// <summary>
    /// Options for app content migration.
    /// Serialized Name: StorageMigrationOptions
    /// </summary>
    public partial class StorageMigrationContent : ResourceData
    {
        /// <summary> Initializes a new instance of StorageMigrationContent. </summary>
        public StorageMigrationContent()
        {
        }

        /// <summary> Initializes a new instance of StorageMigrationContent. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="azurefilesConnectionString">
        /// AzureFiles connection string.
        /// Serialized Name: StorageMigrationOptions.properties.azurefilesConnectionString
        /// </param>
        /// <param name="azurefilesShare">
        /// AzureFiles share.
        /// Serialized Name: StorageMigrationOptions.properties.azurefilesShare
        /// </param>
        /// <param name="switchSiteAfterMigration">
        /// &lt;code&gt;true&lt;/code&gt;if the app should be switched over; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// Serialized Name: StorageMigrationOptions.properties.switchSiteAfterMigration
        /// </param>
        /// <param name="isBlockWriteAccessToSite">
        /// &lt;code&gt;true&lt;/code&gt; if the app should be read only during copy operation; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// Serialized Name: StorageMigrationOptions.properties.blockWriteAccessToSite
        /// </param>
        /// <param name="kind">
        /// Kind of resource.
        /// Serialized Name: ProxyOnlyResource.kind
        /// </param>
        internal StorageMigrationContent(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string azurefilesConnectionString, string azurefilesShare, bool? switchSiteAfterMigration, bool? isBlockWriteAccessToSite, string kind) : base(id, name, resourceType, systemData)
        {
            AzurefilesConnectionString = azurefilesConnectionString;
            AzurefilesShare = azurefilesShare;
            SwitchSiteAfterMigration = switchSiteAfterMigration;
            IsBlockWriteAccessToSite = isBlockWriteAccessToSite;
            Kind = kind;
        }

        /// <summary>
        /// AzureFiles connection string.
        /// Serialized Name: StorageMigrationOptions.properties.azurefilesConnectionString
        /// </summary>
        public string AzurefilesConnectionString { get; set; }
        /// <summary>
        /// AzureFiles share.
        /// Serialized Name: StorageMigrationOptions.properties.azurefilesShare
        /// </summary>
        public string AzurefilesShare { get; set; }
        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt;if the app should be switched over; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// Serialized Name: StorageMigrationOptions.properties.switchSiteAfterMigration
        /// </summary>
        public bool? SwitchSiteAfterMigration { get; set; }
        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; if the app should be read only during copy operation; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// Serialized Name: StorageMigrationOptions.properties.blockWriteAccessToSite
        /// </summary>
        public bool? IsBlockWriteAccessToSite { get; set; }
        /// <summary>
        /// Kind of resource.
        /// Serialized Name: ProxyOnlyResource.kind
        /// </summary>
        public string Kind { get; set; }
    }
}
