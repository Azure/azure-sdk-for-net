// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppService.Models
{
    public partial class QueryUtterancesResults : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Query))
            {
                writer.WritePropertyName("query");
                writer.WriteStringValue(Query);
            }
            if (Optional.IsCollectionDefined(Results))
            {
                writer.WritePropertyName("results");
                writer.WriteStartArray();
                foreach (var item in Results)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static QueryUtterancesResults DeserializeQueryUtterancesResults(JsonElement element)
        {
            Optional<string> query = default;
            Optional<IList<QueryUtterancesResult>> results = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("query"))
                {
                    query = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("results"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<QueryUtterancesResult> array = new List<QueryUtterancesResult>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(QueryUtterancesResult.DeserializeQueryUtterancesResult(item));
                    }
                    results = array;
                    continue;
                }
            }
            return new QueryUtterancesResults(query.Value, Optional.ToList(results));
        }
    }
}
