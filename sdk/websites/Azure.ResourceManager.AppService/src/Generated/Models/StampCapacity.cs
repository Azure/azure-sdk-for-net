// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.AppService.Models
{
    /// <summary> Stamp capacity information. </summary>
    public partial class StampCapacity
    {
        /// <summary> Initializes a new instance of <see cref="StampCapacity"/>. </summary>
        internal StampCapacity()
        {
        }

        /// <summary> Initializes a new instance of <see cref="StampCapacity"/>. </summary>
        /// <param name="name"> Name of the stamp. </param>
        /// <param name="availableCapacity"> Available capacity (# of machines, bytes of storage etc...). </param>
        /// <param name="totalCapacity"> Total capacity (# of machines, bytes of storage etc...). </param>
        /// <param name="unit"> Name of the unit. </param>
        /// <param name="computeMode"> Shared/dedicated workers. </param>
        /// <param name="workerSize"> Size of the machines. </param>
        /// <param name="workerSizeId">
        /// Size ID of machines:
        /// 0 - Small
        /// 1 - Medium
        /// 2 - Large
        /// </param>
        /// <param name="excludeFromCapacityAllocation">
        /// If &lt;code&gt;true&lt;/code&gt;, it includes basic apps.
        /// Basic apps are not used for capacity allocation.
        /// </param>
        /// <param name="isApplicableForAllComputeModes"> &lt;code&gt;true&lt;/code&gt; if capacity is applicable for all apps; otherwise, &lt;code&gt;false&lt;/code&gt;. </param>
        /// <param name="siteMode"> Shared or Dedicated. </param>
        /// <param name="isLinux"> Is this a linux stamp capacity. </param>
        internal StampCapacity(string name, long? availableCapacity, long? totalCapacity, string unit, ComputeModeOption? computeMode, WorkerSizeOption? workerSize, int? workerSizeId, bool? excludeFromCapacityAllocation, bool? isApplicableForAllComputeModes, string siteMode, bool? isLinux)
        {
            Name = name;
            AvailableCapacity = availableCapacity;
            TotalCapacity = totalCapacity;
            Unit = unit;
            ComputeMode = computeMode;
            WorkerSize = workerSize;
            WorkerSizeId = workerSizeId;
            ExcludeFromCapacityAllocation = excludeFromCapacityAllocation;
            IsApplicableForAllComputeModes = isApplicableForAllComputeModes;
            SiteMode = siteMode;
            IsLinux = isLinux;
        }

        /// <summary> Name of the stamp. </summary>
        public string Name { get; }
        /// <summary> Available capacity (# of machines, bytes of storage etc...). </summary>
        public long? AvailableCapacity { get; }
        /// <summary> Total capacity (# of machines, bytes of storage etc...). </summary>
        public long? TotalCapacity { get; }
        /// <summary> Name of the unit. </summary>
        public string Unit { get; }
        /// <summary> Shared/dedicated workers. </summary>
        public ComputeModeOption? ComputeMode { get; }
        /// <summary> Size of the machines. </summary>
        public WorkerSizeOption? WorkerSize { get; }
        /// <summary>
        /// Size ID of machines:
        /// 0 - Small
        /// 1 - Medium
        /// 2 - Large
        /// </summary>
        public int? WorkerSizeId { get; }
        /// <summary>
        /// If &lt;code&gt;true&lt;/code&gt;, it includes basic apps.
        /// Basic apps are not used for capacity allocation.
        /// </summary>
        public bool? ExcludeFromCapacityAllocation { get; }
        /// <summary> &lt;code&gt;true&lt;/code&gt; if capacity is applicable for all apps; otherwise, &lt;code&gt;false&lt;/code&gt;. </summary>
        public bool? IsApplicableForAllComputeModes { get; }
        /// <summary> Shared or Dedicated. </summary>
        public string SiteMode { get; }
        /// <summary> Is this a linux stamp capacity. </summary>
        public bool? IsLinux { get; }
    }
}
