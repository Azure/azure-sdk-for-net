// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.AppService.Models
{
    /// <summary> Mounting protocol to use for the storage account. </summary>
    public readonly partial struct AzureStorageProtocol : IEquatable<AzureStorageProtocol>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="AzureStorageProtocol"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public AzureStorageProtocol(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string SmbValue = "Smb";
        private const string HttpValue = "Http";
        private const string NfsValue = "Nfs";

        /// <summary> Smb. </summary>
        public static AzureStorageProtocol Smb { get; } = new AzureStorageProtocol(SmbValue);
        /// <summary> Http. </summary>
        public static AzureStorageProtocol Http { get; } = new AzureStorageProtocol(HttpValue);
        /// <summary> Nfs. </summary>
        public static AzureStorageProtocol Nfs { get; } = new AzureStorageProtocol(NfsValue);
        /// <summary> Determines if two <see cref="AzureStorageProtocol"/> values are the same. </summary>
        public static bool operator ==(AzureStorageProtocol left, AzureStorageProtocol right) => left.Equals(right);
        /// <summary> Determines if two <see cref="AzureStorageProtocol"/> values are not the same. </summary>
        public static bool operator !=(AzureStorageProtocol left, AzureStorageProtocol right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="AzureStorageProtocol"/>. </summary>
        public static implicit operator AzureStorageProtocol(string value) => new AzureStorageProtocol(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is AzureStorageProtocol other && Equals(other);
        /// <inheritdoc />
        public bool Equals(AzureStorageProtocol other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
