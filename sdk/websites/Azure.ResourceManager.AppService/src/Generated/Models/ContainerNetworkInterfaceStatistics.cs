// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.AppService.Models
{
    /// <summary> The ContainerNetworkInterfaceStatistics. </summary>
    public partial class ContainerNetworkInterfaceStatistics
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ContainerNetworkInterfaceStatistics"/>. </summary>
        public ContainerNetworkInterfaceStatistics()
        {
        }

        /// <summary> Initializes a new instance of <see cref="ContainerNetworkInterfaceStatistics"/>. </summary>
        /// <param name="rxBytes"></param>
        /// <param name="rxPackets"></param>
        /// <param name="rxErrors"></param>
        /// <param name="rxDropped"></param>
        /// <param name="txBytes"></param>
        /// <param name="txPackets"></param>
        /// <param name="txErrors"></param>
        /// <param name="txDropped"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ContainerNetworkInterfaceStatistics(long? rxBytes, long? rxPackets, long? rxErrors, long? rxDropped, long? txBytes, long? txPackets, long? txErrors, long? txDropped, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            RxBytes = rxBytes;
            RxPackets = rxPackets;
            RxErrors = rxErrors;
            RxDropped = rxDropped;
            TxBytes = txBytes;
            TxPackets = txPackets;
            TxErrors = txErrors;
            TxDropped = txDropped;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Gets or sets the rx bytes. </summary>
        public long? RxBytes { get; set; }
        /// <summary> Gets or sets the rx packets. </summary>
        public long? RxPackets { get; set; }
        /// <summary> Gets or sets the rx errors. </summary>
        public long? RxErrors { get; set; }
        /// <summary> Gets or sets the rx dropped. </summary>
        public long? RxDropped { get; set; }
        /// <summary> Gets or sets the tx bytes. </summary>
        public long? TxBytes { get; set; }
        /// <summary> Gets or sets the tx packets. </summary>
        public long? TxPackets { get; set; }
        /// <summary> Gets or sets the tx errors. </summary>
        public long? TxErrors { get; set; }
        /// <summary> Gets or sets the tx dropped. </summary>
        public long? TxDropped { get; set; }
    }
}
