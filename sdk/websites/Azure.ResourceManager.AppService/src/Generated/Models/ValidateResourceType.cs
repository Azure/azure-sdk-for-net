// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.AppService.Models
{
    /// <summary> Resource type used for verification. </summary>
    public readonly partial struct ValidateResourceType : IEquatable<ValidateResourceType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="ValidateResourceType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ValidateResourceType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string ServerFarmValue = "ServerFarm";
        private const string WebSiteValue = "Site";
        private const string MicrosoftWebHostingEnvironmentsValue = "Microsoft.Web/hostingEnvironments";

        /// <summary> ServerFarm. </summary>
        public static ValidateResourceType ServerFarm { get; } = new ValidateResourceType(ServerFarmValue);
        /// <summary> Site. </summary>
        public static ValidateResourceType WebSite { get; } = new ValidateResourceType(WebSiteValue);
        /// <summary> Microsoft.Web/hostingEnvironments. </summary>
        public static ValidateResourceType MicrosoftWebHostingEnvironments { get; } = new ValidateResourceType(MicrosoftWebHostingEnvironmentsValue);
        /// <summary> Determines if two <see cref="ValidateResourceType"/> values are the same. </summary>
        public static bool operator ==(ValidateResourceType left, ValidateResourceType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ValidateResourceType"/> values are not the same. </summary>
        public static bool operator !=(ValidateResourceType left, ValidateResourceType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="ValidateResourceType"/>. </summary>
        public static implicit operator ValidateResourceType(string value) => new ValidateResourceType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ValidateResourceType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ValidateResourceType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
