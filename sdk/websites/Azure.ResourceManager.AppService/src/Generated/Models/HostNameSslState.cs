// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.AppService.Models
{
    /// <summary>
    /// SSL-enabled hostname.
    /// Serialized Name: HostNameSslState
    /// </summary>
    public partial class HostNameSslState
    {
        /// <summary> Initializes a new instance of HostNameSslState. </summary>
        public HostNameSslState()
        {
        }

        /// <summary> Initializes a new instance of HostNameSslState. </summary>
        /// <param name="name">
        /// Hostname.
        /// Serialized Name: HostNameSslState.name
        /// </param>
        /// <param name="sslState">
        /// SSL type.
        /// Serialized Name: HostNameSslState.sslState
        /// </param>
        /// <param name="virtualIP">
        /// Virtual IP address assigned to the hostname if IP based SSL is enabled.
        /// Serialized Name: HostNameSslState.virtualIP
        /// </param>
        /// <param name="thumbprint">
        /// SSL certificate thumbprint.
        /// Serialized Name: HostNameSslState.thumbprint
        /// </param>
        /// <param name="isToUpdate">
        /// Set to &lt;code&gt;true&lt;/code&gt; to update existing hostname.
        /// Serialized Name: HostNameSslState.toUpdate
        /// </param>
        /// <param name="hostType">
        /// Indicates whether the hostname is a standard or repository hostname.
        /// Serialized Name: HostNameSslState.hostType
        /// </param>
        internal HostNameSslState(string name, SslState? sslState, string virtualIP, string thumbprint, bool? isToUpdate, HostType? hostType)
        {
            Name = name;
            SslState = sslState;
            VirtualIP = virtualIP;
            Thumbprint = thumbprint;
            IsToUpdate = isToUpdate;
            HostType = hostType;
        }

        /// <summary>
        /// Hostname.
        /// Serialized Name: HostNameSslState.name
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// SSL type.
        /// Serialized Name: HostNameSslState.sslState
        /// </summary>
        public SslState? SslState { get; set; }
        /// <summary>
        /// Virtual IP address assigned to the hostname if IP based SSL is enabled.
        /// Serialized Name: HostNameSslState.virtualIP
        /// </summary>
        public string VirtualIP { get; set; }
        /// <summary>
        /// SSL certificate thumbprint.
        /// Serialized Name: HostNameSslState.thumbprint
        /// </summary>
        public string Thumbprint { get; set; }
        /// <summary>
        /// Set to &lt;code&gt;true&lt;/code&gt; to update existing hostname.
        /// Serialized Name: HostNameSslState.toUpdate
        /// </summary>
        public bool? IsToUpdate { get; set; }
        /// <summary>
        /// Indicates whether the hostname is a standard or repository hostname.
        /// Serialized Name: HostNameSslState.hostType
        /// </summary>
        public HostType? HostType { get; set; }
    }
}
