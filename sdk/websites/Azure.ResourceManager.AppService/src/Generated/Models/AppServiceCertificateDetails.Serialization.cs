// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppService.Models
{
    public partial class AppServiceCertificateDetails
    {
        internal static AppServiceCertificateDetails DeserializeAppServiceCertificateDetails(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<int> version = default;
            Core.Optional<string> serialNumber = default;
            Core.Optional<string> thumbprint = default;
            Core.Optional<string> subject = default;
            Core.Optional<DateTimeOffset> notBefore = default;
            Core.Optional<DateTimeOffset> notAfter = default;
            Core.Optional<string> signatureAlgorithm = default;
            Core.Optional<string> issuer = default;
            Core.Optional<string> rawData = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("version"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    version = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("serialNumber"u8))
                {
                    serialNumber = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("thumbprint"u8))
                {
                    thumbprint = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("subject"u8))
                {
                    subject = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("notBefore"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    notBefore = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("notAfter"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    notAfter = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("signatureAlgorithm"u8))
                {
                    signatureAlgorithm = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("issuer"u8))
                {
                    issuer = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("rawData"u8))
                {
                    rawData = property.Value.GetString();
                    continue;
                }
            }
            return new AppServiceCertificateDetails(Core.Optional.ToNullable(version), serialNumber.Value, thumbprint.Value, subject.Value, Core.Optional.ToNullable(notBefore), Core.Optional.ToNullable(notAfter), signatureAlgorithm.Value, issuer.Value, rawData.Value);
        }
    }
}
