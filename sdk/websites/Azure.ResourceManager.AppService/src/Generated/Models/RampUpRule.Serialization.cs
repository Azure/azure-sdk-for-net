// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppService.Models
{
    public partial class RampUpRule : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(ActionHostName))
            {
                writer.WritePropertyName("actionHostName"u8);
                writer.WriteStringValue(ActionHostName);
            }
            if (Core.Optional.IsDefined(ReroutePercentage))
            {
                writer.WritePropertyName("reroutePercentage"u8);
                writer.WriteNumberValue(ReroutePercentage.Value);
            }
            if (Core.Optional.IsDefined(ChangeStep))
            {
                writer.WritePropertyName("changeStep"u8);
                writer.WriteNumberValue(ChangeStep.Value);
            }
            if (Core.Optional.IsDefined(ChangeIntervalInMinutes))
            {
                writer.WritePropertyName("changeIntervalInMinutes"u8);
                writer.WriteNumberValue(ChangeIntervalInMinutes.Value);
            }
            if (Core.Optional.IsDefined(MinReroutePercentage))
            {
                writer.WritePropertyName("minReroutePercentage"u8);
                writer.WriteNumberValue(MinReroutePercentage.Value);
            }
            if (Core.Optional.IsDefined(MaxReroutePercentage))
            {
                writer.WritePropertyName("maxReroutePercentage"u8);
                writer.WriteNumberValue(MaxReroutePercentage.Value);
            }
            if (Core.Optional.IsDefined(ChangeDecisionCallbackUri))
            {
                writer.WritePropertyName("changeDecisionCallbackUrl"u8);
                writer.WriteStringValue(ChangeDecisionCallbackUri.AbsoluteUri);
            }
            if (Core.Optional.IsDefined(Name))
            {
                writer.WritePropertyName("name"u8);
                writer.WriteStringValue(Name);
            }
            writer.WriteEndObject();
        }

        internal static RampUpRule DeserializeRampUpRule(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<string> actionHostName = default;
            Core.Optional<double> reroutePercentage = default;
            Core.Optional<double> changeStep = default;
            Core.Optional<int> changeIntervalInMinutes = default;
            Core.Optional<double> minReroutePercentage = default;
            Core.Optional<double> maxReroutePercentage = default;
            Core.Optional<Uri> changeDecisionCallbackUrl = default;
            Core.Optional<string> name = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("actionHostName"u8))
                {
                    actionHostName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("reroutePercentage"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    reroutePercentage = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("changeStep"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    changeStep = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("changeIntervalInMinutes"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    changeIntervalInMinutes = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("minReroutePercentage"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    minReroutePercentage = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("maxReroutePercentage"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    maxReroutePercentage = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("changeDecisionCallbackUrl"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    changeDecisionCallbackUrl = new Uri(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("name"u8))
                {
                    name = property.Value.GetString();
                    continue;
                }
            }
            return new RampUpRule(actionHostName.Value, Core.Optional.ToNullable(reroutePercentage), Core.Optional.ToNullable(changeStep), Core.Optional.ToNullable(changeIntervalInMinutes), Core.Optional.ToNullable(minReroutePercentage), Core.Optional.ToNullable(maxReroutePercentage), changeDecisionCallbackUrl.Value, name.Value);
        }
    }
}
