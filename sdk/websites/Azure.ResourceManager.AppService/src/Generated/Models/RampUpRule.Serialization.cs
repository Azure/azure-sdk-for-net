// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppService.Models
{
    public partial class RampUpRule : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(ActionHostName))
            {
                writer.WritePropertyName("actionHostName");
                writer.WriteStringValue(ActionHostName);
            }
            if (Optional.IsDefined(ReroutePercentage))
            {
                writer.WritePropertyName("reroutePercentage");
                writer.WriteNumberValue(ReroutePercentage.Value);
            }
            if (Optional.IsDefined(ChangeStep))
            {
                writer.WritePropertyName("changeStep");
                writer.WriteNumberValue(ChangeStep.Value);
            }
            if (Optional.IsDefined(ChangeIntervalInMinutes))
            {
                writer.WritePropertyName("changeIntervalInMinutes");
                writer.WriteNumberValue(ChangeIntervalInMinutes.Value);
            }
            if (Optional.IsDefined(MinReroutePercentage))
            {
                writer.WritePropertyName("minReroutePercentage");
                writer.WriteNumberValue(MinReroutePercentage.Value);
            }
            if (Optional.IsDefined(MaxReroutePercentage))
            {
                writer.WritePropertyName("maxReroutePercentage");
                writer.WriteNumberValue(MaxReroutePercentage.Value);
            }
            if (Optional.IsDefined(ChangeDecisionCallbackUrl))
            {
                writer.WritePropertyName("changeDecisionCallbackUrl");
                writer.WriteStringValue(ChangeDecisionCallbackUrl);
            }
            if (Optional.IsDefined(Name))
            {
                writer.WritePropertyName("name");
                writer.WriteStringValue(Name);
            }
            writer.WriteEndObject();
        }

        internal static RampUpRule DeserializeRampUpRule(JsonElement element)
        {
            Optional<string> actionHostName = default;
            Optional<double> reroutePercentage = default;
            Optional<double> changeStep = default;
            Optional<int> changeIntervalInMinutes = default;
            Optional<double> minReroutePercentage = default;
            Optional<double> maxReroutePercentage = default;
            Optional<string> changeDecisionCallbackUrl = default;
            Optional<string> name = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("actionHostName"))
                {
                    actionHostName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("reroutePercentage"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    reroutePercentage = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("changeStep"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    changeStep = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("changeIntervalInMinutes"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    changeIntervalInMinutes = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("minReroutePercentage"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    minReroutePercentage = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("maxReroutePercentage"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    maxReroutePercentage = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("changeDecisionCallbackUrl"))
                {
                    changeDecisionCallbackUrl = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
            }
            return new RampUpRule(actionHostName.Value, Optional.ToNullable(reroutePercentage), Optional.ToNullable(changeStep), Optional.ToNullable(changeIntervalInMinutes), Optional.ToNullable(minReroutePercentage), Optional.ToNullable(maxReroutePercentage), changeDecisionCallbackUrl.Value, name.Value);
        }
    }
}
