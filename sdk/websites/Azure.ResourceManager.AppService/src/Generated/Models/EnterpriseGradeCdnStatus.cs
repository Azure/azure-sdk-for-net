// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.AppService.Models
{
    /// <summary> State indicating the status of the enterprise grade CDN serving traffic to the static web app. </summary>
    public readonly partial struct EnterpriseGradeCdnStatus : IEquatable<EnterpriseGradeCdnStatus>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="EnterpriseGradeCdnStatus"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public EnterpriseGradeCdnStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string EnabledValue = "Enabled";
        private const string EnablingValue = "Enabling";
        private const string DisabledValue = "Disabled";
        private const string DisablingValue = "Disabling";

        /// <summary> Enabled. </summary>
        public static EnterpriseGradeCdnStatus Enabled { get; } = new EnterpriseGradeCdnStatus(EnabledValue);
        /// <summary> Enabling. </summary>
        public static EnterpriseGradeCdnStatus Enabling { get; } = new EnterpriseGradeCdnStatus(EnablingValue);
        /// <summary> Disabled. </summary>
        public static EnterpriseGradeCdnStatus Disabled { get; } = new EnterpriseGradeCdnStatus(DisabledValue);
        /// <summary> Disabling. </summary>
        public static EnterpriseGradeCdnStatus Disabling { get; } = new EnterpriseGradeCdnStatus(DisablingValue);
        /// <summary> Determines if two <see cref="EnterpriseGradeCdnStatus"/> values are the same. </summary>
        public static bool operator ==(EnterpriseGradeCdnStatus left, EnterpriseGradeCdnStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="EnterpriseGradeCdnStatus"/> values are not the same. </summary>
        public static bool operator !=(EnterpriseGradeCdnStatus left, EnterpriseGradeCdnStatus right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="EnterpriseGradeCdnStatus"/>. </summary>
        public static implicit operator EnterpriseGradeCdnStatus(string value) => new EnterpriseGradeCdnStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is EnterpriseGradeCdnStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(EnterpriseGradeCdnStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
