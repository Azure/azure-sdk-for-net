// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;
using Azure.ResourceManager.AppService.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.AppService
{
    public partial class CsmDeploymentStatusData : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Kind))
            {
                writer.WritePropertyName("kind");
                writer.WriteStringValue(Kind);
            }
            writer.WritePropertyName("properties");
            writer.WriteStartObject();
            if (Optional.IsDefined(DeploymentId))
            {
                writer.WritePropertyName("deploymentId");
                writer.WriteStringValue(DeploymentId);
            }
            if (Optional.IsDefined(Status))
            {
                writer.WritePropertyName("status");
                writer.WriteStringValue(Status.Value.ToString());
            }
            if (Optional.IsDefined(NumberOfInstancesInProgress))
            {
                writer.WritePropertyName("numberOfInstancesInProgress");
                writer.WriteNumberValue(NumberOfInstancesInProgress.Value);
            }
            if (Optional.IsDefined(NumberOfInstancesSuccessful))
            {
                writer.WritePropertyName("numberOfInstancesSuccessful");
                writer.WriteNumberValue(NumberOfInstancesSuccessful.Value);
            }
            if (Optional.IsDefined(NumberOfInstancesFailed))
            {
                writer.WritePropertyName("numberOfInstancesFailed");
                writer.WriteNumberValue(NumberOfInstancesFailed.Value);
            }
            if (Optional.IsCollectionDefined(FailedInstancesLogs))
            {
                writer.WritePropertyName("failedInstancesLogs");
                writer.WriteStartArray();
                foreach (var item in FailedInstancesLogs)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(Errors))
            {
                writer.WritePropertyName("errors");
                writer.WriteStartArray();
                foreach (var item in Errors)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
        }

        internal static CsmDeploymentStatusData DeserializeCsmDeploymentStatusData(JsonElement element)
        {
            Optional<string> kind = default;
            ResourceIdentifier id = default;
            string name = default;
            ResourceType type = default;
            Optional<SystemData> systemData = default;
            Optional<string> deploymentId = default;
            Optional<DeploymentBuildStatus> status = default;
            Optional<int> numberOfInstancesInProgress = default;
            Optional<int> numberOfInstancesSuccessful = default;
            Optional<int> numberOfInstancesFailed = default;
            Optional<IList<string>> failedInstancesLogs = default;
            Optional<IList<ErrorEntity>> errors = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("kind"))
                {
                    kind = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("id"))
                {
                    id = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = new ResourceType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("systemData"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    systemData = JsonSerializer.Deserialize<SystemData>(property.Value.ToString());
                    continue;
                }
                if (property.NameEquals("properties"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("deploymentId"))
                        {
                            deploymentId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("status"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            status = new DeploymentBuildStatus(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("numberOfInstancesInProgress"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            numberOfInstancesInProgress = property0.Value.GetInt32();
                            continue;
                        }
                        if (property0.NameEquals("numberOfInstancesSuccessful"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            numberOfInstancesSuccessful = property0.Value.GetInt32();
                            continue;
                        }
                        if (property0.NameEquals("numberOfInstancesFailed"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            numberOfInstancesFailed = property0.Value.GetInt32();
                            continue;
                        }
                        if (property0.NameEquals("failedInstancesLogs"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            List<string> array = new List<string>();
                            foreach (var item in property0.Value.EnumerateArray())
                            {
                                array.Add(item.GetString());
                            }
                            failedInstancesLogs = array;
                            continue;
                        }
                        if (property0.NameEquals("errors"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            List<ErrorEntity> array = new List<ErrorEntity>();
                            foreach (var item in property0.Value.EnumerateArray())
                            {
                                array.Add(ErrorEntity.DeserializeErrorEntity(item));
                            }
                            errors = array;
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new CsmDeploymentStatusData(id, name, type, systemData.Value, deploymentId.Value, Optional.ToNullable(status), Optional.ToNullable(numberOfInstancesInProgress), Optional.ToNullable(numberOfInstancesSuccessful), Optional.ToNullable(numberOfInstancesFailed), Optional.ToList(failedInstancesLogs), Optional.ToList(errors), kind.Value);
        }
    }
}
