// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.AppService.Models
{
    /// <summary> Triggered Web Job Run Information. </summary>
    public partial class TriggeredJobRun
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="TriggeredJobRun"/>. </summary>
        public TriggeredJobRun()
        {
        }

        /// <summary> Initializes a new instance of <see cref="TriggeredJobRun"/>. </summary>
        /// <param name="webJobId"> Job ID. </param>
        /// <param name="webJobName"> Job name. </param>
        /// <param name="status"> Job status. </param>
        /// <param name="startOn"> Start time. </param>
        /// <param name="endOn"> End time. </param>
        /// <param name="duration"> Job duration. </param>
        /// <param name="outputUri"> Output URL. </param>
        /// <param name="errorUri"> Error URL. </param>
        /// <param name="uri"> Job URL. </param>
        /// <param name="jobName"> Job name. </param>
        /// <param name="trigger"> Job trigger. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal TriggeredJobRun(string webJobId, string webJobName, TriggeredWebJobStatus? status, DateTimeOffset? startOn, DateTimeOffset? endOn, TimeSpan? duration, Uri outputUri, Uri errorUri, Uri uri, string jobName, string trigger, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            WebJobId = webJobId;
            WebJobName = webJobName;
            Status = status;
            StartOn = startOn;
            EndOn = endOn;
            Duration = duration;
            OutputUri = outputUri;
            ErrorUri = errorUri;
            Uri = uri;
            JobName = jobName;
            Trigger = trigger;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Job ID. </summary>
        public string WebJobId { get; set; }
        /// <summary> Job name. </summary>
        public string WebJobName { get; set; }
        /// <summary> Job status. </summary>
        public TriggeredWebJobStatus? Status { get; set; }
        /// <summary> Start time. </summary>
        public DateTimeOffset? StartOn { get; set; }
        /// <summary> End time. </summary>
        public DateTimeOffset? EndOn { get; set; }
        /// <summary> Job duration. </summary>
        public TimeSpan? Duration { get; set; }
        /// <summary> Output URL. </summary>
        public Uri OutputUri { get; set; }
        /// <summary> Error URL. </summary>
        public Uri ErrorUri { get; set; }
        /// <summary> Job URL. </summary>
        public Uri Uri { get; set; }
        /// <summary> Job name. </summary>
        public string JobName { get; set; }
        /// <summary> Job trigger. </summary>
        public string Trigger { get; set; }
    }
}
