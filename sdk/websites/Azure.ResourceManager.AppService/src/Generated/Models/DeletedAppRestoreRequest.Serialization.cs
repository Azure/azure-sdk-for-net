// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.AppService.Models
{
    public partial class DeletedAppRestoreRequest : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Kind))
            {
                writer.WritePropertyName("kind");
                writer.WriteStringValue(Kind);
            }
            writer.WritePropertyName("properties");
            writer.WriteStartObject();
            if (Optional.IsDefined(DeletedSiteId))
            {
                writer.WritePropertyName("deletedSiteId");
                writer.WriteStringValue(DeletedSiteId);
            }
            if (Optional.IsDefined(RecoverConfiguration))
            {
                writer.WritePropertyName("recoverConfiguration");
                writer.WriteBooleanValue(RecoverConfiguration.Value);
            }
            if (Optional.IsDefined(SnapshotTime))
            {
                writer.WritePropertyName("snapshotTime");
                writer.WriteStringValue(SnapshotTime);
            }
            if (Optional.IsDefined(UseDRSecondary))
            {
                writer.WritePropertyName("useDRSecondary");
                writer.WriteBooleanValue(UseDRSecondary.Value);
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
        }

        internal static DeletedAppRestoreRequest DeserializeDeletedAppRestoreRequest(JsonElement element)
        {
            Optional<string> kind = default;
            ResourceIdentifier id = default;
            string name = default;
            ResourceType type = default;
            SystemData systemData = default;
            Optional<string> deletedSiteId = default;
            Optional<bool> recoverConfiguration = default;
            Optional<string> snapshotTime = default;
            Optional<bool> useDRSecondary = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("kind"))
                {
                    kind = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("id"))
                {
                    id = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("systemData"))
                {
                    systemData = JsonSerializer.Deserialize<SystemData>(property.Value.ToString());
                    continue;
                }
                if (property.NameEquals("properties"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("deletedSiteId"))
                        {
                            deletedSiteId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("recoverConfiguration"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            recoverConfiguration = property0.Value.GetBoolean();
                            continue;
                        }
                        if (property0.NameEquals("snapshotTime"))
                        {
                            snapshotTime = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("useDRSecondary"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            useDRSecondary = property0.Value.GetBoolean();
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new DeletedAppRestoreRequest(id, name, type, systemData, kind.Value, deletedSiteId.Value, Optional.ToNullable(recoverConfiguration), snapshotTime.Value, Optional.ToNullable(useDRSecondary));
        }
    }
}
