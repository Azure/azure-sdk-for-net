// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.AppService.Models
{
    /// <summary>
    /// The configuration settings of the HTTP requests for authentication and authorization requests made against App Service Authentication/Authorization.
    /// Serialized Name: HttpSettings
    /// </summary>
    public partial class HttpSettings
    {
        /// <summary> Initializes a new instance of HttpSettings. </summary>
        public HttpSettings()
        {
        }

        /// <summary> Initializes a new instance of HttpSettings. </summary>
        /// <param name="isHttpsRequired">
        /// &lt;code&gt;false&lt;/code&gt; if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise, &lt;code&gt;true&lt;/code&gt;.
        /// Serialized Name: HttpSettings.requireHttps
        /// </param>
        /// <param name="routes">
        /// The configuration settings of the paths HTTP requests.
        /// Serialized Name: HttpSettings.routes
        /// </param>
        /// <param name="forwardProxy">
        /// The configuration settings of a forward proxy used to make the requests.
        /// Serialized Name: HttpSettings.forwardProxy
        /// </param>
        internal HttpSettings(bool? isHttpsRequired, HttpSettingsRoutes routes, ForwardProxy forwardProxy)
        {
            IsHttpsRequired = isHttpsRequired;
            Routes = routes;
            ForwardProxy = forwardProxy;
        }

        /// <summary>
        /// &lt;code&gt;false&lt;/code&gt; if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise, &lt;code&gt;true&lt;/code&gt;.
        /// Serialized Name: HttpSettings.requireHttps
        /// </summary>
        public bool? IsHttpsRequired { get; set; }
        /// <summary>
        /// The configuration settings of the paths HTTP requests.
        /// Serialized Name: HttpSettings.routes
        /// </summary>
        internal HttpSettingsRoutes Routes { get; set; }
        /// <summary>
        /// The prefix that should precede all the authentication/authorization paths.
        /// Serialized Name: HttpSettingsRoutes.apiPrefix
        /// </summary>
        public string RoutesApiPrefix
        {
            get => Routes is null ? default : Routes.ApiPrefix;
            set
            {
                if (Routes is null)
                    Routes = new HttpSettingsRoutes();
                Routes.ApiPrefix = value;
            }
        }

        /// <summary>
        /// The configuration settings of a forward proxy used to make the requests.
        /// Serialized Name: HttpSettings.forwardProxy
        /// </summary>
        public ForwardProxy ForwardProxy { get; set; }
    }
}
