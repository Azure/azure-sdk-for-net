// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.AppService.Models
{
    internal static partial class WebAppBackupStatusExtensions
    {
        public static string ToSerialString(this WebAppBackupStatus value) => value switch
        {
            WebAppBackupStatus.InProgress => "InProgress",
            WebAppBackupStatus.Failed => "Failed",
            WebAppBackupStatus.Succeeded => "Succeeded",
            WebAppBackupStatus.TimedOut => "TimedOut",
            WebAppBackupStatus.Created => "Created",
            WebAppBackupStatus.Skipped => "Skipped",
            WebAppBackupStatus.PartiallySucceeded => "PartiallySucceeded",
            WebAppBackupStatus.DeleteInProgress => "DeleteInProgress",
            WebAppBackupStatus.DeleteFailed => "DeleteFailed",
            WebAppBackupStatus.Deleted => "Deleted",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown WebAppBackupStatus value.")
        };

        public static WebAppBackupStatus ToWebAppBackupStatus(this string value)
        {
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "InProgress")) return WebAppBackupStatus.InProgress;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Failed")) return WebAppBackupStatus.Failed;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Succeeded")) return WebAppBackupStatus.Succeeded;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "TimedOut")) return WebAppBackupStatus.TimedOut;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Created")) return WebAppBackupStatus.Created;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Skipped")) return WebAppBackupStatus.Skipped;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "PartiallySucceeded")) return WebAppBackupStatus.PartiallySucceeded;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "DeleteInProgress")) return WebAppBackupStatus.DeleteInProgress;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "DeleteFailed")) return WebAppBackupStatus.DeleteFailed;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Deleted")) return WebAppBackupStatus.Deleted;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown WebAppBackupStatus value.");
        }
    }
}
