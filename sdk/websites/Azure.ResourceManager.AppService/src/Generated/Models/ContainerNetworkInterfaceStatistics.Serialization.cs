// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppService.Models
{
    public partial class ContainerNetworkInterfaceStatistics : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(RxBytes))
            {
                writer.WritePropertyName("rxBytes");
                writer.WriteNumberValue(RxBytes.Value);
            }
            if (Optional.IsDefined(RxPackets))
            {
                writer.WritePropertyName("rxPackets");
                writer.WriteNumberValue(RxPackets.Value);
            }
            if (Optional.IsDefined(RxErrors))
            {
                writer.WritePropertyName("rxErrors");
                writer.WriteNumberValue(RxErrors.Value);
            }
            if (Optional.IsDefined(RxDropped))
            {
                writer.WritePropertyName("rxDropped");
                writer.WriteNumberValue(RxDropped.Value);
            }
            if (Optional.IsDefined(TxBytes))
            {
                writer.WritePropertyName("txBytes");
                writer.WriteNumberValue(TxBytes.Value);
            }
            if (Optional.IsDefined(TxPackets))
            {
                writer.WritePropertyName("txPackets");
                writer.WriteNumberValue(TxPackets.Value);
            }
            if (Optional.IsDefined(TxErrors))
            {
                writer.WritePropertyName("txErrors");
                writer.WriteNumberValue(TxErrors.Value);
            }
            if (Optional.IsDefined(TxDropped))
            {
                writer.WritePropertyName("txDropped");
                writer.WriteNumberValue(TxDropped.Value);
            }
            writer.WriteEndObject();
        }

        internal static ContainerNetworkInterfaceStatistics DeserializeContainerNetworkInterfaceStatistics(JsonElement element)
        {
            Optional<long> rxBytes = default;
            Optional<long> rxPackets = default;
            Optional<long> rxErrors = default;
            Optional<long> rxDropped = default;
            Optional<long> txBytes = default;
            Optional<long> txPackets = default;
            Optional<long> txErrors = default;
            Optional<long> txDropped = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("rxBytes"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    rxBytes = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("rxPackets"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    rxPackets = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("rxErrors"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    rxErrors = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("rxDropped"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    rxDropped = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("txBytes"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    txBytes = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("txPackets"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    txPackets = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("txErrors"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    txErrors = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("txDropped"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    txDropped = property.Value.GetInt64();
                    continue;
                }
            }
            return new ContainerNetworkInterfaceStatistics(Optional.ToNullable(rxBytes), Optional.ToNullable(rxPackets), Optional.ToNullable(rxErrors), Optional.ToNullable(rxDropped), Optional.ToNullable(txBytes), Optional.ToNullable(txPackets), Optional.ToNullable(txErrors), Optional.ToNullable(txDropped));
        }
    }
}
