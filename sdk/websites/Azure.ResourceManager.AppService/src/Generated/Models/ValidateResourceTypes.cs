// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.AppService.Models
{
    /// <summary> Resource type used for verification. </summary>
    public readonly partial struct ValidateResourceTypes : IEquatable<ValidateResourceTypes>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="ValidateResourceTypes"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ValidateResourceTypes(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string ServerFarmValue = "ServerFarm";
        private const string WebSiteValue = "Site";
        private const string MicrosoftWebHostingEnvironmentsValue = "Microsoft.Web/hostingEnvironments";

        /// <summary> ServerFarm. </summary>
        public static ValidateResourceTypes ServerFarm { get; } = new ValidateResourceTypes(ServerFarmValue);
        /// <summary> Site. </summary>
        public static ValidateResourceTypes WebSite { get; } = new ValidateResourceTypes(WebSiteValue);
        /// <summary> Microsoft.Web/hostingEnvironments. </summary>
        public static ValidateResourceTypes MicrosoftWebHostingEnvironments { get; } = new ValidateResourceTypes(MicrosoftWebHostingEnvironmentsValue);
        /// <summary> Determines if two <see cref="ValidateResourceTypes"/> values are the same. </summary>
        public static bool operator ==(ValidateResourceTypes left, ValidateResourceTypes right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ValidateResourceTypes"/> values are not the same. </summary>
        public static bool operator !=(ValidateResourceTypes left, ValidateResourceTypes right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="ValidateResourceTypes"/>. </summary>
        public static implicit operator ValidateResourceTypes(string value) => new ValidateResourceTypes(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ValidateResourceTypes other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ValidateResourceTypes other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
