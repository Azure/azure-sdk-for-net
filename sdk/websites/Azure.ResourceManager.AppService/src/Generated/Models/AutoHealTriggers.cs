// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.AppService.Models
{
    /// <summary> Triggers for auto-heal. </summary>
    public partial class AutoHealTriggers
    {
        /// <summary> Initializes a new instance of <see cref="AutoHealTriggers"/>. </summary>
        public AutoHealTriggers()
        {
            StatusCodes = new ChangeTrackingList<StatusCodesBasedTrigger>();
            SlowRequestsWithPath = new ChangeTrackingList<SlowRequestsBasedTrigger>();
            StatusCodesRange = new ChangeTrackingList<StatusCodesRangeBasedTrigger>();
        }

        /// <summary> Initializes a new instance of <see cref="AutoHealTriggers"/>. </summary>
        /// <param name="requests"> A rule based on total requests. </param>
        /// <param name="privateBytesInKB"> A rule based on private bytes. </param>
        /// <param name="statusCodes"> A rule based on status codes. </param>
        /// <param name="slowRequests"> A rule based on request execution time. </param>
        /// <param name="slowRequestsWithPath"> A rule based on multiple Slow Requests Rule with path. </param>
        /// <param name="statusCodesRange"> A rule based on status codes ranges. </param>
        internal AutoHealTriggers(RequestsBasedTrigger requests, int? privateBytesInKB, IList<StatusCodesBasedTrigger> statusCodes, SlowRequestsBasedTrigger slowRequests, IList<SlowRequestsBasedTrigger> slowRequestsWithPath, IList<StatusCodesRangeBasedTrigger> statusCodesRange)
        {
            Requests = requests;
            PrivateBytesInKB = privateBytesInKB;
            StatusCodes = statusCodes;
            SlowRequests = slowRequests;
            SlowRequestsWithPath = slowRequestsWithPath;
            StatusCodesRange = statusCodesRange;
        }

        /// <summary> A rule based on total requests. </summary>
        public RequestsBasedTrigger Requests { get; set; }
        /// <summary> A rule based on private bytes. </summary>
        public int? PrivateBytesInKB { get; set; }
        /// <summary> A rule based on status codes. </summary>
        public IList<StatusCodesBasedTrigger> StatusCodes { get; }
        /// <summary> A rule based on request execution time. </summary>
        public SlowRequestsBasedTrigger SlowRequests { get; set; }
        /// <summary> A rule based on multiple Slow Requests Rule with path. </summary>
        public IList<SlowRequestsBasedTrigger> SlowRequestsWithPath { get; }
        /// <summary> A rule based on status codes ranges. </summary>
        public IList<StatusCodesRangeBasedTrigger> StatusCodesRange { get; }
    }
}
