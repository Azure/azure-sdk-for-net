// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.AppService.Models
{
    /// <summary> Storage for deployed package used by the function app. </summary>
    public partial class FunctionsDeploymentStorage
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="FunctionsDeploymentStorage"/>. </summary>
        public FunctionsDeploymentStorage()
        {
        }

        /// <summary> Initializes a new instance of <see cref="FunctionsDeploymentStorage"/>. </summary>
        /// <param name="artifactStorageType"> Property to select Azure Storage type. Available options: blobContainer. </param>
        /// <param name="value"> Property to set the URL for the selected Azure Storage type. Example: For blobContainer, the value could be https://&lt;storageAccountName&gt;.blob.core.windows.net/&lt;containerName&gt;. </param>
        /// <param name="authentication"> Authentication method to access the storage account for deployment. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal FunctionsDeploymentStorage(ArtifactStorageType? artifactStorageType, Uri value, FunctionsDeploymentStorageAuthentication authentication, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            ArtifactStorageType = artifactStorageType;
            Value = value;
            Authentication = authentication;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Property to select Azure Storage type. Available options: blobContainer. </summary>
        [WirePath("type")]
        public ArtifactStorageType? ArtifactStorageType { get; set; }
        /// <summary> Property to set the URL for the selected Azure Storage type. Example: For blobContainer, the value could be https://&lt;storageAccountName&gt;.blob.core.windows.net/&lt;containerName&gt;. </summary>
        [WirePath("value")]
        public Uri Value { get; set; }
        /// <summary> Authentication method to access the storage account for deployment. </summary>
        [WirePath("authentication")]
        public FunctionsDeploymentStorageAuthentication Authentication { get; set; }
    }
}
