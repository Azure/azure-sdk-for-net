// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppService.Models
{
    public partial class CertificateDetails
    {
        internal static CertificateDetails DeserializeCertificateDetails(JsonElement element)
        {
            Optional<int> version = default;
            Optional<string> serialNumber = default;
            Optional<string> thumbprint = default;
            Optional<string> subject = default;
            Optional<DateTimeOffset> notBefore = default;
            Optional<DateTimeOffset> notAfter = default;
            Optional<string> signatureAlgorithm = default;
            Optional<string> issuer = default;
            Optional<string> rawData = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("version"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    version = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("serialNumber"))
                {
                    serialNumber = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("thumbprint"))
                {
                    thumbprint = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("subject"))
                {
                    subject = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("notBefore"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    notBefore = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("notAfter"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    notAfter = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("signatureAlgorithm"))
                {
                    signatureAlgorithm = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("issuer"))
                {
                    issuer = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("rawData"))
                {
                    rawData = property.Value.GetString();
                    continue;
                }
            }
            return new CertificateDetails(Optional.ToNullable(version), serialNumber.Value, thumbprint.Value, subject.Value, Optional.ToNullable(notBefore), Optional.ToNullable(notAfter), signatureAlgorithm.Value, issuer.Value, rawData.Value);
        }
    }
}
