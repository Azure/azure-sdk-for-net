// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppService.Models
{
    public partial class ContainerMemoryStatistics : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Usage))
            {
                writer.WritePropertyName("usage");
                writer.WriteNumberValue(Usage.Value);
            }
            if (Optional.IsDefined(MaxUsage))
            {
                writer.WritePropertyName("maxUsage");
                writer.WriteNumberValue(MaxUsage.Value);
            }
            if (Optional.IsDefined(Limit))
            {
                writer.WritePropertyName("limit");
                writer.WriteNumberValue(Limit.Value);
            }
            writer.WriteEndObject();
        }

        internal static ContainerMemoryStatistics DeserializeContainerMemoryStatistics(JsonElement element)
        {
            Optional<long> usage = default;
            Optional<long> maxUsage = default;
            Optional<long> limit = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("usage"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    usage = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("maxUsage"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    maxUsage = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("limit"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    limit = property.Value.GetInt64();
                    continue;
                }
            }
            return new ContainerMemoryStatistics(Optional.ToNullable(usage), Optional.ToNullable(maxUsage), Optional.ToNullable(limit));
        }
    }
}
