// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.AppService.Models
{
    /// <summary>
    /// Virtual application in an app.
    /// Serialized Name: VirtualApplication
    /// </summary>
    public partial class VirtualApplication
    {
        /// <summary> Initializes a new instance of VirtualApplication. </summary>
        public VirtualApplication()
        {
            VirtualDirectories = new ChangeTrackingList<VirtualDirectory>();
        }

        /// <summary> Initializes a new instance of VirtualApplication. </summary>
        /// <param name="virtualPath">
        /// Virtual path.
        /// Serialized Name: VirtualApplication.virtualPath
        /// </param>
        /// <param name="physicalPath">
        /// Physical path.
        /// Serialized Name: VirtualApplication.physicalPath
        /// </param>
        /// <param name="isPreloadEnabled">
        /// &lt;code&gt;true&lt;/code&gt; if preloading is enabled; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// Serialized Name: VirtualApplication.preloadEnabled
        /// </param>
        /// <param name="virtualDirectories">
        /// Virtual directories for virtual application.
        /// Serialized Name: VirtualApplication.virtualDirectories
        /// </param>
        internal VirtualApplication(string virtualPath, string physicalPath, bool? isPreloadEnabled, IList<VirtualDirectory> virtualDirectories)
        {
            VirtualPath = virtualPath;
            PhysicalPath = physicalPath;
            IsPreloadEnabled = isPreloadEnabled;
            VirtualDirectories = virtualDirectories;
        }

        /// <summary>
        /// Virtual path.
        /// Serialized Name: VirtualApplication.virtualPath
        /// </summary>
        public string VirtualPath { get; set; }
        /// <summary>
        /// Physical path.
        /// Serialized Name: VirtualApplication.physicalPath
        /// </summary>
        public string PhysicalPath { get; set; }
        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; if preloading is enabled; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// Serialized Name: VirtualApplication.preloadEnabled
        /// </summary>
        public bool? IsPreloadEnabled { get; set; }
        /// <summary>
        /// Virtual directories for virtual application.
        /// Serialized Name: VirtualApplication.virtualDirectories
        /// </summary>
        public IList<VirtualDirectory> VirtualDirectories { get; }
    }
}
