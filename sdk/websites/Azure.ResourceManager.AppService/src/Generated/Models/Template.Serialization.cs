// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppService.Models
{
    public partial class Template : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(RevisionSuffix))
            {
                writer.WritePropertyName("revisionSuffix");
                writer.WriteStringValue(RevisionSuffix);
            }
            if (Optional.IsCollectionDefined(Containers))
            {
                writer.WritePropertyName("containers");
                writer.WriteStartArray();
                foreach (var item in Containers)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(Scale))
            {
                writer.WritePropertyName("scale");
                writer.WriteObjectValue(Scale);
            }
            if (Optional.IsDefined(Dapr))
            {
                writer.WritePropertyName("dapr");
                writer.WriteObjectValue(Dapr);
            }
            writer.WriteEndObject();
        }

        internal static Template DeserializeTemplate(JsonElement element)
        {
            Optional<string> revisionSuffix = default;
            Optional<IList<Container>> containers = default;
            Optional<Scale> scale = default;
            Optional<Dapr> dapr = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("revisionSuffix"))
                {
                    revisionSuffix = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("containers"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<Container> array = new List<Container>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(Container.DeserializeContainer(item));
                    }
                    containers = array;
                    continue;
                }
                if (property.NameEquals("scale"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    scale = Scale.DeserializeScale(property.Value);
                    continue;
                }
                if (property.NameEquals("dapr"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    dapr = Dapr.DeserializeDapr(property.Value);
                    continue;
                }
            }
            return new Template(revisionSuffix.Value, Optional.ToList(containers), scale.Value, dapr.Value);
        }
    }
}
