// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppService.Models
{
    public partial class SiteLimits : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(MaxPercentageCpu))
            {
                writer.WritePropertyName("maxPercentageCpu");
                writer.WriteNumberValue(MaxPercentageCpu.Value);
            }
            if (Optional.IsDefined(MaxMemoryInMb))
            {
                writer.WritePropertyName("maxMemoryInMb");
                writer.WriteNumberValue(MaxMemoryInMb.Value);
            }
            if (Optional.IsDefined(MaxDiskSizeInMb))
            {
                writer.WritePropertyName("maxDiskSizeInMb");
                writer.WriteNumberValue(MaxDiskSizeInMb.Value);
            }
            writer.WriteEndObject();
        }

        internal static SiteLimits DeserializeSiteLimits(JsonElement element)
        {
            Optional<double> maxPercentageCpu = default;
            Optional<long> maxMemoryInMb = default;
            Optional<long> maxDiskSizeInMb = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("maxPercentageCpu"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    maxPercentageCpu = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("maxMemoryInMb"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    maxMemoryInMb = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("maxDiskSizeInMb"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    maxDiskSizeInMb = property.Value.GetInt64();
                    continue;
                }
            }
            return new SiteLimits(Optional.ToNullable(maxPercentageCpu), Optional.ToNullable(maxMemoryInMb), Optional.ToNullable(maxDiskSizeInMb));
        }
    }
}
