// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.AppService.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.AppService
{
    /// <summary> A class representing the AppServiceDetector data model. </summary>
    public partial class AppServiceDetectorData : ResourceData
    {
        /// <summary> Initializes a new instance of AppServiceDetectorData. </summary>
        public AppServiceDetectorData()
        {
            Dataset = new ChangeTrackingList<DiagnosticInfo>();
            DataProvidersMetadata = new ChangeTrackingList<DataProviderMetadata>();
        }

        /// <summary> Initializes a new instance of AppServiceDetectorData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="metadata">
        /// metadata for the detector
        /// Serialized Name: DetectorResponse.properties.metadata
        /// </param>
        /// <param name="dataset">
        /// Data Set
        /// Serialized Name: DetectorResponse.properties.dataset
        /// </param>
        /// <param name="status">
        /// Indicates status of the most severe insight.
        /// Serialized Name: DetectorResponse.properties.status
        /// </param>
        /// <param name="dataProvidersMetadata">
        /// Additional configuration for different data providers to be used by the UI
        /// Serialized Name: DetectorResponse.properties.dataProvidersMetadata
        /// </param>
        /// <param name="suggestedUtterances">
        /// Suggested utterances where the detector can be applicable.
        /// Serialized Name: DetectorResponse.properties.suggestedUtterances
        /// </param>
        /// <param name="kind">
        /// Kind of resource.
        /// Serialized Name: ProxyOnlyResource.kind
        /// </param>
        internal AppServiceDetectorData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, DetectorInfo metadata, IList<DiagnosticInfo> dataset, OperationStatusAutoGenerated status, IList<DataProviderMetadata> dataProvidersMetadata, QueryUtterancesResults suggestedUtterances, string kind) : base(id, name, resourceType, systemData)
        {
            Metadata = metadata;
            Dataset = dataset;
            Status = status;
            DataProvidersMetadata = dataProvidersMetadata;
            SuggestedUtterances = suggestedUtterances;
            Kind = kind;
        }

        /// <summary>
        /// metadata for the detector
        /// Serialized Name: DetectorResponse.properties.metadata
        /// </summary>
        public DetectorInfo Metadata { get; set; }
        /// <summary>
        /// Data Set
        /// Serialized Name: DetectorResponse.properties.dataset
        /// </summary>
        public IList<DiagnosticInfo> Dataset { get; }
        /// <summary>
        /// Indicates status of the most severe insight.
        /// Serialized Name: DetectorResponse.properties.status
        /// </summary>
        public OperationStatusAutoGenerated Status { get; set; }
        /// <summary>
        /// Additional configuration for different data providers to be used by the UI
        /// Serialized Name: DetectorResponse.properties.dataProvidersMetadata
        /// </summary>
        public IList<DataProviderMetadata> DataProvidersMetadata { get; }
        /// <summary>
        /// Suggested utterances where the detector can be applicable.
        /// Serialized Name: DetectorResponse.properties.suggestedUtterances
        /// </summary>
        public QueryUtterancesResults SuggestedUtterances { get; set; }
        /// <summary>
        /// Kind of resource.
        /// Serialized Name: ProxyOnlyResource.kind
        /// </summary>
        public string Kind { get; set; }
    }
}
