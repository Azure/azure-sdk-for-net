// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.AppService.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.AppService
{
    /// <summary> A class representing the AppServiceDomain data model. </summary>
    public partial class AppServiceDomainData : TrackedResourceData
    {
        /// <summary> Initializes a new instance of AppServiceDomainData. </summary>
        /// <param name="location"> The location. </param>
        public AppServiceDomainData(AzureLocation location) : base(location)
        {
            NameServers = new ChangeTrackingList<string>();
            ManagedHostNames = new ChangeTrackingList<HostName>();
            DomainNotRenewableReasons = new ChangeTrackingList<DomainNotRenewableReason>();
        }

        /// <summary> Initializes a new instance of AppServiceDomainData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="contactAdmin">
        /// Administrative contact.
        /// Serialized Name: Domain.properties.contactAdmin
        /// </param>
        /// <param name="contactBilling">
        /// Billing contact.
        /// Serialized Name: Domain.properties.contactBilling
        /// </param>
        /// <param name="contactRegistrant">
        /// Registrant contact.
        /// Serialized Name: Domain.properties.contactRegistrant
        /// </param>
        /// <param name="contactTech">
        /// Technical contact.
        /// Serialized Name: Domain.properties.contactTech
        /// </param>
        /// <param name="registrationStatus">
        /// Domain registration status.
        /// Serialized Name: Domain.properties.registrationStatus
        /// </param>
        /// <param name="provisioningState">
        /// Domain provisioning state.
        /// Serialized Name: Domain.properties.provisioningState
        /// </param>
        /// <param name="nameServers">
        /// Name servers.
        /// Serialized Name: Domain.properties.nameServers
        /// </param>
        /// <param name="hasPrivacy">
        /// &lt;code&gt;true&lt;/code&gt; if domain privacy is enabled for this domain; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// Serialized Name: Domain.properties.privacy
        /// </param>
        /// <param name="createdOn">
        /// Domain creation timestamp.
        /// Serialized Name: Domain.properties.createdTime
        /// </param>
        /// <param name="expireOn">
        /// Domain expiration timestamp.
        /// Serialized Name: Domain.properties.expirationTime
        /// </param>
        /// <param name="lastRenewedOn">
        /// Timestamp when the domain was renewed last time.
        /// Serialized Name: Domain.properties.lastRenewedTime
        /// </param>
        /// <param name="isAutoRenew">
        /// &lt;code&gt;true&lt;/code&gt; if the domain should be automatically renewed; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// Serialized Name: Domain.properties.autoRenew
        /// </param>
        /// <param name="readyForDnsRecordManagement">
        /// &lt;code&gt;true&lt;/code&gt; if Azure can assign this domain to App Service apps; otherwise, &lt;code&gt;false&lt;/code&gt;. This value will be &lt;code&gt;true&lt;/code&gt; if domain registration status is active and 
        ///  it is hosted on name servers Azure has programmatic access to.
        /// Serialized Name: Domain.properties.readyForDnsRecordManagement
        /// </param>
        /// <param name="managedHostNames">
        /// All hostnames derived from the domain and assigned to Azure resources.
        /// Serialized Name: Domain.properties.managedHostNames
        /// </param>
        /// <param name="consent">
        /// Legal agreement consent.
        /// Serialized Name: Domain.properties.consent
        /// </param>
        /// <param name="domainNotRenewableReasons">
        /// Reasons why domain is not renewable.
        /// Serialized Name: Domain.properties.domainNotRenewableReasons
        /// </param>
        /// <param name="dnsType">
        /// Current DNS type
        /// Serialized Name: Domain.properties.dnsType
        /// </param>
        /// <param name="dnsZoneId">
        /// Azure DNS Zone to use
        /// Serialized Name: Domain.properties.dnsZoneId
        /// </param>
        /// <param name="targetDnsType">
        /// Target DNS type (would be used for migration)
        /// Serialized Name: Domain.properties.targetDnsType
        /// </param>
        /// <param name="authCode"> Serialized Name: Domain.properties.authCode. </param>
        /// <param name="kind">
        /// Kind of resource.
        /// Serialized Name: Resource.kind
        /// </param>
        internal AppServiceDomainData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary<string, string> tags, AzureLocation location, ContactInformation contactAdmin, ContactInformation contactBilling, ContactInformation contactRegistrant, ContactInformation contactTech, DomainStatus? registrationStatus, ProvisioningState? provisioningState, IReadOnlyList<string> nameServers, bool? hasPrivacy, DateTimeOffset? createdOn, DateTimeOffset? expireOn, DateTimeOffset? lastRenewedOn, bool? isAutoRenew, bool? readyForDnsRecordManagement, IReadOnlyList<HostName> managedHostNames, DomainPurchaseConsent consent, IReadOnlyList<DomainNotRenewableReason> domainNotRenewableReasons, DnsType? dnsType, string dnsZoneId, DnsType? targetDnsType, string authCode, string kind) : base(id, name, resourceType, systemData, tags, location)
        {
            ContactAdmin = contactAdmin;
            ContactBilling = contactBilling;
            ContactRegistrant = contactRegistrant;
            ContactTech = contactTech;
            RegistrationStatus = registrationStatus;
            ProvisioningState = provisioningState;
            NameServers = nameServers;
            HasPrivacy = hasPrivacy;
            CreatedOn = createdOn;
            ExpireOn = expireOn;
            LastRenewedOn = lastRenewedOn;
            IsAutoRenew = isAutoRenew;
            ReadyForDnsRecordManagement = readyForDnsRecordManagement;
            ManagedHostNames = managedHostNames;
            Consent = consent;
            DomainNotRenewableReasons = domainNotRenewableReasons;
            DnsType = dnsType;
            DnsZoneId = dnsZoneId;
            TargetDnsType = targetDnsType;
            AuthCode = authCode;
            Kind = kind;
        }

        /// <summary>
        /// Administrative contact.
        /// Serialized Name: Domain.properties.contactAdmin
        /// </summary>
        public ContactInformation ContactAdmin { get; set; }
        /// <summary>
        /// Billing contact.
        /// Serialized Name: Domain.properties.contactBilling
        /// </summary>
        public ContactInformation ContactBilling { get; set; }
        /// <summary>
        /// Registrant contact.
        /// Serialized Name: Domain.properties.contactRegistrant
        /// </summary>
        public ContactInformation ContactRegistrant { get; set; }
        /// <summary>
        /// Technical contact.
        /// Serialized Name: Domain.properties.contactTech
        /// </summary>
        public ContactInformation ContactTech { get; set; }
        /// <summary>
        /// Domain registration status.
        /// Serialized Name: Domain.properties.registrationStatus
        /// </summary>
        public DomainStatus? RegistrationStatus { get; }
        /// <summary>
        /// Domain provisioning state.
        /// Serialized Name: Domain.properties.provisioningState
        /// </summary>
        public ProvisioningState? ProvisioningState { get; }
        /// <summary>
        /// Name servers.
        /// Serialized Name: Domain.properties.nameServers
        /// </summary>
        public IReadOnlyList<string> NameServers { get; }
        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; if domain privacy is enabled for this domain; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// Serialized Name: Domain.properties.privacy
        /// </summary>
        public bool? HasPrivacy { get; set; }
        /// <summary>
        /// Domain creation timestamp.
        /// Serialized Name: Domain.properties.createdTime
        /// </summary>
        public DateTimeOffset? CreatedOn { get; }
        /// <summary>
        /// Domain expiration timestamp.
        /// Serialized Name: Domain.properties.expirationTime
        /// </summary>
        public DateTimeOffset? ExpireOn { get; }
        /// <summary>
        /// Timestamp when the domain was renewed last time.
        /// Serialized Name: Domain.properties.lastRenewedTime
        /// </summary>
        public DateTimeOffset? LastRenewedOn { get; }
        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; if the domain should be automatically renewed; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// Serialized Name: Domain.properties.autoRenew
        /// </summary>
        public bool? IsAutoRenew { get; set; }
        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; if Azure can assign this domain to App Service apps; otherwise, &lt;code&gt;false&lt;/code&gt;. This value will be &lt;code&gt;true&lt;/code&gt; if domain registration status is active and 
        ///  it is hosted on name servers Azure has programmatic access to.
        /// Serialized Name: Domain.properties.readyForDnsRecordManagement
        /// </summary>
        public bool? ReadyForDnsRecordManagement { get; }
        /// <summary>
        /// All hostnames derived from the domain and assigned to Azure resources.
        /// Serialized Name: Domain.properties.managedHostNames
        /// </summary>
        public IReadOnlyList<HostName> ManagedHostNames { get; }
        /// <summary>
        /// Legal agreement consent.
        /// Serialized Name: Domain.properties.consent
        /// </summary>
        public DomainPurchaseConsent Consent { get; set; }
        /// <summary>
        /// Reasons why domain is not renewable.
        /// Serialized Name: Domain.properties.domainNotRenewableReasons
        /// </summary>
        public IReadOnlyList<DomainNotRenewableReason> DomainNotRenewableReasons { get; }
        /// <summary>
        /// Current DNS type
        /// Serialized Name: Domain.properties.dnsType
        /// </summary>
        public DnsType? DnsType { get; set; }
        /// <summary>
        /// Azure DNS Zone to use
        /// Serialized Name: Domain.properties.dnsZoneId
        /// </summary>
        public string DnsZoneId { get; set; }
        /// <summary>
        /// Target DNS type (would be used for migration)
        /// Serialized Name: Domain.properties.targetDnsType
        /// </summary>
        public DnsType? TargetDnsType { get; set; }
        /// <summary> Serialized Name: Domain.properties.authCode. </summary>
        public string AuthCode { get; set; }
        /// <summary>
        /// Kind of resource.
        /// Serialized Name: Resource.kind
        /// </summary>
        public string Kind { get; set; }
    }
}
