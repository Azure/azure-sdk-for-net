// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.AppService.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.AppService
{
    /// <summary> A class representing the SiteExtensionInfo data model. </summary>
    public partial class SiteExtensionInfoData : ResourceData
    {
        /// <summary> Initializes a new instance of SiteExtensionInfoData. </summary>
        public SiteExtensionInfoData()
        {
            Authors = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of SiteExtensionInfoData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="extensionId">
        /// Site extension ID.
        /// Serialized Name: SiteExtensionInfo.properties.extension_id
        /// </param>
        /// <param name="title"> Serialized Name: SiteExtensionInfo.properties.title. </param>
        /// <param name="extensionType">
        /// Site extension type.
        /// Serialized Name: SiteExtensionInfo.properties.extension_type
        /// </param>
        /// <param name="summary">
        /// Summary description.
        /// Serialized Name: SiteExtensionInfo.properties.summary
        /// </param>
        /// <param name="description">
        /// Detailed description.
        /// Serialized Name: SiteExtensionInfo.properties.description
        /// </param>
        /// <param name="version">
        /// Version information.
        /// Serialized Name: SiteExtensionInfo.properties.version
        /// </param>
        /// <param name="extensionUri">
        /// Extension URL.
        /// Serialized Name: SiteExtensionInfo.properties.extension_url
        /// </param>
        /// <param name="projectUri">
        /// Project URL.
        /// Serialized Name: SiteExtensionInfo.properties.project_url
        /// </param>
        /// <param name="iconUri">
        /// Icon URL.
        /// Serialized Name: SiteExtensionInfo.properties.icon_url
        /// </param>
        /// <param name="licenseUri">
        /// License URL.
        /// Serialized Name: SiteExtensionInfo.properties.license_url
        /// </param>
        /// <param name="feedUri">
        /// Feed URL.
        /// Serialized Name: SiteExtensionInfo.properties.feed_url
        /// </param>
        /// <param name="authors">
        /// List of authors.
        /// Serialized Name: SiteExtensionInfo.properties.authors
        /// </param>
        /// <param name="installerCommandLineParams">
        /// Installer command line parameters.
        /// Serialized Name: SiteExtensionInfo.properties.installer_command_line_params
        /// </param>
        /// <param name="publishedOn">
        /// Published timestamp.
        /// Serialized Name: SiteExtensionInfo.properties.published_date_time
        /// </param>
        /// <param name="downloadCount">
        /// Count of downloads.
        /// Serialized Name: SiteExtensionInfo.properties.download_count
        /// </param>
        /// <param name="localIsLatestVersion">
        /// &lt;code&gt;true&lt;/code&gt; if the local version is the latest version; &lt;code&gt;false&lt;/code&gt; otherwise.
        /// Serialized Name: SiteExtensionInfo.properties.local_is_latest_version
        /// </param>
        /// <param name="localPath">
        /// Local path.
        /// Serialized Name: SiteExtensionInfo.properties.local_path
        /// </param>
        /// <param name="installedOn">
        /// Installed timestamp.
        /// Serialized Name: SiteExtensionInfo.properties.installed_date_time
        /// </param>
        /// <param name="provisioningState">
        /// Provisioning state.
        /// Serialized Name: SiteExtensionInfo.properties.provisioningState
        /// </param>
        /// <param name="comment">
        /// Site Extension comment.
        /// Serialized Name: SiteExtensionInfo.properties.comment
        /// </param>
        /// <param name="kind">
        /// Kind of resource.
        /// Serialized Name: ProxyOnlyResource.kind
        /// </param>
        internal SiteExtensionInfoData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string extensionId, string title, SiteExtensionType? extensionType, string summary, string description, string version, Uri extensionUri, Uri projectUri, Uri iconUri, Uri licenseUri, Uri feedUri, IList<string> authors, string installerCommandLineParams, DateTimeOffset? publishedOn, int? downloadCount, bool? localIsLatestVersion, string localPath, DateTimeOffset? installedOn, string provisioningState, string comment, string kind) : base(id, name, resourceType, systemData)
        {
            ExtensionId = extensionId;
            Title = title;
            ExtensionType = extensionType;
            Summary = summary;
            Description = description;
            Version = version;
            ExtensionUri = extensionUri;
            ProjectUri = projectUri;
            IconUri = iconUri;
            LicenseUri = licenseUri;
            FeedUri = feedUri;
            Authors = authors;
            InstallerCommandLineParams = installerCommandLineParams;
            PublishedOn = publishedOn;
            DownloadCount = downloadCount;
            LocalIsLatestVersion = localIsLatestVersion;
            LocalPath = localPath;
            InstalledOn = installedOn;
            ProvisioningState = provisioningState;
            Comment = comment;
            Kind = kind;
        }

        /// <summary>
        /// Site extension ID.
        /// Serialized Name: SiteExtensionInfo.properties.extension_id
        /// </summary>
        public string ExtensionId { get; set; }
        /// <summary> Serialized Name: SiteExtensionInfo.properties.title. </summary>
        public string Title { get; set; }
        /// <summary>
        /// Site extension type.
        /// Serialized Name: SiteExtensionInfo.properties.extension_type
        /// </summary>
        public SiteExtensionType? ExtensionType { get; set; }
        /// <summary>
        /// Summary description.
        /// Serialized Name: SiteExtensionInfo.properties.summary
        /// </summary>
        public string Summary { get; set; }
        /// <summary>
        /// Detailed description.
        /// Serialized Name: SiteExtensionInfo.properties.description
        /// </summary>
        public string Description { get; set; }
        /// <summary>
        /// Version information.
        /// Serialized Name: SiteExtensionInfo.properties.version
        /// </summary>
        public string Version { get; set; }
        /// <summary>
        /// Extension URL.
        /// Serialized Name: SiteExtensionInfo.properties.extension_url
        /// </summary>
        public Uri ExtensionUri { get; set; }
        /// <summary>
        /// Project URL.
        /// Serialized Name: SiteExtensionInfo.properties.project_url
        /// </summary>
        public Uri ProjectUri { get; set; }
        /// <summary>
        /// Icon URL.
        /// Serialized Name: SiteExtensionInfo.properties.icon_url
        /// </summary>
        public Uri IconUri { get; set; }
        /// <summary>
        /// License URL.
        /// Serialized Name: SiteExtensionInfo.properties.license_url
        /// </summary>
        public Uri LicenseUri { get; set; }
        /// <summary>
        /// Feed URL.
        /// Serialized Name: SiteExtensionInfo.properties.feed_url
        /// </summary>
        public Uri FeedUri { get; set; }
        /// <summary>
        /// List of authors.
        /// Serialized Name: SiteExtensionInfo.properties.authors
        /// </summary>
        public IList<string> Authors { get; }
        /// <summary>
        /// Installer command line parameters.
        /// Serialized Name: SiteExtensionInfo.properties.installer_command_line_params
        /// </summary>
        public string InstallerCommandLineParams { get; set; }
        /// <summary>
        /// Published timestamp.
        /// Serialized Name: SiteExtensionInfo.properties.published_date_time
        /// </summary>
        public DateTimeOffset? PublishedOn { get; set; }
        /// <summary>
        /// Count of downloads.
        /// Serialized Name: SiteExtensionInfo.properties.download_count
        /// </summary>
        public int? DownloadCount { get; set; }
        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; if the local version is the latest version; &lt;code&gt;false&lt;/code&gt; otherwise.
        /// Serialized Name: SiteExtensionInfo.properties.local_is_latest_version
        /// </summary>
        public bool? LocalIsLatestVersion { get; set; }
        /// <summary>
        /// Local path.
        /// Serialized Name: SiteExtensionInfo.properties.local_path
        /// </summary>
        public string LocalPath { get; set; }
        /// <summary>
        /// Installed timestamp.
        /// Serialized Name: SiteExtensionInfo.properties.installed_date_time
        /// </summary>
        public DateTimeOffset? InstalledOn { get; set; }
        /// <summary>
        /// Provisioning state.
        /// Serialized Name: SiteExtensionInfo.properties.provisioningState
        /// </summary>
        public string ProvisioningState { get; set; }
        /// <summary>
        /// Site Extension comment.
        /// Serialized Name: SiteExtensionInfo.properties.comment
        /// </summary>
        public string Comment { get; set; }
        /// <summary>
        /// Kind of resource.
        /// Serialized Name: ProxyOnlyResource.kind
        /// </summary>
        public string Kind { get; set; }
    }
}
