// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.AppService.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.AppService
{
    /// <summary> A class representing the ProcessInfo data model. </summary>
    public partial class ProcessInfoData : ResourceData
    {
        /// <summary> Initializes a new instance of ProcessInfoData. </summary>
        public ProcessInfoData()
        {
            Children = new ChangeTrackingList<string>();
            Threads = new ChangeTrackingList<ProcessThreadInfo>();
            OpenFileHandles = new ChangeTrackingList<string>();
            Modules = new ChangeTrackingList<ProcessModuleInfoData>();
            EnvironmentVariables = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of ProcessInfoData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="identifier">
        /// ARM Identifier for deployment.
        /// Serialized Name: ProcessInfo.properties.identifier
        /// </param>
        /// <param name="deploymentName">
        /// Deployment name.
        /// Serialized Name: ProcessInfo.properties.deployment_name
        /// </param>
        /// <param name="href">
        /// HRef URI.
        /// Serialized Name: ProcessInfo.properties.href
        /// </param>
        /// <param name="minidump">
        /// Minidump URI.
        /// Serialized Name: ProcessInfo.properties.minidump
        /// </param>
        /// <param name="isProfileRunning">
        /// Is profile running?
        /// Serialized Name: ProcessInfo.properties.is_profile_running
        /// </param>
        /// <param name="isIisProfileRunning">
        /// Is the IIS Profile running?
        /// Serialized Name: ProcessInfo.properties.is_iis_profile_running
        /// </param>
        /// <param name="iisProfileTimeoutInSeconds">
        /// IIS Profile timeout (seconds).
        /// Serialized Name: ProcessInfo.properties.iis_profile_timeout_in_seconds
        /// </param>
        /// <param name="parent">
        /// Parent process.
        /// Serialized Name: ProcessInfo.properties.parent
        /// </param>
        /// <param name="children">
        /// Child process list.
        /// Serialized Name: ProcessInfo.properties.children
        /// </param>
        /// <param name="threads">
        /// Thread list.
        /// Serialized Name: ProcessInfo.properties.threads
        /// </param>
        /// <param name="openFileHandles">
        /// List of open files.
        /// Serialized Name: ProcessInfo.properties.open_file_handles
        /// </param>
        /// <param name="modules">
        /// List of modules.
        /// Serialized Name: ProcessInfo.properties.modules
        /// </param>
        /// <param name="fileName">
        /// File name of this process.
        /// Serialized Name: ProcessInfo.properties.file_name
        /// </param>
        /// <param name="commandLine">
        /// Command line.
        /// Serialized Name: ProcessInfo.properties.command_line
        /// </param>
        /// <param name="userName">
        /// User name.
        /// Serialized Name: ProcessInfo.properties.user_name
        /// </param>
        /// <param name="handleCount">
        /// Handle count.
        /// Serialized Name: ProcessInfo.properties.handle_count
        /// </param>
        /// <param name="moduleCount">
        /// Module count.
        /// Serialized Name: ProcessInfo.properties.module_count
        /// </param>
        /// <param name="threadCount">
        /// Thread count.
        /// Serialized Name: ProcessInfo.properties.thread_count
        /// </param>
        /// <param name="startOn">
        /// Start time.
        /// Serialized Name: ProcessInfo.properties.start_time
        /// </param>
        /// <param name="totalCpuTime">
        /// Total CPU time.
        /// Serialized Name: ProcessInfo.properties.total_cpu_time
        /// </param>
        /// <param name="userCpuTime">
        /// User CPU time.
        /// Serialized Name: ProcessInfo.properties.user_cpu_time
        /// </param>
        /// <param name="privilegedCpuTime">
        /// Privileged CPU time.
        /// Serialized Name: ProcessInfo.properties.privileged_cpu_time
        /// </param>
        /// <param name="workingSet">
        /// Working set.
        /// Serialized Name: ProcessInfo.properties.working_set
        /// </param>
        /// <param name="peakWorkingSet">
        /// Peak working set.
        /// Serialized Name: ProcessInfo.properties.peak_working_set
        /// </param>
        /// <param name="privateMemory">
        /// Private memory size.
        /// Serialized Name: ProcessInfo.properties.private_memory
        /// </param>
        /// <param name="virtualMemory">
        /// Virtual memory size.
        /// Serialized Name: ProcessInfo.properties.virtual_memory
        /// </param>
        /// <param name="peakVirtualMemory">
        /// Peak virtual memory usage.
        /// Serialized Name: ProcessInfo.properties.peak_virtual_memory
        /// </param>
        /// <param name="pagedSystemMemory">
        /// Paged system memory.
        /// Serialized Name: ProcessInfo.properties.paged_system_memory
        /// </param>
        /// <param name="nonPagedSystemMemory">
        /// Non-paged system memory.
        /// Serialized Name: ProcessInfo.properties.non_paged_system_memory
        /// </param>
        /// <param name="pagedMemory">
        /// Paged memory.
        /// Serialized Name: ProcessInfo.properties.paged_memory
        /// </param>
        /// <param name="peakPagedMemory">
        /// Peak paged memory.
        /// Serialized Name: ProcessInfo.properties.peak_paged_memory
        /// </param>
        /// <param name="timeStamp">
        /// Time stamp.
        /// Serialized Name: ProcessInfo.properties.time_stamp
        /// </param>
        /// <param name="environmentVariables">
        /// List of environment variables.
        /// Serialized Name: ProcessInfo.properties.environment_variables
        /// </param>
        /// <param name="isScmSite">
        /// Is this the SCM site?
        /// Serialized Name: ProcessInfo.properties.is_scm_site
        /// </param>
        /// <param name="isWebjob">
        /// Is this a Web Job?
        /// Serialized Name: ProcessInfo.properties.is_webjob
        /// </param>
        /// <param name="description">
        /// Description of process.
        /// Serialized Name: ProcessInfo.properties.description
        /// </param>
        /// <param name="kind">
        /// Kind of resource.
        /// Serialized Name: ProxyOnlyResource.kind
        /// </param>
        internal ProcessInfoData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, int? identifier, string deploymentName, string href, string minidump, bool? isProfileRunning, bool? isIisProfileRunning, double? iisProfileTimeoutInSeconds, string parent, IList<string> children, IList<ProcessThreadInfo> threads, IList<string> openFileHandles, IList<ProcessModuleInfoData> modules, string fileName, string commandLine, string userName, int? handleCount, int? moduleCount, int? threadCount, DateTimeOffset? startOn, string totalCpuTime, string userCpuTime, string privilegedCpuTime, long? workingSet, long? peakWorkingSet, long? privateMemory, long? virtualMemory, long? peakVirtualMemory, long? pagedSystemMemory, long? nonPagedSystemMemory, long? pagedMemory, long? peakPagedMemory, DateTimeOffset? timeStamp, IDictionary<string, string> environmentVariables, bool? isScmSite, bool? isWebjob, string description, string kind) : base(id, name, resourceType, systemData)
        {
            Identifier = identifier;
            DeploymentName = deploymentName;
            Href = href;
            Minidump = minidump;
            IsProfileRunning = isProfileRunning;
            IsIisProfileRunning = isIisProfileRunning;
            IisProfileTimeoutInSeconds = iisProfileTimeoutInSeconds;
            Parent = parent;
            Children = children;
            Threads = threads;
            OpenFileHandles = openFileHandles;
            Modules = modules;
            FileName = fileName;
            CommandLine = commandLine;
            UserName = userName;
            HandleCount = handleCount;
            ModuleCount = moduleCount;
            ThreadCount = threadCount;
            StartOn = startOn;
            TotalCpuTime = totalCpuTime;
            UserCpuTime = userCpuTime;
            PrivilegedCpuTime = privilegedCpuTime;
            WorkingSet = workingSet;
            PeakWorkingSet = peakWorkingSet;
            PrivateMemory = privateMemory;
            VirtualMemory = virtualMemory;
            PeakVirtualMemory = peakVirtualMemory;
            PagedSystemMemory = pagedSystemMemory;
            NonPagedSystemMemory = nonPagedSystemMemory;
            PagedMemory = pagedMemory;
            PeakPagedMemory = peakPagedMemory;
            TimeStamp = timeStamp;
            EnvironmentVariables = environmentVariables;
            IsScmSite = isScmSite;
            IsWebjob = isWebjob;
            Description = description;
            Kind = kind;
        }

        /// <summary>
        /// ARM Identifier for deployment.
        /// Serialized Name: ProcessInfo.properties.identifier
        /// </summary>
        public int? Identifier { get; }
        /// <summary>
        /// Deployment name.
        /// Serialized Name: ProcessInfo.properties.deployment_name
        /// </summary>
        public string DeploymentName { get; set; }
        /// <summary>
        /// HRef URI.
        /// Serialized Name: ProcessInfo.properties.href
        /// </summary>
        public string Href { get; set; }
        /// <summary>
        /// Minidump URI.
        /// Serialized Name: ProcessInfo.properties.minidump
        /// </summary>
        public string Minidump { get; set; }
        /// <summary>
        /// Is profile running?
        /// Serialized Name: ProcessInfo.properties.is_profile_running
        /// </summary>
        public bool? IsProfileRunning { get; set; }
        /// <summary>
        /// Is the IIS Profile running?
        /// Serialized Name: ProcessInfo.properties.is_iis_profile_running
        /// </summary>
        public bool? IsIisProfileRunning { get; set; }
        /// <summary>
        /// IIS Profile timeout (seconds).
        /// Serialized Name: ProcessInfo.properties.iis_profile_timeout_in_seconds
        /// </summary>
        public double? IisProfileTimeoutInSeconds { get; set; }
        /// <summary>
        /// Parent process.
        /// Serialized Name: ProcessInfo.properties.parent
        /// </summary>
        public string Parent { get; set; }
        /// <summary>
        /// Child process list.
        /// Serialized Name: ProcessInfo.properties.children
        /// </summary>
        public IList<string> Children { get; }
        /// <summary>
        /// Thread list.
        /// Serialized Name: ProcessInfo.properties.threads
        /// </summary>
        public IList<ProcessThreadInfo> Threads { get; }
        /// <summary>
        /// List of open files.
        /// Serialized Name: ProcessInfo.properties.open_file_handles
        /// </summary>
        public IList<string> OpenFileHandles { get; }
        /// <summary>
        /// List of modules.
        /// Serialized Name: ProcessInfo.properties.modules
        /// </summary>
        public IList<ProcessModuleInfoData> Modules { get; }
        /// <summary>
        /// File name of this process.
        /// Serialized Name: ProcessInfo.properties.file_name
        /// </summary>
        public string FileName { get; set; }
        /// <summary>
        /// Command line.
        /// Serialized Name: ProcessInfo.properties.command_line
        /// </summary>
        public string CommandLine { get; set; }
        /// <summary>
        /// User name.
        /// Serialized Name: ProcessInfo.properties.user_name
        /// </summary>
        public string UserName { get; set; }
        /// <summary>
        /// Handle count.
        /// Serialized Name: ProcessInfo.properties.handle_count
        /// </summary>
        public int? HandleCount { get; set; }
        /// <summary>
        /// Module count.
        /// Serialized Name: ProcessInfo.properties.module_count
        /// </summary>
        public int? ModuleCount { get; set; }
        /// <summary>
        /// Thread count.
        /// Serialized Name: ProcessInfo.properties.thread_count
        /// </summary>
        public int? ThreadCount { get; set; }
        /// <summary>
        /// Start time.
        /// Serialized Name: ProcessInfo.properties.start_time
        /// </summary>
        public DateTimeOffset? StartOn { get; set; }
        /// <summary>
        /// Total CPU time.
        /// Serialized Name: ProcessInfo.properties.total_cpu_time
        /// </summary>
        public string TotalCpuTime { get; set; }
        /// <summary>
        /// User CPU time.
        /// Serialized Name: ProcessInfo.properties.user_cpu_time
        /// </summary>
        public string UserCpuTime { get; set; }
        /// <summary>
        /// Privileged CPU time.
        /// Serialized Name: ProcessInfo.properties.privileged_cpu_time
        /// </summary>
        public string PrivilegedCpuTime { get; set; }
        /// <summary>
        /// Working set.
        /// Serialized Name: ProcessInfo.properties.working_set
        /// </summary>
        public long? WorkingSet { get; set; }
        /// <summary>
        /// Peak working set.
        /// Serialized Name: ProcessInfo.properties.peak_working_set
        /// </summary>
        public long? PeakWorkingSet { get; set; }
        /// <summary>
        /// Private memory size.
        /// Serialized Name: ProcessInfo.properties.private_memory
        /// </summary>
        public long? PrivateMemory { get; set; }
        /// <summary>
        /// Virtual memory size.
        /// Serialized Name: ProcessInfo.properties.virtual_memory
        /// </summary>
        public long? VirtualMemory { get; set; }
        /// <summary>
        /// Peak virtual memory usage.
        /// Serialized Name: ProcessInfo.properties.peak_virtual_memory
        /// </summary>
        public long? PeakVirtualMemory { get; set; }
        /// <summary>
        /// Paged system memory.
        /// Serialized Name: ProcessInfo.properties.paged_system_memory
        /// </summary>
        public long? PagedSystemMemory { get; set; }
        /// <summary>
        /// Non-paged system memory.
        /// Serialized Name: ProcessInfo.properties.non_paged_system_memory
        /// </summary>
        public long? NonPagedSystemMemory { get; set; }
        /// <summary>
        /// Paged memory.
        /// Serialized Name: ProcessInfo.properties.paged_memory
        /// </summary>
        public long? PagedMemory { get; set; }
        /// <summary>
        /// Peak paged memory.
        /// Serialized Name: ProcessInfo.properties.peak_paged_memory
        /// </summary>
        public long? PeakPagedMemory { get; set; }
        /// <summary>
        /// Time stamp.
        /// Serialized Name: ProcessInfo.properties.time_stamp
        /// </summary>
        public DateTimeOffset? TimeStamp { get; set; }
        /// <summary>
        /// List of environment variables.
        /// Serialized Name: ProcessInfo.properties.environment_variables
        /// </summary>
        public IDictionary<string, string> EnvironmentVariables { get; }
        /// <summary>
        /// Is this the SCM site?
        /// Serialized Name: ProcessInfo.properties.is_scm_site
        /// </summary>
        public bool? IsScmSite { get; set; }
        /// <summary>
        /// Is this a Web Job?
        /// Serialized Name: ProcessInfo.properties.is_webjob
        /// </summary>
        public bool? IsWebjob { get; set; }
        /// <summary>
        /// Description of process.
        /// Serialized Name: ProcessInfo.properties.description
        /// </summary>
        public string Description { get; set; }
        /// <summary>
        /// Kind of resource.
        /// Serialized Name: ProxyOnlyResource.kind
        /// </summary>
        public string Kind { get; set; }
    }
}
