// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.AppService.Models;

namespace Azure.ResourceManager.AppService
{
    /// <summary> A class representing the WorkflowRun data model. </summary>
    public partial class WorkflowRunData : SubResource
    {
        /// <summary> Initializes a new instance of WorkflowRunData. </summary>
        internal WorkflowRunData()
        {
            Outputs = new ChangeTrackingDictionary<string, WorkflowOutputParameter>();
        }

        /// <summary> Initializes a new instance of WorkflowRunData. </summary>
        /// <param name="id"> The resource id. </param>
        /// <param name="name"> Gets the workflow run name. </param>
        /// <param name="resourceType"> Gets the workflow run type. </param>
        /// <param name="waitEndOn"> Gets the wait end time. </param>
        /// <param name="startOn"> Gets the start time. </param>
        /// <param name="endOn"> Gets the end time. </param>
        /// <param name="status"> Gets the status. </param>
        /// <param name="code"> Gets the code. </param>
        /// <param name="error"> Gets the error. </param>
        /// <param name="correlationId"> Gets the correlation id. </param>
        /// <param name="correlation"> The run correlation. </param>
        /// <param name="workflow"> Gets the reference to workflow version. </param>
        /// <param name="trigger"> Gets the fired trigger. </param>
        /// <param name="outputs"> Gets the outputs. </param>
        /// <param name="response"> Gets the response of the flow run. </param>
        internal WorkflowRunData(string id, string name, string resourceType, DateTimeOffset? waitEndOn, DateTimeOffset? startOn, DateTimeOffset? endOn, WorkflowStatus? status, string code, BinaryData error, string correlationId, Correlation correlation, ResourceReference workflow, WorkflowRunTrigger trigger, IReadOnlyDictionary<string, WorkflowOutputParameter> outputs, WorkflowRunTrigger response) : base(id)
        {
            Name = name;
            ResourceType = resourceType;
            WaitEndOn = waitEndOn;
            StartOn = startOn;
            EndOn = endOn;
            Status = status;
            Code = code;
            Error = error;
            CorrelationId = correlationId;
            Correlation = correlation;
            Workflow = workflow;
            Trigger = trigger;
            Outputs = outputs;
            Response = response;
        }

        /// <summary> Gets the workflow run name. </summary>
        public string Name { get; }
        /// <summary> Gets the workflow run type. </summary>
        public string ResourceType { get; }
        /// <summary> Gets the wait end time. </summary>
        public DateTimeOffset? WaitEndOn { get; }
        /// <summary> Gets the start time. </summary>
        public DateTimeOffset? StartOn { get; }
        /// <summary> Gets the end time. </summary>
        public DateTimeOffset? EndOn { get; }
        /// <summary> Gets the status. </summary>
        public WorkflowStatus? Status { get; }
        /// <summary> Gets the code. </summary>
        public string Code { get; }
        /// <summary> Gets the error. </summary>
        public BinaryData Error { get; }
        /// <summary> Gets the correlation id. </summary>
        public string CorrelationId { get; }
        /// <summary> The run correlation. </summary>
        internal Correlation Correlation { get; }
        /// <summary> The client tracking id. </summary>
        public string CorrelationClientTrackingId
        {
            get => Correlation?.ClientTrackingId;
        }

        /// <summary> Gets the reference to workflow version. </summary>
        public ResourceReference Workflow { get; }
        /// <summary> Gets the fired trigger. </summary>
        public WorkflowRunTrigger Trigger { get; }
        /// <summary> Gets the outputs. </summary>
        public IReadOnlyDictionary<string, WorkflowOutputParameter> Outputs { get; }
        /// <summary> Gets the response of the flow run. </summary>
        public WorkflowRunTrigger Response { get; }
    }
}
