// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.ResourceManager.AppService.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.AppService
{
    /// <summary> A class representing the SiteSourceControl data model. </summary>
    public partial class SiteSourceControlData : ResourceData
    {
        /// <summary> Initializes a new instance of SiteSourceControlData. </summary>
        public SiteSourceControlData()
        {
        }

        /// <summary> Initializes a new instance of SiteSourceControlData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="repoUri">
        /// Repository or source control URL.
        /// Serialized Name: SiteSourceControl.properties.repoUrl
        /// </param>
        /// <param name="branch">
        /// Name of branch to use for deployment.
        /// Serialized Name: SiteSourceControl.properties.branch
        /// </param>
        /// <param name="isManualIntegration">
        /// &lt;code&gt;true&lt;/code&gt; to limit to manual integration; &lt;code&gt;false&lt;/code&gt; to enable continuous integration (which configures webhooks into online repos like GitHub).
        /// Serialized Name: SiteSourceControl.properties.isManualIntegration
        /// </param>
        /// <param name="isGitHubAction">
        /// &lt;code&gt;true&lt;/code&gt; if this is deployed via GitHub action.
        /// Serialized Name: SiteSourceControl.properties.isGitHubAction
        /// </param>
        /// <param name="isDeploymentRollbackEnabled">
        /// &lt;code&gt;true&lt;/code&gt; to enable deployment rollback; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// Serialized Name: SiteSourceControl.properties.deploymentRollbackEnabled
        /// </param>
        /// <param name="isMercurial">
        /// &lt;code&gt;true&lt;/code&gt; for a Mercurial repository; &lt;code&gt;false&lt;/code&gt; for a Git repository.
        /// Serialized Name: SiteSourceControl.properties.isMercurial
        /// </param>
        /// <param name="gitHubActionConfiguration">
        /// If GitHub Action is selected, than the associated configuration.
        /// Serialized Name: SiteSourceControl.properties.gitHubActionConfiguration
        /// </param>
        /// <param name="kind">
        /// Kind of resource.
        /// Serialized Name: ProxyOnlyResource.kind
        /// </param>
        internal SiteSourceControlData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, Uri repoUri, string branch, bool? isManualIntegration, bool? isGitHubAction, bool? isDeploymentRollbackEnabled, bool? isMercurial, GitHubActionConfiguration gitHubActionConfiguration, string kind) : base(id, name, resourceType, systemData)
        {
            RepoUri = repoUri;
            Branch = branch;
            IsManualIntegration = isManualIntegration;
            IsGitHubAction = isGitHubAction;
            IsDeploymentRollbackEnabled = isDeploymentRollbackEnabled;
            IsMercurial = isMercurial;
            GitHubActionConfiguration = gitHubActionConfiguration;
            Kind = kind;
        }

        /// <summary>
        /// Repository or source control URL.
        /// Serialized Name: SiteSourceControl.properties.repoUrl
        /// </summary>
        public Uri RepoUri { get; set; }
        /// <summary>
        /// Name of branch to use for deployment.
        /// Serialized Name: SiteSourceControl.properties.branch
        /// </summary>
        public string Branch { get; set; }
        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; to limit to manual integration; &lt;code&gt;false&lt;/code&gt; to enable continuous integration (which configures webhooks into online repos like GitHub).
        /// Serialized Name: SiteSourceControl.properties.isManualIntegration
        /// </summary>
        public bool? IsManualIntegration { get; set; }
        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; if this is deployed via GitHub action.
        /// Serialized Name: SiteSourceControl.properties.isGitHubAction
        /// </summary>
        public bool? IsGitHubAction { get; set; }
        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; to enable deployment rollback; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// Serialized Name: SiteSourceControl.properties.deploymentRollbackEnabled
        /// </summary>
        public bool? IsDeploymentRollbackEnabled { get; set; }
        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; for a Mercurial repository; &lt;code&gt;false&lt;/code&gt; for a Git repository.
        /// Serialized Name: SiteSourceControl.properties.isMercurial
        /// </summary>
        public bool? IsMercurial { get; set; }
        /// <summary>
        /// If GitHub Action is selected, than the associated configuration.
        /// Serialized Name: SiteSourceControl.properties.gitHubActionConfiguration
        /// </summary>
        public GitHubActionConfiguration GitHubActionConfiguration { get; set; }
        /// <summary>
        /// Kind of resource.
        /// Serialized Name: ProxyOnlyResource.kind
        /// </summary>
        public string Kind { get; set; }
    }
}
