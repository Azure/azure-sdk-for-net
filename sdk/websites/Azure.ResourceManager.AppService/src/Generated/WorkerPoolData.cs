// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.AppService.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.AppService
{
    /// <summary> A class representing the WorkerPool data model. </summary>
    public partial class WorkerPoolData : ResourceData
    {
        /// <summary> Initializes a new instance of WorkerPoolData. </summary>
        public WorkerPoolData()
        {
            InstanceNames = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of WorkerPoolData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="sku">
        /// Description of a SKU for a scalable resource.
        /// Serialized Name: WorkerPoolResource.sku
        /// </param>
        /// <param name="workerSizeId">
        /// Worker size ID for referencing this worker pool.
        /// Serialized Name: WorkerPoolResource.properties.workerSizeId
        /// </param>
        /// <param name="computeMode">
        /// Shared or dedicated app hosting.
        /// Serialized Name: WorkerPoolResource.properties.computeMode
        /// </param>
        /// <param name="workerSize">
        /// VM size of the worker pool instances.
        /// Serialized Name: WorkerPoolResource.properties.workerSize
        /// </param>
        /// <param name="workerCount">
        /// Number of instances in the worker pool.
        /// Serialized Name: WorkerPoolResource.properties.workerCount
        /// </param>
        /// <param name="instanceNames">
        /// Names of all instances in the worker pool (read only).
        /// Serialized Name: WorkerPoolResource.properties.instanceNames
        /// </param>
        /// <param name="kind">
        /// Kind of resource.
        /// Serialized Name: ProxyOnlyResource.kind
        /// </param>
        internal WorkerPoolData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, AppServiceSkuDescription sku, int? workerSizeId, ComputeModeOption? computeMode, string workerSize, int? workerCount, IReadOnlyList<string> instanceNames, string kind) : base(id, name, resourceType, systemData)
        {
            Sku = sku;
            WorkerSizeId = workerSizeId;
            ComputeMode = computeMode;
            WorkerSize = workerSize;
            WorkerCount = workerCount;
            InstanceNames = instanceNames;
            Kind = kind;
        }

        /// <summary>
        /// Description of a SKU for a scalable resource.
        /// Serialized Name: WorkerPoolResource.sku
        /// </summary>
        public AppServiceSkuDescription Sku { get; set; }
        /// <summary>
        /// Worker size ID for referencing this worker pool.
        /// Serialized Name: WorkerPoolResource.properties.workerSizeId
        /// </summary>
        public int? WorkerSizeId { get; set; }
        /// <summary>
        /// Shared or dedicated app hosting.
        /// Serialized Name: WorkerPoolResource.properties.computeMode
        /// </summary>
        public ComputeModeOption? ComputeMode { get; set; }
        /// <summary>
        /// VM size of the worker pool instances.
        /// Serialized Name: WorkerPoolResource.properties.workerSize
        /// </summary>
        public string WorkerSize { get; set; }
        /// <summary>
        /// Number of instances in the worker pool.
        /// Serialized Name: WorkerPoolResource.properties.workerCount
        /// </summary>
        public int? WorkerCount { get; set; }
        /// <summary>
        /// Names of all instances in the worker pool (read only).
        /// Serialized Name: WorkerPoolResource.properties.instanceNames
        /// </summary>
        public IReadOnlyList<string> InstanceNames { get; }
        /// <summary>
        /// Kind of resource.
        /// Serialized Name: ProxyOnlyResource.kind
        /// </summary>
        public string Kind { get; set; }
    }
}
