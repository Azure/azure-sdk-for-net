// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.HybridContainerService.Models
{
    /// <summary> NetworkProfile - Profile of network configuration. </summary>
    public partial class ProvisionedClusterNetworkProfile
    {
        /// <summary> Initializes a new instance of <see cref="ProvisionedClusterNetworkProfile"/>. </summary>
        public ProvisionedClusterNetworkProfile()
        {
        }

        /// <summary> Initializes a new instance of <see cref="ProvisionedClusterNetworkProfile"/>. </summary>
        /// <param name="loadBalancerProfile"> LoadBalancerProfile - Profile of the cluster load balancer. </param>
        /// <param name="networkPolicy"> NetworkPolicy - Network policy used for building Kubernetes network. Possible values include: 'calico', 'flannel'. Default is 'calico'. </param>
        /// <param name="podCidr"> PodCidr - A CIDR notation IP range from which to assign pod IPs when kubenet is used. </param>
        internal ProvisionedClusterNetworkProfile(ProvisionedClusterLoadBalancerProfile loadBalancerProfile, ProvisionedClusterNetworkPolicy? networkPolicy, string podCidr)
        {
            LoadBalancerProfile = loadBalancerProfile;
            NetworkPolicy = networkPolicy;
            PodCidr = podCidr;
        }

        /// <summary> LoadBalancerProfile - Profile of the cluster load balancer. </summary>
        internal ProvisionedClusterLoadBalancerProfile LoadBalancerProfile { get; set; }
        /// <summary> Count - Number of load balancer VMs. The default value is 0. </summary>
        public int? LoadBalancerCount
        {
            get => LoadBalancerProfile is null ? default : LoadBalancerProfile.Count;
            set
            {
                if (LoadBalancerProfile is null)
                    LoadBalancerProfile = new ProvisionedClusterLoadBalancerProfile();
                LoadBalancerProfile.Count = value;
            }
        }

        /// <summary> NetworkPolicy - Network policy used for building Kubernetes network. Possible values include: 'calico', 'flannel'. Default is 'calico'. </summary>
        public ProvisionedClusterNetworkPolicy? NetworkPolicy { get; set; }
        /// <summary> PodCidr - A CIDR notation IP range from which to assign pod IPs when kubenet is used. </summary>
        public string PodCidr { get; set; }
    }
}
