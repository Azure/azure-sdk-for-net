// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.HybridContainerService.Models
{
    /// <summary> All properties of the provisioned cluster. </summary>
    public partial class ProvisionedClusterProperties
    {
        /// <summary> Initializes a new instance of <see cref="ProvisionedClusterProperties"/>. </summary>
        public ProvisionedClusterProperties()
        {
            AgentPoolProfiles = new ChangeTrackingList<HybridContainerServiceNamedAgentPoolProfile>();
        }

        /// <summary> Initializes a new instance of <see cref="ProvisionedClusterProperties"/>. </summary>
        /// <param name="linuxProfile"> LinuxProfile - The profile for Linux VMs in the Provisioned Cluster. </param>
        /// <param name="controlPlane"> ControlPlane - ControlPlane Configuration. </param>
        /// <param name="kubernetesVersion"> KubernetesVersion - Version of Kubernetes specified when creating the managed cluster. </param>
        /// <param name="networkProfile"> NetworkProfile - Profile of network configuration. </param>
        /// <param name="agentPoolProfiles"> The agent pools of the cluster. </param>
        /// <param name="cloudProviderProfile"> The underlying cloud infra provider properties. </param>
        /// <param name="provisioningState"> Provisioning state of the resource. </param>
        /// <param name="status"> HybridAKSClusterStatus defines the observed state of HybridAKSCluster. </param>
        /// <param name="licenseProfile"> The license profile of the provisioned cluster. </param>
        internal ProvisionedClusterProperties(LinuxProfileProperties linuxProfile, ProvisionedClusterControlPlaneProfile controlPlane, string kubernetesVersion, ProvisionedClusterNetworkProfile networkProfile, IList<HybridContainerServiceNamedAgentPoolProfile> agentPoolProfiles, ProvisionedClusterCloudProviderProfile cloudProviderProfile, HybridContainerServiceResourceProvisioningState? provisioningState, ProvisionedClusterStatus status, ProvisionedClusterLicenseProfile licenseProfile)
        {
            LinuxProfile = linuxProfile;
            ControlPlane = controlPlane;
            KubernetesVersion = kubernetesVersion;
            NetworkProfile = networkProfile;
            AgentPoolProfiles = agentPoolProfiles;
            CloudProviderProfile = cloudProviderProfile;
            ProvisioningState = provisioningState;
            Status = status;
            LicenseProfile = licenseProfile;
        }

        /// <summary> LinuxProfile - The profile for Linux VMs in the Provisioned Cluster. </summary>
        internal LinuxProfileProperties LinuxProfile { get; set; }
        /// <summary> PublicKeys - The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified. </summary>
        public IList<LinuxSshPublicKey> SshPublicKeys
        {
            get
            {
                if (LinuxProfile is null)
                    LinuxProfile = new LinuxProfileProperties();
                return LinuxProfile.SshPublicKeys;
            }
        }

        /// <summary> ControlPlane - ControlPlane Configuration. </summary>
        public ProvisionedClusterControlPlaneProfile ControlPlane { get; set; }
        /// <summary> KubernetesVersion - Version of Kubernetes specified when creating the managed cluster. </summary>
        public string KubernetesVersion { get; set; }
        /// <summary> NetworkProfile - Profile of network configuration. </summary>
        public ProvisionedClusterNetworkProfile NetworkProfile { get; set; }
        /// <summary> The agent pools of the cluster. </summary>
        public IList<HybridContainerServiceNamedAgentPoolProfile> AgentPoolProfiles { get; }
        /// <summary> The underlying cloud infra provider properties. </summary>
        internal ProvisionedClusterCloudProviderProfile CloudProviderProfile { get; set; }
        /// <summary> Array of references to azure resource corresponding to the Network object e.g. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/{logicalNetworkName}. </summary>
        public IList<ResourceIdentifier> InfraNetworkVnetSubnetIds
        {
            get
            {
                if (CloudProviderProfile is null)
                    CloudProviderProfile = new ProvisionedClusterCloudProviderProfile();
                return CloudProviderProfile.InfraNetworkVnetSubnetIds;
            }
        }

        /// <summary> Provisioning state of the resource. </summary>
        public HybridContainerServiceResourceProvisioningState? ProvisioningState { get; }
        /// <summary> HybridAKSClusterStatus defines the observed state of HybridAKSCluster. </summary>
        public ProvisionedClusterStatus Status { get; }
        /// <summary> The license profile of the provisioned cluster. </summary>
        internal ProvisionedClusterLicenseProfile LicenseProfile { get; set; }
        /// <summary> Indicates whether Azure Hybrid Benefit is opted in. </summary>
        public ProvisionedClusterAzureHybridBenefit? LicenseAzureHybridBenefit
        {
            get => LicenseProfile is null ? default : LicenseProfile.AzureHybridBenefit;
            set
            {
                if (LicenseProfile is null)
                    LicenseProfile = new ProvisionedClusterLicenseProfile();
                LicenseProfile.AzureHybridBenefit = value;
            }
        }
    }
}
