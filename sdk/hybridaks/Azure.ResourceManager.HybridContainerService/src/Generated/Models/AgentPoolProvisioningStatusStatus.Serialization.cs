// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.HybridContainerService.Models
{
    public partial class AgentPoolProvisioningStatusStatus : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(ErrorMessage))
            {
                writer.WritePropertyName("errorMessage"u8);
                writer.WriteStringValue(ErrorMessage);
            }
            if (Core.Optional.IsDefined(ProvisioningStatus))
            {
                writer.WritePropertyName("provisioningStatus"u8);
                writer.WriteObjectValue(ProvisioningStatus);
            }
            if (Core.Optional.IsDefined(ReadyReplicas))
            {
                writer.WritePropertyName("readyReplicas"u8);
                writer.WriteNumberValue(ReadyReplicas.Value);
            }
            if (Core.Optional.IsDefined(Replicas))
            {
                writer.WritePropertyName("replicas"u8);
                writer.WriteNumberValue(Replicas.Value);
            }
            writer.WriteEndObject();
        }

        internal static AgentPoolProvisioningStatusStatus DeserializeAgentPoolProvisioningStatusStatus(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<string> errorMessage = default;
            Core.Optional<AgentPoolProvisioningStatusStatusProvisioningStatus> provisioningStatus = default;
            Core.Optional<int> readyReplicas = default;
            Core.Optional<int> replicas = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("errorMessage"u8))
                {
                    errorMessage = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("provisioningStatus"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    provisioningStatus = AgentPoolProvisioningStatusStatusProvisioningStatus.DeserializeAgentPoolProvisioningStatusStatusProvisioningStatus(property.Value);
                    continue;
                }
                if (property.NameEquals("readyReplicas"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    readyReplicas = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("replicas"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    replicas = property.Value.GetInt32();
                    continue;
                }
            }
            return new AgentPoolProvisioningStatusStatus(errorMessage.Value, provisioningStatus.Value, Core.Optional.ToNullable(readyReplicas), Core.Optional.ToNullable(replicas));
        }
    }
}
