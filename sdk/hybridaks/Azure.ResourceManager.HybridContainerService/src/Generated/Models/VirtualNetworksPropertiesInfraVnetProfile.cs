// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.HybridContainerService.Models
{
    /// <summary> The VirtualNetworksPropertiesInfraVnetProfile. </summary>
    public partial class VirtualNetworksPropertiesInfraVnetProfile
    {
        /// <summary> Initializes a new instance of VirtualNetworksPropertiesInfraVnetProfile. </summary>
        public VirtualNetworksPropertiesInfraVnetProfile()
        {
        }

        /// <summary> Initializes a new instance of VirtualNetworksPropertiesInfraVnetProfile. </summary>
        /// <param name="hci"> Infra network profile for HCI platform. </param>
        /// <param name="kubevirt"> Infra network profile for KubeVirt platform. </param>
        /// <param name="vmware"> Infra network profile for VMware platform. </param>
        internal VirtualNetworksPropertiesInfraVnetProfile(VirtualNetworksPropertiesInfraVnetProfileHci hci, VirtualNetworksPropertiesInfraVnetProfileKubevirt kubevirt, VirtualNetworksPropertiesInfraVnetProfileVmware vmware)
        {
            Hci = hci;
            Kubevirt = kubevirt;
            Vmware = vmware;
        }

        /// <summary> Infra network profile for HCI platform. </summary>
        public VirtualNetworksPropertiesInfraVnetProfileHci Hci { get; set; }
        /// <summary> Infra network profile for KubeVirt platform. </summary>
        internal VirtualNetworksPropertiesInfraVnetProfileKubevirt Kubevirt { get; set; }
        /// <summary> Name of the network in KubeVirt. </summary>
        public string KubevirtVnetName
        {
            get => Kubevirt is null ? default : Kubevirt.VnetName;
            set
            {
                if (Kubevirt is null)
                    Kubevirt = new VirtualNetworksPropertiesInfraVnetProfileKubevirt();
                Kubevirt.VnetName = value;
            }
        }

        /// <summary> Infra network profile for VMware platform. </summary>
        internal VirtualNetworksPropertiesInfraVnetProfileVmware Vmware { get; set; }
        /// <summary> Name of the network segment in VSphere. </summary>
        public string VmwareSegmentName
        {
            get => Vmware is null ? default : Vmware.SegmentName;
            set
            {
                if (Vmware is null)
                    Vmware = new VirtualNetworksPropertiesInfraVnetProfileVmware();
                Vmware.SegmentName = value;
            }
        }
    }
}
