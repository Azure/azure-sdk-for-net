// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.HybridContainerService.Models
{
    public partial class StorageProfile : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(SmbCsiDriver))
            {
                writer.WritePropertyName("smbCsiDriver"u8);
                writer.WriteObjectValue(SmbCsiDriver);
            }
            if (Optional.IsDefined(NfsCsiDriver))
            {
                writer.WritePropertyName("nfsCsiDriver"u8);
                writer.WriteObjectValue(NfsCsiDriver);
            }
            writer.WriteEndObject();
        }

        internal static StorageProfile DeserializeStorageProfile(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<StorageProfileSmbCSIDriver> smbCsiDriver = default;
            Optional<StorageProfileNfsCSIDriver> nfsCsiDriver = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("smbCsiDriver"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    smbCsiDriver = StorageProfileSmbCSIDriver.DeserializeStorageProfileSmbCSIDriver(property.Value);
                    continue;
                }
                if (property.NameEquals("nfsCsiDriver"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    nfsCsiDriver = StorageProfileNfsCSIDriver.DeserializeStorageProfileNfsCSIDriver(property.Value);
                    continue;
                }
            }
            return new StorageProfile(smbCsiDriver.Value, nfsCsiDriver.Value);
        }
    }
}
