// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.HybridContainerService.Models
{
    /// <summary> The observed status of the provisioned cluster. </summary>
    public partial class ProvisionedClusterStatus
    {
        /// <summary> Initializes a new instance of <see cref="ProvisionedClusterStatus"/>. </summary>
        internal ProvisionedClusterStatus()
        {
            ControlPlaneStatus = new ChangeTrackingList<ProvisionedClusterAddonStatusProfile>();
        }

        /// <summary> Initializes a new instance of <see cref="ProvisionedClusterStatus"/>. </summary>
        /// <param name="controlPlaneStatus"> The detailed status of the provisioned cluster components including addons. </param>
        /// <param name="currentState"> The current state of the provisioned cluster. </param>
        /// <param name="errorMessage"> Error messages during a provisioned cluster operation or steady state. </param>
        internal ProvisionedClusterStatus(IReadOnlyList<ProvisionedClusterAddonStatusProfile> controlPlaneStatus, HybridContainerServiceResourceProvisioningState? currentState, string errorMessage)
        {
            ControlPlaneStatus = controlPlaneStatus;
            CurrentState = currentState;
            ErrorMessage = errorMessage;
        }

        /// <summary> The detailed status of the provisioned cluster components including addons. </summary>
        public IReadOnlyList<ProvisionedClusterAddonStatusProfile> ControlPlaneStatus { get; }
        /// <summary> The current state of the provisioned cluster. </summary>
        public HybridContainerServiceResourceProvisioningState? CurrentState { get; }
        /// <summary> Error messages during a provisioned cluster operation or steady state. </summary>
        public string ErrorMessage { get; }
    }
}
