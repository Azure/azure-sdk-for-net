// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.HybridContainerService.Models
{
    /// <summary> All properties of the provisioned cluster. </summary>
    public partial class ProvisionedClustersAllProperties : ProvisionedClustersPropertiesWithSecrets
    {
        /// <summary> Initializes a new instance of <see cref="ProvisionedClustersAllProperties"/>. </summary>
        public ProvisionedClustersAllProperties()
        {
            AddonProfiles = new ChangeTrackingDictionary<string, AddonProfiles>();
            AgentPoolProfiles = new ChangeTrackingList<NamedAgentPoolProfile>();
        }

        /// <summary> Initializes a new instance of <see cref="ProvisionedClustersAllProperties"/>. </summary>
        /// <param name="aadProfile"> AAD profile for the provisioned cluster. </param>
        /// <param name="windowsProfile"> WindowsProfile - Profile for Windows VMs in the Provisioned Cluster. </param>
        /// <param name="httpProxyConfig"> HttpProxyConfig - Configurations for provisioning the cluster with HTTP proxy servers. </param>
        /// <param name="enableRbac"> EnableRBAC - Whether to enable Kubernetes Role-Based Access Control. </param>
        /// <param name="linuxProfile"> LinuxProfile - The profile for Linux VMs in the Provisioned Cluster. </param>
        /// <param name="features"> Additional features specs like Arc Agent Onboarding. </param>
        /// <param name="addonProfiles"> AddonProfiles - Profile of managed cluster add-on. </param>
        /// <param name="controlPlane"> ControlPlane - ControlPlane Configuration. </param>
        /// <param name="kubernetesVersion"> KubernetesVersion - Version of Kubernetes specified when creating the managed cluster. </param>
        /// <param name="networkProfile"> NetworkProfile - Profile of network configuration. </param>
        /// <param name="nodeResourceGroup"> NodeResourceGroup - Name of the resource group containing agent pool nodes. </param>
        /// <param name="agentPoolProfiles"> The agent pools of the cluster. </param>
        /// <param name="cloudProviderProfile"> The underlying cloud infra provider properties. </param>
        /// <param name="provisioningState"></param>
        /// <param name="status"> HybridAKSClusterStatus defines the observed state of HybridAKSCluster. </param>
        internal ProvisionedClustersAllProperties(AADProfile aadProfile, WindowsProfile windowsProfile, HttpProxyConfig httpProxyConfig, bool? enableRbac, LinuxProfileProperties linuxProfile, ProvisionedClustersCommonPropertiesFeatures features, IDictionary<string, AddonProfiles> addonProfiles, ControlPlaneProfile controlPlane, string kubernetesVersion, NetworkProfile networkProfile, string nodeResourceGroup, IList<NamedAgentPoolProfile> agentPoolProfiles, CloudProviderProfile cloudProviderProfile, ProvisioningState? provisioningState, ProvisionedClustersCommonPropertiesStatus status) : base(aadProfile, windowsProfile, httpProxyConfig)
        {
            EnableRbac = enableRbac;
            LinuxProfile = linuxProfile;
            Features = features;
            AddonProfiles = addonProfiles;
            ControlPlane = controlPlane;
            KubernetesVersion = kubernetesVersion;
            NetworkProfile = networkProfile;
            NodeResourceGroup = nodeResourceGroup;
            AgentPoolProfiles = agentPoolProfiles;
            CloudProviderProfile = cloudProviderProfile;
            ProvisioningState = provisioningState;
            Status = status;
        }

        /// <summary> EnableRBAC - Whether to enable Kubernetes Role-Based Access Control. </summary>
        public bool? EnableRbac { get; set; }
        /// <summary> LinuxProfile - The profile for Linux VMs in the Provisioned Cluster. </summary>
        public LinuxProfileProperties LinuxProfile { get; set; }
        /// <summary> Additional features specs like Arc Agent Onboarding. </summary>
        internal ProvisionedClustersCommonPropertiesFeatures Features { get; set; }
        /// <summary> Arc agentry configuration for the provisioned cluster. </summary>
        public ArcAgentProfile FeaturesArcAgentProfile
        {
            get => Features is null ? default : Features.ArcAgentProfile;
            set
            {
                if (Features is null)
                    Features = new ProvisionedClustersCommonPropertiesFeatures();
                Features.ArcAgentProfile = value;
            }
        }

        /// <summary> AddonProfiles - Profile of managed cluster add-on. </summary>
        public IDictionary<string, AddonProfiles> AddonProfiles { get; }
        /// <summary> ControlPlane - ControlPlane Configuration. </summary>
        public ControlPlaneProfile ControlPlane { get; set; }
        /// <summary> KubernetesVersion - Version of Kubernetes specified when creating the managed cluster. </summary>
        public string KubernetesVersion { get; set; }
        /// <summary> NetworkProfile - Profile of network configuration. </summary>
        public NetworkProfile NetworkProfile { get; set; }
        /// <summary> NodeResourceGroup - Name of the resource group containing agent pool nodes. </summary>
        public string NodeResourceGroup { get; set; }
        /// <summary> The agent pools of the cluster. </summary>
        public IList<NamedAgentPoolProfile> AgentPoolProfiles { get; }
        /// <summary> The underlying cloud infra provider properties. </summary>
        public CloudProviderProfile CloudProviderProfile { get; set; }
        /// <summary> Gets the provisioning state. </summary>
        public ProvisioningState? ProvisioningState { get; }
        /// <summary> HybridAKSClusterStatus defines the observed state of HybridAKSCluster. </summary>
        public ProvisionedClustersCommonPropertiesStatus Status { get; }
    }
}
