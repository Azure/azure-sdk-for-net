// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.HybridContainerService.Models
{
    /// <summary> The StorageSpacesPropertiesHciStorageProfile. </summary>
    public partial class StorageSpacesPropertiesHciStorageProfile
    {
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="StorageSpacesPropertiesHciStorageProfile"/>. </summary>
        public StorageSpacesPropertiesHciStorageProfile()
        {
        }

        /// <summary> Initializes a new instance of <see cref="StorageSpacesPropertiesHciStorageProfile"/>. </summary>
        /// <param name="mocGroup"> Resource group in MOC(Microsoft On-premises Cloud). </param>
        /// <param name="mocLocation"> Location in MOC(Microsoft On-premises Cloud). </param>
        /// <param name="mocStorageContainer"> Name of the storage container in MOC(Microsoft On-premises Cloud). </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal StorageSpacesPropertiesHciStorageProfile(string mocGroup, string mocLocation, string mocStorageContainer, Dictionary<string, BinaryData> rawData)
        {
            MocGroup = mocGroup;
            MocLocation = mocLocation;
            MocStorageContainer = mocStorageContainer;
            _rawData = rawData;
        }

        /// <summary> Resource group in MOC(Microsoft On-premises Cloud). </summary>
        public string MocGroup { get; set; }
        /// <summary> Location in MOC(Microsoft On-premises Cloud). </summary>
        public string MocLocation { get; set; }
        /// <summary> Name of the storage container in MOC(Microsoft On-premises Cloud). </summary>
        public string MocStorageContainer { get; set; }
    }
}
