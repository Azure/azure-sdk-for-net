// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.HybridContainerService.Models
{
    public partial class ProvisionedClustersCommonPropertiesStatus
    {
        internal static ProvisionedClustersCommonPropertiesStatus DeserializeProvisionedClustersCommonPropertiesStatus(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<ProvisionedClustersCommonPropertiesStatusFeaturesStatus> featuresStatus = default;
            Optional<IReadOnlyDictionary<string, AddonStatus>> addonStatus = default;
            Optional<string> errorMessage = default;
            Optional<ProvisionedClustersCommonPropertiesStatusProvisioningStatus> provisioningStatus = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("featuresStatus"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    featuresStatus = ProvisionedClustersCommonPropertiesStatusFeaturesStatus.DeserializeProvisionedClustersCommonPropertiesStatusFeaturesStatus(property.Value);
                    continue;
                }
                if (property.NameEquals("addonStatus"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    Dictionary<string, AddonStatus> dictionary = new Dictionary<string, AddonStatus>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, Models.AddonStatus.DeserializeAddonStatus(property0.Value));
                    }
                    addonStatus = dictionary;
                    continue;
                }
                if (property.NameEquals("errorMessage"u8))
                {
                    errorMessage = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("provisioningStatus"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    provisioningStatus = ProvisionedClustersCommonPropertiesStatusProvisioningStatus.DeserializeProvisionedClustersCommonPropertiesStatusProvisioningStatus(property.Value);
                    continue;
                }
            }
            return new ProvisionedClustersCommonPropertiesStatus(featuresStatus.Value, Optional.ToDictionary(addonStatus), errorMessage.Value, provisioningStatus.Value);
        }
    }
}
