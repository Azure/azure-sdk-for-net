// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.Network.Models;

namespace Azure.ResourceManager.Network
{
    /// <summary>
    /// A class representing the NetworkSecurityPerimeterLinkReference data model.
    /// The network security perimeter linkReference resource
    /// </summary>
    public partial class NetworkSecurityPerimeterLinkReferenceData : ResourceData
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="NetworkSecurityPerimeterLinkReferenceData"/>. </summary>
        public NetworkSecurityPerimeterLinkReferenceData()
        {
            LocalInboundProfiles = new ChangeTrackingList<string>();
            LocalOutboundProfiles = new ChangeTrackingList<string>();
            RemoteInboundProfiles = new ChangeTrackingList<string>();
            RemoteOutboundProfiles = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of <see cref="NetworkSecurityPerimeterLinkReferenceData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="provisioningState"> The provisioning state of the NSP LinkReference resource. </param>
        /// <param name="remotePerimeterResourceId"> Perimeter ARM Id for the remote NSP with which the link is created. </param>
        /// <param name="remotePerimeterGuid"> Remote NSP Guid with which the link is created. </param>
        /// <param name="remotePerimeterLocation"> Remote NSP location with which the link gets created. </param>
        /// <param name="localInboundProfiles"> Local Inbound profile names to which Inbound is allowed. Use ['*'] to allow inbound to all profiles. </param>
        /// <param name="localOutboundProfiles"> Local Outbound profile names from which Outbound is allowed. In current version, it is readonly property and it's value is set to ['*'] to allow outbound from all profiles. In later version, user will be able to modify it. </param>
        /// <param name="remoteInboundProfiles"> Remote Inbound profile names to which Inbound is allowed. ['*'] value implies inbound is allowed to all profiles at remote perimeter. This property can only be updated from corresponding link resource present in remote perimeter. </param>
        /// <param name="remoteOutboundProfiles"> Remote Outbound profile names from which Outbound is allowed. ['*'] value implies outbound is allowed from all profiles at remote perimeter. This property can only be updated from corresponding link resource present in remote perimeter. </param>
        /// <param name="description"> A message sent by the remote NSP link admin for connection request. In case of Auto-approved flow, it is default to 'Auto Approved'. </param>
        /// <param name="status"> The NSP linkReference state. It cannot be changed if link is created in auto-approval mode. </param>
        /// <param name="etag"> A unique read-only string that changes whenever the resource is updated. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal NetworkSecurityPerimeterLinkReferenceData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, NetworkSecurityPerimeterLinkProvisioningState? provisioningState, string remotePerimeterResourceId, Guid? remotePerimeterGuid, string remotePerimeterLocation, IList<string> localInboundProfiles, IReadOnlyList<string> localOutboundProfiles, IReadOnlyList<string> remoteInboundProfiles, IReadOnlyList<string> remoteOutboundProfiles, string description, NetworkSecurityPerimeterLinkStatus? status, ETag? etag, IDictionary<string, BinaryData> serializedAdditionalRawData) : base(id, name, resourceType, systemData)
        {
            ProvisioningState = provisioningState;
            RemotePerimeterResourceId = remotePerimeterResourceId;
            RemotePerimeterGuid = remotePerimeterGuid;
            RemotePerimeterLocation = remotePerimeterLocation;
            LocalInboundProfiles = localInboundProfiles;
            LocalOutboundProfiles = localOutboundProfiles;
            RemoteInboundProfiles = remoteInboundProfiles;
            RemoteOutboundProfiles = remoteOutboundProfiles;
            Description = description;
            Status = status;
            ETag = etag;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The provisioning state of the NSP LinkReference resource. </summary>
        public NetworkSecurityPerimeterLinkProvisioningState? ProvisioningState { get; }
        /// <summary> Perimeter ARM Id for the remote NSP with which the link is created. </summary>
        public string RemotePerimeterResourceId { get; }
        /// <summary> Remote NSP Guid with which the link is created. </summary>
        public Guid? RemotePerimeterGuid { get; }
        /// <summary> Remote NSP location with which the link gets created. </summary>
        public string RemotePerimeterLocation { get; }
        /// <summary> Local Inbound profile names to which Inbound is allowed. Use ['*'] to allow inbound to all profiles. </summary>
        public IList<string> LocalInboundProfiles { get; }
        /// <summary> Local Outbound profile names from which Outbound is allowed. In current version, it is readonly property and it's value is set to ['*'] to allow outbound from all profiles. In later version, user will be able to modify it. </summary>
        public IReadOnlyList<string> LocalOutboundProfiles { get; }
        /// <summary> Remote Inbound profile names to which Inbound is allowed. ['*'] value implies inbound is allowed to all profiles at remote perimeter. This property can only be updated from corresponding link resource present in remote perimeter. </summary>
        public IReadOnlyList<string> RemoteInboundProfiles { get; }
        /// <summary> Remote Outbound profile names from which Outbound is allowed. ['*'] value implies outbound is allowed from all profiles at remote perimeter. This property can only be updated from corresponding link resource present in remote perimeter. </summary>
        public IReadOnlyList<string> RemoteOutboundProfiles { get; }
        /// <summary> A message sent by the remote NSP link admin for connection request. In case of Auto-approved flow, it is default to 'Auto Approved'. </summary>
        public string Description { get; }
        /// <summary> The NSP linkReference state. It cannot be changed if link is created in auto-approval mode. </summary>
        public NetworkSecurityPerimeterLinkStatus? Status { get; set; }
        /// <summary> A unique read-only string that changes whenever the resource is updated. </summary>
        public ETag? ETag { get; }
    }
}
