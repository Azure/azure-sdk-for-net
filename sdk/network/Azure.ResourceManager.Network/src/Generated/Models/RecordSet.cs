// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;

namespace Azure.ResourceManager.Network.Models
{
    /// <summary> A collective group of information about the record set information. </summary>
    public partial class RecordSet
    {
        /// <summary> Initializes a new instance of RecordSet. </summary>
        public RecordSet()
        {
        }

        /// <summary> Initializes a new instance of RecordSet. </summary>
        /// <param name="recordType"> Resource record type. </param>
        /// <param name="recordSetName"> Recordset name. </param>
        /// <param name="fqdn"> Fqdn that resolves to private endpoint ip address. </param>
        /// <param name="provisioningState"> The provisioning state of the recordset. </param>
        /// <param name="ttl"> Recordset time to live. </param>
        /// <param name="ipAddresses"> The private ip address of the private endpoint. </param>
        internal RecordSet(string recordType, string recordSetName, string fqdn, ProvisioningState? provisioningState, int? ttl, IList<string> ipAddresses)
        {
            RecordType = recordType;
            RecordSetName = recordSetName;
            Fqdn = fqdn;
            ProvisioningState = provisioningState;
            Ttl = ttl;
            IpAddresses = ipAddresses;
        }

        /// <summary> Resource record type. </summary>
        public string RecordType { get; set; }
        /// <summary> Recordset name. </summary>
        public string RecordSetName { get; set; }
        /// <summary> Fqdn that resolves to private endpoint ip address. </summary>
        public string Fqdn { get; set; }
        /// <summary> The provisioning state of the recordset. </summary>
        public ProvisioningState? ProvisioningState { get; }
        /// <summary> Recordset time to live. </summary>
        public int? Ttl { get; set; }
        /// <summary> The private ip address of the private endpoint. </summary>
        public IList<string> IpAddresses { get; set; }
    }
}
