// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Network.Models
{
    /// <summary> VirtualHub Resource. </summary>
    public partial class VirtualHub : Resource
    {
        /// <summary> Initializes a new instance of VirtualHub. </summary>
        public VirtualHub()
        {
            VirtualNetworkConnections = new ChangeTrackingList<HubVirtualNetworkConnection>();
            VirtualHubRouteTableV2S = new ChangeTrackingList<VirtualHubRouteTableV2>();
        }

        /// <summary> Initializes a new instance of VirtualHub. </summary>
        /// <param name="id"> Resource ID. </param>
        /// <param name="name"> Resource name. </param>
        /// <param name="type"> Resource type. </param>
        /// <param name="location"> Resource location. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="etag"> A unique read-only string that changes whenever the resource is updated. </param>
        /// <param name="virtualWan"> The VirtualWAN to which the VirtualHub belongs. </param>
        /// <param name="vpnGateway"> The VpnGateway associated with this VirtualHub. </param>
        /// <param name="p2SVpnGateway"> The P2SVpnGateway associated with this VirtualHub. </param>
        /// <param name="expressRouteGateway"> The expressRouteGateway associated with this VirtualHub. </param>
        /// <param name="azureFirewall"> The azureFirewall associated with this VirtualHub. </param>
        /// <param name="securityPartnerProvider"> The securityPartnerProvider associated with this VirtualHub. </param>
        /// <param name="virtualNetworkConnections"> List of all vnet connections with this VirtualHub. </param>
        /// <param name="addressPrefix"> Address-prefix for this VirtualHub. </param>
        /// <param name="routeTable"> The routeTable associated with this virtual hub. </param>
        /// <param name="provisioningState"> The provisioning state of the virtual hub resource. </param>
        /// <param name="securityProviderName"> The Security Provider name. </param>
        /// <param name="virtualHubRouteTableV2S"> List of all virtual hub route table v2s associated with this VirtualHub. </param>
        /// <param name="sku"> The sku of this VirtualHub. </param>
        internal VirtualHub(string id, string name, string type, string location, IDictionary<string, string> tags, string etag, SubResource virtualWan, SubResource vpnGateway, SubResource p2SVpnGateway, SubResource expressRouteGateway, SubResource azureFirewall, SubResource securityPartnerProvider, IList<HubVirtualNetworkConnection> virtualNetworkConnections, string addressPrefix, VirtualHubRouteTable routeTable, ProvisioningState? provisioningState, string securityProviderName, IList<VirtualHubRouteTableV2> virtualHubRouteTableV2S, string sku) : base(id, name, type, location, tags)
        {
            Etag = etag;
            VirtualWan = virtualWan;
            VpnGateway = vpnGateway;
            P2SVpnGateway = p2SVpnGateway;
            ExpressRouteGateway = expressRouteGateway;
            AzureFirewall = azureFirewall;
            SecurityPartnerProvider = securityPartnerProvider;
            VirtualNetworkConnections = virtualNetworkConnections;
            AddressPrefix = addressPrefix;
            RouteTable = routeTable;
            ProvisioningState = provisioningState;
            SecurityProviderName = securityProviderName;
            VirtualHubRouteTableV2S = virtualHubRouteTableV2S;
            Sku = sku;
        }

        /// <summary> A unique read-only string that changes whenever the resource is updated. </summary>
        public string Etag { get; }
        /// <summary> The VirtualWAN to which the VirtualHub belongs. </summary>
        public SubResource VirtualWan { get; set; }
        /// <summary> The VpnGateway associated with this VirtualHub. </summary>
        public SubResource VpnGateway { get; set; }
        /// <summary> The P2SVpnGateway associated with this VirtualHub. </summary>
        public SubResource P2SVpnGateway { get; set; }
        /// <summary> The expressRouteGateway associated with this VirtualHub. </summary>
        public SubResource ExpressRouteGateway { get; set; }
        /// <summary> The azureFirewall associated with this VirtualHub. </summary>
        public SubResource AzureFirewall { get; set; }
        /// <summary> The securityPartnerProvider associated with this VirtualHub. </summary>
        public SubResource SecurityPartnerProvider { get; set; }
        /// <summary> List of all vnet connections with this VirtualHub. </summary>
        public IList<HubVirtualNetworkConnection> VirtualNetworkConnections { get; }
        /// <summary> Address-prefix for this VirtualHub. </summary>
        public string AddressPrefix { get; set; }
        /// <summary> The routeTable associated with this virtual hub. </summary>
        public VirtualHubRouteTable RouteTable { get; set; }
        /// <summary> The provisioning state of the virtual hub resource. </summary>
        public ProvisioningState? ProvisioningState { get; }
        /// <summary> The Security Provider name. </summary>
        public string SecurityProviderName { get; set; }
        /// <summary> List of all virtual hub route table v2s associated with this VirtualHub. </summary>
        public IList<VirtualHubRouteTableV2> VirtualHubRouteTableV2S { get; }
        /// <summary> The sku of this VirtualHub. </summary>
        public string Sku { get; set; }
    }
}
