// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Network.Models
{
    /// <summary> Active connectivity configuration. </summary>
    public partial class ActiveConnectivityConfiguration : EffectiveConnectivityConfiguration
    {
        /// <summary> Initializes a new instance of ActiveConnectivityConfiguration. </summary>
        internal ActiveConnectivityConfiguration()
        {
        }

        /// <summary> Initializes a new instance of ActiveConnectivityConfiguration. </summary>
        /// <param name="id"> Connectivity configuration ID. </param>
        /// <param name="configurationGroups"> Effective configuration groups. </param>
        /// <param name="description"> A description of the connectivity configuration. </param>
        /// <param name="connectivityTopology"> Connectivity topology type. </param>
        /// <param name="hubs"> List of hubItems. </param>
        /// <param name="isGlobal"> Flag if global mesh is supported. </param>
        /// <param name="appliesToGroups"> Groups for configuration. </param>
        /// <param name="provisioningState"> The provisioning state of the connectivity configuration resource. </param>
        /// <param name="deleteExistingPeering"> Flag if need to remove current existing peerings. </param>
        /// <param name="commitOn"> Deployment time string. </param>
        /// <param name="region"> Deployment region. </param>
        internal ActiveConnectivityConfiguration(string id, IReadOnlyList<ConfigurationGroup> configurationGroups, string description, ConnectivityTopology? connectivityTopology, IReadOnlyList<Hub> hubs, IsGlobal? isGlobal, IReadOnlyList<ConnectivityGroupItem> appliesToGroups, NetworkProvisioningState? provisioningState, DeleteExistingPeering? deleteExistingPeering, DateTimeOffset? commitOn, string region) : base(id, configurationGroups, description, connectivityTopology, hubs, isGlobal, appliesToGroups, provisioningState, deleteExistingPeering)
        {
            CommitOn = commitOn;
            Region = region;
        }

        /// <summary> Deployment time string. </summary>
        public DateTimeOffset? CommitOn { get; }
        /// <summary> Deployment region. </summary>
        public string Region { get; }
    }
}
