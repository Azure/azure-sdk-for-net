// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Network.Models
{
    /// <summary> Virtual Network resource. </summary>
    public partial class VirtualNetwork : Resource
    {
        /// <summary> Initializes a new instance of VirtualNetwork. </summary>
        public VirtualNetwork()
        {
            Subnets = new ChangeTrackingList<Subnet>();
            VirtualNetworkPeerings = new ChangeTrackingList<VirtualNetworkPeering>();
            IpAllocations = new ChangeTrackingList<SubResource>();
        }

        /// <summary> Initializes a new instance of VirtualNetwork. </summary>
        /// <param name="id"> Resource ID. </param>
        /// <param name="name"> Resource name. </param>
        /// <param name="type"> Resource type. </param>
        /// <param name="location"> Resource location. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="etag"> A unique read-only string that changes whenever the resource is updated. </param>
        /// <param name="addressSpace"> The AddressSpace that contains an array of IP address ranges that can be used by subnets. </param>
        /// <param name="dhcpOptions"> The dhcpOptions that contains an array of DNS servers available to VMs deployed in the virtual network. </param>
        /// <param name="subnets"> A list of subnets in a Virtual Network. </param>
        /// <param name="virtualNetworkPeerings"> A list of peerings in a Virtual Network. </param>
        /// <param name="resourceGuid"> The resourceGuid property of the Virtual Network resource. </param>
        /// <param name="provisioningState"> The provisioning state of the virtual network resource. </param>
        /// <param name="enableDdosProtection"> Indicates if DDoS protection is enabled for all the protected resources in the virtual network. It requires a DDoS protection plan associated with the resource. </param>
        /// <param name="enableVmProtection"> Indicates if VM protection is enabled for all the subnets in the virtual network. </param>
        /// <param name="ddosProtectionPlan"> The DDoS protection plan associated with the virtual network. </param>
        /// <param name="bgpCommunities"> Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET. </param>
        /// <param name="ipAllocations"> Array of IpAllocation which reference this VNET. </param>
        internal VirtualNetwork(string id, string name, string type, string location, IDictionary<string, string> tags, string etag, AddressSpace addressSpace, DhcpOptions dhcpOptions, IList<Subnet> subnets, IList<VirtualNetworkPeering> virtualNetworkPeerings, string resourceGuid, ProvisioningState? provisioningState, bool? enableDdosProtection, bool? enableVmProtection, SubResource ddosProtectionPlan, VirtualNetworkBgpCommunities bgpCommunities, IList<SubResource> ipAllocations) : base(id, name, type, location, tags)
        {
            Etag = etag;
            AddressSpace = addressSpace;
            DhcpOptions = dhcpOptions;
            Subnets = subnets;
            VirtualNetworkPeerings = virtualNetworkPeerings;
            ResourceGuid = resourceGuid;
            ProvisioningState = provisioningState;
            EnableDdosProtection = enableDdosProtection;
            EnableVmProtection = enableVmProtection;
            DdosProtectionPlan = ddosProtectionPlan;
            BgpCommunities = bgpCommunities;
            IpAllocations = ipAllocations;
        }

        /// <summary> A unique read-only string that changes whenever the resource is updated. </summary>
        public string Etag { get; }
        /// <summary> The AddressSpace that contains an array of IP address ranges that can be used by subnets. </summary>
        public AddressSpace AddressSpace { get; set; }
        /// <summary> The dhcpOptions that contains an array of DNS servers available to VMs deployed in the virtual network. </summary>
        public DhcpOptions DhcpOptions { get; set; }
        /// <summary> A list of subnets in a Virtual Network. </summary>
        public IList<Subnet> Subnets { get; }
        /// <summary> A list of peerings in a Virtual Network. </summary>
        public IList<VirtualNetworkPeering> VirtualNetworkPeerings { get; }
        /// <summary> The resourceGuid property of the Virtual Network resource. </summary>
        public string ResourceGuid { get; }
        /// <summary> The provisioning state of the virtual network resource. </summary>
        public ProvisioningState? ProvisioningState { get; }
        /// <summary> Indicates if DDoS protection is enabled for all the protected resources in the virtual network. It requires a DDoS protection plan associated with the resource. </summary>
        public bool? EnableDdosProtection { get; set; }
        /// <summary> Indicates if VM protection is enabled for all the subnets in the virtual network. </summary>
        public bool? EnableVmProtection { get; set; }
        /// <summary> The DDoS protection plan associated with the virtual network. </summary>
        public SubResource DdosProtectionPlan { get; set; }
        /// <summary> Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET. </summary>
        public VirtualNetworkBgpCommunities BgpCommunities { get; set; }
        /// <summary> Array of IpAllocation which reference this VNET. </summary>
        public IList<SubResource> IpAllocations { get; }
    }
}
