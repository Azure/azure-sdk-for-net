// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Network.Models
{
    /// <summary> Configuration needed to perform TLS termination &amp; initiation. </summary>
    public partial class FirewallPolicyTransportSecurity
    {
        /// <summary> Initializes a new instance of FirewallPolicyTransportSecurity. </summary>
        public FirewallPolicyTransportSecurity()
        {
            ExcludedDomains = new ChangeTrackingList<string>();
            TrustedRootCertificates = new ChangeTrackingList<FirewallPolicyTrustedRootCertificate>();
        }

        /// <summary> Initializes a new instance of FirewallPolicyTransportSecurity. </summary>
        /// <param name="certificateAuthority"> The CA used for intermediate CA generation. </param>
        /// <param name="excludedDomains"> List of domains which are excluded from TLS termination. </param>
        /// <param name="trustedRootCertificates"> Certificates which are to be trusted by the firewall. </param>
        internal FirewallPolicyTransportSecurity(FirewallPolicyCertificateAuthority certificateAuthority, IList<string> excludedDomains, IList<FirewallPolicyTrustedRootCertificate> trustedRootCertificates)
        {
            CertificateAuthority = certificateAuthority;
            ExcludedDomains = excludedDomains;
            TrustedRootCertificates = trustedRootCertificates;
        }

        /// <summary> The CA used for intermediate CA generation. </summary>
        public FirewallPolicyCertificateAuthority CertificateAuthority { get; set; }
        /// <summary> List of domains which are excluded from TLS termination. </summary>
        public IList<string> ExcludedDomains { get; }
        /// <summary> Certificates which are to be trusted by the firewall. </summary>
        public IList<FirewallPolicyTrustedRootCertificate> TrustedRootCertificates { get; }
    }
}
