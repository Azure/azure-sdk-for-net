// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.Network.Models
{
    /// <summary> Frontend port of an application gateway. </summary>
    public partial class ApplicationGatewayFrontendPort : SubResource
    {
        /// <summary> Initializes a new instance of ApplicationGatewayFrontendPort. </summary>
        public ApplicationGatewayFrontendPort()
        {
        }

        /// <summary> Initializes a new instance of ApplicationGatewayFrontendPort. </summary>
        /// <param name="id"> Resource ID. </param>
        /// <param name="name"> Name of the frontend port that is unique within an Application Gateway. </param>
        /// <param name="etag"> A unique read-only string that changes whenever the resource is updated. </param>
        /// <param name="resourceType"> Type of the resource. </param>
        /// <param name="port"> Frontend port. </param>
        /// <param name="provisioningState"> The provisioning state of the frontend port resource. </param>
        internal ApplicationGatewayFrontendPort(string id, string name, string etag, string resourceType, int? port, ProvisioningState? provisioningState) : base(id)
        {
            Name = name;
            Etag = etag;
            ResourceType = resourceType;
            Port = port;
            ProvisioningState = provisioningState;
        }

        /// <summary> Name of the frontend port that is unique within an Application Gateway. </summary>
        public string Name { get; set; }
        /// <summary> A unique read-only string that changes whenever the resource is updated. </summary>
        public string Etag { get; }
        /// <summary> Type of the resource. </summary>
        public string ResourceType { get; }
        /// <summary> Frontend port. </summary>
        public int? Port { get; set; }
        /// <summary> The provisioning state of the frontend port resource. </summary>
        public ProvisioningState? ProvisioningState { get; }
    }
}
