// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Network.Models
{
    public partial class PeerRoute
    {
        internal static PeerRoute DeserializePeerRoute(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<string> localAddress = default;
            Core.Optional<string> network = default;
            Core.Optional<string> nextHop = default;
            Core.Optional<string> sourcePeer = default;
            Core.Optional<string> origin = default;
            Core.Optional<string> asPath = default;
            Core.Optional<int> weight = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("localAddress"u8))
                {
                    localAddress = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("network"u8))
                {
                    network = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("nextHop"u8))
                {
                    nextHop = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("sourcePeer"u8))
                {
                    sourcePeer = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("origin"u8))
                {
                    origin = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("asPath"u8))
                {
                    asPath = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("weight"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    weight = property.Value.GetInt32();
                    continue;
                }
            }
            return new PeerRoute(localAddress.Value, network.Value, nextHop.Value, sourcePeer.Value, origin.Value, asPath.Value, Core.Optional.ToNullable(weight));
        }
    }
}
