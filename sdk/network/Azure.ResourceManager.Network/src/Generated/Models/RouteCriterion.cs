// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Network.Models
{
    /// <summary> A matching criteria which matches routes based on route prefix, community, and AS path. </summary>
    public partial class RouteCriterion
    {
        /// <summary> Initializes a new instance of <see cref="RouteCriterion"/>. </summary>
        public RouteCriterion()
        {
            RoutePrefix = new ChangeTrackingList<string>();
            Community = new ChangeTrackingList<string>();
            AsPath = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of <see cref="RouteCriterion"/>. </summary>
        /// <param name="routePrefix"> List of route prefixes which this criteria matches. </param>
        /// <param name="community"> List of BGP communities which this criteria matches. </param>
        /// <param name="asPath"> List of AS paths which this criteria matches. </param>
        /// <param name="matchCondition"> Match condition to apply RouteMap rules. </param>
        internal RouteCriterion(IList<string> routePrefix, IList<string> community, IList<string> asPath, RouteMapMatchCondition? matchCondition)
        {
            RoutePrefix = routePrefix;
            Community = community;
            AsPath = asPath;
            MatchCondition = matchCondition;
        }

        /// <summary> List of route prefixes which this criteria matches. </summary>
        public IList<string> RoutePrefix { get; }
        /// <summary> List of BGP communities which this criteria matches. </summary>
        public IList<string> Community { get; }
        /// <summary> List of AS paths which this criteria matches. </summary>
        public IList<string> AsPath { get; }
        /// <summary> Match condition to apply RouteMap rules. </summary>
        public RouteMapMatchCondition? MatchCondition { get; set; }
    }
}
