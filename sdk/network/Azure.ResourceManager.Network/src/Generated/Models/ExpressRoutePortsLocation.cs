// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Network.Models
{
    /// <summary> Definition of the ExpressRoutePorts peering location resource. </summary>
    public partial class ExpressRoutePortsLocation : Resource
    {
        /// <summary> Initializes a new instance of ExpressRoutePortsLocation. </summary>
        public ExpressRoutePortsLocation()
        {
            AvailableBandwidths = new ChangeTrackingList<ExpressRoutePortsLocationBandwidths>();
        }

        /// <summary> Initializes a new instance of ExpressRoutePortsLocation. </summary>
        /// <param name="id"> Resource ID. </param>
        /// <param name="name"> Resource name. </param>
        /// <param name="type"> Resource type. </param>
        /// <param name="location"> Resource location. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="address"> Address of peering location. </param>
        /// <param name="contact"> Contact details of peering locations. </param>
        /// <param name="availableBandwidths"> The inventory of available ExpressRoutePort bandwidths. </param>
        /// <param name="provisioningState"> The provisioning state of the express route port location resource. </param>
        internal ExpressRoutePortsLocation(string id, string name, string type, string location, IDictionary<string, string> tags, string address, string contact, IList<ExpressRoutePortsLocationBandwidths> availableBandwidths, ProvisioningState? provisioningState) : base(id, name, type, location, tags)
        {
            Address = address;
            Contact = contact;
            AvailableBandwidths = availableBandwidths;
            ProvisioningState = provisioningState;
        }

        /// <summary> Address of peering location. </summary>
        public string Address { get; }
        /// <summary> Contact details of peering locations. </summary>
        public string Contact { get; }
        /// <summary> The inventory of available ExpressRoutePort bandwidths. </summary>
        public IList<ExpressRoutePortsLocationBandwidths> AvailableBandwidths { get; }
        /// <summary> The provisioning state of the express route port location resource. </summary>
        public ProvisioningState? ProvisioningState { get; }
    }
}
