// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Network.Models
{
    /// <summary> Parameters that define destination of connection. </summary>
    public partial class ConnectivityDestination
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ConnectivityDestination"/>. </summary>
        public ConnectivityDestination()
        {
        }

        /// <summary> Initializes a new instance of <see cref="ConnectivityDestination"/>. </summary>
        /// <param name="resourceId"> The ID of the resource to which a connection attempt will be made. </param>
        /// <param name="address"> The IP address or URI the resource to which a connection attempt will be made. </param>
        /// <param name="port"> Port on which check connectivity will be performed. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ConnectivityDestination(ResourceIdentifier resourceId, string address, int? port, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            ResourceId = resourceId;
            Address = address;
            Port = port;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The ID of the resource to which a connection attempt will be made. </summary>
        public ResourceIdentifier ResourceId { get; set; }
        /// <summary> The IP address or URI the resource to which a connection attempt will be made. </summary>
        public string Address { get; set; }
        /// <summary> Port on which check connectivity will be performed. </summary>
        public int? Port { get; set; }
    }
}
