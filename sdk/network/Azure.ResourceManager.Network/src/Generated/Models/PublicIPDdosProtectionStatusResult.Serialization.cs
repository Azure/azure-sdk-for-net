// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Network.Models
{
    public partial class PublicIPDdosProtectionStatusResult
    {
        internal static PublicIPDdosProtectionStatusResult DeserializePublicIPDdosProtectionStatusResult(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> publicIPAddressId = default;
            Optional<string> publicIPAddress = default;
            Optional<IsWorkloadProtected> isWorkloadProtected = default;
            Optional<string> ddosProtectionPlanId = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("publicIpAddressId"u8))
                {
                    publicIPAddressId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("publicIpAddress"u8))
                {
                    publicIPAddress = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("isWorkloadProtected"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    isWorkloadProtected = new IsWorkloadProtected(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("ddosProtectionPlanId"u8))
                {
                    ddosProtectionPlanId = property.Value.GetString();
                    continue;
                }
            }
            return new PublicIPDdosProtectionStatusResult(publicIPAddressId.Value, publicIPAddress.Value, Optional.ToNullable(isWorkloadProtected), ddosProtectionPlanId.Value);
        }
    }
}
