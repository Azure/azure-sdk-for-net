// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Resources.Models;

namespace Azure.ResourceManager.Network.Models
{
    /// <summary> Status of packet capture session. </summary>
    public partial class PacketCaptureQueryStatusResult : Resources.Models.SubResource
    {
        /// <summary> Initializes a new instance of PacketCaptureQueryStatusResult. </summary>
        internal PacketCaptureQueryStatusResult()
        {
            PacketCaptureError = new ChangeTrackingList<PcError>();
        }

        /// <summary> Initializes a new instance of PacketCaptureQueryStatusResult. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name of the packet capture resource. </param>
        /// <param name="captureStartTime"> The start time of the packet capture session. </param>
        /// <param name="packetCaptureStatus"> The status of the packet capture session. </param>
        /// <param name="stopReason"> The reason the current packet capture session was stopped. </param>
        /// <param name="packetCaptureError"> List of errors of packet capture session. </param>
        internal PacketCaptureQueryStatusResult(string id, string name, DateTimeOffset? captureStartTime, PcStatus? packetCaptureStatus, string stopReason, IReadOnlyList<PcError> packetCaptureError) : base(id)
        {
            Name = name;
            CaptureStartTime = captureStartTime;
            PacketCaptureStatus = packetCaptureStatus;
            StopReason = stopReason;
            PacketCaptureError = packetCaptureError;
        }

        /// <summary> The name of the packet capture resource. </summary>
        public string Name { get; }
        /// <summary> The start time of the packet capture session. </summary>
        public DateTimeOffset? CaptureStartTime { get; }
        /// <summary> The status of the packet capture session. </summary>
        public PcStatus? PacketCaptureStatus { get; }
        /// <summary> The reason the current packet capture session was stopped. </summary>
        public string StopReason { get; }
        /// <summary> List of errors of packet capture session. </summary>
        public IReadOnlyList<PcError> PacketCaptureError { get; }
    }
}
