// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Network.Models
{
    /// <summary> Supported next step behaviors after a rule is applied to a matched route. </summary>
    public readonly partial struct NextStep : IEquatable<NextStep>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="NextStep"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public NextStep(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string UnknownValue = "Unknown";
        private const string ContinueValue = "Continue";
        private const string TerminateValue = "Terminate";

        /// <summary> Unknown. </summary>
        public static NextStep Unknown { get; } = new NextStep(UnknownValue);
        /// <summary> Continue. </summary>
        public static NextStep Continue { get; } = new NextStep(ContinueValue);
        /// <summary> Terminate. </summary>
        public static NextStep Terminate { get; } = new NextStep(TerminateValue);
        /// <summary> Determines if two <see cref="NextStep"/> values are the same. </summary>
        public static bool operator ==(NextStep left, NextStep right) => left.Equals(right);
        /// <summary> Determines if two <see cref="NextStep"/> values are not the same. </summary>
        public static bool operator !=(NextStep left, NextStep right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="NextStep"/>. </summary>
        public static implicit operator NextStep(string value) => new NextStep(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is NextStep other && Equals(other);
        /// <inheritdoc />
        public bool Equals(NextStep other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
