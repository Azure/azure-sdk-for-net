// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Network.Models
{
    public partial class DdosSettings : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (DdosCustomPolicy != null)
            {
                writer.WritePropertyName("ddosCustomPolicy");
                writer.WriteObjectValue(DdosCustomPolicy);
            }
            if (ProtectionCoverage != null)
            {
                writer.WritePropertyName("protectionCoverage");
                writer.WriteStringValue(ProtectionCoverage.Value.ToString());
            }
            if (ProtectedIP != null)
            {
                writer.WritePropertyName("protectedIP");
                writer.WriteBooleanValue(ProtectedIP.Value);
            }
            writer.WriteEndObject();
        }

        internal static DdosSettings DeserializeDdosSettings(JsonElement element)
        {
            SubResource ddosCustomPolicy = default;
            DdosSettingsProtectionCoverage? protectionCoverage = default;
            bool? protectedIP = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("ddosCustomPolicy"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    ddosCustomPolicy = SubResource.DeserializeSubResource(property.Value);
                    continue;
                }
                if (property.NameEquals("protectionCoverage"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    protectionCoverage = new DdosSettingsProtectionCoverage(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("protectedIP"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    protectedIP = property.Value.GetBoolean();
                    continue;
                }
            }
            return new DdosSettings(ddosCustomPolicy, protectionCoverage, protectedIP);
        }
    }
}
