// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;
using Azure.Core.Serialization;

namespace Azure.ResourceManager.Network.Models
{
    public partial class ConnectivityGroupItem : IUtf8JsonSerializable, Core.IModelSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer) => ((Core.IModelSerializable)this).Serialize(writer, new Core.Serialization.SerializableOptions());

        void Core.IModelSerializable.Serialize(Utf8JsonWriter writer, Core.Serialization.SerializableOptions options)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("networkGroupId"u8);
            writer.WriteStringValue(NetworkGroupId);
            if (Optional.IsDefined(UseHubGateway))
            {
                writer.WritePropertyName("useHubGateway"u8);
                writer.WriteStringValue(UseHubGateway.Value.ToString());
            }
            if (Optional.IsDefined(IsGlobal))
            {
                writer.WritePropertyName("isGlobal"u8);
                writer.WriteStringValue(IsGlobal.Value.ToString());
            }
            writer.WritePropertyName("groupConnectivity"u8);
            writer.WriteStringValue(GroupConnectivity.ToString());
            writer.WriteEndObject();
        }

        internal static ConnectivityGroupItem DeserializeConnectivityGroupItem(JsonElement element, Core.Serialization.SerializableOptions options = default)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            string networkGroupId = default;
            Optional<HubGatewayUsageFlag> useHubGateway = default;
            Optional<GlobalMeshSupportFlag> isGlobal = default;
            GroupConnectivity groupConnectivity = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("networkGroupId"u8))
                {
                    networkGroupId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("useHubGateway"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    useHubGateway = new HubGatewayUsageFlag(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("isGlobal"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    isGlobal = new GlobalMeshSupportFlag(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("groupConnectivity"u8))
                {
                    groupConnectivity = new GroupConnectivity(property.Value.GetString());
                    continue;
                }
            }
            return new ConnectivityGroupItem(networkGroupId, Optional.ToNullable(useHubGateway), Optional.ToNullable(isGlobal), groupConnectivity);
        }
    }
}
