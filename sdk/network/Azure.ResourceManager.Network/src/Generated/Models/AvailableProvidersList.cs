// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.ResourceManager.Network.Models
{
    /// <summary> List of available countries with details. </summary>
    public partial class AvailableProvidersList
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="AvailableProvidersList"/>. </summary>
        /// <param name="countries"> List of available countries. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="countries"/> is null. </exception>
        internal AvailableProvidersList(IEnumerable<AvailableProvidersListCountry> countries)
        {
            Argument.AssertNotNull(countries, nameof(countries));

            Countries = countries.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="AvailableProvidersList"/>. </summary>
        /// <param name="countries"> List of available countries. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal AvailableProvidersList(IReadOnlyList<AvailableProvidersListCountry> countries, Dictionary<string, BinaryData> rawData)
        {
            Countries = countries;
            _rawData = rawData;
        }

        /// <summary> Initializes a new instance of <see cref="AvailableProvidersList"/> for deserialization. </summary>
        internal AvailableProvidersList()
        {
        }

        /// <summary> List of available countries. </summary>
        public IReadOnlyList<AvailableProvidersListCountry> Countries { get; }
    }
}
