// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Resources.Models;

namespace Azure.ResourceManager.Network.Models
{
    /// <summary> VIP swap request's frontend IP configuration object. </summary>
    public partial class LoadBalancerVipSwapRequestFrontendIPConfiguration
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="LoadBalancerVipSwapRequestFrontendIPConfiguration"/>. </summary>
        public LoadBalancerVipSwapRequestFrontendIPConfiguration()
        {
        }

        /// <summary> Initializes a new instance of <see cref="LoadBalancerVipSwapRequestFrontendIPConfiguration"/>. </summary>
        /// <param name="id"> The ID of frontend IP configuration resource. </param>
        /// <param name="publicIPAddress"> A reference to public IP address resource. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal LoadBalancerVipSwapRequestFrontendIPConfiguration(string id, WritableSubResource publicIPAddress, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Id = id;
            PublicIPAddress = publicIPAddress;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The ID of frontend IP configuration resource. </summary>
        public string Id { get; set; }
        /// <summary> A reference to public IP address resource. </summary>
        internal WritableSubResource PublicIPAddress { get; set; }
        /// <summary> Gets or sets Id. </summary>
        public ResourceIdentifier PublicIPAddressId
        {
            get => PublicIPAddress is null ? default : PublicIPAddress.Id;
            set
            {
                if (PublicIPAddress is null)
                    PublicIPAddress = new WritableSubResource();
                PublicIPAddress.Id = value;
            }
        }
    }
}
