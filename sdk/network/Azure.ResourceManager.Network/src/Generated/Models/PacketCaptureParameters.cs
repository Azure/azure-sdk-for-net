// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Network.Models
{
    /// <summary> Parameters that define the create packet capture operation. </summary>
    internal partial class PacketCaptureParameters
    {
        /// <summary> Initializes a new instance of PacketCaptureParameters. </summary>
        /// <param name="target"> The ID of the targeted resource, only VM is currently supported. </param>
        /// <param name="storageLocation"> The storage location for a packet capture session. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="target"/> or <paramref name="storageLocation"/> is null. </exception>
        internal PacketCaptureParameters(string target, PacketCaptureStorageLocation storageLocation)
        {
            if (target == null)
            {
                throw new ArgumentNullException(nameof(target));
            }
            if (storageLocation == null)
            {
                throw new ArgumentNullException(nameof(storageLocation));
            }

            Target = target;
            StorageLocation = storageLocation;
            Filters = new ChangeTrackingList<PacketCaptureFilter>();
        }

        /// <summary> The ID of the targeted resource, only VM is currently supported. </summary>
        public string Target { get; }
        /// <summary> Number of bytes captured per packet, the remaining bytes are truncated. </summary>
        public int? BytesToCapturePerPacket { get; }
        /// <summary> Maximum size of the capture output. </summary>
        public int? TotalBytesPerSession { get; }
        /// <summary> Maximum duration of the capture session in seconds. </summary>
        public int? TimeLimitInSeconds { get; }
        /// <summary> The storage location for a packet capture session. </summary>
        public PacketCaptureStorageLocation StorageLocation { get; }
        /// <summary> A list of packet capture filters. </summary>
        public IReadOnlyList<PacketCaptureFilter> Filters { get; }
    }
}
