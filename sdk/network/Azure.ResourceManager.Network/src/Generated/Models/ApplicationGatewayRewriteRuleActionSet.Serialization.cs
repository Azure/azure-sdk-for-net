// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Network.Models
{
    public partial class ApplicationGatewayRewriteRuleActionSet : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(RequestHeaderConfigurations))
            {
                writer.WritePropertyName("requestHeaderConfigurations"u8);
                writer.WriteStartArray();
                foreach (var item in RequestHeaderConfigurations)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(ResponseHeaderConfigurations))
            {
                writer.WritePropertyName("responseHeaderConfigurations"u8);
                writer.WriteStartArray();
                foreach (var item in ResponseHeaderConfigurations)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(UrlConfiguration))
            {
                writer.WritePropertyName("urlConfiguration"u8);
                writer.WriteObjectValue(UrlConfiguration);
            }
            writer.WriteEndObject();
        }

        internal static ApplicationGatewayRewriteRuleActionSet DeserializeApplicationGatewayRewriteRuleActionSet(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<IList<ApplicationGatewayHeaderConfiguration>> requestHeaderConfigurations = default;
            Optional<IList<ApplicationGatewayHeaderConfiguration>> responseHeaderConfigurations = default;
            Optional<ApplicationGatewayUrlConfiguration> urlConfiguration = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("requestHeaderConfigurations"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<ApplicationGatewayHeaderConfiguration> array = new List<ApplicationGatewayHeaderConfiguration>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ApplicationGatewayHeaderConfiguration.DeserializeApplicationGatewayHeaderConfiguration(item));
                    }
                    requestHeaderConfigurations = array;
                    continue;
                }
                if (property.NameEquals("responseHeaderConfigurations"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<ApplicationGatewayHeaderConfiguration> array = new List<ApplicationGatewayHeaderConfiguration>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ApplicationGatewayHeaderConfiguration.DeserializeApplicationGatewayHeaderConfiguration(item));
                    }
                    responseHeaderConfigurations = array;
                    continue;
                }
                if (property.NameEquals("urlConfiguration"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    urlConfiguration = ApplicationGatewayUrlConfiguration.DeserializeApplicationGatewayUrlConfiguration(property.Value);
                    continue;
                }
            }
            return new ApplicationGatewayRewriteRuleActionSet(Optional.ToList(requestHeaderConfigurations), Optional.ToList(responseHeaderConfigurations), urlConfiguration.Value);
        }
    }
}
