// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Network.Models
{
    /// <summary> NetworkVirtualAppliance Resource. </summary>
    public partial class NetworkVirtualAppliance : Resource
    {
        /// <summary> Initializes a new instance of NetworkVirtualAppliance. </summary>
        public NetworkVirtualAppliance()
        {
            BootStrapConfigurationBlob = new ChangeTrackingList<string>();
            CloudInitConfigurationBlob = new ChangeTrackingList<string>();
            VirtualApplianceNics = new ChangeTrackingList<VirtualApplianceNicProperties>();
        }

        /// <summary> Initializes a new instance of NetworkVirtualAppliance. </summary>
        /// <param name="id"> Resource ID. </param>
        /// <param name="name"> Resource name. </param>
        /// <param name="type"> Resource type. </param>
        /// <param name="location"> Resource location. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="identity"> The service principal that has read access to cloud-init and config blob. </param>
        /// <param name="sku"> Network Virtual Appliance SKU. </param>
        /// <param name="etag"> A unique read-only string that changes whenever the resource is updated. </param>
        /// <param name="bootStrapConfigurationBlob"> BootStrapConfigurationBlob storage URLs. </param>
        /// <param name="virtualHub"> The Virtual Hub where Network Virtual Appliance is being deployed. </param>
        /// <param name="cloudInitConfigurationBlob"> CloudInitConfigurationBlob storage URLs. </param>
        /// <param name="virtualApplianceAsn"> VirtualAppliance ASN. </param>
        /// <param name="virtualApplianceNics"> List of Virtual Appliance Network Interfaces. </param>
        /// <param name="provisioningState"> The provisioning state of the resource. </param>
        internal NetworkVirtualAppliance(string id, string name, string type, string location, IDictionary<string, string> tags, ManagedServiceIdentity identity, VirtualApplianceSkuProperties sku, string etag, IList<string> bootStrapConfigurationBlob, SubResource virtualHub, IList<string> cloudInitConfigurationBlob, long? virtualApplianceAsn, IReadOnlyList<VirtualApplianceNicProperties> virtualApplianceNics, ProvisioningState? provisioningState) : base(id, name, type, location, tags)
        {
            Identity = identity;
            Sku = sku;
            Etag = etag;
            BootStrapConfigurationBlob = bootStrapConfigurationBlob;
            VirtualHub = virtualHub;
            CloudInitConfigurationBlob = cloudInitConfigurationBlob;
            VirtualApplianceAsn = virtualApplianceAsn;
            VirtualApplianceNics = virtualApplianceNics;
            ProvisioningState = provisioningState;
        }

        /// <summary> The service principal that has read access to cloud-init and config blob. </summary>
        public ManagedServiceIdentity Identity { get; set; }
        /// <summary> Network Virtual Appliance SKU. </summary>
        public VirtualApplianceSkuProperties Sku { get; set; }
        /// <summary> A unique read-only string that changes whenever the resource is updated. </summary>
        public string Etag { get; }
        /// <summary> BootStrapConfigurationBlob storage URLs. </summary>
        public IList<string> BootStrapConfigurationBlob { get; }
        /// <summary> The Virtual Hub where Network Virtual Appliance is being deployed. </summary>
        public SubResource VirtualHub { get; set; }
        /// <summary> CloudInitConfigurationBlob storage URLs. </summary>
        public IList<string> CloudInitConfigurationBlob { get; }
        /// <summary> VirtualAppliance ASN. </summary>
        public long? VirtualApplianceAsn { get; set; }
        /// <summary> List of Virtual Appliance Network Interfaces. </summary>
        public IReadOnlyList<VirtualApplianceNicProperties> VirtualApplianceNics { get; }
        /// <summary> The provisioning state of the resource. </summary>
        public ProvisioningState? ProvisioningState { get; }
    }
}
