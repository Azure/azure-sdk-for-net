// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Network.Models
{
    /// <summary> VpnSite Resource. </summary>
    public partial class VpnSite : Resource
    {
        /// <summary> Initializes a new instance of VpnSite. </summary>
        public VpnSite()
        {
            VpnSiteLinks = new ChangeTrackingList<VpnSiteLink>();
        }

        /// <summary> Initializes a new instance of VpnSite. </summary>
        /// <param name="id"> Resource ID. </param>
        /// <param name="name"> Resource name. </param>
        /// <param name="type"> Resource type. </param>
        /// <param name="location"> Resource location. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="etag"> A unique read-only string that changes whenever the resource is updated. </param>
        /// <param name="virtualWan"> The VirtualWAN to which the vpnSite belongs. </param>
        /// <param name="deviceProperties"> The device properties. </param>
        /// <param name="ipAddress"> The ip-address for the vpn-site. </param>
        /// <param name="siteKey"> The key for vpn-site that can be used for connections. </param>
        /// <param name="addressSpace"> The AddressSpace that contains an array of IP address ranges. </param>
        /// <param name="bgpProperties"> The set of bgp properties. </param>
        /// <param name="provisioningState"> The provisioning state of the VPN site resource. </param>
        /// <param name="isSecuritySite"> IsSecuritySite flag. </param>
        /// <param name="vpnSiteLinks"> List of all vpn site links. </param>
        internal VpnSite(string id, string name, string type, string location, IDictionary<string, string> tags, string etag, SubResource virtualWan, DeviceProperties deviceProperties, string ipAddress, string siteKey, AddressSpace addressSpace, BgpSettings bgpProperties, ProvisioningState? provisioningState, bool? isSecuritySite, IList<VpnSiteLink> vpnSiteLinks) : base(id, name, type, location, tags)
        {
            Etag = etag;
            VirtualWan = virtualWan;
            DeviceProperties = deviceProperties;
            IpAddress = ipAddress;
            SiteKey = siteKey;
            AddressSpace = addressSpace;
            BgpProperties = bgpProperties;
            ProvisioningState = provisioningState;
            IsSecuritySite = isSecuritySite;
            VpnSiteLinks = vpnSiteLinks;
        }

        /// <summary> A unique read-only string that changes whenever the resource is updated. </summary>
        public string Etag { get; }
        /// <summary> The VirtualWAN to which the vpnSite belongs. </summary>
        public SubResource VirtualWan { get; set; }
        /// <summary> The device properties. </summary>
        public DeviceProperties DeviceProperties { get; set; }
        /// <summary> The ip-address for the vpn-site. </summary>
        public string IpAddress { get; set; }
        /// <summary> The key for vpn-site that can be used for connections. </summary>
        public string SiteKey { get; set; }
        /// <summary> The AddressSpace that contains an array of IP address ranges. </summary>
        public AddressSpace AddressSpace { get; set; }
        /// <summary> The set of bgp properties. </summary>
        public BgpSettings BgpProperties { get; set; }
        /// <summary> The provisioning state of the VPN site resource. </summary>
        public ProvisioningState? ProvisioningState { get; }
        /// <summary> IsSecuritySite flag. </summary>
        public bool? IsSecuritySite { get; set; }
        /// <summary> List of all vpn site links. </summary>
        public IList<VpnSiteLink> VpnSiteLinks { get; }
    }
}
