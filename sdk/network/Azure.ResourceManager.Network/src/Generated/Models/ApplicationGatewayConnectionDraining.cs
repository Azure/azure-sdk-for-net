// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Network.Models
{
    /// <summary> Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration. </summary>
    public partial class ApplicationGatewayConnectionDraining
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="ApplicationGatewayConnectionDraining"/>. </summary>
        /// <param name="enabled"> Whether connection draining is enabled or not. </param>
        /// <param name="drainTimeoutInSeconds"> The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds. </param>
        public ApplicationGatewayConnectionDraining(bool enabled, int drainTimeoutInSeconds)
        {
            Enabled = enabled;
            DrainTimeoutInSeconds = drainTimeoutInSeconds;
        }

        /// <summary> Initializes a new instance of <see cref="ApplicationGatewayConnectionDraining"/>. </summary>
        /// <param name="enabled"> Whether connection draining is enabled or not. </param>
        /// <param name="drainTimeoutInSeconds"> The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal ApplicationGatewayConnectionDraining(bool enabled, int drainTimeoutInSeconds, Dictionary<string, BinaryData> rawData)
        {
            Enabled = enabled;
            DrainTimeoutInSeconds = drainTimeoutInSeconds;
            _rawData = rawData;
        }

        /// <summary> Initializes a new instance of <see cref="ApplicationGatewayConnectionDraining"/> for deserialization. </summary>
        internal ApplicationGatewayConnectionDraining()
        {
        }

        /// <summary> Whether connection draining is enabled or not. </summary>
        public bool Enabled { get; set; }
        /// <summary> The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds. </summary>
        public int DrainTimeoutInSeconds { get; set; }
    }
}
