// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.Network.Models
{
    /// <summary> Gateway routing details. </summary>
    public partial class GatewayRoute
    {
        /// <summary> Initializes a new instance of GatewayRoute. </summary>
        internal GatewayRoute()
        {
        }

        /// <summary> Initializes a new instance of GatewayRoute. </summary>
        /// <param name="localAddress"> The gateway&apos;s local address. </param>
        /// <param name="network"> The route&apos;s network prefix. </param>
        /// <param name="nextHop"> The route&apos;s next hop. </param>
        /// <param name="sourcePeer"> The peer this route was learned from. </param>
        /// <param name="origin"> The source this route was learned from. </param>
        /// <param name="asPath"> The route&apos;s AS path sequence. </param>
        /// <param name="weight"> The route&apos;s weight. </param>
        internal GatewayRoute(string localAddress, string network, string nextHop, string sourcePeer, string origin, string asPath, int? weight)
        {
            LocalAddress = localAddress;
            Network = network;
            NextHop = nextHop;
            SourcePeer = sourcePeer;
            Origin = origin;
            AsPath = asPath;
            Weight = weight;
        }

        /// <summary> The gateway&apos;s local address. </summary>
        public string LocalAddress { get; }
        /// <summary> The route&apos;s network prefix. </summary>
        public string Network { get; }
        /// <summary> The route&apos;s next hop. </summary>
        public string NextHop { get; }
        /// <summary> The peer this route was learned from. </summary>
        public string SourcePeer { get; }
        /// <summary> The source this route was learned from. </summary>
        public string Origin { get; }
        /// <summary> The route&apos;s AS path sequence. </summary>
        public string AsPath { get; }
        /// <summary> The route&apos;s weight. </summary>
        public int? Weight { get; }
    }
}
