// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Network.Models
{
    public partial class NetworkManagerCommit : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("targetLocations"u8);
            writer.WriteStartArray();
            foreach (var item in TargetLocations)
            {
                writer.WriteStringValue(item);
            }
            writer.WriteEndArray();
            if (Optional.IsCollectionDefined(ConfigurationIds))
            {
                writer.WritePropertyName("configurationIds"u8);
                writer.WriteStartArray();
                foreach (var item in ConfigurationIds)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WritePropertyName("commitType"u8);
            writer.WriteStringValue(CommitType.ToString());
            writer.WriteEndObject();
        }

        internal static NetworkManagerCommit DeserializeNetworkManagerCommit(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> commitId = default;
            IList<string> targetLocations = default;
            Optional<IList<string>> configurationIds = default;
            NetworkConfigurationDeploymentType commitType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("commitId"u8))
                {
                    commitId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("targetLocations"u8))
                {
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    targetLocations = array;
                    continue;
                }
                if (property.NameEquals("configurationIds"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    configurationIds = array;
                    continue;
                }
                if (property.NameEquals("commitType"u8))
                {
                    commitType = new NetworkConfigurationDeploymentType(property.Value.GetString());
                    continue;
                }
            }
            return new NetworkManagerCommit(commitId.Value, targetLocations, Optional.ToList(configurationIds), commitType);
        }
    }
}
