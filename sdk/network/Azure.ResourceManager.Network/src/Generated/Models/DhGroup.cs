// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Network.Models
{
    /// <summary> The DH Groups used in IKE Phase 1 for initial SA. </summary>
    public readonly partial struct DhGroup : IEquatable<DhGroup>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="DhGroup"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public DhGroup(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string NoneValue = "None";
        private const string DHGroup1Value = "DHGroup1";
        private const string DHGroup2Value = "DHGroup2";
        private const string DHGroup14Value = "DHGroup14";
        private const string DHGroup2048Value = "DHGroup2048";
        private const string ECP256Value = "ECP256";
        private const string ECP384Value = "ECP384";
        private const string DHGroup24Value = "DHGroup24";

        /// <summary> None. </summary>
        public static DhGroup None { get; } = new DhGroup(NoneValue);
        /// <summary> DHGroup1. </summary>
        public static DhGroup DHGroup1 { get; } = new DhGroup(DHGroup1Value);
        /// <summary> DHGroup2. </summary>
        public static DhGroup DHGroup2 { get; } = new DhGroup(DHGroup2Value);
        /// <summary> DHGroup14. </summary>
        public static DhGroup DHGroup14 { get; } = new DhGroup(DHGroup14Value);
        /// <summary> DHGroup2048. </summary>
        public static DhGroup DHGroup2048 { get; } = new DhGroup(DHGroup2048Value);
        /// <summary> ECP256. </summary>
        public static DhGroup ECP256 { get; } = new DhGroup(ECP256Value);
        /// <summary> ECP384. </summary>
        public static DhGroup ECP384 { get; } = new DhGroup(ECP384Value);
        /// <summary> DHGroup24. </summary>
        public static DhGroup DHGroup24 { get; } = new DhGroup(DHGroup24Value);
        /// <summary> Determines if two <see cref="DhGroup"/> values are the same. </summary>
        public static bool operator ==(DhGroup left, DhGroup right) => left.Equals(right);
        /// <summary> Determines if two <see cref="DhGroup"/> values are not the same. </summary>
        public static bool operator !=(DhGroup left, DhGroup right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="DhGroup"/>. </summary>
        public static implicit operator DhGroup(string value) => new DhGroup(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is DhGroup other && Equals(other);
        /// <inheritdoc />
        public bool Equals(DhGroup other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
