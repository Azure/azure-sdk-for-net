// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Network.Models
{
    /// <summary> Routing rule collection local route setting. </summary>
    public readonly partial struct RoutingRuleCollectionLocalRouteSetting : IEquatable<RoutingRuleCollectionLocalRouteSetting>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="RoutingRuleCollectionLocalRouteSetting"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public RoutingRuleCollectionLocalRouteSetting(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string NotSpecifiedValue = "NotSpecified";
        private const string DirectRoutingWithinVNetValue = "DirectRoutingWithinVNet";
        private const string DirectRoutingWithinSubnetValue = "DirectRoutingWithinSubnet";

        /// <summary> NotSpecified. </summary>
        public static RoutingRuleCollectionLocalRouteSetting NotSpecified { get; } = new RoutingRuleCollectionLocalRouteSetting(NotSpecifiedValue);
        /// <summary> DirectRoutingWithinVNet. </summary>
        public static RoutingRuleCollectionLocalRouteSetting DirectRoutingWithinVNet { get; } = new RoutingRuleCollectionLocalRouteSetting(DirectRoutingWithinVNetValue);
        /// <summary> DirectRoutingWithinSubnet. </summary>
        public static RoutingRuleCollectionLocalRouteSetting DirectRoutingWithinSubnet { get; } = new RoutingRuleCollectionLocalRouteSetting(DirectRoutingWithinSubnetValue);
        /// <summary> Determines if two <see cref="RoutingRuleCollectionLocalRouteSetting"/> values are the same. </summary>
        public static bool operator ==(RoutingRuleCollectionLocalRouteSetting left, RoutingRuleCollectionLocalRouteSetting right) => left.Equals(right);
        /// <summary> Determines if two <see cref="RoutingRuleCollectionLocalRouteSetting"/> values are not the same. </summary>
        public static bool operator !=(RoutingRuleCollectionLocalRouteSetting left, RoutingRuleCollectionLocalRouteSetting right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="RoutingRuleCollectionLocalRouteSetting"/>. </summary>
        public static implicit operator RoutingRuleCollectionLocalRouteSetting(string value) => new RoutingRuleCollectionLocalRouteSetting(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is RoutingRuleCollectionLocalRouteSetting other && Equals(other);
        /// <inheritdoc />
        public bool Equals(RoutingRuleCollectionLocalRouteSetting other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
