// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.ResourceManager.Network.Models
{
    /// <summary> Define user session identifier group by clauses. </summary>
    public partial class GroupByUserSession
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="GroupByUserSession"/>. </summary>
        /// <param name="groupByVariables"> List of group by clause variables. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="groupByVariables"/> is null. </exception>
        public GroupByUserSession(IEnumerable<GroupByVariable> groupByVariables)
        {
            Argument.AssertNotNull(groupByVariables, nameof(groupByVariables));

            GroupByVariables = groupByVariables.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="GroupByUserSession"/>. </summary>
        /// <param name="groupByVariables"> List of group by clause variables. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal GroupByUserSession(IList<GroupByVariable> groupByVariables, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            GroupByVariables = groupByVariables;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="GroupByUserSession"/> for deserialization. </summary>
        internal GroupByUserSession()
        {
        }

        /// <summary> List of group by clause variables. </summary>
        public IList<GroupByVariable> GroupByVariables { get; }
    }
}
