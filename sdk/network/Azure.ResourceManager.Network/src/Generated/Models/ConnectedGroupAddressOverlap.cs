// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Network.Models
{
    /// <summary> Behavior to handle overlapped IP address space among members of the connected group of the connectivity configuration. </summary>
    public readonly partial struct ConnectedGroupAddressOverlap : IEquatable<ConnectedGroupAddressOverlap>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="ConnectedGroupAddressOverlap"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ConnectedGroupAddressOverlap(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string AllowedValue = "Allowed";
        private const string DisallowedValue = "Disallowed";

        /// <summary> Default. Allows connected group members to have overlapping IP address space. </summary>
        public static ConnectedGroupAddressOverlap Allowed { get; } = new ConnectedGroupAddressOverlap(AllowedValue);
        /// <summary> Strictly disallows connected group members from having overlapping IP address space. Prevents the addition of a virtual network with overlapping address to the connected group, blocks peering between a virtual network and a connected group member if any connected group member has an overlapping range, and restricts address space modifications that would introduce overlap. </summary>
        public static ConnectedGroupAddressOverlap Disallowed { get; } = new ConnectedGroupAddressOverlap(DisallowedValue);
        /// <summary> Determines if two <see cref="ConnectedGroupAddressOverlap"/> values are the same. </summary>
        public static bool operator ==(ConnectedGroupAddressOverlap left, ConnectedGroupAddressOverlap right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ConnectedGroupAddressOverlap"/> values are not the same. </summary>
        public static bool operator !=(ConnectedGroupAddressOverlap left, ConnectedGroupAddressOverlap right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="ConnectedGroupAddressOverlap"/>. </summary>
        public static implicit operator ConnectedGroupAddressOverlap(string value) => new ConnectedGroupAddressOverlap(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ConnectedGroupAddressOverlap other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ConnectedGroupAddressOverlap other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
