// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Network.Models
{
    /// <summary> Describes the connection monitor endpoint scope. </summary>
    public partial class ConnectionMonitorEndpointScope
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ConnectionMonitorEndpointScope"/>. </summary>
        public ConnectionMonitorEndpointScope()
        {
            Include = new ChangeTrackingList<ConnectionMonitorEndpointScopeItem>();
            Exclude = new ChangeTrackingList<ConnectionMonitorEndpointScopeItem>();
        }

        /// <summary> Initializes a new instance of <see cref="ConnectionMonitorEndpointScope"/>. </summary>
        /// <param name="include"> List of items which needs to be included to the endpoint scope. </param>
        /// <param name="exclude"> List of items which needs to be excluded from the endpoint scope. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ConnectionMonitorEndpointScope(IList<ConnectionMonitorEndpointScopeItem> include, IList<ConnectionMonitorEndpointScopeItem> exclude, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Include = include;
            Exclude = exclude;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> List of items which needs to be included to the endpoint scope. </summary>
        public IList<ConnectionMonitorEndpointScopeItem> Include { get; }
        /// <summary> List of items which needs to be excluded from the endpoint scope. </summary>
        public IList<ConnectionMonitorEndpointScopeItem> Exclude { get; }
    }
}
