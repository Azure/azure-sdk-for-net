// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Network.Models
{
    /// <summary> Connection state snapshot. </summary>
    public partial class ConnectionStateSnapshot
    {
        /// <summary> Initializes a new instance of ConnectionStateSnapshot. </summary>
        internal ConnectionStateSnapshot()
        {
            Hops = new ChangeTrackingList<ConnectivityHop>();
        }

        /// <summary> Initializes a new instance of ConnectionStateSnapshot. </summary>
        /// <param name="connectionState"> The connection state. </param>
        /// <param name="startTime"> The start time of the connection snapshot. </param>
        /// <param name="endTime"> The end time of the connection snapshot. </param>
        /// <param name="evaluationState"> Connectivity analysis evaluation state. </param>
        /// <param name="avgLatencyInMs"> Average latency in ms. </param>
        /// <param name="minLatencyInMs"> Minimum latency in ms. </param>
        /// <param name="maxLatencyInMs"> Maximum latency in ms. </param>
        /// <param name="probesSent"> The number of sent probes. </param>
        /// <param name="probesFailed"> The number of failed probes. </param>
        /// <param name="hops"> List of hops between the source and the destination. </param>
        internal ConnectionStateSnapshot(ConnectionState? connectionState, DateTimeOffset? startTime, DateTimeOffset? endTime, EvaluationState? evaluationState, int? avgLatencyInMs, int? minLatencyInMs, int? maxLatencyInMs, int? probesSent, int? probesFailed, IReadOnlyList<ConnectivityHop> hops)
        {
            ConnectionState = connectionState;
            StartTime = startTime;
            EndTime = endTime;
            EvaluationState = evaluationState;
            AvgLatencyInMs = avgLatencyInMs;
            MinLatencyInMs = minLatencyInMs;
            MaxLatencyInMs = maxLatencyInMs;
            ProbesSent = probesSent;
            ProbesFailed = probesFailed;
            Hops = hops;
        }

        /// <summary> The connection state. </summary>
        public ConnectionState? ConnectionState { get; }
        /// <summary> The start time of the connection snapshot. </summary>
        public DateTimeOffset? StartTime { get; }
        /// <summary> The end time of the connection snapshot. </summary>
        public DateTimeOffset? EndTime { get; }
        /// <summary> Connectivity analysis evaluation state. </summary>
        public EvaluationState? EvaluationState { get; }
        /// <summary> Average latency in ms. </summary>
        public int? AvgLatencyInMs { get; }
        /// <summary> Minimum latency in ms. </summary>
        public int? MinLatencyInMs { get; }
        /// <summary> Maximum latency in ms. </summary>
        public int? MaxLatencyInMs { get; }
        /// <summary> The number of sent probes. </summary>
        public int? ProbesSent { get; }
        /// <summary> The number of failed probes. </summary>
        public int? ProbesFailed { get; }
        /// <summary> List of hops between the source and the destination. </summary>
        public IReadOnlyList<ConnectivityHop> Hops { get; }
    }
}
