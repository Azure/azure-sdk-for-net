// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Network.Models
{
    /// <summary> Information about an issue encountered in the process of checking for connectivity. </summary>
    public partial class ConnectivityIssueInfo
    {
        /// <summary> Initializes a new instance of <see cref="ConnectivityIssueInfo"/>. </summary>
        internal ConnectivityIssueInfo()
        {
            Contexts = new ChangeTrackingList<IDictionary<string, string>>();
        }

        /// <summary> Initializes a new instance of <see cref="ConnectivityIssueInfo"/>. </summary>
        /// <param name="origin"> The origin of the issue. </param>
        /// <param name="severity"> The severity of the issue. </param>
        /// <param name="connectivityIssueType"> The type of issue. </param>
        /// <param name="contexts"> Provides additional context on the issue. </param>
        internal ConnectivityIssueInfo(IssueOrigin? origin, IssueSeverity? severity, ConnectivityIssueType? connectivityIssueType, IReadOnlyList<IDictionary<string, string>> contexts)
        {
            Origin = origin;
            Severity = severity;
            ConnectivityIssueType = connectivityIssueType;
            Contexts = contexts;
        }

        /// <summary> The origin of the issue. </summary>
        public IssueOrigin? Origin { get; }
        /// <summary> The severity of the issue. </summary>
        public IssueSeverity? Severity { get; }
        /// <summary> The type of issue. </summary>
        public ConnectivityIssueType? ConnectivityIssueType { get; }
        /// <summary> Provides additional context on the issue. </summary>
        public IReadOnlyList<IDictionary<string, string>> Contexts { get; }
    }
}
