// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure;
using Azure.Core;
using Azure.ResourceManager.Network.Models;

namespace Azure.ResourceManager.Network
{
    /// <summary> A class representing the BgpConnection data model. </summary>
    public partial class BgpConnectionData : NetworkResourceData
    {
        /// <summary> Initializes a new instance of BgpConnectionData. </summary>
        public BgpConnectionData()
        {
        }

        /// <summary> Initializes a new instance of BgpConnectionData. </summary>
        /// <param name="id"> Resource ID. </param>
        /// <param name="name"> Resource name. </param>
        /// <param name="resourceType"> Resource type. </param>
        /// <param name="etag"> A unique read-only string that changes whenever the resource is updated. </param>
        /// <param name="peerAsn"> Peer ASN. </param>
        /// <param name="peerIP"> Peer IP. </param>
        /// <param name="provisioningState"> The provisioning state of the resource. </param>
        /// <param name="connectionState"> The current state of the VirtualHub to Peer. </param>
        internal BgpConnectionData(ResourceIdentifier id, string name, ResourceType? resourceType, ETag? etag, long? peerAsn, string peerIP, NetworkProvisioningState? provisioningState, HubBgpConnectionStatus? connectionState) : base(id, name, resourceType)
        {
            ETag = etag;
            PeerAsn = peerAsn;
            PeerIP = peerIP;
            ProvisioningState = provisioningState;
            ConnectionState = connectionState;
        }

        /// <summary> A unique read-only string that changes whenever the resource is updated. </summary>
        public ETag? ETag { get; }
        /// <summary> Peer ASN. </summary>
        public long? PeerAsn { get; set; }
        /// <summary> Peer IP. </summary>
        public string PeerIP { get; set; }
        /// <summary> The provisioning state of the resource. </summary>
        public NetworkProvisioningState? ProvisioningState { get; }
        /// <summary> The current state of the VirtualHub to Peer. </summary>
        public HubBgpConnectionStatus? ConnectionState { get; }
    }
}
