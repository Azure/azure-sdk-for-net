// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager;

namespace Azure.ResourceManager.Network
{
    /// <summary> A class to add extension methods to ArmClient. </summary>
    public static partial class ArmClientExtensions
    {
        #region ApplicationGateway
        /// <summary> Gets an object representing a ApplicationGateway along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApplicationGateway" /> object. </returns>
        public static ApplicationGateway GetApplicationGateway(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApplicationGateway.ValidateResourceId(id);
                return new ApplicationGateway(client, id);
            }
            );
        }
        #endregion

        #region ApplicationGatewayPrivateEndpointConnection
        /// <summary> Gets an object representing a ApplicationGatewayPrivateEndpointConnection along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApplicationGatewayPrivateEndpointConnection" /> object. </returns>
        public static ApplicationGatewayPrivateEndpointConnection GetApplicationGatewayPrivateEndpointConnection(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApplicationGatewayPrivateEndpointConnection.ValidateResourceId(id);
                return new ApplicationGatewayPrivateEndpointConnection(client, id);
            }
            );
        }
        #endregion

        #region ApplicationSecurityGroup
        /// <summary> Gets an object representing a ApplicationSecurityGroup along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ApplicationSecurityGroup" /> object. </returns>
        public static ApplicationSecurityGroup GetApplicationSecurityGroup(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ApplicationSecurityGroup.ValidateResourceId(id);
                return new ApplicationSecurityGroup(client, id);
            }
            );
        }
        #endregion

        #region AzureFirewall
        /// <summary> Gets an object representing a AzureFirewall along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AzureFirewall" /> object. </returns>
        public static AzureFirewall GetAzureFirewall(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                AzureFirewall.ValidateResourceId(id);
                return new AzureFirewall(client, id);
            }
            );
        }
        #endregion

        #region AzureWebCategory
        /// <summary> Gets an object representing a AzureWebCategory along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AzureWebCategory" /> object. </returns>
        public static AzureWebCategory GetAzureWebCategory(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                AzureWebCategory.ValidateResourceId(id);
                return new AzureWebCategory(client, id);
            }
            );
        }
        #endregion

        #region BastionHost
        /// <summary> Gets an object representing a BastionHost along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="BastionHost" /> object. </returns>
        public static BastionHost GetBastionHost(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                BastionHost.ValidateResourceId(id);
                return new BastionHost(client, id);
            }
            );
        }
        #endregion

        #region CustomIPPrefix
        /// <summary> Gets an object representing a CustomIPPrefix along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="CustomIPPrefix" /> object. </returns>
        public static CustomIPPrefix GetCustomIPPrefix(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                CustomIPPrefix.ValidateResourceId(id);
                return new CustomIPPrefix(client, id);
            }
            );
        }
        #endregion

        #region DdosCustomPolicy
        /// <summary> Gets an object representing a DdosCustomPolicy along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DdosCustomPolicy" /> object. </returns>
        public static DdosCustomPolicy GetDdosCustomPolicy(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                DdosCustomPolicy.ValidateResourceId(id);
                return new DdosCustomPolicy(client, id);
            }
            );
        }
        #endregion

        #region DdosProtectionPlan
        /// <summary> Gets an object representing a DdosProtectionPlan along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DdosProtectionPlan" /> object. </returns>
        public static DdosProtectionPlan GetDdosProtectionPlan(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                DdosProtectionPlan.ValidateResourceId(id);
                return new DdosProtectionPlan(client, id);
            }
            );
        }
        #endregion

        #region DscpConfiguration
        /// <summary> Gets an object representing a DscpConfiguration along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DscpConfiguration" /> object. </returns>
        public static DscpConfiguration GetDscpConfiguration(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                DscpConfiguration.ValidateResourceId(id);
                return new DscpConfiguration(client, id);
            }
            );
        }
        #endregion

        #region ExpressRouteCircuitAuthorization
        /// <summary> Gets an object representing a ExpressRouteCircuitAuthorization along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ExpressRouteCircuitAuthorization" /> object. </returns>
        public static ExpressRouteCircuitAuthorization GetExpressRouteCircuitAuthorization(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ExpressRouteCircuitAuthorization.ValidateResourceId(id);
                return new ExpressRouteCircuitAuthorization(client, id);
            }
            );
        }
        #endregion

        #region ExpressRouteCircuitPeering
        /// <summary> Gets an object representing a ExpressRouteCircuitPeering along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ExpressRouteCircuitPeering" /> object. </returns>
        public static ExpressRouteCircuitPeering GetExpressRouteCircuitPeering(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ExpressRouteCircuitPeering.ValidateResourceId(id);
                return new ExpressRouteCircuitPeering(client, id);
            }
            );
        }
        #endregion

        #region ExpressRouteCircuitConnection
        /// <summary> Gets an object representing a ExpressRouteCircuitConnection along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ExpressRouteCircuitConnection" /> object. </returns>
        public static ExpressRouteCircuitConnection GetExpressRouteCircuitConnection(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ExpressRouteCircuitConnection.ValidateResourceId(id);
                return new ExpressRouteCircuitConnection(client, id);
            }
            );
        }
        #endregion

        #region PeerExpressRouteCircuitConnection
        /// <summary> Gets an object representing a PeerExpressRouteCircuitConnection along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PeerExpressRouteCircuitConnection" /> object. </returns>
        public static PeerExpressRouteCircuitConnection GetPeerExpressRouteCircuitConnection(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                PeerExpressRouteCircuitConnection.ValidateResourceId(id);
                return new PeerExpressRouteCircuitConnection(client, id);
            }
            );
        }
        #endregion

        #region ExpressRouteCircuit
        /// <summary> Gets an object representing a ExpressRouteCircuit along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ExpressRouteCircuit" /> object. </returns>
        public static ExpressRouteCircuit GetExpressRouteCircuit(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ExpressRouteCircuit.ValidateResourceId(id);
                return new ExpressRouteCircuit(client, id);
            }
            );
        }
        #endregion

        #region ExpressRouteCrossConnection
        /// <summary> Gets an object representing a ExpressRouteCrossConnection along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ExpressRouteCrossConnection" /> object. </returns>
        public static ExpressRouteCrossConnection GetExpressRouteCrossConnection(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ExpressRouteCrossConnection.ValidateResourceId(id);
                return new ExpressRouteCrossConnection(client, id);
            }
            );
        }
        #endregion

        #region ExpressRouteCrossConnectionPeering
        /// <summary> Gets an object representing a ExpressRouteCrossConnectionPeering along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ExpressRouteCrossConnectionPeering" /> object. </returns>
        public static ExpressRouteCrossConnectionPeering GetExpressRouteCrossConnectionPeering(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ExpressRouteCrossConnectionPeering.ValidateResourceId(id);
                return new ExpressRouteCrossConnectionPeering(client, id);
            }
            );
        }
        #endregion

        #region ExpressRoutePortsLocation
        /// <summary> Gets an object representing a ExpressRoutePortsLocation along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ExpressRoutePortsLocation" /> object. </returns>
        public static ExpressRoutePortsLocation GetExpressRoutePortsLocation(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ExpressRoutePortsLocation.ValidateResourceId(id);
                return new ExpressRoutePortsLocation(client, id);
            }
            );
        }
        #endregion

        #region ExpressRoutePort
        /// <summary> Gets an object representing a ExpressRoutePort along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ExpressRoutePort" /> object. </returns>
        public static ExpressRoutePort GetExpressRoutePort(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ExpressRoutePort.ValidateResourceId(id);
                return new ExpressRoutePort(client, id);
            }
            );
        }
        #endregion

        #region ExpressRouteLink
        /// <summary> Gets an object representing a ExpressRouteLink along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ExpressRouteLink" /> object. </returns>
        public static ExpressRouteLink GetExpressRouteLink(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ExpressRouteLink.ValidateResourceId(id);
                return new ExpressRouteLink(client, id);
            }
            );
        }
        #endregion

        #region FirewallPolicy
        /// <summary> Gets an object representing a FirewallPolicy along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="FirewallPolicy" /> object. </returns>
        public static FirewallPolicy GetFirewallPolicy(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                FirewallPolicy.ValidateResourceId(id);
                return new FirewallPolicy(client, id);
            }
            );
        }
        #endregion

        #region FirewallPolicyRuleCollectionGroup
        /// <summary> Gets an object representing a FirewallPolicyRuleCollectionGroup along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="FirewallPolicyRuleCollectionGroup" /> object. </returns>
        public static FirewallPolicyRuleCollectionGroup GetFirewallPolicyRuleCollectionGroup(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                FirewallPolicyRuleCollectionGroup.ValidateResourceId(id);
                return new FirewallPolicyRuleCollectionGroup(client, id);
            }
            );
        }
        #endregion

        #region IPAllocation
        /// <summary> Gets an object representing a IPAllocation along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="IPAllocation" /> object. </returns>
        public static IPAllocation GetIPAllocation(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                IPAllocation.ValidateResourceId(id);
                return new IPAllocation(client, id);
            }
            );
        }
        #endregion

        #region IPGroup
        /// <summary> Gets an object representing a IPGroup along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="IPGroup" /> object. </returns>
        public static IPGroup GetIPGroup(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                IPGroup.ValidateResourceId(id);
                return new IPGroup(client, id);
            }
            );
        }
        #endregion

        #region LoadBalancer
        /// <summary> Gets an object representing a LoadBalancer along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="LoadBalancer" /> object. </returns>
        public static LoadBalancer GetLoadBalancer(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                LoadBalancer.ValidateResourceId(id);
                return new LoadBalancer(client, id);
            }
            );
        }
        #endregion

        #region BackendAddressPool
        /// <summary> Gets an object representing a BackendAddressPool along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="BackendAddressPool" /> object. </returns>
        public static BackendAddressPool GetBackendAddressPool(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                BackendAddressPool.ValidateResourceId(id);
                return new BackendAddressPool(client, id);
            }
            );
        }
        #endregion

        #region FrontendIPConfiguration
        /// <summary> Gets an object representing a FrontendIPConfiguration along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="FrontendIPConfiguration" /> object. </returns>
        public static FrontendIPConfiguration GetFrontendIPConfiguration(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                FrontendIPConfiguration.ValidateResourceId(id);
                return new FrontendIPConfiguration(client, id);
            }
            );
        }
        #endregion

        #region InboundNatRule
        /// <summary> Gets an object representing a InboundNatRule along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="InboundNatRule" /> object. </returns>
        public static InboundNatRule GetInboundNatRule(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                InboundNatRule.ValidateResourceId(id);
                return new InboundNatRule(client, id);
            }
            );
        }
        #endregion

        #region LoadBalancingRule
        /// <summary> Gets an object representing a LoadBalancingRule along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="LoadBalancingRule" /> object. </returns>
        public static LoadBalancingRule GetLoadBalancingRule(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                LoadBalancingRule.ValidateResourceId(id);
                return new LoadBalancingRule(client, id);
            }
            );
        }
        #endregion

        #region OutboundRule
        /// <summary> Gets an object representing a OutboundRule along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="OutboundRule" /> object. </returns>
        public static OutboundRule GetOutboundRule(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                OutboundRule.ValidateResourceId(id);
                return new OutboundRule(client, id);
            }
            );
        }
        #endregion

        #region Probe
        /// <summary> Gets an object representing a Probe along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="Probe" /> object. </returns>
        public static Probe GetProbe(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                Probe.ValidateResourceId(id);
                return new Probe(client, id);
            }
            );
        }
        #endregion

        #region NatGateway
        /// <summary> Gets an object representing a NatGateway along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="NatGateway" /> object. </returns>
        public static NatGateway GetNatGateway(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                NatGateway.ValidateResourceId(id);
                return new NatGateway(client, id);
            }
            );
        }
        #endregion

        #region NetworkInterface
        /// <summary> Gets an object representing a NetworkInterface along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="NetworkInterface" /> object. </returns>
        public static NetworkInterface GetNetworkInterface(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                NetworkInterface.ValidateResourceId(id);
                return new NetworkInterface(client, id);
            }
            );
        }
        #endregion

        #region NetworkInterfaceIPConfiguration
        /// <summary> Gets an object representing a NetworkInterfaceIPConfiguration along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="NetworkInterfaceIPConfiguration" /> object. </returns>
        public static NetworkInterfaceIPConfiguration GetNetworkInterfaceIPConfiguration(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                NetworkInterfaceIPConfiguration.ValidateResourceId(id);
                return new NetworkInterfaceIPConfiguration(client, id);
            }
            );
        }
        #endregion

        #region NetworkInterfaceTapConfiguration
        /// <summary> Gets an object representing a NetworkInterfaceTapConfiguration along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="NetworkInterfaceTapConfiguration" /> object. </returns>
        public static NetworkInterfaceTapConfiguration GetNetworkInterfaceTapConfiguration(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                NetworkInterfaceTapConfiguration.ValidateResourceId(id);
                return new NetworkInterfaceTapConfiguration(client, id);
            }
            );
        }
        #endregion

        #region NetworkProfile
        /// <summary> Gets an object representing a NetworkProfile along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="NetworkProfile" /> object. </returns>
        public static NetworkProfile GetNetworkProfile(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                NetworkProfile.ValidateResourceId(id);
                return new NetworkProfile(client, id);
            }
            );
        }
        #endregion

        #region NetworkSecurityGroup
        /// <summary> Gets an object representing a NetworkSecurityGroup along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="NetworkSecurityGroup" /> object. </returns>
        public static NetworkSecurityGroup GetNetworkSecurityGroup(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                NetworkSecurityGroup.ValidateResourceId(id);
                return new NetworkSecurityGroup(client, id);
            }
            );
        }
        #endregion

        #region SecurityRule
        /// <summary> Gets an object representing a SecurityRule along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SecurityRule" /> object. </returns>
        public static SecurityRule GetSecurityRule(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                SecurityRule.ValidateResourceId(id);
                return new SecurityRule(client, id);
            }
            );
        }
        #endregion

        #region DefaultSecurityRule
        /// <summary> Gets an object representing a DefaultSecurityRule along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DefaultSecurityRule" /> object. </returns>
        public static DefaultSecurityRule GetDefaultSecurityRule(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                DefaultSecurityRule.ValidateResourceId(id);
                return new DefaultSecurityRule(client, id);
            }
            );
        }
        #endregion

        #region NetworkVirtualAppliance
        /// <summary> Gets an object representing a NetworkVirtualAppliance along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="NetworkVirtualAppliance" /> object. </returns>
        public static NetworkVirtualAppliance GetNetworkVirtualAppliance(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                NetworkVirtualAppliance.ValidateResourceId(id);
                return new NetworkVirtualAppliance(client, id);
            }
            );
        }
        #endregion

        #region VirtualApplianceSite
        /// <summary> Gets an object representing a VirtualApplianceSite along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="VirtualApplianceSite" /> object. </returns>
        public static VirtualApplianceSite GetVirtualApplianceSite(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                VirtualApplianceSite.ValidateResourceId(id);
                return new VirtualApplianceSite(client, id);
            }
            );
        }
        #endregion

        #region NetworkVirtualApplianceSku
        /// <summary> Gets an object representing a NetworkVirtualApplianceSku along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="NetworkVirtualApplianceSku" /> object. </returns>
        public static NetworkVirtualApplianceSku GetNetworkVirtualApplianceSku(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                NetworkVirtualApplianceSku.ValidateResourceId(id);
                return new NetworkVirtualApplianceSku(client, id);
            }
            );
        }
        #endregion

        #region NetworkWatcher
        /// <summary> Gets an object representing a NetworkWatcher along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="NetworkWatcher" /> object. </returns>
        public static NetworkWatcher GetNetworkWatcher(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                NetworkWatcher.ValidateResourceId(id);
                return new NetworkWatcher(client, id);
            }
            );
        }
        #endregion

        #region PacketCapture
        /// <summary> Gets an object representing a PacketCapture along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PacketCapture" /> object. </returns>
        public static PacketCapture GetPacketCapture(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                PacketCapture.ValidateResourceId(id);
                return new PacketCapture(client, id);
            }
            );
        }
        #endregion

        #region ConnectionMonitor
        /// <summary> Gets an object representing a ConnectionMonitor along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ConnectionMonitor" /> object. </returns>
        public static ConnectionMonitor GetConnectionMonitor(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ConnectionMonitor.ValidateResourceId(id);
                return new ConnectionMonitor(client, id);
            }
            );
        }
        #endregion

        #region FlowLog
        /// <summary> Gets an object representing a FlowLog along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="FlowLog" /> object. </returns>
        public static FlowLog GetFlowLog(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                FlowLog.ValidateResourceId(id);
                return new FlowLog(client, id);
            }
            );
        }
        #endregion

        #region PrivateEndpoint
        /// <summary> Gets an object representing a PrivateEndpoint along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PrivateEndpoint" /> object. </returns>
        public static PrivateEndpoint GetPrivateEndpoint(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                PrivateEndpoint.ValidateResourceId(id);
                return new PrivateEndpoint(client, id);
            }
            );
        }
        #endregion

        #region PrivateDnsZoneGroup
        /// <summary> Gets an object representing a PrivateDnsZoneGroup along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PrivateDnsZoneGroup" /> object. </returns>
        public static PrivateDnsZoneGroup GetPrivateDnsZoneGroup(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                PrivateDnsZoneGroup.ValidateResourceId(id);
                return new PrivateDnsZoneGroup(client, id);
            }
            );
        }
        #endregion

        #region PrivateLinkService
        /// <summary> Gets an object representing a PrivateLinkService along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PrivateLinkService" /> object. </returns>
        public static PrivateLinkService GetPrivateLinkService(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                PrivateLinkService.ValidateResourceId(id);
                return new PrivateLinkService(client, id);
            }
            );
        }
        #endregion

        #region PrivateEndpointConnection
        /// <summary> Gets an object representing a PrivateEndpointConnection along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PrivateEndpointConnection" /> object. </returns>
        public static PrivateEndpointConnection GetPrivateEndpointConnection(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                PrivateEndpointConnection.ValidateResourceId(id);
                return new PrivateEndpointConnection(client, id);
            }
            );
        }
        #endregion

        #region PublicIPAddress
        /// <summary> Gets an object representing a PublicIPAddress along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PublicIPAddress" /> object. </returns>
        public static PublicIPAddress GetPublicIPAddress(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                PublicIPAddress.ValidateResourceId(id);
                return new PublicIPAddress(client, id);
            }
            );
        }
        #endregion

        #region PublicIPPrefix
        /// <summary> Gets an object representing a PublicIPPrefix along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PublicIPPrefix" /> object. </returns>
        public static PublicIPPrefix GetPublicIPPrefix(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                PublicIPPrefix.ValidateResourceId(id);
                return new PublicIPPrefix(client, id);
            }
            );
        }
        #endregion

        #region RouteFilter
        /// <summary> Gets an object representing a RouteFilter along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RouteFilter" /> object. </returns>
        public static RouteFilter GetRouteFilter(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                RouteFilter.ValidateResourceId(id);
                return new RouteFilter(client, id);
            }
            );
        }
        #endregion

        #region RouteFilterRule
        /// <summary> Gets an object representing a RouteFilterRule along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RouteFilterRule" /> object. </returns>
        public static RouteFilterRule GetRouteFilterRule(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                RouteFilterRule.ValidateResourceId(id);
                return new RouteFilterRule(client, id);
            }
            );
        }
        #endregion

        #region RouteTable
        /// <summary> Gets an object representing a RouteTable along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RouteTable" /> object. </returns>
        public static RouteTable GetRouteTable(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                RouteTable.ValidateResourceId(id);
                return new RouteTable(client, id);
            }
            );
        }
        #endregion

        #region Route
        /// <summary> Gets an object representing a Route along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="Route" /> object. </returns>
        public static Route GetRoute(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                Route.ValidateResourceId(id);
                return new Route(client, id);
            }
            );
        }
        #endregion

        #region SecurityPartnerProvider
        /// <summary> Gets an object representing a SecurityPartnerProvider along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SecurityPartnerProvider" /> object. </returns>
        public static SecurityPartnerProvider GetSecurityPartnerProvider(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                SecurityPartnerProvider.ValidateResourceId(id);
                return new SecurityPartnerProvider(client, id);
            }
            );
        }
        #endregion

        #region ServiceEndpointPolicy
        /// <summary> Gets an object representing a ServiceEndpointPolicy along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceEndpointPolicy" /> object. </returns>
        public static ServiceEndpointPolicy GetServiceEndpointPolicy(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ServiceEndpointPolicy.ValidateResourceId(id);
                return new ServiceEndpointPolicy(client, id);
            }
            );
        }
        #endregion

        #region ServiceEndpointPolicyDefinition
        /// <summary> Gets an object representing a ServiceEndpointPolicyDefinition along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServiceEndpointPolicyDefinition" /> object. </returns>
        public static ServiceEndpointPolicyDefinition GetServiceEndpointPolicyDefinition(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ServiceEndpointPolicyDefinition.ValidateResourceId(id);
                return new ServiceEndpointPolicyDefinition(client, id);
            }
            );
        }
        #endregion

        #region VirtualNetwork
        /// <summary> Gets an object representing a VirtualNetwork along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="VirtualNetwork" /> object. </returns>
        public static VirtualNetwork GetVirtualNetwork(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                VirtualNetwork.ValidateResourceId(id);
                return new VirtualNetwork(client, id);
            }
            );
        }
        #endregion

        #region Subnet
        /// <summary> Gets an object representing a Subnet along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="Subnet" /> object. </returns>
        public static Subnet GetSubnet(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                Subnet.ValidateResourceId(id);
                return new Subnet(client, id);
            }
            );
        }
        #endregion

        #region VirtualNetworkPeering
        /// <summary> Gets an object representing a VirtualNetworkPeering along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="VirtualNetworkPeering" /> object. </returns>
        public static VirtualNetworkPeering GetVirtualNetworkPeering(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                VirtualNetworkPeering.ValidateResourceId(id);
                return new VirtualNetworkPeering(client, id);
            }
            );
        }
        #endregion

        #region VirtualNetworkGateway
        /// <summary> Gets an object representing a VirtualNetworkGateway along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="VirtualNetworkGateway" /> object. </returns>
        public static VirtualNetworkGateway GetVirtualNetworkGateway(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                VirtualNetworkGateway.ValidateResourceId(id);
                return new VirtualNetworkGateway(client, id);
            }
            );
        }
        #endregion

        #region VirtualNetworkGatewayConnection
        /// <summary> Gets an object representing a VirtualNetworkGatewayConnection along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="VirtualNetworkGatewayConnection" /> object. </returns>
        public static VirtualNetworkGatewayConnection GetVirtualNetworkGatewayConnection(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                VirtualNetworkGatewayConnection.ValidateResourceId(id);
                return new VirtualNetworkGatewayConnection(client, id);
            }
            );
        }
        #endregion

        #region LocalNetworkGateway
        /// <summary> Gets an object representing a LocalNetworkGateway along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="LocalNetworkGateway" /> object. </returns>
        public static LocalNetworkGateway GetLocalNetworkGateway(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                LocalNetworkGateway.ValidateResourceId(id);
                return new LocalNetworkGateway(client, id);
            }
            );
        }
        #endregion

        #region VirtualNetworkGatewayNatRule
        /// <summary> Gets an object representing a VirtualNetworkGatewayNatRule along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="VirtualNetworkGatewayNatRule" /> object. </returns>
        public static VirtualNetworkGatewayNatRule GetVirtualNetworkGatewayNatRule(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                VirtualNetworkGatewayNatRule.ValidateResourceId(id);
                return new VirtualNetworkGatewayNatRule(client, id);
            }
            );
        }
        #endregion

        #region VirtualNetworkTap
        /// <summary> Gets an object representing a VirtualNetworkTap along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="VirtualNetworkTap" /> object. </returns>
        public static VirtualNetworkTap GetVirtualNetworkTap(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                VirtualNetworkTap.ValidateResourceId(id);
                return new VirtualNetworkTap(client, id);
            }
            );
        }
        #endregion

        #region VirtualRouter
        /// <summary> Gets an object representing a VirtualRouter along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="VirtualRouter" /> object. </returns>
        public static VirtualRouter GetVirtualRouter(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                VirtualRouter.ValidateResourceId(id);
                return new VirtualRouter(client, id);
            }
            );
        }
        #endregion

        #region VirtualRouterPeering
        /// <summary> Gets an object representing a VirtualRouterPeering along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="VirtualRouterPeering" /> object. </returns>
        public static VirtualRouterPeering GetVirtualRouterPeering(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                VirtualRouterPeering.ValidateResourceId(id);
                return new VirtualRouterPeering(client, id);
            }
            );
        }
        #endregion

        #region VirtualWan
        /// <summary> Gets an object representing a VirtualWan along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="VirtualWan" /> object. </returns>
        public static VirtualWan GetVirtualWan(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                VirtualWan.ValidateResourceId(id);
                return new VirtualWan(client, id);
            }
            );
        }
        #endregion

        #region VpnSite
        /// <summary> Gets an object representing a VpnSite along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="VpnSite" /> object. </returns>
        public static VpnSite GetVpnSite(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                VpnSite.ValidateResourceId(id);
                return new VpnSite(client, id);
            }
            );
        }
        #endregion

        #region VpnSiteLink
        /// <summary> Gets an object representing a VpnSiteLink along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="VpnSiteLink" /> object. </returns>
        public static VpnSiteLink GetVpnSiteLink(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                VpnSiteLink.ValidateResourceId(id);
                return new VpnSiteLink(client, id);
            }
            );
        }
        #endregion

        #region VpnServerConfiguration
        /// <summary> Gets an object representing a VpnServerConfiguration along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="VpnServerConfiguration" /> object. </returns>
        public static VpnServerConfiguration GetVpnServerConfiguration(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                VpnServerConfiguration.ValidateResourceId(id);
                return new VpnServerConfiguration(client, id);
            }
            );
        }
        #endregion

        #region VirtualHub
        /// <summary> Gets an object representing a VirtualHub along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="VirtualHub" /> object. </returns>
        public static VirtualHub GetVirtualHub(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                VirtualHub.ValidateResourceId(id);
                return new VirtualHub(client, id);
            }
            );
        }
        #endregion

        #region HubVirtualNetworkConnection
        /// <summary> Gets an object representing a HubVirtualNetworkConnection along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="HubVirtualNetworkConnection" /> object. </returns>
        public static HubVirtualNetworkConnection GetHubVirtualNetworkConnection(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                HubVirtualNetworkConnection.ValidateResourceId(id);
                return new HubVirtualNetworkConnection(client, id);
            }
            );
        }
        #endregion

        #region VpnGateway
        /// <summary> Gets an object representing a VpnGateway along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="VpnGateway" /> object. </returns>
        public static VpnGateway GetVpnGateway(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                VpnGateway.ValidateResourceId(id);
                return new VpnGateway(client, id);
            }
            );
        }
        #endregion

        #region VpnConnection
        /// <summary> Gets an object representing a VpnConnection along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="VpnConnection" /> object. </returns>
        public static VpnConnection GetVpnConnection(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                VpnConnection.ValidateResourceId(id);
                return new VpnConnection(client, id);
            }
            );
        }
        #endregion

        #region VpnSiteLinkConnection
        /// <summary> Gets an object representing a VpnSiteLinkConnection along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="VpnSiteLinkConnection" /> object. </returns>
        public static VpnSiteLinkConnection GetVpnSiteLinkConnection(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                VpnSiteLinkConnection.ValidateResourceId(id);
                return new VpnSiteLinkConnection(client, id);
            }
            );
        }
        #endregion

        #region VpnGatewayNatRule
        /// <summary> Gets an object representing a VpnGatewayNatRule along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="VpnGatewayNatRule" /> object. </returns>
        public static VpnGatewayNatRule GetVpnGatewayNatRule(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                VpnGatewayNatRule.ValidateResourceId(id);
                return new VpnGatewayNatRule(client, id);
            }
            );
        }
        #endregion

        #region P2SVpnGateway
        /// <summary> Gets an object representing a P2SVpnGateway along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="P2SVpnGateway" /> object. </returns>
        public static P2SVpnGateway GetP2SVpnGateway(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                P2SVpnGateway.ValidateResourceId(id);
                return new P2SVpnGateway(client, id);
            }
            );
        }
        #endregion

        #region VirtualHubRouteTableV2
        /// <summary> Gets an object representing a VirtualHubRouteTableV2 along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="VirtualHubRouteTableV2" /> object. </returns>
        public static VirtualHubRouteTableV2 GetVirtualHubRouteTableV2(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                VirtualHubRouteTableV2.ValidateResourceId(id);
                return new VirtualHubRouteTableV2(client, id);
            }
            );
        }
        #endregion

        #region ExpressRouteGateway
        /// <summary> Gets an object representing a ExpressRouteGateway along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ExpressRouteGateway" /> object. </returns>
        public static ExpressRouteGateway GetExpressRouteGateway(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ExpressRouteGateway.ValidateResourceId(id);
                return new ExpressRouteGateway(client, id);
            }
            );
        }
        #endregion

        #region ExpressRouteConnection
        /// <summary> Gets an object representing a ExpressRouteConnection along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ExpressRouteConnection" /> object. </returns>
        public static ExpressRouteConnection GetExpressRouteConnection(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ExpressRouteConnection.ValidateResourceId(id);
                return new ExpressRouteConnection(client, id);
            }
            );
        }
        #endregion

        #region BgpConnection
        /// <summary> Gets an object representing a BgpConnection along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="BgpConnection" /> object. </returns>
        public static BgpConnection GetBgpConnection(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                BgpConnection.ValidateResourceId(id);
                return new BgpConnection(client, id);
            }
            );
        }
        #endregion

        #region HubIPConfiguration
        /// <summary> Gets an object representing a HubIPConfiguration along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="HubIPConfiguration" /> object. </returns>
        public static HubIPConfiguration GetHubIPConfiguration(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                HubIPConfiguration.ValidateResourceId(id);
                return new HubIPConfiguration(client, id);
            }
            );
        }
        #endregion

        #region HubRouteTable
        /// <summary> Gets an object representing a HubRouteTable along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="HubRouteTable" /> object. </returns>
        public static HubRouteTable GetHubRouteTable(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                HubRouteTable.ValidateResourceId(id);
                return new HubRouteTable(client, id);
            }
            );
        }
        #endregion

        #region WebApplicationFirewallPolicy
        /// <summary> Gets an object representing a WebApplicationFirewallPolicy along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="WebApplicationFirewallPolicy" /> object. </returns>
        public static WebApplicationFirewallPolicy GetWebApplicationFirewallPolicy(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                WebApplicationFirewallPolicy.ValidateResourceId(id);
                return new WebApplicationFirewallPolicy(client, id);
            }
            );
        }
        #endregion
    }
}
