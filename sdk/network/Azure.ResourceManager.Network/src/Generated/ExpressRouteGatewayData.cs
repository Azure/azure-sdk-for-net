// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.Network.Models;
using Azure.ResourceManager.Resources.Models;

namespace Azure.ResourceManager.Network
{
    /// <summary>
    /// A class representing the ExpressRouteGateway data model.
    /// ExpressRoute gateway resource.
    /// </summary>
    public partial class ExpressRouteGatewayData : NetworkTrackedResourceData
    {
        /// <summary> Initializes a new instance of <see cref="ExpressRouteGatewayData"/>. </summary>
        public ExpressRouteGatewayData()
        {
            ExpressRouteConnectionList = new ChangeTrackingList<ExpressRouteConnectionData>();
            Tags = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of <see cref="ExpressRouteGatewayData"/>. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}". </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="resourceType"> The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts". </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="etag"> A unique read-only string that changes whenever the resource is updated. </param>
        /// <param name="autoScaleConfiguration"> Configuration for auto scaling. </param>
        /// <param name="expressRouteConnectionList"> List of ExpressRoute connections to the ExpressRoute gateway. </param>
        /// <param name="provisioningState"> The provisioning state of the express route gateway resource. </param>
        /// <param name="virtualHub"> The Virtual Hub where the ExpressRoute gateway is or will be deployed. </param>
        /// <param name="allowNonVirtualWanTraffic"> Configures this gateway to accept traffic from non Virtual WAN networks. </param>
        /// <param name="location"> Resource location. </param>
        /// <param name="tags"> Resource tags. </param>
        internal ExpressRouteGatewayData(ResourceIdentifier id, string name, string resourceType, SystemData systemData, IDictionary<string, BinaryData> serializedAdditionalRawData, ETag? etag, ExpressRouteGatewayPropertiesAutoScaleConfiguration autoScaleConfiguration, IList<ExpressRouteConnectionData> expressRouteConnectionList, NetworkProvisioningState? provisioningState, WritableSubResource virtualHub, bool? allowNonVirtualWanTraffic, AzureLocation? location, IDictionary<string, string> tags) : base(id, name, resourceType, systemData, serializedAdditionalRawData)
        {
            ETag = etag;
            AutoScaleConfiguration = autoScaleConfiguration;
            ExpressRouteConnectionList = expressRouteConnectionList;
            ProvisioningState = provisioningState;
            VirtualHub = virtualHub;
            AllowNonVirtualWanTraffic = allowNonVirtualWanTraffic;
            Location = location;
            Tags = tags;
        }

        /// <summary> A unique read-only string that changes whenever the resource is updated. </summary>
        public ETag? ETag { get; }
        /// <summary> Configuration for auto scaling. </summary>
        internal ExpressRouteGatewayPropertiesAutoScaleConfiguration AutoScaleConfiguration { get; set; }
        /// <summary> Minimum and maximum number of scale units to deploy. </summary>
        public ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds AutoScaleBounds
        {
            get => AutoScaleConfiguration is null ? default : AutoScaleConfiguration.Bounds;
            set
            {
                if (AutoScaleConfiguration is null)
                    AutoScaleConfiguration = new ExpressRouteGatewayPropertiesAutoScaleConfiguration();
                AutoScaleConfiguration.Bounds = value;
            }
        }

        /// <summary> List of ExpressRoute connections to the ExpressRoute gateway. </summary>
        public IList<ExpressRouteConnectionData> ExpressRouteConnectionList { get; }
        /// <summary> The provisioning state of the express route gateway resource. </summary>
        public NetworkProvisioningState? ProvisioningState { get; }
        /// <summary> The Virtual Hub where the ExpressRoute gateway is or will be deployed. </summary>
        internal WritableSubResource VirtualHub { get; set; }
        /// <summary> Gets or sets Id. </summary>
        public ResourceIdentifier VirtualHubId
        {
            get => VirtualHub is null ? default : VirtualHub.Id;
            set
            {
                if (VirtualHub is null)
                    VirtualHub = new WritableSubResource();
                VirtualHub.Id = value;
            }
        }

        /// <summary> Configures this gateway to accept traffic from non Virtual WAN networks. </summary>
        public bool? AllowNonVirtualWanTraffic { get; set; }
        /// <summary> Resource location. </summary>
        public AzureLocation? Location { get; set; }
        /// <summary> Resource tags. </summary>
        public IDictionary<string, string> Tags { get; }
    }
}
