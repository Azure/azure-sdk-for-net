// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.Network.Models;

namespace Azure.ResourceManager.Network.Samples
{
    public partial class Sample_ReachabilityAnalysisIntentCollection
    {
        // ReachabilityAnalysisIntentList
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetAll_ReachabilityAnalysisIntentList()
        {
            // Generated from example definition: specification/network/resource-manager/Microsoft.Network/preview/2024-01-01-preview/examples/ReachabilityAnalysisIntentList.json
            // this example is just showing the usage of "ReachabilityAnalysisIntents_List" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this VerifierWorkspaceResource created on azure
            // for more information of creating VerifierWorkspaceResource, please refer to the document of VerifierWorkspaceResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "rg1";
            string networkManagerName = "testNetworkManager";
            string workspaceName = "testVerifierWorkspace1";
            ResourceIdentifier verifierWorkspaceResourceId = VerifierWorkspaceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, networkManagerName, workspaceName);
            VerifierWorkspaceResource verifierWorkspace = client.GetVerifierWorkspaceResource(verifierWorkspaceResourceId);

            // get the collection of this ReachabilityAnalysisIntentResource
            ReachabilityAnalysisIntentCollection collection = verifierWorkspace.GetReachabilityAnalysisIntents();

            // invoke the operation and iterate over the result
            await foreach (ReachabilityAnalysisIntentResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                ReachabilityAnalysisIntentData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine($"Succeeded");
        }

        // ReachabilityAnalysisIntentGet
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_ReachabilityAnalysisIntentGet()
        {
            // Generated from example definition: specification/network/resource-manager/Microsoft.Network/preview/2024-01-01-preview/examples/ReachabilityAnalysisIntentGet.json
            // this example is just showing the usage of "ReachabilityAnalysisIntents_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this VerifierWorkspaceResource created on azure
            // for more information of creating VerifierWorkspaceResource, please refer to the document of VerifierWorkspaceResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "rg1";
            string networkManagerName = "testNetworkManager";
            string workspaceName = "testWorkspace";
            ResourceIdentifier verifierWorkspaceResourceId = VerifierWorkspaceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, networkManagerName, workspaceName);
            VerifierWorkspaceResource verifierWorkspace = client.GetVerifierWorkspaceResource(verifierWorkspaceResourceId);

            // get the collection of this ReachabilityAnalysisIntentResource
            ReachabilityAnalysisIntentCollection collection = verifierWorkspace.GetReachabilityAnalysisIntents();

            // invoke the operation
            string reachabilityAnalysisIntentName = "testAnalysisIntentName";
            ReachabilityAnalysisIntentResource result = await collection.GetAsync(reachabilityAnalysisIntentName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ReachabilityAnalysisIntentData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // ReachabilityAnalysisIntentGet
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Exists_ReachabilityAnalysisIntentGet()
        {
            // Generated from example definition: specification/network/resource-manager/Microsoft.Network/preview/2024-01-01-preview/examples/ReachabilityAnalysisIntentGet.json
            // this example is just showing the usage of "ReachabilityAnalysisIntents_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this VerifierWorkspaceResource created on azure
            // for more information of creating VerifierWorkspaceResource, please refer to the document of VerifierWorkspaceResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "rg1";
            string networkManagerName = "testNetworkManager";
            string workspaceName = "testWorkspace";
            ResourceIdentifier verifierWorkspaceResourceId = VerifierWorkspaceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, networkManagerName, workspaceName);
            VerifierWorkspaceResource verifierWorkspace = client.GetVerifierWorkspaceResource(verifierWorkspaceResourceId);

            // get the collection of this ReachabilityAnalysisIntentResource
            ReachabilityAnalysisIntentCollection collection = verifierWorkspace.GetReachabilityAnalysisIntents();

            // invoke the operation
            string reachabilityAnalysisIntentName = "testAnalysisIntentName";
            bool result = await collection.ExistsAsync(reachabilityAnalysisIntentName);

            Console.WriteLine($"Succeeded: {result}");
        }

        // ReachabilityAnalysisIntentGet
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetIfExists_ReachabilityAnalysisIntentGet()
        {
            // Generated from example definition: specification/network/resource-manager/Microsoft.Network/preview/2024-01-01-preview/examples/ReachabilityAnalysisIntentGet.json
            // this example is just showing the usage of "ReachabilityAnalysisIntents_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this VerifierWorkspaceResource created on azure
            // for more information of creating VerifierWorkspaceResource, please refer to the document of VerifierWorkspaceResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "rg1";
            string networkManagerName = "testNetworkManager";
            string workspaceName = "testWorkspace";
            ResourceIdentifier verifierWorkspaceResourceId = VerifierWorkspaceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, networkManagerName, workspaceName);
            VerifierWorkspaceResource verifierWorkspace = client.GetVerifierWorkspaceResource(verifierWorkspaceResourceId);

            // get the collection of this ReachabilityAnalysisIntentResource
            ReachabilityAnalysisIntentCollection collection = verifierWorkspace.GetReachabilityAnalysisIntents();

            // invoke the operation
            string reachabilityAnalysisIntentName = "testAnalysisIntentName";
            NullableResponse<ReachabilityAnalysisIntentResource> response = await collection.GetIfExistsAsync(reachabilityAnalysisIntentName);
            ReachabilityAnalysisIntentResource result = response.HasValue ? response.Value : null;

            if (result == null)
            {
                Console.WriteLine($"Succeeded with null as result");
            }
            else
            {
                // the variable result is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                ReachabilityAnalysisIntentData resourceData = result.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }
        }

        // ReachabilityAnalysisIntentCreate
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task CreateOrUpdate_ReachabilityAnalysisIntentCreate()
        {
            // Generated from example definition: specification/network/resource-manager/Microsoft.Network/preview/2024-01-01-preview/examples/ReachabilityAnalysisIntentPut.json
            // this example is just showing the usage of "ReachabilityAnalysisIntents_Create" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this VerifierWorkspaceResource created on azure
            // for more information of creating VerifierWorkspaceResource, please refer to the document of VerifierWorkspaceResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "rg1";
            string networkManagerName = "testNetworkManager";
            string workspaceName = "testWorkspace";
            ResourceIdentifier verifierWorkspaceResourceId = VerifierWorkspaceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, networkManagerName, workspaceName);
            VerifierWorkspaceResource verifierWorkspace = client.GetVerifierWorkspaceResource(verifierWorkspaceResourceId);

            // get the collection of this ReachabilityAnalysisIntentResource
            ReachabilityAnalysisIntentCollection collection = verifierWorkspace.GetReachabilityAnalysisIntents();

            // invoke the operation
            string reachabilityAnalysisIntentName = "testAnalysisIntentName";
            ReachabilityAnalysisIntentData data = new ReachabilityAnalysisIntentData(new ReachabilityAnalysisIntentProperties(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/testVmSrc"), new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/testVmDest"), new IPTraffic(new string[]
            {
"10.4.0.0"
            }, new string[]
            {
"10.4.0.1"
            }, new string[]
            {
"0"
            }, new string[]
            {
"0"
            }, new NetworkProtocol[]
            {
NetworkProtocol.Any
            }))
            {
                Description = "A sample reachability analysis intent",
            });
            ArmOperation<ReachabilityAnalysisIntentResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, reachabilityAnalysisIntentName, data);
            ReachabilityAnalysisIntentResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ReachabilityAnalysisIntentData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
