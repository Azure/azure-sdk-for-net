// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.Network.Models;

namespace Azure.ResourceManager.Network.Samples
{
    public partial class Sample_VerifierWorkspaceResource
    {
        // VerifierWorkspaceGet
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_VerifierWorkspaceGet()
        {
            // Generated from example definition: specification/network/resource-manager/Microsoft.Network/preview/2024-01-01-preview/examples/VerifierWorkspaceGet.json
            // this example is just showing the usage of "VerifierWorkspaces_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this VerifierWorkspaceResource created on azure
            // for more information of creating VerifierWorkspaceResource, please refer to the document of VerifierWorkspaceResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "rg1";
            string networkManagerName = "testNetworkManager";
            string workspaceName = "testWorkspace";
            ResourceIdentifier verifierWorkspaceResourceId = VerifierWorkspaceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, networkManagerName, workspaceName);
            VerifierWorkspaceResource verifierWorkspace = client.GetVerifierWorkspaceResource(verifierWorkspaceResourceId);

            // invoke the operation
            VerifierWorkspaceResource result = await verifierWorkspace.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            VerifierWorkspaceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // VerifierWorkspacePatch
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_VerifierWorkspacePatch()
        {
            // Generated from example definition: specification/network/resource-manager/Microsoft.Network/preview/2024-01-01-preview/examples/VerifierWorkspacePatch.json
            // this example is just showing the usage of "VerifierWorkspaces_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this VerifierWorkspaceResource created on azure
            // for more information of creating VerifierWorkspaceResource, please refer to the document of VerifierWorkspaceResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "rg1";
            string networkManagerName = "testNetworkManager";
            string workspaceName = "testWorkspace";
            ResourceIdentifier verifierWorkspaceResourceId = VerifierWorkspaceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, networkManagerName, workspaceName);
            VerifierWorkspaceResource verifierWorkspace = client.GetVerifierWorkspaceResource(verifierWorkspaceResourceId);

            // invoke the operation
            VerifierWorkspacePatch patch = new VerifierWorkspacePatch();
            VerifierWorkspaceResource result = await verifierWorkspace.UpdateAsync(patch);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            VerifierWorkspaceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // VerifierWorkspaceDelete
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_VerifierWorkspaceDelete()
        {
            // Generated from example definition: specification/network/resource-manager/Microsoft.Network/preview/2024-01-01-preview/examples/VerifierWorkspaceDelete.json
            // this example is just showing the usage of "VerifierWorkspaces_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this VerifierWorkspaceResource created on azure
            // for more information of creating VerifierWorkspaceResource, please refer to the document of VerifierWorkspaceResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "rg1";
            string networkManagerName = "testNetworkManager";
            string workspaceName = "testWorkspace";
            ResourceIdentifier verifierWorkspaceResourceId = VerifierWorkspaceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, networkManagerName, workspaceName);
            VerifierWorkspaceResource verifierWorkspace = client.GetVerifierWorkspaceResource(verifierWorkspaceResourceId);

            // invoke the operation
            await verifierWorkspace.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }
    }
}
