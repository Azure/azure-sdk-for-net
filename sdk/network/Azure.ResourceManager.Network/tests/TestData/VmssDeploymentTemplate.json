{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "newStorageAccountName": {
      "defaultValue": "testvmssnrpacc",
      "type": "string"
    },
    "storageAccountDomain": {
      "type": "string",
      "defaultValue": "vmssnrptester",
      "metadata": {
        "description": "The domain of the storage account to be created."
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "xplatuser"
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "Pa$$word2017"
    },
    "storageLocation": {
      "type": "string",
      "defaultValue": "Southeast Asia",
      "metadata": {
        "description": "Location to deploy"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "Southeast Asia",
      "metadata": {
        "description": "Location to deploy all the resources in."
      }
    },
    "newDomainName": {
      "type": "string",
      "defaultValue": "testvmssnrpacc"
    },
    "vmssName": {
      "type": "string",
      "defaultValue": "vmssip"
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "metadata": {
        "description": "Image Publisher"
      }
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "metadata": {
        "description": "Image Offer"
      }
    },
    "imageSKU": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "metadata": {
        "description": "Image SKU"
      }
    },
    "instanceCount": {
      "type": "string",
      "defaultValue": "2",
      "metadata": {
        "description": "Number of VM instances"
      }
    }
  },
  "variables": {
    "storageAccountType": "Standard_LRS",
    "newStorageAccountName2": "[concat(parameters('newStorageAccountName'), '2')]",
    "location": "[parameters('location')]",
    "vnetName": "vnet1",
    "pipName": "pip1",
    "lbName": "lb1",
    "nsgName": "nsg1",
    "pipID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('pipName'))]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbName'))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]",
    "frontendIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/ip1')]",
    "backendaddressPoolID": "[concat(variables('lbID'),'/backendAddressPools/addressPool1')]",
    "inboundNatPoolID": "[concat(variables('lbID'),'/backendAddressPools/natPool1')]",
    "subnetID": "[concat(variables('vnetID'),'/subnets/subnet1')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('newStorageAccountName')]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('storageLocation')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('newStorageAccountName2')]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('storageLocation')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('pipName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vnetName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "subnet1",
            "properties": {
              "addressPrefix": "10.0.0.0/24"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "name": "[variables('lbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('pipName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "ip1",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('pipID')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "addressPool1"
          }
        ],
        "loadbalancingRules": [
          {
            "name": "lbrule1",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontendIPConfigID')]"
              },
              "backendaddressPool": {
                "id": "[variables('backendaddressPoolID')]"
              },
              "protocol": "tcp",
              "frontendPort": 80,
              "backendPort": 82
            }
          }
        ],
        "inboundNatPools": [
          {
            "name": "natPool1",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontendIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPortRangeStart": 3389,
              "frontendPortRangeEnd": 4500,
              "backendPort": 3389
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsgName')]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "access": "Allow",
              "description": "Allow SSH",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "22",
              "direction": "Inbound",
              "priority": 201,
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*"
            }
          },
          {
            "name": "swarm-listen-port",
            "properties": {
              "access": "Allow",
              "description": "Allow 'swarm join' ingress to manager node",
              "destinationAddressPrefix": "10.0.0.0/24",
              "destinationPortRange": "2377",
              "direction": "Inbound",
              "priority": 202,
              "protocol": "Tcp",
              "sourceAddressPrefix": "10.0.0.0/24",
              "sourcePortRange": "*"
            }
          },
          {
            "name": "vxlan",
            "properties": {
              "access": "Allow",
              "description": "Allow VXLan connection between nodes",
              "destinationAddressPrefix": "10.0.0.0/24",
              "destinationPortRange": "4789",
              "direction": "Inbound",
              "priority": 203,
              "protocol": "Udp",
              "sourceAddressPrefix": "10.0.0.0/24",
              "sourcePortRange": "*"
            }
          },
          {
            "name": "gossip",
            "properties": {
              "access": "Allow",
              "description": "Serf communication to gossip between nodes",
              "destinationAddressPrefix": "10.0.0.0/24",
              "destinationPortRange": "7946",
              "direction": "Inbound",
              "priority": 204,
              "protocol": "*",
              "sourceAddressPrefix": "10.0.0.0/24",
              "sourcePortRange": "*"
            }
          },
          {
            "name": "diagnostics",
            "properties": {
              "access": "Allow",
              "description": "Allow communication for the diagnostics server",
              "destinationAddressPrefix": "10.0.0.0/24",
              "destinationPortRange": "44554",
              "direction": "Inbound",
              "priority": 205,
              "protocol": "Tcp",
              "sourceAddressPrefix": "10.0.0.0/24",
              "sourcePortRange": "*"
            }
          },
          {
            "name": "ucp",
            "properties": {
              "access": "Allow",
              "description": "Allow UCP",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "8443",
              "direction": "Inbound",
              "priority": 207,
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*"
            }
          },
          {
            "name": "dtr",
            "properties": {
              "access": "Allow",
              "description": "Allow DTR",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "443",
              "direction": "Inbound",
              "priority": 208,
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "apiVersion": "2017-03-30",
      "name": "[parameters('vmSSName')]",
      "location": "[variables('location')]",
      "tags": {
        "vmsstag1": "Myriad"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName2'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('lbName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
      ],
      "sku": {
        "name": "Standard_A2",
        "tier": "Standard",
        "capacity": "[parameters('instanceCount')]"
      },
      "Properties": {
        "upgradePolicy": {
          "mode": "Automatic"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "vhdContainers": [
                "[concat('https://', parameters('newStorageAccountName'), '.blob.core.windows.net', '/vmss1')]",
                "[concat('https://', variables('newStorageAccountName2'), '.blob.core.windows.net', '/vmss2')]"
              ],
              "name": "vmssosdisk",
              "caching": "ReadOnly",
              "createOption": "FromImage"
            },
            "imageReference": {
              "publisher": "[parameters('imagePublisher')]",
              "offer": "[parameters('imageOffer')]",
              "sku": "[parameters('imageSKU')]",
              "version": "latest"
            }
          },
          "osProfile": {
            "computerNamePrefix": "[parameters('vmSSName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "nic1",
                "properties": {
                  "primary": "true",
                  "dnsSettings": {
                    "dnsServers": [ "10.0.0.6" ]
                  },
                  "ipConfigurations": [
                    {
                      "name": "ip1",
                      "properties": {
                        "subnet": {
                          "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('vnetName'), '/subnets/subnet1')]"
                        },
                        "publicipaddressconfiguration": {
                          "name": "pub1",
                          "properties": {
                            "idleTimeoutInMinutes": 10,
                            "dnsSettings": {
                              "domainNameLabel": "[parameters('newDomainName')]"
                            }
                          }
                        },
                        "loadBalancerInboundNatPools": [
                          {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('lbName'), '/inboundNatPools/natPool1')]"
                          }
                        ],
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('lbName'), '/backendAddressPools/addressPool1')]"
                          }
                        ]
                      }
                    }
                  ],
                  "networkSecurityGroup": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
                  }
                }
              }
            ]
          }
        }
      }
    }
  ]
}
