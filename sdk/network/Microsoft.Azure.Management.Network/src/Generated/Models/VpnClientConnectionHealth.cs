// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// VpnClientConnectionHealth properties.
    /// </summary>
    public partial class VpnClientConnectionHealth
    {
        /// <summary>
        /// Initializes a new instance of the VpnClientConnectionHealth class.
        /// </summary>
        public VpnClientConnectionHealth()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VpnClientConnectionHealth class.
        /// </summary>
        /// <param name="totalIngressBytesTransferred">Total of the Ingress
        /// Bytes Transferred in this P2S Vpn connection.</param>
        /// <param name="totalEgressBytesTransferred">Total of the Egress Bytes
        /// Transferred in this connection.</param>
        /// <param name="vpnClientConnectionsCount">The total of p2s vpn
        /// clients connected at this time to this P2SVpnGateway.</param>
        /// <param name="allocatedIpAddresses">List of allocated ip addresses
        /// to the connected p2s vpn clients.</param>
        public VpnClientConnectionHealth(long? totalIngressBytesTransferred = default(long?), long? totalEgressBytesTransferred = default(long?), int? vpnClientConnectionsCount = default(int?), IList<string> allocatedIpAddresses = default(IList<string>))
        {
            TotalIngressBytesTransferred = totalIngressBytesTransferred;
            TotalEgressBytesTransferred = totalEgressBytesTransferred;
            VpnClientConnectionsCount = vpnClientConnectionsCount;
            AllocatedIpAddresses = allocatedIpAddresses;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets total of the Ingress Bytes Transferred in this P2S Vpn
        /// connection.
        /// </summary>
        [JsonProperty(PropertyName = "totalIngressBytesTransferred")]
        public long? TotalIngressBytesTransferred { get; private set; }

        /// <summary>
        /// Gets total of the Egress Bytes Transferred in this connection.
        /// </summary>
        [JsonProperty(PropertyName = "totalEgressBytesTransferred")]
        public long? TotalEgressBytesTransferred { get; private set; }

        /// <summary>
        /// Gets or sets the total of p2s vpn clients connected at this time to
        /// this P2SVpnGateway.
        /// </summary>
        [JsonProperty(PropertyName = "vpnClientConnectionsCount")]
        public int? VpnClientConnectionsCount { get; set; }

        /// <summary>
        /// Gets or sets list of allocated ip addresses to the connected p2s
        /// vpn clients.
        /// </summary>
        [JsonProperty(PropertyName = "allocatedIpAddresses")]
        public IList<string> AllocatedIpAddresses { get; set; }

    }
}
