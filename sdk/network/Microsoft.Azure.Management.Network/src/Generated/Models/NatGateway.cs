// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Nat Gateway resource.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class NatGateway : Resource
    {
        /// <summary>
        /// Initializes a new instance of the NatGateway class.
        /// </summary>
        public NatGateway()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NatGateway class.
        /// </summary>
        /// <param name="id">Resource ID.</param>
        /// <param name="name">Resource name.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="location">Resource location.</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="sku">The nat gateway SKU.</param>
        /// <param name="idleTimeoutInMinutes">The idle timeout of the nat
        /// gateway.</param>
        /// <param name="publicIpAddresses">An array of public ip addresses
        /// associated with the nat gateway resource.</param>
        /// <param name="publicIpPrefixes">An array of public ip prefixes
        /// associated with the nat gateway resource.</param>
        /// <param name="subnets">An array of references to the subnets using
        /// this nat gateway resource.</param>
        /// <param name="resourceGuid">The resource GUID property of the nat
        /// gateway resource.</param>
        /// <param name="provisioningState">The provisioning state of the
        /// NatGateway resource. Possible values are: 'Updating', 'Deleting',
        /// and 'Failed'.</param>
        /// <param name="zones">A list of availability zones denoting the zone
        /// in which Nat Gateway should be deployed.</param>
        /// <param name="etag">A unique read-only string that changes whenever
        /// the resource is updated.</param>
        public NatGateway(string id = default(string), string name = default(string), string type = default(string), string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), NatGatewaySku sku = default(NatGatewaySku), int? idleTimeoutInMinutes = default(int?), IList<SubResource> publicIpAddresses = default(IList<SubResource>), IList<SubResource> publicIpPrefixes = default(IList<SubResource>), IList<SubResource> subnets = default(IList<SubResource>), string resourceGuid = default(string), string provisioningState = default(string), IList<string> zones = default(IList<string>), string etag = default(string))
            : base(id, name, type, location, tags)
        {
            Sku = sku;
            IdleTimeoutInMinutes = idleTimeoutInMinutes;
            PublicIpAddresses = publicIpAddresses;
            PublicIpPrefixes = publicIpPrefixes;
            Subnets = subnets;
            ResourceGuid = resourceGuid;
            ProvisioningState = provisioningState;
            Zones = zones;
            Etag = etag;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the nat gateway SKU.
        /// </summary>
        [JsonProperty(PropertyName = "sku")]
        public NatGatewaySku Sku { get; set; }

        /// <summary>
        /// Gets or sets the idle timeout of the nat gateway.
        /// </summary>
        [JsonProperty(PropertyName = "properties.idleTimeoutInMinutes")]
        public int? IdleTimeoutInMinutes { get; set; }

        /// <summary>
        /// Gets or sets an array of public ip addresses associated with the
        /// nat gateway resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.publicIpAddresses")]
        public IList<SubResource> PublicIpAddresses { get; set; }

        /// <summary>
        /// Gets or sets an array of public ip prefixes associated with the nat
        /// gateway resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.publicIpPrefixes")]
        public IList<SubResource> PublicIpPrefixes { get; set; }

        /// <summary>
        /// Gets an array of references to the subnets using this nat gateway
        /// resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.subnets")]
        public IList<SubResource> Subnets { get; private set; }

        /// <summary>
        /// Gets or sets the resource GUID property of the nat gateway
        /// resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.resourceGuid")]
        public string ResourceGuid { get; set; }

        /// <summary>
        /// Gets or sets the provisioning state of the NatGateway resource.
        /// Possible values are: 'Updating', 'Deleting', and 'Failed'.
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Gets or sets a list of availability zones denoting the zone in
        /// which Nat Gateway should be deployed.
        /// </summary>
        [JsonProperty(PropertyName = "zones")]
        public IList<string> Zones { get; set; }

        /// <summary>
        /// Gets or sets a unique read-only string that changes whenever the
        /// resource is updated.
        /// </summary>
        [JsonProperty(PropertyName = "etag")]
        public string Etag { get; set; }

    }
}
