// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// RouteTable resource in a virtual hub.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class HubRouteTable : SubResource
    {
        /// <summary>
        /// Initializes a new instance of the HubRouteTable class.
        /// </summary>
        public HubRouteTable()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the HubRouteTable class.
        /// </summary>
        /// <param name="id">Resource ID.</param>
        /// <param name="routes">List of all routes.</param>
        /// <param name="labels">List of labels associated with this route
        /// table.</param>
        /// <param name="associatedConnections">List of all connections
        /// associated with this route table.</param>
        /// <param name="propagatingConnections">List of all connections that
        /// advertise to this route table.</param>
        /// <param name="provisioningState">The provisioning state of the
        /// RouteTable resource. Possible values include: 'Succeeded',
        /// 'Updating', 'Deleting', 'Failed'</param>
        /// <param name="name">The name of the resource that is unique within a
        /// resource group. This name can be used to access the
        /// resource.</param>
        /// <param name="etag">A unique read-only string that changes whenever
        /// the resource is updated.</param>
        /// <param name="type">Resource type.</param>
        public HubRouteTable(string id = default(string), IList<HubRoute> routes = default(IList<HubRoute>), IList<string> labels = default(IList<string>), IList<string> associatedConnections = default(IList<string>), IList<string> propagatingConnections = default(IList<string>), string provisioningState = default(string), string name = default(string), string etag = default(string), string type = default(string))
            : base(id)
        {
            Routes = routes;
            Labels = labels;
            AssociatedConnections = associatedConnections;
            PropagatingConnections = propagatingConnections;
            ProvisioningState = provisioningState;
            Name = name;
            Etag = etag;
            Type = type;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets list of all routes.
        /// </summary>
        [JsonProperty(PropertyName = "properties.routes")]
        public IList<HubRoute> Routes { get; set; }

        /// <summary>
        /// Gets or sets list of labels associated with this route table.
        /// </summary>
        [JsonProperty(PropertyName = "properties.labels")]
        public IList<string> Labels { get; set; }

        /// <summary>
        /// Gets list of all connections associated with this route table.
        /// </summary>
        [JsonProperty(PropertyName = "properties.associatedConnections")]
        public IList<string> AssociatedConnections { get; private set; }

        /// <summary>
        /// Gets list of all connections that advertise to this route table.
        /// </summary>
        [JsonProperty(PropertyName = "properties.propagatingConnections")]
        public IList<string> PropagatingConnections { get; private set; }

        /// <summary>
        /// Gets the provisioning state of the RouteTable resource. Possible
        /// values include: 'Succeeded', 'Updating', 'Deleting', 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets or sets the name of the resource that is unique within a
        /// resource group. This name can be used to access the resource.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource
        /// is updated.
        /// </summary>
        [JsonProperty(PropertyName = "etag")]
        public string Etag { get; private set; }

        /// <summary>
        /// Gets resource type.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

    }
}
