// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Result of the request to list active connectivity configurations. It
    /// contains a list of active connectivity configurations and a skiptoken
    /// to get the next set of results.
    /// </summary>
    public partial class ActiveConnectivityConfigurationsListResult
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ActiveConnectivityConfigurationsListResult class.
        /// </summary>
        public ActiveConnectivityConfigurationsListResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ActiveConnectivityConfigurationsListResult class.
        /// </summary>
        /// <param name="value">Gets a page of active connectivity
        /// configurations.</param>
        /// <param name="skipToken">When present, the value can be passed to a
        /// subsequent query call (together with the same query and scopes used
        /// in the current request) to retrieve the next page of data.</param>
        public ActiveConnectivityConfigurationsListResult(IList<ActiveConnectivityConfiguration> value = default(IList<ActiveConnectivityConfiguration>), string skipToken = default(string))
        {
            Value = value;
            SkipToken = skipToken;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets a page of active connectivity configurations.
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public IList<ActiveConnectivityConfiguration> Value { get; set; }

        /// <summary>
        /// Gets or sets when present, the value can be passed to a subsequent
        /// query call (together with the same query and scopes used in the
        /// current request) to retrieve the next page of data.
        /// </summary>
        [JsonProperty(PropertyName = "skipToken")]
        public string SkipToken { get; set; }

    }
}
