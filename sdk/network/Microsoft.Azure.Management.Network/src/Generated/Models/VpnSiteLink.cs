// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// VpnSiteLink Resource.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class VpnSiteLink : SubResource
    {
        /// <summary>
        /// Initializes a new instance of the VpnSiteLink class.
        /// </summary>
        public VpnSiteLink()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VpnSiteLink class.
        /// </summary>
        /// <param name="id">Resource ID.</param>
        /// <param name="linkProperties">The link provider properties.</param>
        /// <param name="ipAddress">The ip-address for the
        /// vpn-site-link.</param>
        /// <param name="fqdn">FQDN of vpn-site-link.</param>
        /// <param name="bgpProperties">The set of bgp properties.</param>
        /// <param name="provisioningState">The provisioning state of the VPN
        /// site link resource. Possible values include: 'Succeeded',
        /// 'Updating', 'Deleting', 'Failed'</param>
        /// <param name="etag">A unique read-only string that changes whenever
        /// the resource is updated.</param>
        /// <param name="name">The name of the resource that is unique within a
        /// resource group. This name can be used to access the
        /// resource.</param>
        /// <param name="type">Resource type.</param>
        public VpnSiteLink(string id = default(string), VpnLinkProviderProperties linkProperties = default(VpnLinkProviderProperties), string ipAddress = default(string), string fqdn = default(string), VpnLinkBgpSettings bgpProperties = default(VpnLinkBgpSettings), string provisioningState = default(string), string etag = default(string), string name = default(string), string type = default(string))
            : base(id)
        {
            LinkProperties = linkProperties;
            IpAddress = ipAddress;
            Fqdn = fqdn;
            BgpProperties = bgpProperties;
            ProvisioningState = provisioningState;
            Etag = etag;
            Name = name;
            Type = type;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the link provider properties.
        /// </summary>
        [JsonProperty(PropertyName = "properties.linkProperties")]
        public VpnLinkProviderProperties LinkProperties { get; set; }

        /// <summary>
        /// Gets or sets the ip-address for the vpn-site-link.
        /// </summary>
        [JsonProperty(PropertyName = "properties.ipAddress")]
        public string IpAddress { get; set; }

        /// <summary>
        /// Gets or sets FQDN of vpn-site-link.
        /// </summary>
        [JsonProperty(PropertyName = "properties.fqdn")]
        public string Fqdn { get; set; }

        /// <summary>
        /// Gets or sets the set of bgp properties.
        /// </summary>
        [JsonProperty(PropertyName = "properties.bgpProperties")]
        public VpnLinkBgpSettings BgpProperties { get; set; }

        /// <summary>
        /// Gets the provisioning state of the VPN site link resource. Possible
        /// values include: 'Succeeded', 'Updating', 'Deleting', 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource
        /// is updated.
        /// </summary>
        [JsonProperty(PropertyName = "etag")]
        public string Etag { get; private set; }

        /// <summary>
        /// Gets or sets the name of the resource that is unique within a
        /// resource group. This name can be used to access the resource.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets resource type.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

    }
}
