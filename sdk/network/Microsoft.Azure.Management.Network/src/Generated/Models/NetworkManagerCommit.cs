// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Network Manager Commit.
    /// </summary>
    public partial class NetworkManagerCommit
    {
        /// <summary>
        /// Initializes a new instance of the NetworkManagerCommit class.
        /// </summary>
        public NetworkManagerCommit()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NetworkManagerCommit class.
        /// </summary>
        /// <param name="targetLocations">List of target locations.</param>
        /// <param name="commitType">Commit Type. Possible values include:
        /// 'SecurityAdmin', 'Connectivity'</param>
        /// <param name="commitId">Commit Id.</param>
        /// <param name="configurationIds">List of configuration ids.</param>
        public NetworkManagerCommit(IList<string> targetLocations, string commitType, string commitId = default(string), IList<string> configurationIds = default(IList<string>))
        {
            CommitId = commitId;
            TargetLocations = targetLocations;
            ConfigurationIds = configurationIds;
            CommitType = commitType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets commit Id.
        /// </summary>
        [JsonProperty(PropertyName = "commitId")]
        public string CommitId { get; private set; }

        /// <summary>
        /// Gets or sets list of target locations.
        /// </summary>
        [JsonProperty(PropertyName = "targetLocations")]
        public IList<string> TargetLocations { get; set; }

        /// <summary>
        /// Gets or sets list of configuration ids.
        /// </summary>
        [JsonProperty(PropertyName = "configurationIds")]
        public IList<string> ConfigurationIds { get; set; }

        /// <summary>
        /// Gets or sets commit Type. Possible values include: 'SecurityAdmin',
        /// 'Connectivity'
        /// </summary>
        [JsonProperty(PropertyName = "commitType")]
        public string CommitType { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (TargetLocations == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TargetLocations");
            }
            if (CommitType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CommitType");
            }
        }
    }
}
