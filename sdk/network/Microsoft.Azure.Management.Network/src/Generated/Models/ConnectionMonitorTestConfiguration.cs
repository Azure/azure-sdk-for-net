// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Describes the connection monitor test configuration.
    /// </summary>
    public partial class ConnectionMonitorTestConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ConnectionMonitorTestConfiguration class.
        /// </summary>
        public ConnectionMonitorTestConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ConnectionMonitorTestConfiguration class.
        /// </summary>
        /// <param name="name">The name of the connection monitor test
        /// configuration.</param>
        /// <param name="testFrequencySec">Test frequency in seconds.</param>
        /// <param name="protocol">The protocol. Possible values include:
        /// 'Tcp', 'Http', 'Icmp'</param>
        /// <param name="preferredIPVersion">The preferred IP version. Possible
        /// values include: 'IPv4', 'IPv6'</param>
        /// <param name="httpConfiguration">Describes the HTTP
        /// configuration.</param>
        /// <param name="tcpConfiguration">Describes the TCP
        /// configuration.</param>
        /// <param name="icmpConfiguration">Describes the ICMP
        /// configuration.</param>
        /// <param name="successThreshold">Describes the success
        /// threshold.</param>
        public ConnectionMonitorTestConfiguration(string name = default(string), int? testFrequencySec = default(int?), string protocol = default(string), string preferredIPVersion = default(string), ConnectionMonitorHttpConfiguration httpConfiguration = default(ConnectionMonitorHttpConfiguration), ConnectionMonitorTcpConfiguration tcpConfiguration = default(ConnectionMonitorTcpConfiguration), ConnectionMonitorIcmpConfiguration icmpConfiguration = default(ConnectionMonitorIcmpConfiguration), ConnectionMonitorSuccessThreshold successThreshold = default(ConnectionMonitorSuccessThreshold))
        {
            Name = name;
            TestFrequencySec = testFrequencySec;
            Protocol = protocol;
            PreferredIPVersion = preferredIPVersion;
            HttpConfiguration = httpConfiguration;
            TcpConfiguration = tcpConfiguration;
            IcmpConfiguration = icmpConfiguration;
            SuccessThreshold = successThreshold;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the connection monitor test configuration.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets test frequency in seconds.
        /// </summary>
        [JsonProperty(PropertyName = "testFrequencySec")]
        public int? TestFrequencySec { get; set; }

        /// <summary>
        /// Gets or sets the protocol. Possible values include: 'Tcp', 'Http',
        /// 'Icmp'
        /// </summary>
        [JsonProperty(PropertyName = "protocol")]
        public string Protocol { get; set; }

        /// <summary>
        /// Gets or sets the preferred IP version. Possible values include:
        /// 'IPv4', 'IPv6'
        /// </summary>
        [JsonProperty(PropertyName = "preferredIPVersion")]
        public string PreferredIPVersion { get; set; }

        /// <summary>
        /// Gets or sets describes the HTTP configuration.
        /// </summary>
        [JsonProperty(PropertyName = "httpConfiguration")]
        public ConnectionMonitorHttpConfiguration HttpConfiguration { get; set; }

        /// <summary>
        /// Gets or sets describes the TCP configuration.
        /// </summary>
        [JsonProperty(PropertyName = "tcpConfiguration")]
        public ConnectionMonitorTcpConfiguration TcpConfiguration { get; set; }

        /// <summary>
        /// Gets or sets describes the ICMP configuration.
        /// </summary>
        [JsonProperty(PropertyName = "icmpConfiguration")]
        public ConnectionMonitorIcmpConfiguration IcmpConfiguration { get; set; }

        /// <summary>
        /// Gets or sets describes the success threshold.
        /// </summary>
        [JsonProperty(PropertyName = "successThreshold")]
        public ConnectionMonitorSuccessThreshold SuccessThreshold { get; set; }

    }
}
