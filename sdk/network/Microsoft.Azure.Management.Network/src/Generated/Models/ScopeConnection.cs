// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The Scope Connections resource
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ScopeConnection : ChildResource
    {
        /// <summary>
        /// Initializes a new instance of the ScopeConnection class.
        /// </summary>
        public ScopeConnection()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ScopeConnection class.
        /// </summary>
        /// <param name="id">Resource ID.</param>
        /// <param name="name">Resource name.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="etag">A unique read-only string that changes whenever
        /// the resource is updated.</param>
        /// <param name="tenantId">Tenant ID.</param>
        /// <param name="resourceId">Resource ID.</param>
        /// <param name="connectionState">Connection State. Possible values
        /// include: 'Connected', 'Pending', 'Conflict', 'Revoked',
        /// 'Rejected'</param>
        /// <param name="description">A description of the scope
        /// connection.</param>
        /// <param name="systemData">The system metadata related to this
        /// resource.</param>
        public ScopeConnection(string id = default(string), string name = default(string), string type = default(string), string etag = default(string), string tenantId = default(string), string resourceId = default(string), string connectionState = default(string), string description = default(string), SystemData systemData = default(SystemData))
            : base(id, name, type, etag)
        {
            TenantId = tenantId;
            ResourceId = resourceId;
            ConnectionState = connectionState;
            Description = description;
            SystemData = systemData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets tenant ID.
        /// </summary>
        [JsonProperty(PropertyName = "properties.tenantId")]
        public string TenantId { get; set; }

        /// <summary>
        /// Gets or sets resource ID.
        /// </summary>
        [JsonProperty(PropertyName = "properties.resourceId")]
        public string ResourceId { get; set; }

        /// <summary>
        /// Gets or sets connection State. Possible values include:
        /// 'Connected', 'Pending', 'Conflict', 'Revoked', 'Rejected'
        /// </summary>
        [JsonProperty(PropertyName = "properties.connectionState")]
        public string ConnectionState { get; set; }

        /// <summary>
        /// Gets or sets a description of the scope connection.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets the system metadata related to this resource.
        /// </summary>
        [JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData { get; private set; }

    }
}
