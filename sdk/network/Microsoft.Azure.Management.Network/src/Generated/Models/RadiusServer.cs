// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Radius Server Settings.
    /// </summary>
    public partial class RadiusServer
    {
        /// <summary>
        /// Initializes a new instance of the RadiusServer class.
        /// </summary>
        public RadiusServer()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RadiusServer class.
        /// </summary>
        /// <param name="radiusServerAddress">The address of this radius
        /// server.</param>
        /// <param name="radiusServerScore">The initial score assigned to this
        /// radius server.</param>
        /// <param name="radiusServerSecret">The secret used for this radius
        /// server.</param>
        public RadiusServer(string radiusServerAddress, long? radiusServerScore = default(long?), string radiusServerSecret = default(string))
        {
            RadiusServerAddress = radiusServerAddress;
            RadiusServerScore = radiusServerScore;
            RadiusServerSecret = radiusServerSecret;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the address of this radius server.
        /// </summary>
        [JsonProperty(PropertyName = "radiusServerAddress")]
        public string RadiusServerAddress { get; set; }

        /// <summary>
        /// Gets or sets the initial score assigned to this radius server.
        /// </summary>
        [JsonProperty(PropertyName = "radiusServerScore")]
        public long? RadiusServerScore { get; set; }

        /// <summary>
        /// Gets or sets the secret used for this radius server.
        /// </summary>
        [JsonProperty(PropertyName = "radiusServerSecret")]
        public string RadiusServerSecret { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (RadiusServerAddress == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "RadiusServerAddress");
            }
        }
    }
}
