// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The routing policy object used in a RoutingIntent resource.
    /// </summary>
    public partial class RoutingPolicy
    {
        /// <summary>
        /// Initializes a new instance of the RoutingPolicy class.
        /// </summary>
        public RoutingPolicy()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RoutingPolicy class.
        /// </summary>
        /// <param name="name">The unique name for the routing policy.</param>
        /// <param name="destinations">List of all destinations which this
        /// routing policy is applicable to (for example: Internet,
        /// PrivateTraffic).</param>
        /// <param name="nextHop">The next hop resource id on which this
        /// routing policy is applicable to.</param>
        public RoutingPolicy(string name, IList<string> destinations, string nextHop)
        {
            Name = name;
            Destinations = destinations;
            NextHop = nextHop;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the unique name for the routing policy.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets list of all destinations which this routing policy is
        /// applicable to (for example: Internet, PrivateTraffic).
        /// </summary>
        [JsonProperty(PropertyName = "destinations")]
        public IList<string> Destinations { get; set; }

        /// <summary>
        /// Gets or sets the next hop resource id on which this routing policy
        /// is applicable to.
        /// </summary>
        [JsonProperty(PropertyName = "nextHop")]
        public string NextHop { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Destinations == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Destinations");
            }
            if (NextHop == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "NextHop");
            }
        }
    }
}
