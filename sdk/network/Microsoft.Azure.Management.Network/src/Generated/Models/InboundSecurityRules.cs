// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Properties of the Inbound Security Rules resource.
    /// </summary>
    public partial class InboundSecurityRules
    {
        /// <summary>
        /// Initializes a new instance of the InboundSecurityRules class.
        /// </summary>
        public InboundSecurityRules()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the InboundSecurityRules class.
        /// </summary>
        /// <param name="protocol">Protocol. This should be either TCP or UDP.
        /// Possible values include: 'TCP', 'UDP'</param>
        /// <param name="sourceAddressPrefix">The CIDR or source IP range. Only
        /// /30, /31 and /32 Ip ranges are allowed.</param>
        /// <param name="destinationPortRange">NVA port ranges to be opened up.
        /// One needs to provide specific ports.</param>
        public InboundSecurityRules(string protocol = default(string), string sourceAddressPrefix = default(string), int? destinationPortRange = default(int?))
        {
            Protocol = protocol;
            SourceAddressPrefix = sourceAddressPrefix;
            DestinationPortRange = destinationPortRange;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets protocol. This should be either TCP or UDP. Possible
        /// values include: 'TCP', 'UDP'
        /// </summary>
        [JsonProperty(PropertyName = "protocol")]
        public string Protocol { get; set; }

        /// <summary>
        /// Gets or sets the CIDR or source IP range. Only /30, /31 and /32 Ip
        /// ranges are allowed.
        /// </summary>
        [JsonProperty(PropertyName = "sourceAddressPrefix")]
        public string SourceAddressPrefix { get; set; }

        /// <summary>
        /// Gets or sets NVA port ranges to be opened up. One needs to provide
        /// specific ports.
        /// </summary>
        [JsonProperty(PropertyName = "destinationPortRange")]
        public int? DestinationPortRange { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (DestinationPortRange > 65535)
            {
                throw new ValidationException(ValidationRules.InclusiveMaximum, "DestinationPortRange", 65535);
            }
            if (DestinationPortRange < 0)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "DestinationPortRange", 0);
            }
        }
    }
}
