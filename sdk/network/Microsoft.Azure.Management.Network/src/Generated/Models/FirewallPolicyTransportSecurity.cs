// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Configuration needed to perform TLS termination &amp; initiation.
    /// </summary>
    public partial class FirewallPolicyTransportSecurity
    {
        /// <summary>
        /// Initializes a new instance of the FirewallPolicyTransportSecurity
        /// class.
        /// </summary>
        public FirewallPolicyTransportSecurity()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FirewallPolicyTransportSecurity
        /// class.
        /// </summary>
        /// <param name="certificateAuthority">The CA used for intermediate CA
        /// generation.</param>
        /// <param name="excludedDomains">List of domains which are excluded
        /// from TLS termination.</param>
        /// <param name="trustedRootCertificates">Certificates which are to be
        /// trusted by the firewall.</param>
        public FirewallPolicyTransportSecurity(FirewallPolicyCertificateAuthority certificateAuthority = default(FirewallPolicyCertificateAuthority), IList<string> excludedDomains = default(IList<string>), IList<FirewallPolicyTrustedRootCertificate> trustedRootCertificates = default(IList<FirewallPolicyTrustedRootCertificate>))
        {
            CertificateAuthority = certificateAuthority;
            ExcludedDomains = excludedDomains;
            TrustedRootCertificates = trustedRootCertificates;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the CA used for intermediate CA generation.
        /// </summary>
        [JsonProperty(PropertyName = "certificateAuthority")]
        public FirewallPolicyCertificateAuthority CertificateAuthority { get; set; }

        /// <summary>
        /// Gets or sets list of domains which are excluded from TLS
        /// termination.
        /// </summary>
        [JsonProperty(PropertyName = "excludedDomains")]
        public IList<string> ExcludedDomains { get; set; }

        /// <summary>
        /// Gets or sets certificates which are to be trusted by the firewall.
        /// </summary>
        [JsonProperty(PropertyName = "trustedRootCertificates")]
        public IList<FirewallPolicyTrustedRootCertificate> TrustedRootCertificates { get; set; }

    }
}
