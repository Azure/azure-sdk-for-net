// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Allow to exclude some variable satisfy the condition for the WAF check.
    /// </summary>
    public partial class ManagedRulesDefinition
    {
        /// <summary>
        /// Initializes a new instance of the ManagedRulesDefinition class.
        /// </summary>
        public ManagedRulesDefinition()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManagedRulesDefinition class.
        /// </summary>
        /// <param name="managedRuleSets">The managed rule sets that are
        /// associated with the policy.</param>
        /// <param name="exclusions">The Exclusions that are applied on the
        /// policy.</param>
        public ManagedRulesDefinition(IList<ManagedRuleSet> managedRuleSets, IList<OwaspCrsExclusionEntry> exclusions = default(IList<OwaspCrsExclusionEntry>))
        {
            Exclusions = exclusions;
            ManagedRuleSets = managedRuleSets;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the Exclusions that are applied on the policy.
        /// </summary>
        [JsonProperty(PropertyName = "exclusions")]
        public IList<OwaspCrsExclusionEntry> Exclusions { get; set; }

        /// <summary>
        /// Gets or sets the managed rule sets that are associated with the
        /// policy.
        /// </summary>
        [JsonProperty(PropertyName = "managedRuleSets")]
        public IList<ManagedRuleSet> ManagedRuleSets { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ManagedRuleSets == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ManagedRuleSets");
            }
            if (Exclusions != null)
            {
                foreach (var element in Exclusions)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (ManagedRuleSets != null)
            {
                foreach (var element1 in ManagedRuleSets)
                {
                    if (element1 != null)
                    {
                        element1.Validate();
                    }
                }
            }
        }
    }
}
