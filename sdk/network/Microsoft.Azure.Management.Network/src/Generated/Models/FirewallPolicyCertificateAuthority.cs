// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Trusted Root certificates properties for tls.
    /// </summary>
    public partial class FirewallPolicyCertificateAuthority
    {
        /// <summary>
        /// Initializes a new instance of the
        /// FirewallPolicyCertificateAuthority class.
        /// </summary>
        public FirewallPolicyCertificateAuthority()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// FirewallPolicyCertificateAuthority class.
        /// </summary>
        /// <param name="keyVaultSecretId">Secret Id of (base-64 encoded
        /// unencrypted pfx) 'Secret' or 'Certificate' object stored in
        /// KeyVault.</param>
        /// <param name="name">Name of the CA certificate.</param>
        public FirewallPolicyCertificateAuthority(string keyVaultSecretId = default(string), string name = default(string))
        {
            KeyVaultSecretId = keyVaultSecretId;
            Name = name;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets secret Id of (base-64 encoded unencrypted pfx)
        /// 'Secret' or 'Certificate' object stored in KeyVault.
        /// </summary>
        [JsonProperty(PropertyName = "keyVaultSecretId")]
        public string KeyVaultSecretId { get; set; }

        /// <summary>
        /// Gets or sets name of the CA certificate.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

    }
}
