// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// P2SConnectionConfiguration Resource.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class P2SConnectionConfiguration : SubResource
    {
        /// <summary>
        /// Initializes a new instance of the P2SConnectionConfiguration class.
        /// </summary>
        public P2SConnectionConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the P2SConnectionConfiguration class.
        /// </summary>
        /// <param name="id">Resource ID.</param>
        /// <param name="vpnClientAddressPool">The reference to the address
        /// space resource which represents Address space for P2S
        /// VpnClient.</param>
        /// <param name="routingConfiguration">The Routing Configuration
        /// indicating the associated and propagated route tables on this
        /// connection.</param>
        /// <param name="enableInternetSecurity">Flag indicating whether the
        /// enable internet security flag is turned on for the P2S Connections
        /// or not.</param>
        /// <param name="configurationPolicyGroupAssociations">List of
        /// Configuration Policy Groups that this P2SConnectionConfiguration is
        /// attached to.</param>
        /// <param name="previousConfigurationPolicyGroupAssociations">List of
        /// previous Configuration Policy Groups that this
        /// P2SConnectionConfiguration was attached to.</param>
        /// <param name="provisioningState">The provisioning state of the
        /// P2SConnectionConfiguration resource. Possible values include:
        /// 'Succeeded', 'Updating', 'Deleting', 'Failed'</param>
        /// <param name="name">The name of the resource that is unique within a
        /// resource group. This name can be used to access the
        /// resource.</param>
        /// <param name="etag">A unique read-only string that changes whenever
        /// the resource is updated.</param>
        public P2SConnectionConfiguration(string id = default(string), AddressSpace vpnClientAddressPool = default(AddressSpace), RoutingConfiguration routingConfiguration = default(RoutingConfiguration), bool? enableInternetSecurity = default(bool?), IList<SubResource> configurationPolicyGroupAssociations = default(IList<SubResource>), IList<VpnServerConfigurationPolicyGroup> previousConfigurationPolicyGroupAssociations = default(IList<VpnServerConfigurationPolicyGroup>), string provisioningState = default(string), string name = default(string), string etag = default(string))
            : base(id)
        {
            VpnClientAddressPool = vpnClientAddressPool;
            RoutingConfiguration = routingConfiguration;
            EnableInternetSecurity = enableInternetSecurity;
            ConfigurationPolicyGroupAssociations = configurationPolicyGroupAssociations;
            PreviousConfigurationPolicyGroupAssociations = previousConfigurationPolicyGroupAssociations;
            ProvisioningState = provisioningState;
            Name = name;
            Etag = etag;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the reference to the address space resource which
        /// represents Address space for P2S VpnClient.
        /// </summary>
        [JsonProperty(PropertyName = "properties.vpnClientAddressPool")]
        public AddressSpace VpnClientAddressPool { get; set; }

        /// <summary>
        /// Gets or sets the Routing Configuration indicating the associated
        /// and propagated route tables on this connection.
        /// </summary>
        [JsonProperty(PropertyName = "properties.routingConfiguration")]
        public RoutingConfiguration RoutingConfiguration { get; set; }

        /// <summary>
        /// Gets or sets flag indicating whether the enable internet security
        /// flag is turned on for the P2S Connections or not.
        /// </summary>
        [JsonProperty(PropertyName = "properties.enableInternetSecurity")]
        public bool? EnableInternetSecurity { get; set; }

        /// <summary>
        /// Gets list of Configuration Policy Groups that this
        /// P2SConnectionConfiguration is attached to.
        /// </summary>
        [JsonProperty(PropertyName = "properties.configurationPolicyGroupAssociations")]
        public IList<SubResource> ConfigurationPolicyGroupAssociations { get; private set; }

        /// <summary>
        /// Gets list of previous Configuration Policy Groups that this
        /// P2SConnectionConfiguration was attached to.
        /// </summary>
        [JsonProperty(PropertyName = "properties.previousConfigurationPolicyGroupAssociations")]
        public IList<VpnServerConfigurationPolicyGroup> PreviousConfigurationPolicyGroupAssociations { get; private set; }

        /// <summary>
        /// Gets the provisioning state of the P2SConnectionConfiguration
        /// resource. Possible values include: 'Succeeded', 'Updating',
        /// 'Deleting', 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets or sets the name of the resource that is unique within a
        /// resource group. This name can be used to access the resource.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource
        /// is updated.
        /// </summary>
        [JsonProperty(PropertyName = "etag")]
        public string Etag { get; private set; }

    }
}
