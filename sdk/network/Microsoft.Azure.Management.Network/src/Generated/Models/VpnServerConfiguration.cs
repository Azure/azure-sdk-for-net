// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// VpnServerConfiguration Resource.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class VpnServerConfiguration : Resource
    {
        /// <summary>
        /// Initializes a new instance of the VpnServerConfiguration class.
        /// </summary>
        public VpnServerConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VpnServerConfiguration class.
        /// </summary>
        /// <param name="id">Resource ID.</param>
        /// <param name="name">Resource name.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="location">Resource location.</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="vpnServerConfigurationName">The name of the
        /// VpnServerConfiguration that is unique within a resource
        /// group.</param>
        /// <param name="vpnProtocols">VPN protocols for the
        /// VpnServerConfiguration.</param>
        /// <param name="vpnAuthenticationTypes">VPN authentication types for
        /// the VpnServerConfiguration.</param>
        /// <param name="vpnClientRootCertificates">VPN client root certificate
        /// of VpnServerConfiguration.</param>
        /// <param name="vpnClientRevokedCertificates">VPN client revoked
        /// certificate of VpnServerConfiguration.</param>
        /// <param name="radiusServerRootCertificates">Radius Server root
        /// certificate of VpnServerConfiguration.</param>
        /// <param name="radiusClientRootCertificates">Radius client root
        /// certificate of VpnServerConfiguration.</param>
        /// <param name="vpnClientIpsecPolicies">VpnClientIpsecPolicies for
        /// VpnServerConfiguration.</param>
        /// <param name="radiusServerAddress">The radius server address
        /// property of the VpnServerConfiguration resource for point to site
        /// client connection.</param>
        /// <param name="radiusServerSecret">The radius secret property of the
        /// VpnServerConfiguration resource for point to site client
        /// connection.</param>
        /// <param name="radiusServers">Multiple Radius Server configuration
        /// for VpnServerConfiguration.</param>
        /// <param name="aadAuthenticationParameters">The set of aad vpn
        /// authentication parameters.</param>
        /// <param name="provisioningState">The provisioning state of the
        /// VpnServerConfiguration resource. Possible values are: 'Updating',
        /// 'Deleting', and 'Failed'.</param>
        /// <param name="p2SVpnGateways">List of references to
        /// P2SVpnGateways.</param>
        /// <param name="vpnServerConfigurationPropertiesEtag">A unique
        /// read-only string that changes whenever the resource is
        /// updated.</param>
        /// <param name="etag">A unique read-only string that changes whenever
        /// the resource is updated.</param>
        public VpnServerConfiguration(string id = default(string), string name = default(string), string type = default(string), string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string vpnServerConfigurationName = default(string), IList<string> vpnProtocols = default(IList<string>), IList<string> vpnAuthenticationTypes = default(IList<string>), IList<VpnServerConfigVpnClientRootCertificate> vpnClientRootCertificates = default(IList<VpnServerConfigVpnClientRootCertificate>), IList<VpnServerConfigVpnClientRevokedCertificate> vpnClientRevokedCertificates = default(IList<VpnServerConfigVpnClientRevokedCertificate>), IList<VpnServerConfigRadiusServerRootCertificate> radiusServerRootCertificates = default(IList<VpnServerConfigRadiusServerRootCertificate>), IList<VpnServerConfigRadiusClientRootCertificate> radiusClientRootCertificates = default(IList<VpnServerConfigRadiusClientRootCertificate>), IList<IpsecPolicy> vpnClientIpsecPolicies = default(IList<IpsecPolicy>), string radiusServerAddress = default(string), string radiusServerSecret = default(string), IList<RadiusServer> radiusServers = default(IList<RadiusServer>), AadAuthenticationParameters aadAuthenticationParameters = default(AadAuthenticationParameters), string provisioningState = default(string), IList<P2SVpnGateway> p2SVpnGateways = default(IList<P2SVpnGateway>), string vpnServerConfigurationPropertiesEtag = default(string), string etag = default(string))
            : base(id, name, type, location, tags)
        {
            VpnServerConfigurationName = vpnServerConfigurationName;
            VpnProtocols = vpnProtocols;
            VpnAuthenticationTypes = vpnAuthenticationTypes;
            VpnClientRootCertificates = vpnClientRootCertificates;
            VpnClientRevokedCertificates = vpnClientRevokedCertificates;
            RadiusServerRootCertificates = radiusServerRootCertificates;
            RadiusClientRootCertificates = radiusClientRootCertificates;
            VpnClientIpsecPolicies = vpnClientIpsecPolicies;
            RadiusServerAddress = radiusServerAddress;
            RadiusServerSecret = radiusServerSecret;
            RadiusServers = radiusServers;
            AadAuthenticationParameters = aadAuthenticationParameters;
            ProvisioningState = provisioningState;
            P2SVpnGateways = p2SVpnGateways;
            VpnServerConfigurationPropertiesEtag = vpnServerConfigurationPropertiesEtag;
            Etag = etag;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the VpnServerConfiguration that is unique
        /// within a resource group.
        /// </summary>
        [JsonProperty(PropertyName = "properties.name")]
        public string VpnServerConfigurationName { get; set; }

        /// <summary>
        /// Gets or sets VPN protocols for the VpnServerConfiguration.
        /// </summary>
        [JsonProperty(PropertyName = "properties.vpnProtocols")]
        public IList<string> VpnProtocols { get; set; }

        /// <summary>
        /// Gets or sets VPN authentication types for the
        /// VpnServerConfiguration.
        /// </summary>
        [JsonProperty(PropertyName = "properties.vpnAuthenticationTypes")]
        public IList<string> VpnAuthenticationTypes { get; set; }

        /// <summary>
        /// Gets or sets VPN client root certificate of VpnServerConfiguration.
        /// </summary>
        [JsonProperty(PropertyName = "properties.vpnClientRootCertificates")]
        public IList<VpnServerConfigVpnClientRootCertificate> VpnClientRootCertificates { get; set; }

        /// <summary>
        /// Gets or sets VPN client revoked certificate of
        /// VpnServerConfiguration.
        /// </summary>
        [JsonProperty(PropertyName = "properties.vpnClientRevokedCertificates")]
        public IList<VpnServerConfigVpnClientRevokedCertificate> VpnClientRevokedCertificates { get; set; }

        /// <summary>
        /// Gets or sets radius Server root certificate of
        /// VpnServerConfiguration.
        /// </summary>
        [JsonProperty(PropertyName = "properties.radiusServerRootCertificates")]
        public IList<VpnServerConfigRadiusServerRootCertificate> RadiusServerRootCertificates { get; set; }

        /// <summary>
        /// Gets or sets radius client root certificate of
        /// VpnServerConfiguration.
        /// </summary>
        [JsonProperty(PropertyName = "properties.radiusClientRootCertificates")]
        public IList<VpnServerConfigRadiusClientRootCertificate> RadiusClientRootCertificates { get; set; }

        /// <summary>
        /// Gets or sets vpnClientIpsecPolicies for VpnServerConfiguration.
        /// </summary>
        [JsonProperty(PropertyName = "properties.vpnClientIpsecPolicies")]
        public IList<IpsecPolicy> VpnClientIpsecPolicies { get; set; }

        /// <summary>
        /// Gets or sets the radius server address property of the
        /// VpnServerConfiguration resource for point to site client
        /// connection.
        /// </summary>
        [JsonProperty(PropertyName = "properties.radiusServerAddress")]
        public string RadiusServerAddress { get; set; }

        /// <summary>
        /// Gets or sets the radius secret property of the
        /// VpnServerConfiguration resource for point to site client
        /// connection.
        /// </summary>
        [JsonProperty(PropertyName = "properties.radiusServerSecret")]
        public string RadiusServerSecret { get; set; }

        /// <summary>
        /// Gets or sets multiple Radius Server configuration for
        /// VpnServerConfiguration.
        /// </summary>
        [JsonProperty(PropertyName = "properties.radiusServers")]
        public IList<RadiusServer> RadiusServers { get; set; }

        /// <summary>
        /// Gets or sets the set of aad vpn authentication parameters.
        /// </summary>
        [JsonProperty(PropertyName = "properties.aadAuthenticationParameters")]
        public AadAuthenticationParameters AadAuthenticationParameters { get; set; }

        /// <summary>
        /// Gets the provisioning state of the VpnServerConfiguration resource.
        /// Possible values are: 'Updating', 'Deleting', and 'Failed'.
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets list of references to P2SVpnGateways.
        /// </summary>
        [JsonProperty(PropertyName = "properties.p2SVpnGateways")]
        public IList<P2SVpnGateway> P2SVpnGateways { get; private set; }

        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource
        /// is updated.
        /// </summary>
        [JsonProperty(PropertyName = "properties.etag")]
        public string VpnServerConfigurationPropertiesEtag { get; private set; }

        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource
        /// is updated.
        /// </summary>
        [JsonProperty(PropertyName = "etag")]
        public string Etag { get; private set; }

    }
}
