// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Describes the threshold for declaring a test successful.
    /// </summary>
    public partial class ConnectionMonitorSuccessThreshold
    {
        /// <summary>
        /// Initializes a new instance of the ConnectionMonitorSuccessThreshold
        /// class.
        /// </summary>
        public ConnectionMonitorSuccessThreshold()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ConnectionMonitorSuccessThreshold
        /// class.
        /// </summary>
        /// <param name="checksFailedPercent">The maximum percentage of failed
        /// checks permitted for a test to evaluate as successful.</param>
        /// <param name="roundTripTimeMs">The maximum round-trip time in
        /// milliseconds permitted for a test to evaluate as
        /// successful.</param>
        public ConnectionMonitorSuccessThreshold(int? checksFailedPercent = default(int?), double? roundTripTimeMs = default(double?))
        {
            ChecksFailedPercent = checksFailedPercent;
            RoundTripTimeMs = roundTripTimeMs;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the maximum percentage of failed checks permitted for
        /// a test to evaluate as successful.
        /// </summary>
        [JsonProperty(PropertyName = "checksFailedPercent")]
        public int? ChecksFailedPercent { get; set; }

        /// <summary>
        /// Gets or sets the maximum round-trip time in milliseconds permitted
        /// for a test to evaluate as successful.
        /// </summary>
        [JsonProperty(PropertyName = "roundTripTimeMs")]
        public double? RoundTripTimeMs { get; set; }

    }
}
