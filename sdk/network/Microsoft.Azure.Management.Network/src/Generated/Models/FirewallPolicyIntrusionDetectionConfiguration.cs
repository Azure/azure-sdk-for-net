// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The operation for configuring intrusion detection.
    /// </summary>
    public partial class FirewallPolicyIntrusionDetectionConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the
        /// FirewallPolicyIntrusionDetectionConfiguration class.
        /// </summary>
        public FirewallPolicyIntrusionDetectionConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// FirewallPolicyIntrusionDetectionConfiguration class.
        /// </summary>
        /// <param name="signatureOverrides">List of specific signatures
        /// states.</param>
        /// <param name="bypassTrafficSettings">List of rules for traffic to
        /// bypass.</param>
        /// <param name="privateRanges">IDPS Private IP address ranges are used
        /// to identify traffic direction (i.e. inbound, outbound, etc.). By
        /// default, only ranges defined by IANA RFC 1918 are considered
        /// private IP addresses. To modify default ranges, specify your
        /// Private IP address ranges with this property</param>
        public FirewallPolicyIntrusionDetectionConfiguration(IList<FirewallPolicyIntrusionDetectionSignatureSpecification> signatureOverrides = default(IList<FirewallPolicyIntrusionDetectionSignatureSpecification>), IList<FirewallPolicyIntrusionDetectionBypassTrafficSpecifications> bypassTrafficSettings = default(IList<FirewallPolicyIntrusionDetectionBypassTrafficSpecifications>), IList<string> privateRanges = default(IList<string>))
        {
            SignatureOverrides = signatureOverrides;
            BypassTrafficSettings = bypassTrafficSettings;
            PrivateRanges = privateRanges;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets list of specific signatures states.
        /// </summary>
        [JsonProperty(PropertyName = "signatureOverrides")]
        public IList<FirewallPolicyIntrusionDetectionSignatureSpecification> SignatureOverrides { get; set; }

        /// <summary>
        /// Gets or sets list of rules for traffic to bypass.
        /// </summary>
        [JsonProperty(PropertyName = "bypassTrafficSettings")]
        public IList<FirewallPolicyIntrusionDetectionBypassTrafficSpecifications> BypassTrafficSettings { get; set; }

        /// <summary>
        /// Gets or sets IDPS Private IP address ranges are used to identify
        /// traffic direction (i.e. inbound, outbound, etc.). By default, only
        /// ranges defined by IANA RFC 1918 are considered private IP
        /// addresses. To modify default ranges, specify your Private IP
        /// address ranges with this property
        /// </summary>
        [JsonProperty(PropertyName = "privateRanges")]
        public IList<string> PrivateRanges { get; set; }

    }
}
