// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Network Manager Deployment Status.
    /// </summary>
    public partial class NetworkManagerDeploymentStatus
    {
        /// <summary>
        /// Initializes a new instance of the NetworkManagerDeploymentStatus
        /// class.
        /// </summary>
        public NetworkManagerDeploymentStatus()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NetworkManagerDeploymentStatus
        /// class.
        /// </summary>
        /// <param name="commitTime">Commit Time.</param>
        /// <param name="region">Region Name.</param>
        /// <param name="deploymentStatus">Deployment Status. Possible values
        /// include: 'NotStarted', 'Deploying', 'Deployed', 'Failed'</param>
        /// <param name="configurationIds">List of configuration ids.</param>
        /// <param name="deploymentType">Possible values include:
        /// 'SecurityAdmin', 'Connectivity'</param>
        /// <param name="errorMessage">Error Message.</param>
        public NetworkManagerDeploymentStatus(System.DateTime? commitTime = default(System.DateTime?), string region = default(string), string deploymentStatus = default(string), IList<string> configurationIds = default(IList<string>), string deploymentType = default(string), string errorMessage = default(string))
        {
            CommitTime = commitTime;
            Region = region;
            DeploymentStatus = deploymentStatus;
            ConfigurationIds = configurationIds;
            DeploymentType = deploymentType;
            ErrorMessage = errorMessage;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets commit Time.
        /// </summary>
        [JsonProperty(PropertyName = "commitTime")]
        public System.DateTime? CommitTime { get; set; }

        /// <summary>
        /// Gets or sets region Name.
        /// </summary>
        [JsonProperty(PropertyName = "region")]
        public string Region { get; set; }

        /// <summary>
        /// Gets or sets deployment Status. Possible values include:
        /// 'NotStarted', 'Deploying', 'Deployed', 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "deploymentStatus")]
        public string DeploymentStatus { get; set; }

        /// <summary>
        /// Gets or sets list of configuration ids.
        /// </summary>
        [JsonProperty(PropertyName = "configurationIds")]
        public IList<string> ConfigurationIds { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'SecurityAdmin',
        /// 'Connectivity'
        /// </summary>
        [JsonProperty(PropertyName = "deploymentType")]
        public string DeploymentType { get; set; }

        /// <summary>
        /// Gets or sets error Message.
        /// </summary>
        [JsonProperty(PropertyName = "errorMessage")]
        public string ErrorMessage { get; set; }

    }
}
