// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataLake.Store
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for VirtualNetworkRulesOperations.
    /// </summary>
    public static partial class VirtualNetworkRulesOperationsExtensions
    {
            /// <summary>
            /// Lists the Data Lake Store virtual network rules within the specified Data
            /// Lake Store account.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group.
            /// </param>
            /// <param name='accountName'>
            /// The name of the Data Lake Store account.
            /// </param>
            public static IPage<VirtualNetworkRule> ListByAccount(this IVirtualNetworkRulesOperations operations, string resourceGroupName, string accountName)
            {
                return operations.ListByAccountAsync(resourceGroupName, accountName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists the Data Lake Store virtual network rules within the specified Data
            /// Lake Store account.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group.
            /// </param>
            /// <param name='accountName'>
            /// The name of the Data Lake Store account.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<VirtualNetworkRule>> ListByAccountAsync(this IVirtualNetworkRulesOperations operations, string resourceGroupName, string accountName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByAccountWithHttpMessagesAsync(resourceGroupName, accountName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates or updates the specified virtual network rule. During update, the
            /// virtual network rule with the specified name will be replaced with this new
            /// virtual network rule.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group.
            /// </param>
            /// <param name='accountName'>
            /// The name of the Data Lake Store account.
            /// </param>
            /// <param name='virtualNetworkRuleName'>
            /// The name of the virtual network rule to create or update.
            /// </param>
            /// <param name='parameters'>
            /// Parameters supplied to create or update the virtual network rule.
            /// </param>
            public static VirtualNetworkRule CreateOrUpdate(this IVirtualNetworkRulesOperations operations, string resourceGroupName, string accountName, string virtualNetworkRuleName, CreateOrUpdateVirtualNetworkRuleParameters parameters)
            {
                return operations.CreateOrUpdateAsync(resourceGroupName, accountName, virtualNetworkRuleName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates or updates the specified virtual network rule. During update, the
            /// virtual network rule with the specified name will be replaced with this new
            /// virtual network rule.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group.
            /// </param>
            /// <param name='accountName'>
            /// The name of the Data Lake Store account.
            /// </param>
            /// <param name='virtualNetworkRuleName'>
            /// The name of the virtual network rule to create or update.
            /// </param>
            /// <param name='parameters'>
            /// Parameters supplied to create or update the virtual network rule.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<VirtualNetworkRule> CreateOrUpdateAsync(this IVirtualNetworkRulesOperations operations, string resourceGroupName, string accountName, string virtualNetworkRuleName, CreateOrUpdateVirtualNetworkRuleParameters parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, accountName, virtualNetworkRuleName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets the specified Data Lake Store virtual network rule.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group.
            /// </param>
            /// <param name='accountName'>
            /// The name of the Data Lake Store account.
            /// </param>
            /// <param name='virtualNetworkRuleName'>
            /// The name of the virtual network rule to retrieve.
            /// </param>
            public static VirtualNetworkRule Get(this IVirtualNetworkRulesOperations operations, string resourceGroupName, string accountName, string virtualNetworkRuleName)
            {
                return operations.GetAsync(resourceGroupName, accountName, virtualNetworkRuleName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the specified Data Lake Store virtual network rule.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group.
            /// </param>
            /// <param name='accountName'>
            /// The name of the Data Lake Store account.
            /// </param>
            /// <param name='virtualNetworkRuleName'>
            /// The name of the virtual network rule to retrieve.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<VirtualNetworkRule> GetAsync(this IVirtualNetworkRulesOperations operations, string resourceGroupName, string accountName, string virtualNetworkRuleName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, accountName, virtualNetworkRuleName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Updates the specified virtual network rule.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group.
            /// </param>
            /// <param name='accountName'>
            /// The name of the Data Lake Store account.
            /// </param>
            /// <param name='virtualNetworkRuleName'>
            /// The name of the virtual network rule to update.
            /// </param>
            /// <param name='parameters'>
            /// Parameters supplied to update the virtual network rule.
            /// </param>
            public static VirtualNetworkRule Update(this IVirtualNetworkRulesOperations operations, string resourceGroupName, string accountName, string virtualNetworkRuleName, UpdateVirtualNetworkRuleParameters parameters = default(UpdateVirtualNetworkRuleParameters))
            {
                return operations.UpdateAsync(resourceGroupName, accountName, virtualNetworkRuleName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Updates the specified virtual network rule.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group.
            /// </param>
            /// <param name='accountName'>
            /// The name of the Data Lake Store account.
            /// </param>
            /// <param name='virtualNetworkRuleName'>
            /// The name of the virtual network rule to update.
            /// </param>
            /// <param name='parameters'>
            /// Parameters supplied to update the virtual network rule.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<VirtualNetworkRule> UpdateAsync(this IVirtualNetworkRulesOperations operations, string resourceGroupName, string accountName, string virtualNetworkRuleName, UpdateVirtualNetworkRuleParameters parameters = default(UpdateVirtualNetworkRuleParameters), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(resourceGroupName, accountName, virtualNetworkRuleName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes the specified virtual network rule from the specified Data Lake
            /// Store account.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group.
            /// </param>
            /// <param name='accountName'>
            /// The name of the Data Lake Store account.
            /// </param>
            /// <param name='virtualNetworkRuleName'>
            /// The name of the virtual network rule to delete.
            /// </param>
            public static void Delete(this IVirtualNetworkRulesOperations operations, string resourceGroupName, string accountName, string virtualNetworkRuleName)
            {
                operations.DeleteAsync(resourceGroupName, accountName, virtualNetworkRuleName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes the specified virtual network rule from the specified Data Lake
            /// Store account.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the Azure resource group.
            /// </param>
            /// <param name='accountName'>
            /// The name of the Data Lake Store account.
            /// </param>
            /// <param name='virtualNetworkRuleName'>
            /// The name of the virtual network rule to delete.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IVirtualNetworkRulesOperations operations, string resourceGroupName, string accountName, string virtualNetworkRuleName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, accountName, virtualNetworkRuleName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Lists the Data Lake Store virtual network rules within the specified Data
            /// Lake Store account.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<VirtualNetworkRule> ListByAccountNext(this IVirtualNetworkRulesOperations operations, string nextPageLink)
            {
                return operations.ListByAccountNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists the Data Lake Store virtual network rules within the specified Data
            /// Lake Store account.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<VirtualNetworkRule>> ListByAccountNextAsync(this IVirtualNetworkRulesOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByAccountNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
