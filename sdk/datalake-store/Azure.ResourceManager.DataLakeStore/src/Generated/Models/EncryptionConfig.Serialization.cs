// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DataLakeStore.Models
{
    public partial class EncryptionConfig : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("type");
            writer.WriteStringValue(ConfigType.ToSerialString());
            if (Optional.IsDefined(KeyVaultMetaInfo))
            {
                writer.WritePropertyName("keyVaultMetaInfo");
                writer.WriteObjectValue(KeyVaultMetaInfo);
            }
            writer.WriteEndObject();
        }

        internal static EncryptionConfig DeserializeEncryptionConfig(JsonElement element)
        {
            EncryptionConfigType type = default;
            Optional<KeyVaultMetaInfo> keyVaultMetaInfo = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("type"))
                {
                    type = property.Value.GetString().ToEncryptionConfigType();
                    continue;
                }
                if (property.NameEquals("keyVaultMetaInfo"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    keyVaultMetaInfo = KeyVaultMetaInfo.DeserializeKeyVaultMetaInfo(property.Value);
                    continue;
                }
            }
            return new EncryptionConfig(type, keyVaultMetaInfo.Value);
        }
    }
}
