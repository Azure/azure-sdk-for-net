// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DigitalTwins.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Properties related to EventGrid.
    /// </summary>
    public partial class EventGrid : DigitalTwinsEndpointResourceProperties
    {
        /// <summary>
        /// Initializes a new instance of the EventGrid class.
        /// </summary>
        public EventGrid()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EventGrid class.
        /// </summary>
        /// <param name="topicEndpoint">EventGrid Topic Endpoint</param>
        /// <param name="accessKey1">EventGrid secondary accesskey. Will be
        /// obfuscated during read.</param>
        /// <param name="provisioningState">The provisioning state. Possible
        /// values include: 'Provisioning', 'Deleting', 'Succeeded', 'Failed',
        /// 'Canceled', 'Deleted', 'Warning', 'Suspending', 'Restoring',
        /// 'Moving', 'Disabled'</param>
        /// <param name="createdTime">Time when the Endpoint was added to
        /// DigitalTwinsInstance.</param>
        /// <param name="authenticationType">Specifies the authentication type
        /// being used for connecting to the endpoint. Possible values include:
        /// 'KeyBased', 'IdentityBased'</param>
        /// <param name="deadLetterSecret">Dead letter storage secret for
        /// key-based authentication. Will be obfuscated during read.</param>
        /// <param name="deadLetterUri">Dead letter storage URL for
        /// identity-based authentication.</param>
        /// <param name="accessKey2">EventGrid secondary accesskey. Will be
        /// obfuscated during read.</param>
        public EventGrid(string topicEndpoint, string accessKey1, string provisioningState = default(string), System.DateTime? createdTime = default(System.DateTime?), string authenticationType = default(string), string deadLetterSecret = default(string), string deadLetterUri = default(string), string accessKey2 = default(string))
            : base(provisioningState, createdTime, authenticationType, deadLetterSecret, deadLetterUri)
        {
            TopicEndpoint = topicEndpoint;
            AccessKey1 = accessKey1;
            AccessKey2 = accessKey2;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets eventGrid Topic Endpoint
        /// </summary>
        [JsonProperty(PropertyName = "TopicEndpoint")]
        public string TopicEndpoint { get; set; }

        /// <summary>
        /// Gets or sets eventGrid secondary accesskey. Will be obfuscated
        /// during read.
        /// </summary>
        [JsonProperty(PropertyName = "accessKey1")]
        public string AccessKey1 { get; set; }

        /// <summary>
        /// Gets or sets eventGrid secondary accesskey. Will be obfuscated
        /// during read.
        /// </summary>
        [JsonProperty(PropertyName = "accessKey2")]
        public string AccessKey2 { get; set; }

    }
}
