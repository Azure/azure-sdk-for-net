// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DigitalTwins.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Properties related to ServiceBus.
    /// </summary>
    public partial class ServiceBus : DigitalTwinsEndpointResourceProperties
    {
        /// <summary>
        /// Initializes a new instance of the ServiceBus class.
        /// </summary>
        public ServiceBus()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ServiceBus class.
        /// </summary>
        /// <param name="provisioningState">The provisioning state. Possible
        /// values include: 'Provisioning', 'Deleting', 'Succeeded', 'Failed',
        /// 'Canceled', 'Deleted', 'Warning', 'Suspending', 'Restoring',
        /// 'Moving', 'Disabled'</param>
        /// <param name="createdTime">Time when the Endpoint was added to
        /// DigitalTwinsInstance.</param>
        /// <param name="authenticationType">Specifies the authentication type
        /// being used for connecting to the endpoint. Possible values include:
        /// 'KeyBased', 'IdentityBased'</param>
        /// <param name="deadLetterSecret">Dead letter storage secret for
        /// key-based authentication. Will be obfuscated during read.</param>
        /// <param name="deadLetterUri">Dead letter storage URL for
        /// identity-based authentication.</param>
        /// <param name="primaryConnectionString">PrimaryConnectionString of
        /// the endpoint for key-based authentication. Will be obfuscated
        /// during read.</param>
        /// <param name="secondaryConnectionString">SecondaryConnectionString
        /// of the endpoint for key-based authentication. Will be obfuscated
        /// during read.</param>
        /// <param name="endpointUri">The URL of the ServiceBus namespace for
        /// identity-based authentication. It must include the protocol
        /// sb://</param>
        /// <param name="entityPath">The ServiceBus Topic name for
        /// identity-based authentication</param>
        public ServiceBus(string provisioningState = default(string), System.DateTime? createdTime = default(System.DateTime?), string authenticationType = default(string), string deadLetterSecret = default(string), string deadLetterUri = default(string), string primaryConnectionString = default(string), string secondaryConnectionString = default(string), string endpointUri = default(string), string entityPath = default(string))
            : base(provisioningState, createdTime, authenticationType, deadLetterSecret, deadLetterUri)
        {
            PrimaryConnectionString = primaryConnectionString;
            SecondaryConnectionString = secondaryConnectionString;
            EndpointUri = endpointUri;
            EntityPath = entityPath;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets primaryConnectionString of the endpoint for key-based
        /// authentication. Will be obfuscated during read.
        /// </summary>
        [JsonProperty(PropertyName = "primaryConnectionString")]
        public string PrimaryConnectionString { get; set; }

        /// <summary>
        /// Gets or sets secondaryConnectionString of the endpoint for
        /// key-based authentication. Will be obfuscated during read.
        /// </summary>
        [JsonProperty(PropertyName = "secondaryConnectionString")]
        public string SecondaryConnectionString { get; set; }

        /// <summary>
        /// Gets or sets the URL of the ServiceBus namespace for identity-based
        /// authentication. It must include the protocol sb://
        /// </summary>
        [JsonProperty(PropertyName = "endpointUri")]
        public string EndpointUri { get; set; }

        /// <summary>
        /// Gets or sets the ServiceBus Topic name for identity-based
        /// authentication
        /// </summary>
        [JsonProperty(PropertyName = "entityPath")]
        public string EntityPath { get; set; }

    }
}
