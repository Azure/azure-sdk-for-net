// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DigitalTwins.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Properties related to EventHub.
    /// </summary>
    [Newtonsoft.Json.JsonObject("EventHub")]
    public partial class EventHub : DigitalTwinsEndpointResourceProperties
    {
        /// <summary>
        /// Initializes a new instance of the EventHub class.
        /// </summary>
        public EventHub()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EventHub class.
        /// </summary>
        /// <param name="connectionStringPrimaryKey">PrimaryConnectionString of
        /// the endpoint. Will be obfuscated during read.</param>
        /// <param name="provisioningState">The provisioning state. Possible
        /// values include: 'Provisioning', 'Deleting', 'Succeeded', 'Failed',
        /// 'Canceled', 'Deleted', 'Warning', 'Suspending', 'Restoring',
        /// 'Moving', 'Disabled'</param>
        /// <param name="createdTime">Time when the Endpoint was added to
        /// DigitalTwinsInstance.</param>
        /// <param name="deadLetterSecret">Dead letter storage secret. Will be
        /// obfuscated during read.</param>
        /// <param
        /// name="connectionStringSecondaryKey">SecondaryConnectionString of
        /// the endpoint. Will be obfuscated during read.</param>
        public EventHub(string connectionStringPrimaryKey, string provisioningState = default(string), System.DateTime? createdTime = default(System.DateTime?), string deadLetterSecret = default(string), string connectionStringSecondaryKey = default(string))
            : base(provisioningState, createdTime, deadLetterSecret)
        {
            ConnectionStringPrimaryKey = connectionStringPrimaryKey;
            ConnectionStringSecondaryKey = connectionStringSecondaryKey;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets primaryConnectionString of the endpoint. Will be
        /// obfuscated during read.
        /// </summary>
        [JsonProperty(PropertyName = "connectionStringPrimaryKey")]
        public string ConnectionStringPrimaryKey { get; set; }

        /// <summary>
        /// Gets or sets secondaryConnectionString of the endpoint. Will be
        /// obfuscated during read.
        /// </summary>
        [JsonProperty(PropertyName = "connectionStringSecondaryKey")]
        public string ConnectionStringSecondaryKey { get; set; }

    }
}
