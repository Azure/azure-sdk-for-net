// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.DigitalTwins.Models
{
    /// <summary> The name of the SKU. </summary>
    public readonly partial struct DigitalTwinsSku : IEquatable<DigitalTwinsSku>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="DigitalTwinsSku"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public DigitalTwinsSku(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string F1Value = "F1";

        /// <summary> F1. </summary>
        public static DigitalTwinsSku F1 { get; } = new DigitalTwinsSku(F1Value);
        /// <summary> Determines if two <see cref="DigitalTwinsSku"/> values are the same. </summary>
        public static bool operator ==(DigitalTwinsSku left, DigitalTwinsSku right) => left.Equals(right);
        /// <summary> Determines if two <see cref="DigitalTwinsSku"/> values are not the same. </summary>
        public static bool operator !=(DigitalTwinsSku left, DigitalTwinsSku right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="DigitalTwinsSku"/>. </summary>
        public static implicit operator DigitalTwinsSku(string value) => new DigitalTwinsSku(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is DigitalTwinsSku other && Equals(other);
        /// <inheritdoc />
        public bool Equals(DigitalTwinsSku other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
