// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.AI.Chat
{
    public partial class ChatCompletionOptions : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("messages"u8);
            writer.WriteStartArray();
            foreach (var item in Messages)
            {
                writer.WriteObjectValue(item);
            }
            writer.WriteEndArray();
            writer.WritePropertyName("stream"u8);
            writer.WriteBooleanValue(Stream);
            if (Optional.IsDefined(SessionState))
            {
                writer.WritePropertyName("session_state"u8);
#if NET6_0_OR_GREATER
				writer.WriteRawValue(SessionState);
#else
                JsonSerializer.Serialize(writer, JsonDocument.Parse(SessionState.ToString()).RootElement);
#endif
            }
            if (Optional.IsCollectionDefined(ExtraArguments))
            {
                writer.WritePropertyName("extra_args"u8);
                writer.WriteStartObject();
                foreach (var item in ExtraArguments)
                {
                    writer.WritePropertyName(item.Key);
                    if (item.Value == null)
                    {
                        writer.WriteNullValue();
                        continue;
                    }
#if NET6_0_OR_GREATER
				writer.WriteRawValue(item.Value);
#else
                    JsonSerializer.Serialize(writer, JsonDocument.Parse(item.Value.ToString()).RootElement);
#endif
                }
                writer.WriteEndObject();
            }
            writer.WriteEndObject();
        }

        /// <summary> Convert into a Utf8JsonRequestContent. </summary>
        internal virtual RequestContent ToRequestContent()
        {
            var content = new Utf8JsonRequestContent();
            content.JsonWriter.WriteObjectValue(this);
            return content;
        }
    }
}
