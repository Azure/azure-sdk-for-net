// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure;
using Azure.Core;

namespace Azure.AI.Chat
{
    public partial class ChatChoice
    {
        internal static ChatChoice DeserializeChatChoice(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            long index = default;
            ChatMessage message = default;
            Optional<BinaryData> sessionState = default;
            Optional<BinaryData> extraArgs = default;
            FinishReason finishReason = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("index"u8))
                {
                    index = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("message"u8))
                {
                    message = ChatMessage.DeserializeChatMessage(property.Value);
                    continue;
                }
                if (property.NameEquals("session_state"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    sessionState = BinaryData.FromString(property.Value.GetRawText());
                    continue;
                }
                if (property.NameEquals("extra_args"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    extraArgs = BinaryData.FromString(property.Value.GetRawText());
                    continue;
                }
                if (property.NameEquals("finish_reason"u8))
                {
                    finishReason = new FinishReason(property.Value.GetString());
                    continue;
                }
            }
            return new ChatChoice(index, message, sessionState.Value, extraArgs.Value, finishReason);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static ChatChoice FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeChatChoice(document.RootElement);
        }
    }
}
