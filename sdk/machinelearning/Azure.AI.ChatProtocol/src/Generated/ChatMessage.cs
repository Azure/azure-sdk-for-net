// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.AI.ChatProtocol
{
    /// <summary> placeholder. </summary>
    public partial class ChatMessage
    {
        /// <summary> Initializes a new instance of ChatMessage. </summary>
        /// <param name="content"> placeholder. </param>
        /// <param name="role"> placeholder. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="content"/> is null. </exception>
        public ChatMessage(string content, ChatRole role)
        {
            Argument.AssertNotNull(content, nameof(content));

            Content = content;
            Role = role;
        }

        /// <summary> Initializes a new instance of ChatMessage. </summary>
        /// <param name="content"> placeholder. </param>
        /// <param name="role"> placeholder. </param>
        /// <param name="sessionState"> placeholder. </param>
        internal ChatMessage(string content, ChatRole role, BinaryData sessionState)
        {
            Content = content;
            Role = role;
            SessionState = sessionState;
        }

        /// <summary> placeholder. </summary>
        public string Content { get; set; }
        /// <summary> placeholder. </summary>
        public ChatRole Role { get; set; }
        /// <summary>
        /// placeholder
        /// <para>
        /// To assign an object to this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formated json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public BinaryData SessionState { get; set; }
    }
}
