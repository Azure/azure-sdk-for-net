// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.AI.MetricsAdvisor.Models;

namespace Azure.AI.MetricsAdvisor
{
    /// <summary> The AnomalyFeedback. </summary>
    public partial class MetricAnomalyFeedback : MetricFeedback
    {

        /// <summary> Initializes a new instance of MetricAnomalyFeedback. </summary>
        /// <param name="kind"> feedback type. </param>
        /// <param name="id"> feedback unique id. </param>
        /// <param name="createdTime"> feedback created time. </param>
        /// <param name="userPrincipal"> user who gives this feedback. </param>
        /// <param name="metricId"> metric unique id. </param>
        /// <param name="dimensionFilter"> . </param>
        /// <param name="startTime"> the start timestamp of feedback time range. </param>
        /// <param name="endTime"> the end timestamp of feedback time range, when equals to startTime means only one timestamp. </param>
        /// <param name="valueInternal"> . </param>
        /// <param name="detectionConfigurationId"> the corresponding anomaly detection configuration of this feedback. </param>
        /// <param name="detectionConfigurationSnapshot"> . </param>
        internal MetricAnomalyFeedback(MetricFeedbackKind kind, string id, DateTimeOffset? createdTime, string userPrincipal, string metricId, FeedbackDimensionFilter dimensionFilter, DateTimeOffset startTime, DateTimeOffset endTime, AnomalyFeedbackValue valueInternal, string detectionConfigurationId, AnomalyDetectionConfiguration detectionConfigurationSnapshot) : base(kind, id, createdTime, userPrincipal, metricId, dimensionFilter)
        {
            StartTime = startTime;
            EndTime = endTime;
            ValueInternal = valueInternal;
            DetectionConfigurationId = detectionConfigurationId;
            DetectionConfigurationSnapshot = detectionConfigurationSnapshot;
            Kind = kind;
        }
    }
}
