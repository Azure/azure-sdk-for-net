// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.AI.MetricsAdvisor.Models
{
    /// <summary> The MetricSeriesQueryOptions. </summary>
    internal partial class MetricSeriesQueryOptions
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="MetricSeriesQueryOptions"/>. </summary>
        /// <param name="activeSince"> query series ingested after this time, the format should be yyyy-MM-ddTHH:mm:ssZ. </param>
        public MetricSeriesQueryOptions(DateTimeOffset activeSince)
        {
            ActiveSince = activeSince;
            DimensionFilter = new ChangeTrackingDictionary<string, IList<string>>();
        }

        /// <summary> Initializes a new instance of <see cref="MetricSeriesQueryOptions"/>. </summary>
        /// <param name="activeSince"> query series ingested after this time, the format should be yyyy-MM-ddTHH:mm:ssZ. </param>
        /// <param name="dimensionFilter"> filter specific dimension name and values. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal MetricSeriesQueryOptions(DateTimeOffset activeSince, IDictionary<string, IList<string>> dimensionFilter, Dictionary<string, BinaryData> rawData)
        {
            ActiveSince = activeSince;
            DimensionFilter = dimensionFilter;
            _rawData = rawData;
        }

        /// <summary> Initializes a new instance of <see cref="MetricSeriesQueryOptions"/> for deserialization. </summary>
        internal MetricSeriesQueryOptions()
        {
        }

        /// <summary> query series ingested after this time, the format should be yyyy-MM-ddTHH:mm:ssZ. </summary>
        public DateTimeOffset ActiveSince { get; }
        /// <summary> filter specific dimension name and values. </summary>
        public IDictionary<string, IList<string>> DimensionFilter { get; }
    }
}
