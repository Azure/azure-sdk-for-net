// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.AI.MetricsAdvisor.Models
{
    /// <summary> The MetricFeedback. </summary>
    internal partial class MetricFeedback
    {
        /// <summary> Initializes a new instance of MetricFeedback. </summary>
        /// <param name="metricId"> metric unique id. </param>
        /// <param name="dimensionFilter"> . </param>
        /// <exception cref="ArgumentNullException"> <paramref name="dimensionFilter"/> is null. </exception>
        public MetricFeedback(Guid metricId, FeedbackDimensionFilter dimensionFilter)
        {
            if (dimensionFilter == null)
            {
                throw new ArgumentNullException(nameof(dimensionFilter));
            }

            MetricId = metricId;
            DimensionFilter = dimensionFilter;
        }

        /// <summary> Initializes a new instance of MetricFeedback. </summary>
        /// <param name="feedbackType"> feedback type. </param>
        /// <param name="feedbackId"> feedback unique id. </param>
        /// <param name="createdTime"> feedback created time. </param>
        /// <param name="userPrincipal"> user who gives this feedback. </param>
        /// <param name="metricId"> metric unique id. </param>
        /// <param name="dimensionFilter"> . </param>
        internal MetricFeedback(FeedbackType feedbackType, Guid? feedbackId, DateTimeOffset? createdTime, string userPrincipal, Guid metricId, FeedbackDimensionFilter dimensionFilter)
        {
            FeedbackType = feedbackType;
            FeedbackId = feedbackId;
            CreatedTime = createdTime;
            UserPrincipal = userPrincipal;
            MetricId = metricId;
            DimensionFilter = dimensionFilter;
        }

        /// <summary> feedback type. </summary>
        internal FeedbackType FeedbackType { get; set; }
        /// <summary> feedback unique id. </summary>
        public Guid? FeedbackId { get; }
        /// <summary> feedback created time. </summary>
        public DateTimeOffset? CreatedTime { get; }
        /// <summary> user who gives this feedback. </summary>
        public string UserPrincipal { get; }
        /// <summary> metric unique id. </summary>
        public Guid MetricId { get; set; }
        public FeedbackDimensionFilter DimensionFilter { get; set; }
    }
}
