// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.MetricsAdvisor.Models
{
    /// <summary> The SeverityFilterCondition. </summary>
    internal partial class SeverityFilterCondition
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="SeverityFilterCondition"/>. </summary>
        /// <param name="min"> min severity. </param>
        /// <param name="max"> max severity. </param>
        public SeverityFilterCondition(AnomalySeverity min, AnomalySeverity max)
        {
            Min = min;
            Max = max;
        }

        /// <summary> Initializes a new instance of <see cref="SeverityFilterCondition"/>. </summary>
        /// <param name="min"> min severity. </param>
        /// <param name="max"> max severity. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal SeverityFilterCondition(AnomalySeverity min, AnomalySeverity max, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Min = min;
            Max = max;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="SeverityFilterCondition"/> for deserialization. </summary>
        internal SeverityFilterCondition()
        {
        }

        /// <summary> min severity. </summary>
        public AnomalySeverity Min { get; }
        /// <summary> max severity. </summary>
        public AnomalySeverity Max { get; }
    }
}
