// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.AI.MetricsAdvisor;

namespace Azure.AI.MetricsAdvisor.Models
{
    /// <summary> The AlertingResultQuery. </summary>
    internal partial class AlertingResultQuery
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="AlertingResultQuery"/>. </summary>
        /// <param name="startTime"> start time. </param>
        /// <param name="endTime"> end time. </param>
        /// <param name="timeMode"> time mode. </param>
        public AlertingResultQuery(DateTimeOffset startTime, DateTimeOffset endTime, AlertQueryTimeMode timeMode)
        {
            StartTime = startTime;
            EndTime = endTime;
            TimeMode = timeMode;
        }

        /// <summary> Initializes a new instance of <see cref="AlertingResultQuery"/>. </summary>
        /// <param name="startTime"> start time. </param>
        /// <param name="endTime"> end time. </param>
        /// <param name="timeMode"> time mode. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal AlertingResultQuery(DateTimeOffset startTime, DateTimeOffset endTime, AlertQueryTimeMode timeMode, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            StartTime = startTime;
            EndTime = endTime;
            TimeMode = timeMode;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="AlertingResultQuery"/> for deserialization. </summary>
        internal AlertingResultQuery()
        {
        }

        /// <summary> start time. </summary>
        public DateTimeOffset StartTime { get; }
        /// <summary> end time. </summary>
        public DateTimeOffset EndTime { get; }
        /// <summary> time mode. </summary>
        public AlertQueryTimeMode TimeMode { get; }
    }
}
