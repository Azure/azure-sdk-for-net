// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.AI.Translation.Text
{
    /// <summary> An object returning sentence boundaries in the input and output texts. </summary>
    public partial class SentenceBoundaries
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="SentenceBoundaries"/>. </summary>
        /// <param name="lengthsOfSourceSentences">
        /// An integer array representing the lengths of the sentences in the input text.
        /// The length of the array is the number of sentences, and the values are the length of each sentence.
        /// </param>
        /// <param name="lengthsOfTranslatedSentences">
        /// An integer array representing the lengths of the sentences in the translated text.
        /// The length of the array is the number of sentences, and the values are the length of each sentence.
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="lengthsOfSourceSentences"/> or <paramref name="lengthsOfTranslatedSentences"/> is null. </exception>
        internal SentenceBoundaries(IEnumerable<int> lengthsOfSourceSentences, IEnumerable<int> lengthsOfTranslatedSentences)
        {
            Argument.AssertNotNull(lengthsOfSourceSentences, nameof(lengthsOfSourceSentences));
            Argument.AssertNotNull(lengthsOfTranslatedSentences, nameof(lengthsOfTranslatedSentences));

            LengthsOfSourceSentences = lengthsOfSourceSentences.ToList();
            LengthsOfTranslatedSentences = lengthsOfTranslatedSentences.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="SentenceBoundaries"/>. </summary>
        /// <param name="lengthsOfSourceSentences">
        /// An integer array representing the lengths of the sentences in the input text.
        /// The length of the array is the number of sentences, and the values are the length of each sentence.
        /// </param>
        /// <param name="lengthsOfTranslatedSentences">
        /// An integer array representing the lengths of the sentences in the translated text.
        /// The length of the array is the number of sentences, and the values are the length of each sentence.
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal SentenceBoundaries(IReadOnlyList<int> lengthsOfSourceSentences, IReadOnlyList<int> lengthsOfTranslatedSentences, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            LengthsOfSourceSentences = lengthsOfSourceSentences;
            LengthsOfTranslatedSentences = lengthsOfTranslatedSentences;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="SentenceBoundaries"/> for deserialization. </summary>
        internal SentenceBoundaries()
        {
        }

        /// <summary>
        /// An integer array representing the lengths of the sentences in the input text.
        /// The length of the array is the number of sentences, and the values are the length of each sentence.
        /// </summary>
        public IReadOnlyList<int> LengthsOfSourceSentences { get; }
        /// <summary>
        /// An integer array representing the lengths of the sentences in the translated text.
        /// The length of the array is the number of sentences, and the values are the length of each sentence.
        /// </summary>
        public IReadOnlyList<int> LengthsOfTranslatedSentences { get; }
    }
}
