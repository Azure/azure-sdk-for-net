// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure;
using Azure.Core;

namespace Azure.AI.Translation.Text
{
    public partial class Translation
    {
        internal static Translation DeserializeTranslation(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            string to = default;
            string text = default;
            Optional<TransliteratedText> transliteration = default;
            Optional<TranslatedTextAlignment> alignment = default;
            Optional<SentenceLength> sentLen = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("to"u8))
                {
                    to = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("text"u8))
                {
                    text = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("transliteration"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    transliteration = TransliteratedText.DeserializeTransliteratedText(property.Value);
                    continue;
                }
                if (property.NameEquals("alignment"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    alignment = TranslatedTextAlignment.DeserializeTranslatedTextAlignment(property.Value);
                    continue;
                }
                if (property.NameEquals("sentLen"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    sentLen = SentenceLength.DeserializeSentenceLength(property.Value);
                    continue;
                }
            }
            return new Translation(to, text, transliteration.Value, alignment.Value, sentLen.Value);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static Translation FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeTranslation(document.RootElement);
        }
    }
}
