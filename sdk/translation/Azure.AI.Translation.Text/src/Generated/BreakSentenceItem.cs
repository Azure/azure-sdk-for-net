// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.AI.Translation.Text
{
    /// <summary> Item containing break sentence result. </summary>
    public partial class BreakSentenceItem
    {
        /// <summary> Initializes a new instance of <see cref="BreakSentenceItem"/>. </summary>
        /// <param name="sentLen">
        /// An integer array representing the lengths of the sentences in the input text.
        /// The length of the array is the number of sentences, and the values are the length of each sentence.
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="sentLen"/> is null. </exception>
        internal BreakSentenceItem(IEnumerable<int> sentLen)
        {
            Argument.AssertNotNull(sentLen, nameof(sentLen));

            SentLen = sentLen.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="BreakSentenceItem"/>. </summary>
        /// <param name="detectedLanguage"> The detectedLanguage property is only present in the result object when language auto-detection is requested. </param>
        /// <param name="sentLen">
        /// An integer array representing the lengths of the sentences in the input text.
        /// The length of the array is the number of sentences, and the values are the length of each sentence.
        /// </param>
        internal BreakSentenceItem(DetectedLanguage detectedLanguage, IReadOnlyList<int> sentLen)
        {
            DetectedLanguage = detectedLanguage;
            SentLen = sentLen;
        }

        /// <summary> The detectedLanguage property is only present in the result object when language auto-detection is requested. </summary>
        public DetectedLanguage DetectedLanguage { get; }
        /// <summary>
        /// An integer array representing the lengths of the sentences in the input text.
        /// The length of the array is the number of sentences, and the values are the length of each sentence.
        /// </summary>
        public IReadOnlyList<int> SentLen { get; }
    }
}
