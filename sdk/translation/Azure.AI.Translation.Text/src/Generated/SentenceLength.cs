// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.AI.Translation.Text
{
    /// <summary> An object returning sentence boundaries in the input and output texts. </summary>
    public partial class SentenceLength
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of SentenceLength. </summary>
        /// <param name="srcSentLen">
        /// An integer array representing the lengths of the sentences in the input text.
        /// The length of the array is the number of sentences, and the values are the length of each sentence.
        /// </param>
        /// <param name="transSentLen">
        /// An integer array representing the lengths of the sentences in the translated text.
        /// The length of the array is the number of sentences, and the values are the length of each sentence.
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="srcSentLen"/> or <paramref name="transSentLen"/> is null. </exception>
        internal SentenceLength(IEnumerable<int> srcSentLen, IEnumerable<int> transSentLen)
        {
            Argument.AssertNotNull(srcSentLen, nameof(srcSentLen));
            Argument.AssertNotNull(transSentLen, nameof(transSentLen));

            SrcSentLen = srcSentLen.ToList();
            TransSentLen = transSentLen.ToList();
        }

        /// <summary> Initializes a new instance of SentenceLength. </summary>
        /// <param name="srcSentLen">
        /// An integer array representing the lengths of the sentences in the input text.
        /// The length of the array is the number of sentences, and the values are the length of each sentence.
        /// </param>
        /// <param name="transSentLen">
        /// An integer array representing the lengths of the sentences in the translated text.
        /// The length of the array is the number of sentences, and the values are the length of each sentence.
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal SentenceLength(IReadOnlyList<int> srcSentLen, IReadOnlyList<int> transSentLen, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            SrcSentLen = srcSentLen;
            TransSentLen = transSentLen;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="SentenceLength"/> for deserialization. </summary>
        internal SentenceLength()
        {
        }

        /// <summary>
        /// An integer array representing the lengths of the sentences in the input text.
        /// The length of the array is the number of sentences, and the values are the length of each sentence.
        /// </summary>
        public IReadOnlyList<int> SrcSentLen { get; }
        /// <summary>
        /// An integer array representing the lengths of the sentences in the translated text.
        /// The length of the array is the number of sentences, and the values are the length of each sentence.
        /// </summary>
        public IReadOnlyList<int> TransSentLen { get; }
    }
}
