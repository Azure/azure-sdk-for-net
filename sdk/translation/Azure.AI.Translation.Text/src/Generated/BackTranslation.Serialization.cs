// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure;

namespace Azure.AI.Translation.Text
{
    public partial class BackTranslation
    {
        internal static BackTranslation DeserializeBackTranslation(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            string normalizedText = default;
            string displayText = default;
            int numExamples = default;
            int frequencyCount = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("normalizedText"u8))
                {
                    normalizedText = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("displayText"u8))
                {
                    displayText = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("numExamples"u8))
                {
                    numExamples = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("frequencyCount"u8))
                {
                    frequencyCount = property.Value.GetInt32();
                    continue;
                }
            }
            return new BackTranslation(normalizedText, displayText, numExamples, frequencyCount);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static BackTranslation FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeBackTranslation(document.RootElement);
        }
    }
}
