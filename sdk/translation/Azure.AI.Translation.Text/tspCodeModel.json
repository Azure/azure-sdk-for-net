{
 "$id": "1",
 "Name": "TextTranslation",
 "ApiVersions": [
  "3.0"
 ],
 "Enums": [
  {
   "$id": "2",
   "kind": "enum",
   "name": "LanguageDirectionality",
   "crossLanguageDefinitionId": "TextTranslation.LanguageDirectionality",
   "valueType": {
    "$id": "3",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "4",
     "kind": "enumvalue",
     "name": "LeftToRight",
     "value": "ltr",
     "valueType": {
      "$id": "5",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "2"
     },
     "description": "Language is written left to right.",
     "decorators": []
    },
    {
     "$id": "6",
     "kind": "enumvalue",
     "name": "RightToLeft",
     "value": "rtl",
     "valueType": {
      "$id": "7",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "2"
     },
     "description": "Language is written right to left.",
     "decorators": []
    }
   ],
   "description": "Language Directionality",
   "isFixed": true,
   "isFlags": false,
   "usage": "Output,Json",
   "decorators": []
  },
  {
   "$id": "8",
   "kind": "enum",
   "name": "TextType",
   "crossLanguageDefinitionId": "TextTranslation.TextType",
   "valueType": {
    "$id": "9",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "10",
     "kind": "enumvalue",
     "name": "Plain",
     "value": "Plain",
     "valueType": {
      "$id": "11",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "8"
     },
     "description": "Plain text.",
     "decorators": []
    },
    {
     "$id": "12",
     "kind": "enumvalue",
     "name": "Html",
     "value": "Html",
     "valueType": {
      "$id": "13",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "8"
     },
     "description": "HTML-encoded text.",
     "decorators": []
    }
   ],
   "description": "Translation text type",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input",
   "decorators": []
  },
  {
   "$id": "14",
   "kind": "enum",
   "name": "ProfanityAction",
   "crossLanguageDefinitionId": "TextTranslation.ProfanityAction",
   "valueType": {
    "$id": "15",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "16",
     "kind": "enumvalue",
     "name": "NoAction",
     "value": "NoAction",
     "valueType": {
      "$id": "17",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "14"
     },
     "description": "No Action is taken on profanity",
     "decorators": []
    },
    {
     "$id": "18",
     "kind": "enumvalue",
     "name": "Marked",
     "value": "Marked",
     "valueType": {
      "$id": "19",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "14"
     },
     "description": "Profanity is marked.",
     "decorators": []
    },
    {
     "$id": "20",
     "kind": "enumvalue",
     "name": "Deleted",
     "value": "Deleted",
     "valueType": {
      "$id": "21",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "14"
     },
     "description": "Profanity is deleted from the translated text.",
     "decorators": []
    }
   ],
   "description": "Translator profanity actions",
   "isFixed": true,
   "isFlags": false,
   "usage": "Input",
   "decorators": []
  },
  {
   "$id": "22",
   "kind": "enum",
   "name": "ProfanityMarker",
   "crossLanguageDefinitionId": "TextTranslation.ProfanityMarker",
   "valueType": {
    "$id": "23",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "24",
     "kind": "enumvalue",
     "name": "Asterisk",
     "value": "Asterisk",
     "valueType": {
      "$id": "25",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "22"
     },
     "description": "Profanity is marked with asterisk.",
     "decorators": []
    },
    {
     "$id": "26",
     "kind": "enumvalue",
     "name": "Tag",
     "value": "Tag",
     "valueType": {
      "$id": "27",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "22"
     },
     "description": "Profanity is marked with the tags.",
     "decorators": []
    }
   ],
   "description": "Translator profanity markers",
   "isFixed": true,
   "isFlags": false,
   "usage": "Input",
   "decorators": []
  },
  {
   "$id": "28",
   "kind": "enum",
   "name": "APIVersion",
   "crossLanguageDefinitionId": "TextTranslation.APIVersion",
   "valueType": {
    "$id": "29",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "30",
     "kind": "enumvalue",
     "name": "v3_0",
     "value": "3.0",
     "valueType": {
      "$id": "31",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "28"
     },
     "description": "Version 3.0",
     "decorators": []
    }
   ],
   "description": "Text Translation supported versions",
   "isFixed": true,
   "isFlags": false,
   "usage": "ApiVersionEnum",
   "decorators": []
  }
 ],
 "Models": [
  {
   "$id": "32",
   "kind": "model",
   "name": "GetSupportedLanguagesResult",
   "crossLanguageDefinitionId": "TextTranslation.GetSupportedLanguagesResult",
   "usage": "Output,Json",
   "description": "Response for the languages API.",
   "decorators": [],
   "properties": [
    {
     "$id": "33",
     "kind": "property",
     "name": "translation",
     "serializedName": "translation",
     "description": "Languages that support translate API.",
     "type": {
      "$id": "34",
      "kind": "dict",
      "keyType": {
       "$id": "35",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "valueType": {
       "$id": "36",
       "kind": "model",
       "name": "TranslationLanguage",
       "crossLanguageDefinitionId": "TextTranslation.TranslationLanguage",
       "usage": "Output,Json",
       "description": "The value of the translation property is a dictionary of (key, value) pairs. Each key is a BCP 47 language tag.\nA key identifies a language for which text can be translated to or translated from.",
       "decorators": [],
       "properties": [
        {
         "$id": "37",
         "kind": "property",
         "name": "name",
         "serializedName": "name",
         "description": "Display name of the language in the locale requested via Accept-Language header.",
         "type": {
          "$id": "38",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "TextTranslation.TranslationLanguage.name"
        },
        {
         "$id": "39",
         "kind": "property",
         "name": "nativeName",
         "serializedName": "nativeName",
         "description": "Display name of the language in the locale native for this language.",
         "type": {
          "$id": "40",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "TextTranslation.TranslationLanguage.nativeName"
        },
        {
         "$id": "41",
         "kind": "property",
         "name": "Directionality",
         "serializedName": "dir",
         "description": "Directionality, which is rtl for right-to-left languages or ltr for left-to-right languages.",
         "type": {
          "$ref": "2"
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "TextTranslation.TranslationLanguage.dir"
        }
       ]
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "TextTranslation.GetSupportedLanguagesResult.translation"
    },
    {
     "$id": "42",
     "kind": "property",
     "name": "transliteration",
     "serializedName": "transliteration",
     "description": "Languages that support transliteration API.",
     "type": {
      "$id": "43",
      "kind": "dict",
      "keyType": {
       "$id": "44",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "valueType": {
       "$id": "45",
       "kind": "model",
       "name": "TransliterationLanguage",
       "crossLanguageDefinitionId": "TextTranslation.TransliterationLanguage",
       "usage": "Output,Json",
       "description": "The value of the transliteration property is a dictionary of (key, value) pairs. \nEach key is a BCP 47 language tag. A key identifies a language for which text can be converted from one script \nto another script.",
       "decorators": [],
       "properties": [
        {
         "$id": "46",
         "kind": "property",
         "name": "name",
         "serializedName": "name",
         "description": "Display name of the language in the locale requested via Accept-Language header.",
         "type": {
          "$id": "47",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "TextTranslation.TransliterationLanguage.name"
        },
        {
         "$id": "48",
         "kind": "property",
         "name": "nativeName",
         "serializedName": "nativeName",
         "description": "Display name of the language in the locale native for this language.",
         "type": {
          "$id": "49",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "TextTranslation.TransliterationLanguage.nativeName"
        },
        {
         "$id": "50",
         "kind": "property",
         "name": "scripts",
         "serializedName": "scripts",
         "description": "List of scripts to convert from.",
         "type": {
          "$id": "51",
          "kind": "array",
          "name": "ArrayTransliterableScript",
          "valueType": {
           "$id": "52",
           "kind": "model",
           "name": "TransliterableScript",
           "crossLanguageDefinitionId": "TextTranslation.TransliterableScript",
           "usage": "Output,Json",
           "description": "Script definition with list of script into which given script can be translitered.",
           "decorators": [],
           "baseModel": {
            "$id": "53",
            "kind": "model",
            "name": "LanguageScript",
            "crossLanguageDefinitionId": "TextTranslation.LanguageScript",
            "usage": "Output,Json",
            "description": "Common properties of language script",
            "decorators": [],
            "properties": [
             {
              "$id": "54",
              "kind": "property",
              "name": "code",
              "serializedName": "code",
              "description": "Code identifying the script.",
              "type": {
               "$id": "55",
               "kind": "string",
               "name": "string",
               "crossLanguageDefinitionId": "TypeSpec.string",
               "decorators": []
              },
              "optional": false,
              "readOnly": false,
              "discriminator": false,
              "flatten": false,
              "decorators": [],
              "crossLanguageDefinitionId": "TextTranslation.LanguageScript.code"
             },
             {
              "$id": "56",
              "kind": "property",
              "name": "name",
              "serializedName": "name",
              "description": "Display name of the script in the locale requested via Accept-Language header.",
              "type": {
               "$id": "57",
               "kind": "string",
               "name": "string",
               "crossLanguageDefinitionId": "TypeSpec.string",
               "decorators": []
              },
              "optional": false,
              "readOnly": false,
              "discriminator": false,
              "flatten": false,
              "decorators": [],
              "crossLanguageDefinitionId": "TextTranslation.LanguageScript.name"
             },
             {
              "$id": "58",
              "kind": "property",
              "name": "nativeName",
              "serializedName": "nativeName",
              "description": "Display name of the language in the locale native for the language.",
              "type": {
               "$id": "59",
               "kind": "string",
               "name": "string",
               "crossLanguageDefinitionId": "TypeSpec.string",
               "decorators": []
              },
              "optional": false,
              "readOnly": false,
              "discriminator": false,
              "flatten": false,
              "decorators": [],
              "crossLanguageDefinitionId": "TextTranslation.LanguageScript.nativeName"
             },
             {
              "$id": "60",
              "kind": "property",
              "name": "Directionality",
              "serializedName": "dir",
              "description": "Directionality, which is rtl for right-to-left languages or ltr for left-to-right languages.",
              "type": {
               "$ref": "2"
              },
              "optional": false,
              "readOnly": false,
              "discriminator": false,
              "flatten": false,
              "decorators": [],
              "crossLanguageDefinitionId": "TextTranslation.LanguageScript.dir"
             }
            ]
           },
           "properties": [
            {
             "$id": "61",
             "kind": "property",
             "name": "TargetLanguageScripts",
             "serializedName": "toScripts",
             "description": "List of scripts available to convert text to.",
             "type": {
              "$id": "62",
              "kind": "array",
              "name": "ArrayLanguageScript",
              "valueType": {
               "$ref": "53"
              },
              "crossLanguageDefinitionId": "TypeSpec.Array",
              "decorators": []
             },
             "optional": false,
             "readOnly": false,
             "discriminator": false,
             "flatten": false,
             "decorators": [],
             "crossLanguageDefinitionId": "TextTranslation.TransliterableScript.toScripts"
            }
           ]
          },
          "crossLanguageDefinitionId": "TypeSpec.Array",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "TextTranslation.TransliterationLanguage.scripts"
        }
       ]
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "TextTranslation.GetSupportedLanguagesResult.transliteration"
    },
    {
     "$id": "63",
     "kind": "property",
     "name": "dictionary",
     "serializedName": "dictionary",
     "description": "Languages that support dictionary API.",
     "type": {
      "$id": "64",
      "kind": "dict",
      "keyType": {
       "$id": "65",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "valueType": {
       "$id": "66",
       "kind": "model",
       "name": "SourceDictionaryLanguage",
       "crossLanguageDefinitionId": "TextTranslation.SourceDictionaryLanguage",
       "usage": "Output,Json",
       "description": "Properties ot the source dictionary language",
       "decorators": [],
       "properties": [
        {
         "$id": "67",
         "kind": "property",
         "name": "name",
         "serializedName": "name",
         "description": "Display name of the language in the locale requested via Accept-Language header.",
         "type": {
          "$id": "68",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "TextTranslation.SourceDictionaryLanguage.name"
        },
        {
         "$id": "69",
         "kind": "property",
         "name": "nativeName",
         "serializedName": "nativeName",
         "description": "Display name of the language in the locale native for this language.",
         "type": {
          "$id": "70",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "TextTranslation.SourceDictionaryLanguage.nativeName"
        },
        {
         "$id": "71",
         "kind": "property",
         "name": "Directionality",
         "serializedName": "dir",
         "description": "Directionality, which is rtl for right-to-left languages or ltr for left-to-right languages.",
         "type": {
          "$ref": "2"
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "TextTranslation.SourceDictionaryLanguage.dir"
        },
        {
         "$id": "72",
         "kind": "property",
         "name": "translations",
         "serializedName": "translations",
         "description": "List of languages with alterative translations and examples for the query expressed in the source language.",
         "type": {
          "$id": "73",
          "kind": "array",
          "name": "ArrayTargetDictionaryLanguage",
          "valueType": {
           "$id": "74",
           "kind": "model",
           "name": "TargetDictionaryLanguage",
           "crossLanguageDefinitionId": "TextTranslation.TargetDictionaryLanguage",
           "usage": "Output,Json",
           "description": "Properties of the target dictionary language",
           "decorators": [],
           "properties": [
            {
             "$id": "75",
             "kind": "property",
             "name": "name",
             "serializedName": "name",
             "description": "Display name of the language in the locale requested via Accept-Language header.",
             "type": {
              "$id": "76",
              "kind": "string",
              "name": "string",
              "crossLanguageDefinitionId": "TypeSpec.string",
              "decorators": []
             },
             "optional": false,
             "readOnly": false,
             "discriminator": false,
             "flatten": false,
             "decorators": [],
             "crossLanguageDefinitionId": "TextTranslation.TargetDictionaryLanguage.name"
            },
            {
             "$id": "77",
             "kind": "property",
             "name": "nativeName",
             "serializedName": "nativeName",
             "description": "Display name of the language in the locale native for this language.",
             "type": {
              "$id": "78",
              "kind": "string",
              "name": "string",
              "crossLanguageDefinitionId": "TypeSpec.string",
              "decorators": []
             },
             "optional": false,
             "readOnly": false,
             "discriminator": false,
             "flatten": false,
             "decorators": [],
             "crossLanguageDefinitionId": "TextTranslation.TargetDictionaryLanguage.nativeName"
            },
            {
             "$id": "79",
             "kind": "property",
             "name": "Directionality",
             "serializedName": "dir",
             "description": "Directionality, which is rtl for right-to-left languages or ltr for left-to-right languages.",
             "type": {
              "$ref": "2"
             },
             "optional": false,
             "readOnly": false,
             "discriminator": false,
             "flatten": false,
             "decorators": [],
             "crossLanguageDefinitionId": "TextTranslation.TargetDictionaryLanguage.dir"
            },
            {
             "$id": "80",
             "kind": "property",
             "name": "code",
             "serializedName": "code",
             "description": "Language code identifying the target language.",
             "type": {
              "$id": "81",
              "kind": "string",
              "name": "string",
              "crossLanguageDefinitionId": "TypeSpec.string",
              "decorators": []
             },
             "optional": false,
             "readOnly": false,
             "discriminator": false,
             "flatten": false,
             "decorators": [],
             "crossLanguageDefinitionId": "TextTranslation.TargetDictionaryLanguage.code"
            }
           ]
          },
          "crossLanguageDefinitionId": "TypeSpec.Array",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "TextTranslation.SourceDictionaryLanguage.translations"
        }
       ]
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "TextTranslation.GetSupportedLanguagesResult.dictionary"
    }
   ]
  },
  {
   "$ref": "36"
  },
  {
   "$ref": "45"
  },
  {
   "$ref": "52"
  },
  {
   "$ref": "53"
  },
  {
   "$ref": "66"
  },
  {
   "$ref": "74"
  },
  {
   "$id": "82",
   "kind": "model",
   "name": "ErrorResponse",
   "crossLanguageDefinitionId": "TextTranslation.ErrorResponse",
   "usage": "Error,Json,Exception",
   "description": "Representation of the Error Response from Translator Service.",
   "decorators": [],
   "properties": [
    {
     "$id": "83",
     "kind": "property",
     "name": "error",
     "serializedName": "error",
     "description": "Error details.",
     "type": {
      "$id": "84",
      "kind": "model",
      "name": "ErrorDetails",
      "crossLanguageDefinitionId": "TextTranslation.ErrorDetails",
      "usage": "Json,Exception",
      "description": "Error details as returned by Translator Service.",
      "decorators": [],
      "properties": [
       {
        "$id": "85",
        "kind": "property",
        "name": "code",
        "serializedName": "code",
        "description": "Number identifier of the error.",
        "type": {
         "$id": "86",
         "kind": "int32",
         "name": "int32",
         "crossLanguageDefinitionId": "TypeSpec.int32",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "TextTranslation.ErrorDetails.code"
       },
       {
        "$id": "87",
        "kind": "property",
        "name": "message",
        "serializedName": "message",
        "description": "Human readable error description.",
        "type": {
         "$id": "88",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "TextTranslation.ErrorDetails.message"
       }
      ]
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "TextTranslation.ErrorResponse.error"
    }
   ]
  },
  {
   "$ref": "84"
  },
  {
   "$id": "89",
   "kind": "model",
   "name": "InputTextItem",
   "crossLanguageDefinitionId": "TextTranslation.InputTextItem",
   "usage": "Input,Json",
   "description": "Element containing the text for translation.",
   "decorators": [],
   "properties": [
    {
     "$id": "90",
     "kind": "property",
     "name": "text",
     "serializedName": "text",
     "description": "Text to translate.",
     "type": {
      "$id": "91",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "TextTranslation.InputTextItem.text"
    }
   ]
  },
  {
   "$id": "92",
   "kind": "model",
   "name": "TranslatedTextItem",
   "crossLanguageDefinitionId": "TextTranslation.TranslatedTextItem",
   "usage": "Output,Json",
   "description": "Element containing the translated text",
   "decorators": [],
   "properties": [
    {
     "$id": "93",
     "kind": "property",
     "name": "detectedLanguage",
     "serializedName": "detectedLanguage",
     "description": "The detectedLanguage property is only present in the result object when language auto-detection is requested.",
     "type": {
      "$id": "94",
      "kind": "model",
      "name": "DetectedLanguage",
      "crossLanguageDefinitionId": "TextTranslation.DetectedLanguage",
      "usage": "Output,Json",
      "description": "An object describing the detected language.",
      "decorators": [],
      "properties": [
       {
        "$id": "95",
        "kind": "property",
        "name": "language",
        "serializedName": "language",
        "description": "A string representing the code of the detected language.",
        "type": {
         "$id": "96",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "TextTranslation.DetectedLanguage.language"
       },
       {
        "$id": "97",
        "kind": "property",
        "name": "Confidence",
        "serializedName": "score",
        "description": "A float value indicating the confidence in the result.\nThe score is between zero and one and a low score indicates a low confidence.",
        "type": {
         "$id": "98",
         "kind": "float32",
         "name": "float32",
         "crossLanguageDefinitionId": "TypeSpec.float32",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "TextTranslation.DetectedLanguage.score"
       }
      ]
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "TextTranslation.TranslatedTextItem.detectedLanguage"
    },
    {
     "$id": "99",
     "kind": "property",
     "name": "translations",
     "serializedName": "translations",
     "description": "An array of translation results. The size of the array matches the number of target \nlanguages specified through the to query parameter.",
     "type": {
      "$id": "100",
      "kind": "array",
      "name": "ArrayTranslationText",
      "valueType": {
       "$id": "101",
       "kind": "model",
       "name": "TranslationText",
       "crossLanguageDefinitionId": "TextTranslation.TranslationText",
       "usage": "Output,Json",
       "description": "Translation result",
       "decorators": [],
       "properties": [
        {
         "$id": "102",
         "kind": "property",
         "name": "TargetLanguage",
         "serializedName": "to",
         "description": "A string representing the language code of the target language.",
         "type": {
          "$id": "103",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "TextTranslation.TranslationText.to"
        },
        {
         "$id": "104",
         "kind": "property",
         "name": "text",
         "serializedName": "text",
         "description": "A string giving the translated text.",
         "type": {
          "$id": "105",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "TextTranslation.TranslationText.text"
        },
        {
         "$id": "106",
         "kind": "property",
         "name": "transliteration",
         "serializedName": "transliteration",
         "description": "An object giving the translated text in the script specified by the toScript parameter.",
         "type": {
          "$id": "107",
          "kind": "model",
          "name": "TransliteratedText",
          "crossLanguageDefinitionId": "TextTranslation.TransliteratedText",
          "usage": "Output,Json",
          "description": "Transliterated text element.",
          "decorators": [],
          "properties": [
           {
            "$id": "108",
            "kind": "property",
            "name": "text",
            "serializedName": "text",
            "description": "A string which is the result of converting the input string to the output script.",
            "type": {
             "$id": "109",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "TextTranslation.TransliteratedText.text"
           },
           {
            "$id": "110",
            "kind": "property",
            "name": "script",
            "serializedName": "script",
            "description": "A string specifying the script used in the output.",
            "type": {
             "$id": "111",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "TextTranslation.TransliteratedText.script"
           }
          ]
         },
         "optional": true,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "TextTranslation.TranslationText.transliteration"
        },
        {
         "$id": "112",
         "kind": "property",
         "name": "alignment",
         "serializedName": "alignment",
         "description": "Alignment information.",
         "type": {
          "$id": "113",
          "kind": "model",
          "name": "TranslatedTextAlignment",
          "crossLanguageDefinitionId": "TextTranslation.TranslatedTextAlignment",
          "usage": "Output,Json",
          "description": "Alignment information object.",
          "decorators": [],
          "properties": [
           {
            "$id": "114",
            "kind": "property",
            "name": "Projections",
            "serializedName": "proj",
            "description": "Maps input text to translated text. The alignment information is only provided when the request \nparameter includeAlignment is true. Alignment is returned as a string value of the following \nformat: [[SourceTextStartIndex]:[SourceTextEndIndex]–[TgtTextStartIndex]:[TgtTextEndIndex]]. \nThe colon separates start and end index, the dash separates the languages, and space separates the words. \nOne word may align with zero, one, or multiple words in the other language, and the aligned words may \nbe non-contiguous. When no alignment information is available, the alignment element will be empty.",
            "type": {
             "$id": "115",
             "kind": "string",
             "name": "string",
             "crossLanguageDefinitionId": "TypeSpec.string",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "TextTranslation.TranslatedTextAlignment.proj"
           }
          ]
         },
         "optional": true,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "TextTranslation.TranslationText.alignment"
        },
        {
         "$id": "116",
         "kind": "property",
         "name": "SentenceBoundaries",
         "serializedName": "sentLen",
         "description": "Sentence boundaries in the input and output texts.",
         "type": {
          "$id": "117",
          "kind": "model",
          "name": "SentenceBoundaries",
          "crossLanguageDefinitionId": "TextTranslation.SentenceBoundaries",
          "usage": "Output,Json",
          "description": "An object returning sentence boundaries in the input and output texts.",
          "decorators": [],
          "properties": [
           {
            "$id": "118",
            "kind": "property",
            "name": "SourceSentencesLengths",
            "serializedName": "srcSentLen",
            "description": "An integer array representing the lengths of the sentences in the input text. \nThe length of the array is the number of sentences, and the values are the length of each sentence.",
            "type": {
             "$id": "119",
             "kind": "array",
             "name": "Array",
             "valueType": {
              "$id": "120",
              "kind": "int32",
              "name": "int32",
              "crossLanguageDefinitionId": "TypeSpec.int32",
              "decorators": []
             },
             "crossLanguageDefinitionId": "TypeSpec.Array",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "TextTranslation.SentenceBoundaries.srcSentLen"
           },
           {
            "$id": "121",
            "kind": "property",
            "name": "TranslatedSentencesLengths",
            "serializedName": "transSentLen",
            "description": "An integer array representing the lengths of the sentences in the translated text. \nThe length of the array is the number of sentences, and the values are the length of each sentence.",
            "type": {
             "$id": "122",
             "kind": "array",
             "name": "Array",
             "valueType": {
              "$id": "123",
              "kind": "int32",
              "name": "int32",
              "crossLanguageDefinitionId": "TypeSpec.int32",
              "decorators": []
             },
             "crossLanguageDefinitionId": "TypeSpec.Array",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "flatten": false,
            "decorators": [],
            "crossLanguageDefinitionId": "TextTranslation.SentenceBoundaries.transSentLen"
           }
          ]
         },
         "optional": true,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "TextTranslation.TranslationText.sentLen"
        }
       ]
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "TextTranslation.TranslatedTextItem.translations"
    },
    {
     "$id": "124",
     "kind": "property",
     "name": "sourceText",
     "serializedName": "sourceText",
     "description": "Input text in the default script of the source language. sourceText property is present only when \nthe input is expressed in a script that's not the usual script for the language. For example, \nif the input were Arabic written in Latin script, then sourceText.text would be the same Arabic text \nconverted into Arab script.",
     "type": {
      "$id": "125",
      "kind": "model",
      "name": "SourceText",
      "crossLanguageDefinitionId": "TextTranslation.SourceText",
      "usage": "Output,Json",
      "description": "Input text in the default script of the source language. ",
      "decorators": [],
      "properties": [
       {
        "$id": "126",
        "kind": "property",
        "name": "text",
        "serializedName": "text",
        "description": "Input text in the default script of the source language.",
        "type": {
         "$id": "127",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "TextTranslation.SourceText.text"
       }
      ]
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "TextTranslation.TranslatedTextItem.sourceText"
    }
   ]
  },
  {
   "$ref": "94"
  },
  {
   "$ref": "101"
  },
  {
   "$ref": "107"
  },
  {
   "$ref": "113"
  },
  {
   "$ref": "117"
  },
  {
   "$ref": "125"
  },
  {
   "$id": "128",
   "kind": "model",
   "name": "BreakSentenceItem",
   "crossLanguageDefinitionId": "TextTranslation.BreakSentenceItem",
   "usage": "Output,Json",
   "description": "Item containing break sentence result.",
   "decorators": [],
   "properties": [
    {
     "$id": "129",
     "kind": "property",
     "name": "detectedLanguage",
     "serializedName": "detectedLanguage",
     "description": "The detectedLanguage property is only present in the result object when language auto-detection is requested.",
     "type": {
      "$ref": "94"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "TextTranslation.BreakSentenceItem.detectedLanguage"
    },
    {
     "$id": "130",
     "kind": "property",
     "name": "SentencesLengths",
     "serializedName": "sentLen",
     "description": "An integer array representing the lengths of the sentences in the input text.\nThe length of the array is the number of sentences, and the values are the length of each sentence.",
     "type": {
      "$id": "131",
      "kind": "array",
      "name": "Array",
      "valueType": {
       "$id": "132",
       "kind": "int32",
       "name": "int32",
       "crossLanguageDefinitionId": "TypeSpec.int32",
       "decorators": []
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "TextTranslation.BreakSentenceItem.sentLen"
    }
   ]
  },
  {
   "$id": "133",
   "kind": "model",
   "name": "DictionaryLookupItem",
   "crossLanguageDefinitionId": "TextTranslation.DictionaryLookupItem",
   "usage": "Output,Json",
   "description": "Dictionary Lookup Element",
   "decorators": [],
   "properties": [
    {
     "$id": "134",
     "kind": "property",
     "name": "normalizedSource",
     "serializedName": "normalizedSource",
     "description": "A string giving the normalized form of the source term.\nFor example, if the request is \"JOHN\", the normalized form will be \"john\".\nThe content of this field becomes the input to lookup examples.",
     "type": {
      "$id": "135",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "TextTranslation.DictionaryLookupItem.normalizedSource"
    },
    {
     "$id": "136",
     "kind": "property",
     "name": "displaySource",
     "serializedName": "displaySource",
     "description": "A string giving the source term in a form best suited for end-user display.\nFor example, if the input is \"JOHN\", the display form will reflect the usual\nspelling of the name: \"John\".",
     "type": {
      "$id": "137",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "TextTranslation.DictionaryLookupItem.displaySource"
    },
    {
     "$id": "138",
     "kind": "property",
     "name": "translations",
     "serializedName": "translations",
     "description": "A list of translations for the source term.",
     "type": {
      "$id": "139",
      "kind": "array",
      "name": "ArrayDictionaryTranslation",
      "valueType": {
       "$id": "140",
       "kind": "model",
       "name": "DictionaryTranslation",
       "crossLanguageDefinitionId": "TextTranslation.DictionaryTranslation",
       "usage": "Output,Json",
       "description": "Translation source term.",
       "decorators": [],
       "properties": [
        {
         "$id": "141",
         "kind": "property",
         "name": "normalizedTarget",
         "serializedName": "normalizedTarget",
         "description": "A string giving the normalized form of this term in the target language.\nThis value should be used as input to lookup examples.",
         "type": {
          "$id": "142",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "TextTranslation.DictionaryTranslation.normalizedTarget"
        },
        {
         "$id": "143",
         "kind": "property",
         "name": "displayTarget",
         "serializedName": "displayTarget",
         "description": "A string giving the term in the target language and in a form best suited\nfor end-user display. Generally, this will only differ from the normalizedTarget\nin terms of capitalization. For example, a proper noun like \"Juan\" will have\nnormalizedTarget = \"juan\" and displayTarget = \"Juan\".",
         "type": {
          "$id": "144",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "TextTranslation.DictionaryTranslation.displayTarget"
        },
        {
         "$id": "145",
         "kind": "property",
         "name": "posTag",
         "serializedName": "posTag",
         "description": "A string associating this term with a part-of-speech tag.",
         "type": {
          "$id": "146",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "TextTranslation.DictionaryTranslation.posTag"
        },
        {
         "$id": "147",
         "kind": "property",
         "name": "confidence",
         "serializedName": "confidence",
         "description": "A value between 0.0 and 1.0 which represents the \"confidence\" \n(or perhaps more accurately, \"probability in the training data\") of that translation pair. \nThe sum of confidence scores for one source word may or may not sum to 1.0.",
         "type": {
          "$id": "148",
          "kind": "float32",
          "name": "float32",
          "crossLanguageDefinitionId": "TypeSpec.float32",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "TextTranslation.DictionaryTranslation.confidence"
        },
        {
         "$id": "149",
         "kind": "property",
         "name": "prefixWord",
         "serializedName": "prefixWord",
         "description": "A string giving the word to display as a prefix of the translation. Currently,\nthis is the gendered determiner of nouns, in languages that have gendered determiners.\nFor example, the prefix of the Spanish word \"mosca\" is \"la\", since \"mosca\" is a feminine noun in Spanish. \nThis is only dependent on the translation, and not on the source. \nIf there is no prefix, it will be the empty string.",
         "type": {
          "$id": "150",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "TextTranslation.DictionaryTranslation.prefixWord"
        },
        {
         "$id": "151",
         "kind": "property",
         "name": "backTranslations",
         "serializedName": "backTranslations",
         "description": "A list of \"back translations\" of the target. For example, source words that the target can translate to.\nThe list is guaranteed to contain the source word that was requested (e.g., if the source word being\nlooked up is \"fly\", then it is guaranteed that \"fly\" will be in the backTranslations list).\nHowever, it is not guaranteed to be in the first position, and often will not be.",
         "type": {
          "$id": "152",
          "kind": "array",
          "name": "ArrayBackTranslation",
          "valueType": {
           "$id": "153",
           "kind": "model",
           "name": "BackTranslation",
           "crossLanguageDefinitionId": "TextTranslation.BackTranslation",
           "usage": "Output,Json",
           "description": "Back Translation",
           "decorators": [],
           "properties": [
            {
             "$id": "154",
             "kind": "property",
             "name": "normalizedText",
             "serializedName": "normalizedText",
             "description": "A string giving the normalized form of the source term that is a back-translation of the target.\nThis value should be used as input to lookup examples.",
             "type": {
              "$id": "155",
              "kind": "string",
              "name": "string",
              "crossLanguageDefinitionId": "TypeSpec.string",
              "decorators": []
             },
             "optional": false,
             "readOnly": false,
             "discriminator": false,
             "flatten": false,
             "decorators": [],
             "crossLanguageDefinitionId": "TextTranslation.BackTranslation.normalizedText"
            },
            {
             "$id": "156",
             "kind": "property",
             "name": "displayText",
             "serializedName": "displayText",
             "description": "A string giving the source term that is a back-translation of the target in a form best\nsuited for end-user display.",
             "type": {
              "$id": "157",
              "kind": "string",
              "name": "string",
              "crossLanguageDefinitionId": "TypeSpec.string",
              "decorators": []
             },
             "optional": false,
             "readOnly": false,
             "discriminator": false,
             "flatten": false,
             "decorators": [],
             "crossLanguageDefinitionId": "TextTranslation.BackTranslation.displayText"
            },
            {
             "$id": "158",
             "kind": "property",
             "name": "ExamplesCount",
             "serializedName": "numExamples",
             "description": "An integer representing the number of examples that are available for this translation pair.\nActual examples must be retrieved with a separate call to lookup examples. The number is mostly\nintended to facilitate display in a UX. For example, a user interface may add a hyperlink\nto the back-translation if the number of examples is greater than zero and show the back-translation\nas plain text if there are no examples. Note that the actual number of examples returned\nby a call to lookup examples may be less than numExamples, because additional filtering may be\napplied on the fly to remove \"bad\" examples.",
             "type": {
              "$id": "159",
              "kind": "int32",
              "name": "int32",
              "crossLanguageDefinitionId": "TypeSpec.int32",
              "decorators": []
             },
             "optional": false,
             "readOnly": false,
             "discriminator": false,
             "flatten": false,
             "decorators": [],
             "crossLanguageDefinitionId": "TextTranslation.BackTranslation.numExamples"
            },
            {
             "$id": "160",
             "kind": "property",
             "name": "frequencyCount",
             "serializedName": "frequencyCount",
             "description": "An integer representing the frequency of this translation pair in the data. The main purpose of this\nfield is to provide a user interface with a means to sort back-translations so the most frequent terms are first.",
             "type": {
              "$id": "161",
              "kind": "int32",
              "name": "int32",
              "crossLanguageDefinitionId": "TypeSpec.int32",
              "decorators": []
             },
             "optional": false,
             "readOnly": false,
             "discriminator": false,
             "flatten": false,
             "decorators": [],
             "crossLanguageDefinitionId": "TextTranslation.BackTranslation.frequencyCount"
            }
           ]
          },
          "crossLanguageDefinitionId": "TypeSpec.Array",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "TextTranslation.DictionaryTranslation.backTranslations"
        }
       ]
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "TextTranslation.DictionaryLookupItem.translations"
    }
   ]
  },
  {
   "$ref": "140"
  },
  {
   "$ref": "153"
  },
  {
   "$id": "162",
   "kind": "model",
   "name": "DictionaryExampleTextItem",
   "crossLanguageDefinitionId": "TextTranslation.DictionaryExampleTextItem",
   "usage": "Input,Json",
   "description": "Element containing the text with translation.",
   "decorators": [],
   "baseModel": {
    "$ref": "89"
   },
   "properties": [
    {
     "$id": "163",
     "kind": "property",
     "name": "translation",
     "serializedName": "translation",
     "description": "A string specifying the translated text previously returned by the Dictionary lookup operation. \nThis should be the value from the normalizedTarget field in the translations list of the Dictionary \nlookup response. The service will return examples for the specific source-target word-pair.",
     "type": {
      "$id": "164",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "TextTranslation.DictionaryExampleTextItem.translation"
    }
   ]
  },
  {
   "$id": "165",
   "kind": "model",
   "name": "DictionaryExampleItem",
   "crossLanguageDefinitionId": "TextTranslation.DictionaryExampleItem",
   "usage": "Output,Json",
   "description": "Dictionary Example element",
   "decorators": [],
   "properties": [
    {
     "$id": "166",
     "kind": "property",
     "name": "normalizedSource",
     "serializedName": "normalizedSource",
     "description": "A string giving the normalized form of the source term. Generally, this should be identical\nto the value of the Text field at the matching list index in the body of the request.",
     "type": {
      "$id": "167",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "TextTranslation.DictionaryExampleItem.normalizedSource"
    },
    {
     "$id": "168",
     "kind": "property",
     "name": "normalizedTarget",
     "serializedName": "normalizedTarget",
     "description": "A string giving the normalized form of the target term. Generally, this should be identical\nto the value of the Translation field at the matching list index in the body of the request.",
     "type": {
      "$id": "169",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "TextTranslation.DictionaryExampleItem.normalizedTarget"
    },
    {
     "$id": "170",
     "kind": "property",
     "name": "examples",
     "serializedName": "examples",
     "description": "A list of examples for the (source term, target term) pair.",
     "type": {
      "$id": "171",
      "kind": "array",
      "name": "ArrayDictionaryExample",
      "valueType": {
       "$id": "172",
       "kind": "model",
       "name": "DictionaryExample",
       "crossLanguageDefinitionId": "TextTranslation.DictionaryExample",
       "usage": "Output,Json",
       "description": "Dictionary Example",
       "decorators": [],
       "properties": [
        {
         "$id": "173",
         "kind": "property",
         "name": "sourcePrefix",
         "serializedName": "sourcePrefix",
         "description": "The string to concatenate before the value of sourceTerm to form a complete example.\nDo not add a space character, since it is already there when it should be.\nThis value may be an empty string.",
         "type": {
          "$id": "174",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "TextTranslation.DictionaryExample.sourcePrefix"
        },
        {
         "$id": "175",
         "kind": "property",
         "name": "sourceTerm",
         "serializedName": "sourceTerm",
         "description": "A string equal to the actual term looked up. The string is added with sourcePrefix\nand sourceSuffix to form the complete example. Its value is separated so it can be\nmarked in a user interface, e.g., by bolding it.",
         "type": {
          "$id": "176",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "TextTranslation.DictionaryExample.sourceTerm"
        },
        {
         "$id": "177",
         "kind": "property",
         "name": "sourceSuffix",
         "serializedName": "sourceSuffix",
         "description": "The string to concatenate after the value of sourceTerm to form a complete example.\nDo not add a space character, since it is already there when it should be.\nThis value may be an empty string.",
         "type": {
          "$id": "178",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "TextTranslation.DictionaryExample.sourceSuffix"
        },
        {
         "$id": "179",
         "kind": "property",
         "name": "targetPrefix",
         "serializedName": "targetPrefix",
         "description": "A string similar to sourcePrefix but for the target.",
         "type": {
          "$id": "180",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "TextTranslation.DictionaryExample.targetPrefix"
        },
        {
         "$id": "181",
         "kind": "property",
         "name": "targetTerm",
         "serializedName": "targetTerm",
         "description": "A string similar to sourceTerm but for the target.",
         "type": {
          "$id": "182",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "TextTranslation.DictionaryExample.targetTerm"
        },
        {
         "$id": "183",
         "kind": "property",
         "name": "targetSuffix",
         "serializedName": "targetSuffix",
         "description": "A string similar to sourceSuffix but for the target.",
         "type": {
          "$id": "184",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "optional": false,
         "readOnly": false,
         "discriminator": false,
         "flatten": false,
         "decorators": [],
         "crossLanguageDefinitionId": "TextTranslation.DictionaryExample.targetSuffix"
        }
       ]
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "TextTranslation.DictionaryExampleItem.examples"
    }
   ]
  },
  {
   "$ref": "172"
  }
 ],
 "Clients": [
  {
   "$id": "185",
   "Name": "TextTranslationClient",
   "Description": "Text translation is a cloud-based REST API feature of the Translator service that uses neural\nmachine translation technology to enable quick and accurate source-to-target text translation\nin real time across all supported languages.\n\nThe following methods are supported by the Text Translation feature:\n\nLanguages. Returns a list of languages supported by Translate, Transliterate, and Dictionary Lookup operations.\n\nTranslate. Renders single source-language text to multiple target-language texts with a single request.\n\nTransliterate. Converts characters or letters of a source language to the corresponding characters or letters of a target language.\n\nDetect. Returns the source code language code and a boolean variable denoting whether the detected language is supported for text translation and transliteration.\n\nDictionary lookup. Returns equivalent words for the source term in the target language.\n\nDictionary example Returns grammatical structure and context examples for the source term and target term pair.",
   "Operations": [
    {
     "$id": "186",
     "Name": "getSupportedLanguages",
     "ResourceName": "TextTranslation",
     "Summary": "Gets the set of languages currently supported by other operations of the Translator.",
     "Description": "Gets the set of languages currently supported by other operations of the Translator.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "187",
       "Name": "clientTraceId",
       "NameInRequest": "X-ClientTraceId",
       "Description": "A client-generated GUID to uniquely identify the request.",
       "Type": {
        "$id": "188",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "189",
       "Name": "scope",
       "NameInRequest": "scope",
       "Description": "A comma-separated list of names defining the group of languages to return.\nAllowed group names are: `translation`, `transliteration` and `dictionary`.\nIf no scope is given, then all groups are returned, which is equivalent to passing \n`scope=translation,transliteration,dictionary`. To decide which set of supported languages \nis appropriate for your scenario, see the description of the [response object](#response-body).",
       "Type": {
        "$id": "190",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "191",
       "Name": "acceptLanguage",
       "NameInRequest": "Accept-Language",
       "Description": "The language to use for user interface strings. Some of the fields in the response are names of languages or \nnames of regions. Use this parameter to define the language in which these names are returned. \nThe language is specified by providing a well-formed BCP 47 language tag. For instance, use the value `fr` \nto request names in French or use the value `zh-Hant` to request names in Chinese Traditional.\nNames are provided in the English language when a target language is not specified or when localization \nis not available.",
       "Type": {
        "$id": "192",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "193",
       "Name": "ifNoneMatch",
       "NameInRequest": "If-None-Match",
       "Description": "Passing the value of the ETag response header in an If-None-Match field will allow the service to optimize the response. \nIf the resource has not been modified, the service will return status code 304 and an empty response body.",
       "Type": {
        "$id": "194",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "195",
       "Name": "apiVersion",
       "NameInRequest": "api-version",
       "Description": "Mandatory API version parameter",
       "Type": {
        "$id": "196",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": true,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Client",
       "DefaultValue": {
        "$id": "197",
        "Type": {
         "$id": "198",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "3.0"
       },
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "199",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "200",
        "kind": "constant",
        "valueType": {
         "$id": "201",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "202",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "32"
       },
       "BodyMediaType": "Json",
       "Headers": [
        {
         "$id": "203",
         "Name": "requestId",
         "NameInResponse": "X-RequestId",
         "Description": "Value generated by the service to identify the request. It is used for troubleshooting purposes.",
         "Type": {
          "$id": "204",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         }
        },
        {
         "$id": "205",
         "Name": "etag",
         "NameInResponse": "ETag",
         "Description": "Current value of the entity tag for the requested groups of supported languages. \nTo make subsequent requests more efficient, the client may send the `ETag` value in an \n`If-None-Match` header field.",
         "Type": {
          "$id": "206",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         }
        }
       ],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{Endpoint}",
     "Path": "/languages",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "TextTranslation.getSupportedLanguages",
     "Decorators": [],
     "Examples": [
      {
       "$id": "207",
       "kind": "http",
       "name": "Gets the set of languages currently supported by other operations of the Translator.",
       "description": "Gets the set of languages currently supported by other operations of the Translator.",
       "filePath": "3.0/GetSupportedLanguages_MaximumSet_Gen.json",
       "parameters": [
        {
         "$id": "208",
         "parameter": {
          "$ref": "187"
         },
         "value": {
          "$id": "209",
          "kind": "string",
          "type": {
           "$ref": "188"
          },
          "value": "kayfnugjec"
         }
        },
        {
         "$id": "210",
         "parameter": {
          "$ref": "189"
         },
         "value": {
          "$id": "211",
          "kind": "string",
          "type": {
           "$ref": "190"
          },
          "value": "translation,transliteration,dictionary"
         }
        },
        {
         "$id": "212",
         "parameter": {
          "$ref": "191"
         },
         "value": {
          "$id": "213",
          "kind": "string",
          "type": {
           "$ref": "192"
          },
          "value": "en"
         }
        },
        {
         "$id": "214",
         "parameter": {
          "$ref": "193"
         },
         "value": {
          "$id": "215",
          "kind": "string",
          "type": {
           "$ref": "194"
          },
          "value": "fpnhruttllvc"
         }
        },
        {
         "$id": "216",
         "parameter": {
          "$ref": "195"
         },
         "value": {
          "$id": "217",
          "kind": "string",
          "type": {
           "$ref": "196"
          },
          "value": "3.0"
         }
        }
       ],
       "responses": [
        {
         "$id": "218",
         "response": {
          "$ref": "202"
         },
         "statusCode": 200,
         "bodyValue": {
          "$id": "219",
          "kind": "model",
          "type": {
           "$ref": "32"
          },
          "value": {
           "$id": "220",
           "translation": {
            "$id": "221",
            "kind": "dict",
            "type": {
             "$ref": "34"
            },
            "value": {
             "$id": "222",
             "en": {
              "$id": "223",
              "kind": "model",
              "type": {
               "$ref": "36"
              },
              "value": {
               "$id": "224",
               "name": {
                "$id": "225",
                "kind": "string",
                "type": {
                 "$ref": "38"
                },
                "value": "English"
               },
               "nativeName": {
                "$id": "226",
                "kind": "string",
                "type": {
                 "$ref": "40"
                },
                "value": "English"
               },
               "dir": {
                "$id": "227",
                "kind": "string",
                "type": {
                 "$ref": "2"
                },
                "value": "ltr"
               }
              }
             },
             "es": {
              "$id": "228",
              "kind": "model",
              "type": {
               "$ref": "36"
              },
              "value": {
               "$id": "229",
               "name": {
                "$id": "230",
                "kind": "string",
                "type": {
                 "$ref": "38"
                },
                "value": "Spanish"
               },
               "nativeName": {
                "$id": "231",
                "kind": "string",
                "type": {
                 "$ref": "40"
                },
                "value": "Español"
               },
               "dir": {
                "$id": "232",
                "kind": "string",
                "type": {
                 "$ref": "2"
                },
                "value": "ltr"
               }
              }
             }
            }
           },
           "transliteration": {
            "$id": "233",
            "kind": "dict",
            "type": {
             "$ref": "43"
            },
            "value": {
             "$id": "234",
             "ar": {
              "$id": "235",
              "kind": "model",
              "type": {
               "$ref": "45"
              },
              "value": {
               "$id": "236",
               "name": {
                "$id": "237",
                "kind": "string",
                "type": {
                 "$ref": "47"
                },
                "value": "Arabic"
               },
               "nativeName": {
                "$id": "238",
                "kind": "string",
                "type": {
                 "$ref": "49"
                },
                "value": "العربية"
               },
               "scripts": {
                "$id": "239",
                "kind": "array",
                "type": {
                 "$ref": "51"
                },
                "value": [
                 {
                  "$id": "240",
                  "kind": "model",
                  "type": {
                   "$ref": "52"
                  },
                  "value": {
                   "$id": "241",
                   "code": {
                    "$id": "242",
                    "kind": "string",
                    "type": {
                     "$ref": "55"
                    },
                    "value": "Arab"
                   },
                   "name": {
                    "$id": "243",
                    "kind": "string",
                    "type": {
                     "$ref": "57"
                    },
                    "value": "Arabic"
                   },
                   "nativeName": {
                    "$id": "244",
                    "kind": "string",
                    "type": {
                     "$ref": "59"
                    },
                    "value": "العربية"
                   },
                   "dir": {
                    "$id": "245",
                    "kind": "string",
                    "type": {
                     "$ref": "2"
                    },
                    "value": "rtl"
                   },
                   "toScripts": {
                    "$id": "246",
                    "kind": "array",
                    "type": {
                     "$ref": "62"
                    },
                    "value": [
                     {
                      "$id": "247",
                      "kind": "model",
                      "type": {
                       "$ref": "53"
                      },
                      "value": {
                       "$id": "248",
                       "code": {
                        "$id": "249",
                        "kind": "string",
                        "type": {
                         "$ref": "55"
                        },
                        "value": "Latn"
                       },
                       "name": {
                        "$id": "250",
                        "kind": "string",
                        "type": {
                         "$ref": "57"
                        },
                        "value": "Latin"
                       },
                       "nativeName": {
                        "$id": "251",
                        "kind": "string",
                        "type": {
                         "$ref": "59"
                        },
                        "value": "اللاتينية"
                       },
                       "dir": {
                        "$id": "252",
                        "kind": "string",
                        "type": {
                         "$ref": "2"
                        },
                        "value": "ltr"
                       }
                      }
                     }
                    ]
                   }
                  }
                 },
                 {
                  "$id": "253",
                  "kind": "model",
                  "type": {
                   "$ref": "52"
                  },
                  "value": {
                   "$id": "254",
                   "code": {
                    "$id": "255",
                    "kind": "string",
                    "type": {
                     "$ref": "55"
                    },
                    "value": "Latn"
                   },
                   "name": {
                    "$id": "256",
                    "kind": "string",
                    "type": {
                     "$ref": "57"
                    },
                    "value": "Latin"
                   },
                   "nativeName": {
                    "$id": "257",
                    "kind": "string",
                    "type": {
                     "$ref": "59"
                    },
                    "value": "اللاتينية"
                   },
                   "dir": {
                    "$id": "258",
                    "kind": "string",
                    "type": {
                     "$ref": "2"
                    },
                    "value": "ltr"
                   },
                   "toScripts": {
                    "$id": "259",
                    "kind": "array",
                    "type": {
                     "$ref": "62"
                    },
                    "value": [
                     {
                      "$id": "260",
                      "kind": "model",
                      "type": {
                       "$ref": "53"
                      },
                      "value": {
                       "$id": "261",
                       "code": {
                        "$id": "262",
                        "kind": "string",
                        "type": {
                         "$ref": "55"
                        },
                        "value": "Arab"
                       },
                       "name": {
                        "$id": "263",
                        "kind": "string",
                        "type": {
                         "$ref": "57"
                        },
                        "value": "Arabic"
                       },
                       "nativeName": {
                        "$id": "264",
                        "kind": "string",
                        "type": {
                         "$ref": "59"
                        },
                        "value": "العربية"
                       },
                       "dir": {
                        "$id": "265",
                        "kind": "string",
                        "type": {
                         "$ref": "2"
                        },
                        "value": "rtl"
                       }
                      }
                     }
                    ]
                   }
                  }
                 }
                ]
               }
              }
             }
            }
           },
           "dictionary": {
            "$id": "266",
            "kind": "dict",
            "type": {
             "$ref": "64"
            },
            "value": {
             "$id": "267",
             "cs": {
              "$id": "268",
              "kind": "model",
              "type": {
               "$ref": "66"
              },
              "value": {
               "$id": "269",
               "name": {
                "$id": "270",
                "kind": "string",
                "type": {
                 "$ref": "68"
                },
                "value": "Czech"
               },
               "nativeName": {
                "$id": "271",
                "kind": "string",
                "type": {
                 "$ref": "70"
                },
                "value": "Čeština"
               },
               "dir": {
                "$id": "272",
                "kind": "string",
                "type": {
                 "$ref": "2"
                },
                "value": "ltr"
               },
               "translations": {
                "$id": "273",
                "kind": "array",
                "type": {
                 "$ref": "73"
                },
                "value": [
                 {
                  "$id": "274",
                  "kind": "model",
                  "type": {
                   "$ref": "74"
                  },
                  "value": {
                   "$id": "275",
                   "name": {
                    "$id": "276",
                    "kind": "string",
                    "type": {
                     "$ref": "76"
                    },
                    "value": "English"
                   },
                   "nativeName": {
                    "$id": "277",
                    "kind": "string",
                    "type": {
                     "$ref": "78"
                    },
                    "value": "English"
                   },
                   "dir": {
                    "$id": "278",
                    "kind": "string",
                    "type": {
                     "$ref": "2"
                    },
                    "value": "ltr"
                   },
                   "code": {
                    "$id": "279",
                    "kind": "string",
                    "type": {
                     "$ref": "81"
                    },
                    "value": "en"
                   }
                  }
                 }
                ]
               }
              }
             }
            }
           }
          }
         }
        }
       ]
      },
      {
       "$id": "280",
       "kind": "http",
       "name": "Gets the set of languages currently supported by other operations of the Translator with minimum properties.",
       "description": "Gets the set of languages currently supported by other operations of the Translator with minimum properties.",
       "filePath": "3.0/GetSupportedLanguages_MinimumSet_Gen.json",
       "parameters": [
        {
         "$id": "281",
         "parameter": {
          "$ref": "195"
         },
         "value": {
          "$id": "282",
          "kind": "string",
          "type": {
           "$ref": "196"
          },
          "value": "3.0"
         }
        }
       ],
       "responses": [
        {
         "$id": "283",
         "response": {
          "$ref": "202"
         },
         "statusCode": 200,
         "bodyValue": {
          "$id": "284",
          "kind": "model",
          "type": {
           "$ref": "32"
          },
          "value": {
           "$id": "285"
          }
         }
        }
       ]
      }
     ]
    },
    {
     "$id": "286",
     "Name": "translate",
     "ResourceName": "TextTranslation",
     "Summary": "Translate Text",
     "Description": "Translate Text",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "287",
       "Name": "clientTraceId",
       "NameInRequest": "X-ClientTraceId",
       "Description": "A client-generated GUID to uniquely identify the request.",
       "Type": {
        "$id": "288",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "289",
       "Name": "TargetLanguages",
       "NameInRequest": "to",
       "Description": "Specifies the language of the output text. The target language must be one of the supported languages included \nin the translation scope. For example, use to=de to translate to German.\nIt's possible to translate to multiple languages simultaneously by repeating the parameter in the query string. \nFor example, use to=de&to=it to translate to German and Italian.",
       "Type": {
        "$id": "290",
        "kind": "array",
        "name": "Array",
        "valueType": {
         "$id": "291",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "crossLanguageDefinitionId": "TypeSpec.Array",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": true,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "292",
       "Name": "SourceLanguage",
       "NameInRequest": "from",
       "Description": "Specifies the language of the input text. Find which languages are available to translate from by \nlooking up supported languages using the translation scope. If the from parameter isn't specified, \nautomatic language detection is applied to determine the source language.\n\nYou must use the from parameter rather than autodetection when using the dynamic dictionary feature. \nNote: the dynamic dictionary feature is case-sensitive.",
       "Type": {
        "$id": "293",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "294",
       "Name": "textType",
       "NameInRequest": "textType",
       "Description": "Defines whether the text being translated is plain text or HTML text. Any HTML needs to be a well-formed, \ncomplete element. Possible values are: plain (default) or html.",
       "Type": {
        "$ref": "8"
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "295",
       "Name": "category",
       "NameInRequest": "category",
       "Description": "A string specifying the category (domain) of the translation. This parameter is used to get translations \nfrom a customized system built with Custom Translator. Add the Category ID from your Custom Translator \nproject details to this parameter to use your deployed customized system. Default value is: general.",
       "Type": {
        "$id": "296",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "297",
       "Name": "profanityAction",
       "NameInRequest": "profanityAction",
       "Description": "Specifies how profanities should be treated in translations.\nPossible values are: NoAction (default), Marked or Deleted.",
       "Type": {
        "$ref": "14"
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "298",
       "Name": "profanityMarker",
       "NameInRequest": "profanityMarker",
       "Description": "Specifies how profanities should be marked in translations.\nPossible values are: Asterisk (default) or Tag. ",
       "Type": {
        "$ref": "22"
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "299",
       "Name": "includeAlignment",
       "NameInRequest": "includeAlignment",
       "Description": "Specifies whether to include alignment projection from source text to translated text.\nPossible values are: true or false (default).",
       "Type": {
        "$id": "300",
        "kind": "boolean",
        "name": "boolean",
        "crossLanguageDefinitionId": "TypeSpec.boolean",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "301",
       "Name": "includeSentenceLength",
       "NameInRequest": "includeSentenceLength",
       "Description": "Specifies whether to include sentence boundaries for the input text and the translated text.\nPossible values are: true or false (default).",
       "Type": {
        "$id": "302",
        "kind": "boolean",
        "name": "boolean",
        "crossLanguageDefinitionId": "TypeSpec.boolean",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "303",
       "Name": "SuggestedSourceLanguage",
       "NameInRequest": "suggestedFrom",
       "Description": "Specifies a fallback language if the language of the input text can't be identified. \nLanguage autodetection is applied when the from parameter is omitted. If detection fails, \nthe suggestedFrom language will be assumed.",
       "Type": {
        "$id": "304",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "305",
       "Name": "SourceLanguageScript",
       "NameInRequest": "fromScript",
       "Description": "Specifies the script of the input text.",
       "Type": {
        "$id": "306",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "307",
       "Name": "TargetLanguageScript",
       "NameInRequest": "toScript",
       "Description": "Specifies the script of the translated text.",
       "Type": {
        "$id": "308",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "309",
       "Name": "allowFallback",
       "NameInRequest": "allowFallback",
       "Description": "Specifies that the service is allowed to fall back to a general system when a custom system doesn't exist. \nPossible values are: true (default) or false.\n\nallowFallback=false specifies that the translation should only use systems trained for the category specified \nby the request. If a translation for language X to language Y requires chaining through a pivot language E, \nthen all the systems in the chain (X → E and E → Y) will need to be custom and have the same category. \nIf no system is found with the specific category, the request will return a 400 status code. allowFallback=true \nspecifies that the service is allowed to fall back to a general system when a custom system doesn't exist.",
       "Type": {
        "$id": "310",
        "kind": "boolean",
        "name": "boolean",
        "crossLanguageDefinitionId": "TypeSpec.boolean",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "311",
       "Name": "apiVersion",
       "NameInRequest": "api-version",
       "Description": "Mandatory API version parameter",
       "Type": {
        "$id": "312",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": true,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Client",
       "DefaultValue": {
        "$id": "313",
        "Type": {
         "$id": "314",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "3.0"
       },
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "315",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Description": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "316",
        "kind": "constant",
        "valueType": {
         "$id": "317",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "318",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "319",
        "kind": "constant",
        "valueType": {
         "$id": "320",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "321",
       "Name": "body",
       "NameInRequest": "body",
       "Description": "Defines the content of the request",
       "Type": {
        "$id": "322",
        "kind": "array",
        "name": "ArrayInputTextItem",
        "valueType": {
         "$ref": "89"
        },
        "crossLanguageDefinitionId": "TypeSpec.Array",
        "decorators": []
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "323",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$id": "324",
        "kind": "array",
        "name": "ArrayTranslatedTextItem",
        "valueType": {
         "$ref": "92"
        },
        "crossLanguageDefinitionId": "TypeSpec.Array",
        "decorators": []
       },
       "BodyMediaType": "Json",
       "Headers": [
        {
         "$id": "325",
         "Name": "requestId",
         "NameInResponse": "X-RequestId",
         "Description": "Value generated by the service to identify the request. It is used for troubleshooting purposes.",
         "Type": {
          "$id": "326",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         }
        },
        {
         "$id": "327",
         "Name": "mtSystem",
         "NameInResponse": "x-mt-system",
         "Description": "Specifies the system type that was used for translation for each 'to' language requested for translation. \nThe value is a comma-separated list of strings. Each string indicates a type:\n\n* Custom - Request includes a custom system and at least one custom system was used during translation.\n* Team - All other requests",
         "Type": {
          "$id": "328",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         }
        },
        {
         "$id": "329",
         "Name": "meteredUsage",
         "NameInResponse": "x-metered-usage",
         "Description": "Specifies consumption (the number of characters for which the user will be charged) for the translation \njob request. For example, if the word \"Hello\" is translated from English (en) to French (fr), \nthis field will return the value '5'.",
         "Type": {
          "$id": "330",
          "kind": "int32",
          "name": "int32",
          "crossLanguageDefinitionId": "TypeSpec.int32",
          "decorators": []
         }
        }
       ],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "None",
     "Uri": "{Endpoint}",
     "Path": "/translate",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "TextTranslation.translate",
     "Decorators": [],
     "Examples": [
      {
       "$id": "331",
       "kind": "http",
       "name": "Translate Text",
       "description": "Translate Text",
       "filePath": "3.0/Translate_MaximumSet_Gen.json",
       "parameters": [
        {
         "$id": "332",
         "parameter": {
          "$ref": "287"
         },
         "value": {
          "$id": "333",
          "kind": "string",
          "type": {
           "$ref": "288"
          },
          "value": "ndbkaatzsnoetqkiehappoza"
         }
        },
        {
         "$id": "334",
         "parameter": {
          "$ref": "289"
         },
         "value": {
          "$id": "335",
          "kind": "array",
          "type": {
           "$ref": "290"
          },
          "value": [
           {
            "$id": "336",
            "kind": "string",
            "type": {
             "$ref": "291"
            },
            "value": "cs"
           }
          ]
         }
        },
        {
         "$id": "337",
         "parameter": {
          "$ref": "292"
         },
         "value": {
          "$id": "338",
          "kind": "string",
          "type": {
           "$ref": "293"
          },
          "value": "en"
         }
        },
        {
         "$id": "339",
         "parameter": {
          "$ref": "294"
         },
         "value": {
          "$id": "340",
          "kind": "string",
          "type": {
           "$ref": "8"
          },
          "value": "Plain"
         }
        },
        {
         "$id": "341",
         "parameter": {
          "$ref": "295"
         },
         "value": {
          "$id": "342",
          "kind": "string",
          "type": {
           "$ref": "296"
          },
          "value": "custom"
         }
        },
        {
         "$id": "343",
         "parameter": {
          "$ref": "297"
         },
         "value": {
          "$id": "344",
          "kind": "string",
          "type": {
           "$ref": "14"
          },
          "value": "NoAction"
         }
        },
        {
         "$id": "345",
         "parameter": {
          "$ref": "298"
         },
         "value": {
          "$id": "346",
          "kind": "string",
          "type": {
           "$ref": "22"
          },
          "value": "Asterisk"
         }
        },
        {
         "$id": "347",
         "parameter": {
          "$ref": "299"
         },
         "value": {
          "$id": "348",
          "kind": "boolean",
          "type": {
           "$ref": "300"
          },
          "value": true
         }
        },
        {
         "$id": "349",
         "parameter": {
          "$ref": "301"
         },
         "value": {
          "$id": "350",
          "kind": "boolean",
          "type": {
           "$ref": "302"
          },
          "value": true
         }
        },
        {
         "$id": "351",
         "parameter": {
          "$ref": "303"
         },
         "value": {
          "$id": "352",
          "kind": "string",
          "type": {
           "$ref": "304"
          },
          "value": "en"
         }
        },
        {
         "$id": "353",
         "parameter": {
          "$ref": "305"
         },
         "value": {
          "$id": "354",
          "kind": "string",
          "type": {
           "$ref": "306"
          },
          "value": "Latn"
         }
        },
        {
         "$id": "355",
         "parameter": {
          "$ref": "307"
         },
         "value": {
          "$id": "356",
          "kind": "string",
          "type": {
           "$ref": "308"
          },
          "value": "Latn"
         }
        },
        {
         "$id": "357",
         "parameter": {
          "$ref": "309"
         },
         "value": {
          "$id": "358",
          "kind": "boolean",
          "type": {
           "$ref": "310"
          },
          "value": true
         }
        },
        {
         "$id": "359",
         "parameter": {
          "$ref": "311"
         },
         "value": {
          "$id": "360",
          "kind": "string",
          "type": {
           "$ref": "312"
          },
          "value": "3.0"
         }
        },
        {
         "$id": "361",
         "parameter": {
          "$ref": "321"
         },
         "value": {
          "$id": "362",
          "kind": "array",
          "type": {
           "$ref": "322"
          },
          "value": [
           {
            "$id": "363",
            "kind": "model",
            "type": {
             "$ref": "89"
            },
            "value": {
             "$id": "364",
             "text": {
              "$id": "365",
              "kind": "string",
              "type": {
               "$ref": "91"
              },
              "value": "This is a test."
             }
            }
           }
          ]
         }
        }
       ],
       "responses": [
        {
         "$id": "366",
         "response": {
          "$ref": "323"
         },
         "statusCode": 200,
         "bodyValue": {
          "$id": "367",
          "kind": "array",
          "type": {
           "$ref": "324"
          },
          "value": [
           {
            "$id": "368",
            "kind": "model",
            "type": {
             "$ref": "92"
            },
            "value": {
             "$id": "369",
             "detectedLanguage": {
              "$id": "370",
              "kind": "model",
              "type": {
               "$ref": "94"
              },
              "value": {
               "$id": "371",
               "language": {
                "$id": "372",
                "kind": "string",
                "type": {
                 "$ref": "96"
                },
                "value": "en"
               },
               "score": {
                "$id": "373",
                "kind": "number",
                "type": {
                 "$ref": "98"
                },
                "value": 1
               }
              }
             },
             "translations": {
              "$id": "374",
              "kind": "array",
              "type": {
               "$ref": "100"
              },
              "value": [
               {
                "$id": "375",
                "kind": "model",
                "type": {
                 "$ref": "101"
                },
                "value": {
                 "$id": "376",
                 "to": {
                  "$id": "377",
                  "kind": "string",
                  "type": {
                   "$ref": "103"
                  },
                  "value": "cs"
                 },
                 "text": {
                  "$id": "378",
                  "kind": "string",
                  "type": {
                   "$ref": "105"
                  },
                  "value": "Tohle je test."
                 },
                 "transliteration": {
                  "$id": "379",
                  "kind": "model",
                  "type": {
                   "$ref": "107"
                  },
                  "value": {
                   "$id": "380",
                   "text": {
                    "$id": "381",
                    "kind": "string",
                    "type": {
                     "$ref": "109"
                    },
                    "value": "Tohle je test."
                   },
                   "script": {
                    "$id": "382",
                    "kind": "string",
                    "type": {
                     "$ref": "111"
                    },
                    "value": "Latn"
                   }
                  }
                 },
                 "alignment": {
                  "$id": "383",
                  "kind": "model",
                  "type": {
                   "$ref": "113"
                  },
                  "value": {
                   "$id": "384",
                   "proj": {
                    "$id": "385",
                    "kind": "string",
                    "type": {
                     "$ref": "115"
                    },
                    "value": "okrxvzsagjgzrrv"
                   }
                  }
                 },
                 "sentLen": {
                  "$id": "386",
                  "kind": "model",
                  "type": {
                   "$ref": "117"
                  },
                  "value": {
                   "$id": "387",
                   "srcSentLen": {
                    "$id": "388",
                    "kind": "array",
                    "type": {
                     "$ref": "119"
                    },
                    "value": [
                     {
                      "$id": "389",
                      "kind": "number",
                      "type": {
                       "$ref": "120"
                      },
                      "value": 30
                     }
                    ]
                   },
                   "transSentLen": {
                    "$id": "390",
                    "kind": "array",
                    "type": {
                     "$ref": "122"
                    },
                    "value": [
                     {
                      "$id": "391",
                      "kind": "number",
                      "type": {
                       "$ref": "123"
                      },
                      "value": 24
                     }
                    ]
                   }
                  }
                 }
                }
               }
              ]
             },
             "sourceText": {
              "$id": "392",
              "kind": "model",
              "type": {
               "$ref": "125"
              },
              "value": {
               "$id": "393",
               "text": {
                "$id": "394",
                "kind": "string",
                "type": {
                 "$ref": "127"
                },
                "value": "This is a test"
               }
              }
             }
            }
           }
          ]
         }
        }
       ]
      },
      {
       "$id": "395",
       "kind": "http",
       "name": "Translate Text with minimum properties",
       "description": "Translate Text with minimum properties",
       "filePath": "3.0/Translate_MinimumSet_Gen.json",
       "parameters": [
        {
         "$id": "396",
         "parameter": {
          "$ref": "289"
         },
         "value": {
          "$id": "397",
          "kind": "array",
          "type": {
           "$ref": "290"
          },
          "value": [
           {
            "$id": "398",
            "kind": "string",
            "type": {
             "$ref": "291"
            },
            "value": "fmlxpuepn"
           }
          ]
         }
        },
        {
         "$id": "399",
         "parameter": {
          "$ref": "311"
         },
         "value": {
          "$id": "400",
          "kind": "string",
          "type": {
           "$ref": "312"
          },
          "value": "3.0"
         }
        },
        {
         "$id": "401",
         "parameter": {
          "$ref": "321"
         },
         "value": {
          "$id": "402",
          "kind": "array",
          "type": {
           "$ref": "322"
          },
          "value": [
           {
            "$id": "403",
            "kind": "model",
            "type": {
             "$ref": "89"
            },
            "value": {
             "$id": "404",
             "text": {
              "$id": "405",
              "kind": "string",
              "type": {
               "$ref": "91"
              },
              "value": "This is a test."
             }
            }
           }
          ]
         }
        }
       ],
       "responses": [
        {
         "$id": "406",
         "response": {
          "$ref": "323"
         },
         "statusCode": 200,
         "bodyValue": {
          "$id": "407",
          "kind": "array",
          "type": {
           "$ref": "324"
          },
          "value": [
           {
            "$id": "408",
            "kind": "model",
            "type": {
             "$ref": "92"
            },
            "value": {
             "$id": "409",
             "translations": {
              "$id": "410",
              "kind": "array",
              "type": {
               "$ref": "100"
              },
              "value": [
               {
                "$id": "411",
                "kind": "model",
                "type": {
                 "$ref": "101"
                },
                "value": {
                 "$id": "412",
                 "text": {
                  "$id": "413",
                  "kind": "string",
                  "type": {
                   "$ref": "105"
                  },
                  "value": "Tohle je test."
                 },
                 "to": {
                  "$id": "414",
                  "kind": "string",
                  "type": {
                   "$ref": "103"
                  },
                  "value": "cs"
                 }
                }
               }
              ]
             }
            }
           }
          ]
         }
        }
       ]
      }
     ]
    },
    {
     "$id": "415",
     "Name": "transliterate",
     "ResourceName": "TextTranslation",
     "Summary": "Transliterate Text",
     "Description": "Transliterate Text",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "416",
       "Name": "clientTraceId",
       "NameInRequest": "X-ClientTraceId",
       "Description": "A client-generated GUID to uniquely identify the request.",
       "Type": {
        "$id": "417",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "418",
       "Name": "language",
       "NameInRequest": "language",
       "Description": "Specifies the language of the text to convert from one script to another. \nPossible languages are listed in the transliteration scope obtained by querying the service \nfor its supported languages.",
       "Type": {
        "$id": "419",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "420",
       "Name": "SourceLanguageScript",
       "NameInRequest": "fromScript",
       "Description": "Specifies the script used by the input text. Look up supported languages using the transliteration scope,\nto find input scripts available for the selected language.",
       "Type": {
        "$id": "421",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "422",
       "Name": "TargetLanguageScript",
       "NameInRequest": "toScript",
       "Description": "Specifies the output script. Look up supported languages using the transliteration scope, to find output \nscripts available for the selected combination of input language and input script.",
       "Type": {
        "$id": "423",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "424",
       "Name": "apiVersion",
       "NameInRequest": "api-version",
       "Description": "Mandatory API version parameter",
       "Type": {
        "$id": "425",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": true,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Client",
       "DefaultValue": {
        "$id": "426",
        "Type": {
         "$id": "427",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "3.0"
       },
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "428",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Description": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "429",
        "kind": "constant",
        "valueType": {
         "$id": "430",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "431",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "432",
        "kind": "constant",
        "valueType": {
         "$id": "433",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "434",
       "Name": "body",
       "NameInRequest": "body",
       "Description": "Defines the content of the request",
       "Type": {
        "$id": "435",
        "kind": "array",
        "name": "ArrayInputTextItem",
        "valueType": {
         "$ref": "89"
        },
        "crossLanguageDefinitionId": "TypeSpec.Array",
        "decorators": []
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "436",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$id": "437",
        "kind": "array",
        "name": "ArrayTransliteratedText",
        "valueType": {
         "$ref": "107"
        },
        "crossLanguageDefinitionId": "TypeSpec.Array",
        "decorators": []
       },
       "BodyMediaType": "Json",
       "Headers": [
        {
         "$id": "438",
         "Name": "requestId",
         "NameInResponse": "X-RequestId",
         "Description": "Value generated by the service to identify the request. It is used for troubleshooting purposes.",
         "Type": {
          "$id": "439",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         }
        }
       ],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "None",
     "Uri": "{Endpoint}",
     "Path": "/transliterate",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "TextTranslation.transliterate",
     "Decorators": [],
     "Examples": [
      {
       "$id": "440",
       "kind": "http",
       "name": "Transliterate Text",
       "description": "Transliterate Text",
       "filePath": "3.0/Transliterate_MaximumSet_Gen.json",
       "parameters": [
        {
         "$id": "441",
         "parameter": {
          "$ref": "416"
         },
         "value": {
          "$id": "442",
          "kind": "string",
          "type": {
           "$ref": "417"
          },
          "value": "dzncrimwmvtwjnheh"
         }
        },
        {
         "$id": "443",
         "parameter": {
          "$ref": "418"
         },
         "value": {
          "$id": "444",
          "kind": "string",
          "type": {
           "$ref": "419"
          },
          "value": "zh-Hans"
         }
        },
        {
         "$id": "445",
         "parameter": {
          "$ref": "420"
         },
         "value": {
          "$id": "446",
          "kind": "string",
          "type": {
           "$ref": "421"
          },
          "value": "Hans"
         }
        },
        {
         "$id": "447",
         "parameter": {
          "$ref": "422"
         },
         "value": {
          "$id": "448",
          "kind": "string",
          "type": {
           "$ref": "423"
          },
          "value": "Latn"
         }
        },
        {
         "$id": "449",
         "parameter": {
          "$ref": "424"
         },
         "value": {
          "$id": "450",
          "kind": "string",
          "type": {
           "$ref": "425"
          },
          "value": "3.0"
         }
        },
        {
         "$id": "451",
         "parameter": {
          "$ref": "434"
         },
         "value": {
          "$id": "452",
          "kind": "array",
          "type": {
           "$ref": "435"
          },
          "value": [
           {
            "$id": "453",
            "kind": "model",
            "type": {
             "$ref": "89"
            },
            "value": {
             "$id": "454",
             "text": {
              "$id": "455",
              "kind": "string",
              "type": {
               "$ref": "91"
              },
              "value": "这是个测试。"
             }
            }
           }
          ]
         }
        }
       ],
       "responses": [
        {
         "$id": "456",
         "response": {
          "$ref": "436"
         },
         "statusCode": 200,
         "bodyValue": {
          "$id": "457",
          "kind": "array",
          "type": {
           "$ref": "437"
          },
          "value": [
           {
            "$id": "458",
            "kind": "model",
            "type": {
             "$ref": "107"
            },
            "value": {
             "$id": "459",
             "text": {
              "$id": "460",
              "kind": "string",
              "type": {
               "$ref": "109"
              },
              "value": "zhè shì gè cè shì。"
             },
             "script": {
              "$id": "461",
              "kind": "string",
              "type": {
               "$ref": "111"
              },
              "value": "Latn"
             }
            }
           }
          ]
         }
        }
       ]
      },
      {
       "$id": "462",
       "kind": "http",
       "name": "Transliterate Text with minimum properties",
       "description": "Transliterate Text with minimum properties",
       "filePath": "3.0/Transliterate_MinimumSet_Gen.json",
       "parameters": [
        {
         "$id": "463",
         "parameter": {
          "$ref": "418"
         },
         "value": {
          "$id": "464",
          "kind": "string",
          "type": {
           "$ref": "419"
          },
          "value": "zh-Hans"
         }
        },
        {
         "$id": "465",
         "parameter": {
          "$ref": "420"
         },
         "value": {
          "$id": "466",
          "kind": "string",
          "type": {
           "$ref": "421"
          },
          "value": "Hans"
         }
        },
        {
         "$id": "467",
         "parameter": {
          "$ref": "422"
         },
         "value": {
          "$id": "468",
          "kind": "string",
          "type": {
           "$ref": "423"
          },
          "value": "Latn"
         }
        },
        {
         "$id": "469",
         "parameter": {
          "$ref": "424"
         },
         "value": {
          "$id": "470",
          "kind": "string",
          "type": {
           "$ref": "425"
          },
          "value": "3.0"
         }
        },
        {
         "$id": "471",
         "parameter": {
          "$ref": "434"
         },
         "value": {
          "$id": "472",
          "kind": "array",
          "type": {
           "$ref": "435"
          },
          "value": [
           {
            "$id": "473",
            "kind": "model",
            "type": {
             "$ref": "89"
            },
            "value": {
             "$id": "474",
             "text": {
              "$id": "475",
              "kind": "string",
              "type": {
               "$ref": "91"
              },
              "value": "这是个测试。"
             }
            }
           }
          ]
         }
        }
       ],
       "responses": [
        {
         "$id": "476",
         "response": {
          "$ref": "436"
         },
         "statusCode": 200,
         "bodyValue": {
          "$id": "477",
          "kind": "array",
          "type": {
           "$ref": "437"
          },
          "value": [
           {
            "$id": "478",
            "kind": "model",
            "type": {
             "$ref": "107"
            },
            "value": {
             "$id": "479",
             "text": {
              "$id": "480",
              "kind": "string",
              "type": {
               "$ref": "109"
              },
              "value": "zhè shì gè cè shì。"
             },
             "script": {
              "$id": "481",
              "kind": "string",
              "type": {
               "$ref": "111"
              },
              "value": "Latn"
             }
            }
           }
          ]
         }
        }
       ]
      }
     ]
    },
    {
     "$id": "482",
     "Name": "findSentenceBoundaries",
     "ResourceName": "TextTranslation",
     "Summary": "Find Sentence Boundaries",
     "Description": "Find Sentence Boundaries",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "483",
       "Name": "clientTraceId",
       "NameInRequest": "X-ClientTraceId",
       "Description": "A client-generated GUID to uniquely identify the request.",
       "Type": {
        "$id": "484",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "485",
       "Name": "language",
       "NameInRequest": "language",
       "Description": "Language tag identifying the language of the input text. \nIf a code isn't specified, automatic language detection will be applied.",
       "Type": {
        "$id": "486",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "487",
       "Name": "script",
       "NameInRequest": "script",
       "Description": "Script tag identifying the script used by the input text. \nIf a script isn't specified, the default script of the language will be assumed.",
       "Type": {
        "$id": "488",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "489",
       "Name": "apiVersion",
       "NameInRequest": "api-version",
       "Description": "Mandatory API version parameter",
       "Type": {
        "$id": "490",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": true,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Client",
       "DefaultValue": {
        "$id": "491",
        "Type": {
         "$id": "492",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "3.0"
       },
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "493",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Description": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "494",
        "kind": "constant",
        "valueType": {
         "$id": "495",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "496",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "497",
        "kind": "constant",
        "valueType": {
         "$id": "498",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "499",
       "Name": "body",
       "NameInRequest": "body",
       "Description": "Defines the content of the request",
       "Type": {
        "$id": "500",
        "kind": "array",
        "name": "ArrayInputTextItem",
        "valueType": {
         "$ref": "89"
        },
        "crossLanguageDefinitionId": "TypeSpec.Array",
        "decorators": []
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "501",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$id": "502",
        "kind": "array",
        "name": "ArrayBreakSentenceItem",
        "valueType": {
         "$ref": "128"
        },
        "crossLanguageDefinitionId": "TypeSpec.Array",
        "decorators": []
       },
       "BodyMediaType": "Json",
       "Headers": [
        {
         "$id": "503",
         "Name": "requestId",
         "NameInResponse": "X-RequestId",
         "Description": "Value generated by the service to identify the request. It is used for troubleshooting purposes.",
         "Type": {
          "$id": "504",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         }
        }
       ],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "None",
     "Uri": "{Endpoint}",
     "Path": "/breaksentence",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "TextTranslation.findSentenceBoundaries",
     "Decorators": [],
     "Examples": [
      {
       "$id": "505",
       "kind": "http",
       "name": "Find Sentence Boundaries",
       "description": "Find Sentence Boundaries",
       "filePath": "3.0/FindSentenceBoundaries_MaximumSet_Gen.json",
       "parameters": [
        {
         "$id": "506",
         "parameter": {
          "$ref": "483"
         },
         "value": {
          "$id": "507",
          "kind": "string",
          "type": {
           "$ref": "484"
          },
          "value": "svun"
         }
        },
        {
         "$id": "508",
         "parameter": {
          "$ref": "485"
         },
         "value": {
          "$id": "509",
          "kind": "string",
          "type": {
           "$ref": "486"
          },
          "value": "en"
         }
        },
        {
         "$id": "510",
         "parameter": {
          "$ref": "487"
         },
         "value": {
          "$id": "511",
          "kind": "string",
          "type": {
           "$ref": "488"
          },
          "value": "Latn"
         }
        },
        {
         "$id": "512",
         "parameter": {
          "$ref": "489"
         },
         "value": {
          "$id": "513",
          "kind": "string",
          "type": {
           "$ref": "490"
          },
          "value": "3.0"
         }
        },
        {
         "$id": "514",
         "parameter": {
          "$ref": "499"
         },
         "value": {
          "$id": "515",
          "kind": "array",
          "type": {
           "$ref": "500"
          },
          "value": [
           {
            "$id": "516",
            "kind": "model",
            "type": {
             "$ref": "89"
            },
            "value": {
             "$id": "517",
             "text": {
              "$id": "518",
              "kind": "string",
              "type": {
               "$ref": "91"
              },
              "value": "How are you? I am fine. What did you do today?"
             }
            }
           }
          ]
         }
        }
       ],
       "responses": [
        {
         "$id": "519",
         "response": {
          "$ref": "501"
         },
         "statusCode": 200,
         "bodyValue": {
          "$id": "520",
          "kind": "array",
          "type": {
           "$ref": "502"
          },
          "value": [
           {
            "$id": "521",
            "kind": "model",
            "type": {
             "$ref": "128"
            },
            "value": {
             "$id": "522",
             "sentLen": {
              "$id": "523",
              "kind": "array",
              "type": {
               "$ref": "131"
              },
              "value": [
               {
                "$id": "524",
                "kind": "number",
                "type": {
                 "$ref": "132"
                },
                "value": 13
               },
               {
                "$id": "525",
                "kind": "number",
                "type": {
                 "$ref": "132"
                },
                "value": 11
               },
               {
                "$id": "526",
                "kind": "number",
                "type": {
                 "$ref": "132"
                },
                "value": 22
               }
              ]
             }
            }
           }
          ]
         }
        }
       ]
      },
      {
       "$id": "527",
       "kind": "http",
       "name": "Find Sentence Boundaries with minimum properties",
       "description": "Find Sentence Boundaries with minimum properties",
       "filePath": "3.0/FindSentenceBoundaries_MinimumSet_Gen.json",
       "parameters": [
        {
         "$id": "528",
         "parameter": {
          "$ref": "489"
         },
         "value": {
          "$id": "529",
          "kind": "string",
          "type": {
           "$ref": "490"
          },
          "value": "3.0"
         }
        },
        {
         "$id": "530",
         "parameter": {
          "$ref": "499"
         },
         "value": {
          "$id": "531",
          "kind": "array",
          "type": {
           "$ref": "500"
          },
          "value": [
           {
            "$id": "532",
            "kind": "model",
            "type": {
             "$ref": "89"
            },
            "value": {
             "$id": "533",
             "text": {
              "$id": "534",
              "kind": "string",
              "type": {
               "$ref": "91"
              },
              "value": "How are you? I am fine. What did you do today?"
             }
            }
           }
          ]
         }
        }
       ],
       "responses": [
        {
         "$id": "535",
         "response": {
          "$ref": "501"
         },
         "statusCode": 200,
         "bodyValue": {
          "$id": "536",
          "kind": "array",
          "type": {
           "$ref": "502"
          },
          "value": [
           {
            "$id": "537",
            "kind": "model",
            "type": {
             "$ref": "128"
            },
            "value": {
             "$id": "538",
             "detectedLanguage": {
              "$id": "539",
              "kind": "model",
              "type": {
               "$ref": "94"
              },
              "value": {
               "$id": "540",
               "language": {
                "$id": "541",
                "kind": "string",
                "type": {
                 "$ref": "96"
                },
                "value": "en"
               },
               "score": {
                "$id": "542",
                "kind": "number",
                "type": {
                 "$ref": "98"
                },
                "value": 1
               }
              }
             },
             "sentLen": {
              "$id": "543",
              "kind": "array",
              "type": {
               "$ref": "131"
              },
              "value": [
               {
                "$id": "544",
                "kind": "number",
                "type": {
                 "$ref": "132"
                },
                "value": 13
               },
               {
                "$id": "545",
                "kind": "number",
                "type": {
                 "$ref": "132"
                },
                "value": 11
               },
               {
                "$id": "546",
                "kind": "number",
                "type": {
                 "$ref": "132"
                },
                "value": 22
               }
              ]
             }
            }
           }
          ]
         }
        }
       ]
      }
     ]
    },
    {
     "$id": "547",
     "Name": "lookupDictionaryEntries",
     "ResourceName": "TextTranslation",
     "Summary": "Lookup Dictionary Entries",
     "Description": "Lookup Dictionary Entries",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "548",
       "Name": "clientTraceId",
       "NameInRequest": "X-ClientTraceId",
       "Description": "A client-generated GUID to uniquely identify the request.",
       "Type": {
        "$id": "549",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "550",
       "Name": "SourceLanguage",
       "NameInRequest": "from",
       "Description": "Specifies the language of the input text.\nThe source language must be one of the supported languages included in the dictionary scope.",
       "Type": {
        "$id": "551",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "552",
       "Name": "TargetLanguage",
       "NameInRequest": "to",
       "Description": "Specifies the language of the output text.\nThe target language must be one of the supported languages included in the dictionary scope.",
       "Type": {
        "$id": "553",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "554",
       "Name": "apiVersion",
       "NameInRequest": "api-version",
       "Description": "Mandatory API version parameter",
       "Type": {
        "$id": "555",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": true,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Client",
       "DefaultValue": {
        "$id": "556",
        "Type": {
         "$id": "557",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "3.0"
       },
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "558",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Description": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "559",
        "kind": "constant",
        "valueType": {
         "$id": "560",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "561",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "562",
        "kind": "constant",
        "valueType": {
         "$id": "563",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "564",
       "Name": "body",
       "NameInRequest": "body",
       "Description": "Defines the content of the request",
       "Type": {
        "$id": "565",
        "kind": "array",
        "name": "ArrayInputTextItem",
        "valueType": {
         "$ref": "89"
        },
        "crossLanguageDefinitionId": "TypeSpec.Array",
        "decorators": []
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "566",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$id": "567",
        "kind": "array",
        "name": "ArrayDictionaryLookupItem",
        "valueType": {
         "$ref": "133"
        },
        "crossLanguageDefinitionId": "TypeSpec.Array",
        "decorators": []
       },
       "BodyMediaType": "Json",
       "Headers": [
        {
         "$id": "568",
         "Name": "requestId",
         "NameInResponse": "X-RequestId",
         "Description": "Value generated by the service to identify the request. It is used for troubleshooting purposes.",
         "Type": {
          "$id": "569",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         }
        }
       ],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "None",
     "Uri": "{Endpoint}",
     "Path": "/dictionary/lookup",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "TextTranslation.lookupDictionaryEntries",
     "Decorators": [],
     "Examples": [
      {
       "$id": "570",
       "kind": "http",
       "name": "Lookup Dictionary Entries",
       "description": "Lookup Dictionary Entries",
       "filePath": "3.0/LookupDictionaryEntries_MaximumSet_Gen.json",
       "parameters": [
        {
         "$id": "571",
         "parameter": {
          "$ref": "548"
         },
         "value": {
          "$id": "572",
          "kind": "string",
          "type": {
           "$ref": "549"
          },
          "value": "yqst"
         }
        },
        {
         "$id": "573",
         "parameter": {
          "$ref": "550"
         },
         "value": {
          "$id": "574",
          "kind": "string",
          "type": {
           "$ref": "551"
          },
          "value": "en"
         }
        },
        {
         "$id": "575",
         "parameter": {
          "$ref": "552"
         },
         "value": {
          "$id": "576",
          "kind": "string",
          "type": {
           "$ref": "553"
          },
          "value": "es"
         }
        },
        {
         "$id": "577",
         "parameter": {
          "$ref": "554"
         },
         "value": {
          "$id": "578",
          "kind": "string",
          "type": {
           "$ref": "555"
          },
          "value": "3.0"
         }
        },
        {
         "$id": "579",
         "parameter": {
          "$ref": "564"
         },
         "value": {
          "$id": "580",
          "kind": "array",
          "type": {
           "$ref": "565"
          },
          "value": [
           {
            "$id": "581",
            "kind": "model",
            "type": {
             "$ref": "89"
            },
            "value": {
             "$id": "582",
             "text": {
              "$id": "583",
              "kind": "string",
              "type": {
               "$ref": "91"
              },
              "value": "fly"
             }
            }
           }
          ]
         }
        }
       ],
       "responses": [
        {
         "$id": "584",
         "response": {
          "$ref": "566"
         },
         "statusCode": 200,
         "bodyValue": {
          "$id": "585",
          "kind": "array",
          "type": {
           "$ref": "567"
          },
          "value": [
           {
            "$id": "586",
            "kind": "model",
            "type": {
             "$ref": "133"
            },
            "value": {
             "$id": "587",
             "normalizedSource": {
              "$id": "588",
              "kind": "string",
              "type": {
               "$ref": "135"
              },
              "value": "fly"
             },
             "displaySource": {
              "$id": "589",
              "kind": "string",
              "type": {
               "$ref": "137"
              },
              "value": "fly"
             },
             "translations": {
              "$id": "590",
              "kind": "array",
              "type": {
               "$ref": "139"
              },
              "value": [
               {
                "$id": "591",
                "kind": "model",
                "type": {
                 "$ref": "140"
                },
                "value": {
                 "$id": "592",
                 "normalizedTarget": {
                  "$id": "593",
                  "kind": "string",
                  "type": {
                   "$ref": "142"
                  },
                  "value": "volar"
                 },
                 "displayTarget": {
                  "$id": "594",
                  "kind": "string",
                  "type": {
                   "$ref": "144"
                  },
                  "value": "volar"
                 },
                 "posTag": {
                  "$id": "595",
                  "kind": "string",
                  "type": {
                   "$ref": "146"
                  },
                  "value": "VERB"
                 },
                 "confidence": {
                  "$id": "596",
                  "kind": "number",
                  "type": {
                   "$ref": "148"
                  },
                  "value": 0.4081
                 },
                 "prefixWord": {
                  "$id": "597",
                  "kind": "string",
                  "type": {
                   "$ref": "150"
                  },
                  "value": ""
                 },
                 "backTranslations": {
                  "$id": "598",
                  "kind": "array",
                  "type": {
                   "$ref": "152"
                  },
                  "value": [
                   {
                    "$id": "599",
                    "kind": "model",
                    "type": {
                     "$ref": "153"
                    },
                    "value": {
                     "$id": "600",
                     "normalizedText": {
                      "$id": "601",
                      "kind": "string",
                      "type": {
                       "$ref": "155"
                      },
                      "value": "fly"
                     },
                     "displayText": {
                      "$id": "602",
                      "kind": "string",
                      "type": {
                       "$ref": "157"
                      },
                      "value": "fly"
                     },
                     "numExamples": {
                      "$id": "603",
                      "kind": "number",
                      "type": {
                       "$ref": "159"
                      },
                      "value": 15
                     },
                     "frequencyCount": {
                      "$id": "604",
                      "kind": "number",
                      "type": {
                       "$ref": "161"
                      },
                      "value": 4637
                     }
                    }
                   },
                   {
                    "$id": "605",
                    "kind": "model",
                    "type": {
                     "$ref": "153"
                    },
                    "value": {
                     "$id": "606",
                     "normalizedText": {
                      "$id": "607",
                      "kind": "string",
                      "type": {
                       "$ref": "155"
                      },
                      "value": "flying"
                     },
                     "displayText": {
                      "$id": "608",
                      "kind": "string",
                      "type": {
                       "$ref": "157"
                      },
                      "value": "flying"
                     },
                     "numExamples": {
                      "$id": "609",
                      "kind": "number",
                      "type": {
                       "$ref": "159"
                      },
                      "value": 15
                     },
                     "frequencyCount": {
                      "$id": "610",
                      "kind": "number",
                      "type": {
                       "$ref": "161"
                      },
                      "value": 1365
                     }
                    }
                   },
                   {
                    "$id": "611",
                    "kind": "model",
                    "type": {
                     "$ref": "153"
                    },
                    "value": {
                     "$id": "612",
                     "normalizedText": {
                      "$id": "613",
                      "kind": "string",
                      "type": {
                       "$ref": "155"
                      },
                      "value": "blow"
                     },
                     "displayText": {
                      "$id": "614",
                      "kind": "string",
                      "type": {
                       "$ref": "157"
                      },
                      "value": "blow"
                     },
                     "numExamples": {
                      "$id": "615",
                      "kind": "number",
                      "type": {
                       "$ref": "159"
                      },
                      "value": 15
                     },
                     "frequencyCount": {
                      "$id": "616",
                      "kind": "number",
                      "type": {
                       "$ref": "161"
                      },
                      "value": 503
                     }
                    }
                   },
                   {
                    "$id": "617",
                    "kind": "model",
                    "type": {
                     "$ref": "153"
                    },
                    "value": {
                     "$id": "618",
                     "normalizedText": {
                      "$id": "619",
                      "kind": "string",
                      "type": {
                       "$ref": "155"
                      },
                      "value": "flight"
                     },
                     "displayText": {
                      "$id": "620",
                      "kind": "string",
                      "type": {
                       "$ref": "157"
                      },
                      "value": "flight"
                     },
                     "numExamples": {
                      "$id": "621",
                      "kind": "number",
                      "type": {
                       "$ref": "159"
                      },
                      "value": 15
                     },
                     "frequencyCount": {
                      "$id": "622",
                      "kind": "number",
                      "type": {
                       "$ref": "161"
                      },
                      "value": 135
                     }
                    }
                   }
                  ]
                 }
                }
               },
               {
                "$id": "623",
                "kind": "model",
                "type": {
                 "$ref": "140"
                },
                "value": {
                 "$id": "624",
                 "normalizedTarget": {
                  "$id": "625",
                  "kind": "string",
                  "type": {
                   "$ref": "142"
                  },
                  "value": "mosca"
                 },
                 "displayTarget": {
                  "$id": "626",
                  "kind": "string",
                  "type": {
                   "$ref": "144"
                  },
                  "value": "mosca"
                 },
                 "posTag": {
                  "$id": "627",
                  "kind": "string",
                  "type": {
                   "$ref": "146"
                  },
                  "value": "NOUN"
                 },
                 "confidence": {
                  "$id": "628",
                  "kind": "number",
                  "type": {
                   "$ref": "148"
                  },
                  "value": 0.2668
                 },
                 "prefixWord": {
                  "$id": "629",
                  "kind": "string",
                  "type": {
                   "$ref": "150"
                  },
                  "value": ""
                 },
                 "backTranslations": {
                  "$id": "630",
                  "kind": "array",
                  "type": {
                   "$ref": "152"
                  },
                  "value": [
                   {
                    "$id": "631",
                    "kind": "model",
                    "type": {
                     "$ref": "153"
                    },
                    "value": {
                     "$id": "632",
                     "normalizedText": {
                      "$id": "633",
                      "kind": "string",
                      "type": {
                       "$ref": "155"
                      },
                      "value": "fly"
                     },
                     "displayText": {
                      "$id": "634",
                      "kind": "string",
                      "type": {
                       "$ref": "157"
                      },
                      "value": "fly"
                     },
                     "numExamples": {
                      "$id": "635",
                      "kind": "number",
                      "type": {
                       "$ref": "159"
                      },
                      "value": 15
                     },
                     "frequencyCount": {
                      "$id": "636",
                      "kind": "number",
                      "type": {
                       "$ref": "161"
                      },
                      "value": 1697
                     }
                    }
                   },
                   {
                    "$id": "637",
                    "kind": "model",
                    "type": {
                     "$ref": "153"
                    },
                    "value": {
                     "$id": "638",
                     "normalizedText": {
                      "$id": "639",
                      "kind": "string",
                      "type": {
                       "$ref": "155"
                      },
                      "value": "flyweight"
                     },
                     "displayText": {
                      "$id": "640",
                      "kind": "string",
                      "type": {
                       "$ref": "157"
                      },
                      "value": "flyweight"
                     },
                     "numExamples": {
                      "$id": "641",
                      "kind": "number",
                      "type": {
                       "$ref": "159"
                      },
                      "value": 0
                     },
                     "frequencyCount": {
                      "$id": "642",
                      "kind": "number",
                      "type": {
                       "$ref": "161"
                      },
                      "value": 48
                     }
                    }
                   },
                   {
                    "$id": "643",
                    "kind": "model",
                    "type": {
                     "$ref": "153"
                    },
                    "value": {
                     "$id": "644",
                     "normalizedText": {
                      "$id": "645",
                      "kind": "string",
                      "type": {
                       "$ref": "155"
                      },
                      "value": "flies"
                     },
                     "displayText": {
                      "$id": "646",
                      "kind": "string",
                      "type": {
                       "$ref": "157"
                      },
                      "value": "flies"
                     },
                     "numExamples": {
                      "$id": "647",
                      "kind": "number",
                      "type": {
                       "$ref": "159"
                      },
                      "value": 9
                     },
                     "frequencyCount": {
                      "$id": "648",
                      "kind": "number",
                      "type": {
                       "$ref": "161"
                      },
                      "value": 34
                     }
                    }
                   }
                  ]
                 }
                }
               }
              ]
             }
            }
           }
          ]
         }
        }
       ]
      },
      {
       "$id": "649",
       "kind": "http",
       "name": "Lookup Dictionary Entries with minimum properties",
       "description": "Lookup Dictionary Entries with minimum properties",
       "filePath": "3.0/LookupDictionaryEntries_MinimumSet_Gen.json",
       "parameters": [
        {
         "$id": "650",
         "parameter": {
          "$ref": "550"
         },
         "value": {
          "$id": "651",
          "kind": "string",
          "type": {
           "$ref": "551"
          },
          "value": "en"
         }
        },
        {
         "$id": "652",
         "parameter": {
          "$ref": "552"
         },
         "value": {
          "$id": "653",
          "kind": "string",
          "type": {
           "$ref": "553"
          },
          "value": "es"
         }
        },
        {
         "$id": "654",
         "parameter": {
          "$ref": "554"
         },
         "value": {
          "$id": "655",
          "kind": "string",
          "type": {
           "$ref": "555"
          },
          "value": "3.0"
         }
        },
        {
         "$id": "656",
         "parameter": {
          "$ref": "564"
         },
         "value": {
          "$id": "657",
          "kind": "array",
          "type": {
           "$ref": "565"
          },
          "value": [
           {
            "$id": "658",
            "kind": "model",
            "type": {
             "$ref": "89"
            },
            "value": {
             "$id": "659",
             "text": {
              "$id": "660",
              "kind": "string",
              "type": {
               "$ref": "91"
              },
              "value": "fly"
             }
            }
           }
          ]
         }
        }
       ],
       "responses": [
        {
         "$id": "661",
         "response": {
          "$ref": "566"
         },
         "statusCode": 200,
         "bodyValue": {
          "$id": "662",
          "kind": "array",
          "type": {
           "$ref": "567"
          },
          "value": [
           {
            "$id": "663",
            "kind": "model",
            "type": {
             "$ref": "133"
            },
            "value": {
             "$id": "664",
             "normalizedSource": {
              "$id": "665",
              "kind": "string",
              "type": {
               "$ref": "135"
              },
              "value": "fly"
             },
             "displaySource": {
              "$id": "666",
              "kind": "string",
              "type": {
               "$ref": "137"
              },
              "value": "fly"
             },
             "translations": {
              "$id": "667",
              "kind": "array",
              "type": {
               "$ref": "139"
              },
              "value": [
               {
                "$id": "668",
                "kind": "model",
                "type": {
                 "$ref": "140"
                },
                "value": {
                 "$id": "669",
                 "normalizedTarget": {
                  "$id": "670",
                  "kind": "string",
                  "type": {
                   "$ref": "142"
                  },
                  "value": "volar"
                 },
                 "displayTarget": {
                  "$id": "671",
                  "kind": "string",
                  "type": {
                   "$ref": "144"
                  },
                  "value": "volar"
                 },
                 "posTag": {
                  "$id": "672",
                  "kind": "string",
                  "type": {
                   "$ref": "146"
                  },
                  "value": "VERB"
                 },
                 "confidence": {
                  "$id": "673",
                  "kind": "number",
                  "type": {
                   "$ref": "148"
                  },
                  "value": 0.4081
                 },
                 "prefixWord": {
                  "$id": "674",
                  "kind": "string",
                  "type": {
                   "$ref": "150"
                  },
                  "value": ""
                 },
                 "backTranslations": {
                  "$id": "675",
                  "kind": "array",
                  "type": {
                   "$ref": "152"
                  },
                  "value": [
                   {
                    "$id": "676",
                    "kind": "model",
                    "type": {
                     "$ref": "153"
                    },
                    "value": {
                     "$id": "677",
                     "normalizedText": {
                      "$id": "678",
                      "kind": "string",
                      "type": {
                       "$ref": "155"
                      },
                      "value": "fly"
                     },
                     "displayText": {
                      "$id": "679",
                      "kind": "string",
                      "type": {
                       "$ref": "157"
                      },
                      "value": "fly"
                     },
                     "numExamples": {
                      "$id": "680",
                      "kind": "number",
                      "type": {
                       "$ref": "159"
                      },
                      "value": 15
                     },
                     "frequencyCount": {
                      "$id": "681",
                      "kind": "number",
                      "type": {
                       "$ref": "161"
                      },
                      "value": 4637
                     }
                    }
                   },
                   {
                    "$id": "682",
                    "kind": "model",
                    "type": {
                     "$ref": "153"
                    },
                    "value": {
                     "$id": "683",
                     "normalizedText": {
                      "$id": "684",
                      "kind": "string",
                      "type": {
                       "$ref": "155"
                      },
                      "value": "flying"
                     },
                     "displayText": {
                      "$id": "685",
                      "kind": "string",
                      "type": {
                       "$ref": "157"
                      },
                      "value": "flying"
                     },
                     "numExamples": {
                      "$id": "686",
                      "kind": "number",
                      "type": {
                       "$ref": "159"
                      },
                      "value": 15
                     },
                     "frequencyCount": {
                      "$id": "687",
                      "kind": "number",
                      "type": {
                       "$ref": "161"
                      },
                      "value": 1365
                     }
                    }
                   },
                   {
                    "$id": "688",
                    "kind": "model",
                    "type": {
                     "$ref": "153"
                    },
                    "value": {
                     "$id": "689",
                     "normalizedText": {
                      "$id": "690",
                      "kind": "string",
                      "type": {
                       "$ref": "155"
                      },
                      "value": "blow"
                     },
                     "displayText": {
                      "$id": "691",
                      "kind": "string",
                      "type": {
                       "$ref": "157"
                      },
                      "value": "blow"
                     },
                     "numExamples": {
                      "$id": "692",
                      "kind": "number",
                      "type": {
                       "$ref": "159"
                      },
                      "value": 15
                     },
                     "frequencyCount": {
                      "$id": "693",
                      "kind": "number",
                      "type": {
                       "$ref": "161"
                      },
                      "value": 503
                     }
                    }
                   },
                   {
                    "$id": "694",
                    "kind": "model",
                    "type": {
                     "$ref": "153"
                    },
                    "value": {
                     "$id": "695",
                     "normalizedText": {
                      "$id": "696",
                      "kind": "string",
                      "type": {
                       "$ref": "155"
                      },
                      "value": "flight"
                     },
                     "displayText": {
                      "$id": "697",
                      "kind": "string",
                      "type": {
                       "$ref": "157"
                      },
                      "value": "flight"
                     },
                     "numExamples": {
                      "$id": "698",
                      "kind": "number",
                      "type": {
                       "$ref": "159"
                      },
                      "value": 15
                     },
                     "frequencyCount": {
                      "$id": "699",
                      "kind": "number",
                      "type": {
                       "$ref": "161"
                      },
                      "value": 135
                     }
                    }
                   }
                  ]
                 }
                }
               },
               {
                "$id": "700",
                "kind": "model",
                "type": {
                 "$ref": "140"
                },
                "value": {
                 "$id": "701",
                 "normalizedTarget": {
                  "$id": "702",
                  "kind": "string",
                  "type": {
                   "$ref": "142"
                  },
                  "value": "mosca"
                 },
                 "displayTarget": {
                  "$id": "703",
                  "kind": "string",
                  "type": {
                   "$ref": "144"
                  },
                  "value": "mosca"
                 },
                 "posTag": {
                  "$id": "704",
                  "kind": "string",
                  "type": {
                   "$ref": "146"
                  },
                  "value": "NOUN"
                 },
                 "confidence": {
                  "$id": "705",
                  "kind": "number",
                  "type": {
                   "$ref": "148"
                  },
                  "value": 0.2668
                 },
                 "prefixWord": {
                  "$id": "706",
                  "kind": "string",
                  "type": {
                   "$ref": "150"
                  },
                  "value": ""
                 },
                 "backTranslations": {
                  "$id": "707",
                  "kind": "array",
                  "type": {
                   "$ref": "152"
                  },
                  "value": [
                   {
                    "$id": "708",
                    "kind": "model",
                    "type": {
                     "$ref": "153"
                    },
                    "value": {
                     "$id": "709",
                     "normalizedText": {
                      "$id": "710",
                      "kind": "string",
                      "type": {
                       "$ref": "155"
                      },
                      "value": "fly"
                     },
                     "displayText": {
                      "$id": "711",
                      "kind": "string",
                      "type": {
                       "$ref": "157"
                      },
                      "value": "fly"
                     },
                     "numExamples": {
                      "$id": "712",
                      "kind": "number",
                      "type": {
                       "$ref": "159"
                      },
                      "value": 15
                     },
                     "frequencyCount": {
                      "$id": "713",
                      "kind": "number",
                      "type": {
                       "$ref": "161"
                      },
                      "value": 1697
                     }
                    }
                   },
                   {
                    "$id": "714",
                    "kind": "model",
                    "type": {
                     "$ref": "153"
                    },
                    "value": {
                     "$id": "715",
                     "normalizedText": {
                      "$id": "716",
                      "kind": "string",
                      "type": {
                       "$ref": "155"
                      },
                      "value": "flyweight"
                     },
                     "displayText": {
                      "$id": "717",
                      "kind": "string",
                      "type": {
                       "$ref": "157"
                      },
                      "value": "flyweight"
                     },
                     "numExamples": {
                      "$id": "718",
                      "kind": "number",
                      "type": {
                       "$ref": "159"
                      },
                      "value": 0
                     },
                     "frequencyCount": {
                      "$id": "719",
                      "kind": "number",
                      "type": {
                       "$ref": "161"
                      },
                      "value": 48
                     }
                    }
                   },
                   {
                    "$id": "720",
                    "kind": "model",
                    "type": {
                     "$ref": "153"
                    },
                    "value": {
                     "$id": "721",
                     "normalizedText": {
                      "$id": "722",
                      "kind": "string",
                      "type": {
                       "$ref": "155"
                      },
                      "value": "flies"
                     },
                     "displayText": {
                      "$id": "723",
                      "kind": "string",
                      "type": {
                       "$ref": "157"
                      },
                      "value": "flies"
                     },
                     "numExamples": {
                      "$id": "724",
                      "kind": "number",
                      "type": {
                       "$ref": "159"
                      },
                      "value": 9
                     },
                     "frequencyCount": {
                      "$id": "725",
                      "kind": "number",
                      "type": {
                       "$ref": "161"
                      },
                      "value": 34
                     }
                    }
                   }
                  ]
                 }
                }
               }
              ]
             }
            }
           }
          ]
         }
        }
       ]
      }
     ]
    },
    {
     "$id": "726",
     "Name": "lookupDictionaryExamples",
     "ResourceName": "TextTranslation",
     "Summary": "Lookup Dictionary Examples",
     "Description": "Lookup Dictionary Examples",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "727",
       "Name": "clientTraceId",
       "NameInRequest": "X-ClientTraceId",
       "Description": "A client-generated GUID to uniquely identify the request.",
       "Type": {
        "$id": "728",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "729",
       "Name": "SourceLanguage",
       "NameInRequest": "from",
       "Description": "Specifies the language of the input text.\nThe source language must be one of the supported languages included in the dictionary scope.",
       "Type": {
        "$id": "730",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "731",
       "Name": "TargetLanguage",
       "NameInRequest": "to",
       "Description": "Specifies the language of the output text.\nThe target language must be one of the supported languages included in the dictionary scope.",
       "Type": {
        "$id": "732",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "733",
       "Name": "apiVersion",
       "NameInRequest": "api-version",
       "Description": "Mandatory API version parameter",
       "Type": {
        "$id": "734",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": true,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Client",
       "DefaultValue": {
        "$id": "735",
        "Type": {
         "$id": "736",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "3.0"
       },
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "737",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Description": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "738",
        "kind": "constant",
        "valueType": {
         "$id": "739",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "740",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "741",
        "kind": "constant",
        "valueType": {
         "$id": "742",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "743",
       "Name": "body",
       "NameInRequest": "body",
       "Description": "Defines the content of the request",
       "Type": {
        "$id": "744",
        "kind": "array",
        "name": "ArrayDictionaryExampleTextItem",
        "valueType": {
         "$ref": "162"
        },
        "crossLanguageDefinitionId": "TypeSpec.Array",
        "decorators": []
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "745",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$id": "746",
        "kind": "array",
        "name": "ArrayDictionaryExampleItem",
        "valueType": {
         "$ref": "165"
        },
        "crossLanguageDefinitionId": "TypeSpec.Array",
        "decorators": []
       },
       "BodyMediaType": "Json",
       "Headers": [
        {
         "$id": "747",
         "Name": "requestId",
         "NameInResponse": "X-RequestId",
         "Description": "Value generated by the service to identify the request. It is used for troubleshooting purposes.",
         "Type": {
          "$id": "748",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         }
        }
       ],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "None",
     "Uri": "{Endpoint}",
     "Path": "/dictionary/examples",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "TextTranslation.lookupDictionaryExamples",
     "Decorators": [],
     "Examples": [
      {
       "$id": "749",
       "kind": "http",
       "name": "Lookup Dictionary Examples",
       "description": "Lookup Dictionary Examples",
       "filePath": "3.0/LookupDictionaryExamples_MaximumSet_Gen.json",
       "parameters": [
        {
         "$id": "750",
         "parameter": {
          "$ref": "727"
         },
         "value": {
          "$id": "751",
          "kind": "string",
          "type": {
           "$ref": "728"
          },
          "value": "vykwwekvcncclrmsyjhbok"
         }
        },
        {
         "$id": "752",
         "parameter": {
          "$ref": "729"
         },
         "value": {
          "$id": "753",
          "kind": "string",
          "type": {
           "$ref": "730"
          },
          "value": "en"
         }
        },
        {
         "$id": "754",
         "parameter": {
          "$ref": "731"
         },
         "value": {
          "$id": "755",
          "kind": "string",
          "type": {
           "$ref": "732"
          },
          "value": "es"
         }
        },
        {
         "$id": "756",
         "parameter": {
          "$ref": "733"
         },
         "value": {
          "$id": "757",
          "kind": "string",
          "type": {
           "$ref": "734"
          },
          "value": "3.0"
         }
        },
        {
         "$id": "758",
         "parameter": {
          "$ref": "743"
         },
         "value": {
          "$id": "759",
          "kind": "array",
          "type": {
           "$ref": "744"
          },
          "value": [
           {
            "$id": "760",
            "kind": "model",
            "type": {
             "$ref": "162"
            },
            "value": {
             "$id": "761",
             "text": {
              "$id": "762",
              "kind": "string",
              "type": {
               "$ref": "91"
              },
              "value": "fly"
             },
             "translation": {
              "$id": "763",
              "kind": "string",
              "type": {
               "$ref": "164"
              },
              "value": "volar"
             }
            }
           }
          ]
         }
        }
       ],
       "responses": [
        {
         "$id": "764",
         "response": {
          "$ref": "745"
         },
         "statusCode": 200,
         "bodyValue": {
          "$id": "765",
          "kind": "array",
          "type": {
           "$ref": "746"
          },
          "value": [
           {
            "$id": "766",
            "kind": "model",
            "type": {
             "$ref": "165"
            },
            "value": {
             "$id": "767",
             "normalizedSource": {
              "$id": "768",
              "kind": "string",
              "type": {
               "$ref": "167"
              },
              "value": "fly"
             },
             "normalizedTarget": {
              "$id": "769",
              "kind": "string",
              "type": {
               "$ref": "169"
              },
              "value": "volar"
             },
             "examples": {
              "$id": "770",
              "kind": "array",
              "type": {
               "$ref": "171"
              },
              "value": [
               {
                "$id": "771",
                "kind": "model",
                "type": {
                 "$ref": "172"
                },
                "value": {
                 "$id": "772",
                 "sourcePrefix": {
                  "$id": "773",
                  "kind": "string",
                  "type": {
                   "$ref": "174"
                  },
                  "value": "They need machines to "
                 },
                 "sourceTerm": {
                  "$id": "774",
                  "kind": "string",
                  "type": {
                   "$ref": "176"
                  },
                  "value": "fly"
                 },
                 "sourceSuffix": {
                  "$id": "775",
                  "kind": "string",
                  "type": {
                   "$ref": "178"
                  },
                  "value": "."
                 },
                 "targetPrefix": {
                  "$id": "776",
                  "kind": "string",
                  "type": {
                   "$ref": "180"
                  },
                  "value": "Necesitan máquinas para "
                 },
                 "targetTerm": {
                  "$id": "777",
                  "kind": "string",
                  "type": {
                   "$ref": "182"
                  },
                  "value": "volar"
                 },
                 "targetSuffix": {
                  "$id": "778",
                  "kind": "string",
                  "type": {
                   "$ref": "184"
                  },
                  "value": "."
                 }
                }
               },
               {
                "$id": "779",
                "kind": "model",
                "type": {
                 "$ref": "172"
                },
                "value": {
                 "$id": "780",
                 "sourcePrefix": {
                  "$id": "781",
                  "kind": "string",
                  "type": {
                   "$ref": "174"
                  },
                  "value": "That should really "
                 },
                 "sourceTerm": {
                  "$id": "782",
                  "kind": "string",
                  "type": {
                   "$ref": "176"
                  },
                  "value": "fly"
                 },
                 "sourceSuffix": {
                  "$id": "783",
                  "kind": "string",
                  "type": {
                   "$ref": "178"
                  },
                  "value": "."
                 },
                 "targetPrefix": {
                  "$id": "784",
                  "kind": "string",
                  "type": {
                   "$ref": "180"
                  },
                  "value": "Eso realmente debe "
                 },
                 "targetTerm": {
                  "$id": "785",
                  "kind": "string",
                  "type": {
                   "$ref": "182"
                  },
                  "value": "volar"
                 },
                 "targetSuffix": {
                  "$id": "786",
                  "kind": "string",
                  "type": {
                   "$ref": "184"
                  },
                  "value": "."
                 }
                }
               }
              ]
             }
            }
           }
          ]
         }
        }
       ]
      },
      {
       "$id": "787",
       "kind": "http",
       "name": "Lookup Dictionary Examples with minimum properties",
       "description": "Lookup Dictionary Examples with minimum properties",
       "filePath": "3.0/LookupDictionaryExamples_MinimumSet_Gen.json",
       "parameters": [
        {
         "$id": "788",
         "parameter": {
          "$ref": "729"
         },
         "value": {
          "$id": "789",
          "kind": "string",
          "type": {
           "$ref": "730"
          },
          "value": "en"
         }
        },
        {
         "$id": "790",
         "parameter": {
          "$ref": "731"
         },
         "value": {
          "$id": "791",
          "kind": "string",
          "type": {
           "$ref": "732"
          },
          "value": "es"
         }
        },
        {
         "$id": "792",
         "parameter": {
          "$ref": "733"
         },
         "value": {
          "$id": "793",
          "kind": "string",
          "type": {
           "$ref": "734"
          },
          "value": "3.0"
         }
        },
        {
         "$id": "794",
         "parameter": {
          "$ref": "743"
         },
         "value": {
          "$id": "795",
          "kind": "array",
          "type": {
           "$ref": "744"
          },
          "value": [
           {
            "$id": "796",
            "kind": "model",
            "type": {
             "$ref": "162"
            },
            "value": {
             "$id": "797",
             "text": {
              "$id": "798",
              "kind": "string",
              "type": {
               "$ref": "91"
              },
              "value": "fly"
             },
             "translation": {
              "$id": "799",
              "kind": "string",
              "type": {
               "$ref": "164"
              },
              "value": "volar"
             }
            }
           }
          ]
         }
        }
       ],
       "responses": [
        {
         "$id": "800",
         "response": {
          "$ref": "745"
         },
         "statusCode": 200,
         "bodyValue": {
          "$id": "801",
          "kind": "array",
          "type": {
           "$ref": "746"
          },
          "value": [
           {
            "$id": "802",
            "kind": "model",
            "type": {
             "$ref": "165"
            },
            "value": {
             "$id": "803",
             "normalizedSource": {
              "$id": "804",
              "kind": "string",
              "type": {
               "$ref": "167"
              },
              "value": "fly"
             },
             "normalizedTarget": {
              "$id": "805",
              "kind": "string",
              "type": {
               "$ref": "169"
              },
              "value": "volar"
             },
             "examples": {
              "$id": "806",
              "kind": "array",
              "type": {
               "$ref": "171"
              },
              "value": [
               {
                "$id": "807",
                "kind": "model",
                "type": {
                 "$ref": "172"
                },
                "value": {
                 "$id": "808",
                 "sourcePrefix": {
                  "$id": "809",
                  "kind": "string",
                  "type": {
                   "$ref": "174"
                  },
                  "value": "They need machines to "
                 },
                 "sourceTerm": {
                  "$id": "810",
                  "kind": "string",
                  "type": {
                   "$ref": "176"
                  },
                  "value": "fly"
                 },
                 "sourceSuffix": {
                  "$id": "811",
                  "kind": "string",
                  "type": {
                   "$ref": "178"
                  },
                  "value": "."
                 },
                 "targetPrefix": {
                  "$id": "812",
                  "kind": "string",
                  "type": {
                   "$ref": "180"
                  },
                  "value": "Necesitan máquinas para "
                 },
                 "targetTerm": {
                  "$id": "813",
                  "kind": "string",
                  "type": {
                   "$ref": "182"
                  },
                  "value": "volar"
                 },
                 "targetSuffix": {
                  "$id": "814",
                  "kind": "string",
                  "type": {
                   "$ref": "184"
                  },
                  "value": "."
                 }
                }
               },
               {
                "$id": "815",
                "kind": "model",
                "type": {
                 "$ref": "172"
                },
                "value": {
                 "$id": "816",
                 "sourcePrefix": {
                  "$id": "817",
                  "kind": "string",
                  "type": {
                   "$ref": "174"
                  },
                  "value": "That should really "
                 },
                 "sourceTerm": {
                  "$id": "818",
                  "kind": "string",
                  "type": {
                   "$ref": "176"
                  },
                  "value": "fly"
                 },
                 "sourceSuffix": {
                  "$id": "819",
                  "kind": "string",
                  "type": {
                   "$ref": "178"
                  },
                  "value": "."
                 },
                 "targetPrefix": {
                  "$id": "820",
                  "kind": "string",
                  "type": {
                   "$ref": "180"
                  },
                  "value": "Eso realmente debe "
                 },
                 "targetTerm": {
                  "$id": "821",
                  "kind": "string",
                  "type": {
                   "$ref": "182"
                  },
                  "value": "volar"
                 },
                 "targetSuffix": {
                  "$id": "822",
                  "kind": "string",
                  "type": {
                   "$ref": "184"
                  },
                  "value": "."
                 }
                }
               }
              ]
             }
            }
           }
          ]
         }
        }
       ]
      }
     ]
    }
   ],
   "Protocol": {
    "$id": "823"
   },
   "Parameters": [
    {
     "$id": "824",
     "Name": "Endpoint",
     "NameInRequest": "Endpoint",
     "Description": "Supported Text Translation endpoints (protocol and hostname, for example:\n    https://api.cognitive.microsofttranslator.com).",
     "Type": {
      "$id": "825",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "Location": "Uri",
     "IsApiVersion": false,
     "IsResourceParameter": false,
     "IsContentType": false,
     "IsRequired": true,
     "IsEndpoint": true,
     "SkipUrlEncoding": false,
     "Explode": false,
     "Kind": "Client"
    }
   ],
   "Decorators": []
  }
 ]
}
