{
  "name": "TextTranslation",
  "apiVersions": [
    "3.0"
  ],
  "enums": [
    {
      "$id": "1",
      "kind": "enum",
      "name": "LanguageDirectionality",
      "crossLanguageDefinitionId": "TextTranslation.LanguageDirectionality",
      "valueType": {
        "$id": "2",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "values": [
        {
          "$id": "3",
          "kind": "enumvalue",
          "name": "LeftToRight",
          "value": "ltr",
          "valueType": {
            "$ref": "2"
          },
          "enumType": {
            "$ref": "1"
          },
          "doc": "Language is written left to right.",
          "decorators": []
        },
        {
          "$id": "4",
          "kind": "enumvalue",
          "name": "RightToLeft",
          "value": "rtl",
          "valueType": {
            "$ref": "2"
          },
          "enumType": {
            "$ref": "1"
          },
          "doc": "Language is written right to left.",
          "decorators": []
        }
      ],
      "namespace": "Azure.AI.Translation.Text",
      "doc": "Language Directionality",
      "isFixed": true,
      "isFlags": false,
      "usage": "Output,Json",
      "decorators": []
    },
    {
      "$id": "5",
      "kind": "enum",
      "name": "TextType",
      "crossLanguageDefinitionId": "TextTranslation.TextType",
      "valueType": {
        "$id": "6",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "values": [
        {
          "$id": "7",
          "kind": "enumvalue",
          "name": "Plain",
          "value": "Plain",
          "valueType": {
            "$ref": "6"
          },
          "enumType": {
            "$ref": "5"
          },
          "doc": "Plain text.",
          "decorators": []
        },
        {
          "$id": "8",
          "kind": "enumvalue",
          "name": "Html",
          "value": "Html",
          "valueType": {
            "$ref": "6"
          },
          "enumType": {
            "$ref": "5"
          },
          "doc": "HTML-encoded text.",
          "decorators": []
        }
      ],
      "namespace": "Azure.AI.Translation.Text",
      "doc": "Translation text type",
      "isFixed": false,
      "isFlags": false,
      "usage": "Input",
      "decorators": []
    },
    {
      "$id": "9",
      "kind": "enum",
      "name": "ProfanityAction",
      "crossLanguageDefinitionId": "TextTranslation.ProfanityAction",
      "valueType": {
        "$id": "10",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "values": [
        {
          "$id": "11",
          "kind": "enumvalue",
          "name": "NoAction",
          "value": "NoAction",
          "valueType": {
            "$ref": "10"
          },
          "enumType": {
            "$ref": "9"
          },
          "doc": "No Action is taken on profanity",
          "decorators": []
        },
        {
          "$id": "12",
          "kind": "enumvalue",
          "name": "Marked",
          "value": "Marked",
          "valueType": {
            "$ref": "10"
          },
          "enumType": {
            "$ref": "9"
          },
          "doc": "Profanity is marked.",
          "decorators": []
        },
        {
          "$id": "13",
          "kind": "enumvalue",
          "name": "Deleted",
          "value": "Deleted",
          "valueType": {
            "$ref": "10"
          },
          "enumType": {
            "$ref": "9"
          },
          "doc": "Profanity is deleted from the translated text.",
          "decorators": []
        }
      ],
      "namespace": "Azure.AI.Translation.Text",
      "doc": "Translator profanity actions",
      "isFixed": true,
      "isFlags": false,
      "usage": "Input",
      "decorators": []
    },
    {
      "$id": "14",
      "kind": "enum",
      "name": "ProfanityMarker",
      "crossLanguageDefinitionId": "TextTranslation.ProfanityMarker",
      "valueType": {
        "$id": "15",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "values": [
        {
          "$id": "16",
          "kind": "enumvalue",
          "name": "Asterisk",
          "value": "Asterisk",
          "valueType": {
            "$ref": "15"
          },
          "enumType": {
            "$ref": "14"
          },
          "doc": "Profanity is marked with asterisk.",
          "decorators": []
        },
        {
          "$id": "17",
          "kind": "enumvalue",
          "name": "Tag",
          "value": "Tag",
          "valueType": {
            "$ref": "15"
          },
          "enumType": {
            "$ref": "14"
          },
          "doc": "Profanity is marked with the tags.",
          "decorators": []
        }
      ],
      "namespace": "Azure.AI.Translation.Text",
      "doc": "Translator profanity markers",
      "isFixed": true,
      "isFlags": false,
      "usage": "Input",
      "decorators": []
    },
    {
      "$id": "18",
      "kind": "enum",
      "name": "APIVersion",
      "crossLanguageDefinitionId": "TextTranslation.APIVersion",
      "valueType": {
        "$id": "19",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "values": [
        {
          "$id": "20",
          "kind": "enumvalue",
          "name": "v3_0",
          "value": "3.0",
          "valueType": {
            "$ref": "19"
          },
          "enumType": {
            "$ref": "18"
          },
          "doc": "Version 3.0",
          "decorators": []
        }
      ],
      "namespace": "Azure.AI.Translation.Text",
      "doc": "Text Translation supported versions",
      "isFixed": true,
      "isFlags": false,
      "usage": "ApiVersionEnum",
      "decorators": []
    }
  ],
  "constants": [
    {
      "$id": "21",
      "kind": "constant",
      "name": "getSupportedLanguagesContentType",
      "namespace": "",
      "usage": "None",
      "valueType": {
        "$id": "22",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "application/json",
      "decorators": []
    },
    {
      "$id": "23",
      "kind": "constant",
      "name": "translateContentType",
      "namespace": "",
      "usage": "None",
      "valueType": {
        "$id": "24",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "application/json",
      "decorators": []
    },
    {
      "$id": "25",
      "kind": "constant",
      "name": "translateContentType1",
      "namespace": "",
      "usage": "None",
      "valueType": {
        "$id": "26",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "application/json",
      "decorators": []
    },
    {
      "$id": "27",
      "kind": "constant",
      "name": "transliterateContentType",
      "namespace": "",
      "usage": "None",
      "valueType": {
        "$id": "28",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "application/json",
      "decorators": []
    },
    {
      "$id": "29",
      "kind": "constant",
      "name": "transliterateContentType1",
      "namespace": "",
      "usage": "None",
      "valueType": {
        "$id": "30",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "application/json",
      "decorators": []
    },
    {
      "$id": "31",
      "kind": "constant",
      "name": "findSentenceBoundariesContentType",
      "namespace": "",
      "usage": "None",
      "valueType": {
        "$id": "32",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "application/json",
      "decorators": []
    },
    {
      "$id": "33",
      "kind": "constant",
      "name": "findSentenceBoundariesContentType1",
      "namespace": "",
      "usage": "None",
      "valueType": {
        "$id": "34",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "application/json",
      "decorators": []
    },
    {
      "$id": "35",
      "kind": "constant",
      "name": "lookupDictionaryEntriesContentType",
      "namespace": "",
      "usage": "None",
      "valueType": {
        "$id": "36",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "application/json",
      "decorators": []
    },
    {
      "$id": "37",
      "kind": "constant",
      "name": "lookupDictionaryEntriesContentType1",
      "namespace": "",
      "usage": "None",
      "valueType": {
        "$id": "38",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "application/json",
      "decorators": []
    },
    {
      "$id": "39",
      "kind": "constant",
      "name": "lookupDictionaryExamplesContentType",
      "namespace": "",
      "usage": "None",
      "valueType": {
        "$id": "40",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "application/json",
      "decorators": []
    },
    {
      "$id": "41",
      "kind": "constant",
      "name": "lookupDictionaryExamplesContentType1",
      "namespace": "",
      "usage": "None",
      "valueType": {
        "$id": "42",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "application/json",
      "decorators": []
    }
  ],
  "models": [
    {
      "$id": "43",
      "kind": "model",
      "name": "GetSupportedLanguagesResult",
      "namespace": "Azure.AI.Translation.Text",
      "crossLanguageDefinitionId": "TextTranslation.GetSupportedLanguagesResult",
      "usage": "Output,Json",
      "doc": "Response for the languages API.",
      "decorators": [],
      "properties": [
        {
          "$id": "44",
          "kind": "header",
          "name": "requestId",
          "serializedName": "requestId",
          "doc": "Value generated by the service to identify the request. It is used for troubleshooting purposes.",
          "type": {
            "$id": "45",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "TextTranslation.GetSupportedLanguagesResult.requestId",
          "serializationOptions": {
            "json": {
              "name": "requestId"
            }
          },
          "isHttpMetadata": true
        },
        {
          "$id": "46",
          "kind": "header",
          "name": "etag",
          "serializedName": "etag",
          "doc": "Current value of the entity tag for the requested groups of supported languages. \nTo make subsequent requests more efficient, the client may send the `ETag` value in an \n`If-None-Match` header field.",
          "type": {
            "$id": "47",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "TextTranslation.GetSupportedLanguagesResult.etag",
          "serializationOptions": {
            "json": {
              "name": "etag"
            }
          },
          "isHttpMetadata": true
        },
        {
          "$id": "48",
          "kind": "property",
          "name": "translation",
          "serializedName": "translation",
          "doc": "Languages that support translate API.",
          "type": {
            "$id": "49",
            "kind": "dict",
            "keyType": {
              "$id": "50",
              "kind": "string",
              "name": "string",
              "crossLanguageDefinitionId": "TypeSpec.string",
              "decorators": []
            },
            "valueType": {
              "$id": "51",
              "kind": "model",
              "name": "TranslationLanguage",
              "namespace": "Azure.AI.Translation.Text",
              "crossLanguageDefinitionId": "TextTranslation.TranslationLanguage",
              "usage": "Output,Json",
              "doc": "The value of the translation property is a dictionary of (key, value) pairs. Each key is a BCP 47 language tag.\nA key identifies a language for which text can be translated to or translated from.",
              "decorators": [],
              "properties": [
                {
                  "$id": "52",
                  "kind": "property",
                  "name": "name",
                  "serializedName": "name",
                  "doc": "Display name of the language in the locale requested via Accept-Language header.",
                  "type": {
                    "$id": "53",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "TextTranslation.TranslationLanguage.name",
                  "serializationOptions": {
                    "json": {
                      "name": "name"
                    }
                  },
                  "isHttpMetadata": false
                },
                {
                  "$id": "54",
                  "kind": "property",
                  "name": "nativeName",
                  "serializedName": "nativeName",
                  "doc": "Display name of the language in the locale native for this language.",
                  "type": {
                    "$id": "55",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "TextTranslation.TranslationLanguage.nativeName",
                  "serializationOptions": {
                    "json": {
                      "name": "nativeName"
                    }
                  },
                  "isHttpMetadata": false
                },
                {
                  "$id": "56",
                  "kind": "property",
                  "name": "dir",
                  "serializedName": "dir",
                  "doc": "Directionality, which is rtl for right-to-left languages or ltr for left-to-right languages.",
                  "type": {
                    "$ref": "1"
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "TextTranslation.TranslationLanguage.dir",
                  "serializationOptions": {
                    "json": {
                      "name": "dir"
                    }
                  },
                  "isHttpMetadata": false
                }
              ]
            },
            "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "TextTranslation.GetSupportedLanguagesResult.translation",
          "serializationOptions": {
            "json": {
              "name": "translation"
            }
          },
          "isHttpMetadata": false
        },
        {
          "$id": "57",
          "kind": "property",
          "name": "transliteration",
          "serializedName": "transliteration",
          "doc": "Languages that support transliteration API.",
          "type": {
            "$id": "58",
            "kind": "dict",
            "keyType": {
              "$id": "59",
              "kind": "string",
              "name": "string",
              "crossLanguageDefinitionId": "TypeSpec.string",
              "decorators": []
            },
            "valueType": {
              "$id": "60",
              "kind": "model",
              "name": "TransliterationLanguage",
              "namespace": "Azure.AI.Translation.Text",
              "crossLanguageDefinitionId": "TextTranslation.TransliterationLanguage",
              "usage": "Output,Json",
              "doc": "The value of the transliteration property is a dictionary of (key, value) pairs. \nEach key is a BCP 47 language tag. A key identifies a language for which text can be converted from one script \nto another script.",
              "decorators": [],
              "properties": [
                {
                  "$id": "61",
                  "kind": "property",
                  "name": "name",
                  "serializedName": "name",
                  "doc": "Display name of the language in the locale requested via Accept-Language header.",
                  "type": {
                    "$id": "62",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "TextTranslation.TransliterationLanguage.name",
                  "serializationOptions": {
                    "json": {
                      "name": "name"
                    }
                  },
                  "isHttpMetadata": false
                },
                {
                  "$id": "63",
                  "kind": "property",
                  "name": "nativeName",
                  "serializedName": "nativeName",
                  "doc": "Display name of the language in the locale native for this language.",
                  "type": {
                    "$id": "64",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "TextTranslation.TransliterationLanguage.nativeName",
                  "serializationOptions": {
                    "json": {
                      "name": "nativeName"
                    }
                  },
                  "isHttpMetadata": false
                },
                {
                  "$id": "65",
                  "kind": "property",
                  "name": "scripts",
                  "serializedName": "scripts",
                  "doc": "List of scripts to convert from.",
                  "type": {
                    "$id": "66",
                    "kind": "array",
                    "name": "ArrayTransliterableScript",
                    "valueType": {
                      "$id": "67",
                      "kind": "model",
                      "name": "TransliterableScript",
                      "namespace": "Azure.AI.Translation.Text",
                      "crossLanguageDefinitionId": "TextTranslation.TransliterableScript",
                      "usage": "Output,Json",
                      "doc": "Script definition with list of script into which given script can be translitered.",
                      "decorators": [],
                      "baseModel": {
                        "$id": "68",
                        "kind": "model",
                        "name": "LanguageScript",
                        "namespace": "Azure.AI.Translation.Text",
                        "crossLanguageDefinitionId": "TextTranslation.LanguageScript",
                        "usage": "Output,Json",
                        "doc": "Common properties of language script",
                        "decorators": [],
                        "properties": [
                          {
                            "$id": "69",
                            "kind": "property",
                            "name": "code",
                            "serializedName": "code",
                            "doc": "Code identifying the script.",
                            "type": {
                              "$id": "70",
                              "kind": "string",
                              "name": "string",
                              "crossLanguageDefinitionId": "TypeSpec.string",
                              "decorators": []
                            },
                            "optional": false,
                            "readOnly": false,
                            "discriminator": false,
                            "flatten": false,
                            "decorators": [],
                            "crossLanguageDefinitionId": "TextTranslation.LanguageScript.code",
                            "serializationOptions": {
                              "json": {
                                "name": "code"
                              }
                            },
                            "isHttpMetadata": false
                          },
                          {
                            "$id": "71",
                            "kind": "property",
                            "name": "name",
                            "serializedName": "name",
                            "doc": "Display name of the script in the locale requested via Accept-Language header.",
                            "type": {
                              "$id": "72",
                              "kind": "string",
                              "name": "string",
                              "crossLanguageDefinitionId": "TypeSpec.string",
                              "decorators": []
                            },
                            "optional": false,
                            "readOnly": false,
                            "discriminator": false,
                            "flatten": false,
                            "decorators": [],
                            "crossLanguageDefinitionId": "TextTranslation.LanguageScript.name",
                            "serializationOptions": {
                              "json": {
                                "name": "name"
                              }
                            },
                            "isHttpMetadata": false
                          },
                          {
                            "$id": "73",
                            "kind": "property",
                            "name": "nativeName",
                            "serializedName": "nativeName",
                            "doc": "Display name of the language in the locale native for the language.",
                            "type": {
                              "$id": "74",
                              "kind": "string",
                              "name": "string",
                              "crossLanguageDefinitionId": "TypeSpec.string",
                              "decorators": []
                            },
                            "optional": false,
                            "readOnly": false,
                            "discriminator": false,
                            "flatten": false,
                            "decorators": [],
                            "crossLanguageDefinitionId": "TextTranslation.LanguageScript.nativeName",
                            "serializationOptions": {
                              "json": {
                                "name": "nativeName"
                              }
                            },
                            "isHttpMetadata": false
                          },
                          {
                            "$id": "75",
                            "kind": "property",
                            "name": "dir",
                            "serializedName": "dir",
                            "doc": "Directionality, which is rtl for right-to-left languages or ltr for left-to-right languages.",
                            "type": {
                              "$ref": "1"
                            },
                            "optional": false,
                            "readOnly": false,
                            "discriminator": false,
                            "flatten": false,
                            "decorators": [],
                            "crossLanguageDefinitionId": "TextTranslation.LanguageScript.dir",
                            "serializationOptions": {
                              "json": {
                                "name": "dir"
                              }
                            },
                            "isHttpMetadata": false
                          }
                        ]
                      },
                      "properties": [
                        {
                          "$id": "76",
                          "kind": "property",
                          "name": "toScripts",
                          "serializedName": "toScripts",
                          "doc": "List of scripts available to convert text to.",
                          "type": {
                            "$id": "77",
                            "kind": "array",
                            "name": "ArrayLanguageScript",
                            "valueType": {
                              "$ref": "68"
                            },
                            "crossLanguageDefinitionId": "TypeSpec.Array",
                            "decorators": []
                          },
                          "optional": false,
                          "readOnly": false,
                          "discriminator": false,
                          "flatten": false,
                          "decorators": [],
                          "crossLanguageDefinitionId": "TextTranslation.TransliterableScript.toScripts",
                          "serializationOptions": {
                            "json": {
                              "name": "toScripts"
                            }
                          },
                          "isHttpMetadata": false
                        }
                      ]
                    },
                    "crossLanguageDefinitionId": "TypeSpec.Array",
                    "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "TextTranslation.TransliterationLanguage.scripts",
                  "serializationOptions": {
                    "json": {
                      "name": "scripts"
                    }
                  },
                  "isHttpMetadata": false
                }
              ]
            },
            "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "TextTranslation.GetSupportedLanguagesResult.transliteration",
          "serializationOptions": {
            "json": {
              "name": "transliteration"
            }
          },
          "isHttpMetadata": false
        },
        {
          "$id": "78",
          "kind": "property",
          "name": "dictionary",
          "serializedName": "dictionary",
          "doc": "Languages that support dictionary API.",
          "type": {
            "$id": "79",
            "kind": "dict",
            "keyType": {
              "$id": "80",
              "kind": "string",
              "name": "string",
              "crossLanguageDefinitionId": "TypeSpec.string",
              "decorators": []
            },
            "valueType": {
              "$id": "81",
              "kind": "model",
              "name": "SourceDictionaryLanguage",
              "namespace": "Azure.AI.Translation.Text",
              "crossLanguageDefinitionId": "TextTranslation.SourceDictionaryLanguage",
              "usage": "Output,Json",
              "doc": "Properties ot the source dictionary language",
              "decorators": [],
              "properties": [
                {
                  "$id": "82",
                  "kind": "property",
                  "name": "name",
                  "serializedName": "name",
                  "doc": "Display name of the language in the locale requested via Accept-Language header.",
                  "type": {
                    "$id": "83",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "TextTranslation.SourceDictionaryLanguage.name",
                  "serializationOptions": {
                    "json": {
                      "name": "name"
                    }
                  },
                  "isHttpMetadata": false
                },
                {
                  "$id": "84",
                  "kind": "property",
                  "name": "nativeName",
                  "serializedName": "nativeName",
                  "doc": "Display name of the language in the locale native for this language.",
                  "type": {
                    "$id": "85",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "TextTranslation.SourceDictionaryLanguage.nativeName",
                  "serializationOptions": {
                    "json": {
                      "name": "nativeName"
                    }
                  },
                  "isHttpMetadata": false
                },
                {
                  "$id": "86",
                  "kind": "property",
                  "name": "dir",
                  "serializedName": "dir",
                  "doc": "Directionality, which is rtl for right-to-left languages or ltr for left-to-right languages.",
                  "type": {
                    "$ref": "1"
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "TextTranslation.SourceDictionaryLanguage.dir",
                  "serializationOptions": {
                    "json": {
                      "name": "dir"
                    }
                  },
                  "isHttpMetadata": false
                },
                {
                  "$id": "87",
                  "kind": "property",
                  "name": "translations",
                  "serializedName": "translations",
                  "doc": "List of languages with alterative translations and examples for the query expressed in the source language.",
                  "type": {
                    "$id": "88",
                    "kind": "array",
                    "name": "ArrayTargetDictionaryLanguage",
                    "valueType": {
                      "$id": "89",
                      "kind": "model",
                      "name": "TargetDictionaryLanguage",
                      "namespace": "Azure.AI.Translation.Text",
                      "crossLanguageDefinitionId": "TextTranslation.TargetDictionaryLanguage",
                      "usage": "Output,Json",
                      "doc": "Properties of the target dictionary language",
                      "decorators": [],
                      "properties": [
                        {
                          "$id": "90",
                          "kind": "property",
                          "name": "name",
                          "serializedName": "name",
                          "doc": "Display name of the language in the locale requested via Accept-Language header.",
                          "type": {
                            "$id": "91",
                            "kind": "string",
                            "name": "string",
                            "crossLanguageDefinitionId": "TypeSpec.string",
                            "decorators": []
                          },
                          "optional": false,
                          "readOnly": false,
                          "discriminator": false,
                          "flatten": false,
                          "decorators": [],
                          "crossLanguageDefinitionId": "TextTranslation.TargetDictionaryLanguage.name",
                          "serializationOptions": {
                            "json": {
                              "name": "name"
                            }
                          },
                          "isHttpMetadata": false
                        },
                        {
                          "$id": "92",
                          "kind": "property",
                          "name": "nativeName",
                          "serializedName": "nativeName",
                          "doc": "Display name of the language in the locale native for this language.",
                          "type": {
                            "$id": "93",
                            "kind": "string",
                            "name": "string",
                            "crossLanguageDefinitionId": "TypeSpec.string",
                            "decorators": []
                          },
                          "optional": false,
                          "readOnly": false,
                          "discriminator": false,
                          "flatten": false,
                          "decorators": [],
                          "crossLanguageDefinitionId": "TextTranslation.TargetDictionaryLanguage.nativeName",
                          "serializationOptions": {
                            "json": {
                              "name": "nativeName"
                            }
                          },
                          "isHttpMetadata": false
                        },
                        {
                          "$id": "94",
                          "kind": "property",
                          "name": "dir",
                          "serializedName": "dir",
                          "doc": "Directionality, which is rtl for right-to-left languages or ltr for left-to-right languages.",
                          "type": {
                            "$ref": "1"
                          },
                          "optional": false,
                          "readOnly": false,
                          "discriminator": false,
                          "flatten": false,
                          "decorators": [],
                          "crossLanguageDefinitionId": "TextTranslation.TargetDictionaryLanguage.dir",
                          "serializationOptions": {
                            "json": {
                              "name": "dir"
                            }
                          },
                          "isHttpMetadata": false
                        },
                        {
                          "$id": "95",
                          "kind": "property",
                          "name": "code",
                          "serializedName": "code",
                          "doc": "Language code identifying the target language.",
                          "type": {
                            "$id": "96",
                            "kind": "string",
                            "name": "string",
                            "crossLanguageDefinitionId": "TypeSpec.string",
                            "decorators": []
                          },
                          "optional": false,
                          "readOnly": false,
                          "discriminator": false,
                          "flatten": false,
                          "decorators": [],
                          "crossLanguageDefinitionId": "TextTranslation.TargetDictionaryLanguage.code",
                          "serializationOptions": {
                            "json": {
                              "name": "code"
                            }
                          },
                          "isHttpMetadata": false
                        }
                      ]
                    },
                    "crossLanguageDefinitionId": "TypeSpec.Array",
                    "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "TextTranslation.SourceDictionaryLanguage.translations",
                  "serializationOptions": {
                    "json": {
                      "name": "translations"
                    }
                  },
                  "isHttpMetadata": false
                }
              ]
            },
            "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "TextTranslation.GetSupportedLanguagesResult.dictionary",
          "serializationOptions": {
            "json": {
              "name": "dictionary"
            }
          },
          "isHttpMetadata": false
        }
      ]
    },
    {
      "$ref": "51"
    },
    {
      "$ref": "60"
    },
    {
      "$ref": "67"
    },
    {
      "$ref": "68"
    },
    {
      "$ref": "81"
    },
    {
      "$ref": "89"
    },
    {
      "$id": "97",
      "kind": "model",
      "name": "ErrorResponse",
      "namespace": "Azure.AI.Translation.Text",
      "crossLanguageDefinitionId": "TextTranslation.ErrorResponse",
      "usage": "Json,Exception",
      "doc": "Representation of the Error Response from Translator Service.",
      "decorators": [],
      "properties": [
        {
          "$id": "98",
          "kind": "header",
          "name": "requestId",
          "serializedName": "requestId",
          "doc": "Value generated by the service to identify the request. It is used for troubleshooting purposes.",
          "type": {
            "$id": "99",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "TextTranslation.ErrorResponse.requestId",
          "serializationOptions": {
            "json": {
              "name": "requestId"
            }
          },
          "isHttpMetadata": true
        },
        {
          "$id": "100",
          "kind": "property",
          "name": "error",
          "serializedName": "error",
          "doc": "Error details.",
          "type": {
            "$id": "101",
            "kind": "model",
            "name": "ErrorDetails",
            "namespace": "Azure.AI.Translation.Text",
            "crossLanguageDefinitionId": "TextTranslation.ErrorDetails",
            "usage": "Json,Exception",
            "doc": "Error details as returned by Translator Service.",
            "decorators": [],
            "properties": [
              {
                "$id": "102",
                "kind": "property",
                "name": "code",
                "serializedName": "code",
                "doc": "Number identifier of the error.",
                "type": {
                  "$id": "103",
                  "kind": "int32",
                  "name": "int32",
                  "crossLanguageDefinitionId": "TypeSpec.int32",
                  "decorators": []
                },
                "optional": false,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "TextTranslation.ErrorDetails.code",
                "serializationOptions": {
                  "json": {
                    "name": "code"
                  }
                },
                "isHttpMetadata": false
              },
              {
                "$id": "104",
                "kind": "property",
                "name": "message",
                "serializedName": "message",
                "doc": "Human readable error description.",
                "type": {
                  "$id": "105",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "optional": false,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "TextTranslation.ErrorDetails.message",
                "serializationOptions": {
                  "json": {
                    "name": "message"
                  }
                },
                "isHttpMetadata": false
              }
            ]
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "TextTranslation.ErrorResponse.error",
          "serializationOptions": {
            "json": {
              "name": "error"
            }
          },
          "isHttpMetadata": false
        }
      ]
    },
    {
      "$ref": "101"
    },
    {
      "$id": "106",
      "kind": "model",
      "name": "InputTextItem",
      "namespace": "Azure.AI.Translation.Text",
      "crossLanguageDefinitionId": "TextTranslation.InputTextItem",
      "usage": "Input,Json",
      "doc": "Element containing the text for translation.",
      "decorators": [],
      "properties": [
        {
          "$id": "107",
          "kind": "property",
          "name": "text",
          "serializedName": "text",
          "doc": "Text to translate.",
          "type": {
            "$id": "108",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "TextTranslation.InputTextItem.text",
          "serializationOptions": {
            "json": {
              "name": "text"
            }
          },
          "isHttpMetadata": false
        }
      ]
    },
    {
      "$id": "109",
      "kind": "model",
      "name": "TranslatedTextItem",
      "namespace": "Azure.AI.Translation.Text",
      "crossLanguageDefinitionId": "TextTranslation.TranslatedTextItem",
      "usage": "Output,Json",
      "doc": "Element containing the translated text",
      "decorators": [],
      "properties": [
        {
          "$id": "110",
          "kind": "property",
          "name": "detectedLanguage",
          "serializedName": "detectedLanguage",
          "doc": "The detectedLanguage property is only present in the result object when language auto-detection is requested.",
          "type": {
            "$id": "111",
            "kind": "model",
            "name": "DetectedLanguage",
            "namespace": "Azure.AI.Translation.Text",
            "crossLanguageDefinitionId": "TextTranslation.DetectedLanguage",
            "usage": "Output,Json",
            "doc": "An object describing the detected language.",
            "decorators": [],
            "properties": [
              {
                "$id": "112",
                "kind": "property",
                "name": "language",
                "serializedName": "language",
                "doc": "A string representing the code of the detected language.",
                "type": {
                  "$id": "113",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "optional": false,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "TextTranslation.DetectedLanguage.language",
                "serializationOptions": {
                  "json": {
                    "name": "language"
                  }
                },
                "isHttpMetadata": false
              },
              {
                "$id": "114",
                "kind": "property",
                "name": "score",
                "serializedName": "score",
                "doc": "A float value indicating the confidence in the result.\nThe score is between zero and one and a low score indicates a low confidence.",
                "type": {
                  "$id": "115",
                  "kind": "float32",
                  "name": "float32",
                  "crossLanguageDefinitionId": "TypeSpec.float32",
                  "decorators": []
                },
                "optional": false,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "TextTranslation.DetectedLanguage.score",
                "serializationOptions": {
                  "json": {
                    "name": "score"
                  }
                },
                "isHttpMetadata": false
              }
            ]
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "TextTranslation.TranslatedTextItem.detectedLanguage",
          "serializationOptions": {
            "json": {
              "name": "detectedLanguage"
            }
          },
          "isHttpMetadata": false
        },
        {
          "$id": "116",
          "kind": "property",
          "name": "translations",
          "serializedName": "translations",
          "doc": "An array of translation results. The size of the array matches the number of target \nlanguages specified through the to query parameter.",
          "type": {
            "$id": "117",
            "kind": "array",
            "name": "ArrayTranslationText",
            "valueType": {
              "$id": "118",
              "kind": "model",
              "name": "TranslationText",
              "namespace": "Azure.AI.Translation.Text",
              "crossLanguageDefinitionId": "TextTranslation.TranslationText",
              "usage": "Output,Json",
              "doc": "Translation result",
              "decorators": [],
              "properties": [
                {
                  "$id": "119",
                  "kind": "property",
                  "name": "to",
                  "serializedName": "to",
                  "doc": "A string representing the language code of the target language.",
                  "type": {
                    "$id": "120",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "TextTranslation.TranslationText.to",
                  "serializationOptions": {
                    "json": {
                      "name": "to"
                    }
                  },
                  "isHttpMetadata": false
                },
                {
                  "$id": "121",
                  "kind": "property",
                  "name": "text",
                  "serializedName": "text",
                  "doc": "A string giving the translated text.",
                  "type": {
                    "$id": "122",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "TextTranslation.TranslationText.text",
                  "serializationOptions": {
                    "json": {
                      "name": "text"
                    }
                  },
                  "isHttpMetadata": false
                },
                {
                  "$id": "123",
                  "kind": "property",
                  "name": "transliteration",
                  "serializedName": "transliteration",
                  "doc": "An object giving the translated text in the script specified by the toScript parameter.",
                  "type": {
                    "$id": "124",
                    "kind": "model",
                    "name": "TransliteratedText",
                    "namespace": "Azure.AI.Translation.Text",
                    "crossLanguageDefinitionId": "TextTranslation.TransliteratedText",
                    "usage": "Output,Json",
                    "doc": "Transliterated text element.",
                    "decorators": [],
                    "properties": [
                      {
                        "$id": "125",
                        "kind": "property",
                        "name": "text",
                        "serializedName": "text",
                        "doc": "A string which is the result of converting the input string to the output script.",
                        "type": {
                          "$id": "126",
                          "kind": "string",
                          "name": "string",
                          "crossLanguageDefinitionId": "TypeSpec.string",
                          "decorators": []
                        },
                        "optional": false,
                        "readOnly": false,
                        "discriminator": false,
                        "flatten": false,
                        "decorators": [],
                        "crossLanguageDefinitionId": "TextTranslation.TransliteratedText.text",
                        "serializationOptions": {
                          "json": {
                            "name": "text"
                          }
                        },
                        "isHttpMetadata": false
                      },
                      {
                        "$id": "127",
                        "kind": "property",
                        "name": "script",
                        "serializedName": "script",
                        "doc": "A string specifying the script used in the output.",
                        "type": {
                          "$id": "128",
                          "kind": "string",
                          "name": "string",
                          "crossLanguageDefinitionId": "TypeSpec.string",
                          "decorators": []
                        },
                        "optional": false,
                        "readOnly": false,
                        "discriminator": false,
                        "flatten": false,
                        "decorators": [],
                        "crossLanguageDefinitionId": "TextTranslation.TransliteratedText.script",
                        "serializationOptions": {
                          "json": {
                            "name": "script"
                          }
                        },
                        "isHttpMetadata": false
                      }
                    ]
                  },
                  "optional": true,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "TextTranslation.TranslationText.transliteration",
                  "serializationOptions": {
                    "json": {
                      "name": "transliteration"
                    }
                  },
                  "isHttpMetadata": false
                },
                {
                  "$id": "129",
                  "kind": "property",
                  "name": "alignment",
                  "serializedName": "alignment",
                  "doc": "Alignment information.",
                  "type": {
                    "$id": "130",
                    "kind": "model",
                    "name": "TranslatedTextAlignment",
                    "namespace": "Azure.AI.Translation.Text",
                    "crossLanguageDefinitionId": "TextTranslation.TranslatedTextAlignment",
                    "usage": "Output,Json",
                    "doc": "Alignment information object.",
                    "decorators": [],
                    "properties": [
                      {
                        "$id": "131",
                        "kind": "property",
                        "name": "proj",
                        "serializedName": "proj",
                        "doc": "Maps input text to translated text. The alignment information is only provided when the request \nparameter includeAlignment is true. Alignment is returned as a string value of the following \nformat: [[SourceTextStartIndex]:[SourceTextEndIndex]–[TgtTextStartIndex]:[TgtTextEndIndex]]. \nThe colon separates start and end index, the dash separates the languages, and space separates the words. \nOne word may align with zero, one, or multiple words in the other language, and the aligned words may \nbe non-contiguous. When no alignment information is available, the alignment element will be empty.",
                        "type": {
                          "$id": "132",
                          "kind": "string",
                          "name": "string",
                          "crossLanguageDefinitionId": "TypeSpec.string",
                          "decorators": []
                        },
                        "optional": false,
                        "readOnly": false,
                        "discriminator": false,
                        "flatten": false,
                        "decorators": [],
                        "crossLanguageDefinitionId": "TextTranslation.TranslatedTextAlignment.proj",
                        "serializationOptions": {
                          "json": {
                            "name": "proj"
                          }
                        },
                        "isHttpMetadata": false
                      }
                    ]
                  },
                  "optional": true,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "TextTranslation.TranslationText.alignment",
                  "serializationOptions": {
                    "json": {
                      "name": "alignment"
                    }
                  },
                  "isHttpMetadata": false
                },
                {
                  "$id": "133",
                  "kind": "property",
                  "name": "sentLen",
                  "serializedName": "sentLen",
                  "doc": "Sentence boundaries in the input and output texts.",
                  "type": {
                    "$id": "134",
                    "kind": "model",
                    "name": "SentenceBoundaries",
                    "namespace": "Azure.AI.Translation.Text",
                    "crossLanguageDefinitionId": "TextTranslation.SentenceBoundaries",
                    "usage": "Output,Json",
                    "doc": "An object returning sentence boundaries in the input and output texts.",
                    "decorators": [],
                    "properties": [
                      {
                        "$id": "135",
                        "kind": "property",
                        "name": "srcSentLen",
                        "serializedName": "srcSentLen",
                        "doc": "An integer array representing the lengths of the sentences in the input text. \nThe length of the array is the number of sentences, and the values are the length of each sentence.",
                        "type": {
                          "$id": "136",
                          "kind": "array",
                          "name": "Array1",
                          "valueType": {
                            "$id": "137",
                            "kind": "int32",
                            "name": "int32",
                            "crossLanguageDefinitionId": "TypeSpec.int32",
                            "decorators": []
                          },
                          "crossLanguageDefinitionId": "TypeSpec.Array",
                          "decorators": []
                        },
                        "optional": false,
                        "readOnly": false,
                        "discriminator": false,
                        "flatten": false,
                        "decorators": [],
                        "crossLanguageDefinitionId": "TextTranslation.SentenceBoundaries.srcSentLen",
                        "serializationOptions": {
                          "json": {
                            "name": "srcSentLen"
                          }
                        },
                        "isHttpMetadata": false
                      },
                      {
                        "$id": "138",
                        "kind": "property",
                        "name": "transSentLen",
                        "serializedName": "transSentLen",
                        "doc": "An integer array representing the lengths of the sentences in the translated text. \nThe length of the array is the number of sentences, and the values are the length of each sentence.",
                        "type": {
                          "$ref": "136"
                        },
                        "optional": false,
                        "readOnly": false,
                        "discriminator": false,
                        "flatten": false,
                        "decorators": [],
                        "crossLanguageDefinitionId": "TextTranslation.SentenceBoundaries.transSentLen",
                        "serializationOptions": {
                          "json": {
                            "name": "transSentLen"
                          }
                        },
                        "isHttpMetadata": false
                      }
                    ]
                  },
                  "optional": true,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "TextTranslation.TranslationText.sentLen",
                  "serializationOptions": {
                    "json": {
                      "name": "sentLen"
                    }
                  },
                  "isHttpMetadata": false
                }
              ]
            },
            "crossLanguageDefinitionId": "TypeSpec.Array",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "TextTranslation.TranslatedTextItem.translations",
          "serializationOptions": {
            "json": {
              "name": "translations"
            }
          },
          "isHttpMetadata": false
        },
        {
          "$id": "139",
          "kind": "property",
          "name": "sourceText",
          "serializedName": "sourceText",
          "doc": "Input text in the default script of the source language. sourceText property is present only when \nthe input is expressed in a script that's not the usual script for the language. For example, \nif the input were Arabic written in Latin script, then sourceText.text would be the same Arabic text \nconverted into Arab script.",
          "type": {
            "$id": "140",
            "kind": "model",
            "name": "SourceText",
            "namespace": "Azure.AI.Translation.Text",
            "crossLanguageDefinitionId": "TextTranslation.SourceText",
            "usage": "Output,Json",
            "doc": "Input text in the default script of the source language. ",
            "decorators": [],
            "properties": [
              {
                "$id": "141",
                "kind": "property",
                "name": "text",
                "serializedName": "text",
                "doc": "Input text in the default script of the source language.",
                "type": {
                  "$id": "142",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "optional": false,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "TextTranslation.SourceText.text",
                "serializationOptions": {
                  "json": {
                    "name": "text"
                  }
                },
                "isHttpMetadata": false
              }
            ]
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "TextTranslation.TranslatedTextItem.sourceText",
          "serializationOptions": {
            "json": {
              "name": "sourceText"
            }
          },
          "isHttpMetadata": false
        }
      ]
    },
    {
      "$ref": "111"
    },
    {
      "$ref": "118"
    },
    {
      "$ref": "124"
    },
    {
      "$ref": "130"
    },
    {
      "$ref": "134"
    },
    {
      "$ref": "140"
    },
    {
      "$id": "143",
      "kind": "model",
      "name": "BreakSentenceItem",
      "namespace": "Azure.AI.Translation.Text",
      "crossLanguageDefinitionId": "TextTranslation.BreakSentenceItem",
      "usage": "Output,Json",
      "doc": "Item containing break sentence result.",
      "decorators": [],
      "properties": [
        {
          "$id": "144",
          "kind": "property",
          "name": "detectedLanguage",
          "serializedName": "detectedLanguage",
          "doc": "The detectedLanguage property is only present in the result object when language auto-detection is requested.",
          "type": {
            "$ref": "111"
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "TextTranslation.BreakSentenceItem.detectedLanguage",
          "serializationOptions": {
            "json": {
              "name": "detectedLanguage"
            }
          },
          "isHttpMetadata": false
        },
        {
          "$id": "145",
          "kind": "property",
          "name": "sentLen",
          "serializedName": "sentLen",
          "doc": "An integer array representing the lengths of the sentences in the input text.\nThe length of the array is the number of sentences, and the values are the length of each sentence.",
          "type": {
            "$ref": "136"
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "TextTranslation.BreakSentenceItem.sentLen",
          "serializationOptions": {
            "json": {
              "name": "sentLen"
            }
          },
          "isHttpMetadata": false
        }
      ]
    },
    {
      "$id": "146",
      "kind": "model",
      "name": "DictionaryLookupItem",
      "namespace": "Azure.AI.Translation.Text",
      "crossLanguageDefinitionId": "TextTranslation.DictionaryLookupItem",
      "usage": "Output,Json",
      "doc": "Dictionary Lookup Element",
      "decorators": [],
      "properties": [
        {
          "$id": "147",
          "kind": "property",
          "name": "normalizedSource",
          "serializedName": "normalizedSource",
          "doc": "A string giving the normalized form of the source term.\nFor example, if the request is \"JOHN\", the normalized form will be \"john\".\nThe content of this field becomes the input to lookup examples.",
          "type": {
            "$id": "148",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "TextTranslation.DictionaryLookupItem.normalizedSource",
          "serializationOptions": {
            "json": {
              "name": "normalizedSource"
            }
          },
          "isHttpMetadata": false
        },
        {
          "$id": "149",
          "kind": "property",
          "name": "displaySource",
          "serializedName": "displaySource",
          "doc": "A string giving the source term in a form best suited for end-user display.\nFor example, if the input is \"JOHN\", the display form will reflect the usual\nspelling of the name: \"John\".",
          "type": {
            "$id": "150",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "TextTranslation.DictionaryLookupItem.displaySource",
          "serializationOptions": {
            "json": {
              "name": "displaySource"
            }
          },
          "isHttpMetadata": false
        },
        {
          "$id": "151",
          "kind": "property",
          "name": "translations",
          "serializedName": "translations",
          "doc": "A list of translations for the source term.",
          "type": {
            "$id": "152",
            "kind": "array",
            "name": "ArrayDictionaryTranslation",
            "valueType": {
              "$id": "153",
              "kind": "model",
              "name": "DictionaryTranslation",
              "namespace": "Azure.AI.Translation.Text",
              "crossLanguageDefinitionId": "TextTranslation.DictionaryTranslation",
              "usage": "Output,Json",
              "doc": "Translation source term.",
              "decorators": [],
              "properties": [
                {
                  "$id": "154",
                  "kind": "property",
                  "name": "normalizedTarget",
                  "serializedName": "normalizedTarget",
                  "doc": "A string giving the normalized form of this term in the target language.\nThis value should be used as input to lookup examples.",
                  "type": {
                    "$id": "155",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "TextTranslation.DictionaryTranslation.normalizedTarget",
                  "serializationOptions": {
                    "json": {
                      "name": "normalizedTarget"
                    }
                  },
                  "isHttpMetadata": false
                },
                {
                  "$id": "156",
                  "kind": "property",
                  "name": "displayTarget",
                  "serializedName": "displayTarget",
                  "doc": "A string giving the term in the target language and in a form best suited\nfor end-user display. Generally, this will only differ from the normalizedTarget\nin terms of capitalization. For example, a proper noun like \"Juan\" will have\nnormalizedTarget = \"juan\" and displayTarget = \"Juan\".",
                  "type": {
                    "$id": "157",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "TextTranslation.DictionaryTranslation.displayTarget",
                  "serializationOptions": {
                    "json": {
                      "name": "displayTarget"
                    }
                  },
                  "isHttpMetadata": false
                },
                {
                  "$id": "158",
                  "kind": "property",
                  "name": "posTag",
                  "serializedName": "posTag",
                  "doc": "A string associating this term with a part-of-speech tag.",
                  "type": {
                    "$id": "159",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "TextTranslation.DictionaryTranslation.posTag",
                  "serializationOptions": {
                    "json": {
                      "name": "posTag"
                    }
                  },
                  "isHttpMetadata": false
                },
                {
                  "$id": "160",
                  "kind": "property",
                  "name": "confidence",
                  "serializedName": "confidence",
                  "doc": "A value between 0.0 and 1.0 which represents the \"confidence\" \n(or perhaps more accurately, \"probability in the training data\") of that translation pair. \nThe sum of confidence scores for one source word may or may not sum to 1.0.",
                  "type": {
                    "$id": "161",
                    "kind": "float32",
                    "name": "float32",
                    "crossLanguageDefinitionId": "TypeSpec.float32",
                    "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "TextTranslation.DictionaryTranslation.confidence",
                  "serializationOptions": {
                    "json": {
                      "name": "confidence"
                    }
                  },
                  "isHttpMetadata": false
                },
                {
                  "$id": "162",
                  "kind": "property",
                  "name": "prefixWord",
                  "serializedName": "prefixWord",
                  "doc": "A string giving the word to display as a prefix of the translation. Currently,\nthis is the gendered determiner of nouns, in languages that have gendered determiners.\nFor example, the prefix of the Spanish word \"mosca\" is \"la\", since \"mosca\" is a feminine noun in Spanish. \nThis is only dependent on the translation, and not on the source. \nIf there is no prefix, it will be the empty string.",
                  "type": {
                    "$id": "163",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "TextTranslation.DictionaryTranslation.prefixWord",
                  "serializationOptions": {
                    "json": {
                      "name": "prefixWord"
                    }
                  },
                  "isHttpMetadata": false
                },
                {
                  "$id": "164",
                  "kind": "property",
                  "name": "backTranslations",
                  "serializedName": "backTranslations",
                  "doc": "A list of \"back translations\" of the target. For example, source words that the target can translate to.\nThe list is guaranteed to contain the source word that was requested (e.g., if the source word being\nlooked up is \"fly\", then it is guaranteed that \"fly\" will be in the backTranslations list).\nHowever, it is not guaranteed to be in the first position, and often will not be.",
                  "type": {
                    "$id": "165",
                    "kind": "array",
                    "name": "ArrayBackTranslation",
                    "valueType": {
                      "$id": "166",
                      "kind": "model",
                      "name": "BackTranslation",
                      "namespace": "Azure.AI.Translation.Text",
                      "crossLanguageDefinitionId": "TextTranslation.BackTranslation",
                      "usage": "Output,Json",
                      "doc": "Back Translation",
                      "decorators": [],
                      "properties": [
                        {
                          "$id": "167",
                          "kind": "property",
                          "name": "normalizedText",
                          "serializedName": "normalizedText",
                          "doc": "A string giving the normalized form of the source term that is a back-translation of the target.\nThis value should be used as input to lookup examples.",
                          "type": {
                            "$id": "168",
                            "kind": "string",
                            "name": "string",
                            "crossLanguageDefinitionId": "TypeSpec.string",
                            "decorators": []
                          },
                          "optional": false,
                          "readOnly": false,
                          "discriminator": false,
                          "flatten": false,
                          "decorators": [],
                          "crossLanguageDefinitionId": "TextTranslation.BackTranslation.normalizedText",
                          "serializationOptions": {
                            "json": {
                              "name": "normalizedText"
                            }
                          },
                          "isHttpMetadata": false
                        },
                        {
                          "$id": "169",
                          "kind": "property",
                          "name": "displayText",
                          "serializedName": "displayText",
                          "doc": "A string giving the source term that is a back-translation of the target in a form best\nsuited for end-user display.",
                          "type": {
                            "$id": "170",
                            "kind": "string",
                            "name": "string",
                            "crossLanguageDefinitionId": "TypeSpec.string",
                            "decorators": []
                          },
                          "optional": false,
                          "readOnly": false,
                          "discriminator": false,
                          "flatten": false,
                          "decorators": [],
                          "crossLanguageDefinitionId": "TextTranslation.BackTranslation.displayText",
                          "serializationOptions": {
                            "json": {
                              "name": "displayText"
                            }
                          },
                          "isHttpMetadata": false
                        },
                        {
                          "$id": "171",
                          "kind": "property",
                          "name": "numExamples",
                          "serializedName": "numExamples",
                          "doc": "An integer representing the number of examples that are available for this translation pair.\nActual examples must be retrieved with a separate call to lookup examples. The number is mostly\nintended to facilitate display in a UX. For example, a user interface may add a hyperlink\nto the back-translation if the number of examples is greater than zero and show the back-translation\nas plain text if there are no examples. Note that the actual number of examples returned\nby a call to lookup examples may be less than numExamples, because additional filtering may be\napplied on the fly to remove \"bad\" examples.",
                          "type": {
                            "$id": "172",
                            "kind": "int32",
                            "name": "int32",
                            "crossLanguageDefinitionId": "TypeSpec.int32",
                            "decorators": []
                          },
                          "optional": false,
                          "readOnly": false,
                          "discriminator": false,
                          "flatten": false,
                          "decorators": [],
                          "crossLanguageDefinitionId": "TextTranslation.BackTranslation.numExamples",
                          "serializationOptions": {
                            "json": {
                              "name": "numExamples"
                            }
                          },
                          "isHttpMetadata": false
                        },
                        {
                          "$id": "173",
                          "kind": "property",
                          "name": "frequencyCount",
                          "serializedName": "frequencyCount",
                          "doc": "An integer representing the frequency of this translation pair in the data. The main purpose of this\nfield is to provide a user interface with a means to sort back-translations so the most frequent terms are first.",
                          "type": {
                            "$id": "174",
                            "kind": "int32",
                            "name": "int32",
                            "crossLanguageDefinitionId": "TypeSpec.int32",
                            "decorators": []
                          },
                          "optional": false,
                          "readOnly": false,
                          "discriminator": false,
                          "flatten": false,
                          "decorators": [],
                          "crossLanguageDefinitionId": "TextTranslation.BackTranslation.frequencyCount",
                          "serializationOptions": {
                            "json": {
                              "name": "frequencyCount"
                            }
                          },
                          "isHttpMetadata": false
                        }
                      ]
                    },
                    "crossLanguageDefinitionId": "TypeSpec.Array",
                    "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "TextTranslation.DictionaryTranslation.backTranslations",
                  "serializationOptions": {
                    "json": {
                      "name": "backTranslations"
                    }
                  },
                  "isHttpMetadata": false
                }
              ]
            },
            "crossLanguageDefinitionId": "TypeSpec.Array",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "TextTranslation.DictionaryLookupItem.translations",
          "serializationOptions": {
            "json": {
              "name": "translations"
            }
          },
          "isHttpMetadata": false
        }
      ]
    },
    {
      "$ref": "153"
    },
    {
      "$ref": "166"
    },
    {
      "$id": "175",
      "kind": "model",
      "name": "DictionaryExampleTextItem",
      "namespace": "Azure.AI.Translation.Text",
      "crossLanguageDefinitionId": "TextTranslation.DictionaryExampleTextItem",
      "usage": "Input,Json",
      "doc": "Element containing the text with translation.",
      "decorators": [],
      "baseModel": {
        "$ref": "106"
      },
      "properties": [
        {
          "$id": "176",
          "kind": "property",
          "name": "translation",
          "serializedName": "translation",
          "doc": "A string specifying the translated text previously returned by the Dictionary lookup operation. \nThis should be the value from the normalizedTarget field in the translations list of the Dictionary \nlookup response. The service will return examples for the specific source-target word-pair.",
          "type": {
            "$id": "177",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "TextTranslation.DictionaryExampleTextItem.translation",
          "serializationOptions": {
            "json": {
              "name": "translation"
            }
          },
          "isHttpMetadata": false
        }
      ]
    },
    {
      "$id": "178",
      "kind": "model",
      "name": "DictionaryExampleItem",
      "namespace": "Azure.AI.Translation.Text",
      "crossLanguageDefinitionId": "TextTranslation.DictionaryExampleItem",
      "usage": "Output,Json",
      "doc": "Dictionary Example element",
      "decorators": [],
      "properties": [
        {
          "$id": "179",
          "kind": "property",
          "name": "normalizedSource",
          "serializedName": "normalizedSource",
          "doc": "A string giving the normalized form of the source term. Generally, this should be identical\nto the value of the Text field at the matching list index in the body of the request.",
          "type": {
            "$id": "180",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "TextTranslation.DictionaryExampleItem.normalizedSource",
          "serializationOptions": {
            "json": {
              "name": "normalizedSource"
            }
          },
          "isHttpMetadata": false
        },
        {
          "$id": "181",
          "kind": "property",
          "name": "normalizedTarget",
          "serializedName": "normalizedTarget",
          "doc": "A string giving the normalized form of the target term. Generally, this should be identical\nto the value of the Translation field at the matching list index in the body of the request.",
          "type": {
            "$id": "182",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "TextTranslation.DictionaryExampleItem.normalizedTarget",
          "serializationOptions": {
            "json": {
              "name": "normalizedTarget"
            }
          },
          "isHttpMetadata": false
        },
        {
          "$id": "183",
          "kind": "property",
          "name": "examples",
          "serializedName": "examples",
          "doc": "A list of examples for the (source term, target term) pair.",
          "type": {
            "$id": "184",
            "kind": "array",
            "name": "ArrayDictionaryExample",
            "valueType": {
              "$id": "185",
              "kind": "model",
              "name": "DictionaryExample",
              "namespace": "Azure.AI.Translation.Text",
              "crossLanguageDefinitionId": "TextTranslation.DictionaryExample",
              "usage": "Output,Json",
              "doc": "Dictionary Example",
              "decorators": [],
              "properties": [
                {
                  "$id": "186",
                  "kind": "property",
                  "name": "sourcePrefix",
                  "serializedName": "sourcePrefix",
                  "doc": "The string to concatenate before the value of sourceTerm to form a complete example.\nDo not add a space character, since it is already there when it should be.\nThis value may be an empty string.",
                  "type": {
                    "$id": "187",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "TextTranslation.DictionaryExample.sourcePrefix",
                  "serializationOptions": {
                    "json": {
                      "name": "sourcePrefix"
                    }
                  },
                  "isHttpMetadata": false
                },
                {
                  "$id": "188",
                  "kind": "property",
                  "name": "sourceTerm",
                  "serializedName": "sourceTerm",
                  "doc": "A string equal to the actual term looked up. The string is added with sourcePrefix\nand sourceSuffix to form the complete example. Its value is separated so it can be\nmarked in a user interface, e.g., by bolding it.",
                  "type": {
                    "$id": "189",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "TextTranslation.DictionaryExample.sourceTerm",
                  "serializationOptions": {
                    "json": {
                      "name": "sourceTerm"
                    }
                  },
                  "isHttpMetadata": false
                },
                {
                  "$id": "190",
                  "kind": "property",
                  "name": "sourceSuffix",
                  "serializedName": "sourceSuffix",
                  "doc": "The string to concatenate after the value of sourceTerm to form a complete example.\nDo not add a space character, since it is already there when it should be.\nThis value may be an empty string.",
                  "type": {
                    "$id": "191",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "TextTranslation.DictionaryExample.sourceSuffix",
                  "serializationOptions": {
                    "json": {
                      "name": "sourceSuffix"
                    }
                  },
                  "isHttpMetadata": false
                },
                {
                  "$id": "192",
                  "kind": "property",
                  "name": "targetPrefix",
                  "serializedName": "targetPrefix",
                  "doc": "A string similar to sourcePrefix but for the target.",
                  "type": {
                    "$id": "193",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "TextTranslation.DictionaryExample.targetPrefix",
                  "serializationOptions": {
                    "json": {
                      "name": "targetPrefix"
                    }
                  },
                  "isHttpMetadata": false
                },
                {
                  "$id": "194",
                  "kind": "property",
                  "name": "targetTerm",
                  "serializedName": "targetTerm",
                  "doc": "A string similar to sourceTerm but for the target.",
                  "type": {
                    "$id": "195",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "TextTranslation.DictionaryExample.targetTerm",
                  "serializationOptions": {
                    "json": {
                      "name": "targetTerm"
                    }
                  },
                  "isHttpMetadata": false
                },
                {
                  "$id": "196",
                  "kind": "property",
                  "name": "targetSuffix",
                  "serializedName": "targetSuffix",
                  "doc": "A string similar to sourceSuffix but for the target.",
                  "type": {
                    "$id": "197",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "TextTranslation.DictionaryExample.targetSuffix",
                  "serializationOptions": {
                    "json": {
                      "name": "targetSuffix"
                    }
                  },
                  "isHttpMetadata": false
                }
              ]
            },
            "crossLanguageDefinitionId": "TypeSpec.Array",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "TextTranslation.DictionaryExampleItem.examples",
          "serializationOptions": {
            "json": {
              "name": "examples"
            }
          },
          "isHttpMetadata": false
        }
      ]
    },
    {
      "$ref": "185"
    }
  ],
  "clients": [
    {
      "$id": "198",
      "kind": "client",
      "name": "TextTranslationClient",
      "namespace": "Azure.AI.Translation.Text",
      "doc": "Text translation is a cloud-based REST API feature of the Translator service that uses neural\nmachine translation technology to enable quick and accurate source-to-target text translation\nin real time across all supported languages.\n\nThe following methods are supported by the Text Translation feature:\n\nLanguages. Returns a list of languages supported by Translate, Transliterate, and Dictionary Lookup operations.\n\nTranslate. Renders single source-language text to multiple target-language texts with a single request.\n\nTransliterate. Converts characters or letters of a source language to the corresponding characters or letters of a target language.\n\nDetect. Returns the source code language code and a boolean variable denoting whether the detected language is supported for text translation and transliteration.\n\nDictionary lookup. Returns equivalent words for the source term in the target language.\n\nDictionary example Returns grammatical structure and context examples for the source term and target term pair.",
      "methods": [
        {
          "$id": "199",
          "kind": "basic",
          "name": "getSupportedLanguages",
          "accessibility": "public",
          "apiVersions": [
            "3.0"
          ],
          "doc": "Gets the set of languages currently supported by other operations of the Translator.",
          "summary": "Gets the set of languages currently supported by other operations of the Translator.",
          "operation": {
            "$id": "200",
            "name": "getSupportedLanguages",
            "resourceName": "TextTranslation",
            "summary": "Gets the set of languages currently supported by other operations of the Translator.",
            "doc": "Gets the set of languages currently supported by other operations of the Translator.",
            "accessibility": "public",
            "parameters": [
              {
                "$id": "201",
                "name": "clientTraceId",
                "nameInRequest": "X-ClientTraceId",
                "doc": "A client-generated GUID to uniquely identify the request.",
                "type": {
                  "$id": "202",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "203",
                "name": "scope",
                "nameInRequest": "scope",
                "doc": "A comma-separated list of names defining the group of languages to return.\nAllowed group names are: `translation`, `transliteration` and `dictionary`.\nIf no scope is given, then all groups are returned, which is equivalent to passing \n`scope=translation,transliteration,dictionary`. To decide which set of supported languages \nis appropriate for your scenario, see the description of the [response object](#response-body).",
                "type": {
                  "$id": "204",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "205",
                "name": "acceptLanguage",
                "nameInRequest": "Accept-Language",
                "doc": "The language to use for user interface strings. Some of the fields in the response are names of languages or \nnames of regions. Use this parameter to define the language in which these names are returned. \nThe language is specified by providing a well-formed BCP 47 language tag. For instance, use the value `fr` \nto request names in French or use the value `zh-Hant` to request names in Chinese Traditional.\nNames are provided in the English language when a target language is not specified or when localization \nis not available.",
                "type": {
                  "$id": "206",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "207",
                "name": "ifNoneMatch",
                "nameInRequest": "If-None-Match",
                "doc": "Passing the value of the ETag response header in an If-None-Match field will allow the service to optimize the response. \nIf the resource has not been modified, the service will return status code 304 and an empty response body.",
                "type": {
                  "$id": "208",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "209",
                "name": "apiVersion",
                "nameInRequest": "api-version",
                "doc": "Mandatory API version parameter",
                "type": {
                  "$id": "210",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": true,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Client",
                "defaultValue": {
                  "type": {
                    "$id": "211",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string"
                  },
                  "value": "3.0"
                },
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "212",
                "name": "accept",
                "nameInRequest": "Accept",
                "type": {
                  "$ref": "21"
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Constant",
                "decorators": [],
                "skipUrlEncoding": false
              }
            ],
            "responses": [
              {
                "statusCodes": [
                  200
                ],
                "bodyType": {
                  "$ref": "43"
                },
                "headers": [
                  {
                    "name": "requestId",
                    "nameInResponse": "X-RequestId",
                    "doc": "Value generated by the service to identify the request. It is used for troubleshooting purposes.",
                    "type": {
                      "$id": "213",
                      "kind": "string",
                      "name": "string",
                      "crossLanguageDefinitionId": "TypeSpec.string",
                      "decorators": []
                    }
                  },
                  {
                    "name": "etag",
                    "nameInResponse": "ETag",
                    "doc": "Current value of the entity tag for the requested groups of supported languages. \nTo make subsequent requests more efficient, the client may send the `ETag` value in an \n`If-None-Match` header field.",
                    "type": {
                      "$id": "214",
                      "kind": "string",
                      "name": "string",
                      "crossLanguageDefinitionId": "TypeSpec.string",
                      "decorators": []
                    }
                  }
                ],
                "isErrorResponse": false,
                "contentTypes": [
                  "application/json"
                ]
              }
            ],
            "httpMethod": "GET",
            "uri": "{Endpoint}",
            "path": "/languages",
            "bufferResponse": true,
            "generateProtocolMethod": true,
            "generateConvenienceMethod": true,
            "crossLanguageDefinitionId": "TextTranslation.getSupportedLanguages",
            "decorators": [],
            "examples": [
              {
                "$id": "215",
                "kind": "http",
                "name": "Gets the set of languages currently supported by other operations of the Translator.",
                "description": "Gets the set of languages currently supported by other operations of the Translator.",
                "filePath": "3.0/GetSupportedLanguages_MaximumSet_Gen.json",
                "parameters": [
                  {
                    "parameter": {
                      "$ref": "201"
                    },
                    "value": {
                      "$id": "216",
                      "kind": "string",
                      "type": {
                        "$ref": "202"
                      },
                      "value": "kayfnugjec"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "203"
                    },
                    "value": {
                      "$id": "217",
                      "kind": "string",
                      "type": {
                        "$ref": "204"
                      },
                      "value": "translation,transliteration,dictionary"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "205"
                    },
                    "value": {
                      "$id": "218",
                      "kind": "string",
                      "type": {
                        "$ref": "206"
                      },
                      "value": "en"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "207"
                    },
                    "value": {
                      "$id": "219",
                      "kind": "string",
                      "type": {
                        "$ref": "208"
                      },
                      "value": "fpnhruttllvc"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "209"
                    },
                    "value": {
                      "$id": "220",
                      "kind": "string",
                      "type": {
                        "$ref": "210"
                      },
                      "value": "3.0"
                    }
                  }
                ],
                "responses": [
                  {
                    "response": {
                      "statusCodes": [
                        200
                      ],
                      "bodyType": {
                        "$ref": "43"
                      },
                      "headers": [
                        {
                          "name": "requestId",
                          "nameInResponse": "X-RequestId",
                          "doc": "Value generated by the service to identify the request. It is used for troubleshooting purposes.",
                          "type": {
                            "$ref": "213"
                          }
                        },
                        {
                          "name": "etag",
                          "nameInResponse": "ETag",
                          "doc": "Current value of the entity tag for the requested groups of supported languages. \nTo make subsequent requests more efficient, the client may send the `ETag` value in an \n`If-None-Match` header field.",
                          "type": {
                            "$ref": "214"
                          }
                        }
                      ],
                      "isErrorResponse": false,
                      "contentTypes": [
                        "application/json"
                      ]
                    },
                    "statusCode": 200,
                    "bodyValue": {
                      "$id": "221",
                      "kind": "model",
                      "type": {
                        "$ref": "43"
                      },
                      "value": {
                        "translation": {
                          "$id": "222",
                          "kind": "dict",
                          "type": {
                            "$ref": "49"
                          },
                          "value": {
                            "en": {
                              "$id": "223",
                              "kind": "model",
                              "type": {
                                "$ref": "51"
                              },
                              "value": {
                                "name": {
                                  "$id": "224",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "53"
                                  },
                                  "value": "English"
                                },
                                "nativeName": {
                                  "$id": "225",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "55"
                                  },
                                  "value": "English"
                                },
                                "dir": {
                                  "$id": "226",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "1"
                                  },
                                  "value": "ltr"
                                }
                              }
                            },
                            "es": {
                              "$id": "227",
                              "kind": "model",
                              "type": {
                                "$ref": "51"
                              },
                              "value": {
                                "name": {
                                  "$id": "228",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "53"
                                  },
                                  "value": "Spanish"
                                },
                                "nativeName": {
                                  "$id": "229",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "55"
                                  },
                                  "value": "Español"
                                },
                                "dir": {
                                  "$id": "230",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "1"
                                  },
                                  "value": "ltr"
                                }
                              }
                            }
                          }
                        },
                        "transliteration": {
                          "$id": "231",
                          "kind": "dict",
                          "type": {
                            "$ref": "58"
                          },
                          "value": {
                            "ar": {
                              "$id": "232",
                              "kind": "model",
                              "type": {
                                "$ref": "60"
                              },
                              "value": {
                                "name": {
                                  "$id": "233",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "62"
                                  },
                                  "value": "Arabic"
                                },
                                "nativeName": {
                                  "$id": "234",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "64"
                                  },
                                  "value": "العربية"
                                },
                                "scripts": {
                                  "$id": "235",
                                  "kind": "array",
                                  "type": {
                                    "$ref": "66"
                                  },
                                  "value": [
                                    {
                                      "$id": "236",
                                      "kind": "model",
                                      "type": {
                                        "$ref": "67"
                                      },
                                      "value": {
                                        "code": {
                                          "$id": "237",
                                          "kind": "string",
                                          "type": {
                                            "$ref": "70"
                                          },
                                          "value": "Arab"
                                        },
                                        "name": {
                                          "$id": "238",
                                          "kind": "string",
                                          "type": {
                                            "$ref": "72"
                                          },
                                          "value": "Arabic"
                                        },
                                        "nativeName": {
                                          "$id": "239",
                                          "kind": "string",
                                          "type": {
                                            "$ref": "74"
                                          },
                                          "value": "العربية"
                                        },
                                        "dir": {
                                          "$id": "240",
                                          "kind": "string",
                                          "type": {
                                            "$ref": "1"
                                          },
                                          "value": "rtl"
                                        },
                                        "toScripts": {
                                          "$id": "241",
                                          "kind": "array",
                                          "type": {
                                            "$ref": "77"
                                          },
                                          "value": [
                                            {
                                              "$id": "242",
                                              "kind": "model",
                                              "type": {
                                                "$ref": "68"
                                              },
                                              "value": {
                                                "code": {
                                                  "$id": "243",
                                                  "kind": "string",
                                                  "type": {
                                                    "$ref": "70"
                                                  },
                                                  "value": "Latn"
                                                },
                                                "name": {
                                                  "$id": "244",
                                                  "kind": "string",
                                                  "type": {
                                                    "$ref": "72"
                                                  },
                                                  "value": "Latin"
                                                },
                                                "nativeName": {
                                                  "$id": "245",
                                                  "kind": "string",
                                                  "type": {
                                                    "$ref": "74"
                                                  },
                                                  "value": "اللاتينية"
                                                },
                                                "dir": {
                                                  "$id": "246",
                                                  "kind": "string",
                                                  "type": {
                                                    "$ref": "1"
                                                  },
                                                  "value": "ltr"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "$id": "247",
                                      "kind": "model",
                                      "type": {
                                        "$ref": "67"
                                      },
                                      "value": {
                                        "code": {
                                          "$id": "248",
                                          "kind": "string",
                                          "type": {
                                            "$ref": "70"
                                          },
                                          "value": "Latn"
                                        },
                                        "name": {
                                          "$id": "249",
                                          "kind": "string",
                                          "type": {
                                            "$ref": "72"
                                          },
                                          "value": "Latin"
                                        },
                                        "nativeName": {
                                          "$id": "250",
                                          "kind": "string",
                                          "type": {
                                            "$ref": "74"
                                          },
                                          "value": "اللاتينية"
                                        },
                                        "dir": {
                                          "$id": "251",
                                          "kind": "string",
                                          "type": {
                                            "$ref": "1"
                                          },
                                          "value": "ltr"
                                        },
                                        "toScripts": {
                                          "$id": "252",
                                          "kind": "array",
                                          "type": {
                                            "$ref": "77"
                                          },
                                          "value": [
                                            {
                                              "$id": "253",
                                              "kind": "model",
                                              "type": {
                                                "$ref": "68"
                                              },
                                              "value": {
                                                "code": {
                                                  "$id": "254",
                                                  "kind": "string",
                                                  "type": {
                                                    "$ref": "70"
                                                  },
                                                  "value": "Arab"
                                                },
                                                "name": {
                                                  "$id": "255",
                                                  "kind": "string",
                                                  "type": {
                                                    "$ref": "72"
                                                  },
                                                  "value": "Arabic"
                                                },
                                                "nativeName": {
                                                  "$id": "256",
                                                  "kind": "string",
                                                  "type": {
                                                    "$ref": "74"
                                                  },
                                                  "value": "العربية"
                                                },
                                                "dir": {
                                                  "$id": "257",
                                                  "kind": "string",
                                                  "type": {
                                                    "$ref": "1"
                                                  },
                                                  "value": "rtl"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "dictionary": {
                          "$id": "258",
                          "kind": "dict",
                          "type": {
                            "$ref": "79"
                          },
                          "value": {
                            "cs": {
                              "$id": "259",
                              "kind": "model",
                              "type": {
                                "$ref": "81"
                              },
                              "value": {
                                "name": {
                                  "$id": "260",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "83"
                                  },
                                  "value": "Czech"
                                },
                                "nativeName": {
                                  "$id": "261",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "85"
                                  },
                                  "value": "Čeština"
                                },
                                "dir": {
                                  "$id": "262",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "1"
                                  },
                                  "value": "ltr"
                                },
                                "translations": {
                                  "$id": "263",
                                  "kind": "array",
                                  "type": {
                                    "$ref": "88"
                                  },
                                  "value": [
                                    {
                                      "$id": "264",
                                      "kind": "model",
                                      "type": {
                                        "$ref": "89"
                                      },
                                      "value": {
                                        "name": {
                                          "$id": "265",
                                          "kind": "string",
                                          "type": {
                                            "$ref": "91"
                                          },
                                          "value": "English"
                                        },
                                        "nativeName": {
                                          "$id": "266",
                                          "kind": "string",
                                          "type": {
                                            "$ref": "93"
                                          },
                                          "value": "English"
                                        },
                                        "dir": {
                                          "$id": "267",
                                          "kind": "string",
                                          "type": {
                                            "$ref": "1"
                                          },
                                          "value": "ltr"
                                        },
                                        "code": {
                                          "$id": "268",
                                          "kind": "string",
                                          "type": {
                                            "$ref": "96"
                                          },
                                          "value": "en"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              },
              {
                "$id": "269",
                "kind": "http",
                "name": "Gets the set of languages currently supported by other operations of the Translator with minimum properties.",
                "description": "Gets the set of languages currently supported by other operations of the Translator with minimum properties.",
                "filePath": "3.0/GetSupportedLanguages_MinimumSet_Gen.json",
                "parameters": [
                  {
                    "parameter": {
                      "$ref": "209"
                    },
                    "value": {
                      "$id": "270",
                      "kind": "string",
                      "type": {
                        "$ref": "210"
                      },
                      "value": "3.0"
                    }
                  }
                ],
                "responses": [
                  {
                    "response": {
                      "statusCodes": [
                        200
                      ],
                      "bodyType": {
                        "$ref": "43"
                      },
                      "headers": [
                        {
                          "name": "requestId",
                          "nameInResponse": "X-RequestId",
                          "doc": "Value generated by the service to identify the request. It is used for troubleshooting purposes.",
                          "type": {
                            "$ref": "213"
                          }
                        },
                        {
                          "name": "etag",
                          "nameInResponse": "ETag",
                          "doc": "Current value of the entity tag for the requested groups of supported languages. \nTo make subsequent requests more efficient, the client may send the `ETag` value in an \n`If-None-Match` header field.",
                          "type": {
                            "$ref": "214"
                          }
                        }
                      ],
                      "isErrorResponse": false,
                      "contentTypes": [
                        "application/json"
                      ]
                    },
                    "statusCode": 200,
                    "bodyValue": {
                      "$id": "271",
                      "kind": "model",
                      "type": {
                        "$ref": "43"
                      },
                      "value": {}
                    }
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "$id": "272",
              "name": "clientTraceId",
              "nameInRequest": "X-ClientTraceId",
              "doc": "A client-generated GUID to uniquely identify the request.",
              "type": {
                "$id": "273",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "274",
              "name": "scope",
              "nameInRequest": "scope",
              "doc": "A comma-separated list of names defining the group of languages to return.\nAllowed group names are: `translation`, `transliteration` and `dictionary`.\nIf no scope is given, then all groups are returned, which is equivalent to passing \n`scope=translation,transliteration,dictionary`. To decide which set of supported languages \nis appropriate for your scenario, see the description of the [response object](#response-body).",
              "type": {
                "$id": "275",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "276",
              "name": "acceptLanguage",
              "nameInRequest": "Accept-Language",
              "doc": "The language to use for user interface strings. Some of the fields in the response are names of languages or \nnames of regions. Use this parameter to define the language in which these names are returned. \nThe language is specified by providing a well-formed BCP 47 language tag. For instance, use the value `fr` \nto request names in French or use the value `zh-Hant` to request names in Chinese Traditional.\nNames are provided in the English language when a target language is not specified or when localization \nis not available.",
              "type": {
                "$id": "277",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "278",
              "name": "ifNoneMatch",
              "nameInRequest": "If-None-Match",
              "doc": "Passing the value of the ETag response header in an If-None-Match field will allow the service to optimize the response. \nIf the resource has not been modified, the service will return status code 304 and an empty response body.",
              "type": {
                "$id": "279",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "280",
              "name": "accept",
              "nameInRequest": "Accept",
              "type": {
                "$ref": "21"
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Constant",
              "decorators": [],
              "skipUrlEncoding": false
            }
          ],
          "response": {
            "type": {
              "$ref": "43"
            }
          },
          "isOverride": false,
          "generateConvenient": true,
          "generateProtocol": true,
          "crossLanguageDefinitionId": "TextTranslation.getSupportedLanguages"
        },
        {
          "$id": "281",
          "kind": "basic",
          "name": "translate",
          "accessibility": "public",
          "apiVersions": [
            "3.0"
          ],
          "doc": "Translate Text",
          "summary": "Translate Text",
          "operation": {
            "$id": "282",
            "name": "translate",
            "resourceName": "TextTranslation",
            "summary": "Translate Text",
            "doc": "Translate Text",
            "accessibility": "public",
            "parameters": [
              {
                "$id": "283",
                "name": "clientTraceId",
                "nameInRequest": "X-ClientTraceId",
                "doc": "A client-generated GUID to uniquely identify the request.",
                "type": {
                  "$id": "284",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "285",
                "name": "to",
                "nameInRequest": "to",
                "doc": "Specifies the language of the output text. The target language must be one of the supported languages included \nin the translation scope. For example, use to=de to translate to German.\nIt's possible to translate to multiple languages simultaneously by repeating the parameter in the query string. \nFor example, use to=de&to=it to translate to German and Italian.",
                "type": {
                  "$id": "286",
                  "kind": "array",
                  "name": "Array",
                  "valueType": {
                    "$id": "287",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                  },
                  "crossLanguageDefinitionId": "TypeSpec.Array",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": true,
                "isRequired": true,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "288",
                "name": "from",
                "nameInRequest": "from",
                "doc": "Specifies the language of the input text. Find which languages are available to translate from by \nlooking up supported languages using the translation scope. If the from parameter isn't specified, \nautomatic language detection is applied to determine the source language.\n\nYou must use the from parameter rather than autodetection when using the dynamic dictionary feature. \nNote: the dynamic dictionary feature is case-sensitive.",
                "type": {
                  "$id": "289",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "290",
                "name": "textType",
                "nameInRequest": "textType",
                "doc": "Defines whether the text being translated is plain text or HTML text. Any HTML needs to be a well-formed, \ncomplete element. Possible values are: plain (default) or html.",
                "type": {
                  "$ref": "5"
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "291",
                "name": "category",
                "nameInRequest": "category",
                "doc": "A string specifying the category (domain) of the translation. This parameter is used to get translations \nfrom a customized system built with Custom Translator. Add the Category ID from your Custom Translator \nproject details to this parameter to use your deployed customized system. Default value is: general.",
                "type": {
                  "$id": "292",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "293",
                "name": "profanityAction",
                "nameInRequest": "profanityAction",
                "doc": "Specifies how profanities should be treated in translations.\nPossible values are: NoAction (default), Marked or Deleted.",
                "type": {
                  "$ref": "9"
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "294",
                "name": "profanityMarker",
                "nameInRequest": "profanityMarker",
                "doc": "Specifies how profanities should be marked in translations.\nPossible values are: Asterisk (default) or Tag. ",
                "type": {
                  "$ref": "14"
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "295",
                "name": "includeAlignment",
                "nameInRequest": "includeAlignment",
                "doc": "Specifies whether to include alignment projection from source text to translated text.\nPossible values are: true or false (default).",
                "type": {
                  "$id": "296",
                  "kind": "boolean",
                  "name": "boolean",
                  "crossLanguageDefinitionId": "TypeSpec.boolean",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "297",
                "name": "includeSentenceLength",
                "nameInRequest": "includeSentenceLength",
                "doc": "Specifies whether to include sentence boundaries for the input text and the translated text.\nPossible values are: true or false (default).",
                "type": {
                  "$id": "298",
                  "kind": "boolean",
                  "name": "boolean",
                  "crossLanguageDefinitionId": "TypeSpec.boolean",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "299",
                "name": "suggestedFrom",
                "nameInRequest": "suggestedFrom",
                "doc": "Specifies a fallback language if the language of the input text can't be identified. \nLanguage autodetection is applied when the from parameter is omitted. If detection fails, \nthe suggestedFrom language will be assumed.",
                "type": {
                  "$id": "300",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "301",
                "name": "fromScript",
                "nameInRequest": "fromScript",
                "doc": "Specifies the script of the input text.",
                "type": {
                  "$id": "302",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "303",
                "name": "toScript",
                "nameInRequest": "toScript",
                "doc": "Specifies the script of the translated text.",
                "type": {
                  "$id": "304",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "305",
                "name": "allowFallback",
                "nameInRequest": "allowFallback",
                "doc": "Specifies that the service is allowed to fall back to a general system when a custom system doesn't exist. \nPossible values are: true (default) or false.\n\nallowFallback=false specifies that the translation should only use systems trained for the category specified \nby the request. If a translation for language X to language Y requires chaining through a pivot language E, \nthen all the systems in the chain (X → E and E → Y) will need to be custom and have the same category. \nIf no system is found with the specific category, the request will return a 400 status code. allowFallback=true \nspecifies that the service is allowed to fall back to a general system when a custom system doesn't exist.",
                "type": {
                  "$id": "306",
                  "kind": "boolean",
                  "name": "boolean",
                  "crossLanguageDefinitionId": "TypeSpec.boolean",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "307",
                "name": "apiVersion",
                "nameInRequest": "api-version",
                "doc": "Mandatory API version parameter",
                "type": {
                  "$id": "308",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": true,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Client",
                "defaultValue": {
                  "type": {
                    "$id": "309",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string"
                  },
                  "value": "3.0"
                },
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "310",
                "name": "contentType",
                "nameInRequest": "Content-Type",
                "doc": "Body parameter's content type. Known values are application/json",
                "type": {
                  "$ref": "23"
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": true,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Constant",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "311",
                "name": "accept",
                "nameInRequest": "Accept",
                "type": {
                  "$ref": "25"
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Constant",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "312",
                "name": "body",
                "nameInRequest": "body",
                "doc": "Defines the content of the request",
                "type": {
                  "$id": "313",
                  "kind": "array",
                  "name": "ArrayInputTextItem",
                  "valueType": {
                    "$ref": "106"
                  },
                  "crossLanguageDefinitionId": "TypeSpec.Array",
                  "decorators": []
                },
                "location": "Body",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              }
            ],
            "responses": [
              {
                "statusCodes": [
                  200
                ],
                "bodyType": {
                  "$id": "314",
                  "kind": "array",
                  "name": "ArrayTranslatedTextItem",
                  "valueType": {
                    "$ref": "109"
                  },
                  "crossLanguageDefinitionId": "TypeSpec.Array",
                  "decorators": []
                },
                "headers": [
                  {
                    "name": "requestId",
                    "nameInResponse": "X-RequestId",
                    "doc": "Value generated by the service to identify the request. It is used for troubleshooting purposes.",
                    "type": {
                      "$id": "315",
                      "kind": "string",
                      "name": "string",
                      "crossLanguageDefinitionId": "TypeSpec.string",
                      "decorators": []
                    }
                  },
                  {
                    "name": "mtSystem",
                    "nameInResponse": "x-mt-system",
                    "doc": "Specifies the system type that was used for translation for each 'to' language requested for translation. \nThe value is a comma-separated list of strings. Each string indicates a type:\n\n* Custom - Request includes a custom system and at least one custom system was used during translation.\n* Team - All other requests",
                    "type": {
                      "$id": "316",
                      "kind": "string",
                      "name": "string",
                      "crossLanguageDefinitionId": "TypeSpec.string",
                      "decorators": []
                    }
                  },
                  {
                    "name": "meteredUsage",
                    "nameInResponse": "x-metered-usage",
                    "doc": "Specifies consumption (the number of characters for which the user will be charged) for the translation \njob request. For example, if the word \"Hello\" is translated from English (en) to French (fr), \nthis field will return the value '5'.",
                    "type": {
                      "$id": "317",
                      "kind": "int32",
                      "name": "int32",
                      "crossLanguageDefinitionId": "TypeSpec.int32",
                      "decorators": []
                    }
                  }
                ],
                "isErrorResponse": false,
                "contentTypes": [
                  "application/json"
                ]
              }
            ],
            "httpMethod": "POST",
            "uri": "{Endpoint}",
            "path": "/translate",
            "requestMediaTypes": [
              "application/json"
            ],
            "bufferResponse": true,
            "generateProtocolMethod": true,
            "generateConvenienceMethod": true,
            "crossLanguageDefinitionId": "TextTranslation.translate",
            "decorators": [],
            "examples": [
              {
                "$id": "318",
                "kind": "http",
                "name": "Translate Text",
                "description": "Translate Text",
                "filePath": "3.0/Translate_MaximumSet_Gen.json",
                "parameters": [
                  {
                    "parameter": {
                      "$ref": "283"
                    },
                    "value": {
                      "$id": "319",
                      "kind": "string",
                      "type": {
                        "$ref": "284"
                      },
                      "value": "ndbkaatzsnoetqkiehappoza"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "285"
                    },
                    "value": {
                      "$id": "320",
                      "kind": "array",
                      "type": {
                        "$ref": "286"
                      },
                      "value": [
                        {
                          "$id": "321",
                          "kind": "string",
                          "type": {
                            "$ref": "287"
                          },
                          "value": "cs"
                        }
                      ]
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "288"
                    },
                    "value": {
                      "$id": "322",
                      "kind": "string",
                      "type": {
                        "$ref": "289"
                      },
                      "value": "en"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "290"
                    },
                    "value": {
                      "$id": "323",
                      "kind": "string",
                      "type": {
                        "$ref": "5"
                      },
                      "value": "Plain"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "291"
                    },
                    "value": {
                      "$id": "324",
                      "kind": "string",
                      "type": {
                        "$ref": "292"
                      },
                      "value": "custom"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "293"
                    },
                    "value": {
                      "$id": "325",
                      "kind": "string",
                      "type": {
                        "$ref": "9"
                      },
                      "value": "NoAction"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "294"
                    },
                    "value": {
                      "$id": "326",
                      "kind": "string",
                      "type": {
                        "$ref": "14"
                      },
                      "value": "Asterisk"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "295"
                    },
                    "value": {
                      "$id": "327",
                      "kind": "boolean",
                      "type": {
                        "$ref": "296"
                      },
                      "value": true
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "297"
                    },
                    "value": {
                      "$id": "328",
                      "kind": "boolean",
                      "type": {
                        "$ref": "298"
                      },
                      "value": true
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "299"
                    },
                    "value": {
                      "$id": "329",
                      "kind": "string",
                      "type": {
                        "$ref": "300"
                      },
                      "value": "en"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "301"
                    },
                    "value": {
                      "$id": "330",
                      "kind": "string",
                      "type": {
                        "$ref": "302"
                      },
                      "value": "Latn"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "303"
                    },
                    "value": {
                      "$id": "331",
                      "kind": "string",
                      "type": {
                        "$ref": "304"
                      },
                      "value": "Latn"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "305"
                    },
                    "value": {
                      "$id": "332",
                      "kind": "boolean",
                      "type": {
                        "$ref": "306"
                      },
                      "value": true
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "307"
                    },
                    "value": {
                      "$id": "333",
                      "kind": "string",
                      "type": {
                        "$ref": "308"
                      },
                      "value": "3.0"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "312"
                    },
                    "value": {
                      "$id": "334",
                      "kind": "array",
                      "type": {
                        "$ref": "313"
                      },
                      "value": [
                        {
                          "$id": "335",
                          "kind": "model",
                          "type": {
                            "$ref": "106"
                          },
                          "value": {
                            "text": {
                              "$id": "336",
                              "kind": "string",
                              "type": {
                                "$ref": "108"
                              },
                              "value": "This is a test."
                            }
                          }
                        }
                      ]
                    }
                  }
                ],
                "responses": [
                  {
                    "response": {
                      "statusCodes": [
                        200
                      ],
                      "bodyType": {
                        "$ref": "314"
                      },
                      "headers": [
                        {
                          "name": "requestId",
                          "nameInResponse": "X-RequestId",
                          "doc": "Value generated by the service to identify the request. It is used for troubleshooting purposes.",
                          "type": {
                            "$ref": "315"
                          }
                        },
                        {
                          "name": "mtSystem",
                          "nameInResponse": "x-mt-system",
                          "doc": "Specifies the system type that was used for translation for each 'to' language requested for translation. \nThe value is a comma-separated list of strings. Each string indicates a type:\n\n* Custom - Request includes a custom system and at least one custom system was used during translation.\n* Team - All other requests",
                          "type": {
                            "$ref": "316"
                          }
                        },
                        {
                          "name": "meteredUsage",
                          "nameInResponse": "x-metered-usage",
                          "doc": "Specifies consumption (the number of characters for which the user will be charged) for the translation \njob request. For example, if the word \"Hello\" is translated from English (en) to French (fr), \nthis field will return the value '5'.",
                          "type": {
                            "$ref": "317"
                          }
                        }
                      ],
                      "isErrorResponse": false,
                      "contentTypes": [
                        "application/json"
                      ]
                    },
                    "statusCode": 200,
                    "bodyValue": {
                      "$id": "337",
                      "kind": "array",
                      "type": {
                        "$ref": "314"
                      },
                      "value": [
                        {
                          "$id": "338",
                          "kind": "model",
                          "type": {
                            "$ref": "109"
                          },
                          "value": {
                            "detectedLanguage": {
                              "$id": "339",
                              "kind": "model",
                              "type": {
                                "$ref": "111"
                              },
                              "value": {
                                "language": {
                                  "$id": "340",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "113"
                                  },
                                  "value": "en"
                                },
                                "score": {
                                  "$id": "341",
                                  "kind": "number",
                                  "type": {
                                    "$ref": "115"
                                  },
                                  "value": 1
                                }
                              }
                            },
                            "translations": {
                              "$id": "342",
                              "kind": "array",
                              "type": {
                                "$ref": "117"
                              },
                              "value": [
                                {
                                  "$id": "343",
                                  "kind": "model",
                                  "type": {
                                    "$ref": "118"
                                  },
                                  "value": {
                                    "to": {
                                      "$id": "344",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "120"
                                      },
                                      "value": "cs"
                                    },
                                    "text": {
                                      "$id": "345",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "122"
                                      },
                                      "value": "Tohle je test."
                                    },
                                    "transliteration": {
                                      "$id": "346",
                                      "kind": "model",
                                      "type": {
                                        "$ref": "124"
                                      },
                                      "value": {
                                        "text": {
                                          "$id": "347",
                                          "kind": "string",
                                          "type": {
                                            "$ref": "126"
                                          },
                                          "value": "Tohle je test."
                                        },
                                        "script": {
                                          "$id": "348",
                                          "kind": "string",
                                          "type": {
                                            "$ref": "128"
                                          },
                                          "value": "Latn"
                                        }
                                      }
                                    },
                                    "alignment": {
                                      "$id": "349",
                                      "kind": "model",
                                      "type": {
                                        "$ref": "130"
                                      },
                                      "value": {
                                        "proj": {
                                          "$id": "350",
                                          "kind": "string",
                                          "type": {
                                            "$ref": "132"
                                          },
                                          "value": "okrxvzsagjgzrrv"
                                        }
                                      }
                                    },
                                    "sentLen": {
                                      "$id": "351",
                                      "kind": "model",
                                      "type": {
                                        "$ref": "134"
                                      },
                                      "value": {
                                        "srcSentLen": {
                                          "$id": "352",
                                          "kind": "array",
                                          "type": {
                                            "$ref": "136"
                                          },
                                          "value": [
                                            {
                                              "$id": "353",
                                              "kind": "number",
                                              "type": {
                                                "$ref": "137"
                                              },
                                              "value": 30
                                            }
                                          ]
                                        },
                                        "transSentLen": {
                                          "$id": "354",
                                          "kind": "array",
                                          "type": {
                                            "$ref": "136"
                                          },
                                          "value": [
                                            {
                                              "$id": "355",
                                              "kind": "number",
                                              "type": {
                                                "$ref": "137"
                                              },
                                              "value": 24
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "sourceText": {
                              "$id": "356",
                              "kind": "model",
                              "type": {
                                "$ref": "140"
                              },
                              "value": {
                                "text": {
                                  "$id": "357",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "142"
                                  },
                                  "value": "This is a test"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "$id": "358",
                "kind": "http",
                "name": "Translate Text with minimum properties",
                "description": "Translate Text with minimum properties",
                "filePath": "3.0/Translate_MinimumSet_Gen.json",
                "parameters": [
                  {
                    "parameter": {
                      "$ref": "285"
                    },
                    "value": {
                      "$id": "359",
                      "kind": "array",
                      "type": {
                        "$ref": "286"
                      },
                      "value": [
                        {
                          "$id": "360",
                          "kind": "string",
                          "type": {
                            "$ref": "287"
                          },
                          "value": "fmlxpuepn"
                        }
                      ]
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "307"
                    },
                    "value": {
                      "$id": "361",
                      "kind": "string",
                      "type": {
                        "$ref": "308"
                      },
                      "value": "3.0"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "312"
                    },
                    "value": {
                      "$id": "362",
                      "kind": "array",
                      "type": {
                        "$ref": "313"
                      },
                      "value": [
                        {
                          "$id": "363",
                          "kind": "model",
                          "type": {
                            "$ref": "106"
                          },
                          "value": {
                            "text": {
                              "$id": "364",
                              "kind": "string",
                              "type": {
                                "$ref": "108"
                              },
                              "value": "This is a test."
                            }
                          }
                        }
                      ]
                    }
                  }
                ],
                "responses": [
                  {
                    "response": {
                      "statusCodes": [
                        200
                      ],
                      "bodyType": {
                        "$ref": "314"
                      },
                      "headers": [
                        {
                          "name": "requestId",
                          "nameInResponse": "X-RequestId",
                          "doc": "Value generated by the service to identify the request. It is used for troubleshooting purposes.",
                          "type": {
                            "$ref": "315"
                          }
                        },
                        {
                          "name": "mtSystem",
                          "nameInResponse": "x-mt-system",
                          "doc": "Specifies the system type that was used for translation for each 'to' language requested for translation. \nThe value is a comma-separated list of strings. Each string indicates a type:\n\n* Custom - Request includes a custom system and at least one custom system was used during translation.\n* Team - All other requests",
                          "type": {
                            "$ref": "316"
                          }
                        },
                        {
                          "name": "meteredUsage",
                          "nameInResponse": "x-metered-usage",
                          "doc": "Specifies consumption (the number of characters for which the user will be charged) for the translation \njob request. For example, if the word \"Hello\" is translated from English (en) to French (fr), \nthis field will return the value '5'.",
                          "type": {
                            "$ref": "317"
                          }
                        }
                      ],
                      "isErrorResponse": false,
                      "contentTypes": [
                        "application/json"
                      ]
                    },
                    "statusCode": 200,
                    "bodyValue": {
                      "$id": "365",
                      "kind": "array",
                      "type": {
                        "$ref": "314"
                      },
                      "value": [
                        {
                          "$id": "366",
                          "kind": "model",
                          "type": {
                            "$ref": "109"
                          },
                          "value": {
                            "translations": {
                              "$id": "367",
                              "kind": "array",
                              "type": {
                                "$ref": "117"
                              },
                              "value": [
                                {
                                  "$id": "368",
                                  "kind": "model",
                                  "type": {
                                    "$ref": "118"
                                  },
                                  "value": {
                                    "text": {
                                      "$id": "369",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "122"
                                      },
                                      "value": "Tohle je test."
                                    },
                                    "to": {
                                      "$id": "370",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "120"
                                      },
                                      "value": "cs"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "$id": "371",
              "name": "clientTraceId",
              "nameInRequest": "X-ClientTraceId",
              "doc": "A client-generated GUID to uniquely identify the request.",
              "type": {
                "$id": "372",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "373",
              "name": "to",
              "nameInRequest": "to",
              "doc": "Specifies the language of the output text. The target language must be one of the supported languages included \nin the translation scope. For example, use to=de to translate to German.\nIt's possible to translate to multiple languages simultaneously by repeating the parameter in the query string. \nFor example, use to=de&to=it to translate to German and Italian.",
              "type": {
                "$ref": "286"
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": true,
              "isRequired": true,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "374",
              "name": "from",
              "nameInRequest": "from",
              "doc": "Specifies the language of the input text. Find which languages are available to translate from by \nlooking up supported languages using the translation scope. If the from parameter isn't specified, \nautomatic language detection is applied to determine the source language.\n\nYou must use the from parameter rather than autodetection when using the dynamic dictionary feature. \nNote: the dynamic dictionary feature is case-sensitive.",
              "type": {
                "$id": "375",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "376",
              "name": "textType",
              "nameInRequest": "textType",
              "doc": "Defines whether the text being translated is plain text or HTML text. Any HTML needs to be a well-formed, \ncomplete element. Possible values are: plain (default) or html.",
              "type": {
                "$ref": "5"
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "377",
              "name": "category",
              "nameInRequest": "category",
              "doc": "A string specifying the category (domain) of the translation. This parameter is used to get translations \nfrom a customized system built with Custom Translator. Add the Category ID from your Custom Translator \nproject details to this parameter to use your deployed customized system. Default value is: general.",
              "type": {
                "$id": "378",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "379",
              "name": "profanityAction",
              "nameInRequest": "profanityAction",
              "doc": "Specifies how profanities should be treated in translations.\nPossible values are: NoAction (default), Marked or Deleted.",
              "type": {
                "$ref": "9"
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "380",
              "name": "profanityMarker",
              "nameInRequest": "profanityMarker",
              "doc": "Specifies how profanities should be marked in translations.\nPossible values are: Asterisk (default) or Tag. ",
              "type": {
                "$ref": "14"
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "381",
              "name": "includeAlignment",
              "nameInRequest": "includeAlignment",
              "doc": "Specifies whether to include alignment projection from source text to translated text.\nPossible values are: true or false (default).",
              "type": {
                "$id": "382",
                "kind": "boolean",
                "name": "boolean",
                "crossLanguageDefinitionId": "TypeSpec.boolean",
                "decorators": []
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "383",
              "name": "includeSentenceLength",
              "nameInRequest": "includeSentenceLength",
              "doc": "Specifies whether to include sentence boundaries for the input text and the translated text.\nPossible values are: true or false (default).",
              "type": {
                "$id": "384",
                "kind": "boolean",
                "name": "boolean",
                "crossLanguageDefinitionId": "TypeSpec.boolean",
                "decorators": []
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "385",
              "name": "suggestedFrom",
              "nameInRequest": "suggestedFrom",
              "doc": "Specifies a fallback language if the language of the input text can't be identified. \nLanguage autodetection is applied when the from parameter is omitted. If detection fails, \nthe suggestedFrom language will be assumed.",
              "type": {
                "$id": "386",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "387",
              "name": "fromScript",
              "nameInRequest": "fromScript",
              "doc": "Specifies the script of the input text.",
              "type": {
                "$id": "388",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "389",
              "name": "toScript",
              "nameInRequest": "toScript",
              "doc": "Specifies the script of the translated text.",
              "type": {
                "$id": "390",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "391",
              "name": "allowFallback",
              "nameInRequest": "allowFallback",
              "doc": "Specifies that the service is allowed to fall back to a general system when a custom system doesn't exist. \nPossible values are: true (default) or false.\n\nallowFallback=false specifies that the translation should only use systems trained for the category specified \nby the request. If a translation for language X to language Y requires chaining through a pivot language E, \nthen all the systems in the chain (X → E and E → Y) will need to be custom and have the same category. \nIf no system is found with the specific category, the request will return a 400 status code. allowFallback=true \nspecifies that the service is allowed to fall back to a general system when a custom system doesn't exist.",
              "type": {
                "$id": "392",
                "kind": "boolean",
                "name": "boolean",
                "crossLanguageDefinitionId": "TypeSpec.boolean",
                "decorators": []
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "393",
              "name": "body",
              "nameInRequest": "body",
              "doc": "Defines the content of the request",
              "type": {
                "$ref": "313"
              },
              "location": "Body",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "394",
              "name": "contentType",
              "nameInRequest": "Content-Type",
              "doc": "Body parameter's content type. Known values are application/json",
              "type": {
                "$ref": "23"
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": true,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Constant",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "395",
              "name": "accept",
              "nameInRequest": "Accept",
              "type": {
                "$ref": "25"
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Constant",
              "decorators": [],
              "skipUrlEncoding": false
            }
          ],
          "response": {
            "type": {
              "$ref": "314"
            }
          },
          "isOverride": false,
          "generateConvenient": true,
          "generateProtocol": true,
          "crossLanguageDefinitionId": "TextTranslation.translate"
        },
        {
          "$id": "396",
          "kind": "basic",
          "name": "transliterate",
          "accessibility": "public",
          "apiVersions": [
            "3.0"
          ],
          "doc": "Transliterate Text",
          "summary": "Transliterate Text",
          "operation": {
            "$id": "397",
            "name": "transliterate",
            "resourceName": "TextTranslation",
            "summary": "Transliterate Text",
            "doc": "Transliterate Text",
            "accessibility": "public",
            "parameters": [
              {
                "$id": "398",
                "name": "clientTraceId",
                "nameInRequest": "X-ClientTraceId",
                "doc": "A client-generated GUID to uniquely identify the request.",
                "type": {
                  "$id": "399",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "400",
                "name": "language",
                "nameInRequest": "language",
                "doc": "Specifies the language of the text to convert from one script to another. \nPossible languages are listed in the transliteration scope obtained by querying the service \nfor its supported languages.",
                "type": {
                  "$id": "401",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "402",
                "name": "fromScript",
                "nameInRequest": "fromScript",
                "doc": "Specifies the script used by the input text. Look up supported languages using the transliteration scope,\nto find input scripts available for the selected language.",
                "type": {
                  "$id": "403",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "404",
                "name": "toScript",
                "nameInRequest": "toScript",
                "doc": "Specifies the output script. Look up supported languages using the transliteration scope, to find output \nscripts available for the selected combination of input language and input script.",
                "type": {
                  "$id": "405",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "406",
                "name": "apiVersion",
                "nameInRequest": "api-version",
                "doc": "Mandatory API version parameter",
                "type": {
                  "$id": "407",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": true,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Client",
                "defaultValue": {
                  "type": {
                    "$id": "408",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string"
                  },
                  "value": "3.0"
                },
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "409",
                "name": "contentType",
                "nameInRequest": "Content-Type",
                "doc": "Body parameter's content type. Known values are application/json",
                "type": {
                  "$ref": "27"
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": true,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Constant",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "410",
                "name": "accept",
                "nameInRequest": "Accept",
                "type": {
                  "$ref": "29"
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Constant",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "411",
                "name": "body",
                "nameInRequest": "body",
                "doc": "Defines the content of the request",
                "type": {
                  "$ref": "313"
                },
                "location": "Body",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              }
            ],
            "responses": [
              {
                "statusCodes": [
                  200
                ],
                "bodyType": {
                  "$id": "412",
                  "kind": "array",
                  "name": "ArrayTransliteratedText",
                  "valueType": {
                    "$ref": "124"
                  },
                  "crossLanguageDefinitionId": "TypeSpec.Array",
                  "decorators": []
                },
                "headers": [
                  {
                    "name": "requestId",
                    "nameInResponse": "X-RequestId",
                    "doc": "Value generated by the service to identify the request. It is used for troubleshooting purposes.",
                    "type": {
                      "$id": "413",
                      "kind": "string",
                      "name": "string",
                      "crossLanguageDefinitionId": "TypeSpec.string",
                      "decorators": []
                    }
                  }
                ],
                "isErrorResponse": false,
                "contentTypes": [
                  "application/json"
                ]
              }
            ],
            "httpMethod": "POST",
            "uri": "{Endpoint}",
            "path": "/transliterate",
            "requestMediaTypes": [
              "application/json"
            ],
            "bufferResponse": true,
            "generateProtocolMethod": true,
            "generateConvenienceMethod": true,
            "crossLanguageDefinitionId": "TextTranslation.transliterate",
            "decorators": [],
            "examples": [
              {
                "$id": "414",
                "kind": "http",
                "name": "Transliterate Text",
                "description": "Transliterate Text",
                "filePath": "3.0/Transliterate_MaximumSet_Gen.json",
                "parameters": [
                  {
                    "parameter": {
                      "$ref": "398"
                    },
                    "value": {
                      "$id": "415",
                      "kind": "string",
                      "type": {
                        "$ref": "399"
                      },
                      "value": "dzncrimwmvtwjnheh"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "400"
                    },
                    "value": {
                      "$id": "416",
                      "kind": "string",
                      "type": {
                        "$ref": "401"
                      },
                      "value": "zh-Hans"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "402"
                    },
                    "value": {
                      "$id": "417",
                      "kind": "string",
                      "type": {
                        "$ref": "403"
                      },
                      "value": "Hans"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "404"
                    },
                    "value": {
                      "$id": "418",
                      "kind": "string",
                      "type": {
                        "$ref": "405"
                      },
                      "value": "Latn"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "406"
                    },
                    "value": {
                      "$id": "419",
                      "kind": "string",
                      "type": {
                        "$ref": "407"
                      },
                      "value": "3.0"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "411"
                    },
                    "value": {
                      "$id": "420",
                      "kind": "array",
                      "type": {
                        "$ref": "313"
                      },
                      "value": [
                        {
                          "$id": "421",
                          "kind": "model",
                          "type": {
                            "$ref": "106"
                          },
                          "value": {
                            "text": {
                              "$id": "422",
                              "kind": "string",
                              "type": {
                                "$ref": "108"
                              },
                              "value": "这是个测试。"
                            }
                          }
                        }
                      ]
                    }
                  }
                ],
                "responses": [
                  {
                    "response": {
                      "statusCodes": [
                        200
                      ],
                      "bodyType": {
                        "$ref": "412"
                      },
                      "headers": [
                        {
                          "name": "requestId",
                          "nameInResponse": "X-RequestId",
                          "doc": "Value generated by the service to identify the request. It is used for troubleshooting purposes.",
                          "type": {
                            "$ref": "413"
                          }
                        }
                      ],
                      "isErrorResponse": false,
                      "contentTypes": [
                        "application/json"
                      ]
                    },
                    "statusCode": 200,
                    "bodyValue": {
                      "$id": "423",
                      "kind": "array",
                      "type": {
                        "$ref": "412"
                      },
                      "value": [
                        {
                          "$id": "424",
                          "kind": "model",
                          "type": {
                            "$ref": "124"
                          },
                          "value": {
                            "text": {
                              "$id": "425",
                              "kind": "string",
                              "type": {
                                "$ref": "126"
                              },
                              "value": "zhè shì gè cè shì。"
                            },
                            "script": {
                              "$id": "426",
                              "kind": "string",
                              "type": {
                                "$ref": "128"
                              },
                              "value": "Latn"
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "$id": "427",
                "kind": "http",
                "name": "Transliterate Text with minimum properties",
                "description": "Transliterate Text with minimum properties",
                "filePath": "3.0/Transliterate_MinimumSet_Gen.json",
                "parameters": [
                  {
                    "parameter": {
                      "$ref": "400"
                    },
                    "value": {
                      "$id": "428",
                      "kind": "string",
                      "type": {
                        "$ref": "401"
                      },
                      "value": "zh-Hans"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "402"
                    },
                    "value": {
                      "$id": "429",
                      "kind": "string",
                      "type": {
                        "$ref": "403"
                      },
                      "value": "Hans"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "404"
                    },
                    "value": {
                      "$id": "430",
                      "kind": "string",
                      "type": {
                        "$ref": "405"
                      },
                      "value": "Latn"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "406"
                    },
                    "value": {
                      "$id": "431",
                      "kind": "string",
                      "type": {
                        "$ref": "407"
                      },
                      "value": "3.0"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "411"
                    },
                    "value": {
                      "$id": "432",
                      "kind": "array",
                      "type": {
                        "$ref": "313"
                      },
                      "value": [
                        {
                          "$id": "433",
                          "kind": "model",
                          "type": {
                            "$ref": "106"
                          },
                          "value": {
                            "text": {
                              "$id": "434",
                              "kind": "string",
                              "type": {
                                "$ref": "108"
                              },
                              "value": "这是个测试。"
                            }
                          }
                        }
                      ]
                    }
                  }
                ],
                "responses": [
                  {
                    "response": {
                      "statusCodes": [
                        200
                      ],
                      "bodyType": {
                        "$ref": "412"
                      },
                      "headers": [
                        {
                          "name": "requestId",
                          "nameInResponse": "X-RequestId",
                          "doc": "Value generated by the service to identify the request. It is used for troubleshooting purposes.",
                          "type": {
                            "$ref": "413"
                          }
                        }
                      ],
                      "isErrorResponse": false,
                      "contentTypes": [
                        "application/json"
                      ]
                    },
                    "statusCode": 200,
                    "bodyValue": {
                      "$id": "435",
                      "kind": "array",
                      "type": {
                        "$ref": "412"
                      },
                      "value": [
                        {
                          "$id": "436",
                          "kind": "model",
                          "type": {
                            "$ref": "124"
                          },
                          "value": {
                            "text": {
                              "$id": "437",
                              "kind": "string",
                              "type": {
                                "$ref": "126"
                              },
                              "value": "zhè shì gè cè shì。"
                            },
                            "script": {
                              "$id": "438",
                              "kind": "string",
                              "type": {
                                "$ref": "128"
                              },
                              "value": "Latn"
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "$id": "439",
              "name": "clientTraceId",
              "nameInRequest": "X-ClientTraceId",
              "doc": "A client-generated GUID to uniquely identify the request.",
              "type": {
                "$id": "440",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "441",
              "name": "language",
              "nameInRequest": "language",
              "doc": "Specifies the language of the text to convert from one script to another. \nPossible languages are listed in the transliteration scope obtained by querying the service \nfor its supported languages.",
              "type": {
                "$id": "442",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "443",
              "name": "fromScript",
              "nameInRequest": "fromScript",
              "doc": "Specifies the script used by the input text. Look up supported languages using the transliteration scope,\nto find input scripts available for the selected language.",
              "type": {
                "$id": "444",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "445",
              "name": "toScript",
              "nameInRequest": "toScript",
              "doc": "Specifies the output script. Look up supported languages using the transliteration scope, to find output \nscripts available for the selected combination of input language and input script.",
              "type": {
                "$id": "446",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "447",
              "name": "body",
              "nameInRequest": "body",
              "doc": "Defines the content of the request",
              "type": {
                "$ref": "313"
              },
              "location": "Body",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "448",
              "name": "contentType",
              "nameInRequest": "Content-Type",
              "doc": "Body parameter's content type. Known values are application/json",
              "type": {
                "$ref": "27"
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": true,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Constant",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "449",
              "name": "accept",
              "nameInRequest": "Accept",
              "type": {
                "$ref": "29"
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Constant",
              "decorators": [],
              "skipUrlEncoding": false
            }
          ],
          "response": {
            "type": {
              "$ref": "412"
            }
          },
          "isOverride": false,
          "generateConvenient": true,
          "generateProtocol": true,
          "crossLanguageDefinitionId": "TextTranslation.transliterate"
        },
        {
          "$id": "450",
          "kind": "basic",
          "name": "findSentenceBoundaries",
          "accessibility": "public",
          "apiVersions": [
            "3.0"
          ],
          "doc": "Find Sentence Boundaries",
          "summary": "Find Sentence Boundaries",
          "operation": {
            "$id": "451",
            "name": "findSentenceBoundaries",
            "resourceName": "TextTranslation",
            "summary": "Find Sentence Boundaries",
            "doc": "Find Sentence Boundaries",
            "accessibility": "public",
            "parameters": [
              {
                "$id": "452",
                "name": "clientTraceId",
                "nameInRequest": "X-ClientTraceId",
                "doc": "A client-generated GUID to uniquely identify the request.",
                "type": {
                  "$id": "453",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "454",
                "name": "language",
                "nameInRequest": "language",
                "doc": "Language tag identifying the language of the input text. \nIf a code isn't specified, automatic language detection will be applied.",
                "type": {
                  "$id": "455",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "456",
                "name": "script",
                "nameInRequest": "script",
                "doc": "Script tag identifying the script used by the input text. \nIf a script isn't specified, the default script of the language will be assumed.",
                "type": {
                  "$id": "457",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "458",
                "name": "apiVersion",
                "nameInRequest": "api-version",
                "doc": "Mandatory API version parameter",
                "type": {
                  "$id": "459",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": true,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Client",
                "defaultValue": {
                  "type": {
                    "$id": "460",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string"
                  },
                  "value": "3.0"
                },
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "461",
                "name": "contentType",
                "nameInRequest": "Content-Type",
                "doc": "Body parameter's content type. Known values are application/json",
                "type": {
                  "$ref": "31"
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": true,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Constant",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "462",
                "name": "accept",
                "nameInRequest": "Accept",
                "type": {
                  "$ref": "33"
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Constant",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "463",
                "name": "body",
                "nameInRequest": "body",
                "doc": "Defines the content of the request",
                "type": {
                  "$ref": "313"
                },
                "location": "Body",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              }
            ],
            "responses": [
              {
                "statusCodes": [
                  200
                ],
                "bodyType": {
                  "$id": "464",
                  "kind": "array",
                  "name": "ArrayBreakSentenceItem",
                  "valueType": {
                    "$ref": "143"
                  },
                  "crossLanguageDefinitionId": "TypeSpec.Array",
                  "decorators": []
                },
                "headers": [
                  {
                    "name": "requestId",
                    "nameInResponse": "X-RequestId",
                    "doc": "Value generated by the service to identify the request. It is used for troubleshooting purposes.",
                    "type": {
                      "$id": "465",
                      "kind": "string",
                      "name": "string",
                      "crossLanguageDefinitionId": "TypeSpec.string",
                      "decorators": []
                    }
                  }
                ],
                "isErrorResponse": false,
                "contentTypes": [
                  "application/json"
                ]
              }
            ],
            "httpMethod": "POST",
            "uri": "{Endpoint}",
            "path": "/breaksentence",
            "requestMediaTypes": [
              "application/json"
            ],
            "bufferResponse": true,
            "generateProtocolMethod": true,
            "generateConvenienceMethod": true,
            "crossLanguageDefinitionId": "TextTranslation.findSentenceBoundaries",
            "decorators": [],
            "examples": [
              {
                "$id": "466",
                "kind": "http",
                "name": "Find Sentence Boundaries",
                "description": "Find Sentence Boundaries",
                "filePath": "3.0/FindSentenceBoundaries_MaximumSet_Gen.json",
                "parameters": [
                  {
                    "parameter": {
                      "$ref": "452"
                    },
                    "value": {
                      "$id": "467",
                      "kind": "string",
                      "type": {
                        "$ref": "453"
                      },
                      "value": "svun"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "454"
                    },
                    "value": {
                      "$id": "468",
                      "kind": "string",
                      "type": {
                        "$ref": "455"
                      },
                      "value": "en"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "456"
                    },
                    "value": {
                      "$id": "469",
                      "kind": "string",
                      "type": {
                        "$ref": "457"
                      },
                      "value": "Latn"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "458"
                    },
                    "value": {
                      "$id": "470",
                      "kind": "string",
                      "type": {
                        "$ref": "459"
                      },
                      "value": "3.0"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "463"
                    },
                    "value": {
                      "$id": "471",
                      "kind": "array",
                      "type": {
                        "$ref": "313"
                      },
                      "value": [
                        {
                          "$id": "472",
                          "kind": "model",
                          "type": {
                            "$ref": "106"
                          },
                          "value": {
                            "text": {
                              "$id": "473",
                              "kind": "string",
                              "type": {
                                "$ref": "108"
                              },
                              "value": "How are you? I am fine. What did you do today?"
                            }
                          }
                        }
                      ]
                    }
                  }
                ],
                "responses": [
                  {
                    "response": {
                      "statusCodes": [
                        200
                      ],
                      "bodyType": {
                        "$ref": "464"
                      },
                      "headers": [
                        {
                          "name": "requestId",
                          "nameInResponse": "X-RequestId",
                          "doc": "Value generated by the service to identify the request. It is used for troubleshooting purposes.",
                          "type": {
                            "$ref": "465"
                          }
                        }
                      ],
                      "isErrorResponse": false,
                      "contentTypes": [
                        "application/json"
                      ]
                    },
                    "statusCode": 200,
                    "bodyValue": {
                      "$id": "474",
                      "kind": "array",
                      "type": {
                        "$ref": "464"
                      },
                      "value": [
                        {
                          "$id": "475",
                          "kind": "model",
                          "type": {
                            "$ref": "143"
                          },
                          "value": {
                            "sentLen": {
                              "$id": "476",
                              "kind": "array",
                              "type": {
                                "$ref": "136"
                              },
                              "value": [
                                {
                                  "$id": "477",
                                  "kind": "number",
                                  "type": {
                                    "$ref": "137"
                                  },
                                  "value": 13
                                },
                                {
                                  "$id": "478",
                                  "kind": "number",
                                  "type": {
                                    "$ref": "137"
                                  },
                                  "value": 11
                                },
                                {
                                  "$id": "479",
                                  "kind": "number",
                                  "type": {
                                    "$ref": "137"
                                  },
                                  "value": 22
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "$id": "480",
                "kind": "http",
                "name": "Find Sentence Boundaries with minimum properties",
                "description": "Find Sentence Boundaries with minimum properties",
                "filePath": "3.0/FindSentenceBoundaries_MinimumSet_Gen.json",
                "parameters": [
                  {
                    "parameter": {
                      "$ref": "458"
                    },
                    "value": {
                      "$id": "481",
                      "kind": "string",
                      "type": {
                        "$ref": "459"
                      },
                      "value": "3.0"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "463"
                    },
                    "value": {
                      "$id": "482",
                      "kind": "array",
                      "type": {
                        "$ref": "313"
                      },
                      "value": [
                        {
                          "$id": "483",
                          "kind": "model",
                          "type": {
                            "$ref": "106"
                          },
                          "value": {
                            "text": {
                              "$id": "484",
                              "kind": "string",
                              "type": {
                                "$ref": "108"
                              },
                              "value": "How are you? I am fine. What did you do today?"
                            }
                          }
                        }
                      ]
                    }
                  }
                ],
                "responses": [
                  {
                    "response": {
                      "statusCodes": [
                        200
                      ],
                      "bodyType": {
                        "$ref": "464"
                      },
                      "headers": [
                        {
                          "name": "requestId",
                          "nameInResponse": "X-RequestId",
                          "doc": "Value generated by the service to identify the request. It is used for troubleshooting purposes.",
                          "type": {
                            "$ref": "465"
                          }
                        }
                      ],
                      "isErrorResponse": false,
                      "contentTypes": [
                        "application/json"
                      ]
                    },
                    "statusCode": 200,
                    "bodyValue": {
                      "$id": "485",
                      "kind": "array",
                      "type": {
                        "$ref": "464"
                      },
                      "value": [
                        {
                          "$id": "486",
                          "kind": "model",
                          "type": {
                            "$ref": "143"
                          },
                          "value": {
                            "detectedLanguage": {
                              "$id": "487",
                              "kind": "model",
                              "type": {
                                "$ref": "111"
                              },
                              "value": {
                                "language": {
                                  "$id": "488",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "113"
                                  },
                                  "value": "en"
                                },
                                "score": {
                                  "$id": "489",
                                  "kind": "number",
                                  "type": {
                                    "$ref": "115"
                                  },
                                  "value": 1
                                }
                              }
                            },
                            "sentLen": {
                              "$id": "490",
                              "kind": "array",
                              "type": {
                                "$ref": "136"
                              },
                              "value": [
                                {
                                  "$id": "491",
                                  "kind": "number",
                                  "type": {
                                    "$ref": "137"
                                  },
                                  "value": 13
                                },
                                {
                                  "$id": "492",
                                  "kind": "number",
                                  "type": {
                                    "$ref": "137"
                                  },
                                  "value": 11
                                },
                                {
                                  "$id": "493",
                                  "kind": "number",
                                  "type": {
                                    "$ref": "137"
                                  },
                                  "value": 22
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "$id": "494",
              "name": "clientTraceId",
              "nameInRequest": "X-ClientTraceId",
              "doc": "A client-generated GUID to uniquely identify the request.",
              "type": {
                "$id": "495",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "496",
              "name": "language",
              "nameInRequest": "language",
              "doc": "Language tag identifying the language of the input text. \nIf a code isn't specified, automatic language detection will be applied.",
              "type": {
                "$id": "497",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "498",
              "name": "script",
              "nameInRequest": "script",
              "doc": "Script tag identifying the script used by the input text. \nIf a script isn't specified, the default script of the language will be assumed.",
              "type": {
                "$id": "499",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "500",
              "name": "body",
              "nameInRequest": "body",
              "doc": "Defines the content of the request",
              "type": {
                "$ref": "313"
              },
              "location": "Body",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "501",
              "name": "contentType",
              "nameInRequest": "Content-Type",
              "doc": "Body parameter's content type. Known values are application/json",
              "type": {
                "$ref": "31"
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": true,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Constant",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "502",
              "name": "accept",
              "nameInRequest": "Accept",
              "type": {
                "$ref": "33"
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Constant",
              "decorators": [],
              "skipUrlEncoding": false
            }
          ],
          "response": {
            "type": {
              "$ref": "464"
            }
          },
          "isOverride": false,
          "generateConvenient": true,
          "generateProtocol": true,
          "crossLanguageDefinitionId": "TextTranslation.findSentenceBoundaries"
        },
        {
          "$id": "503",
          "kind": "basic",
          "name": "lookupDictionaryEntries",
          "accessibility": "public",
          "apiVersions": [
            "3.0"
          ],
          "doc": "Lookup Dictionary Entries",
          "summary": "Lookup Dictionary Entries",
          "operation": {
            "$id": "504",
            "name": "lookupDictionaryEntries",
            "resourceName": "TextTranslation",
            "summary": "Lookup Dictionary Entries",
            "doc": "Lookup Dictionary Entries",
            "accessibility": "public",
            "parameters": [
              {
                "$id": "505",
                "name": "clientTraceId",
                "nameInRequest": "X-ClientTraceId",
                "doc": "A client-generated GUID to uniquely identify the request.",
                "type": {
                  "$id": "506",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "507",
                "name": "from",
                "nameInRequest": "from",
                "doc": "Specifies the language of the input text.\nThe source language must be one of the supported languages included in the dictionary scope.",
                "type": {
                  "$id": "508",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "509",
                "name": "to",
                "nameInRequest": "to",
                "doc": "Specifies the language of the output text.\nThe target language must be one of the supported languages included in the dictionary scope.",
                "type": {
                  "$id": "510",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "511",
                "name": "apiVersion",
                "nameInRequest": "api-version",
                "doc": "Mandatory API version parameter",
                "type": {
                  "$id": "512",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": true,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Client",
                "defaultValue": {
                  "type": {
                    "$id": "513",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string"
                  },
                  "value": "3.0"
                },
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "514",
                "name": "contentType",
                "nameInRequest": "Content-Type",
                "doc": "Body parameter's content type. Known values are application/json",
                "type": {
                  "$ref": "35"
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": true,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Constant",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "515",
                "name": "accept",
                "nameInRequest": "Accept",
                "type": {
                  "$ref": "37"
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Constant",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "516",
                "name": "body",
                "nameInRequest": "body",
                "doc": "Defines the content of the request",
                "type": {
                  "$ref": "313"
                },
                "location": "Body",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              }
            ],
            "responses": [
              {
                "statusCodes": [
                  200
                ],
                "bodyType": {
                  "$id": "517",
                  "kind": "array",
                  "name": "ArrayDictionaryLookupItem",
                  "valueType": {
                    "$ref": "146"
                  },
                  "crossLanguageDefinitionId": "TypeSpec.Array",
                  "decorators": []
                },
                "headers": [
                  {
                    "name": "requestId",
                    "nameInResponse": "X-RequestId",
                    "doc": "Value generated by the service to identify the request. It is used for troubleshooting purposes.",
                    "type": {
                      "$id": "518",
                      "kind": "string",
                      "name": "string",
                      "crossLanguageDefinitionId": "TypeSpec.string",
                      "decorators": []
                    }
                  }
                ],
                "isErrorResponse": false,
                "contentTypes": [
                  "application/json"
                ]
              }
            ],
            "httpMethod": "POST",
            "uri": "{Endpoint}",
            "path": "/dictionary/lookup",
            "requestMediaTypes": [
              "application/json"
            ],
            "bufferResponse": true,
            "generateProtocolMethod": true,
            "generateConvenienceMethod": true,
            "crossLanguageDefinitionId": "TextTranslation.lookupDictionaryEntries",
            "decorators": [],
            "examples": [
              {
                "$id": "519",
                "kind": "http",
                "name": "Lookup Dictionary Entries",
                "description": "Lookup Dictionary Entries",
                "filePath": "3.0/LookupDictionaryEntries_MaximumSet_Gen.json",
                "parameters": [
                  {
                    "parameter": {
                      "$ref": "505"
                    },
                    "value": {
                      "$id": "520",
                      "kind": "string",
                      "type": {
                        "$ref": "506"
                      },
                      "value": "yqst"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "507"
                    },
                    "value": {
                      "$id": "521",
                      "kind": "string",
                      "type": {
                        "$ref": "508"
                      },
                      "value": "en"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "509"
                    },
                    "value": {
                      "$id": "522",
                      "kind": "string",
                      "type": {
                        "$ref": "510"
                      },
                      "value": "es"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "511"
                    },
                    "value": {
                      "$id": "523",
                      "kind": "string",
                      "type": {
                        "$ref": "512"
                      },
                      "value": "3.0"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "516"
                    },
                    "value": {
                      "$id": "524",
                      "kind": "array",
                      "type": {
                        "$ref": "313"
                      },
                      "value": [
                        {
                          "$id": "525",
                          "kind": "model",
                          "type": {
                            "$ref": "106"
                          },
                          "value": {
                            "text": {
                              "$id": "526",
                              "kind": "string",
                              "type": {
                                "$ref": "108"
                              },
                              "value": "fly"
                            }
                          }
                        }
                      ]
                    }
                  }
                ],
                "responses": [
                  {
                    "response": {
                      "statusCodes": [
                        200
                      ],
                      "bodyType": {
                        "$ref": "517"
                      },
                      "headers": [
                        {
                          "name": "requestId",
                          "nameInResponse": "X-RequestId",
                          "doc": "Value generated by the service to identify the request. It is used for troubleshooting purposes.",
                          "type": {
                            "$ref": "518"
                          }
                        }
                      ],
                      "isErrorResponse": false,
                      "contentTypes": [
                        "application/json"
                      ]
                    },
                    "statusCode": 200,
                    "bodyValue": {
                      "$id": "527",
                      "kind": "array",
                      "type": {
                        "$ref": "517"
                      },
                      "value": [
                        {
                          "$id": "528",
                          "kind": "model",
                          "type": {
                            "$ref": "146"
                          },
                          "value": {
                            "normalizedSource": {
                              "$id": "529",
                              "kind": "string",
                              "type": {
                                "$ref": "148"
                              },
                              "value": "fly"
                            },
                            "displaySource": {
                              "$id": "530",
                              "kind": "string",
                              "type": {
                                "$ref": "150"
                              },
                              "value": "fly"
                            },
                            "translations": {
                              "$id": "531",
                              "kind": "array",
                              "type": {
                                "$ref": "152"
                              },
                              "value": [
                                {
                                  "$id": "532",
                                  "kind": "model",
                                  "type": {
                                    "$ref": "153"
                                  },
                                  "value": {
                                    "normalizedTarget": {
                                      "$id": "533",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "155"
                                      },
                                      "value": "volar"
                                    },
                                    "displayTarget": {
                                      "$id": "534",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "157"
                                      },
                                      "value": "volar"
                                    },
                                    "posTag": {
                                      "$id": "535",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "159"
                                      },
                                      "value": "VERB"
                                    },
                                    "confidence": {
                                      "$id": "536",
                                      "kind": "number",
                                      "type": {
                                        "$ref": "161"
                                      },
                                      "value": 0.4081
                                    },
                                    "prefixWord": {
                                      "$id": "537",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "163"
                                      },
                                      "value": ""
                                    },
                                    "backTranslations": {
                                      "$id": "538",
                                      "kind": "array",
                                      "type": {
                                        "$ref": "165"
                                      },
                                      "value": [
                                        {
                                          "$id": "539",
                                          "kind": "model",
                                          "type": {
                                            "$ref": "166"
                                          },
                                          "value": {
                                            "normalizedText": {
                                              "$id": "540",
                                              "kind": "string",
                                              "type": {
                                                "$ref": "168"
                                              },
                                              "value": "fly"
                                            },
                                            "displayText": {
                                              "$id": "541",
                                              "kind": "string",
                                              "type": {
                                                "$ref": "170"
                                              },
                                              "value": "fly"
                                            },
                                            "numExamples": {
                                              "$id": "542",
                                              "kind": "number",
                                              "type": {
                                                "$ref": "172"
                                              },
                                              "value": 15
                                            },
                                            "frequencyCount": {
                                              "$id": "543",
                                              "kind": "number",
                                              "type": {
                                                "$ref": "174"
                                              },
                                              "value": 4637
                                            }
                                          }
                                        },
                                        {
                                          "$id": "544",
                                          "kind": "model",
                                          "type": {
                                            "$ref": "166"
                                          },
                                          "value": {
                                            "normalizedText": {
                                              "$id": "545",
                                              "kind": "string",
                                              "type": {
                                                "$ref": "168"
                                              },
                                              "value": "flying"
                                            },
                                            "displayText": {
                                              "$id": "546",
                                              "kind": "string",
                                              "type": {
                                                "$ref": "170"
                                              },
                                              "value": "flying"
                                            },
                                            "numExamples": {
                                              "$id": "547",
                                              "kind": "number",
                                              "type": {
                                                "$ref": "172"
                                              },
                                              "value": 15
                                            },
                                            "frequencyCount": {
                                              "$id": "548",
                                              "kind": "number",
                                              "type": {
                                                "$ref": "174"
                                              },
                                              "value": 1365
                                            }
                                          }
                                        },
                                        {
                                          "$id": "549",
                                          "kind": "model",
                                          "type": {
                                            "$ref": "166"
                                          },
                                          "value": {
                                            "normalizedText": {
                                              "$id": "550",
                                              "kind": "string",
                                              "type": {
                                                "$ref": "168"
                                              },
                                              "value": "blow"
                                            },
                                            "displayText": {
                                              "$id": "551",
                                              "kind": "string",
                                              "type": {
                                                "$ref": "170"
                                              },
                                              "value": "blow"
                                            },
                                            "numExamples": {
                                              "$id": "552",
                                              "kind": "number",
                                              "type": {
                                                "$ref": "172"
                                              },
                                              "value": 15
                                            },
                                            "frequencyCount": {
                                              "$id": "553",
                                              "kind": "number",
                                              "type": {
                                                "$ref": "174"
                                              },
                                              "value": 503
                                            }
                                          }
                                        },
                                        {
                                          "$id": "554",
                                          "kind": "model",
                                          "type": {
                                            "$ref": "166"
                                          },
                                          "value": {
                                            "normalizedText": {
                                              "$id": "555",
                                              "kind": "string",
                                              "type": {
                                                "$ref": "168"
                                              },
                                              "value": "flight"
                                            },
                                            "displayText": {
                                              "$id": "556",
                                              "kind": "string",
                                              "type": {
                                                "$ref": "170"
                                              },
                                              "value": "flight"
                                            },
                                            "numExamples": {
                                              "$id": "557",
                                              "kind": "number",
                                              "type": {
                                                "$ref": "172"
                                              },
                                              "value": 15
                                            },
                                            "frequencyCount": {
                                              "$id": "558",
                                              "kind": "number",
                                              "type": {
                                                "$ref": "174"
                                              },
                                              "value": 135
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "$id": "559",
                                  "kind": "model",
                                  "type": {
                                    "$ref": "153"
                                  },
                                  "value": {
                                    "normalizedTarget": {
                                      "$id": "560",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "155"
                                      },
                                      "value": "mosca"
                                    },
                                    "displayTarget": {
                                      "$id": "561",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "157"
                                      },
                                      "value": "mosca"
                                    },
                                    "posTag": {
                                      "$id": "562",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "159"
                                      },
                                      "value": "NOUN"
                                    },
                                    "confidence": {
                                      "$id": "563",
                                      "kind": "number",
                                      "type": {
                                        "$ref": "161"
                                      },
                                      "value": 0.2668
                                    },
                                    "prefixWord": {
                                      "$id": "564",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "163"
                                      },
                                      "value": ""
                                    },
                                    "backTranslations": {
                                      "$id": "565",
                                      "kind": "array",
                                      "type": {
                                        "$ref": "165"
                                      },
                                      "value": [
                                        {
                                          "$id": "566",
                                          "kind": "model",
                                          "type": {
                                            "$ref": "166"
                                          },
                                          "value": {
                                            "normalizedText": {
                                              "$id": "567",
                                              "kind": "string",
                                              "type": {
                                                "$ref": "168"
                                              },
                                              "value": "fly"
                                            },
                                            "displayText": {
                                              "$id": "568",
                                              "kind": "string",
                                              "type": {
                                                "$ref": "170"
                                              },
                                              "value": "fly"
                                            },
                                            "numExamples": {
                                              "$id": "569",
                                              "kind": "number",
                                              "type": {
                                                "$ref": "172"
                                              },
                                              "value": 15
                                            },
                                            "frequencyCount": {
                                              "$id": "570",
                                              "kind": "number",
                                              "type": {
                                                "$ref": "174"
                                              },
                                              "value": 1697
                                            }
                                          }
                                        },
                                        {
                                          "$id": "571",
                                          "kind": "model",
                                          "type": {
                                            "$ref": "166"
                                          },
                                          "value": {
                                            "normalizedText": {
                                              "$id": "572",
                                              "kind": "string",
                                              "type": {
                                                "$ref": "168"
                                              },
                                              "value": "flyweight"
                                            },
                                            "displayText": {
                                              "$id": "573",
                                              "kind": "string",
                                              "type": {
                                                "$ref": "170"
                                              },
                                              "value": "flyweight"
                                            },
                                            "numExamples": {
                                              "$id": "574",
                                              "kind": "number",
                                              "type": {
                                                "$ref": "172"
                                              },
                                              "value": 0
                                            },
                                            "frequencyCount": {
                                              "$id": "575",
                                              "kind": "number",
                                              "type": {
                                                "$ref": "174"
                                              },
                                              "value": 48
                                            }
                                          }
                                        },
                                        {
                                          "$id": "576",
                                          "kind": "model",
                                          "type": {
                                            "$ref": "166"
                                          },
                                          "value": {
                                            "normalizedText": {
                                              "$id": "577",
                                              "kind": "string",
                                              "type": {
                                                "$ref": "168"
                                              },
                                              "value": "flies"
                                            },
                                            "displayText": {
                                              "$id": "578",
                                              "kind": "string",
                                              "type": {
                                                "$ref": "170"
                                              },
                                              "value": "flies"
                                            },
                                            "numExamples": {
                                              "$id": "579",
                                              "kind": "number",
                                              "type": {
                                                "$ref": "172"
                                              },
                                              "value": 9
                                            },
                                            "frequencyCount": {
                                              "$id": "580",
                                              "kind": "number",
                                              "type": {
                                                "$ref": "174"
                                              },
                                              "value": 34
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "$id": "581",
                "kind": "http",
                "name": "Lookup Dictionary Entries with minimum properties",
                "description": "Lookup Dictionary Entries with minimum properties",
                "filePath": "3.0/LookupDictionaryEntries_MinimumSet_Gen.json",
                "parameters": [
                  {
                    "parameter": {
                      "$ref": "507"
                    },
                    "value": {
                      "$id": "582",
                      "kind": "string",
                      "type": {
                        "$ref": "508"
                      },
                      "value": "en"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "509"
                    },
                    "value": {
                      "$id": "583",
                      "kind": "string",
                      "type": {
                        "$ref": "510"
                      },
                      "value": "es"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "511"
                    },
                    "value": {
                      "$id": "584",
                      "kind": "string",
                      "type": {
                        "$ref": "512"
                      },
                      "value": "3.0"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "516"
                    },
                    "value": {
                      "$id": "585",
                      "kind": "array",
                      "type": {
                        "$ref": "313"
                      },
                      "value": [
                        {
                          "$id": "586",
                          "kind": "model",
                          "type": {
                            "$ref": "106"
                          },
                          "value": {
                            "text": {
                              "$id": "587",
                              "kind": "string",
                              "type": {
                                "$ref": "108"
                              },
                              "value": "fly"
                            }
                          }
                        }
                      ]
                    }
                  }
                ],
                "responses": [
                  {
                    "response": {
                      "statusCodes": [
                        200
                      ],
                      "bodyType": {
                        "$ref": "517"
                      },
                      "headers": [
                        {
                          "name": "requestId",
                          "nameInResponse": "X-RequestId",
                          "doc": "Value generated by the service to identify the request. It is used for troubleshooting purposes.",
                          "type": {
                            "$ref": "518"
                          }
                        }
                      ],
                      "isErrorResponse": false,
                      "contentTypes": [
                        "application/json"
                      ]
                    },
                    "statusCode": 200,
                    "bodyValue": {
                      "$id": "588",
                      "kind": "array",
                      "type": {
                        "$ref": "517"
                      },
                      "value": [
                        {
                          "$id": "589",
                          "kind": "model",
                          "type": {
                            "$ref": "146"
                          },
                          "value": {
                            "normalizedSource": {
                              "$id": "590",
                              "kind": "string",
                              "type": {
                                "$ref": "148"
                              },
                              "value": "fly"
                            },
                            "displaySource": {
                              "$id": "591",
                              "kind": "string",
                              "type": {
                                "$ref": "150"
                              },
                              "value": "fly"
                            },
                            "translations": {
                              "$id": "592",
                              "kind": "array",
                              "type": {
                                "$ref": "152"
                              },
                              "value": [
                                {
                                  "$id": "593",
                                  "kind": "model",
                                  "type": {
                                    "$ref": "153"
                                  },
                                  "value": {
                                    "normalizedTarget": {
                                      "$id": "594",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "155"
                                      },
                                      "value": "volar"
                                    },
                                    "displayTarget": {
                                      "$id": "595",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "157"
                                      },
                                      "value": "volar"
                                    },
                                    "posTag": {
                                      "$id": "596",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "159"
                                      },
                                      "value": "VERB"
                                    },
                                    "confidence": {
                                      "$id": "597",
                                      "kind": "number",
                                      "type": {
                                        "$ref": "161"
                                      },
                                      "value": 0.4081
                                    },
                                    "prefixWord": {
                                      "$id": "598",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "163"
                                      },
                                      "value": ""
                                    },
                                    "backTranslations": {
                                      "$id": "599",
                                      "kind": "array",
                                      "type": {
                                        "$ref": "165"
                                      },
                                      "value": [
                                        {
                                          "$id": "600",
                                          "kind": "model",
                                          "type": {
                                            "$ref": "166"
                                          },
                                          "value": {
                                            "normalizedText": {
                                              "$id": "601",
                                              "kind": "string",
                                              "type": {
                                                "$ref": "168"
                                              },
                                              "value": "fly"
                                            },
                                            "displayText": {
                                              "$id": "602",
                                              "kind": "string",
                                              "type": {
                                                "$ref": "170"
                                              },
                                              "value": "fly"
                                            },
                                            "numExamples": {
                                              "$id": "603",
                                              "kind": "number",
                                              "type": {
                                                "$ref": "172"
                                              },
                                              "value": 15
                                            },
                                            "frequencyCount": {
                                              "$id": "604",
                                              "kind": "number",
                                              "type": {
                                                "$ref": "174"
                                              },
                                              "value": 4637
                                            }
                                          }
                                        },
                                        {
                                          "$id": "605",
                                          "kind": "model",
                                          "type": {
                                            "$ref": "166"
                                          },
                                          "value": {
                                            "normalizedText": {
                                              "$id": "606",
                                              "kind": "string",
                                              "type": {
                                                "$ref": "168"
                                              },
                                              "value": "flying"
                                            },
                                            "displayText": {
                                              "$id": "607",
                                              "kind": "string",
                                              "type": {
                                                "$ref": "170"
                                              },
                                              "value": "flying"
                                            },
                                            "numExamples": {
                                              "$id": "608",
                                              "kind": "number",
                                              "type": {
                                                "$ref": "172"
                                              },
                                              "value": 15
                                            },
                                            "frequencyCount": {
                                              "$id": "609",
                                              "kind": "number",
                                              "type": {
                                                "$ref": "174"
                                              },
                                              "value": 1365
                                            }
                                          }
                                        },
                                        {
                                          "$id": "610",
                                          "kind": "model",
                                          "type": {
                                            "$ref": "166"
                                          },
                                          "value": {
                                            "normalizedText": {
                                              "$id": "611",
                                              "kind": "string",
                                              "type": {
                                                "$ref": "168"
                                              },
                                              "value": "blow"
                                            },
                                            "displayText": {
                                              "$id": "612",
                                              "kind": "string",
                                              "type": {
                                                "$ref": "170"
                                              },
                                              "value": "blow"
                                            },
                                            "numExamples": {
                                              "$id": "613",
                                              "kind": "number",
                                              "type": {
                                                "$ref": "172"
                                              },
                                              "value": 15
                                            },
                                            "frequencyCount": {
                                              "$id": "614",
                                              "kind": "number",
                                              "type": {
                                                "$ref": "174"
                                              },
                                              "value": 503
                                            }
                                          }
                                        },
                                        {
                                          "$id": "615",
                                          "kind": "model",
                                          "type": {
                                            "$ref": "166"
                                          },
                                          "value": {
                                            "normalizedText": {
                                              "$id": "616",
                                              "kind": "string",
                                              "type": {
                                                "$ref": "168"
                                              },
                                              "value": "flight"
                                            },
                                            "displayText": {
                                              "$id": "617",
                                              "kind": "string",
                                              "type": {
                                                "$ref": "170"
                                              },
                                              "value": "flight"
                                            },
                                            "numExamples": {
                                              "$id": "618",
                                              "kind": "number",
                                              "type": {
                                                "$ref": "172"
                                              },
                                              "value": 15
                                            },
                                            "frequencyCount": {
                                              "$id": "619",
                                              "kind": "number",
                                              "type": {
                                                "$ref": "174"
                                              },
                                              "value": 135
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "$id": "620",
                                  "kind": "model",
                                  "type": {
                                    "$ref": "153"
                                  },
                                  "value": {
                                    "normalizedTarget": {
                                      "$id": "621",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "155"
                                      },
                                      "value": "mosca"
                                    },
                                    "displayTarget": {
                                      "$id": "622",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "157"
                                      },
                                      "value": "mosca"
                                    },
                                    "posTag": {
                                      "$id": "623",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "159"
                                      },
                                      "value": "NOUN"
                                    },
                                    "confidence": {
                                      "$id": "624",
                                      "kind": "number",
                                      "type": {
                                        "$ref": "161"
                                      },
                                      "value": 0.2668
                                    },
                                    "prefixWord": {
                                      "$id": "625",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "163"
                                      },
                                      "value": ""
                                    },
                                    "backTranslations": {
                                      "$id": "626",
                                      "kind": "array",
                                      "type": {
                                        "$ref": "165"
                                      },
                                      "value": [
                                        {
                                          "$id": "627",
                                          "kind": "model",
                                          "type": {
                                            "$ref": "166"
                                          },
                                          "value": {
                                            "normalizedText": {
                                              "$id": "628",
                                              "kind": "string",
                                              "type": {
                                                "$ref": "168"
                                              },
                                              "value": "fly"
                                            },
                                            "displayText": {
                                              "$id": "629",
                                              "kind": "string",
                                              "type": {
                                                "$ref": "170"
                                              },
                                              "value": "fly"
                                            },
                                            "numExamples": {
                                              "$id": "630",
                                              "kind": "number",
                                              "type": {
                                                "$ref": "172"
                                              },
                                              "value": 15
                                            },
                                            "frequencyCount": {
                                              "$id": "631",
                                              "kind": "number",
                                              "type": {
                                                "$ref": "174"
                                              },
                                              "value": 1697
                                            }
                                          }
                                        },
                                        {
                                          "$id": "632",
                                          "kind": "model",
                                          "type": {
                                            "$ref": "166"
                                          },
                                          "value": {
                                            "normalizedText": {
                                              "$id": "633",
                                              "kind": "string",
                                              "type": {
                                                "$ref": "168"
                                              },
                                              "value": "flyweight"
                                            },
                                            "displayText": {
                                              "$id": "634",
                                              "kind": "string",
                                              "type": {
                                                "$ref": "170"
                                              },
                                              "value": "flyweight"
                                            },
                                            "numExamples": {
                                              "$id": "635",
                                              "kind": "number",
                                              "type": {
                                                "$ref": "172"
                                              },
                                              "value": 0
                                            },
                                            "frequencyCount": {
                                              "$id": "636",
                                              "kind": "number",
                                              "type": {
                                                "$ref": "174"
                                              },
                                              "value": 48
                                            }
                                          }
                                        },
                                        {
                                          "$id": "637",
                                          "kind": "model",
                                          "type": {
                                            "$ref": "166"
                                          },
                                          "value": {
                                            "normalizedText": {
                                              "$id": "638",
                                              "kind": "string",
                                              "type": {
                                                "$ref": "168"
                                              },
                                              "value": "flies"
                                            },
                                            "displayText": {
                                              "$id": "639",
                                              "kind": "string",
                                              "type": {
                                                "$ref": "170"
                                              },
                                              "value": "flies"
                                            },
                                            "numExamples": {
                                              "$id": "640",
                                              "kind": "number",
                                              "type": {
                                                "$ref": "172"
                                              },
                                              "value": 9
                                            },
                                            "frequencyCount": {
                                              "$id": "641",
                                              "kind": "number",
                                              "type": {
                                                "$ref": "174"
                                              },
                                              "value": 34
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "$id": "642",
              "name": "clientTraceId",
              "nameInRequest": "X-ClientTraceId",
              "doc": "A client-generated GUID to uniquely identify the request.",
              "type": {
                "$id": "643",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "644",
              "name": "from",
              "nameInRequest": "from",
              "doc": "Specifies the language of the input text.\nThe source language must be one of the supported languages included in the dictionary scope.",
              "type": {
                "$id": "645",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "646",
              "name": "to",
              "nameInRequest": "to",
              "doc": "Specifies the language of the output text.\nThe target language must be one of the supported languages included in the dictionary scope.",
              "type": {
                "$id": "647",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "648",
              "name": "body",
              "nameInRequest": "body",
              "doc": "Defines the content of the request",
              "type": {
                "$ref": "313"
              },
              "location": "Body",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "649",
              "name": "contentType",
              "nameInRequest": "Content-Type",
              "doc": "Body parameter's content type. Known values are application/json",
              "type": {
                "$ref": "35"
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": true,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Constant",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "650",
              "name": "accept",
              "nameInRequest": "Accept",
              "type": {
                "$ref": "37"
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Constant",
              "decorators": [],
              "skipUrlEncoding": false
            }
          ],
          "response": {
            "type": {
              "$ref": "517"
            }
          },
          "isOverride": false,
          "generateConvenient": true,
          "generateProtocol": true,
          "crossLanguageDefinitionId": "TextTranslation.lookupDictionaryEntries"
        },
        {
          "$id": "651",
          "kind": "basic",
          "name": "lookupDictionaryExamples",
          "accessibility": "public",
          "apiVersions": [
            "3.0"
          ],
          "doc": "Lookup Dictionary Examples",
          "summary": "Lookup Dictionary Examples",
          "operation": {
            "$id": "652",
            "name": "lookupDictionaryExamples",
            "resourceName": "TextTranslation",
            "summary": "Lookup Dictionary Examples",
            "doc": "Lookup Dictionary Examples",
            "accessibility": "public",
            "parameters": [
              {
                "$id": "653",
                "name": "clientTraceId",
                "nameInRequest": "X-ClientTraceId",
                "doc": "A client-generated GUID to uniquely identify the request.",
                "type": {
                  "$id": "654",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "655",
                "name": "from",
                "nameInRequest": "from",
                "doc": "Specifies the language of the input text.\nThe source language must be one of the supported languages included in the dictionary scope.",
                "type": {
                  "$id": "656",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "657",
                "name": "to",
                "nameInRequest": "to",
                "doc": "Specifies the language of the output text.\nThe target language must be one of the supported languages included in the dictionary scope.",
                "type": {
                  "$id": "658",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "659",
                "name": "apiVersion",
                "nameInRequest": "api-version",
                "doc": "Mandatory API version parameter",
                "type": {
                  "$id": "660",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": true,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Client",
                "defaultValue": {
                  "type": {
                    "$id": "661",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string"
                  },
                  "value": "3.0"
                },
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "662",
                "name": "contentType",
                "nameInRequest": "Content-Type",
                "doc": "Body parameter's content type. Known values are application/json",
                "type": {
                  "$ref": "39"
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": true,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Constant",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "663",
                "name": "accept",
                "nameInRequest": "Accept",
                "type": {
                  "$ref": "41"
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Constant",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "664",
                "name": "body",
                "nameInRequest": "body",
                "doc": "Defines the content of the request",
                "type": {
                  "$id": "665",
                  "kind": "array",
                  "name": "ArrayDictionaryExampleTextItem",
                  "valueType": {
                    "$ref": "175"
                  },
                  "crossLanguageDefinitionId": "TypeSpec.Array",
                  "decorators": []
                },
                "location": "Body",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              }
            ],
            "responses": [
              {
                "statusCodes": [
                  200
                ],
                "bodyType": {
                  "$id": "666",
                  "kind": "array",
                  "name": "ArrayDictionaryExampleItem",
                  "valueType": {
                    "$ref": "178"
                  },
                  "crossLanguageDefinitionId": "TypeSpec.Array",
                  "decorators": []
                },
                "headers": [
                  {
                    "name": "requestId",
                    "nameInResponse": "X-RequestId",
                    "doc": "Value generated by the service to identify the request. It is used for troubleshooting purposes.",
                    "type": {
                      "$id": "667",
                      "kind": "string",
                      "name": "string",
                      "crossLanguageDefinitionId": "TypeSpec.string",
                      "decorators": []
                    }
                  }
                ],
                "isErrorResponse": false,
                "contentTypes": [
                  "application/json"
                ]
              }
            ],
            "httpMethod": "POST",
            "uri": "{Endpoint}",
            "path": "/dictionary/examples",
            "requestMediaTypes": [
              "application/json"
            ],
            "bufferResponse": true,
            "generateProtocolMethod": true,
            "generateConvenienceMethod": true,
            "crossLanguageDefinitionId": "TextTranslation.lookupDictionaryExamples",
            "decorators": [],
            "examples": [
              {
                "$id": "668",
                "kind": "http",
                "name": "Lookup Dictionary Examples",
                "description": "Lookup Dictionary Examples",
                "filePath": "3.0/LookupDictionaryExamples_MaximumSet_Gen.json",
                "parameters": [
                  {
                    "parameter": {
                      "$ref": "653"
                    },
                    "value": {
                      "$id": "669",
                      "kind": "string",
                      "type": {
                        "$ref": "654"
                      },
                      "value": "vykwwekvcncclrmsyjhbok"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "655"
                    },
                    "value": {
                      "$id": "670",
                      "kind": "string",
                      "type": {
                        "$ref": "656"
                      },
                      "value": "en"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "657"
                    },
                    "value": {
                      "$id": "671",
                      "kind": "string",
                      "type": {
                        "$ref": "658"
                      },
                      "value": "es"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "659"
                    },
                    "value": {
                      "$id": "672",
                      "kind": "string",
                      "type": {
                        "$ref": "660"
                      },
                      "value": "3.0"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "664"
                    },
                    "value": {
                      "$id": "673",
                      "kind": "array",
                      "type": {
                        "$ref": "665"
                      },
                      "value": [
                        {
                          "$id": "674",
                          "kind": "model",
                          "type": {
                            "$ref": "175"
                          },
                          "value": {
                            "text": {
                              "$id": "675",
                              "kind": "string",
                              "type": {
                                "$ref": "108"
                              },
                              "value": "fly"
                            },
                            "translation": {
                              "$id": "676",
                              "kind": "string",
                              "type": {
                                "$ref": "177"
                              },
                              "value": "volar"
                            }
                          }
                        }
                      ]
                    }
                  }
                ],
                "responses": [
                  {
                    "response": {
                      "statusCodes": [
                        200
                      ],
                      "bodyType": {
                        "$ref": "666"
                      },
                      "headers": [
                        {
                          "name": "requestId",
                          "nameInResponse": "X-RequestId",
                          "doc": "Value generated by the service to identify the request. It is used for troubleshooting purposes.",
                          "type": {
                            "$ref": "667"
                          }
                        }
                      ],
                      "isErrorResponse": false,
                      "contentTypes": [
                        "application/json"
                      ]
                    },
                    "statusCode": 200,
                    "bodyValue": {
                      "$id": "677",
                      "kind": "array",
                      "type": {
                        "$ref": "666"
                      },
                      "value": [
                        {
                          "$id": "678",
                          "kind": "model",
                          "type": {
                            "$ref": "178"
                          },
                          "value": {
                            "normalizedSource": {
                              "$id": "679",
                              "kind": "string",
                              "type": {
                                "$ref": "180"
                              },
                              "value": "fly"
                            },
                            "normalizedTarget": {
                              "$id": "680",
                              "kind": "string",
                              "type": {
                                "$ref": "182"
                              },
                              "value": "volar"
                            },
                            "examples": {
                              "$id": "681",
                              "kind": "array",
                              "type": {
                                "$ref": "184"
                              },
                              "value": [
                                {
                                  "$id": "682",
                                  "kind": "model",
                                  "type": {
                                    "$ref": "185"
                                  },
                                  "value": {
                                    "sourcePrefix": {
                                      "$id": "683",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "187"
                                      },
                                      "value": "They need machines to "
                                    },
                                    "sourceTerm": {
                                      "$id": "684",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "189"
                                      },
                                      "value": "fly"
                                    },
                                    "sourceSuffix": {
                                      "$id": "685",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "191"
                                      },
                                      "value": "."
                                    },
                                    "targetPrefix": {
                                      "$id": "686",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "193"
                                      },
                                      "value": "Necesitan máquinas para "
                                    },
                                    "targetTerm": {
                                      "$id": "687",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "195"
                                      },
                                      "value": "volar"
                                    },
                                    "targetSuffix": {
                                      "$id": "688",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "197"
                                      },
                                      "value": "."
                                    }
                                  }
                                },
                                {
                                  "$id": "689",
                                  "kind": "model",
                                  "type": {
                                    "$ref": "185"
                                  },
                                  "value": {
                                    "sourcePrefix": {
                                      "$id": "690",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "187"
                                      },
                                      "value": "That should really "
                                    },
                                    "sourceTerm": {
                                      "$id": "691",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "189"
                                      },
                                      "value": "fly"
                                    },
                                    "sourceSuffix": {
                                      "$id": "692",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "191"
                                      },
                                      "value": "."
                                    },
                                    "targetPrefix": {
                                      "$id": "693",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "193"
                                      },
                                      "value": "Eso realmente debe "
                                    },
                                    "targetTerm": {
                                      "$id": "694",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "195"
                                      },
                                      "value": "volar"
                                    },
                                    "targetSuffix": {
                                      "$id": "695",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "197"
                                      },
                                      "value": "."
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "$id": "696",
                "kind": "http",
                "name": "Lookup Dictionary Examples with minimum properties",
                "description": "Lookup Dictionary Examples with minimum properties",
                "filePath": "3.0/LookupDictionaryExamples_MinimumSet_Gen.json",
                "parameters": [
                  {
                    "parameter": {
                      "$ref": "655"
                    },
                    "value": {
                      "$id": "697",
                      "kind": "string",
                      "type": {
                        "$ref": "656"
                      },
                      "value": "en"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "657"
                    },
                    "value": {
                      "$id": "698",
                      "kind": "string",
                      "type": {
                        "$ref": "658"
                      },
                      "value": "es"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "659"
                    },
                    "value": {
                      "$id": "699",
                      "kind": "string",
                      "type": {
                        "$ref": "660"
                      },
                      "value": "3.0"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "664"
                    },
                    "value": {
                      "$id": "700",
                      "kind": "array",
                      "type": {
                        "$ref": "665"
                      },
                      "value": [
                        {
                          "$id": "701",
                          "kind": "model",
                          "type": {
                            "$ref": "175"
                          },
                          "value": {
                            "text": {
                              "$id": "702",
                              "kind": "string",
                              "type": {
                                "$ref": "108"
                              },
                              "value": "fly"
                            },
                            "translation": {
                              "$id": "703",
                              "kind": "string",
                              "type": {
                                "$ref": "177"
                              },
                              "value": "volar"
                            }
                          }
                        }
                      ]
                    }
                  }
                ],
                "responses": [
                  {
                    "response": {
                      "statusCodes": [
                        200
                      ],
                      "bodyType": {
                        "$ref": "666"
                      },
                      "headers": [
                        {
                          "name": "requestId",
                          "nameInResponse": "X-RequestId",
                          "doc": "Value generated by the service to identify the request. It is used for troubleshooting purposes.",
                          "type": {
                            "$ref": "667"
                          }
                        }
                      ],
                      "isErrorResponse": false,
                      "contentTypes": [
                        "application/json"
                      ]
                    },
                    "statusCode": 200,
                    "bodyValue": {
                      "$id": "704",
                      "kind": "array",
                      "type": {
                        "$ref": "666"
                      },
                      "value": [
                        {
                          "$id": "705",
                          "kind": "model",
                          "type": {
                            "$ref": "178"
                          },
                          "value": {
                            "normalizedSource": {
                              "$id": "706",
                              "kind": "string",
                              "type": {
                                "$ref": "180"
                              },
                              "value": "fly"
                            },
                            "normalizedTarget": {
                              "$id": "707",
                              "kind": "string",
                              "type": {
                                "$ref": "182"
                              },
                              "value": "volar"
                            },
                            "examples": {
                              "$id": "708",
                              "kind": "array",
                              "type": {
                                "$ref": "184"
                              },
                              "value": [
                                {
                                  "$id": "709",
                                  "kind": "model",
                                  "type": {
                                    "$ref": "185"
                                  },
                                  "value": {
                                    "sourcePrefix": {
                                      "$id": "710",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "187"
                                      },
                                      "value": "They need machines to "
                                    },
                                    "sourceTerm": {
                                      "$id": "711",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "189"
                                      },
                                      "value": "fly"
                                    },
                                    "sourceSuffix": {
                                      "$id": "712",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "191"
                                      },
                                      "value": "."
                                    },
                                    "targetPrefix": {
                                      "$id": "713",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "193"
                                      },
                                      "value": "Necesitan máquinas para "
                                    },
                                    "targetTerm": {
                                      "$id": "714",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "195"
                                      },
                                      "value": "volar"
                                    },
                                    "targetSuffix": {
                                      "$id": "715",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "197"
                                      },
                                      "value": "."
                                    }
                                  }
                                },
                                {
                                  "$id": "716",
                                  "kind": "model",
                                  "type": {
                                    "$ref": "185"
                                  },
                                  "value": {
                                    "sourcePrefix": {
                                      "$id": "717",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "187"
                                      },
                                      "value": "That should really "
                                    },
                                    "sourceTerm": {
                                      "$id": "718",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "189"
                                      },
                                      "value": "fly"
                                    },
                                    "sourceSuffix": {
                                      "$id": "719",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "191"
                                      },
                                      "value": "."
                                    },
                                    "targetPrefix": {
                                      "$id": "720",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "193"
                                      },
                                      "value": "Eso realmente debe "
                                    },
                                    "targetTerm": {
                                      "$id": "721",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "195"
                                      },
                                      "value": "volar"
                                    },
                                    "targetSuffix": {
                                      "$id": "722",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "197"
                                      },
                                      "value": "."
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "$id": "723",
              "name": "clientTraceId",
              "nameInRequest": "X-ClientTraceId",
              "doc": "A client-generated GUID to uniquely identify the request.",
              "type": {
                "$id": "724",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "725",
              "name": "from",
              "nameInRequest": "from",
              "doc": "Specifies the language of the input text.\nThe source language must be one of the supported languages included in the dictionary scope.",
              "type": {
                "$id": "726",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "727",
              "name": "to",
              "nameInRequest": "to",
              "doc": "Specifies the language of the output text.\nThe target language must be one of the supported languages included in the dictionary scope.",
              "type": {
                "$id": "728",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "729",
              "name": "body",
              "nameInRequest": "body",
              "doc": "Defines the content of the request",
              "type": {
                "$ref": "665"
              },
              "location": "Body",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "730",
              "name": "contentType",
              "nameInRequest": "Content-Type",
              "doc": "Body parameter's content type. Known values are application/json",
              "type": {
                "$ref": "39"
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": true,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Constant",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "731",
              "name": "accept",
              "nameInRequest": "Accept",
              "type": {
                "$ref": "41"
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Constant",
              "decorators": [],
              "skipUrlEncoding": false
            }
          ],
          "response": {
            "type": {
              "$ref": "666"
            }
          },
          "isOverride": false,
          "generateConvenient": true,
          "generateProtocol": true,
          "crossLanguageDefinitionId": "TextTranslation.lookupDictionaryExamples"
        }
      ],
      "parameters": [
        {
          "$id": "732",
          "name": "Endpoint",
          "nameInRequest": "Endpoint",
          "doc": "Supported Text Translation endpoints (protocol and hostname, for example:\n    https://api.cognitive.microsofttranslator.com).",
          "type": {
            "$id": "733",
            "kind": "url",
            "name": "endpoint",
            "crossLanguageDefinitionId": "TypeSpec.url"
          },
          "location": "Uri",
          "isApiVersion": false,
          "isContentType": false,
          "isRequired": true,
          "isEndpoint": true,
          "skipUrlEncoding": false,
          "explode": false,
          "kind": "Client",
          "serverUrlTemplate": "{Endpoint}"
        }
      ],
      "decorators": [
        {
          "name": "TypeSpec.@service",
          "arguments": {
            "options": {
              "title": "Text Translation"
            }
          }
        }
      ],
      "crossLanguageDefinitionId": "TextTranslation",
      "apiVersions": [
        "3.0"
      ]
    }
  ]
}
