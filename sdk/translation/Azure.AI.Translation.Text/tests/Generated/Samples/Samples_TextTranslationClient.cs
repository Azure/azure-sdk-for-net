// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.AI.Translation.Text.Samples
{
    public partial class Samples_TextTranslationClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_TextTranslation_GetSupportedLanguages_GetsTheSetOfLanguagesCurrentlySupportedByOtherOperationsOfTheTranslator()
        {
            Uri endpoint = new Uri("<endpoint>");
            TextTranslationClient client = new TextTranslationClient(endpoint);

            Response response = client.GetSupportedLanguages("kayfnugjec", "translation,transliteration,dictionary", "en", new ETag("fpnhruttllvc"), null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_TextTranslation_GetSupportedLanguages_GetsTheSetOfLanguagesCurrentlySupportedByOtherOperationsOfTheTranslator_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TextTranslationClient client = new TextTranslationClient(endpoint);

            Response response = await client.GetSupportedLanguagesAsync("kayfnugjec", "translation,transliteration,dictionary", "en", new ETag("fpnhruttllvc"), null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_TextTranslation_GetSupportedLanguages_GetsTheSetOfLanguagesCurrentlySupportedByOtherOperationsOfTheTranslator_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TextTranslationClient client = new TextTranslationClient(endpoint);

            Response<GetSupportedLanguagesResult> response = client.GetSupportedLanguages();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_TextTranslation_GetSupportedLanguages_GetsTheSetOfLanguagesCurrentlySupportedByOtherOperationsOfTheTranslator_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TextTranslationClient client = new TextTranslationClient(endpoint);

            Response<GetSupportedLanguagesResult> response = await client.GetSupportedLanguagesAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_TextTranslation_GetSupportedLanguages_GetsTheSetOfLanguagesCurrentlySupportedByOtherOperationsOfTheTranslatorWithMinimumProperties()
        {
            Uri endpoint = new Uri("<endpoint>");
            TextTranslationClient client = new TextTranslationClient(endpoint);

            Response response = client.GetSupportedLanguages(null, null, null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_TextTranslation_GetSupportedLanguages_GetsTheSetOfLanguagesCurrentlySupportedByOtherOperationsOfTheTranslatorWithMinimumProperties_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TextTranslationClient client = new TextTranslationClient(endpoint);

            Response response = await client.GetSupportedLanguagesAsync(null, null, null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_TextTranslation_GetSupportedLanguages_GetsTheSetOfLanguagesCurrentlySupportedByOtherOperationsOfTheTranslatorWithMinimumProperties_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TextTranslationClient client = new TextTranslationClient(endpoint);

            Response<GetSupportedLanguagesResult> response = client.GetSupportedLanguages();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_TextTranslation_GetSupportedLanguages_GetsTheSetOfLanguagesCurrentlySupportedByOtherOperationsOfTheTranslatorWithMinimumProperties_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            TextTranslationClient client = new TextTranslationClient(endpoint);

            Response<GetSupportedLanguagesResult> response = await client.GetSupportedLanguagesAsync();
        }
    }
}
