// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.AI.Translation.Text.Tests
{
    public partial class TextTranslationClientTests : AITranslationTextTestBase
    {
        public TextTranslationClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task TextTranslation_GetSupportedLanguages_GetsTheSetOfLanguagesCurrentlySupportedByOtherOperationsOfTheTranslator()
        {
            Uri endpoint = new Uri("<endpoint>");
            TextTranslationClient client = CreateTextTranslationClient(endpoint);

            Response response = await client.GetSupportedLanguagesAsync("kayfnugjec", "translation,transliteration,dictionary", "en", new ETag("fpnhruttllvc"), null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task TextTranslation_GetSupportedLanguages_GetsTheSetOfLanguagesCurrentlySupportedByOtherOperationsOfTheTranslator_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TextTranslationClient client = CreateTextTranslationClient(endpoint);

            Response<GetSupportedLanguagesResult> response = await client.GetSupportedLanguagesAsync();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task TextTranslation_GetSupportedLanguages_GetsTheSetOfLanguagesCurrentlySupportedByOtherOperationsOfTheTranslatorWithMinimumProperties()
        {
            Uri endpoint = new Uri("<endpoint>");
            TextTranslationClient client = CreateTextTranslationClient(endpoint);

            Response response = await client.GetSupportedLanguagesAsync(null, null, null, null, null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task TextTranslation_GetSupportedLanguages_GetsTheSetOfLanguagesCurrentlySupportedByOtherOperationsOfTheTranslatorWithMinimumProperties_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            TextTranslationClient client = CreateTextTranslationClient(endpoint);

            Response<GetSupportedLanguagesResult> response = await client.GetSupportedLanguagesAsync();
        }
    }
}
