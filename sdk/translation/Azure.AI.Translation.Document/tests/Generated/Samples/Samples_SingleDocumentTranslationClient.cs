// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.IO;
using System.Text.Json;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.AI.Translation.Document.Samples
{
    public partial class Samples_SingleDocumentTranslationClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SingleDocumentTranslationClient_DocumentTranslate_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            SingleDocumentTranslationClient client = new SingleDocumentTranslationClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                document = File.OpenRead("<filePath>"),
            });
            Response response = client.DocumentTranslate("<targetLanguage>", content, "multipart/form-data");

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SingleDocumentTranslationClient_DocumentTranslate_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            SingleDocumentTranslationClient client = new SingleDocumentTranslationClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                document = File.OpenRead("<filePath>"),
            });
            Response response = await client.DocumentTranslateAsync("<targetLanguage>", content, "multipart/form-data");

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SingleDocumentTranslationClient_DocumentTranslate_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            SingleDocumentTranslationClient client = new SingleDocumentTranslationClient(endpoint, credential);

            DocumentTranslateContent documentTranslateContent = new DocumentTranslateContent((Stream)null);
            Response<BinaryData> response = client.DocumentTranslate("<targetLanguage>", documentTranslateContent);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SingleDocumentTranslationClient_DocumentTranslate_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            SingleDocumentTranslationClient client = new SingleDocumentTranslationClient(endpoint, credential);

            DocumentTranslateContent documentTranslateContent = new DocumentTranslateContent((Stream)null);
            Response<BinaryData> response = await client.DocumentTranslateAsync("<targetLanguage>", documentTranslateContent);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SingleDocumentTranslationClient_DocumentTranslate_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            SingleDocumentTranslationClient client = new SingleDocumentTranslationClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                document = File.OpenRead("<filePath>"),
                glossary = new object[]
            {
File.OpenRead("<filePath>")
            },
            });
            Response response = client.DocumentTranslate("<targetLanguage>", content, "multipart/form-data", sourceLanguage: "<sourceLanguage>", category: "<category>", allowFallback: true);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SingleDocumentTranslationClient_DocumentTranslate_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            SingleDocumentTranslationClient client = new SingleDocumentTranslationClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                document = File.OpenRead("<filePath>"),
                glossary = new object[]
            {
File.OpenRead("<filePath>")
            },
            });
            Response response = await client.DocumentTranslateAsync("<targetLanguage>", content, "multipart/form-data", sourceLanguage: "<sourceLanguage>", category: "<category>", allowFallback: true);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SingleDocumentTranslationClient_DocumentTranslate_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            SingleDocumentTranslationClient client = new SingleDocumentTranslationClient(endpoint, credential);

            DocumentTranslateContent documentTranslateContent = new DocumentTranslateContent((Stream)null)
            {
                Glossary = { null },
            };
            Response<BinaryData> response = client.DocumentTranslate("<targetLanguage>", documentTranslateContent, sourceLanguage: "<sourceLanguage>", category: "<category>", allowFallback: true);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SingleDocumentTranslationClient_DocumentTranslate_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            SingleDocumentTranslationClient client = new SingleDocumentTranslationClient(endpoint, credential);

            DocumentTranslateContent documentTranslateContent = new DocumentTranslateContent((Stream)null)
            {
                Glossary = { null },
            };
            Response<BinaryData> response = await client.DocumentTranslateAsync("<targetLanguage>", documentTranslateContent, sourceLanguage: "<sourceLanguage>", category: "<category>", allowFallback: true);
        }
    }
}
