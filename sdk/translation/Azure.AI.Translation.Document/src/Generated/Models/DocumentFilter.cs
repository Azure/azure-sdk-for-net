// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Translation.Document.Models
{
    /// <summary> The DocumentFilter. </summary>
    internal partial class DocumentFilter
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="DocumentFilter"/>. </summary>
        public DocumentFilter()
        {
        }

        /// <summary> Initializes a new instance of <see cref="DocumentFilter"/>. </summary>
        /// <param name="prefix">
        /// A case-sensitive prefix string to filter documents in the source path for translation.
        /// For example, when using a Azure storage blob Uri, use the prefix to restrict sub folders for translation.
        /// </param>
        /// <param name="suffix">
        /// A case-sensitive suffix string to filter documents in the source path for translation.
        /// This is most often use for file extensions
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal DocumentFilter(string prefix, string suffix, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Prefix = prefix;
            Suffix = suffix;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary>
        /// A case-sensitive prefix string to filter documents in the source path for translation.
        /// For example, when using a Azure storage blob Uri, use the prefix to restrict sub folders for translation.
        /// </summary>
        public string Prefix { get; set; }
        /// <summary>
        /// A case-sensitive suffix string to filter documents in the source path for translation.
        /// This is most often use for file extensions
        /// </summary>
        public string Suffix { get; set; }
    }
}
