// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;

namespace Azure.AI.Translation.Document
{
    /// <summary> Translation job status response. </summary>
    public partial class TranslationStatusResult
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="TranslationStatusResult"/>. </summary>
        /// <param name="id"> Id of the operation. </param>
        /// <param name="createdOn"> Operation created date time. </param>
        /// <param name="lastModified"> Date time in which the operation's status has been updated. </param>
        /// <param name="status"> List of possible statuses for job or document. </param>
        /// <param name="summary"> Status Summary. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/> or <paramref name="summary"/> is null. </exception>
        internal TranslationStatusResult(string id, DateTimeOffset createdOn, DateTimeOffset lastModified, DocumentTranslationStatus status, StatusSummary summary)
        {
            Argument.AssertNotNull(id, nameof(id));
            Argument.AssertNotNull(summary, nameof(summary));

            Id = id;
            CreatedOn = createdOn;
            LastModified = lastModified;
            Status = status;
            Summary = summary;
        }

        /// <summary> Initializes a new instance of <see cref="TranslationStatusResult"/>. </summary>
        /// <param name="id"> Id of the operation. </param>
        /// <param name="createdOn"> Operation created date time. </param>
        /// <param name="lastModified"> Date time in which the operation's status has been updated. </param>
        /// <param name="status"> List of possible statuses for job or document. </param>
        /// <param name="error">
        /// This contains an outer error with error code, message, details, target and an
        /// inner error with more descriptive details.
        /// </param>
        /// <param name="summary"> Status Summary. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal TranslationStatusResult(string id, DateTimeOffset createdOn, DateTimeOffset lastModified, DocumentTranslationStatus status, JsonElement error, StatusSummary summary, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Id = id;
            CreatedOn = createdOn;
            LastModified = lastModified;
            Status = status;
            _error = error;
            Summary = summary;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="TranslationStatusResult"/> for deserialization. </summary>
        internal TranslationStatusResult()
        {
        }
        /// <summary> List of possible statuses for job or document. </summary>
        public DocumentTranslationStatus Status { get; }
    }
}
