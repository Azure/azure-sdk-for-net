{
  "name": "DocumentTranslation",
  "apiVersions": [
    "2024-05-01"
  ],
  "enums": [
    {
      "$id": "1",
      "kind": "enum",
      "name": "translationStorageSource",
      "crossLanguageDefinitionId": "DocumentTranslation.StorageSource",
      "valueType": {
        "$id": "2",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "values": [
        {
          "$id": "3",
          "kind": "enumvalue",
          "name": "AzureBlob",
          "value": "AzureBlob",
          "valueType": {
            "$ref": "2"
          },
          "enumType": {
            "$ref": "1"
          },
          "doc": "Azure blob storage source",
          "decorators": []
        }
      ],
      "namespace": "Azure.AI.Translation.Document",
      "doc": "Storage Source",
      "isFixed": false,
      "isFlags": false,
      "usage": "Input,Json",
      "decorators": []
    },
    {
      "$id": "4",
      "kind": "enum",
      "name": "StorageInputType",
      "crossLanguageDefinitionId": "DocumentTranslation.StorageInputType",
      "valueType": {
        "$id": "5",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "values": [
        {
          "$id": "6",
          "kind": "enumvalue",
          "name": "Folder",
          "value": "Folder",
          "valueType": {
            "$ref": "5"
          },
          "enumType": {
            "$ref": "4"
          },
          "doc": "Folder storage input type",
          "decorators": []
        },
        {
          "$id": "7",
          "kind": "enumvalue",
          "name": "File",
          "value": "File",
          "valueType": {
            "$ref": "5"
          },
          "enumType": {
            "$ref": "4"
          },
          "doc": "File storage input type",
          "decorators": []
        }
      ],
      "namespace": "Azure.AI.Translation.Document",
      "doc": "Storage type of the input documents source string",
      "isFixed": false,
      "isFlags": false,
      "usage": "Input,Json",
      "decorators": []
    },
    {
      "$id": "8",
      "kind": "enum",
      "name": "Status",
      "crossLanguageDefinitionId": "DocumentTranslation.Status",
      "valueType": {
        "$id": "9",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "values": [
        {
          "$id": "10",
          "kind": "enumvalue",
          "name": "NotStarted",
          "value": "NotStarted",
          "valueType": {
            "$ref": "9"
          },
          "enumType": {
            "$ref": "8"
          },
          "doc": "NotStarted",
          "decorators": []
        },
        {
          "$id": "11",
          "kind": "enumvalue",
          "name": "Running",
          "value": "Running",
          "valueType": {
            "$ref": "9"
          },
          "enumType": {
            "$ref": "8"
          },
          "doc": "Running",
          "decorators": []
        },
        {
          "$id": "12",
          "kind": "enumvalue",
          "name": "Succeeded",
          "value": "Succeeded",
          "valueType": {
            "$ref": "9"
          },
          "enumType": {
            "$ref": "8"
          },
          "doc": "Succeeded",
          "decorators": []
        },
        {
          "$id": "13",
          "kind": "enumvalue",
          "name": "Failed",
          "value": "Failed",
          "valueType": {
            "$ref": "9"
          },
          "enumType": {
            "$ref": "8"
          },
          "doc": "Failed",
          "decorators": []
        },
        {
          "$id": "14",
          "kind": "enumvalue",
          "name": "Cancelled",
          "value": "Cancelled",
          "valueType": {
            "$ref": "9"
          },
          "enumType": {
            "$ref": "8"
          },
          "doc": "Cancelled",
          "decorators": []
        },
        {
          "$id": "15",
          "kind": "enumvalue",
          "name": "Cancelling",
          "value": "Cancelling",
          "valueType": {
            "$ref": "9"
          },
          "enumType": {
            "$ref": "8"
          },
          "doc": "Cancelling",
          "decorators": []
        },
        {
          "$id": "16",
          "kind": "enumvalue",
          "name": "ValidationFailed",
          "value": "ValidationFailed",
          "valueType": {
            "$ref": "9"
          },
          "enumType": {
            "$ref": "8"
          },
          "doc": "ValidationFailed",
          "decorators": []
        }
      ],
      "namespace": "Azure.AI.Translation.Document",
      "doc": "List of possible statuses for job or document",
      "isFixed": false,
      "isFlags": false,
      "usage": "Output,Json,LroPolling,LroFinalEnvelope",
      "decorators": []
    },
    {
      "$id": "17",
      "kind": "enum",
      "name": "TranslationErrorCode",
      "crossLanguageDefinitionId": "DocumentTranslation.TranslationErrorCode",
      "valueType": {
        "$id": "18",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "values": [
        {
          "$id": "19",
          "kind": "enumvalue",
          "name": "InvalidRequest",
          "value": "InvalidRequest",
          "valueType": {
            "$ref": "18"
          },
          "enumType": {
            "$ref": "17"
          },
          "doc": "InvalidRequest",
          "decorators": []
        },
        {
          "$id": "20",
          "kind": "enumvalue",
          "name": "InvalidArgument",
          "value": "InvalidArgument",
          "valueType": {
            "$ref": "18"
          },
          "enumType": {
            "$ref": "17"
          },
          "doc": "InvalidArgument",
          "decorators": []
        },
        {
          "$id": "21",
          "kind": "enumvalue",
          "name": "InternalServerError",
          "value": "InternalServerError",
          "valueType": {
            "$ref": "18"
          },
          "enumType": {
            "$ref": "17"
          },
          "doc": "InternalServerError",
          "decorators": []
        },
        {
          "$id": "22",
          "kind": "enumvalue",
          "name": "ServiceUnavailable",
          "value": "ServiceUnavailable",
          "valueType": {
            "$ref": "18"
          },
          "enumType": {
            "$ref": "17"
          },
          "doc": "ServiceUnavailable",
          "decorators": []
        },
        {
          "$id": "23",
          "kind": "enumvalue",
          "name": "ResourceNotFound",
          "value": "ResourceNotFound",
          "valueType": {
            "$ref": "18"
          },
          "enumType": {
            "$ref": "17"
          },
          "doc": "ResourceNotFound",
          "decorators": []
        },
        {
          "$id": "24",
          "kind": "enumvalue",
          "name": "Unauthorized",
          "value": "Unauthorized",
          "valueType": {
            "$ref": "18"
          },
          "enumType": {
            "$ref": "17"
          },
          "doc": "Unauthorized",
          "decorators": []
        },
        {
          "$id": "25",
          "kind": "enumvalue",
          "name": "RequestRateTooHigh",
          "value": "RequestRateTooHigh",
          "valueType": {
            "$ref": "18"
          },
          "enumType": {
            "$ref": "17"
          },
          "doc": "RequestRateTooHigh",
          "decorators": []
        }
      ],
      "namespace": "Azure.AI.Translation.Document",
      "doc": "Enums containing high level error codes.",
      "isFixed": false,
      "isFlags": false,
      "usage": "Output,Json,LroPolling,LroFinalEnvelope",
      "decorators": []
    },
    {
      "$id": "26",
      "kind": "enum",
      "name": "FileFormatType",
      "crossLanguageDefinitionId": "DocumentTranslation.FileFormatType",
      "valueType": {
        "$id": "27",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "values": [
        {
          "$id": "28",
          "kind": "enumvalue",
          "name": "Document",
          "value": "document",
          "valueType": {
            "$ref": "27"
          },
          "enumType": {
            "$ref": "26"
          },
          "doc": "Document type file format",
          "decorators": []
        },
        {
          "$id": "29",
          "kind": "enumvalue",
          "name": "Glossary",
          "value": "glossary",
          "valueType": {
            "$ref": "27"
          },
          "enumType": {
            "$ref": "26"
          },
          "doc": "Glossary type file format",
          "decorators": []
        }
      ],
      "namespace": "Azure.AI.Translation.Document",
      "doc": "Format types",
      "isFixed": false,
      "isFlags": false,
      "usage": "Input,Output,Json",
      "decorators": []
    },
    {
      "$id": "30",
      "kind": "enum",
      "name": "Versions",
      "crossLanguageDefinitionId": "DocumentTranslation.Versions",
      "valueType": {
        "$id": "31",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "values": [
        {
          "$id": "32",
          "kind": "enumvalue",
          "name": "v2024_05_01",
          "value": "2024-05-01",
          "valueType": {
            "$ref": "31"
          },
          "enumType": {
            "$ref": "30"
          },
          "decorators": []
        }
      ],
      "namespace": "Azure.AI.Translation.Document",
      "doc": "Document Translation supported versions",
      "isFixed": true,
      "isFlags": false,
      "usage": "ApiVersionEnum",
      "decorators": []
    }
  ],
  "constants": [
    {
      "$id": "33",
      "kind": "constant",
      "name": "startTranslationContentType",
      "namespace": "",
      "usage": "None",
      "valueType": {
        "$id": "34",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "application/json",
      "decorators": []
    },
    {
      "$id": "35",
      "kind": "constant",
      "name": "startTranslationContentType1",
      "namespace": "",
      "usage": "None",
      "valueType": {
        "$id": "36",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "application/json",
      "decorators": []
    },
    {
      "$id": "37",
      "kind": "constant",
      "name": "getTranslationsStatusContentType",
      "namespace": "",
      "usage": "None",
      "valueType": {
        "$id": "38",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "application/json",
      "decorators": []
    },
    {
      "$id": "39",
      "kind": "constant",
      "name": "getDocumentStatusContentType",
      "namespace": "",
      "usage": "None",
      "valueType": {
        "$id": "40",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "application/json",
      "decorators": []
    },
    {
      "$id": "41",
      "kind": "constant",
      "name": "getTranslationStatusContentType",
      "namespace": "",
      "usage": "None",
      "valueType": {
        "$id": "42",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "application/json",
      "decorators": []
    },
    {
      "$id": "43",
      "kind": "constant",
      "name": "cancelTranslationContentType",
      "namespace": "",
      "usage": "None",
      "valueType": {
        "$id": "44",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "application/json",
      "decorators": []
    },
    {
      "$id": "45",
      "kind": "constant",
      "name": "getDocumentsStatusContentType",
      "namespace": "",
      "usage": "None",
      "valueType": {
        "$id": "46",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "application/json",
      "decorators": []
    },
    {
      "$id": "47",
      "kind": "constant",
      "name": "getSupportedFormatsContentType",
      "namespace": "",
      "usage": "None",
      "valueType": {
        "$id": "48",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "application/json",
      "decorators": []
    },
    {
      "$id": "49",
      "kind": "constant",
      "name": "DocumentTranslateBodyContentType",
      "namespace": "",
      "usage": "None",
      "valueType": {
        "$id": "50",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "multipart/form-data",
      "decorators": []
    },
    {
      "$id": "51",
      "kind": "constant",
      "name": "documentTranslateContentType",
      "namespace": "",
      "usage": "None",
      "valueType": {
        "$id": "52",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "application/octet-stream",
      "decorators": []
    },
    {
      "$id": "53",
      "kind": "constant",
      "name": "DocumentTranslateResultContentType",
      "namespace": "",
      "usage": "None",
      "valueType": {
        "$id": "54",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "application/octet-stream",
      "decorators": []
    },
    {
      "$id": "55",
      "kind": "constant",
      "name": "DocumentTranslateBodyContentType1",
      "namespace": "",
      "usage": "None",
      "valueType": {
        "$id": "56",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
      },
      "value": "multipart/form-data",
      "decorators": []
    }
  ],
  "models": [
    {
      "$id": "57",
      "kind": "model",
      "name": "translationBatch",
      "namespace": "Azure.AI.Translation.Document",
      "crossLanguageDefinitionId": "DocumentTranslation.StartTranslationDetails",
      "usage": "Input,Json",
      "doc": "Translation job submission batch request",
      "decorators": [],
      "properties": [
        {
          "$id": "58",
          "kind": "property",
          "name": "inputs",
          "serializedName": "inputs",
          "doc": "The input list of documents or folders containing documents",
          "type": {
            "$id": "59",
            "kind": "array",
            "name": "ArrayBatchRequest",
            "valueType": {
              "$id": "60",
              "kind": "model",
              "name": "BatchRequest",
              "namespace": "Azure.AI.Translation.Document",
              "crossLanguageDefinitionId": "DocumentTranslation.BatchRequest",
              "usage": "Input,Json",
              "doc": "Definition for the input batch translation request",
              "decorators": [],
              "properties": [
                {
                  "$id": "61",
                  "kind": "property",
                  "name": "source",
                  "serializedName": "source",
                  "doc": "Source of the input documents",
                  "type": {
                    "$id": "62",
                    "kind": "model",
                    "name": "SourceInput",
                    "namespace": "Azure.AI.Translation.Document",
                    "crossLanguageDefinitionId": "DocumentTranslation.SourceInput",
                    "usage": "Input,Json",
                    "doc": "Source of the input documents",
                    "decorators": [],
                    "properties": [
                      {
                        "$id": "63",
                        "kind": "property",
                        "name": "sourceUrl",
                        "serializedName": "sourceUrl",
                        "doc": "Location of the folder / container or single file with your documents",
                        "type": {
                          "$id": "64",
                          "kind": "string",
                          "name": "string",
                          "crossLanguageDefinitionId": "TypeSpec.string",
                          "decorators": []
                        },
                        "optional": false,
                        "readOnly": false,
                        "discriminator": false,
                        "flatten": false,
                        "decorators": [],
                        "crossLanguageDefinitionId": "DocumentTranslation.SourceInput.sourceUrl",
                        "serializationOptions": {
                          "json": {
                            "name": "sourceUrl"
                          }
                        },
                        "isHttpMetadata": false
                      },
                      {
                        "$id": "65",
                        "kind": "property",
                        "name": "filter",
                        "serializedName": "filter",
                        "doc": "Document filter",
                        "type": {
                          "$id": "66",
                          "kind": "model",
                          "name": "DocumentFilter",
                          "namespace": "Azure.AI.Translation.Document",
                          "crossLanguageDefinitionId": "DocumentTranslation.DocumentFilter",
                          "usage": "Input,Json",
                          "doc": "Document filter",
                          "decorators": [],
                          "properties": [
                            {
                              "$id": "67",
                              "kind": "property",
                              "name": "prefix",
                              "serializedName": "prefix",
                              "doc": "A case-sensitive prefix string to filter documents in the source path for\ntranslation. \nFor example, when using a Azure storage blob Uri, use the prefix\nto restrict sub folders for translation.",
                              "type": {
                                "$id": "68",
                                "kind": "string",
                                "name": "string",
                                "crossLanguageDefinitionId": "TypeSpec.string",
                                "decorators": []
                              },
                              "optional": true,
                              "readOnly": false,
                              "discriminator": false,
                              "flatten": false,
                              "decorators": [],
                              "crossLanguageDefinitionId": "DocumentTranslation.DocumentFilter.prefix",
                              "serializationOptions": {
                                "json": {
                                  "name": "prefix"
                                }
                              },
                              "isHttpMetadata": false
                            },
                            {
                              "$id": "69",
                              "kind": "property",
                              "name": "suffix",
                              "serializedName": "suffix",
                              "doc": "A case-sensitive suffix string to filter documents in the source path for\ntranslation. \nThis is most often use for file extensions",
                              "type": {
                                "$id": "70",
                                "kind": "string",
                                "name": "string",
                                "crossLanguageDefinitionId": "TypeSpec.string",
                                "decorators": []
                              },
                              "optional": true,
                              "readOnly": false,
                              "discriminator": false,
                              "flatten": false,
                              "decorators": [],
                              "crossLanguageDefinitionId": "DocumentTranslation.DocumentFilter.suffix",
                              "serializationOptions": {
                                "json": {
                                  "name": "suffix"
                                }
                              },
                              "isHttpMetadata": false
                            }
                          ]
                        },
                        "optional": true,
                        "readOnly": false,
                        "discriminator": false,
                        "flatten": false,
                        "decorators": [],
                        "crossLanguageDefinitionId": "DocumentTranslation.SourceInput.filter",
                        "serializationOptions": {
                          "json": {
                            "name": "filter"
                          }
                        },
                        "isHttpMetadata": false
                      },
                      {
                        "$id": "71",
                        "kind": "property",
                        "name": "language",
                        "serializedName": "language",
                        "doc": "Language code\nIf none is specified, we will perform auto detect on the document",
                        "type": {
                          "$id": "72",
                          "kind": "string",
                          "name": "string",
                          "crossLanguageDefinitionId": "TypeSpec.string",
                          "decorators": []
                        },
                        "optional": true,
                        "readOnly": false,
                        "discriminator": false,
                        "flatten": false,
                        "decorators": [],
                        "crossLanguageDefinitionId": "DocumentTranslation.SourceInput.language",
                        "serializationOptions": {
                          "json": {
                            "name": "language"
                          }
                        },
                        "isHttpMetadata": false
                      },
                      {
                        "$id": "73",
                        "kind": "property",
                        "name": "storageSource",
                        "serializedName": "storageSource",
                        "doc": "Storage Source",
                        "type": {
                          "$ref": "1"
                        },
                        "optional": true,
                        "readOnly": false,
                        "discriminator": false,
                        "flatten": false,
                        "decorators": [],
                        "crossLanguageDefinitionId": "DocumentTranslation.SourceInput.storageSource",
                        "serializationOptions": {
                          "json": {
                            "name": "storageSource"
                          }
                        },
                        "isHttpMetadata": false
                      }
                    ]
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "DocumentTranslation.BatchRequest.source",
                  "serializationOptions": {
                    "json": {
                      "name": "source"
                    }
                  },
                  "isHttpMetadata": false
                },
                {
                  "$id": "74",
                  "kind": "property",
                  "name": "targets",
                  "serializedName": "targets",
                  "doc": "Location of the destination for the output",
                  "type": {
                    "$id": "75",
                    "kind": "array",
                    "name": "ArrayTargetInput",
                    "valueType": {
                      "$id": "76",
                      "kind": "model",
                      "name": "TargetInput",
                      "namespace": "Azure.AI.Translation.Document",
                      "crossLanguageDefinitionId": "DocumentTranslation.TargetInput",
                      "usage": "Input,Json",
                      "doc": "Destination for the finished translated documents",
                      "decorators": [],
                      "properties": [
                        {
                          "$id": "77",
                          "kind": "property",
                          "name": "targetUrl",
                          "serializedName": "targetUrl",
                          "doc": "Location of the folder / container with your documents",
                          "type": {
                            "$id": "78",
                            "kind": "string",
                            "name": "string",
                            "crossLanguageDefinitionId": "TypeSpec.string",
                            "decorators": []
                          },
                          "optional": false,
                          "readOnly": false,
                          "discriminator": false,
                          "flatten": false,
                          "decorators": [],
                          "crossLanguageDefinitionId": "DocumentTranslation.TargetInput.targetUrl",
                          "serializationOptions": {
                            "json": {
                              "name": "targetUrl"
                            }
                          },
                          "isHttpMetadata": false
                        },
                        {
                          "$id": "79",
                          "kind": "property",
                          "name": "category",
                          "serializedName": "category",
                          "doc": "Category / custom system for translation request",
                          "type": {
                            "$id": "80",
                            "kind": "string",
                            "name": "string",
                            "crossLanguageDefinitionId": "TypeSpec.string",
                            "decorators": []
                          },
                          "optional": true,
                          "readOnly": false,
                          "discriminator": false,
                          "flatten": false,
                          "decorators": [],
                          "crossLanguageDefinitionId": "DocumentTranslation.TargetInput.category",
                          "serializationOptions": {
                            "json": {
                              "name": "category"
                            }
                          },
                          "isHttpMetadata": false
                        },
                        {
                          "$id": "81",
                          "kind": "property",
                          "name": "language",
                          "serializedName": "language",
                          "doc": "Target Language",
                          "type": {
                            "$id": "82",
                            "kind": "string",
                            "name": "string",
                            "crossLanguageDefinitionId": "TypeSpec.string",
                            "decorators": []
                          },
                          "optional": false,
                          "readOnly": false,
                          "discriminator": false,
                          "flatten": false,
                          "decorators": [],
                          "crossLanguageDefinitionId": "DocumentTranslation.TargetInput.language",
                          "serializationOptions": {
                            "json": {
                              "name": "language"
                            }
                          },
                          "isHttpMetadata": false
                        },
                        {
                          "$id": "83",
                          "kind": "property",
                          "name": "glossaries",
                          "serializedName": "glossaries",
                          "doc": "List of Glossary",
                          "type": {
                            "$id": "84",
                            "kind": "array",
                            "name": "ArrayGlossary",
                            "valueType": {
                              "$id": "85",
                              "kind": "model",
                              "name": "Glossary",
                              "namespace": "Azure.AI.Translation.Document",
                              "crossLanguageDefinitionId": "DocumentTranslation.Glossary",
                              "usage": "Input,Json",
                              "doc": "Glossary / translation memory for the request",
                              "decorators": [],
                              "properties": [
                                {
                                  "$id": "86",
                                  "kind": "property",
                                  "name": "glossaryUrl",
                                  "serializedName": "glossaryUrl",
                                  "doc": "Location of the glossary. \nWe will use the file extension to extract the\nformatting if the format parameter is not supplied.\n\nIf the translation\nlanguage pair is not present in the glossary, it will not be applied",
                                  "type": {
                                    "$id": "87",
                                    "kind": "string",
                                    "name": "string",
                                    "crossLanguageDefinitionId": "TypeSpec.string",
                                    "decorators": []
                                  },
                                  "optional": false,
                                  "readOnly": false,
                                  "discriminator": false,
                                  "flatten": false,
                                  "decorators": [],
                                  "crossLanguageDefinitionId": "DocumentTranslation.Glossary.glossaryUrl",
                                  "serializationOptions": {
                                    "json": {
                                      "name": "glossaryUrl"
                                    }
                                  },
                                  "isHttpMetadata": false
                                },
                                {
                                  "$id": "88",
                                  "kind": "property",
                                  "name": "format",
                                  "serializedName": "format",
                                  "doc": "Format",
                                  "type": {
                                    "$id": "89",
                                    "kind": "string",
                                    "name": "string",
                                    "crossLanguageDefinitionId": "TypeSpec.string",
                                    "decorators": []
                                  },
                                  "optional": false,
                                  "readOnly": false,
                                  "discriminator": false,
                                  "flatten": false,
                                  "decorators": [],
                                  "crossLanguageDefinitionId": "DocumentTranslation.Glossary.format",
                                  "serializationOptions": {
                                    "json": {
                                      "name": "format"
                                    }
                                  },
                                  "isHttpMetadata": false
                                },
                                {
                                  "$id": "90",
                                  "kind": "property",
                                  "name": "version",
                                  "serializedName": "version",
                                  "doc": "Optional Version.  If not specified, default is used.",
                                  "type": {
                                    "$id": "91",
                                    "kind": "string",
                                    "name": "string",
                                    "crossLanguageDefinitionId": "TypeSpec.string",
                                    "decorators": []
                                  },
                                  "optional": true,
                                  "readOnly": false,
                                  "discriminator": false,
                                  "flatten": false,
                                  "decorators": [],
                                  "crossLanguageDefinitionId": "DocumentTranslation.Glossary.version",
                                  "serializationOptions": {
                                    "json": {
                                      "name": "version"
                                    }
                                  },
                                  "isHttpMetadata": false
                                },
                                {
                                  "$id": "92",
                                  "kind": "property",
                                  "name": "storageSource",
                                  "serializedName": "storageSource",
                                  "doc": "Storage Source",
                                  "type": {
                                    "$ref": "1"
                                  },
                                  "optional": true,
                                  "readOnly": false,
                                  "discriminator": false,
                                  "flatten": false,
                                  "decorators": [],
                                  "crossLanguageDefinitionId": "DocumentTranslation.Glossary.storageSource",
                                  "serializationOptions": {
                                    "json": {
                                      "name": "storageSource"
                                    }
                                  },
                                  "isHttpMetadata": false
                                }
                              ]
                            },
                            "crossLanguageDefinitionId": "TypeSpec.Array",
                            "decorators": []
                          },
                          "optional": true,
                          "readOnly": false,
                          "discriminator": false,
                          "flatten": false,
                          "decorators": [],
                          "crossLanguageDefinitionId": "DocumentTranslation.TargetInput.glossaries",
                          "serializationOptions": {
                            "json": {
                              "name": "glossaries"
                            }
                          },
                          "isHttpMetadata": false
                        },
                        {
                          "$id": "93",
                          "kind": "property",
                          "name": "storageSource",
                          "serializedName": "storageSource",
                          "doc": "Storage Source",
                          "type": {
                            "$ref": "1"
                          },
                          "optional": true,
                          "readOnly": false,
                          "discriminator": false,
                          "flatten": false,
                          "decorators": [],
                          "crossLanguageDefinitionId": "DocumentTranslation.TargetInput.storageSource",
                          "serializationOptions": {
                            "json": {
                              "name": "storageSource"
                            }
                          },
                          "isHttpMetadata": false
                        }
                      ]
                    },
                    "crossLanguageDefinitionId": "TypeSpec.Array",
                    "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "DocumentTranslation.BatchRequest.targets",
                  "serializationOptions": {
                    "json": {
                      "name": "targets"
                    }
                  },
                  "isHttpMetadata": false
                },
                {
                  "$id": "94",
                  "kind": "property",
                  "name": "storageType",
                  "serializedName": "storageType",
                  "doc": "Storage type of the input documents source string",
                  "type": {
                    "$ref": "4"
                  },
                  "optional": true,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "DocumentTranslation.BatchRequest.storageType",
                  "serializationOptions": {
                    "json": {
                      "name": "storageType"
                    }
                  },
                  "isHttpMetadata": false
                }
              ]
            },
            "crossLanguageDefinitionId": "TypeSpec.Array",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "DocumentTranslation.StartTranslationDetails.inputs",
          "serializationOptions": {
            "json": {
              "name": "inputs"
            }
          },
          "isHttpMetadata": false
        }
      ]
    },
    {
      "$ref": "60"
    },
    {
      "$ref": "62"
    },
    {
      "$ref": "66"
    },
    {
      "$ref": "76"
    },
    {
      "$ref": "85"
    },
    {
      "$id": "95",
      "kind": "model",
      "name": "ErrorResponse",
      "namespace": "Azure.AI.Translation.Document",
      "crossLanguageDefinitionId": "Azure.Core.Foundations.ErrorResponse",
      "usage": "Json,Exception",
      "doc": "A response containing error details.",
      "decorators": [],
      "properties": [
        {
          "$id": "96",
          "kind": "property",
          "name": "error",
          "serializedName": "error",
          "doc": "The error object.",
          "type": {
            "$id": "97",
            "kind": "model",
            "name": "Error",
            "namespace": "Azure.AI.Translation.Document",
            "crossLanguageDefinitionId": "Azure.Core.Foundations.Error",
            "usage": "Json,Exception",
            "doc": "The error object.",
            "decorators": [],
            "properties": [
              {
                "$id": "98",
                "kind": "property",
                "name": "code",
                "serializedName": "code",
                "doc": "One of a server-defined set of error codes.",
                "type": {
                  "$id": "99",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "optional": false,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "Azure.Core.Foundations.Error.code",
                "serializationOptions": {
                  "json": {
                    "name": "code"
                  }
                },
                "isHttpMetadata": false
              },
              {
                "$id": "100",
                "kind": "property",
                "name": "message",
                "serializedName": "message",
                "doc": "A human-readable representation of the error.",
                "type": {
                  "$id": "101",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "optional": false,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "Azure.Core.Foundations.Error.message",
                "serializationOptions": {
                  "json": {
                    "name": "message"
                  }
                },
                "isHttpMetadata": false
              },
              {
                "$id": "102",
                "kind": "property",
                "name": "target",
                "serializedName": "target",
                "doc": "The target of the error.",
                "type": {
                  "$id": "103",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "optional": true,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "Azure.Core.Foundations.Error.target",
                "serializationOptions": {
                  "json": {
                    "name": "target"
                  }
                },
                "isHttpMetadata": false
              },
              {
                "$id": "104",
                "kind": "property",
                "name": "details",
                "serializedName": "details",
                "doc": "An array of details about specific errors that led to this reported error.",
                "type": {
                  "$id": "105",
                  "kind": "array",
                  "name": "ArrayError",
                  "valueType": {
                    "$ref": "97"
                  },
                  "crossLanguageDefinitionId": "TypeSpec.Array",
                  "decorators": []
                },
                "optional": true,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "Azure.Core.Foundations.Error.details",
                "serializationOptions": {
                  "json": {
                    "name": "details"
                  }
                },
                "isHttpMetadata": false
              },
              {
                "$id": "106",
                "kind": "property",
                "name": "innererror",
                "serializedName": "innererror",
                "doc": "An object containing more specific information than the current object about the error.",
                "type": {
                  "$id": "107",
                  "kind": "model",
                  "name": "InnerError",
                  "namespace": "Azure.AI.Translation.Document",
                  "crossLanguageDefinitionId": "Azure.Core.Foundations.InnerError",
                  "usage": "Json,Exception",
                  "doc": "An object containing more specific information about the error. As per Azure REST API guidelines - https://aka.ms/AzureRestApiGuidelines#handling-errors.",
                  "decorators": [],
                  "properties": [
                    {
                      "$id": "108",
                      "kind": "property",
                      "name": "code",
                      "serializedName": "code",
                      "doc": "One of a server-defined set of error codes.",
                      "type": {
                        "$id": "109",
                        "kind": "string",
                        "name": "string",
                        "crossLanguageDefinitionId": "TypeSpec.string",
                        "decorators": []
                      },
                      "optional": true,
                      "readOnly": false,
                      "discriminator": false,
                      "flatten": false,
                      "decorators": [],
                      "crossLanguageDefinitionId": "Azure.Core.Foundations.InnerError.code",
                      "serializationOptions": {
                        "json": {
                          "name": "code"
                        }
                      },
                      "isHttpMetadata": false
                    },
                    {
                      "$id": "110",
                      "kind": "property",
                      "name": "innererror",
                      "serializedName": "innererror",
                      "doc": "Inner error.",
                      "type": {
                        "$ref": "107"
                      },
                      "optional": true,
                      "readOnly": false,
                      "discriminator": false,
                      "flatten": false,
                      "decorators": [],
                      "crossLanguageDefinitionId": "Azure.Core.Foundations.InnerError.innererror",
                      "serializationOptions": {
                        "json": {
                          "name": "innererror"
                        }
                      },
                      "isHttpMetadata": false
                    }
                  ]
                },
                "optional": true,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "Azure.Core.Foundations.Error.innererror",
                "serializationOptions": {
                  "json": {
                    "name": "innererror"
                  }
                },
                "isHttpMetadata": false
              }
            ]
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "Azure.Core.Foundations.ErrorResponse.error",
          "serializationOptions": {
            "json": {
              "name": "error"
            }
          },
          "isHttpMetadata": false
        },
        {
          "$id": "111",
          "kind": "header",
          "name": "errorCode",
          "serializedName": "errorCode",
          "doc": "String error code indicating what went wrong.",
          "type": {
            "$id": "112",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "Azure.Core.Foundations.ErrorResponse.errorCode",
          "serializationOptions": {
            "json": {
              "name": "errorCode"
            }
          },
          "isHttpMetadata": true
        }
      ]
    },
    {
      "$ref": "97"
    },
    {
      "$ref": "107"
    },
    {
      "$id": "113",
      "kind": "model",
      "name": "TranslationStatus",
      "namespace": "Azure.AI.Translation.Document",
      "crossLanguageDefinitionId": "DocumentTranslation.TranslationStatus",
      "usage": "Output,Json,LroPolling,LroFinalEnvelope",
      "doc": "Translation job status response",
      "decorators": [],
      "properties": [
        {
          "$id": "114",
          "kind": "property",
          "name": "id",
          "serializedName": "id",
          "doc": "Id of the translation operation.",
          "type": {
            "$id": "115",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "DocumentTranslation.TranslationStatus.id",
          "serializationOptions": {
            "json": {
              "name": "id"
            }
          },
          "isHttpMetadata": false
        },
        {
          "$id": "116",
          "kind": "property",
          "name": "createdDateTimeUtc",
          "serializedName": "createdDateTimeUtc",
          "doc": "Operation created date time",
          "type": {
            "$id": "117",
            "kind": "utcDateTime",
            "name": "utcDateTime",
            "encode": "rfc3339",
            "wireType": {
              "$id": "118",
              "kind": "string",
              "name": "string",
              "crossLanguageDefinitionId": "TypeSpec.string",
              "decorators": []
            },
            "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "DocumentTranslation.TranslationStatus.createdDateTimeUtc",
          "serializationOptions": {
            "json": {
              "name": "createdDateTimeUtc"
            }
          },
          "isHttpMetadata": false
        },
        {
          "$id": "119",
          "kind": "property",
          "name": "lastActionDateTimeUtc",
          "serializedName": "lastActionDateTimeUtc",
          "doc": "Date time in which the operation's status has been updated",
          "type": {
            "$id": "120",
            "kind": "utcDateTime",
            "name": "utcDateTime",
            "encode": "rfc3339",
            "wireType": {
              "$id": "121",
              "kind": "string",
              "name": "string",
              "crossLanguageDefinitionId": "TypeSpec.string",
              "decorators": []
            },
            "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "DocumentTranslation.TranslationStatus.lastActionDateTimeUtc",
          "serializationOptions": {
            "json": {
              "name": "lastActionDateTimeUtc"
            }
          },
          "isHttpMetadata": false
        },
        {
          "$id": "122",
          "kind": "property",
          "name": "status",
          "serializedName": "status",
          "doc": "List of possible statuses for job or document",
          "type": {
            "$ref": "8"
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "DocumentTranslation.TranslationStatus.status",
          "serializationOptions": {
            "json": {
              "name": "status"
            }
          },
          "isHttpMetadata": false
        },
        {
          "$id": "123",
          "kind": "property",
          "name": "error",
          "serializedName": "error",
          "doc": "This contains an outer error with error code, message, details, target and an\ninner error with more descriptive details.",
          "type": {
            "$id": "124",
            "kind": "model",
            "name": "TranslationError",
            "namespace": "Azure.AI.Translation.Document",
            "crossLanguageDefinitionId": "DocumentTranslation.TranslationError",
            "usage": "Output,Json,LroPolling,LroFinalEnvelope",
            "doc": "This contains an outer error with error code, message, details, target and an\ninner error with more descriptive details.",
            "decorators": [],
            "properties": [
              {
                "$id": "125",
                "kind": "property",
                "name": "code",
                "serializedName": "code",
                "doc": "Enums containing high level error codes.",
                "type": {
                  "$ref": "17"
                },
                "optional": false,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "DocumentTranslation.TranslationError.code",
                "serializationOptions": {
                  "json": {
                    "name": "code"
                  }
                },
                "isHttpMetadata": false
              },
              {
                "$id": "126",
                "kind": "property",
                "name": "message",
                "serializedName": "message",
                "doc": "Gets high level error message.",
                "type": {
                  "$id": "127",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "optional": false,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "DocumentTranslation.TranslationError.message",
                "serializationOptions": {
                  "json": {
                    "name": "message"
                  }
                },
                "isHttpMetadata": false
              },
              {
                "$id": "128",
                "kind": "property",
                "name": "target",
                "serializedName": "target",
                "doc": "Gets the source of the error. \nFor example it would be \"documents\" or\n\"document id\" in case of invalid document.",
                "type": {
                  "$id": "129",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "optional": true,
                "readOnly": true,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "DocumentTranslation.TranslationError.target",
                "serializationOptions": {
                  "json": {
                    "name": "target"
                  }
                },
                "isHttpMetadata": false
              },
              {
                "$id": "130",
                "kind": "property",
                "name": "innerError",
                "serializedName": "innerError",
                "doc": "New Inner Error format which conforms to Cognitive Services API Guidelines\nwhich is available at\nhttps://microsoft.sharepoint.com/%3Aw%3A/t/CognitiveServicesPMO/EUoytcrjuJdKpeOKIK_QRC8BPtUYQpKBi8JsWyeDMRsWlQ?e=CPq8ow.\nThis\ncontains required properties ErrorCode, message and optional properties target,\ndetails(key value pair), inner error(this can be nested).",
                "type": {
                  "$id": "131",
                  "kind": "model",
                  "name": "InnerTranslationError",
                  "namespace": "Azure.AI.Translation.Document",
                  "crossLanguageDefinitionId": "DocumentTranslation.InnerTranslationError",
                  "usage": "Output,Json,LroPolling,LroFinalEnvelope",
                  "doc": "New Inner Error format which conforms to Cognitive Services API Guidelines\nwhich is available at\nhttps://microsoft.sharepoint.com/%3Aw%3A/t/CognitiveServicesPMO/EUoytcrjuJdKpeOKIK_QRC8BPtUYQpKBi8JsWyeDMRsWlQ?e=CPq8ow.\nThis\ncontains required properties ErrorCode, message and optional properties target,\ndetails(key value pair), inner error(this can be nested).",
                  "decorators": [],
                  "properties": [
                    {
                      "$id": "132",
                      "kind": "property",
                      "name": "code",
                      "serializedName": "code",
                      "doc": "Gets code error string.",
                      "type": {
                        "$id": "133",
                        "kind": "string",
                        "name": "string",
                        "crossLanguageDefinitionId": "TypeSpec.string",
                        "decorators": []
                      },
                      "optional": false,
                      "readOnly": false,
                      "discriminator": false,
                      "flatten": false,
                      "decorators": [],
                      "crossLanguageDefinitionId": "DocumentTranslation.InnerTranslationError.code",
                      "serializationOptions": {
                        "json": {
                          "name": "code"
                        }
                      },
                      "isHttpMetadata": false
                    },
                    {
                      "$id": "134",
                      "kind": "property",
                      "name": "message",
                      "serializedName": "message",
                      "doc": "Gets high level error message.",
                      "type": {
                        "$id": "135",
                        "kind": "string",
                        "name": "string",
                        "crossLanguageDefinitionId": "TypeSpec.string",
                        "decorators": []
                      },
                      "optional": false,
                      "readOnly": false,
                      "discriminator": false,
                      "flatten": false,
                      "decorators": [],
                      "crossLanguageDefinitionId": "DocumentTranslation.InnerTranslationError.message",
                      "serializationOptions": {
                        "json": {
                          "name": "message"
                        }
                      },
                      "isHttpMetadata": false
                    },
                    {
                      "$id": "136",
                      "kind": "property",
                      "name": "target",
                      "serializedName": "target",
                      "doc": "Gets the source of the error. \nFor example it would be \"documents\" or\n\"document id\" in case of invalid document.",
                      "type": {
                        "$id": "137",
                        "kind": "string",
                        "name": "string",
                        "crossLanguageDefinitionId": "TypeSpec.string",
                        "decorators": []
                      },
                      "optional": true,
                      "readOnly": true,
                      "discriminator": false,
                      "flatten": false,
                      "decorators": [],
                      "crossLanguageDefinitionId": "DocumentTranslation.InnerTranslationError.target",
                      "serializationOptions": {
                        "json": {
                          "name": "target"
                        }
                      },
                      "isHttpMetadata": false
                    },
                    {
                      "$id": "138",
                      "kind": "property",
                      "name": "innerError",
                      "serializedName": "innerError",
                      "doc": "New Inner Error format which conforms to Cognitive Services API Guidelines\nwhich is available at\nhttps://microsoft.sharepoint.com/%3Aw%3A/t/CognitiveServicesPMO/EUoytcrjuJdKpeOKIK_QRC8BPtUYQpKBi8JsWyeDMRsWlQ?e=CPq8ow.\nThis\ncontains required properties ErrorCode, message and optional properties target,\ndetails(key value pair), inner error(this can be nested).",
                      "type": {
                        "$ref": "131"
                      },
                      "optional": true,
                      "readOnly": false,
                      "discriminator": false,
                      "flatten": false,
                      "decorators": [],
                      "crossLanguageDefinitionId": "DocumentTranslation.InnerTranslationError.innerError",
                      "serializationOptions": {
                        "json": {
                          "name": "innerError"
                        }
                      },
                      "isHttpMetadata": false
                    }
                  ]
                },
                "optional": true,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "DocumentTranslation.TranslationError.innerError",
                "serializationOptions": {
                  "json": {
                    "name": "innerError"
                  }
                },
                "isHttpMetadata": false
              }
            ]
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "DocumentTranslation.TranslationStatus.error",
          "serializationOptions": {
            "json": {
              "name": "error"
            }
          },
          "isHttpMetadata": false
        },
        {
          "$id": "139",
          "kind": "property",
          "name": "summary",
          "serializedName": "summary",
          "doc": "Status Summary",
          "type": {
            "$id": "140",
            "kind": "model",
            "name": "translationStatusSummary",
            "namespace": "Azure.AI.Translation.Document",
            "crossLanguageDefinitionId": "DocumentTranslation.StatusSummary",
            "usage": "Output,Json,LroPolling,LroFinalEnvelope",
            "doc": "Status Summary",
            "decorators": [],
            "properties": [
              {
                "$id": "141",
                "kind": "property",
                "name": "total",
                "serializedName": "total",
                "doc": "Total count",
                "type": {
                  "$id": "142",
                  "kind": "int32",
                  "name": "int32",
                  "crossLanguageDefinitionId": "TypeSpec.int32",
                  "decorators": []
                },
                "optional": false,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "DocumentTranslation.StatusSummary.total",
                "serializationOptions": {
                  "json": {
                    "name": "total"
                  }
                },
                "isHttpMetadata": false
              },
              {
                "$id": "143",
                "kind": "property",
                "name": "failed",
                "serializedName": "failed",
                "doc": "Failed count",
                "type": {
                  "$id": "144",
                  "kind": "int32",
                  "name": "int32",
                  "crossLanguageDefinitionId": "TypeSpec.int32",
                  "decorators": []
                },
                "optional": false,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "DocumentTranslation.StatusSummary.failed",
                "serializationOptions": {
                  "json": {
                    "name": "failed"
                  }
                },
                "isHttpMetadata": false
              },
              {
                "$id": "145",
                "kind": "property",
                "name": "success",
                "serializedName": "success",
                "doc": "Number of Success",
                "type": {
                  "$id": "146",
                  "kind": "int32",
                  "name": "int32",
                  "crossLanguageDefinitionId": "TypeSpec.int32",
                  "decorators": []
                },
                "optional": false,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "DocumentTranslation.StatusSummary.success",
                "serializationOptions": {
                  "json": {
                    "name": "success"
                  }
                },
                "isHttpMetadata": false
              },
              {
                "$id": "147",
                "kind": "property",
                "name": "inProgress",
                "serializedName": "inProgress",
                "doc": "Number of in progress",
                "type": {
                  "$id": "148",
                  "kind": "int32",
                  "name": "int32",
                  "crossLanguageDefinitionId": "TypeSpec.int32",
                  "decorators": []
                },
                "optional": false,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "DocumentTranslation.StatusSummary.inProgress",
                "serializationOptions": {
                  "json": {
                    "name": "inProgress"
                  }
                },
                "isHttpMetadata": false
              },
              {
                "$id": "149",
                "kind": "property",
                "name": "notYetStarted",
                "serializedName": "notYetStarted",
                "doc": "Count of not yet started",
                "type": {
                  "$id": "150",
                  "kind": "int32",
                  "name": "int32",
                  "crossLanguageDefinitionId": "TypeSpec.int32",
                  "decorators": []
                },
                "optional": false,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "DocumentTranslation.StatusSummary.notYetStarted",
                "serializationOptions": {
                  "json": {
                    "name": "notYetStarted"
                  }
                },
                "isHttpMetadata": false
              },
              {
                "$id": "151",
                "kind": "property",
                "name": "cancelled",
                "serializedName": "cancelled",
                "doc": "Number of cancelled",
                "type": {
                  "$id": "152",
                  "kind": "int32",
                  "name": "int32",
                  "crossLanguageDefinitionId": "TypeSpec.int32",
                  "decorators": []
                },
                "optional": false,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "DocumentTranslation.StatusSummary.cancelled",
                "serializationOptions": {
                  "json": {
                    "name": "cancelled"
                  }
                },
                "isHttpMetadata": false
              },
              {
                "$id": "153",
                "kind": "property",
                "name": "totalCharacterCharged",
                "serializedName": "totalCharacterCharged",
                "doc": "Total characters charged by the API",
                "type": {
                  "$id": "154",
                  "kind": "int64",
                  "name": "int64",
                  "crossLanguageDefinitionId": "TypeSpec.int64",
                  "decorators": []
                },
                "optional": false,
                "readOnly": false,
                "discriminator": false,
                "flatten": false,
                "decorators": [],
                "crossLanguageDefinitionId": "DocumentTranslation.StatusSummary.totalCharacterCharged",
                "serializationOptions": {
                  "json": {
                    "name": "totalCharacterCharged"
                  }
                },
                "isHttpMetadata": false
              }
            ]
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "DocumentTranslation.TranslationStatus.summary",
          "serializationOptions": {
            "json": {
              "name": "summary"
            }
          },
          "isHttpMetadata": false
        }
      ]
    },
    {
      "$ref": "124"
    },
    {
      "$ref": "131"
    },
    {
      "$ref": "140"
    },
    {
      "$id": "155",
      "kind": "model",
      "name": "TranslationsStatus",
      "namespace": "Azure.AI.Translation.Document",
      "crossLanguageDefinitionId": "DocumentTranslation.TranslationsStatus",
      "usage": "Output,Json",
      "doc": "Translation job Status Response",
      "decorators": [],
      "properties": [
        {
          "$id": "156",
          "kind": "property",
          "name": "value",
          "serializedName": "value",
          "doc": "The summary status of individual operation",
          "type": {
            "$id": "157",
            "kind": "array",
            "name": "ArrayTranslationStatus",
            "valueType": {
              "$ref": "113"
            },
            "crossLanguageDefinitionId": "TypeSpec.Array",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "DocumentTranslation.TranslationsStatus.value",
          "serializationOptions": {
            "json": {
              "name": "value"
            }
          },
          "isHttpMetadata": false
        },
        {
          "$id": "158",
          "kind": "property",
          "name": "nextLink",
          "serializedName": "nextLink",
          "doc": "Url for the next page.  Null if no more pages available",
          "type": {
            "$id": "159",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "DocumentTranslation.TranslationsStatus.nextLink",
          "serializationOptions": {
            "json": {
              "name": "nextLink"
            }
          },
          "isHttpMetadata": false
        }
      ]
    },
    {
      "$id": "160",
      "kind": "model",
      "name": "DocumentStatus",
      "namespace": "Azure.AI.Translation.Document",
      "crossLanguageDefinitionId": "DocumentTranslation.DocumentStatus",
      "usage": "Output,Json",
      "doc": "Document Status Response",
      "decorators": [],
      "properties": [
        {
          "$id": "161",
          "kind": "property",
          "name": "path",
          "serializedName": "path",
          "doc": "Location of the document or folder",
          "type": {
            "$id": "162",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "DocumentTranslation.DocumentStatus.path",
          "serializationOptions": {
            "json": {
              "name": "path"
            }
          },
          "isHttpMetadata": false
        },
        {
          "$id": "163",
          "kind": "property",
          "name": "sourcePath",
          "serializedName": "sourcePath",
          "doc": "Location of the source document",
          "type": {
            "$id": "164",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "DocumentTranslation.DocumentStatus.sourcePath",
          "serializationOptions": {
            "json": {
              "name": "sourcePath"
            }
          },
          "isHttpMetadata": false
        },
        {
          "$id": "165",
          "kind": "property",
          "name": "createdDateTimeUtc",
          "serializedName": "createdDateTimeUtc",
          "doc": "Operation created date time",
          "type": {
            "$id": "166",
            "kind": "utcDateTime",
            "name": "utcDateTime",
            "encode": "rfc3339",
            "wireType": {
              "$id": "167",
              "kind": "string",
              "name": "string",
              "crossLanguageDefinitionId": "TypeSpec.string",
              "decorators": []
            },
            "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "DocumentTranslation.DocumentStatus.createdDateTimeUtc",
          "serializationOptions": {
            "json": {
              "name": "createdDateTimeUtc"
            }
          },
          "isHttpMetadata": false
        },
        {
          "$id": "168",
          "kind": "property",
          "name": "lastActionDateTimeUtc",
          "serializedName": "lastActionDateTimeUtc",
          "doc": "Date time in which the operation's status has been updated",
          "type": {
            "$id": "169",
            "kind": "utcDateTime",
            "name": "utcDateTime",
            "encode": "rfc3339",
            "wireType": {
              "$id": "170",
              "kind": "string",
              "name": "string",
              "crossLanguageDefinitionId": "TypeSpec.string",
              "decorators": []
            },
            "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "DocumentTranslation.DocumentStatus.lastActionDateTimeUtc",
          "serializationOptions": {
            "json": {
              "name": "lastActionDateTimeUtc"
            }
          },
          "isHttpMetadata": false
        },
        {
          "$id": "171",
          "kind": "property",
          "name": "status",
          "serializedName": "status",
          "doc": "List of possible statuses for job or document",
          "type": {
            "$ref": "8"
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "DocumentTranslation.DocumentStatus.status",
          "serializationOptions": {
            "json": {
              "name": "status"
            }
          },
          "isHttpMetadata": false
        },
        {
          "$id": "172",
          "kind": "property",
          "name": "to",
          "serializedName": "to",
          "doc": "To language",
          "type": {
            "$id": "173",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "DocumentTranslation.DocumentStatus.to",
          "serializationOptions": {
            "json": {
              "name": "to"
            }
          },
          "isHttpMetadata": false
        },
        {
          "$id": "174",
          "kind": "property",
          "name": "error",
          "serializedName": "error",
          "doc": "This contains an outer error with error code, message, details, target and an\ninner error with more descriptive details.",
          "type": {
            "$ref": "124"
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "DocumentTranslation.DocumentStatus.error",
          "serializationOptions": {
            "json": {
              "name": "error"
            }
          },
          "isHttpMetadata": false
        },
        {
          "$id": "175",
          "kind": "property",
          "name": "progress",
          "serializedName": "progress",
          "doc": "Progress of the translation if available",
          "type": {
            "$id": "176",
            "kind": "float32",
            "name": "float32",
            "crossLanguageDefinitionId": "TypeSpec.float32",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "DocumentTranslation.DocumentStatus.progress",
          "serializationOptions": {
            "json": {
              "name": "progress"
            }
          },
          "isHttpMetadata": false
        },
        {
          "$id": "177",
          "kind": "property",
          "name": "id",
          "serializedName": "id",
          "doc": "Document Id",
          "type": {
            "$id": "178",
            "kind": "string",
            "name": "uuid",
            "crossLanguageDefinitionId": "Azure.Core.uuid",
            "baseType": {
              "$id": "179",
              "kind": "string",
              "name": "string",
              "crossLanguageDefinitionId": "TypeSpec.string",
              "decorators": []
            },
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "DocumentTranslation.DocumentStatus.id",
          "serializationOptions": {
            "json": {
              "name": "id"
            }
          },
          "isHttpMetadata": false
        },
        {
          "$id": "180",
          "kind": "property",
          "name": "characterCharged",
          "serializedName": "characterCharged",
          "doc": "Character charged by the API",
          "type": {
            "$id": "181",
            "kind": "int32",
            "name": "int32",
            "crossLanguageDefinitionId": "TypeSpec.int32",
            "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "DocumentTranslation.DocumentStatus.characterCharged",
          "serializationOptions": {
            "json": {
              "name": "characterCharged"
            }
          },
          "isHttpMetadata": false
        }
      ]
    },
    {
      "$id": "182",
      "kind": "model",
      "name": "DocumentsStatus",
      "namespace": "Azure.AI.Translation.Document",
      "crossLanguageDefinitionId": "DocumentTranslation.DocumentsStatus",
      "usage": "Output,Json",
      "doc": "Documents Status Response",
      "decorators": [],
      "properties": [
        {
          "$id": "183",
          "kind": "property",
          "name": "value",
          "serializedName": "value",
          "doc": "The detail status of individual documents",
          "type": {
            "$id": "184",
            "kind": "array",
            "name": "ArrayDocumentStatus",
            "valueType": {
              "$ref": "160"
            },
            "crossLanguageDefinitionId": "TypeSpec.Array",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "DocumentTranslation.DocumentsStatus.value",
          "serializationOptions": {
            "json": {
              "name": "value"
            }
          },
          "isHttpMetadata": false
        },
        {
          "$id": "185",
          "kind": "property",
          "name": "nextLink",
          "serializedName": "nextLink",
          "doc": "Url for the next page.  Null if no more pages available",
          "type": {
            "$id": "186",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "DocumentTranslation.DocumentsStatus.nextLink",
          "serializationOptions": {
            "json": {
              "name": "nextLink"
            }
          },
          "isHttpMetadata": false
        }
      ]
    },
    {
      "$id": "187",
      "kind": "model",
      "name": "SupportedFileFormats",
      "namespace": "Azure.AI.Translation.Document",
      "crossLanguageDefinitionId": "DocumentTranslation.SupportedFileFormats",
      "usage": "Output,Json",
      "doc": "List of supported file formats",
      "decorators": [],
      "properties": [
        {
          "$id": "188",
          "kind": "property",
          "name": "value",
          "serializedName": "value",
          "doc": "list of objects",
          "type": {
            "$id": "189",
            "kind": "array",
            "name": "ArrayFileFormat",
            "valueType": {
              "$id": "190",
              "kind": "model",
              "name": "FileFormat",
              "namespace": "Azure.AI.Translation.Document",
              "crossLanguageDefinitionId": "DocumentTranslation.FileFormat",
              "usage": "Output,Json",
              "doc": "File Format",
              "decorators": [],
              "properties": [
                {
                  "$id": "191",
                  "kind": "property",
                  "name": "format",
                  "serializedName": "format",
                  "doc": "Name of the format",
                  "type": {
                    "$id": "192",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "DocumentTranslation.FileFormat.format",
                  "serializationOptions": {
                    "json": {
                      "name": "format"
                    }
                  },
                  "isHttpMetadata": false
                },
                {
                  "$id": "193",
                  "kind": "property",
                  "name": "fileExtensions",
                  "serializedName": "fileExtensions",
                  "doc": "Supported file extension for this format",
                  "type": {
                    "$id": "194",
                    "kind": "array",
                    "name": "Array1",
                    "valueType": {
                      "$id": "195",
                      "kind": "string",
                      "name": "string",
                      "crossLanguageDefinitionId": "TypeSpec.string",
                      "decorators": []
                    },
                    "crossLanguageDefinitionId": "TypeSpec.Array",
                    "decorators": []
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "DocumentTranslation.FileFormat.fileExtensions",
                  "serializationOptions": {
                    "json": {
                      "name": "fileExtensions"
                    }
                  },
                  "isHttpMetadata": false
                },
                {
                  "$id": "196",
                  "kind": "property",
                  "name": "contentTypes",
                  "serializedName": "contentTypes",
                  "doc": "Supported Content-Types for this format",
                  "type": {
                    "$ref": "194"
                  },
                  "optional": false,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "DocumentTranslation.FileFormat.contentTypes",
                  "serializationOptions": {
                    "json": {
                      "name": "contentTypes"
                    }
                  },
                  "isHttpMetadata": false
                },
                {
                  "$id": "197",
                  "kind": "property",
                  "name": "defaultVersion",
                  "serializedName": "defaultVersion",
                  "doc": "Default version if none is specified",
                  "type": {
                    "$id": "198",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                  },
                  "optional": true,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "DocumentTranslation.FileFormat.defaultVersion",
                  "serializationOptions": {
                    "json": {
                      "name": "defaultVersion"
                    }
                  },
                  "isHttpMetadata": false
                },
                {
                  "$id": "199",
                  "kind": "property",
                  "name": "versions",
                  "serializedName": "versions",
                  "doc": "Supported Version",
                  "type": {
                    "$ref": "194"
                  },
                  "optional": true,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "DocumentTranslation.FileFormat.versions",
                  "serializationOptions": {
                    "json": {
                      "name": "versions"
                    }
                  },
                  "isHttpMetadata": false
                },
                {
                  "$id": "200",
                  "kind": "property",
                  "name": "type",
                  "serializedName": "type",
                  "doc": "Supported Type for this format",
                  "type": {
                    "$ref": "26"
                  },
                  "optional": true,
                  "readOnly": false,
                  "discriminator": false,
                  "flatten": false,
                  "decorators": [],
                  "crossLanguageDefinitionId": "DocumentTranslation.FileFormat.type",
                  "serializationOptions": {
                    "json": {
                      "name": "type"
                    }
                  },
                  "isHttpMetadata": false
                }
              ]
            },
            "crossLanguageDefinitionId": "TypeSpec.Array",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "DocumentTranslation.SupportedFileFormats.value",
          "serializationOptions": {
            "json": {
              "name": "value"
            }
          },
          "isHttpMetadata": false
        }
      ]
    },
    {
      "$ref": "190"
    },
    {
      "$id": "201",
      "kind": "model",
      "name": "DocumentTranslateContent",
      "namespace": "Azure.AI.Translation.Document",
      "crossLanguageDefinitionId": "DocumentTranslation.DocumentTranslateContent",
      "usage": "Input,MultipartFormData",
      "doc": "Document Translate Request Content",
      "decorators": [],
      "properties": [
        {
          "$id": "202",
          "kind": "property",
          "name": "document",
          "serializedName": "document",
          "doc": "Document to be translated in the form",
          "type": {
            "$id": "203",
            "kind": "bytes",
            "name": "bytes",
            "encode": "base64",
            "crossLanguageDefinitionId": "TypeSpec.bytes",
            "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "DocumentTranslation.DocumentTranslateContent.document",
          "serializationOptions": {
            "multipart": {
              "isFilePart": true,
              "isMulti": false,
              "defaultContentTypes": [
                "application/octet-stream"
              ],
              "name": "document",
              "headers": []
            }
          },
          "isHttpMetadata": false
        },
        {
          "$id": "204",
          "kind": "property",
          "name": "glossary",
          "serializedName": "glossary",
          "doc": "Glossary-translation memory will be used during translation in the form. ",
          "type": {
            "$id": "205",
            "kind": "array",
            "name": "Array2",
            "valueType": {
              "$id": "206",
              "kind": "bytes",
              "name": "bytes",
              "encode": "base64",
              "crossLanguageDefinitionId": "TypeSpec.bytes",
              "decorators": []
            },
            "crossLanguageDefinitionId": "TypeSpec.Array",
            "decorators": []
          },
          "optional": true,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "DocumentTranslation.DocumentTranslateContent.glossary",
          "serializationOptions": {
            "multipart": {
              "isFilePart": true,
              "isMulti": false,
              "defaultContentTypes": [
                "application/json"
              ],
              "name": "glossary",
              "headers": []
            }
          },
          "isHttpMetadata": false
        }
      ]
    }
  ],
  "clients": [
    {
      "$id": "207",
      "kind": "client",
      "name": "DocumentTranslationClient",
      "namespace": "Azure.AI.Translation.Document",
      "methods": [
        {
          "$id": "208",
          "kind": "lro",
          "name": "startTranslation",
          "accessibility": "public",
          "apiVersions": [
            "2024-05-01"
          ],
          "doc": "Use this API to submit a bulk (batch) translation request to the Document\nTranslation service.\nEach request can contain multiple documents and must\ncontain a source and destination container for each document.\n            \nThe\nprefix and suffix filter (if supplied) are used to filter folders. The prefix\nis applied to the subpath after the container name.\n            \nGlossaries /\nTranslation memory can be included in the request and are applied by the\nservice when the document is translated.\n            \nIf the glossary is\ninvalid or unreachable during translation, an error is indicated in the\ndocument status.\nIf a file with the same name already exists at the\ndestination, it will be overwritten. The targetUrl for each target language\nmust be unique.",
          "summary": "Submit a document translation request to the Document Translation service",
          "operation": {
            "$id": "209",
            "name": "startTranslation",
            "resourceName": "DocumentTranslationClient",
            "summary": "Submit a document translation request to the Document Translation service",
            "doc": "Use this API to submit a bulk (batch) translation request to the Document\nTranslation service.\nEach request can contain multiple documents and must\ncontain a source and destination container for each document.\n            \nThe\nprefix and suffix filter (if supplied) are used to filter folders. The prefix\nis applied to the subpath after the container name.\n            \nGlossaries /\nTranslation memory can be included in the request and are applied by the\nservice when the document is translated.\n            \nIf the glossary is\ninvalid or unreachable during translation, an error is indicated in the\ndocument status.\nIf a file with the same name already exists at the\ndestination, it will be overwritten. The targetUrl for each target language\nmust be unique.",
            "accessibility": "public",
            "parameters": [
              {
                "$id": "210",
                "name": "apiVersion",
                "nameInRequest": "api-version",
                "doc": "The API version to use for this operation.",
                "type": {
                  "$id": "211",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": true,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Client",
                "defaultValue": {
                  "type": {
                    "$id": "212",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string"
                  },
                  "value": "2024-05-01"
                },
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "213",
                "name": "contentType",
                "nameInRequest": "Content-Type",
                "doc": "Body parameter's content type. Known values are application/json",
                "type": {
                  "$ref": "33"
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": true,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Constant",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "214",
                "name": "body",
                "nameInRequest": "body",
                "doc": "Translation job submission batch request",
                "type": {
                  "$ref": "57"
                },
                "location": "Body",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              }
            ],
            "responses": [
              {
                "statusCodes": [
                  202
                ],
                "headers": [
                  {
                    "name": "operationLocation",
                    "nameInResponse": "Operation-Location",
                    "doc": "Link to the translation operation status",
                    "type": {
                      "$id": "215",
                      "kind": "string",
                      "name": "string",
                      "crossLanguageDefinitionId": "TypeSpec.string",
                      "decorators": []
                    }
                  }
                ],
                "isErrorResponse": false
              }
            ],
            "httpMethod": "POST",
            "uri": "{endpoint}/translator",
            "path": "/document/batches",
            "requestMediaTypes": [
              "application/json"
            ],
            "bufferResponse": true,
            "generateProtocolMethod": true,
            "generateConvenienceMethod": true,
            "crossLanguageDefinitionId": "ClientCustomizations.DocumentTranslationClient.startTranslation",
            "decorators": [],
            "examples": [
              {
                "$id": "216",
                "kind": "http",
                "name": "Submit a document translation request to the Document Translation service",
                "description": "Submit a document translation request to the Document Translation service",
                "filePath": "2024-05-01/batch.json",
                "parameters": [
                  {
                    "parameter": {
                      "$ref": "210"
                    },
                    "value": {
                      "$id": "217",
                      "kind": "string",
                      "type": {
                        "$ref": "211"
                      },
                      "value": "2024-05-01"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "214"
                    },
                    "value": {
                      "$id": "218",
                      "kind": "model",
                      "type": {
                        "$ref": "57"
                      },
                      "value": {
                        "inputs": {
                          "$id": "219",
                          "kind": "array",
                          "type": {
                            "$ref": "59"
                          },
                          "value": [
                            {
                              "$id": "220",
                              "kind": "model",
                              "type": {
                                "$ref": "60"
                              },
                              "value": {
                                "source": {
                                  "$id": "221",
                                  "kind": "model",
                                  "type": {
                                    "$ref": "62"
                                  },
                                  "value": {
                                    "sourceUrl": {
                                      "$id": "222",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "64"
                                      },
                                      "value": "https://myblob.blob.core.windows.net/sourceContainer"
                                    },
                                    "filter": {
                                      "$id": "223",
                                      "kind": "model",
                                      "type": {
                                        "$ref": "66"
                                      },
                                      "value": {
                                        "prefix": {
                                          "$id": "224",
                                          "kind": "string",
                                          "type": {
                                            "$ref": "68"
                                          },
                                          "value": "pre"
                                        },
                                        "suffix": {
                                          "$id": "225",
                                          "kind": "string",
                                          "type": {
                                            "$ref": "70"
                                          },
                                          "value": ".txt"
                                        }
                                      }
                                    },
                                    "language": {
                                      "$id": "226",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "72"
                                      },
                                      "value": "en"
                                    },
                                    "storageSource": {
                                      "$id": "227",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "1"
                                      },
                                      "value": "AzureBlob"
                                    }
                                  }
                                },
                                "targets": {
                                  "$id": "228",
                                  "kind": "array",
                                  "type": {
                                    "$ref": "75"
                                  },
                                  "value": [
                                    {
                                      "$id": "229",
                                      "kind": "model",
                                      "type": {
                                        "$ref": "76"
                                      },
                                      "value": {
                                        "targetUrl": {
                                          "$id": "230",
                                          "kind": "string",
                                          "type": {
                                            "$ref": "78"
                                          },
                                          "value": "https://myblob.blob.core.windows.net/destinationContainer1"
                                        },
                                        "category": {
                                          "$id": "231",
                                          "kind": "string",
                                          "type": {
                                            "$ref": "80"
                                          },
                                          "value": "general"
                                        },
                                        "language": {
                                          "$id": "232",
                                          "kind": "string",
                                          "type": {
                                            "$ref": "82"
                                          },
                                          "value": "fr"
                                        },
                                        "glossaries": {
                                          "$id": "233",
                                          "kind": "array",
                                          "type": {
                                            "$ref": "84"
                                          },
                                          "value": [
                                            {
                                              "$id": "234",
                                              "kind": "model",
                                              "type": {
                                                "$ref": "85"
                                              },
                                              "value": {
                                                "glossaryUrl": {
                                                  "$id": "235",
                                                  "kind": "string",
                                                  "type": {
                                                    "$ref": "87"
                                                  },
                                                  "value": "https://myblob.blob.core.windows.net/myglossary/en_fr_glossary.xlf"
                                                },
                                                "storageSource": {
                                                  "$id": "236",
                                                  "kind": "string",
                                                  "type": {
                                                    "$ref": "1"
                                                  },
                                                  "value": "AzureBlob"
                                                },
                                                "format": {
                                                  "$id": "237",
                                                  "kind": "string",
                                                  "type": {
                                                    "$ref": "89"
                                                  },
                                                  "value": "XLIFF"
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "storageSource": {
                                          "$id": "238",
                                          "kind": "string",
                                          "type": {
                                            "$ref": "1"
                                          },
                                          "value": "AzureBlob"
                                        }
                                      }
                                    },
                                    {
                                      "$id": "239",
                                      "kind": "model",
                                      "type": {
                                        "$ref": "76"
                                      },
                                      "value": {
                                        "targetUrl": {
                                          "$id": "240",
                                          "kind": "string",
                                          "type": {
                                            "$ref": "78"
                                          },
                                          "value": "https://myblob.blob.core.windows.net/destinationContainer2"
                                        },
                                        "category": {
                                          "$id": "241",
                                          "kind": "string",
                                          "type": {
                                            "$ref": "80"
                                          },
                                          "value": "general"
                                        },
                                        "language": {
                                          "$id": "242",
                                          "kind": "string",
                                          "type": {
                                            "$ref": "82"
                                          },
                                          "value": "es"
                                        },
                                        "storageSource": {
                                          "$id": "243",
                                          "kind": "string",
                                          "type": {
                                            "$ref": "1"
                                          },
                                          "value": "AzureBlob"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "storageType": {
                                  "$id": "244",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "4"
                                  },
                                  "value": "Folder"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                ],
                "responses": [
                  {
                    "response": {
                      "statusCodes": [
                        202
                      ],
                      "headers": [
                        {
                          "name": "operationLocation",
                          "nameInResponse": "Operation-Location",
                          "doc": "Link to the translation operation status",
                          "type": {
                            "$ref": "215"
                          }
                        }
                      ],
                      "isErrorResponse": false
                    },
                    "statusCode": 202
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "$id": "245",
              "name": "body",
              "nameInRequest": "body",
              "doc": "Translation job submission batch request",
              "type": {
                "$ref": "57"
              },
              "location": "Body",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "246",
              "name": "contentType",
              "nameInRequest": "Content-Type",
              "doc": "Body parameter's content type. Known values are application/json",
              "type": {
                "$ref": "35"
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": true,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Constant",
              "decorators": [],
              "skipUrlEncoding": false
            }
          ],
          "response": {
            "type": {
              "$ref": "113"
            }
          },
          "isOverride": false,
          "generateConvenient": true,
          "generateProtocol": true,
          "crossLanguageDefinitionId": "ClientCustomizations.DocumentTranslationClient.startTranslation",
          "lroMetadata": {
            "finalStateVia": 3,
            "finalResponse": {
              "statusCodes": [
                200
              ],
              "bodyType": {
                "$ref": "113"
              }
            }
          }
        },
        {
          "$id": "247",
          "kind": "paging",
          "name": "getTranslationsStatus",
          "accessibility": "public",
          "apiVersions": [
            "2024-05-01"
          ],
          "doc": "Returns a list of batch requests submitted and the status for each\nrequest.\nThis list only contains batch requests submitted by the user (based on\nthe resource).\n            \nIf the number of requests exceeds our paging limit,\nserver-side paging is used. Paginated responses indicate a partial result and\ninclude a continuation token in the response.\nThe absence of a continuation\ntoken means that no additional pages are available.\n            \ntop, skip\nand maxpagesize query parameters can be used to specify a number of results to\nreturn and an offset for the collection.\n            \ntop indicates the total\nnumber of records the user wants to be returned across all pages.\nskip\nindicates the number of records to skip from the list of batches based on the\nsorting method specified.  By default, we sort by descending start\ntime.\nmaxpagesize is the maximum items returned in a page.  If more items are\nrequested via top (or top is not specified and there are more items to be\nreturned), @nextLink will contain the link to the next page.\n           \n\norderby query parameter can be used to sort the returned list (ex\n\"orderby=createdDateTimeUtc asc\" or \"orderby=createdDateTimeUtc\ndesc\").\nThe default sorting is descending by createdDateTimeUtc.\nSome query\nparameters can be used to filter the returned list (ex:\n\"status=Succeeded,Cancelled\") will only return succeeded and cancelled\noperations.\ncreatedDateTimeUtcStart and createdDateTimeUtcEnd can be used\ncombined or separately to specify a range of datetime to filter the returned\nlist by.\nThe supported filtering query parameters are (status, ids,\ncreatedDateTimeUtcStart, createdDateTimeUtcEnd).\n            \nThe server honors\nthe values specified by the client. However, clients must be prepared to handle\nresponses that contain a different page size or contain a continuation token.\n \n          \nWhen both top and skip are included, the server should first apply\nskip and then top on the collection.\nNote: If the server can't honor top\nand/or skip, the server must return an error to the client informing about it\ninstead of just ignoring the query options.\nThis reduces the risk of the client\nmaking assumptions about the data returned.",
          "summary": "Returns a list of batch requests submitted and the status for each request",
          "operation": {
            "$id": "248",
            "name": "getTranslationsStatus",
            "resourceName": "DocumentTranslationClient",
            "summary": "Returns a list of batch requests submitted and the status for each request",
            "doc": "Returns a list of batch requests submitted and the status for each\nrequest.\nThis list only contains batch requests submitted by the user (based on\nthe resource).\n            \nIf the number of requests exceeds our paging limit,\nserver-side paging is used. Paginated responses indicate a partial result and\ninclude a continuation token in the response.\nThe absence of a continuation\ntoken means that no additional pages are available.\n            \ntop, skip\nand maxpagesize query parameters can be used to specify a number of results to\nreturn and an offset for the collection.\n            \ntop indicates the total\nnumber of records the user wants to be returned across all pages.\nskip\nindicates the number of records to skip from the list of batches based on the\nsorting method specified.  By default, we sort by descending start\ntime.\nmaxpagesize is the maximum items returned in a page.  If more items are\nrequested via top (or top is not specified and there are more items to be\nreturned), @nextLink will contain the link to the next page.\n           \n\norderby query parameter can be used to sort the returned list (ex\n\"orderby=createdDateTimeUtc asc\" or \"orderby=createdDateTimeUtc\ndesc\").\nThe default sorting is descending by createdDateTimeUtc.\nSome query\nparameters can be used to filter the returned list (ex:\n\"status=Succeeded,Cancelled\") will only return succeeded and cancelled\noperations.\ncreatedDateTimeUtcStart and createdDateTimeUtcEnd can be used\ncombined or separately to specify a range of datetime to filter the returned\nlist by.\nThe supported filtering query parameters are (status, ids,\ncreatedDateTimeUtcStart, createdDateTimeUtcEnd).\n            \nThe server honors\nthe values specified by the client. However, clients must be prepared to handle\nresponses that contain a different page size or contain a continuation token.\n \n          \nWhen both top and skip are included, the server should first apply\nskip and then top on the collection.\nNote: If the server can't honor top\nand/or skip, the server must return an error to the client informing about it\ninstead of just ignoring the query options.\nThis reduces the risk of the client\nmaking assumptions about the data returned.",
            "accessibility": "public",
            "parameters": [
              {
                "$id": "249",
                "name": "apiVersion",
                "nameInRequest": "api-version",
                "doc": "The API version to use for this operation.",
                "type": {
                  "$id": "250",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": true,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Client",
                "defaultValue": {
                  "type": {
                    "$id": "251",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string"
                  },
                  "value": "2024-05-01"
                },
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "252",
                "name": "top",
                "nameInRequest": "top",
                "doc": "top indicates the total number of records the user wants to be returned across\nall pages.\n            \nClients MAY use top and skip query parameters to\nspecify a number of results to return and an offset into the collection.\nWhen\nboth top and skip are given by a client, the server SHOULD first apply skip\nand then top on the collection.\n            \nNote: If the server can't honor\ntop and/or skip, the server MUST return an error to the client informing\nabout it instead of just ignoring the query options.",
                "type": {
                  "$id": "253",
                  "kind": "int32",
                  "name": "int32",
                  "crossLanguageDefinitionId": "TypeSpec.int32",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "254",
                "name": "skip",
                "nameInRequest": "skip",
                "doc": "skip indicates the number of records to skip from the list of records held by\nthe server based on the sorting method specified.  By default, we sort by\ndescending start time.\n            \nClients MAY use top and skip query\nparameters to specify a number of results to return and an offset into the\ncollection.\nWhen both top and skip are given by a client, the server SHOULD\nfirst apply skip and then top on the collection.\n            \nNote: If the\nserver can't honor top and/or skip, the server MUST return an error to the\nclient informing about it instead of just ignoring the query options.",
                "type": {
                  "$id": "255",
                  "kind": "int32",
                  "name": "int32",
                  "crossLanguageDefinitionId": "TypeSpec.int32",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "256",
                "name": "maxpagesize",
                "nameInRequest": "maxpagesize",
                "doc": "maxpagesize is the maximum items returned in a page.  If more items are\nrequested via top (or top is not specified and there are more items to be\nreturned), @nextLink will contain the link to the next page.\n           \n\nClients MAY request server-driven paging with a specific page size by\nspecifying a maxpagesize preference. The server SHOULD honor this preference\nif the specified page size is smaller than the server's default page size.",
                "type": {
                  "$id": "257",
                  "kind": "int32",
                  "name": "int32",
                  "crossLanguageDefinitionId": "TypeSpec.int32",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "258",
                "name": "translationIds",
                "nameInRequest": "ids",
                "doc": "Ids to use in filtering",
                "type": {
                  "$id": "259",
                  "kind": "array",
                  "name": "Array",
                  "valueType": {
                    "$id": "260",
                    "kind": "string",
                    "name": "uuid",
                    "crossLanguageDefinitionId": "Azure.Core.uuid",
                    "baseType": {
                      "$id": "261",
                      "kind": "string",
                      "name": "string",
                      "crossLanguageDefinitionId": "TypeSpec.string",
                      "decorators": []
                    },
                    "decorators": []
                  },
                  "crossLanguageDefinitionId": "TypeSpec.Array",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "arraySerializationDelimiter": ",",
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "262",
                "name": "statuses",
                "nameInRequest": "statuses",
                "doc": "Statuses to use in filtering",
                "type": {
                  "$ref": "194"
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "arraySerializationDelimiter": ",",
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "263",
                "name": "createdDateTimeUtcStart",
                "nameInRequest": "createdDateTimeUtcStart",
                "doc": "the start datetime to get items after",
                "type": {
                  "$id": "264",
                  "kind": "utcDateTime",
                  "name": "utcDateTime",
                  "encode": "rfc3339",
                  "wireType": {
                    "$id": "265",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                  },
                  "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "266",
                "name": "createdDateTimeUtcEnd",
                "nameInRequest": "createdDateTimeUtcEnd",
                "doc": "the end datetime to get items before",
                "type": {
                  "$id": "267",
                  "kind": "utcDateTime",
                  "name": "utcDateTime",
                  "encode": "rfc3339",
                  "wireType": {
                    "$id": "268",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                  },
                  "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "269",
                "name": "orderby",
                "nameInRequest": "orderby",
                "doc": "the sorting query for the collection (ex: 'CreatedDateTimeUtc asc','CreatedDateTimeUtc desc')",
                "type": {
                  "$ref": "194"
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "arraySerializationDelimiter": ",",
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "270",
                "name": "accept",
                "nameInRequest": "Accept",
                "type": {
                  "$ref": "37"
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Constant",
                "decorators": [],
                "skipUrlEncoding": false
              }
            ],
            "responses": [
              {
                "statusCodes": [
                  200
                ],
                "bodyType": {
                  "$ref": "155"
                },
                "headers": [],
                "isErrorResponse": false,
                "contentTypes": [
                  "application/json"
                ]
              }
            ],
            "httpMethod": "GET",
            "uri": "{endpoint}/translator",
            "path": "/document/batches",
            "bufferResponse": true,
            "generateProtocolMethod": true,
            "generateConvenienceMethod": true,
            "crossLanguageDefinitionId": "ClientCustomizations.DocumentTranslationClient.getTranslationsStatus",
            "decorators": [],
            "examples": [
              {
                "$id": "271",
                "kind": "http",
                "name": "Returns a list of batch requests submitted and the status for each request",
                "description": "Returns a list of batch requests submitted and the status for each request",
                "filePath": "2024-05-01/operations.json",
                "parameters": [
                  {
                    "parameter": {
                      "$ref": "249"
                    },
                    "value": {
                      "$id": "272",
                      "kind": "string",
                      "type": {
                        "$ref": "250"
                      },
                      "value": "2024-05-01"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "252"
                    },
                    "value": {
                      "$id": "273",
                      "kind": "number",
                      "type": {
                        "$ref": "253"
                      },
                      "value": 1
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "254"
                    },
                    "value": {
                      "$id": "274",
                      "kind": "number",
                      "type": {
                        "$ref": "255"
                      },
                      "value": 0
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "256"
                    },
                    "value": {
                      "$id": "275",
                      "kind": "number",
                      "type": {
                        "$ref": "257"
                      },
                      "value": 10
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "263"
                    },
                    "value": {
                      "$id": "276",
                      "kind": "string",
                      "type": {
                        "$ref": "264"
                      },
                      "value": "2021-03-23T07:03:38.0136316Z"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "266"
                    },
                    "value": {
                      "$id": "277",
                      "kind": "string",
                      "type": {
                        "$ref": "267"
                      },
                      "value": "2021-03-25T07:03:38.0136316Z"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "262"
                    },
                    "value": {
                      "$id": "278",
                      "kind": "array",
                      "type": {
                        "$ref": "194"
                      },
                      "value": [
                        {
                          "$id": "279",
                          "kind": "string",
                          "type": {
                            "$ref": "195"
                          },
                          "value": "Succeeded"
                        }
                      ]
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "258"
                    },
                    "value": {
                      "$id": "280",
                      "kind": "array",
                      "type": {
                        "$ref": "259"
                      },
                      "value": [
                        {
                          "$id": "281",
                          "kind": "string",
                          "type": {
                            "$ref": "260"
                          },
                          "value": "273622bd-835c-4946-9798-fd8f19f6bbf2"
                        }
                      ]
                    }
                  }
                ],
                "responses": [
                  {
                    "response": {
                      "statusCodes": [
                        200
                      ],
                      "bodyType": {
                        "$ref": "155"
                      },
                      "headers": [],
                      "isErrorResponse": false,
                      "contentTypes": [
                        "application/json"
                      ]
                    },
                    "statusCode": 200,
                    "bodyValue": {
                      "$id": "282",
                      "kind": "model",
                      "type": {
                        "$ref": "155"
                      },
                      "value": {
                        "value": {
                          "$id": "283",
                          "kind": "array",
                          "type": {
                            "$ref": "157"
                          },
                          "value": [
                            {
                              "$id": "284",
                              "kind": "model",
                              "type": {
                                "$ref": "113"
                              },
                              "value": {
                                "id": {
                                  "$id": "285",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "115"
                                  },
                                  "value": "273622bd-835c-4946-9798-fd8f19f6bbf2"
                                },
                                "createdDateTimeUtc": {
                                  "$id": "286",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "117"
                                  },
                                  "value": "2021-03-23T07:03:30.013631Z"
                                },
                                "lastActionDateTimeUtc": {
                                  "$id": "287",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "120"
                                  },
                                  "value": "2021-03-26T01:00:00Z"
                                },
                                "status": {
                                  "$id": "288",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "8"
                                  },
                                  "value": "Succeeded"
                                },
                                "summary": {
                                  "$id": "289",
                                  "kind": "model",
                                  "type": {
                                    "$ref": "140"
                                  },
                                  "value": {
                                    "total": {
                                      "$id": "290",
                                      "kind": "number",
                                      "type": {
                                        "$ref": "142"
                                      },
                                      "value": 10
                                    },
                                    "failed": {
                                      "$id": "291",
                                      "kind": "number",
                                      "type": {
                                        "$ref": "144"
                                      },
                                      "value": 1
                                    },
                                    "success": {
                                      "$id": "292",
                                      "kind": "number",
                                      "type": {
                                        "$ref": "146"
                                      },
                                      "value": 9
                                    },
                                    "inProgress": {
                                      "$id": "293",
                                      "kind": "number",
                                      "type": {
                                        "$ref": "148"
                                      },
                                      "value": 0
                                    },
                                    "notYetStarted": {
                                      "$id": "294",
                                      "kind": "number",
                                      "type": {
                                        "$ref": "150"
                                      },
                                      "value": 0
                                    },
                                    "cancelled": {
                                      "$id": "295",
                                      "kind": "number",
                                      "type": {
                                        "$ref": "152"
                                      },
                                      "value": 0
                                    },
                                    "totalCharacterCharged": {
                                      "$id": "296",
                                      "kind": "number",
                                      "type": {
                                        "$ref": "154"
                                      },
                                      "value": 1000
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        },
                        "nextLink": {
                          "$id": "297",
                          "kind": "string",
                          "type": {
                            "$ref": "159"
                          },
                          "value": "https://westus.cognitiveservices.azure.com/translator/text/batch/v1.0/operation/0FA2822F-4C2A-4317-9C20-658C801E0E55/documents?top=1&skip=1&maxpagesize=1&orderBy=CreatedDateTimeUtc%20asc&createdDateTimeUtcStart=2021-03-23T00:03:38.0136316Z&createdDateTimeUtcEnd=2021-03-25T00:03:38.0136316&statuses=Succeeded&ids=273622BD-835C-4946-9798-FD8F19F6BBF2,511B6A66-A6F8-4640-83E1-48C325E9FA29"
                        }
                      }
                    }
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "$id": "298",
              "name": "top",
              "nameInRequest": "top",
              "doc": "top indicates the total number of records the user wants to be returned across\nall pages.\n            \nClients MAY use top and skip query parameters to\nspecify a number of results to return and an offset into the collection.\nWhen\nboth top and skip are given by a client, the server SHOULD first apply skip\nand then top on the collection.\n            \nNote: If the server can't honor\ntop and/or skip, the server MUST return an error to the client informing\nabout it instead of just ignoring the query options.",
              "type": {
                "$id": "299",
                "kind": "int32",
                "name": "int32",
                "crossLanguageDefinitionId": "TypeSpec.int32",
                "decorators": []
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "300",
              "name": "skip",
              "nameInRequest": "skip",
              "doc": "skip indicates the number of records to skip from the list of records held by\nthe server based on the sorting method specified.  By default, we sort by\ndescending start time.\n            \nClients MAY use top and skip query\nparameters to specify a number of results to return and an offset into the\ncollection.\nWhen both top and skip are given by a client, the server SHOULD\nfirst apply skip and then top on the collection.\n            \nNote: If the\nserver can't honor top and/or skip, the server MUST return an error to the\nclient informing about it instead of just ignoring the query options.",
              "type": {
                "$id": "301",
                "kind": "int32",
                "name": "int32",
                "crossLanguageDefinitionId": "TypeSpec.int32",
                "decorators": []
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "302",
              "name": "maxpagesize",
              "nameInRequest": "maxpagesize",
              "doc": "maxpagesize is the maximum items returned in a page.  If more items are\nrequested via top (or top is not specified and there are more items to be\nreturned), @nextLink will contain the link to the next page.\n           \n\nClients MAY request server-driven paging with a specific page size by\nspecifying a maxpagesize preference. The server SHOULD honor this preference\nif the specified page size is smaller than the server's default page size.",
              "type": {
                "$id": "303",
                "kind": "int32",
                "name": "int32",
                "crossLanguageDefinitionId": "TypeSpec.int32",
                "decorators": []
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "304",
              "name": "translationIds",
              "nameInRequest": "ids",
              "doc": "Ids to use in filtering",
              "type": {
                "$ref": "259"
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "arraySerializationDelimiter": ",",
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "305",
              "name": "statuses",
              "nameInRequest": "statuses",
              "doc": "Statuses to use in filtering",
              "type": {
                "$ref": "194"
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "arraySerializationDelimiter": ",",
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "306",
              "name": "createdDateTimeUtcStart",
              "nameInRequest": "createdDateTimeUtcStart",
              "doc": "the start datetime to get items after",
              "type": {
                "$id": "307",
                "kind": "utcDateTime",
                "name": "utcDateTime",
                "encode": "rfc3339",
                "wireType": {
                  "$id": "308",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
                "decorators": []
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "309",
              "name": "createdDateTimeUtcEnd",
              "nameInRequest": "createdDateTimeUtcEnd",
              "doc": "the end datetime to get items before",
              "type": {
                "$id": "310",
                "kind": "utcDateTime",
                "name": "utcDateTime",
                "encode": "rfc3339",
                "wireType": {
                  "$id": "311",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
                "decorators": []
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "312",
              "name": "orderby",
              "nameInRequest": "orderby",
              "doc": "the sorting query for the collection (ex: 'CreatedDateTimeUtc asc','CreatedDateTimeUtc desc')",
              "type": {
                "$ref": "194"
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "arraySerializationDelimiter": ",",
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "313",
              "name": "accept",
              "nameInRequest": "Accept",
              "type": {
                "$ref": "37"
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Constant",
              "decorators": [],
              "skipUrlEncoding": false
            }
          ],
          "response": {
            "type": {
              "$ref": "157"
            },
            "resultSegments": [
              "value"
            ]
          },
          "isOverride": false,
          "generateConvenient": true,
          "generateProtocol": true,
          "crossLanguageDefinitionId": "ClientCustomizations.DocumentTranslationClient.getTranslationsStatus",
          "pagingMetadata": {
            "itemPropertySegments": [
              "value"
            ],
            "nextLink": {
              "responseSegments": [
                "nextLink"
              ],
              "responseLocation": "Body"
            }
          }
        },
        {
          "$id": "314",
          "kind": "basic",
          "name": "getDocumentStatus",
          "accessibility": "public",
          "apiVersions": [
            "2024-05-01"
          ],
          "doc": "Returns the translation status for a specific document based on the request Id\nand document Id.",
          "summary": "Returns the status for a specific document",
          "operation": {
            "$id": "315",
            "name": "getDocumentStatus",
            "resourceName": "DocumentTranslationClient",
            "summary": "Returns the status for a specific document",
            "doc": "Returns the translation status for a specific document based on the request Id\nand document Id.",
            "accessibility": "public",
            "parameters": [
              {
                "$id": "316",
                "name": "apiVersion",
                "nameInRequest": "api-version",
                "doc": "The API version to use for this operation.",
                "type": {
                  "$id": "317",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": true,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Client",
                "defaultValue": {
                  "type": {
                    "$id": "318",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string"
                  },
                  "value": "2024-05-01"
                },
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "319",
                "name": "translationId",
                "nameInRequest": "id",
                "doc": "Format - uuid.  The batch id",
                "type": {
                  "$id": "320",
                  "kind": "string",
                  "name": "uuid",
                  "crossLanguageDefinitionId": "Azure.Core.uuid",
                  "baseType": {
                    "$id": "321",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                  },
                  "decorators": []
                },
                "location": "Path",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "322",
                "name": "documentId",
                "nameInRequest": "documentId",
                "doc": "Format - uuid.  The document id",
                "type": {
                  "$id": "323",
                  "kind": "string",
                  "name": "uuid",
                  "crossLanguageDefinitionId": "Azure.Core.uuid",
                  "baseType": {
                    "$id": "324",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                  },
                  "decorators": []
                },
                "location": "Path",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "325",
                "name": "accept",
                "nameInRequest": "Accept",
                "type": {
                  "$ref": "39"
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Constant",
                "decorators": [],
                "skipUrlEncoding": false
              }
            ],
            "responses": [
              {
                "statusCodes": [
                  200
                ],
                "bodyType": {
                  "$ref": "160"
                },
                "headers": [],
                "isErrorResponse": false,
                "contentTypes": [
                  "application/json"
                ]
              }
            ],
            "httpMethod": "GET",
            "uri": "{endpoint}/translator",
            "path": "/document/batches/{id}/documents/{documentId}",
            "bufferResponse": true,
            "generateProtocolMethod": true,
            "generateConvenienceMethod": true,
            "crossLanguageDefinitionId": "ClientCustomizations.DocumentTranslationClient.getDocumentStatus",
            "decorators": [],
            "examples": [
              {
                "$id": "326",
                "kind": "http",
                "name": "Returns the status of a single document in a batch translation request",
                "description": "Returns the status of a single document in a batch translation request",
                "filePath": "2024-05-01/document.json",
                "parameters": [
                  {
                    "parameter": {
                      "$ref": "316"
                    },
                    "value": {
                      "$id": "327",
                      "kind": "string",
                      "type": {
                        "$ref": "317"
                      },
                      "value": "2024-05-01"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "319"
                    },
                    "value": {
                      "$id": "328",
                      "kind": "string",
                      "type": {
                        "$ref": "320"
                      },
                      "value": "727BF148-F327-47A0-9481-ABAE6362F11E"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "322"
                    },
                    "value": {
                      "$id": "329",
                      "kind": "string",
                      "type": {
                        "$ref": "323"
                      },
                      "value": "727BF148-F327-47A0-9481-ABAE6362F12F"
                    }
                  }
                ],
                "responses": [
                  {
                    "response": {
                      "statusCodes": [
                        200
                      ],
                      "bodyType": {
                        "$ref": "160"
                      },
                      "headers": [],
                      "isErrorResponse": false,
                      "contentTypes": [
                        "application/json"
                      ]
                    },
                    "statusCode": 200,
                    "bodyValue": {
                      "$id": "330",
                      "kind": "model",
                      "type": {
                        "$ref": "160"
                      },
                      "value": {
                        "path": {
                          "$id": "331",
                          "kind": "string",
                          "type": {
                            "$ref": "162"
                          },
                          "value": "https://myblob.blob.core.windows.net/destinationContainer/fr/mydoc.txt"
                        },
                        "sourcePath": {
                          "$id": "332",
                          "kind": "string",
                          "type": {
                            "$ref": "164"
                          },
                          "value": "https://myblob.blob.core.windows.net/sourceContainer/fr/mydoc.txt"
                        },
                        "createdDateTimeUtc": {
                          "$id": "333",
                          "kind": "string",
                          "type": {
                            "$ref": "166"
                          },
                          "value": "2020-03-26T00:00:00Z"
                        },
                        "lastActionDateTimeUtc": {
                          "$id": "334",
                          "kind": "string",
                          "type": {
                            "$ref": "169"
                          },
                          "value": "2020-03-26T01:00:00Z"
                        },
                        "status": {
                          "$id": "335",
                          "kind": "string",
                          "type": {
                            "$ref": "8"
                          },
                          "value": "Running"
                        },
                        "to": {
                          "$id": "336",
                          "kind": "string",
                          "type": {
                            "$ref": "173"
                          },
                          "value": "fr"
                        },
                        "progress": {
                          "$id": "337",
                          "kind": "number",
                          "type": {
                            "$ref": "176"
                          },
                          "value": 0.1
                        },
                        "id": {
                          "$id": "338",
                          "kind": "string",
                          "type": {
                            "$ref": "178"
                          },
                          "value": "273622bd-835c-4946-9798-fd8f19f6bbf2"
                        },
                        "characterCharged": {
                          "$id": "339",
                          "kind": "number",
                          "type": {
                            "$ref": "181"
                          },
                          "value": 0
                        }
                      }
                    }
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "$id": "340",
              "name": "translationId",
              "nameInRequest": "id",
              "doc": "Format - uuid.  The batch id",
              "type": {
                "$id": "341",
                "kind": "string",
                "name": "uuid",
                "crossLanguageDefinitionId": "Azure.Core.uuid",
                "baseType": {
                  "$id": "342",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "decorators": []
              },
              "location": "Path",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "343",
              "name": "documentId",
              "nameInRequest": "documentId",
              "doc": "Format - uuid.  The document id",
              "type": {
                "$id": "344",
                "kind": "string",
                "name": "uuid",
                "crossLanguageDefinitionId": "Azure.Core.uuid",
                "baseType": {
                  "$id": "345",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "decorators": []
              },
              "location": "Path",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "346",
              "name": "accept",
              "nameInRequest": "Accept",
              "type": {
                "$ref": "39"
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Constant",
              "decorators": [],
              "skipUrlEncoding": false
            }
          ],
          "response": {
            "type": {
              "$ref": "160"
            }
          },
          "isOverride": false,
          "generateConvenient": true,
          "generateProtocol": true,
          "crossLanguageDefinitionId": "ClientCustomizations.DocumentTranslationClient.getDocumentStatus"
        },
        {
          "$id": "347",
          "kind": "basic",
          "name": "getTranslationStatus",
          "accessibility": "public",
          "apiVersions": [
            "2024-05-01"
          ],
          "doc": "Returns the status for a document translation request.\nThe status includes the\noverall request status, as well as the status for documents that are being\ntranslated as part of that request.",
          "summary": "Returns the status for a document translation request",
          "operation": {
            "$id": "348",
            "name": "getTranslationStatus",
            "resourceName": "DocumentTranslationClient",
            "summary": "Returns the status for a document translation request",
            "doc": "Returns the status for a document translation request.\nThe status includes the\noverall request status, as well as the status for documents that are being\ntranslated as part of that request.",
            "accessibility": "public",
            "parameters": [
              {
                "$id": "349",
                "name": "apiVersion",
                "nameInRequest": "api-version",
                "doc": "The API version to use for this operation.",
                "type": {
                  "$id": "350",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": true,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Client",
                "defaultValue": {
                  "type": {
                    "$id": "351",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string"
                  },
                  "value": "2024-05-01"
                },
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "352",
                "name": "translationId",
                "nameInRequest": "id",
                "doc": "Format - uuid.  The operation id",
                "type": {
                  "$id": "353",
                  "kind": "string",
                  "name": "uuid",
                  "crossLanguageDefinitionId": "Azure.Core.uuid",
                  "baseType": {
                    "$id": "354",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                  },
                  "decorators": []
                },
                "location": "Path",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "355",
                "name": "accept",
                "nameInRequest": "Accept",
                "type": {
                  "$ref": "41"
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Constant",
                "decorators": [],
                "skipUrlEncoding": false
              }
            ],
            "responses": [
              {
                "statusCodes": [
                  200
                ],
                "bodyType": {
                  "$ref": "113"
                },
                "headers": [],
                "isErrorResponse": false,
                "contentTypes": [
                  "application/json"
                ]
              }
            ],
            "httpMethod": "GET",
            "uri": "{endpoint}/translator",
            "path": "/document/batches/{id}",
            "bufferResponse": true,
            "generateProtocolMethod": true,
            "generateConvenienceMethod": true,
            "crossLanguageDefinitionId": "ClientCustomizations.DocumentTranslationClient.getTranslationStatus",
            "decorators": [],
            "examples": [
              {
                "$id": "356",
                "kind": "http",
                "name": "Returns the status for a batch document translation request",
                "description": "Returns the status for a batch document translation request",
                "filePath": "2024-05-01/operation.json",
                "parameters": [
                  {
                    "parameter": {
                      "$ref": "349"
                    },
                    "value": {
                      "$id": "357",
                      "kind": "string",
                      "type": {
                        "$ref": "350"
                      },
                      "value": "2024-05-01"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "352"
                    },
                    "value": {
                      "$id": "358",
                      "kind": "string",
                      "type": {
                        "$ref": "353"
                      },
                      "value": "727BF148-F327-47A0-9481-ABAE6362F11E"
                    }
                  }
                ],
                "responses": [
                  {
                    "response": {
                      "statusCodes": [
                        200
                      ],
                      "bodyType": {
                        "$ref": "113"
                      },
                      "headers": [],
                      "isErrorResponse": false,
                      "contentTypes": [
                        "application/json"
                      ]
                    },
                    "statusCode": 200,
                    "bodyValue": {
                      "$id": "359",
                      "kind": "model",
                      "type": {
                        "$ref": "113"
                      },
                      "value": {
                        "id": {
                          "$id": "360",
                          "kind": "string",
                          "type": {
                            "$ref": "115"
                          },
                          "value": "727bf148-f327-47a0-9481-abae6362f11e"
                        },
                        "createdDateTimeUtc": {
                          "$id": "361",
                          "kind": "string",
                          "type": {
                            "$ref": "117"
                          },
                          "value": "2020-03-26T00:00:00Z"
                        },
                        "lastActionDateTimeUtc": {
                          "$id": "362",
                          "kind": "string",
                          "type": {
                            "$ref": "120"
                          },
                          "value": "2020-03-26T01:00:00Z"
                        },
                        "status": {
                          "$id": "363",
                          "kind": "string",
                          "type": {
                            "$ref": "8"
                          },
                          "value": "Succeeded"
                        },
                        "summary": {
                          "$id": "364",
                          "kind": "model",
                          "type": {
                            "$ref": "140"
                          },
                          "value": {
                            "total": {
                              "$id": "365",
                              "kind": "number",
                              "type": {
                                "$ref": "142"
                              },
                              "value": 10
                            },
                            "failed": {
                              "$id": "366",
                              "kind": "number",
                              "type": {
                                "$ref": "144"
                              },
                              "value": 1
                            },
                            "success": {
                              "$id": "367",
                              "kind": "number",
                              "type": {
                                "$ref": "146"
                              },
                              "value": 9
                            },
                            "inProgress": {
                              "$id": "368",
                              "kind": "number",
                              "type": {
                                "$ref": "148"
                              },
                              "value": 0
                            },
                            "notYetStarted": {
                              "$id": "369",
                              "kind": "number",
                              "type": {
                                "$ref": "150"
                              },
                              "value": 0
                            },
                            "cancelled": {
                              "$id": "370",
                              "kind": "number",
                              "type": {
                                "$ref": "152"
                              },
                              "value": 0
                            },
                            "totalCharacterCharged": {
                              "$id": "371",
                              "kind": "number",
                              "type": {
                                "$ref": "154"
                              },
                              "value": 0
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "$id": "372",
              "name": "translationId",
              "nameInRequest": "id",
              "doc": "Format - uuid.  The operation id",
              "type": {
                "$id": "373",
                "kind": "string",
                "name": "uuid",
                "crossLanguageDefinitionId": "Azure.Core.uuid",
                "baseType": {
                  "$id": "374",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "decorators": []
              },
              "location": "Path",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "375",
              "name": "accept",
              "nameInRequest": "Accept",
              "type": {
                "$ref": "41"
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Constant",
              "decorators": [],
              "skipUrlEncoding": false
            }
          ],
          "response": {
            "type": {
              "$ref": "113"
            }
          },
          "isOverride": false,
          "generateConvenient": true,
          "generateProtocol": true,
          "crossLanguageDefinitionId": "ClientCustomizations.DocumentTranslationClient.getTranslationStatus"
        },
        {
          "$id": "376",
          "kind": "basic",
          "name": "cancelTranslation",
          "accessibility": "public",
          "apiVersions": [
            "2024-05-01"
          ],
          "doc": "Cancel a currently processing or queued translation.\nA translation will not be\ncancelled if it is already completed or failed or cancelling. A bad request\nwill be returned.\nAll documents that have completed translation will not be\ncancelled and will be charged.\nAll pending documents will be cancelled if\npossible.",
          "summary": "Cancel a currently processing or queued translation",
          "operation": {
            "$id": "377",
            "name": "cancelTranslation",
            "resourceName": "DocumentTranslationClient",
            "summary": "Cancel a currently processing or queued translation",
            "doc": "Cancel a currently processing or queued translation.\nA translation will not be\ncancelled if it is already completed or failed or cancelling. A bad request\nwill be returned.\nAll documents that have completed translation will not be\ncancelled and will be charged.\nAll pending documents will be cancelled if\npossible.",
            "accessibility": "public",
            "parameters": [
              {
                "$id": "378",
                "name": "apiVersion",
                "nameInRequest": "api-version",
                "doc": "The API version to use for this operation.",
                "type": {
                  "$id": "379",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": true,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Client",
                "defaultValue": {
                  "type": {
                    "$id": "380",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string"
                  },
                  "value": "2024-05-01"
                },
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "381",
                "name": "translationId",
                "nameInRequest": "id",
                "doc": "Format - uuid.  The operation-id",
                "type": {
                  "$id": "382",
                  "kind": "string",
                  "name": "uuid",
                  "crossLanguageDefinitionId": "Azure.Core.uuid",
                  "baseType": {
                    "$id": "383",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                  },
                  "decorators": []
                },
                "location": "Path",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "384",
                "name": "accept",
                "nameInRequest": "Accept",
                "type": {
                  "$ref": "43"
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Constant",
                "decorators": [],
                "skipUrlEncoding": false
              }
            ],
            "responses": [
              {
                "statusCodes": [
                  200
                ],
                "bodyType": {
                  "$ref": "113"
                },
                "headers": [],
                "isErrorResponse": false,
                "contentTypes": [
                  "application/json"
                ]
              }
            ],
            "httpMethod": "DELETE",
            "uri": "{endpoint}/translator",
            "path": "/document/batches/{id}",
            "bufferResponse": true,
            "generateProtocolMethod": true,
            "generateConvenienceMethod": true,
            "crossLanguageDefinitionId": "ClientCustomizations.DocumentTranslationClient.cancelTranslation",
            "decorators": [],
            "examples": [
              {
                "$id": "385",
                "kind": "http",
                "name": "Cancel a currently processing or queued translation",
                "description": "Cancel a currently processing or queued translation",
                "filePath": "2024-05-01/cancel.json",
                "parameters": [
                  {
                    "parameter": {
                      "$ref": "378"
                    },
                    "value": {
                      "$id": "386",
                      "kind": "string",
                      "type": {
                        "$ref": "379"
                      },
                      "value": "2024-05-01"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "381"
                    },
                    "value": {
                      "$id": "387",
                      "kind": "string",
                      "type": {
                        "$ref": "382"
                      },
                      "value": "727BF148-F327-47A0-9481-ABAE6362F11E"
                    }
                  }
                ],
                "responses": [
                  {
                    "response": {
                      "statusCodes": [
                        200
                      ],
                      "bodyType": {
                        "$ref": "113"
                      },
                      "headers": [],
                      "isErrorResponse": false,
                      "contentTypes": [
                        "application/json"
                      ]
                    },
                    "statusCode": 200,
                    "bodyValue": {
                      "$id": "388",
                      "kind": "model",
                      "type": {
                        "$ref": "113"
                      },
                      "value": {
                        "id": {
                          "$id": "389",
                          "kind": "string",
                          "type": {
                            "$ref": "115"
                          },
                          "value": "727bf148-f327-47a0-9481-abae6362f11e"
                        },
                        "createdDateTimeUtc": {
                          "$id": "390",
                          "kind": "string",
                          "type": {
                            "$ref": "117"
                          },
                          "value": "2020-03-26T00:00:00Z"
                        },
                        "lastActionDateTimeUtc": {
                          "$id": "391",
                          "kind": "string",
                          "type": {
                            "$ref": "120"
                          },
                          "value": "2020-03-26T01:00:00Z"
                        },
                        "status": {
                          "$id": "392",
                          "kind": "string",
                          "type": {
                            "$ref": "8"
                          },
                          "value": "Succeeded"
                        },
                        "summary": {
                          "$id": "393",
                          "kind": "model",
                          "type": {
                            "$ref": "140"
                          },
                          "value": {
                            "total": {
                              "$id": "394",
                              "kind": "number",
                              "type": {
                                "$ref": "142"
                              },
                              "value": 10
                            },
                            "failed": {
                              "$id": "395",
                              "kind": "number",
                              "type": {
                                "$ref": "144"
                              },
                              "value": 1
                            },
                            "success": {
                              "$id": "396",
                              "kind": "number",
                              "type": {
                                "$ref": "146"
                              },
                              "value": 9
                            },
                            "inProgress": {
                              "$id": "397",
                              "kind": "number",
                              "type": {
                                "$ref": "148"
                              },
                              "value": 0
                            },
                            "notYetStarted": {
                              "$id": "398",
                              "kind": "number",
                              "type": {
                                "$ref": "150"
                              },
                              "value": 0
                            },
                            "cancelled": {
                              "$id": "399",
                              "kind": "number",
                              "type": {
                                "$ref": "152"
                              },
                              "value": 0
                            },
                            "totalCharacterCharged": {
                              "$id": "400",
                              "kind": "number",
                              "type": {
                                "$ref": "154"
                              },
                              "value": 0
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "$id": "401",
              "name": "translationId",
              "nameInRequest": "id",
              "doc": "Format - uuid.  The operation-id",
              "type": {
                "$id": "402",
                "kind": "string",
                "name": "uuid",
                "crossLanguageDefinitionId": "Azure.Core.uuid",
                "baseType": {
                  "$id": "403",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "decorators": []
              },
              "location": "Path",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "404",
              "name": "accept",
              "nameInRequest": "Accept",
              "type": {
                "$ref": "43"
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Constant",
              "decorators": [],
              "skipUrlEncoding": false
            }
          ],
          "response": {
            "type": {
              "$ref": "113"
            }
          },
          "isOverride": false,
          "generateConvenient": true,
          "generateProtocol": true,
          "crossLanguageDefinitionId": "ClientCustomizations.DocumentTranslationClient.cancelTranslation"
        },
        {
          "$id": "405",
          "kind": "paging",
          "name": "getDocumentsStatus",
          "accessibility": "public",
          "apiVersions": [
            "2024-05-01"
          ],
          "doc": "Returns the status for all documents in a batch document translation request.\n \n          \nIf the number of documents in the response exceeds our paging limit,\nserver-side paging is used.\nPaginated responses indicate a partial result and\ninclude a continuation token in the response. The absence of a continuation\ntoken means that no additional pages are available.\n            \ntop, skip\nand maxpagesize query parameters can be used to specify a number of results to\nreturn and an offset for the collection.\n            \ntop indicates the total\nnumber of records the user wants to be returned across all pages.\nskip\nindicates the number of records to skip from the list of document status held\nby the server based on the sorting method specified.  By default, we sort by\ndescending start time.\nmaxpagesize is the maximum items returned in a page. \nIf more items are requested via top (or top is not specified and there are\nmore items to be returned), @nextLink will contain the link to the next page.\n \n          \norderby query parameter can be used to sort the returned list (ex\n\"orderby=createdDateTimeUtc asc\" or \"orderby=createdDateTimeUtc\ndesc\").\nThe default sorting is descending by createdDateTimeUtc.\nSome query\nparameters can be used to filter the returned list (ex:\n\"status=Succeeded,Cancelled\") will only return succeeded and cancelled\ndocuments.\ncreatedDateTimeUtcStart and createdDateTimeUtcEnd can be used\ncombined or separately to specify a range of datetime to filter the returned\nlist by.\nThe supported filtering query parameters are (status, ids,\ncreatedDateTimeUtcStart, createdDateTimeUtcEnd).\n            \nWhen both top\nand skip are included, the server should first apply skip and then top on\nthe collection.\nNote: If the server can't honor top and/or skip, the server\nmust return an error to the client informing about it instead of just ignoring\nthe query options.\nThis reduces the risk of the client making assumptions about\nthe data returned.",
          "summary": "Returns the status for all documents in a batch document translation request",
          "operation": {
            "$id": "406",
            "name": "getDocumentsStatus",
            "resourceName": "DocumentTranslationClient",
            "summary": "Returns the status for all documents in a batch document translation request",
            "doc": "Returns the status for all documents in a batch document translation request.\n \n          \nIf the number of documents in the response exceeds our paging limit,\nserver-side paging is used.\nPaginated responses indicate a partial result and\ninclude a continuation token in the response. The absence of a continuation\ntoken means that no additional pages are available.\n            \ntop, skip\nand maxpagesize query parameters can be used to specify a number of results to\nreturn and an offset for the collection.\n            \ntop indicates the total\nnumber of records the user wants to be returned across all pages.\nskip\nindicates the number of records to skip from the list of document status held\nby the server based on the sorting method specified.  By default, we sort by\ndescending start time.\nmaxpagesize is the maximum items returned in a page. \nIf more items are requested via top (or top is not specified and there are\nmore items to be returned), @nextLink will contain the link to the next page.\n \n          \norderby query parameter can be used to sort the returned list (ex\n\"orderby=createdDateTimeUtc asc\" or \"orderby=createdDateTimeUtc\ndesc\").\nThe default sorting is descending by createdDateTimeUtc.\nSome query\nparameters can be used to filter the returned list (ex:\n\"status=Succeeded,Cancelled\") will only return succeeded and cancelled\ndocuments.\ncreatedDateTimeUtcStart and createdDateTimeUtcEnd can be used\ncombined or separately to specify a range of datetime to filter the returned\nlist by.\nThe supported filtering query parameters are (status, ids,\ncreatedDateTimeUtcStart, createdDateTimeUtcEnd).\n            \nWhen both top\nand skip are included, the server should first apply skip and then top on\nthe collection.\nNote: If the server can't honor top and/or skip, the server\nmust return an error to the client informing about it instead of just ignoring\nthe query options.\nThis reduces the risk of the client making assumptions about\nthe data returned.",
            "accessibility": "public",
            "parameters": [
              {
                "$id": "407",
                "name": "apiVersion",
                "nameInRequest": "api-version",
                "doc": "The API version to use for this operation.",
                "type": {
                  "$id": "408",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": true,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Client",
                "defaultValue": {
                  "type": {
                    "$id": "409",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string"
                  },
                  "value": "2024-05-01"
                },
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "410",
                "name": "translationId",
                "nameInRequest": "id",
                "doc": "Format - uuid.  The operation id",
                "type": {
                  "$id": "411",
                  "kind": "string",
                  "name": "uuid",
                  "crossLanguageDefinitionId": "Azure.Core.uuid",
                  "baseType": {
                    "$id": "412",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                  },
                  "decorators": []
                },
                "location": "Path",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "413",
                "name": "top",
                "nameInRequest": "top",
                "doc": "top indicates the total number of records the user wants to be returned across\nall pages.\n            \nClients MAY use top and skip query parameters to\nspecify a number of results to return and an offset into the collection.\nWhen\nboth top and skip are given by a client, the server SHOULD first apply skip\nand then top on the collection.\n            \nNote: If the server can't honor\ntop and/or skip, the server MUST return an error to the client informing\nabout it instead of just ignoring the query options.",
                "type": {
                  "$id": "414",
                  "kind": "int32",
                  "name": "int32",
                  "crossLanguageDefinitionId": "TypeSpec.int32",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "415",
                "name": "skip",
                "nameInRequest": "skip",
                "doc": "skip indicates the number of records to skip from the list of records held by\nthe server based on the sorting method specified.  By default, we sort by\ndescending start time.\n            \nClients MAY use top and skip query\nparameters to specify a number of results to return and an offset into the\ncollection.\nWhen both top and skip are given by a client, the server SHOULD\nfirst apply skip and then top on the collection.\n            \nNote: If the\nserver can't honor top and/or skip, the server MUST return an error to the\nclient informing about it instead of just ignoring the query options.",
                "type": {
                  "$id": "416",
                  "kind": "int32",
                  "name": "int32",
                  "crossLanguageDefinitionId": "TypeSpec.int32",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "417",
                "name": "maxpagesize",
                "nameInRequest": "maxpagesize",
                "doc": "maxpagesize is the maximum items returned in a page.  If more items are\nrequested via top (or top is not specified and there are more items to be\nreturned), @nextLink will contain the link to the next page.\n           \n\nClients MAY request server-driven paging with a specific page size by\nspecifying a maxpagesize preference. The server SHOULD honor this preference\nif the specified page size is smaller than the server's default page size.",
                "type": {
                  "$id": "418",
                  "kind": "int32",
                  "name": "int32",
                  "crossLanguageDefinitionId": "TypeSpec.int32",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "419",
                "name": "documentIds",
                "nameInRequest": "ids",
                "doc": "Ids to use in filtering",
                "type": {
                  "$ref": "259"
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "arraySerializationDelimiter": ",",
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "420",
                "name": "statuses",
                "nameInRequest": "statuses",
                "doc": "Statuses to use in filtering",
                "type": {
                  "$ref": "194"
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "arraySerializationDelimiter": ",",
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "421",
                "name": "createdDateTimeUtcStart",
                "nameInRequest": "createdDateTimeUtcStart",
                "doc": "the start datetime to get items after",
                "type": {
                  "$id": "422",
                  "kind": "utcDateTime",
                  "name": "utcDateTime",
                  "encode": "rfc3339",
                  "wireType": {
                    "$id": "423",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                  },
                  "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "424",
                "name": "createdDateTimeUtcEnd",
                "nameInRequest": "createdDateTimeUtcEnd",
                "doc": "the end datetime to get items before",
                "type": {
                  "$id": "425",
                  "kind": "utcDateTime",
                  "name": "utcDateTime",
                  "encode": "rfc3339",
                  "wireType": {
                    "$id": "426",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                  },
                  "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "427",
                "name": "orderby",
                "nameInRequest": "orderby",
                "doc": "the sorting query for the collection (ex: 'CreatedDateTimeUtc asc','CreatedDateTimeUtc desc')",
                "type": {
                  "$ref": "194"
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "arraySerializationDelimiter": ",",
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "428",
                "name": "accept",
                "nameInRequest": "Accept",
                "type": {
                  "$ref": "45"
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Constant",
                "decorators": [],
                "skipUrlEncoding": false
              }
            ],
            "responses": [
              {
                "statusCodes": [
                  200
                ],
                "bodyType": {
                  "$ref": "182"
                },
                "headers": [],
                "isErrorResponse": false,
                "contentTypes": [
                  "application/json"
                ]
              }
            ],
            "httpMethod": "GET",
            "uri": "{endpoint}/translator",
            "path": "/document/batches/{id}/documents",
            "bufferResponse": true,
            "generateProtocolMethod": true,
            "generateConvenienceMethod": true,
            "crossLanguageDefinitionId": "ClientCustomizations.DocumentTranslationClient.getDocumentsStatus",
            "decorators": [],
            "examples": [
              {
                "$id": "429",
                "kind": "http",
                "name": "Returns the status for all documents in a batch document translation request",
                "description": "Returns the status for all documents in a batch document translation request",
                "filePath": "2024-05-01/documents.json",
                "parameters": [
                  {
                    "parameter": {
                      "$ref": "407"
                    },
                    "value": {
                      "$id": "430",
                      "kind": "string",
                      "type": {
                        "$ref": "408"
                      },
                      "value": "2024-05-01"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "410"
                    },
                    "value": {
                      "$id": "431",
                      "kind": "string",
                      "type": {
                        "$ref": "411"
                      },
                      "value": "727BF148-F327-47A0-9481-ABAE6362F11E"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "413"
                    },
                    "value": {
                      "$id": "432",
                      "kind": "number",
                      "type": {
                        "$ref": "414"
                      },
                      "value": 2
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "415"
                    },
                    "value": {
                      "$id": "433",
                      "kind": "number",
                      "type": {
                        "$ref": "416"
                      },
                      "value": 0
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "417"
                    },
                    "value": {
                      "$id": "434",
                      "kind": "number",
                      "type": {
                        "$ref": "418"
                      },
                      "value": 1
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "421"
                    },
                    "value": {
                      "$id": "435",
                      "kind": "string",
                      "type": {
                        "$ref": "422"
                      },
                      "value": "2021-03-23T07:03:38.0136316Z"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "424"
                    },
                    "value": {
                      "$id": "436",
                      "kind": "string",
                      "type": {
                        "$ref": "425"
                      },
                      "value": "2021-03-25T07:03:38.0136316Z"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "420"
                    },
                    "value": {
                      "$id": "437",
                      "kind": "array",
                      "type": {
                        "$ref": "194"
                      },
                      "value": [
                        {
                          "$id": "438",
                          "kind": "string",
                          "type": {
                            "$ref": "195"
                          },
                          "value": "Succeeded"
                        }
                      ]
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "419"
                    },
                    "value": {
                      "$id": "439",
                      "kind": "array",
                      "type": {
                        "$ref": "259"
                      },
                      "value": [
                        {
                          "$id": "440",
                          "kind": "string",
                          "type": {
                            "$ref": "260"
                          },
                          "value": "273622bd-835c-4946-9798-fd8f19f6bbf2"
                        },
                        {
                          "$id": "441",
                          "kind": "string",
                          "type": {
                            "$ref": "260"
                          },
                          "value": "511b6a66-a6f8-4640-83e1-48c325e9fa29"
                        }
                      ]
                    }
                  }
                ],
                "responses": [
                  {
                    "response": {
                      "statusCodes": [
                        200
                      ],
                      "bodyType": {
                        "$ref": "182"
                      },
                      "headers": [],
                      "isErrorResponse": false,
                      "contentTypes": [
                        "application/json"
                      ]
                    },
                    "statusCode": 200,
                    "bodyValue": {
                      "$id": "442",
                      "kind": "model",
                      "type": {
                        "$ref": "182"
                      },
                      "value": {
                        "value": {
                          "$id": "443",
                          "kind": "array",
                          "type": {
                            "$ref": "184"
                          },
                          "value": [
                            {
                              "$id": "444",
                              "kind": "model",
                              "type": {
                                "$ref": "160"
                              },
                              "value": {
                                "path": {
                                  "$id": "445",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "162"
                                  },
                                  "value": "https://myblob.blob.core.windows.net/destinationContainer/fr/mydoc.txt"
                                },
                                "sourcePath": {
                                  "$id": "446",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "164"
                                  },
                                  "value": "https://myblob.blob.core.windows.net/sourceContainer/fr/mydoc.txt"
                                },
                                "createdDateTimeUtc": {
                                  "$id": "447",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "166"
                                  },
                                  "value": "2021-03-23T07:03:39.013631Z"
                                },
                                "lastActionDateTimeUtc": {
                                  "$id": "448",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "169"
                                  },
                                  "value": "2021-03-23T07:03:41.012452Z"
                                },
                                "status": {
                                  "$id": "449",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "8"
                                  },
                                  "value": "Running"
                                },
                                "to": {
                                  "$id": "450",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "173"
                                  },
                                  "value": "fr"
                                },
                                "progress": {
                                  "$id": "451",
                                  "kind": "number",
                                  "type": {
                                    "$ref": "176"
                                  },
                                  "value": 0.1
                                },
                                "id": {
                                  "$id": "452",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "178"
                                  },
                                  "value": "273622bd-835c-4946-9798-fd8f19f6bbf2"
                                },
                                "characterCharged": {
                                  "$id": "453",
                                  "kind": "number",
                                  "type": {
                                    "$ref": "181"
                                  },
                                  "value": 0
                                }
                              }
                            }
                          ]
                        },
                        "nextLink": {
                          "$id": "454",
                          "kind": "string",
                          "type": {
                            "$ref": "186"
                          },
                          "value": "https://westus.cognitiveservices.azure.com/translator/text/batch/v1.0/operation/0FA2822F-4C2A-4317-9C20-658C801E0E55/documents?top=1&skip=1&maxpagesize=1&orderBy=CreatedDateTimeUtc%20asc&createdDateTimeUtcStart=2021-03-23T00:03:38.0136316Z&createdDateTimeUtcEnd=2021-03-25T00:03:38.0136316&statuses=Succeeded&ids=273622BD-835C-4946-9798-FD8F19F6BBF2,511B6A66-A6F8-4640-83E1-48C325E9FA29"
                        }
                      }
                    }
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "$id": "455",
              "name": "translationId",
              "nameInRequest": "id",
              "doc": "Format - uuid.  The operation id",
              "type": {
                "$id": "456",
                "kind": "string",
                "name": "uuid",
                "crossLanguageDefinitionId": "Azure.Core.uuid",
                "baseType": {
                  "$id": "457",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "decorators": []
              },
              "location": "Path",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "458",
              "name": "top",
              "nameInRequest": "top",
              "doc": "top indicates the total number of records the user wants to be returned across\nall pages.\n            \nClients MAY use top and skip query parameters to\nspecify a number of results to return and an offset into the collection.\nWhen\nboth top and skip are given by a client, the server SHOULD first apply skip\nand then top on the collection.\n            \nNote: If the server can't honor\ntop and/or skip, the server MUST return an error to the client informing\nabout it instead of just ignoring the query options.",
              "type": {
                "$id": "459",
                "kind": "int32",
                "name": "int32",
                "crossLanguageDefinitionId": "TypeSpec.int32",
                "decorators": []
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "460",
              "name": "skip",
              "nameInRequest": "skip",
              "doc": "skip indicates the number of records to skip from the list of records held by\nthe server based on the sorting method specified.  By default, we sort by\ndescending start time.\n            \nClients MAY use top and skip query\nparameters to specify a number of results to return and an offset into the\ncollection.\nWhen both top and skip are given by a client, the server SHOULD\nfirst apply skip and then top on the collection.\n            \nNote: If the\nserver can't honor top and/or skip, the server MUST return an error to the\nclient informing about it instead of just ignoring the query options.",
              "type": {
                "$id": "461",
                "kind": "int32",
                "name": "int32",
                "crossLanguageDefinitionId": "TypeSpec.int32",
                "decorators": []
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "462",
              "name": "maxpagesize",
              "nameInRequest": "maxpagesize",
              "doc": "maxpagesize is the maximum items returned in a page.  If more items are\nrequested via top (or top is not specified and there are more items to be\nreturned), @nextLink will contain the link to the next page.\n           \n\nClients MAY request server-driven paging with a specific page size by\nspecifying a maxpagesize preference. The server SHOULD honor this preference\nif the specified page size is smaller than the server's default page size.",
              "type": {
                "$id": "463",
                "kind": "int32",
                "name": "int32",
                "crossLanguageDefinitionId": "TypeSpec.int32",
                "decorators": []
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "464",
              "name": "documentIds",
              "nameInRequest": "ids",
              "doc": "Ids to use in filtering",
              "type": {
                "$ref": "259"
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "arraySerializationDelimiter": ",",
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "465",
              "name": "statuses",
              "nameInRequest": "statuses",
              "doc": "Statuses to use in filtering",
              "type": {
                "$ref": "194"
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "arraySerializationDelimiter": ",",
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "466",
              "name": "createdDateTimeUtcStart",
              "nameInRequest": "createdDateTimeUtcStart",
              "doc": "the start datetime to get items after",
              "type": {
                "$id": "467",
                "kind": "utcDateTime",
                "name": "utcDateTime",
                "encode": "rfc3339",
                "wireType": {
                  "$id": "468",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
                "decorators": []
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "469",
              "name": "createdDateTimeUtcEnd",
              "nameInRequest": "createdDateTimeUtcEnd",
              "doc": "the end datetime to get items before",
              "type": {
                "$id": "470",
                "kind": "utcDateTime",
                "name": "utcDateTime",
                "encode": "rfc3339",
                "wireType": {
                  "$id": "471",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
                "decorators": []
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "472",
              "name": "orderby",
              "nameInRequest": "orderby",
              "doc": "the sorting query for the collection (ex: 'CreatedDateTimeUtc asc','CreatedDateTimeUtc desc')",
              "type": {
                "$ref": "194"
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "arraySerializationDelimiter": ",",
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "473",
              "name": "accept",
              "nameInRequest": "Accept",
              "type": {
                "$ref": "45"
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Constant",
              "decorators": [],
              "skipUrlEncoding": false
            }
          ],
          "response": {
            "type": {
              "$ref": "184"
            },
            "resultSegments": [
              "value"
            ]
          },
          "isOverride": false,
          "generateConvenient": true,
          "generateProtocol": true,
          "crossLanguageDefinitionId": "ClientCustomizations.DocumentTranslationClient.getDocumentsStatus",
          "pagingMetadata": {
            "itemPropertySegments": [
              "value"
            ],
            "nextLink": {
              "responseSegments": [
                "nextLink"
              ],
              "responseLocation": "Body"
            }
          }
        },
        {
          "$id": "474",
          "kind": "basic",
          "name": "getSupportedFormats",
          "accessibility": "public",
          "apiVersions": [
            "2024-05-01"
          ],
          "doc": "The list of supported formats supported by the Document Translation\nservice.\nThe list includes the common file extension, as well as the\ncontent-type if using the upload API.",
          "summary": "Returns a list of supported document formats",
          "operation": {
            "$id": "475",
            "name": "getSupportedFormats",
            "resourceName": "DocumentTranslationClient",
            "summary": "Returns a list of supported document formats",
            "doc": "The list of supported formats supported by the Document Translation\nservice.\nThe list includes the common file extension, as well as the\ncontent-type if using the upload API.",
            "accessibility": "public",
            "parameters": [
              {
                "$id": "476",
                "name": "apiVersion",
                "nameInRequest": "api-version",
                "doc": "The API version to use for this operation.",
                "type": {
                  "$id": "477",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": true,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Client",
                "defaultValue": {
                  "type": {
                    "$id": "478",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string"
                  },
                  "value": "2024-05-01"
                },
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "479",
                "name": "type",
                "nameInRequest": "type",
                "doc": "the type of format like document or glossary ",
                "type": {
                  "$ref": "26"
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "480",
                "name": "accept",
                "nameInRequest": "Accept",
                "type": {
                  "$ref": "47"
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Constant",
                "decorators": [],
                "skipUrlEncoding": false
              }
            ],
            "responses": [
              {
                "statusCodes": [
                  200
                ],
                "bodyType": {
                  "$ref": "187"
                },
                "headers": [],
                "isErrorResponse": false,
                "contentTypes": [
                  "application/json"
                ]
              }
            ],
            "httpMethod": "GET",
            "uri": "{endpoint}/translator",
            "path": "/document/formats",
            "bufferResponse": true,
            "generateProtocolMethod": true,
            "generateConvenienceMethod": true,
            "crossLanguageDefinitionId": "ClientCustomizations.DocumentTranslationClient.getSupportedFormats",
            "decorators": [],
            "examples": [
              {
                "$id": "481",
                "kind": "http",
                "name": "Returns a list of supported document formats",
                "description": "Returns a list of supported document formats",
                "filePath": "2024-05-01/format.json",
                "parameters": [
                  {
                    "parameter": {
                      "$ref": "476"
                    },
                    "value": {
                      "$id": "482",
                      "kind": "string",
                      "type": {
                        "$ref": "477"
                      },
                      "value": "2024-05-01"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "479"
                    },
                    "value": {
                      "$id": "483",
                      "kind": "string",
                      "type": {
                        "$ref": "26"
                      },
                      "value": "document"
                    }
                  }
                ],
                "responses": [
                  {
                    "response": {
                      "statusCodes": [
                        200
                      ],
                      "bodyType": {
                        "$ref": "187"
                      },
                      "headers": [],
                      "isErrorResponse": false,
                      "contentTypes": [
                        "application/json"
                      ]
                    },
                    "statusCode": 200,
                    "bodyValue": {
                      "$id": "484",
                      "kind": "model",
                      "type": {
                        "$ref": "187"
                      },
                      "value": {
                        "value": {
                          "$id": "485",
                          "kind": "array",
                          "type": {
                            "$ref": "189"
                          },
                          "value": [
                            {
                              "$id": "486",
                              "kind": "model",
                              "type": {
                                "$ref": "190"
                              },
                              "value": {
                                "format": {
                                  "$id": "487",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "192"
                                  },
                                  "value": "PlainText"
                                },
                                "fileExtensions": {
                                  "$id": "488",
                                  "kind": "array",
                                  "type": {
                                    "$ref": "194"
                                  },
                                  "value": [
                                    {
                                      "$id": "489",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "195"
                                      },
                                      "value": ".txt"
                                    }
                                  ]
                                },
                                "contentTypes": {
                                  "$id": "490",
                                  "kind": "array",
                                  "type": {
                                    "$ref": "194"
                                  },
                                  "value": [
                                    {
                                      "$id": "491",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "195"
                                      },
                                      "value": "text/plain"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "$id": "492",
                              "kind": "model",
                              "type": {
                                "$ref": "190"
                              },
                              "value": {
                                "format": {
                                  "$id": "493",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "192"
                                  },
                                  "value": "PortableDocumentFormat"
                                },
                                "fileExtensions": {
                                  "$id": "494",
                                  "kind": "array",
                                  "type": {
                                    "$ref": "194"
                                  },
                                  "value": [
                                    {
                                      "$id": "495",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "195"
                                      },
                                      "value": ".pdf"
                                    }
                                  ]
                                },
                                "contentTypes": {
                                  "$id": "496",
                                  "kind": "array",
                                  "type": {
                                    "$ref": "194"
                                  },
                                  "value": [
                                    {
                                      "$id": "497",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "195"
                                      },
                                      "value": "application/pdf"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "$id": "498",
                              "kind": "model",
                              "type": {
                                "$ref": "190"
                              },
                              "value": {
                                "format": {
                                  "$id": "499",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "192"
                                  },
                                  "value": "OpenXmlWord"
                                },
                                "fileExtensions": {
                                  "$id": "500",
                                  "kind": "array",
                                  "type": {
                                    "$ref": "194"
                                  },
                                  "value": [
                                    {
                                      "$id": "501",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "195"
                                      },
                                      "value": ".docx"
                                    }
                                  ]
                                },
                                "contentTypes": {
                                  "$id": "502",
                                  "kind": "array",
                                  "type": {
                                    "$ref": "194"
                                  },
                                  "value": [
                                    {
                                      "$id": "503",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "195"
                                      },
                                      "value": "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "$id": "504",
                              "kind": "model",
                              "type": {
                                "$ref": "190"
                              },
                              "value": {
                                "format": {
                                  "$id": "505",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "192"
                                  },
                                  "value": "OpenXmlPresentation"
                                },
                                "fileExtensions": {
                                  "$id": "506",
                                  "kind": "array",
                                  "type": {
                                    "$ref": "194"
                                  },
                                  "value": [
                                    {
                                      "$id": "507",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "195"
                                      },
                                      "value": ".pptx"
                                    }
                                  ]
                                },
                                "contentTypes": {
                                  "$id": "508",
                                  "kind": "array",
                                  "type": {
                                    "$ref": "194"
                                  },
                                  "value": [
                                    {
                                      "$id": "509",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "195"
                                      },
                                      "value": "application/vnd.openxmlformats-officedocument.presentationml.presentation"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "$id": "510",
                              "kind": "model",
                              "type": {
                                "$ref": "190"
                              },
                              "value": {
                                "format": {
                                  "$id": "511",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "192"
                                  },
                                  "value": "OpenXmlSpreadsheet"
                                },
                                "fileExtensions": {
                                  "$id": "512",
                                  "kind": "array",
                                  "type": {
                                    "$ref": "194"
                                  },
                                  "value": [
                                    {
                                      "$id": "513",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "195"
                                      },
                                      "value": ".xlsx"
                                    }
                                  ]
                                },
                                "contentTypes": {
                                  "$id": "514",
                                  "kind": "array",
                                  "type": {
                                    "$ref": "194"
                                  },
                                  "value": [
                                    {
                                      "$id": "515",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "195"
                                      },
                                      "value": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "$id": "516",
                              "kind": "model",
                              "type": {
                                "$ref": "190"
                              },
                              "value": {
                                "format": {
                                  "$id": "517",
                                  "kind": "string",
                                  "type": {
                                    "$ref": "192"
                                  },
                                  "value": "HtmlFile"
                                },
                                "fileExtensions": {
                                  "$id": "518",
                                  "kind": "array",
                                  "type": {
                                    "$ref": "194"
                                  },
                                  "value": [
                                    {
                                      "$id": "519",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "195"
                                      },
                                      "value": ".html"
                                    },
                                    {
                                      "$id": "520",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "195"
                                      },
                                      "value": ".htm"
                                    }
                                  ]
                                },
                                "contentTypes": {
                                  "$id": "521",
                                  "kind": "array",
                                  "type": {
                                    "$ref": "194"
                                  },
                                  "value": [
                                    {
                                      "$id": "522",
                                      "kind": "string",
                                      "type": {
                                        "$ref": "195"
                                      },
                                      "value": "text/html"
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "$id": "523",
              "name": "type",
              "nameInRequest": "type",
              "doc": "the type of format like document or glossary ",
              "type": {
                "$ref": "26"
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "524",
              "name": "accept",
              "nameInRequest": "Accept",
              "type": {
                "$ref": "47"
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Constant",
              "decorators": [],
              "skipUrlEncoding": false
            }
          ],
          "response": {
            "type": {
              "$ref": "187"
            }
          },
          "isOverride": false,
          "generateConvenient": true,
          "generateProtocol": true,
          "crossLanguageDefinitionId": "ClientCustomizations.DocumentTranslationClient.getSupportedFormats"
        }
      ],
      "parameters": [
        {
          "$id": "525",
          "name": "endpoint",
          "nameInRequest": "endpoint",
          "doc": "Supported document Translation endpoint, protocol and hostname, for example: https://{TranslatorResourceName}.cognitiveservices.azure.com/translator.",
          "type": {
            "$id": "526",
            "kind": "url",
            "name": "endpoint",
            "crossLanguageDefinitionId": "TypeSpec.url"
          },
          "location": "Uri",
          "isApiVersion": false,
          "isContentType": false,
          "isRequired": true,
          "isEndpoint": true,
          "skipUrlEncoding": false,
          "explode": false,
          "kind": "Client",
          "serverUrlTemplate": "{endpoint}/translator"
        }
      ],
      "decorators": [],
      "crossLanguageDefinitionId": "ClientCustomizations.DocumentTranslationClient",
      "apiVersions": [
        "2024-05-01"
      ]
    },
    {
      "$id": "527",
      "kind": "client",
      "name": "SingleDocumentTranslationClient",
      "namespace": "Azure.AI.Translation.Document",
      "methods": [
        {
          "$id": "528",
          "kind": "basic",
          "name": "translate",
          "accessibility": "public",
          "apiVersions": [
            "2024-05-01"
          ],
          "doc": "Use this API to submit a single translation request to the Document Translation Service.",
          "summary": "Submit a single document translation request to the Document Translation service",
          "operation": {
            "$id": "529",
            "name": "translate",
            "resourceName": "SingleDocumentTranslationClient",
            "summary": "Submit a single document translation request to the Document Translation service",
            "doc": "Use this API to submit a single translation request to the Document Translation Service.",
            "accessibility": "public",
            "parameters": [
              {
                "$id": "530",
                "name": "apiVersion",
                "nameInRequest": "api-version",
                "doc": "The API version to use for this operation.",
                "type": {
                  "$id": "531",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": true,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Client",
                "defaultValue": {
                  "type": {
                    "$id": "532",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string"
                  },
                  "value": "2024-05-01"
                },
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "533",
                "name": "sourceLanguage",
                "nameInRequest": "sourceLanguage",
                "doc": "Specifies source language of the input document.\nIf this parameter isn't specified, automatic language detection is applied to determine the source language.\nFor example if the source document is written in English, then use sourceLanguage=en",
                "type": {
                  "$id": "534",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "535",
                "name": "targetLanguage",
                "nameInRequest": "targetLanguage",
                "doc": "Specifies the language of the output document.\nThe target language must be one of the supported languages included in the translation scope.\nFor example if you want to translate the document in German language, then use targetLanguage=de ",
                "type": {
                  "$id": "536",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "537",
                "name": "category",
                "nameInRequest": "category",
                "doc": "A string specifying the category (domain) of the translation. This parameter is used to get translations \nfrom a customized system built with Custom Translator. Add the Category ID from your Custom Translator \nproject details to this parameter to use your deployed customized system. Default value is: general.",
                "type": {
                  "$id": "538",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "539",
                "name": "allowFallback",
                "nameInRequest": "allowFallback",
                "doc": "Specifies that the service is allowed to fall back to a general system when a custom system doesn't exist. \nPossible values are: true (default) or false.",
                "type": {
                  "$id": "540",
                  "kind": "boolean",
                  "name": "boolean",
                  "crossLanguageDefinitionId": "TypeSpec.boolean",
                  "decorators": []
                },
                "location": "Query",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "541",
                "name": "contentType",
                "nameInRequest": "Content-Type",
                "doc": "Content Type as multipart/form-data",
                "type": {
                  "$ref": "49"
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": true,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Constant",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "542",
                "name": "clientRequestId",
                "nameInRequest": "x-ms-client-request-id",
                "doc": "An opaque, globally-unique, client-generated string identifier for the request.",
                "type": {
                  "$id": "543",
                  "kind": "string",
                  "name": "uuid",
                  "crossLanguageDefinitionId": "Azure.Core.uuid",
                  "baseType": {
                    "$id": "544",
                    "kind": "string",
                    "name": "string",
                    "crossLanguageDefinitionId": "TypeSpec.string",
                    "decorators": []
                  },
                  "decorators": []
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": false,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "545",
                "name": "accept",
                "nameInRequest": "Accept",
                "type": {
                  "$ref": "51"
                },
                "location": "Header",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Constant",
                "decorators": [],
                "skipUrlEncoding": false
              },
              {
                "$id": "546",
                "name": "documentTranslateContent",
                "nameInRequest": "documentTranslateContent",
                "doc": "Document Translate Request Content",
                "type": {
                  "$ref": "201"
                },
                "location": "Body",
                "isApiVersion": false,
                "isContentType": false,
                "isEndpoint": false,
                "explode": false,
                "isRequired": true,
                "kind": "Method",
                "decorators": [],
                "skipUrlEncoding": false
              }
            ],
            "responses": [
              {
                "statusCodes": [
                  200
                ],
                "bodyType": {
                  "$id": "547",
                  "kind": "bytes",
                  "name": "bytes",
                  "crossLanguageDefinitionId": "TypeSpec.bytes",
                  "decorators": []
                },
                "headers": [
                  {
                    "name": "clientRequestId",
                    "nameInResponse": "x-ms-client-request-id",
                    "doc": "An opaque, globally-unique, client-generated string identifier for the request.",
                    "type": {
                      "$id": "548",
                      "kind": "string",
                      "name": "uuid",
                      "crossLanguageDefinitionId": "Azure.Core.uuid",
                      "baseType": {
                        "$id": "549",
                        "kind": "string",
                        "name": "string",
                        "crossLanguageDefinitionId": "TypeSpec.string",
                        "decorators": []
                      },
                      "decorators": []
                    }
                  },
                  {
                    "name": "contentType",
                    "nameInResponse": "content-type",
                    "doc": "response content type",
                    "type": {
                      "$ref": "53"
                    }
                  }
                ],
                "isErrorResponse": false,
                "contentTypes": [
                  "application/octet-stream"
                ]
              }
            ],
            "httpMethod": "POST",
            "uri": "{endpoint}/translator",
            "path": "/document:translate",
            "requestMediaTypes": [
              "multipart/form-data"
            ],
            "bufferResponse": true,
            "generateProtocolMethod": true,
            "generateConvenienceMethod": true,
            "crossLanguageDefinitionId": "ClientCustomizations.SingleDocumentTranslationClient.documentTranslate",
            "decorators": [],
            "examples": [
              {
                "$id": "550",
                "kind": "http",
                "name": "Translate a single document",
                "description": "Translate a single document",
                "filePath": "2024-05-01/DocumentTranslate_MaximumSet_Gen.json",
                "parameters": [
                  {
                    "parameter": {
                      "$ref": "530"
                    },
                    "value": {
                      "$id": "551",
                      "kind": "string",
                      "type": {
                        "$ref": "531"
                      },
                      "value": "2024-05-01"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "533"
                    },
                    "value": {
                      "$id": "552",
                      "kind": "string",
                      "type": {
                        "$ref": "534"
                      },
                      "value": "en"
                    }
                  },
                  {
                    "parameter": {
                      "$ref": "535"
                    },
                    "value": {
                      "$id": "553",
                      "kind": "string",
                      "type": {
                        "$ref": "536"
                      },
                      "value": "es"
                    }
                  }
                ],
                "responses": [
                  {
                    "response": {
                      "statusCodes": [
                        200
                      ],
                      "bodyType": {
                        "$ref": "547"
                      },
                      "headers": [
                        {
                          "name": "clientRequestId",
                          "nameInResponse": "x-ms-client-request-id",
                          "doc": "An opaque, globally-unique, client-generated string identifier for the request.",
                          "type": {
                            "$ref": "548"
                          }
                        },
                        {
                          "name": "contentType",
                          "nameInResponse": "content-type",
                          "doc": "response content type",
                          "type": {
                            "$ref": "53"
                          }
                        }
                      ],
                      "isErrorResponse": false,
                      "contentTypes": [
                        "application/octet-stream"
                      ]
                    },
                    "statusCode": 200,
                    "bodyValue": {
                      "$id": "554",
                      "kind": "string",
                      "type": {
                        "$ref": "547"
                      },
                      "value": "TXkgdHJhbnNsYXRlZCBkb2N1bWVudA=="
                    }
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "$id": "555",
              "name": "sourceLanguage",
              "nameInRequest": "sourceLanguage",
              "doc": "Specifies source language of the input document.\nIf this parameter isn't specified, automatic language detection is applied to determine the source language.\nFor example if the source document is written in English, then use sourceLanguage=en",
              "type": {
                "$id": "556",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "557",
              "name": "targetLanguage",
              "nameInRequest": "targetLanguage",
              "doc": "Specifies the language of the output document.\nThe target language must be one of the supported languages included in the translation scope.\nFor example if you want to translate the document in German language, then use targetLanguage=de ",
              "type": {
                "$id": "558",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "559",
              "name": "category",
              "nameInRequest": "category",
              "doc": "A string specifying the category (domain) of the translation. This parameter is used to get translations \nfrom a customized system built with Custom Translator. Add the Category ID from your Custom Translator \nproject details to this parameter to use your deployed customized system. Default value is: general.",
              "type": {
                "$id": "560",
                "kind": "string",
                "name": "string",
                "crossLanguageDefinitionId": "TypeSpec.string",
                "decorators": []
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "561",
              "name": "allowFallback",
              "nameInRequest": "allowFallback",
              "doc": "Specifies that the service is allowed to fall back to a general system when a custom system doesn't exist. \nPossible values are: true (default) or false.",
              "type": {
                "$id": "562",
                "kind": "boolean",
                "name": "boolean",
                "crossLanguageDefinitionId": "TypeSpec.boolean",
                "decorators": []
              },
              "location": "Query",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "563",
              "name": "contentType",
              "nameInRequest": "Content-Type",
              "doc": "Content Type as multipart/form-data",
              "type": {
                "$ref": "55"
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": true,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Constant",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "564",
              "name": "documentTranslateContent",
              "nameInRequest": "documentTranslateContent",
              "doc": "Document Translate Request Content",
              "type": {
                "$ref": "201"
              },
              "location": "Body",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "565",
              "name": "clientRequestId",
              "nameInRequest": "x-ms-client-request-id",
              "doc": "An opaque, globally-unique, client-generated string identifier for the request.",
              "type": {
                "$id": "566",
                "kind": "string",
                "name": "uuid",
                "crossLanguageDefinitionId": "Azure.Core.uuid",
                "baseType": {
                  "$id": "567",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                },
                "decorators": []
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": false,
              "kind": "Method",
              "decorators": [],
              "skipUrlEncoding": false
            },
            {
              "$id": "568",
              "name": "accept",
              "nameInRequest": "Accept",
              "type": {
                "$ref": "51"
              },
              "location": "Header",
              "isApiVersion": false,
              "isContentType": false,
              "isEndpoint": false,
              "explode": false,
              "isRequired": true,
              "kind": "Constant",
              "decorators": [],
              "skipUrlEncoding": false
            }
          ],
          "response": {
            "type": {
              "$ref": "547"
            }
          },
          "isOverride": false,
          "generateConvenient": true,
          "generateProtocol": true,
          "crossLanguageDefinitionId": "ClientCustomizations.SingleDocumentTranslationClient.documentTranslate"
        }
      ],
      "parameters": [
        {
          "$id": "569",
          "name": "endpoint",
          "nameInRequest": "endpoint",
          "doc": "Supported document Translation endpoint, protocol and hostname, for example: https://{TranslatorResourceName}.cognitiveservices.azure.com/translator.",
          "type": {
            "$id": "570",
            "kind": "url",
            "name": "endpoint",
            "crossLanguageDefinitionId": "TypeSpec.url"
          },
          "location": "Uri",
          "isApiVersion": false,
          "isContentType": false,
          "isRequired": true,
          "isEndpoint": true,
          "skipUrlEncoding": false,
          "explode": false,
          "kind": "Client",
          "serverUrlTemplate": "{endpoint}/translator"
        }
      ],
      "decorators": [],
      "crossLanguageDefinitionId": "ClientCustomizations.SingleDocumentTranslationClient",
      "apiVersions": [
        "2024-05-01"
      ]
    }
  ],
  "auth": {
    "apiKey": {
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    },
    "oAuth2": {
      "flows": [
        {
          "scopes": [
            "https://cognitiveservices.azure.com/.default"
          ],
          "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
          "tokenUrl": "https://login.microsoftonline.com/common/oauth2/token"
        }
      ]
    }
  }
}
