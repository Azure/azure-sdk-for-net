// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.ResourceConnector.Models
{
    /// <summary> The List Cluster Keys Results appliance. </summary>
    public partial class ApplianceListKeysResults
    {
        /// <summary> Initializes a new instance of ApplianceListKeysResults. </summary>
        internal ApplianceListKeysResults()
        {
            ArtifactProfiles = new ChangeTrackingDictionary<string, ArtifactProfile>();
            Kubeconfigs = new ChangeTrackingList<ApplianceCredentialKubeconfig>();
            SshKeys = new ChangeTrackingDictionary<string, SSHKey>();
        }

        /// <summary> Initializes a new instance of ApplianceListKeysResults. </summary>
        /// <param name="artifactProfiles"> Map of artifacts that contains a list of ArtifactProfile used to upload artifacts such as logs. </param>
        /// <param name="kubeconfigs"> The list of appliance kubeconfigs. </param>
        /// <param name="sshKeys"> Map of Customer User Public, Private SSH Keys and Certificate when available. </param>
        internal ApplianceListKeysResults(IReadOnlyDictionary<string, ArtifactProfile> artifactProfiles, IReadOnlyList<ApplianceCredentialKubeconfig> kubeconfigs, IReadOnlyDictionary<string, SSHKey> sshKeys)
        {
            ArtifactProfiles = artifactProfiles;
            Kubeconfigs = kubeconfigs;
            SshKeys = sshKeys;
        }

        /// <summary> Map of artifacts that contains a list of ArtifactProfile used to upload artifacts such as logs. </summary>
        public IReadOnlyDictionary<string, ArtifactProfile> ArtifactProfiles { get; }
        /// <summary> The list of appliance kubeconfigs. </summary>
        public IReadOnlyList<ApplianceCredentialKubeconfig> Kubeconfigs { get; }
        /// <summary> Map of Customer User Public, Private SSH Keys and Certificate when available. </summary>
        public IReadOnlyDictionary<string, SSHKey> SshKeys { get; }
    }
}
