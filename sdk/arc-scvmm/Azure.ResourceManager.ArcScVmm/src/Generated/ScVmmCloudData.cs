// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.ArcScVmm.Models;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.Resources.Models;

namespace Azure.ResourceManager.ArcScVmm
{
    /// <summary>
    /// A class representing the ScVmmCloud data model.
    /// The Clouds resource definition.
    /// </summary>
    public partial class ScVmmCloudData : TrackedResourceData
    {
        /// <summary> Initializes a new instance of <see cref="ScVmmCloudData"/>. </summary>
        /// <param name="location"> The location. </param>
        /// <param name="extendedLocation"> The extended location. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="extendedLocation"/> is null. </exception>
        public ScVmmCloudData(AzureLocation location, ExtendedLocation extendedLocation) : base(location)
        {
            Argument.AssertNotNull(extendedLocation, nameof(extendedLocation));

            ExtendedLocation = extendedLocation;
            StorageQoSPolicies = new ChangeTrackingList<StorageQoSPolicy>();
        }

        /// <summary> Initializes a new instance of <see cref="ScVmmCloudData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="extendedLocation"> The extended location. </param>
        /// <param name="inventoryItemId"> Gets or sets the inventory Item ID for the resource. </param>
        /// <param name="uuid"> Unique ID of the cloud. </param>
        /// <param name="vmmServerId"> ARM Id of the vmmServer resource in which this resource resides. </param>
        /// <param name="cloudName"> Name of the cloud in VMMServer. </param>
        /// <param name="cloudCapacity"> Capacity of the cloud. </param>
        /// <param name="storageQoSPolicies"> List of QoS policies available for the cloud. </param>
        /// <param name="provisioningState"> Gets or sets the provisioning state. </param>
        internal ScVmmCloudData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary<string, string> tags, AzureLocation location, ExtendedLocation extendedLocation, string inventoryItemId, string uuid, string vmmServerId, string cloudName, CloudCapacity cloudCapacity, IReadOnlyList<StorageQoSPolicy> storageQoSPolicies, string provisioningState) : base(id, name, resourceType, systemData, tags, location)
        {
            ExtendedLocation = extendedLocation;
            InventoryItemId = inventoryItemId;
            Uuid = uuid;
            VmmServerId = vmmServerId;
            CloudName = cloudName;
            CloudCapacity = cloudCapacity;
            StorageQoSPolicies = storageQoSPolicies;
            ProvisioningState = provisioningState;
        }

        /// <summary> The extended location. </summary>
        public ExtendedLocation ExtendedLocation { get; set; }
        /// <summary> Gets or sets the inventory Item ID for the resource. </summary>
        public string InventoryItemId { get; set; }
        /// <summary> Unique ID of the cloud. </summary>
        public string Uuid { get; set; }
        /// <summary> ARM Id of the vmmServer resource in which this resource resides. </summary>
        public string VmmServerId { get; set; }
        /// <summary> Name of the cloud in VMMServer. </summary>
        public string CloudName { get; }
        /// <summary> Capacity of the cloud. </summary>
        public CloudCapacity CloudCapacity { get; }
        /// <summary> List of QoS policies available for the cloud. </summary>
        public IReadOnlyList<StorageQoSPolicy> StorageQoSPolicies { get; }
        /// <summary> Gets or sets the provisioning state. </summary>
        public string ProvisioningState { get; }
    }
}
