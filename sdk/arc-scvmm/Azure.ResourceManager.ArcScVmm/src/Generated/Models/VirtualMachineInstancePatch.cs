// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.ArcScVmm.Models
{
    /// <summary> Defines the virtualMachineInstanceUpdate. </summary>
    public partial class VirtualMachineInstancePatch
    {
        /// <summary> Initializes a new instance of VirtualMachineInstancePatch. </summary>
        public VirtualMachineInstancePatch()
        {
            AvailabilitySets = new ChangeTrackingList<AvailabilitySetListItem>();
        }

        /// <summary> Defines the resource properties. </summary>
        public HardwareProfileUpdate HardwareProfile { get; set; }
        /// <summary> Defines the resource properties. </summary>
        internal StorageProfileUpdate StorageProfile { get; set; }
        /// <summary> Gets or sets the list of virtual disks associated with the virtual machine. </summary>
        public IList<VirtualDiskUpdate> StorageDisks
        {
            get
            {
                if (StorageProfile is null)
                    StorageProfile = new StorageProfileUpdate();
                return StorageProfile.Disks;
            }
        }

        /// <summary> Defines the resource properties. </summary>
        internal NetworkProfileUpdate NetworkProfile { get; set; }
        /// <summary> Gets or sets the list of network interfaces associated with the virtual machine. </summary>
        public IList<NetworkInterfaceUpdate> NetworkInterfaces
        {
            get
            {
                if (NetworkProfile is null)
                    NetworkProfile = new NetworkProfileUpdate();
                return NetworkProfile.NetworkInterfaces;
            }
        }

        /// <summary> Availability Sets in vm. </summary>
        public IList<AvailabilitySetListItem> AvailabilitySets { get; }
        /// <summary> Gets the infrastructure profile. </summary>
        internal InfrastructureProfileUpdate InfrastructureProfile { get; set; }
        /// <summary> Type of checkpoint supported for the vm. </summary>
        public string InfrastructureCheckpointType
        {
            get => InfrastructureProfile is null ? default : InfrastructureProfile.CheckpointType;
            set
            {
                if (InfrastructureProfile is null)
                    InfrastructureProfile = new InfrastructureProfileUpdate();
                InfrastructureProfile.CheckpointType = value;
            }
        }
    }
}
