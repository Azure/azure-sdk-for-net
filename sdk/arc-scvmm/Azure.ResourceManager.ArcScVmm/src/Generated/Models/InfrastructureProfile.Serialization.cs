// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ArcScVmm.Models
{
    public partial class InfrastructureProfile : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(InventoryItemId))
            {
                writer.WritePropertyName("inventoryItemId"u8);
                writer.WriteStringValue(InventoryItemId);
            }
            if (Optional.IsDefined(VmmServerId))
            {
                writer.WritePropertyName("vmmServerId"u8);
                writer.WriteStringValue(VmmServerId);
            }
            if (Optional.IsDefined(CloudId))
            {
                writer.WritePropertyName("cloudId"u8);
                writer.WriteStringValue(CloudId);
            }
            if (Optional.IsDefined(TemplateId))
            {
                writer.WritePropertyName("templateId"u8);
                writer.WriteStringValue(TemplateId);
            }
            if (Optional.IsDefined(VmName))
            {
                writer.WritePropertyName("vmName"u8);
                writer.WriteStringValue(VmName);
            }
            if (Optional.IsDefined(Uuid))
            {
                writer.WritePropertyName("uuid"u8);
                writer.WriteStringValue(Uuid);
            }
            if (Optional.IsCollectionDefined(Checkpoints))
            {
                writer.WritePropertyName("checkpoints"u8);
                writer.WriteStartArray();
                foreach (var item in Checkpoints)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(CheckpointType))
            {
                writer.WritePropertyName("checkpointType"u8);
                writer.WriteStringValue(CheckpointType);
            }
            if (Optional.IsDefined(Generation))
            {
                writer.WritePropertyName("generation"u8);
                writer.WriteNumberValue(Generation.Value);
            }
            if (Optional.IsDefined(BiosGuid))
            {
                writer.WritePropertyName("biosGuid"u8);
                writer.WriteStringValue(BiosGuid);
            }
            writer.WriteEndObject();
        }

        internal static InfrastructureProfile DeserializeInfrastructureProfile(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> inventoryItemId = default;
            Optional<ResourceIdentifier> vmmServerId = default;
            Optional<ResourceIdentifier> cloudId = default;
            Optional<ResourceIdentifier> templateId = default;
            Optional<string> vmName = default;
            Optional<string> uuid = default;
            Optional<Checkpoint> lastRestoredVmCheckpoint = default;
            Optional<IList<Checkpoint>> checkpoints = default;
            Optional<string> checkpointType = default;
            Optional<int> generation = default;
            Optional<string> biosGuid = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("inventoryItemId"u8))
                {
                    inventoryItemId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("vmmServerId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    vmmServerId = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("cloudId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    cloudId = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("templateId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    templateId = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("vmName"u8))
                {
                    vmName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("uuid"u8))
                {
                    uuid = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("lastRestoredVMCheckpoint"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    lastRestoredVmCheckpoint = Checkpoint.DeserializeCheckpoint(property.Value);
                    continue;
                }
                if (property.NameEquals("checkpoints"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<Checkpoint> array = new List<Checkpoint>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(Checkpoint.DeserializeCheckpoint(item));
                    }
                    checkpoints = array;
                    continue;
                }
                if (property.NameEquals("checkpointType"u8))
                {
                    checkpointType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("generation"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    generation = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("biosGuid"u8))
                {
                    biosGuid = property.Value.GetString();
                    continue;
                }
            }
            return new InfrastructureProfile(inventoryItemId.Value, vmmServerId.Value, cloudId.Value, templateId.Value, vmName.Value, uuid.Value, lastRestoredVmCheckpoint.Value, Optional.ToList(checkpoints), checkpointType.Value, Optional.ToNullable(generation), biosGuid.Value);
        }
    }
}
