// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ArcScVmm.Models
{
    public partial class VirtualDisk : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(Name))
            {
                writer.WritePropertyName("name"u8);
                writer.WriteStringValue(Name);
            }
            if (Core.Optional.IsDefined(DiskId))
            {
                writer.WritePropertyName("diskId"u8);
                writer.WriteStringValue(DiskId);
            }
            if (Core.Optional.IsDefined(DiskSizeGB))
            {
                writer.WritePropertyName("diskSizeGB"u8);
                writer.WriteNumberValue(DiskSizeGB.Value);
            }
            if (Core.Optional.IsDefined(Bus))
            {
                writer.WritePropertyName("bus"u8);
                writer.WriteNumberValue(Bus.Value);
            }
            if (Core.Optional.IsDefined(Lun))
            {
                writer.WritePropertyName("lun"u8);
                writer.WriteNumberValue(Lun.Value);
            }
            if (Core.Optional.IsDefined(BusType))
            {
                writer.WritePropertyName("busType"u8);
                writer.WriteStringValue(BusType);
            }
            if (Core.Optional.IsDefined(VhdType))
            {
                writer.WritePropertyName("vhdType"u8);
                writer.WriteStringValue(VhdType);
            }
            if (Core.Optional.IsDefined(TemplateDiskId))
            {
                writer.WritePropertyName("templateDiskId"u8);
                writer.WriteStringValue(TemplateDiskId);
            }
            if (Core.Optional.IsDefined(StorageQoSPolicy))
            {
                writer.WritePropertyName("storageQoSPolicy"u8);
                writer.WriteObjectValue(StorageQoSPolicy);
            }
            if (Core.Optional.IsDefined(CreateDiffDisk))
            {
                writer.WritePropertyName("createDiffDisk"u8);
                writer.WriteStringValue(CreateDiffDisk.Value.ToString());
            }
            writer.WriteEndObject();
        }

        internal static VirtualDisk DeserializeVirtualDisk(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<string> name = default;
            Core.Optional<string> displayName = default;
            Core.Optional<string> diskId = default;
            Core.Optional<int> diskSizeGB = default;
            Core.Optional<int> maxDiskSizeGB = default;
            Core.Optional<int> bus = default;
            Core.Optional<int> lun = default;
            Core.Optional<string> busType = default;
            Core.Optional<string> vhdType = default;
            Core.Optional<string> volumeType = default;
            Core.Optional<string> vhdFormatType = default;
            Core.Optional<string> templateDiskId = default;
            Core.Optional<StorageQoSPolicyDetails> storageQoSPolicy = default;
            Core.Optional<CreateDiffDisk> createDiffDisk = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("name"u8))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("displayName"u8))
                {
                    displayName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("diskId"u8))
                {
                    diskId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("diskSizeGB"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    diskSizeGB = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("maxDiskSizeGB"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    maxDiskSizeGB = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("bus"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    bus = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("lun"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    lun = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("busType"u8))
                {
                    busType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("vhdType"u8))
                {
                    vhdType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("volumeType"u8))
                {
                    volumeType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("vhdFormatType"u8))
                {
                    vhdFormatType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("templateDiskId"u8))
                {
                    templateDiskId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("storageQoSPolicy"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    storageQoSPolicy = StorageQoSPolicyDetails.DeserializeStorageQoSPolicyDetails(property.Value);
                    continue;
                }
                if (property.NameEquals("createDiffDisk"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    createDiffDisk = new CreateDiffDisk(property.Value.GetString());
                    continue;
                }
            }
            return new VirtualDisk(name.Value, displayName.Value, diskId.Value, Core.Optional.ToNullable(diskSizeGB), Core.Optional.ToNullable(maxDiskSizeGB), Core.Optional.ToNullable(bus), Core.Optional.ToNullable(lun), busType.Value, vhdType.Value, volumeType.Value, vhdFormatType.Value, templateDiskId.Value, storageQoSPolicy.Value, Core.Optional.ToNullable(createDiffDisk));
        }
    }
}
