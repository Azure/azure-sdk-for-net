// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.ArcScVmm.Models
{
    /// <summary> The Virtual machine inventory item. </summary>
    public partial class VirtualMachineInventoryItem : InventoryItemProperties
    {
        /// <summary> Initializes a new instance of <see cref="VirtualMachineInventoryItem"/>. </summary>
        public VirtualMachineInventoryItem()
        {
            IPAddresses = new ChangeTrackingList<string>();
            InventoryType = InventoryType.VirtualMachine;
        }

        /// <summary> Initializes a new instance of <see cref="VirtualMachineInventoryItem"/>. </summary>
        /// <param name="inventoryType"> They inventory type. </param>
        /// <param name="managedResourceId"> Gets the tracked resource id corresponding to the inventory resource. </param>
        /// <param name="uuid"> Gets the UUID (which is assigned by VMM) for the inventory item. </param>
        /// <param name="inventoryItemName"> Gets the Managed Object name in VMM for the inventory item. </param>
        /// <param name="provisioningState"> Gets the provisioning state. </param>
        /// <param name="osType"> Gets or sets the type of the os. </param>
        /// <param name="osName"> Gets or sets os name. </param>
        /// <param name="powerState"> Gets the power state of the virtual machine. </param>
        /// <param name="ipAddresses"> Gets or sets the nic ip addresses. </param>
        /// <param name="cloud"> Cloud inventory resource details where the VM is present. </param>
        internal VirtualMachineInventoryItem(InventoryType inventoryType, string managedResourceId, string uuid, string inventoryItemName, string provisioningState, OSType? osType, string osName, string powerState, IList<string> ipAddresses, InventoryItemDetails cloud) : base(inventoryType, managedResourceId, uuid, inventoryItemName, provisioningState)
        {
            OSType = osType;
            OSName = osName;
            PowerState = powerState;
            IPAddresses = ipAddresses;
            Cloud = cloud;
            InventoryType = inventoryType;
        }

        /// <summary> Gets or sets the type of the os. </summary>
        public OSType? OSType { get; }
        /// <summary> Gets or sets os name. </summary>
        public string OSName { get; }
        /// <summary> Gets the power state of the virtual machine. </summary>
        public string PowerState { get; }
        /// <summary> Gets or sets the nic ip addresses. </summary>
        public IList<string> IPAddresses { get; }
        /// <summary> Cloud inventory resource details where the VM is present. </summary>
        public InventoryItemDetails Cloud { get; set; }
    }
}
