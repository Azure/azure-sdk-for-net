// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Migrate.Models
{
    /// <summary> User configurable setting that describes the status of the assessment. </summary>
    public readonly partial struct AssessmentStage : IEquatable<AssessmentStage>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="AssessmentStage"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public AssessmentStage(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string InProgressValue = "InProgress";
        private const string UnderReviewValue = "UnderReview";
        private const string ApprovedValue = "Approved";

        /// <summary> InProgress. </summary>
        public static AssessmentStage InProgress { get; } = new AssessmentStage(InProgressValue);
        /// <summary> UnderReview. </summary>
        public static AssessmentStage UnderReview { get; } = new AssessmentStage(UnderReviewValue);
        /// <summary> Approved. </summary>
        public static AssessmentStage Approved { get; } = new AssessmentStage(ApprovedValue);
        /// <summary> Determines if two <see cref="AssessmentStage"/> values are the same. </summary>
        public static bool operator ==(AssessmentStage left, AssessmentStage right) => left.Equals(right);
        /// <summary> Determines if two <see cref="AssessmentStage"/> values are not the same. </summary>
        public static bool operator !=(AssessmentStage left, AssessmentStage right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="AssessmentStage"/>. </summary>
        public static implicit operator AssessmentStage(string value) => new AssessmentStage(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is AssessmentStage other && Equals(other);
        /// <inheritdoc />
        public bool Equals(AssessmentStage other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
