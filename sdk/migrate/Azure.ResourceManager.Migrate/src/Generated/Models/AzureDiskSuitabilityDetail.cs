// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Migrate.Models
{
    /// <summary> If disk is suitable to be migrate but some conditions/checks were not considered while calculating suitability, this explains the details. </summary>
    public readonly partial struct AzureDiskSuitabilityDetail : IEquatable<AzureDiskSuitabilityDetail>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="AzureDiskSuitabilityDetail"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public AzureDiskSuitabilityDetail(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string NoneValue = "None";
        private const string NumberOfReadOperationsPerSecondMissingValue = "NumberOfReadOperationsPerSecondMissing";
        private const string NumberOfWriteOperationsPerSecondMissingValue = "NumberOfWriteOperationsPerSecondMissing";
        private const string MegabytesPerSecondOfReadMissingValue = "MegabytesPerSecondOfReadMissing";
        private const string MegabytesPerSecondOfWriteMissingValue = "MegabytesPerSecondOfWriteMissing";
        private const string DiskGigabytesConsumedMissingValue = "DiskGigabytesConsumedMissing";
        private const string DiskGigabytesProvisionedMissingValue = "DiskGigabytesProvisionedMissing";
        private const string NumberOfReadOperationsPerSecondOutOfRangeValue = "NumberOfReadOperationsPerSecondOutOfRange";
        private const string NumberOfWriteOperationsPerSecondOutOfRangeValue = "NumberOfWriteOperationsPerSecondOutOfRange";
        private const string MegabytesPerSecondOfReadOutOfRangeValue = "MegabytesPerSecondOfReadOutOfRange";
        private const string MegabytesPerSecondOfWriteOutOfRangeValue = "MegabytesPerSecondOfWriteOutOfRange";
        private const string DiskGigabytesConsumedOutOfRangeValue = "DiskGigabytesConsumedOutOfRange";
        private const string DiskGigabytesProvisionedOutOfRangeValue = "DiskGigabytesProvisionedOutOfRange";

        /// <summary> None. </summary>
        public static AzureDiskSuitabilityDetail None { get; } = new AzureDiskSuitabilityDetail(NoneValue);
        /// <summary> NumberOfReadOperationsPerSecondMissing. </summary>
        public static AzureDiskSuitabilityDetail NumberOfReadOperationsPerSecondMissing { get; } = new AzureDiskSuitabilityDetail(NumberOfReadOperationsPerSecondMissingValue);
        /// <summary> NumberOfWriteOperationsPerSecondMissing. </summary>
        public static AzureDiskSuitabilityDetail NumberOfWriteOperationsPerSecondMissing { get; } = new AzureDiskSuitabilityDetail(NumberOfWriteOperationsPerSecondMissingValue);
        /// <summary> MegabytesPerSecondOfReadMissing. </summary>
        public static AzureDiskSuitabilityDetail MegabytesPerSecondOfReadMissing { get; } = new AzureDiskSuitabilityDetail(MegabytesPerSecondOfReadMissingValue);
        /// <summary> MegabytesPerSecondOfWriteMissing. </summary>
        public static AzureDiskSuitabilityDetail MegabytesPerSecondOfWriteMissing { get; } = new AzureDiskSuitabilityDetail(MegabytesPerSecondOfWriteMissingValue);
        /// <summary> DiskGigabytesConsumedMissing. </summary>
        public static AzureDiskSuitabilityDetail DiskGigabytesConsumedMissing { get; } = new AzureDiskSuitabilityDetail(DiskGigabytesConsumedMissingValue);
        /// <summary> DiskGigabytesProvisionedMissing. </summary>
        public static AzureDiskSuitabilityDetail DiskGigabytesProvisionedMissing { get; } = new AzureDiskSuitabilityDetail(DiskGigabytesProvisionedMissingValue);
        /// <summary> NumberOfReadOperationsPerSecondOutOfRange. </summary>
        public static AzureDiskSuitabilityDetail NumberOfReadOperationsPerSecondOutOfRange { get; } = new AzureDiskSuitabilityDetail(NumberOfReadOperationsPerSecondOutOfRangeValue);
        /// <summary> NumberOfWriteOperationsPerSecondOutOfRange. </summary>
        public static AzureDiskSuitabilityDetail NumberOfWriteOperationsPerSecondOutOfRange { get; } = new AzureDiskSuitabilityDetail(NumberOfWriteOperationsPerSecondOutOfRangeValue);
        /// <summary> MegabytesPerSecondOfReadOutOfRange. </summary>
        public static AzureDiskSuitabilityDetail MegabytesPerSecondOfReadOutOfRange { get; } = new AzureDiskSuitabilityDetail(MegabytesPerSecondOfReadOutOfRangeValue);
        /// <summary> MegabytesPerSecondOfWriteOutOfRange. </summary>
        public static AzureDiskSuitabilityDetail MegabytesPerSecondOfWriteOutOfRange { get; } = new AzureDiskSuitabilityDetail(MegabytesPerSecondOfWriteOutOfRangeValue);
        /// <summary> DiskGigabytesConsumedOutOfRange. </summary>
        public static AzureDiskSuitabilityDetail DiskGigabytesConsumedOutOfRange { get; } = new AzureDiskSuitabilityDetail(DiskGigabytesConsumedOutOfRangeValue);
        /// <summary> DiskGigabytesProvisionedOutOfRange. </summary>
        public static AzureDiskSuitabilityDetail DiskGigabytesProvisionedOutOfRange { get; } = new AzureDiskSuitabilityDetail(DiskGigabytesProvisionedOutOfRangeValue);
        /// <summary> Determines if two <see cref="AzureDiskSuitabilityDetail"/> values are the same. </summary>
        public static bool operator ==(AzureDiskSuitabilityDetail left, AzureDiskSuitabilityDetail right) => left.Equals(right);
        /// <summary> Determines if two <see cref="AzureDiskSuitabilityDetail"/> values are not the same. </summary>
        public static bool operator !=(AzureDiskSuitabilityDetail left, AzureDiskSuitabilityDetail right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="AzureDiskSuitabilityDetail"/>. </summary>
        public static implicit operator AzureDiskSuitabilityDetail(string value) => new AzureDiskSuitabilityDetail(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is AzureDiskSuitabilityDetail other && Equals(other);
        /// <inheritdoc />
        public bool Equals(AzureDiskSuitabilityDetail other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
