// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Migrate.Models
{
    public partial class AssessmentOptionsProperties
    {
        internal static AssessmentOptionsProperties DeserializeAssessmentOptionsProperties(JsonElement element)
        {
            Optional<IReadOnlyList<VmFamily>> vmFamilies = default;
            Optional<IReadOnlyList<string>> reservedInstanceVmFamilies = default;
            Optional<IReadOnlyList<string>> reservedInstanceSupportedLocations = default;
            Optional<IReadOnlyList<string>> reservedInstanceSupportedCurrencies = default;
            Optional<IReadOnlyList<string>> reservedInstanceSupportedOffers = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("vmFamilies"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<VmFamily> array = new List<VmFamily>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(VmFamily.DeserializeVmFamily(item));
                    }
                    vmFamilies = array;
                    continue;
                }
                if (property.NameEquals("reservedInstanceVmFamilies"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    reservedInstanceVmFamilies = array;
                    continue;
                }
                if (property.NameEquals("reservedInstanceSupportedLocations"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    reservedInstanceSupportedLocations = array;
                    continue;
                }
                if (property.NameEquals("reservedInstanceSupportedCurrencies"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    reservedInstanceSupportedCurrencies = array;
                    continue;
                }
                if (property.NameEquals("reservedInstanceSupportedOffers"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    reservedInstanceSupportedOffers = array;
                    continue;
                }
            }
            return new AssessmentOptionsProperties(Optional.ToList(vmFamilies), Optional.ToList(reservedInstanceVmFamilies), Optional.ToList(reservedInstanceSupportedLocations), Optional.ToList(reservedInstanceSupportedCurrencies), Optional.ToList(reservedInstanceSupportedOffers));
        }
    }
}
