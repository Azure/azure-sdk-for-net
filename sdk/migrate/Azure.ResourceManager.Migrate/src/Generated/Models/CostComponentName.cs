// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Migrate.Models
{
    /// <summary> Enum to represent component name. </summary>
    public readonly partial struct CostComponentName : IEquatable<CostComponentName>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="CostComponentName"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public CostComponentName(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string UnknownValue = "Unknown";
        private const string MonthlyAzureHybridCostSavingsValue = "MonthlyAzureHybridCostSavings";
        private const string MonthlySecurityCostValue = "MonthlySecurityCost";
        private const string MonthlyPremiumV2StorageCostValue = "MonthlyPremiumV2StorageCost";

        /// <summary> Unknown. </summary>
        public static CostComponentName Unknown { get; } = new CostComponentName(UnknownValue);
        /// <summary> MonthlyAzureHybridCostSavings. </summary>
        public static CostComponentName MonthlyAzureHybridCostSavings { get; } = new CostComponentName(MonthlyAzureHybridCostSavingsValue);
        /// <summary> MonthlySecurityCost. </summary>
        public static CostComponentName MonthlySecurityCost { get; } = new CostComponentName(MonthlySecurityCostValue);
        /// <summary> MonthlyPremiumV2StorageCost. </summary>
        public static CostComponentName MonthlyPremiumV2StorageCost { get; } = new CostComponentName(MonthlyPremiumV2StorageCostValue);
        /// <summary> Determines if two <see cref="CostComponentName"/> values are the same. </summary>
        public static bool operator ==(CostComponentName left, CostComponentName right) => left.Equals(right);
        /// <summary> Determines if two <see cref="CostComponentName"/> values are not the same. </summary>
        public static bool operator !=(CostComponentName left, CostComponentName right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="CostComponentName"/>. </summary>
        public static implicit operator CostComponentName(string value) => new CostComponentName(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is CostComponentName other && Equals(other);
        /// <inheritdoc />
        public bool Equals(CostComponentName other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
