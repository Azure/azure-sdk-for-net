// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Migrate.Models
{
    /// <summary> The MigrateGroupStatus. </summary>
    public readonly partial struct MigrateGroupStatus : IEquatable<MigrateGroupStatus>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="MigrateGroupStatus"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public MigrateGroupStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string CreatedValue = "Created";
        private const string UpdatedValue = "Updated";
        private const string RunningValue = "Running";
        private const string CompletedValue = "Completed";
        private const string InvalidValue = "Invalid";

        /// <summary> Created. </summary>
        public static MigrateGroupStatus Created { get; } = new MigrateGroupStatus(CreatedValue);
        /// <summary> Updated. </summary>
        public static MigrateGroupStatus Updated { get; } = new MigrateGroupStatus(UpdatedValue);
        /// <summary> Running. </summary>
        public static MigrateGroupStatus Running { get; } = new MigrateGroupStatus(RunningValue);
        /// <summary> Completed. </summary>
        public static MigrateGroupStatus Completed { get; } = new MigrateGroupStatus(CompletedValue);
        /// <summary> Invalid. </summary>
        public static MigrateGroupStatus Invalid { get; } = new MigrateGroupStatus(InvalidValue);
        /// <summary> Determines if two <see cref="MigrateGroupStatus"/> values are the same. </summary>
        public static bool operator ==(MigrateGroupStatus left, MigrateGroupStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="MigrateGroupStatus"/> values are not the same. </summary>
        public static bool operator !=(MigrateGroupStatus left, MigrateGroupStatus right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="MigrateGroupStatus"/>. </summary>
        public static implicit operator MigrateGroupStatus(string value) => new MigrateGroupStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is MigrateGroupStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(MigrateGroupStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
