// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Migrate.Models
{
    /// <summary> A network adapter assessed for an assessment. </summary>
    public partial class AssessedNetworkAdapter
    {
        /// <summary> Initializes a new instance of AssessedNetworkAdapter. </summary>
        internal AssessedNetworkAdapter()
        {
            IPAddresses = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of AssessedNetworkAdapter. </summary>
        /// <param name="macAddress"> MAC Address of the network adapter. </param>
        /// <param name="ipAddresses"> List of IP Addresses on the network adapter. </param>
        /// <param name="displayName"> User friendly name of the assessed network adapter. </param>
        /// <param name="monthlyBandwidthCosts"> Monthly cost estimate for network bandwidth used by this network adapter. </param>
        /// <param name="megabytesPerSecondReceived"> Adapter throughput for incoming traffic in MegaBytes per second. </param>
        /// <param name="megabytesPerSecondTransmitted"> Adapter throughput for outgoing traffic in MegaBytes per second. </param>
        /// <param name="netGigabytesTransmittedPerMonth"> Gigabytes transmitted through this adapter each month. </param>
        /// <param name="suitability"> Whether this adapter is suitable for Azure. </param>
        /// <param name="suitabilityExplanation"> If network adapter is suitable, this explains the reasons and mitigation steps. </param>
        /// <param name="suitabilityDetail"> If network adapter is not suitable for cloud, this explains the reasons. </param>
        internal AssessedNetworkAdapter(string macAddress, IReadOnlyList<string> ipAddresses, string displayName, double? monthlyBandwidthCosts, double? megabytesPerSecondReceived, double? megabytesPerSecondTransmitted, double? netGigabytesTransmittedPerMonth, CloudSuitability? suitability, AzureNetworkAdapterSuitabilityExplanation? suitabilityExplanation, AzureNetworkAdapterSuitabilityDetail? suitabilityDetail)
        {
            MacAddress = macAddress;
            IPAddresses = ipAddresses;
            DisplayName = displayName;
            MonthlyBandwidthCosts = monthlyBandwidthCosts;
            MegabytesPerSecondReceived = megabytesPerSecondReceived;
            MegabytesPerSecondTransmitted = megabytesPerSecondTransmitted;
            NetGigabytesTransmittedPerMonth = netGigabytesTransmittedPerMonth;
            Suitability = suitability;
            SuitabilityExplanation = suitabilityExplanation;
            SuitabilityDetail = suitabilityDetail;
        }

        /// <summary> MAC Address of the network adapter. </summary>
        public string MacAddress { get; }
        /// <summary> List of IP Addresses on the network adapter. </summary>
        public IReadOnlyList<string> IPAddresses { get; }
        /// <summary> User friendly name of the assessed network adapter. </summary>
        public string DisplayName { get; }
        /// <summary> Monthly cost estimate for network bandwidth used by this network adapter. </summary>
        public double? MonthlyBandwidthCosts { get; }
        /// <summary> Adapter throughput for incoming traffic in MegaBytes per second. </summary>
        public double? MegabytesPerSecondReceived { get; }
        /// <summary> Adapter throughput for outgoing traffic in MegaBytes per second. </summary>
        public double? MegabytesPerSecondTransmitted { get; }
        /// <summary> Gigabytes transmitted through this adapter each month. </summary>
        public double? NetGigabytesTransmittedPerMonth { get; }
        /// <summary> Whether this adapter is suitable for Azure. </summary>
        public CloudSuitability? Suitability { get; }
        /// <summary> If network adapter is suitable, this explains the reasons and mitigation steps. </summary>
        public AzureNetworkAdapterSuitabilityExplanation? SuitabilityExplanation { get; }
        /// <summary> If network adapter is not suitable for cloud, this explains the reasons. </summary>
        public AzureNetworkAdapterSuitabilityDetail? SuitabilityDetail { get; }
    }
}
