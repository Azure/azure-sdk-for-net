// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.ResourceManager.Migrate.Models
{
    /// <summary> Properties of an assessment. </summary>
    public partial class AssessmentProperties
    {
        /// <summary> Initializes a new instance of AssessmentProperties. </summary>
        /// <param name="azureLocation"> Target Azure location for which the machines should be assessed. These enums are the same as used by Compute API. </param>
        /// <param name="azureOfferCode"> Offer code according to which cost estimation is done. </param>
        /// <param name="azurePricingTier"> Pricing tier for Size evaluation. </param>
        /// <param name="azureStorageRedundancy"> Storage Redundancy type offered by Azure. </param>
        /// <param name="scalingFactor"> Scaling factor used over utilization data to add a performance buffer for new machines to be created in Azure. Min Value = 1.0, Max value = 1.9, Default = 1.3. </param>
        /// <param name="percentile"> Percentile of performance data used to recommend Azure size. </param>
        /// <param name="timeRange"> Time range of performance data used to recommend a size. </param>
        /// <param name="stage"> User configurable setting that describes the status of the assessment. </param>
        /// <param name="currency"> Currency to report prices in. </param>
        /// <param name="azureHybridUseBenefit"> AHUB discount on windows virtual machines. </param>
        /// <param name="discountPercentage"> Custom discount percentage to be applied on final costs. Can be in the range [0, 100]. </param>
        /// <param name="sizingCriterion"> Assessment sizing criterion. </param>
        /// <param name="reservedInstance"> Azure reserved instance. </param>
        /// <param name="azureVmFamilies"> List of azure VM families. </param>
        /// <param name="azureDiskType"> Storage type selected for this disk. </param>
        /// <param name="vmUptime"> Specify the duration for which the VMs are up in the on-premises environment. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="azureVmFamilies"/> or <paramref name="vmUptime"/> is null. </exception>
        public AssessmentProperties(AzureLocation azureLocation, AzureOfferCode azureOfferCode, AzurePricingTier azurePricingTier, AzureStorageRedundancy azureStorageRedundancy, double scalingFactor, Percentile percentile, TimeRange timeRange, AssessmentStage stage, Currency currency, AzureHybridUseBenefit azureHybridUseBenefit, double discountPercentage, AssessmentSizingCriterion sizingCriterion, ReservedInstance reservedInstance, IEnumerable<AzureVmFamily> azureVmFamilies, AzureDiskType azureDiskType, VmUptime vmUptime)
        {
            if (azureVmFamilies == null)
            {
                throw new ArgumentNullException(nameof(azureVmFamilies));
            }
            if (vmUptime == null)
            {
                throw new ArgumentNullException(nameof(vmUptime));
            }

            AzureLocation = azureLocation;
            AzureOfferCode = azureOfferCode;
            AzurePricingTier = azurePricingTier;
            AzureStorageRedundancy = azureStorageRedundancy;
            ScalingFactor = scalingFactor;
            Percentile = percentile;
            TimeRange = timeRange;
            Stage = stage;
            Currency = currency;
            AzureHybridUseBenefit = azureHybridUseBenefit;
            DiscountPercentage = discountPercentage;
            SizingCriterion = sizingCriterion;
            ReservedInstance = reservedInstance;
            AzureVmFamilies = azureVmFamilies.ToList();
            AzureDiskType = azureDiskType;
            VmUptime = vmUptime;
        }

        /// <summary> Initializes a new instance of AssessmentProperties. </summary>
        /// <param name="azureLocation"> Target Azure location for which the machines should be assessed. These enums are the same as used by Compute API. </param>
        /// <param name="azureOfferCode"> Offer code according to which cost estimation is done. </param>
        /// <param name="eaSubscriptionId"> Enterprise agreement subscription arm id. </param>
        /// <param name="azurePricingTier"> Pricing tier for Size evaluation. </param>
        /// <param name="azureStorageRedundancy"> Storage Redundancy type offered by Azure. </param>
        /// <param name="scalingFactor"> Scaling factor used over utilization data to add a performance buffer for new machines to be created in Azure. Min Value = 1.0, Max value = 1.9, Default = 1.3. </param>
        /// <param name="percentile"> Percentile of performance data used to recommend Azure size. </param>
        /// <param name="timeRange"> Time range of performance data used to recommend a size. </param>
        /// <param name="perfDataStartOn"> Start time to consider performance data for assessment. </param>
        /// <param name="perfDataEndOn"> End time to consider performance data for assessment. </param>
        /// <param name="stage"> User configurable setting that describes the status of the assessment. </param>
        /// <param name="currency"> Currency to report prices in. </param>
        /// <param name="azureHybridUseBenefit"> AHUB discount on windows virtual machines. </param>
        /// <param name="discountPercentage"> Custom discount percentage to be applied on final costs. Can be in the range [0, 100]. </param>
        /// <param name="confidenceRatingInPercentage"> Confidence rating percentage for assessment. Can be in the range [0, 100]. </param>
        /// <param name="sizingCriterion"> Assessment sizing criterion. </param>
        /// <param name="reservedInstance"> Azure reserved instance. </param>
        /// <param name="azureVmFamilies"> List of azure VM families. </param>
        /// <param name="azureDiskType"> Storage type selected for this disk. </param>
        /// <param name="vmUptime"> Specify the duration for which the VMs are up in the on-premises environment. </param>
        /// <param name="pricesTimestamp"> Time when the Azure Prices were queried. Date-Time represented in ISO-8601 format. </param>
        /// <param name="createdTimestamp"> Time when this project was created. Date-Time represented in ISO-8601 format. </param>
        /// <param name="updatedTimestamp"> Time when this project was last updated. Date-Time represented in ISO-8601 format. </param>
        /// <param name="monthlyComputeCost"> Monthly compute cost estimate for the machines that are part of this assessment as a group, for a 31-day month. </param>
        /// <param name="monthlyBandwidthCost"> Monthly network cost estimate for the machines that are part of this assessment as a group, for a 31-day month. </param>
        /// <param name="monthlyStorageCost"> Monthly storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month. </param>
        /// <param name="monthlyPremiumStorageCost"> Monthly premium storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month. </param>
        /// <param name="monthlyStandardSSDStorageCost"> Monthly standard SSD storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month. </param>
        /// <param name="status"> Whether the assessment has been created and is valid. </param>
        /// <param name="numberOfMachines"> Number of assessed machines part of this assessment. </param>
        internal AssessmentProperties(AzureLocation azureLocation, AzureOfferCode azureOfferCode, string eaSubscriptionId, AzurePricingTier azurePricingTier, AzureStorageRedundancy azureStorageRedundancy, double scalingFactor, Percentile percentile, TimeRange timeRange, DateTimeOffset? perfDataStartOn, DateTimeOffset? perfDataEndOn, AssessmentStage stage, Currency currency, AzureHybridUseBenefit azureHybridUseBenefit, double discountPercentage, double? confidenceRatingInPercentage, AssessmentSizingCriterion sizingCriterion, ReservedInstance reservedInstance, IList<AzureVmFamily> azureVmFamilies, AzureDiskType azureDiskType, VmUptime vmUptime, DateTimeOffset? pricesTimestamp, DateTimeOffset? createdTimestamp, DateTimeOffset? updatedTimestamp, double? monthlyComputeCost, double? monthlyBandwidthCost, double? monthlyStorageCost, double? monthlyPremiumStorageCost, double? monthlyStandardSSDStorageCost, AssessmentStatus? status, int? numberOfMachines)
        {
            AzureLocation = azureLocation;
            AzureOfferCode = azureOfferCode;
            EaSubscriptionId = eaSubscriptionId;
            AzurePricingTier = azurePricingTier;
            AzureStorageRedundancy = azureStorageRedundancy;
            ScalingFactor = scalingFactor;
            Percentile = percentile;
            TimeRange = timeRange;
            PerfDataStartOn = perfDataStartOn;
            PerfDataEndOn = perfDataEndOn;
            Stage = stage;
            Currency = currency;
            AzureHybridUseBenefit = azureHybridUseBenefit;
            DiscountPercentage = discountPercentage;
            ConfidenceRatingInPercentage = confidenceRatingInPercentage;
            SizingCriterion = sizingCriterion;
            ReservedInstance = reservedInstance;
            AzureVmFamilies = azureVmFamilies;
            AzureDiskType = azureDiskType;
            VmUptime = vmUptime;
            PricesTimestamp = pricesTimestamp;
            CreatedTimestamp = createdTimestamp;
            UpdatedTimestamp = updatedTimestamp;
            MonthlyComputeCost = monthlyComputeCost;
            MonthlyBandwidthCost = monthlyBandwidthCost;
            MonthlyStorageCost = monthlyStorageCost;
            MonthlyPremiumStorageCost = monthlyPremiumStorageCost;
            MonthlyStandardSSDStorageCost = monthlyStandardSSDStorageCost;
            Status = status;
            NumberOfMachines = numberOfMachines;
        }

        /// <summary> Target Azure location for which the machines should be assessed. These enums are the same as used by Compute API. </summary>
        public AzureLocation AzureLocation { get; set; }
        /// <summary> Offer code according to which cost estimation is done. </summary>
        public AzureOfferCode AzureOfferCode { get; set; }
        /// <summary> Enterprise agreement subscription arm id. </summary>
        public string EaSubscriptionId { get; }
        /// <summary> Pricing tier for Size evaluation. </summary>
        public AzurePricingTier AzurePricingTier { get; set; }
        /// <summary> Storage Redundancy type offered by Azure. </summary>
        public AzureStorageRedundancy AzureStorageRedundancy { get; set; }
        /// <summary> Scaling factor used over utilization data to add a performance buffer for new machines to be created in Azure. Min Value = 1.0, Max value = 1.9, Default = 1.3. </summary>
        public double ScalingFactor { get; set; }
        /// <summary> Percentile of performance data used to recommend Azure size. </summary>
        public Percentile Percentile { get; set; }
        /// <summary> Time range of performance data used to recommend a size. </summary>
        public TimeRange TimeRange { get; set; }
        /// <summary> Start time to consider performance data for assessment. </summary>
        public DateTimeOffset? PerfDataStartOn { get; }
        /// <summary> End time to consider performance data for assessment. </summary>
        public DateTimeOffset? PerfDataEndOn { get; }
        /// <summary> User configurable setting that describes the status of the assessment. </summary>
        public AssessmentStage Stage { get; set; }
        /// <summary> Currency to report prices in. </summary>
        public Currency Currency { get; set; }
        /// <summary> AHUB discount on windows virtual machines. </summary>
        public AzureHybridUseBenefit AzureHybridUseBenefit { get; set; }
        /// <summary> Custom discount percentage to be applied on final costs. Can be in the range [0, 100]. </summary>
        public double DiscountPercentage { get; set; }
        /// <summary> Confidence rating percentage for assessment. Can be in the range [0, 100]. </summary>
        public double? ConfidenceRatingInPercentage { get; }
        /// <summary> Assessment sizing criterion. </summary>
        public AssessmentSizingCriterion SizingCriterion { get; set; }
        /// <summary> Azure reserved instance. </summary>
        public ReservedInstance ReservedInstance { get; set; }
        /// <summary> List of azure VM families. </summary>
        public IList<AzureVmFamily> AzureVmFamilies { get; }
        /// <summary> Storage type selected for this disk. </summary>
        public AzureDiskType AzureDiskType { get; set; }
        /// <summary> Specify the duration for which the VMs are up in the on-premises environment. </summary>
        public VmUptime VmUptime { get; set; }
        /// <summary> Time when the Azure Prices were queried. Date-Time represented in ISO-8601 format. </summary>
        public DateTimeOffset? PricesTimestamp { get; }
        /// <summary> Time when this project was created. Date-Time represented in ISO-8601 format. </summary>
        public DateTimeOffset? CreatedTimestamp { get; }
        /// <summary> Time when this project was last updated. Date-Time represented in ISO-8601 format. </summary>
        public DateTimeOffset? UpdatedTimestamp { get; }
        /// <summary> Monthly compute cost estimate for the machines that are part of this assessment as a group, for a 31-day month. </summary>
        public double? MonthlyComputeCost { get; }
        /// <summary> Monthly network cost estimate for the machines that are part of this assessment as a group, for a 31-day month. </summary>
        public double? MonthlyBandwidthCost { get; }
        /// <summary> Monthly storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month. </summary>
        public double? MonthlyStorageCost { get; }
        /// <summary> Monthly premium storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month. </summary>
        public double? MonthlyPremiumStorageCost { get; }
        /// <summary> Monthly standard SSD storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month. </summary>
        public double? MonthlyStandardSSDStorageCost { get; }
        /// <summary> Whether the assessment has been created and is valid. </summary>
        public AssessmentStatus? Status { get; }
        /// <summary> Number of assessed machines part of this assessment. </summary>
        public int? NumberOfMachines { get; }
    }
}
