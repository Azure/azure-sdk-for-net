// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Migrate.Models
{
    /// <summary> Properties of a machine. </summary>
    public partial class MachineProperties
    {
        /// <summary> Initializes a new instance of MachineProperties. </summary>
        internal MachineProperties()
        {
            Groups = new ChangeTrackingList<string>();
            Disks = new ChangeTrackingDictionary<string, Disk>();
            NetworkAdapters = new ChangeTrackingDictionary<string, NetworkAdapter>();
        }

        /// <summary> Initializes a new instance of MachineProperties. </summary>
        /// <param name="bootType"> Boot type of the machine. </param>
        /// <param name="datacenterManagementServerArmId"> ARM ID of the data center as tracked by the Microsoft.OffAzure. </param>
        /// <param name="discoveryMachineArmId"> ARM ID of the machine as tracked by the Microsoft.OffAzure. </param>
        /// <param name="datacenterManagementServerName"> Name of the server hosting the datacenter management solution. </param>
        /// <param name="displayName"> User readable name of the machine as defined by the user in their private datacenter. </param>
        /// <param name="megabytesOfMemory"> Memory in Megabytes. </param>
        /// <param name="numberOfCores"> Processor count. </param>
        /// <param name="operatingSystemType"> Operating System type of the machine. </param>
        /// <param name="operatingSystemName"> Operating System name of the machine. </param>
        /// <param name="operatingSystemVersion"> Operating System version of the machine. </param>
        /// <param name="description"> Description of the machine. </param>
        /// <param name="groups"> List of references to the groups that the machine is member of. </param>
        /// <param name="createdTimestamp"> Time when this machine was created. Date-Time represented in ISO-8601 format. </param>
        /// <param name="updatedTimestamp"> Time when this machine was last updated. Date-Time represented in ISO-8601 format. </param>
        /// <param name="disks"> Dictionary of disks attached to the machine. Key is ID of disk. Value is a disk object. </param>
        /// <param name="networkAdapters"> Dictionary of network adapters attached to the machine. Key is ID of network adapter. Value is a network adapter object. </param>
        internal MachineProperties(MachineBootType? bootType, string datacenterManagementServerArmId, string discoveryMachineArmId, string datacenterManagementServerName, string displayName, float? megabytesOfMemory, int? numberOfCores, string operatingSystemType, string operatingSystemName, string operatingSystemVersion, string description, IReadOnlyList<string> groups, DateTimeOffset? createdTimestamp, DateTimeOffset? updatedTimestamp, IReadOnlyDictionary<string, Disk> disks, IReadOnlyDictionary<string, NetworkAdapter> networkAdapters)
        {
            BootType = bootType;
            DatacenterManagementServerArmId = datacenterManagementServerArmId;
            DiscoveryMachineArmId = discoveryMachineArmId;
            DatacenterManagementServerName = datacenterManagementServerName;
            DisplayName = displayName;
            MegabytesOfMemory = megabytesOfMemory;
            NumberOfCores = numberOfCores;
            OperatingSystemType = operatingSystemType;
            OperatingSystemName = operatingSystemName;
            OperatingSystemVersion = operatingSystemVersion;
            Description = description;
            Groups = groups;
            CreatedTimestamp = createdTimestamp;
            UpdatedTimestamp = updatedTimestamp;
            Disks = disks;
            NetworkAdapters = networkAdapters;
        }

        /// <summary> Boot type of the machine. </summary>
        public MachineBootType? BootType { get; }
        /// <summary> ARM ID of the data center as tracked by the Microsoft.OffAzure. </summary>
        public string DatacenterManagementServerArmId { get; }
        /// <summary> ARM ID of the machine as tracked by the Microsoft.OffAzure. </summary>
        public string DiscoveryMachineArmId { get; }
        /// <summary> Name of the server hosting the datacenter management solution. </summary>
        public string DatacenterManagementServerName { get; }
        /// <summary> User readable name of the machine as defined by the user in their private datacenter. </summary>
        public string DisplayName { get; }
        /// <summary> Memory in Megabytes. </summary>
        public float? MegabytesOfMemory { get; }
        /// <summary> Processor count. </summary>
        public int? NumberOfCores { get; }
        /// <summary> Operating System type of the machine. </summary>
        public string OperatingSystemType { get; }
        /// <summary> Operating System name of the machine. </summary>
        public string OperatingSystemName { get; }
        /// <summary> Operating System version of the machine. </summary>
        public string OperatingSystemVersion { get; }
        /// <summary> Description of the machine. </summary>
        public string Description { get; }
        /// <summary> List of references to the groups that the machine is member of. </summary>
        public IReadOnlyList<string> Groups { get; }
        /// <summary> Time when this machine was created. Date-Time represented in ISO-8601 format. </summary>
        public DateTimeOffset? CreatedTimestamp { get; }
        /// <summary> Time when this machine was last updated. Date-Time represented in ISO-8601 format. </summary>
        public DateTimeOffset? UpdatedTimestamp { get; }
        /// <summary> Dictionary of disks attached to the machine. Key is ID of disk. Value is a disk object. </summary>
        public IReadOnlyDictionary<string, Disk> Disks { get; }
        /// <summary> Dictionary of network adapters attached to the machine. Key is ID of network adapter. Value is a network adapter object. </summary>
        public IReadOnlyDictionary<string, NetworkAdapter> NetworkAdapters { get; }
    }
}
