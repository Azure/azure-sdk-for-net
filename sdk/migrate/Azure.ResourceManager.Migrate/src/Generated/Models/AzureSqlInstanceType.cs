// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Migrate.Models
{
    /// <summary> The AzureSqlInstanceType. </summary>
    public readonly partial struct AzureSqlInstanceType : IEquatable<AzureSqlInstanceType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="AzureSqlInstanceType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public AzureSqlInstanceType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string UnknownValue = "Unknown";
        private const string AutomaticValue = "Automatic";
        private const string SingleInstanceValue = "SingleInstance";
        private const string InstancePoolsValue = "InstancePools";

        /// <summary> Unknown. </summary>
        public static AzureSqlInstanceType Unknown { get; } = new AzureSqlInstanceType(UnknownValue);
        /// <summary> Automatic. </summary>
        public static AzureSqlInstanceType Automatic { get; } = new AzureSqlInstanceType(AutomaticValue);
        /// <summary> SingleInstance. </summary>
        public static AzureSqlInstanceType SingleInstance { get; } = new AzureSqlInstanceType(SingleInstanceValue);
        /// <summary> InstancePools. </summary>
        public static AzureSqlInstanceType InstancePools { get; } = new AzureSqlInstanceType(InstancePoolsValue);
        /// <summary> Determines if two <see cref="AzureSqlInstanceType"/> values are the same. </summary>
        public static bool operator ==(AzureSqlInstanceType left, AzureSqlInstanceType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="AzureSqlInstanceType"/> values are not the same. </summary>
        public static bool operator !=(AzureSqlInstanceType left, AzureSqlInstanceType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="AzureSqlInstanceType"/>. </summary>
        public static implicit operator AzureSqlInstanceType(string value) => new AzureSqlInstanceType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is AzureSqlInstanceType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(AzureSqlInstanceType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
