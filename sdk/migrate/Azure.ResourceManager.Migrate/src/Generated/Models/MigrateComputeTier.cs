// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Migrate.Models
{
    /// <summary> The MigrateComputeTier. </summary>
    public readonly partial struct MigrateComputeTier : IEquatable<MigrateComputeTier>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="MigrateComputeTier"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public MigrateComputeTier(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string UnknownValue = "Unknown";
        private const string AutomaticValue = "Automatic";
        private const string ProvisionedValue = "Provisioned";
        private const string ServerlessValue = "Serverless";

        /// <summary> Unknown. </summary>
        public static MigrateComputeTier Unknown { get; } = new MigrateComputeTier(UnknownValue);
        /// <summary> Automatic. </summary>
        public static MigrateComputeTier Automatic { get; } = new MigrateComputeTier(AutomaticValue);
        /// <summary> Provisioned. </summary>
        public static MigrateComputeTier Provisioned { get; } = new MigrateComputeTier(ProvisionedValue);
        /// <summary> Serverless. </summary>
        public static MigrateComputeTier Serverless { get; } = new MigrateComputeTier(ServerlessValue);
        /// <summary> Determines if two <see cref="MigrateComputeTier"/> values are the same. </summary>
        public static bool operator ==(MigrateComputeTier left, MigrateComputeTier right) => left.Equals(right);
        /// <summary> Determines if two <see cref="MigrateComputeTier"/> values are not the same. </summary>
        public static bool operator !=(MigrateComputeTier left, MigrateComputeTier right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="MigrateComputeTier"/>. </summary>
        public static implicit operator MigrateComputeTier(string value) => new MigrateComputeTier(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is MigrateComputeTier other && Equals(other);
        /// <inheritdoc />
        public bool Equals(MigrateComputeTier other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
