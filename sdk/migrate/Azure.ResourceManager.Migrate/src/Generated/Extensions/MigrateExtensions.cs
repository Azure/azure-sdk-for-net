// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.ResourceManager;
using Azure.ResourceManager.Migrate.Mocking;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.Migrate
{
    /// <summary> A class to add extension methods to Azure.ResourceManager.Migrate. </summary>
    public static partial class MigrateExtensions
    {
        private static MockableMigrateArmClient GetMockableMigrateArmClient(ArmClient client)
        {
            return client.GetCachedClient(client0 => new MockableMigrateArmClient(client0));
        }

        private static MockableMigrateResourceGroupResource GetMockableMigrateResourceGroupResource(ArmResource resource)
        {
            return resource.GetCachedClient(client => new MockableMigrateResourceGroupResource(client, resource.Id));
        }

        private static MockableMigrateSubscriptionResource GetMockableMigrateSubscriptionResource(ArmResource resource)
        {
            return resource.GetCachedClient(client => new MockableMigrateSubscriptionResource(client, resource.Id));
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrateAssessmentProjectResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrateAssessmentProjectResource.CreateResourceIdentifier" /> to create a <see cref="MigrateAssessmentProjectResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrateArmClient.GetMigrateAssessmentProjectResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrateAssessmentProjectResource"/> object. </returns>
        public static MigrateAssessmentProjectResource GetMigrateAssessmentProjectResource(this ArmClient client, ResourceIdentifier id)
        {
            if (client == null)
            {
                throw new ArgumentNullException(nameof(client));
            }

            return GetMockableMigrateArmClient(client).GetMigrateAssessmentProjectResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrateAssessmentOptionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrateAssessmentOptionResource.CreateResourceIdentifier" /> to create a <see cref="MigrateAssessmentOptionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrateArmClient.GetMigrateAssessmentOptionResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrateAssessmentOptionResource"/> object. </returns>
        public static MigrateAssessmentOptionResource GetMigrateAssessmentOptionResource(this ArmClient client, ResourceIdentifier id)
        {
            if (client == null)
            {
                throw new ArgumentNullException(nameof(client));
            }

            return GetMockableMigrateArmClient(client).GetMigrateAssessmentOptionResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrateAvsAssessmentOptionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrateAvsAssessmentOptionResource.CreateResourceIdentifier" /> to create a <see cref="MigrateAvsAssessmentOptionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrateArmClient.GetMigrateAvsAssessmentOptionResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrateAvsAssessmentOptionResource"/> object. </returns>
        public static MigrateAvsAssessmentOptionResource GetMigrateAvsAssessmentOptionResource(this ArmClient client, ResourceIdentifier id)
        {
            if (client == null)
            {
                throw new ArgumentNullException(nameof(client));
            }

            return GetMockableMigrateArmClient(client).GetMigrateAvsAssessmentOptionResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrateGroupResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrateGroupResource.CreateResourceIdentifier" /> to create a <see cref="MigrateGroupResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrateArmClient.GetMigrateGroupResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrateGroupResource"/> object. </returns>
        public static MigrateGroupResource GetMigrateGroupResource(this ArmClient client, ResourceIdentifier id)
        {
            if (client == null)
            {
                throw new ArgumentNullException(nameof(client));
            }

            return GetMockableMigrateArmClient(client).GetMigrateGroupResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrateAssessmentResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrateAssessmentResource.CreateResourceIdentifier" /> to create a <see cref="MigrateAssessmentResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrateArmClient.GetMigrateAssessmentResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrateAssessmentResource"/> object. </returns>
        public static MigrateAssessmentResource GetMigrateAssessmentResource(this ArmClient client, ResourceIdentifier id)
        {
            if (client == null)
            {
                throw new ArgumentNullException(nameof(client));
            }

            return GetMockableMigrateArmClient(client).GetMigrateAssessmentResource(id);
        }

        /// <summary>
        /// Gets an object representing an <see cref="AssessedMachineResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="AssessedMachineResource.CreateResourceIdentifier" /> to create an <see cref="AssessedMachineResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrateArmClient.GetAssessedMachineResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="AssessedMachineResource"/> object. </returns>
        public static AssessedMachineResource GetAssessedMachineResource(this ArmClient client, ResourceIdentifier id)
        {
            if (client == null)
            {
                throw new ArgumentNullException(nameof(client));
            }

            return GetMockableMigrateArmClient(client).GetAssessedMachineResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrateAvsAssessmentResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrateAvsAssessmentResource.CreateResourceIdentifier" /> to create a <see cref="MigrateAvsAssessmentResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrateArmClient.GetMigrateAvsAssessmentResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrateAvsAssessmentResource"/> object. </returns>
        public static MigrateAvsAssessmentResource GetMigrateAvsAssessmentResource(this ArmClient client, ResourceIdentifier id)
        {
            if (client == null)
            {
                throw new ArgumentNullException(nameof(client));
            }

            return GetMockableMigrateArmClient(client).GetMigrateAvsAssessmentResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrateAvsAssessedMachineResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrateAvsAssessedMachineResource.CreateResourceIdentifier" /> to create a <see cref="MigrateAvsAssessedMachineResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrateArmClient.GetMigrateAvsAssessedMachineResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrateAvsAssessedMachineResource"/> object. </returns>
        public static MigrateAvsAssessedMachineResource GetMigrateAvsAssessedMachineResource(this ArmClient client, ResourceIdentifier id)
        {
            if (client == null)
            {
                throw new ArgumentNullException(nameof(client));
            }

            return GetMockableMigrateArmClient(client).GetMigrateAvsAssessedMachineResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrateSqlAssessmentV2Resource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrateSqlAssessmentV2Resource.CreateResourceIdentifier" /> to create a <see cref="MigrateSqlAssessmentV2Resource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrateArmClient.GetMigrateSqlAssessmentV2Resource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrateSqlAssessmentV2Resource"/> object. </returns>
        public static MigrateSqlAssessmentV2Resource GetMigrateSqlAssessmentV2Resource(this ArmClient client, ResourceIdentifier id)
        {
            if (client == null)
            {
                throw new ArgumentNullException(nameof(client));
            }

            return GetMockableMigrateArmClient(client).GetMigrateSqlAssessmentV2Resource(id);
        }

        /// <summary>
        /// Gets an object representing an <see cref="AssessedSqlDatabaseV2Resource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="AssessedSqlDatabaseV2Resource.CreateResourceIdentifier" /> to create an <see cref="AssessedSqlDatabaseV2Resource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrateArmClient.GetAssessedSqlDatabaseV2Resource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="AssessedSqlDatabaseV2Resource"/> object. </returns>
        public static AssessedSqlDatabaseV2Resource GetAssessedSqlDatabaseV2Resource(this ArmClient client, ResourceIdentifier id)
        {
            if (client == null)
            {
                throw new ArgumentNullException(nameof(client));
            }

            return GetMockableMigrateArmClient(client).GetAssessedSqlDatabaseV2Resource(id);
        }

        /// <summary>
        /// Gets an object representing an <see cref="AssessedSqlInstanceV2Resource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="AssessedSqlInstanceV2Resource.CreateResourceIdentifier" /> to create an <see cref="AssessedSqlInstanceV2Resource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrateArmClient.GetAssessedSqlInstanceV2Resource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="AssessedSqlInstanceV2Resource"/> object. </returns>
        public static AssessedSqlInstanceV2Resource GetAssessedSqlInstanceV2Resource(this ArmClient client, ResourceIdentifier id)
        {
            if (client == null)
            {
                throw new ArgumentNullException(nameof(client));
            }

            return GetMockableMigrateArmClient(client).GetAssessedSqlInstanceV2Resource(id);
        }

        /// <summary>
        /// Gets an object representing an <see cref="AssessedSqlMachineResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="AssessedSqlMachineResource.CreateResourceIdentifier" /> to create an <see cref="AssessedSqlMachineResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrateArmClient.GetAssessedSqlMachineResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="AssessedSqlMachineResource"/> object. </returns>
        public static AssessedSqlMachineResource GetAssessedSqlMachineResource(this ArmClient client, ResourceIdentifier id)
        {
            if (client == null)
            {
                throw new ArgumentNullException(nameof(client));
            }

            return GetMockableMigrateArmClient(client).GetAssessedSqlMachineResource(id);
        }

        /// <summary>
        /// Gets an object representing an <see cref="AssessedSqlRecommendedEntityResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="AssessedSqlRecommendedEntityResource.CreateResourceIdentifier" /> to create an <see cref="AssessedSqlRecommendedEntityResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrateArmClient.GetAssessedSqlRecommendedEntityResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="AssessedSqlRecommendedEntityResource"/> object. </returns>
        public static AssessedSqlRecommendedEntityResource GetAssessedSqlRecommendedEntityResource(this ArmClient client, ResourceIdentifier id)
        {
            if (client == null)
            {
                throw new ArgumentNullException(nameof(client));
            }

            return GetMockableMigrateArmClient(client).GetAssessedSqlRecommendedEntityResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrateSqlAssessmentV2SummaryResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrateSqlAssessmentV2SummaryResource.CreateResourceIdentifier" /> to create a <see cref="MigrateSqlAssessmentV2SummaryResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrateArmClient.GetMigrateSqlAssessmentV2SummaryResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrateSqlAssessmentV2SummaryResource"/> object. </returns>
        public static MigrateSqlAssessmentV2SummaryResource GetMigrateSqlAssessmentV2SummaryResource(this ArmClient client, ResourceIdentifier id)
        {
            if (client == null)
            {
                throw new ArgumentNullException(nameof(client));
            }

            return GetMockableMigrateArmClient(client).GetMigrateSqlAssessmentV2SummaryResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrateHyperVCollectorResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrateHyperVCollectorResource.CreateResourceIdentifier" /> to create a <see cref="MigrateHyperVCollectorResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrateArmClient.GetMigrateHyperVCollectorResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrateHyperVCollectorResource"/> object. </returns>
        public static MigrateHyperVCollectorResource GetMigrateHyperVCollectorResource(this ArmClient client, ResourceIdentifier id)
        {
            if (client == null)
            {
                throw new ArgumentNullException(nameof(client));
            }

            return GetMockableMigrateArmClient(client).GetMigrateHyperVCollectorResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrateImportCollectorResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrateImportCollectorResource.CreateResourceIdentifier" /> to create a <see cref="MigrateImportCollectorResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrateArmClient.GetMigrateImportCollectorResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrateImportCollectorResource"/> object. </returns>
        public static MigrateImportCollectorResource GetMigrateImportCollectorResource(this ArmClient client, ResourceIdentifier id)
        {
            if (client == null)
            {
                throw new ArgumentNullException(nameof(client));
            }

            return GetMockableMigrateArmClient(client).GetMigrateImportCollectorResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrateMachineResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrateMachineResource.CreateResourceIdentifier" /> to create a <see cref="MigrateMachineResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrateArmClient.GetMigrateMachineResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrateMachineResource"/> object. </returns>
        public static MigrateMachineResource GetMigrateMachineResource(this ArmClient client, ResourceIdentifier id)
        {
            if (client == null)
            {
                throw new ArgumentNullException(nameof(client));
            }

            return GetMockableMigrateArmClient(client).GetMigrateMachineResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigratePrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigratePrivateEndpointConnectionResource.CreateResourceIdentifier" /> to create a <see cref="MigratePrivateEndpointConnectionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrateArmClient.GetMigratePrivateEndpointConnectionResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigratePrivateEndpointConnectionResource"/> object. </returns>
        public static MigratePrivateEndpointConnectionResource GetMigratePrivateEndpointConnectionResource(this ArmClient client, ResourceIdentifier id)
        {
            if (client == null)
            {
                throw new ArgumentNullException(nameof(client));
            }

            return GetMockableMigrateArmClient(client).GetMigratePrivateEndpointConnectionResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigratePrivateLinkResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigratePrivateLinkResource.CreateResourceIdentifier" /> to create a <see cref="MigratePrivateLinkResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrateArmClient.GetMigratePrivateLinkResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigratePrivateLinkResource"/> object. </returns>
        public static MigratePrivateLinkResource GetMigratePrivateLinkResource(this ArmClient client, ResourceIdentifier id)
        {
            if (client == null)
            {
                throw new ArgumentNullException(nameof(client));
            }

            return GetMockableMigrateArmClient(client).GetMigratePrivateLinkResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrateAssessmentProjectSummaryResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrateAssessmentProjectSummaryResource.CreateResourceIdentifier" /> to create a <see cref="MigrateAssessmentProjectSummaryResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrateArmClient.GetMigrateAssessmentProjectSummaryResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrateAssessmentProjectSummaryResource"/> object. </returns>
        public static MigrateAssessmentProjectSummaryResource GetMigrateAssessmentProjectSummaryResource(this ArmClient client, ResourceIdentifier id)
        {
            if (client == null)
            {
                throw new ArgumentNullException(nameof(client));
            }

            return GetMockableMigrateArmClient(client).GetMigrateAssessmentProjectSummaryResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrateServerCollectorResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrateServerCollectorResource.CreateResourceIdentifier" /> to create a <see cref="MigrateServerCollectorResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrateArmClient.GetMigrateServerCollectorResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrateServerCollectorResource"/> object. </returns>
        public static MigrateServerCollectorResource GetMigrateServerCollectorResource(this ArmClient client, ResourceIdentifier id)
        {
            if (client == null)
            {
                throw new ArgumentNullException(nameof(client));
            }

            return GetMockableMigrateArmClient(client).GetMigrateServerCollectorResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrateSqlAssessmentOptionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrateSqlAssessmentOptionResource.CreateResourceIdentifier" /> to create a <see cref="MigrateSqlAssessmentOptionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrateArmClient.GetMigrateSqlAssessmentOptionResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrateSqlAssessmentOptionResource"/> object. </returns>
        public static MigrateSqlAssessmentOptionResource GetMigrateSqlAssessmentOptionResource(this ArmClient client, ResourceIdentifier id)
        {
            if (client == null)
            {
                throw new ArgumentNullException(nameof(client));
            }

            return GetMockableMigrateArmClient(client).GetMigrateSqlAssessmentOptionResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrateSqlCollectorResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrateSqlCollectorResource.CreateResourceIdentifier" /> to create a <see cref="MigrateSqlCollectorResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrateArmClient.GetMigrateSqlCollectorResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrateSqlCollectorResource"/> object. </returns>
        public static MigrateSqlCollectorResource GetMigrateSqlCollectorResource(this ArmClient client, ResourceIdentifier id)
        {
            if (client == null)
            {
                throw new ArgumentNullException(nameof(client));
            }

            return GetMockableMigrateArmClient(client).GetMigrateSqlCollectorResource(id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MigrateVMwareCollectorResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigrateVMwareCollectorResource.CreateResourceIdentifier" /> to create a <see cref="MigrateVMwareCollectorResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrateArmClient.GetMigrateVMwareCollectorResource(ResourceIdentifier)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="client"/> is null. </exception>
        /// <returns> Returns a <see cref="MigrateVMwareCollectorResource"/> object. </returns>
        public static MigrateVMwareCollectorResource GetMigrateVMwareCollectorResource(this ArmClient client, ResourceIdentifier id)
        {
            if (client == null)
            {
                throw new ArgumentNullException(nameof(client));
            }

            return GetMockableMigrateArmClient(client).GetMigrateVMwareCollectorResource(id);
        }

        /// <summary>
        /// Gets a collection of MigrateAssessmentProjectResources in the ResourceGroupResource.
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrateResourceGroupResource.GetMigrateAssessmentProjects()"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupResource"/> is null. </exception>
        /// <returns> An object representing collection of MigrateAssessmentProjectResources and their operations over a MigrateAssessmentProjectResource. </returns>
        public static MigrateAssessmentProjectCollection GetMigrateAssessmentProjects(this ResourceGroupResource resourceGroupResource)
        {
            if (resourceGroupResource == null)
            {
                throw new ArgumentNullException(nameof(resourceGroupResource));
            }

            return GetMockableMigrateResourceGroupResource(resourceGroupResource).GetMigrateAssessmentProjects();
        }

        /// <summary>
        /// Get a AssessmentProject
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>AssessmentProjectsOperations_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2023-03-15</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="MigrateAssessmentProjectResource"/></description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrateResourceGroupResource.GetMigrateAssessmentProjectAsync(string,CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="projectName"> Assessment Project Name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupResource"/> or <paramref name="projectName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="projectName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public static async Task<Response<MigrateAssessmentProjectResource>> GetMigrateAssessmentProjectAsync(this ResourceGroupResource resourceGroupResource, string projectName, CancellationToken cancellationToken = default)
        {
            if (resourceGroupResource == null)
            {
                throw new ArgumentNullException(nameof(resourceGroupResource));
            }

            return await GetMockableMigrateResourceGroupResource(resourceGroupResource).GetMigrateAssessmentProjectAsync(projectName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Get a AssessmentProject
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>AssessmentProjectsOperations_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2023-03-15</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="MigrateAssessmentProjectResource"/></description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrateResourceGroupResource.GetMigrateAssessmentProject(string,CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="projectName"> Assessment Project Name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceGroupResource"/> or <paramref name="projectName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="projectName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public static Response<MigrateAssessmentProjectResource> GetMigrateAssessmentProject(this ResourceGroupResource resourceGroupResource, string projectName, CancellationToken cancellationToken = default)
        {
            if (resourceGroupResource == null)
            {
                throw new ArgumentNullException(nameof(resourceGroupResource));
            }

            return GetMockableMigrateResourceGroupResource(resourceGroupResource).GetMigrateAssessmentProject(projectName, cancellationToken);
        }

        /// <summary>
        /// List AssessmentProject resources by subscription ID
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.Migrate/assessmentProjects</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>AssessmentProjectsOperations_ListBySubscription</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2023-03-15</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="MigrateAssessmentProjectResource"/></description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrateSubscriptionResource.GetMigrateAssessmentProjects(CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionResource"/> is null. </exception>
        /// <returns> An async collection of <see cref="MigrateAssessmentProjectResource"/> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<MigrateAssessmentProjectResource> GetMigrateAssessmentProjectsAsync(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            if (subscriptionResource == null)
            {
                throw new ArgumentNullException(nameof(subscriptionResource));
            }

            return GetMockableMigrateSubscriptionResource(subscriptionResource).GetMigrateAssessmentProjectsAsync(cancellationToken);
        }

        /// <summary>
        /// List AssessmentProject resources by subscription ID
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/subscriptions/{subscriptionId}/providers/Microsoft.Migrate/assessmentProjects</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>AssessmentProjectsOperations_ListBySubscription</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2023-03-15</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="MigrateAssessmentProjectResource"/></description>
        /// </item>
        /// </list>
        /// <item>
        /// <term>Mocking</term>
        /// <description>To mock this method, please mock <see cref="MockableMigrateSubscriptionResource.GetMigrateAssessmentProjects(CancellationToken)"/> instead.</description>
        /// </item>
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionResource"/> is null. </exception>
        /// <returns> A collection of <see cref="MigrateAssessmentProjectResource"/> that may take multiple service requests to iterate over. </returns>
        public static Pageable<MigrateAssessmentProjectResource> GetMigrateAssessmentProjects(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            if (subscriptionResource == null)
            {
                throw new ArgumentNullException(nameof(subscriptionResource));
            }

            return GetMockableMigrateSubscriptionResource(subscriptionResource).GetMigrateAssessmentProjects(cancellationToken);
        }
    }
}
