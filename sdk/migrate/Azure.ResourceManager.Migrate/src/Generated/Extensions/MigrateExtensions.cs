// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.ResourceManager;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.Migrate
{
    /// <summary> A class to add extension methods to Azure.ResourceManager.Migrate. </summary>
    public static partial class MigrateExtensions
    {
        private static SubscriptionResourceExtensionClient GetExtensionClient(SubscriptionResource subscriptionResource)
        {
            return subscriptionResource.GetCachedClient((client) =>
            {
                return new SubscriptionResourceExtensionClient(client, subscriptionResource.Id);
            }
            );
        }

        /// <summary>
        /// Get all the projects in the subscription.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Migrate/assessmentProjects
        /// Operation Id: Projects_ListBySubscription
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="ProjectResource" /> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<ProjectResource> GetProjectsAsync(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetProjectsAsync(cancellationToken);
        }

        /// <summary>
        /// Get all the projects in the subscription.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Migrate/assessmentProjects
        /// Operation Id: Projects_ListBySubscription
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="ProjectResource" /> that may take multiple service requests to iterate over. </returns>
        public static Pageable<ProjectResource> GetProjects(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetProjects(cancellationToken);
        }

        private static ResourceGroupResourceExtensionClient GetExtensionClient(ResourceGroupResource resourceGroupResource)
        {
            return resourceGroupResource.GetCachedClient((client) =>
            {
                return new ResourceGroupResourceExtensionClient(client, resourceGroupResource.Id);
            }
            );
        }

        /// <summary> Gets a collection of ProjectResources in the ResourceGroupResource. </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <returns> An object representing collection of ProjectResources and their operations over a ProjectResource. </returns>
        public static ProjectCollection GetProjects(this ResourceGroupResource resourceGroupResource)
        {
            return GetExtensionClient(resourceGroupResource).GetProjects();
        }

        /// <summary>
        /// Get the project with the specified name.
        /// Request Path: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}
        /// Operation Id: Projects_Get
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="projectName"> Name of the Azure Migrate project. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="projectName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="projectName"/> is null. </exception>
        [ForwardsClientCalls]
        public static async Task<Response<ProjectResource>> GetProjectAsync(this ResourceGroupResource resourceGroupResource, string projectName, CancellationToken cancellationToken = default)
        {
            return await resourceGroupResource.GetProjects().GetAsync(projectName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Get the project with the specified name.
        /// Request Path: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}
        /// Operation Id: Projects_Get
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="projectName"> Name of the Azure Migrate project. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="projectName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="projectName"/> is null. </exception>
        [ForwardsClientCalls]
        public static Response<ProjectResource> GetProject(this ResourceGroupResource resourceGroupResource, string projectName, CancellationToken cancellationToken = default)
        {
            return resourceGroupResource.GetProjects().Get(projectName, cancellationToken);
        }

        #region ProjectResource
        /// <summary>
        /// Gets an object representing a <see cref="ProjectResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ProjectResource.CreateResourceIdentifier" /> to create a <see cref="ProjectResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ProjectResource" /> object. </returns>
        public static ProjectResource GetProjectResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ProjectResource.ValidateResourceId(id);
                return new ProjectResource(client, id);
            }
            );
        }
        #endregion

        #region MachineResource
        /// <summary>
        /// Gets an object representing a <see cref="MachineResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MachineResource.CreateResourceIdentifier" /> to create a <see cref="MachineResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="MachineResource" /> object. </returns>
        public static MachineResource GetMachineResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                MachineResource.ValidateResourceId(id);
                return new MachineResource(client, id);
            }
            );
        }
        #endregion

        #region GroupResource
        /// <summary>
        /// Gets an object representing a <see cref="GroupResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="GroupResource.CreateResourceIdentifier" /> to create a <see cref="GroupResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="GroupResource" /> object. </returns>
        public static GroupResource GetGroupResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                GroupResource.ValidateResourceId(id);
                return new GroupResource(client, id);
            }
            );
        }
        #endregion

        #region AssessmentResource
        /// <summary>
        /// Gets an object representing an <see cref="AssessmentResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="AssessmentResource.CreateResourceIdentifier" /> to create an <see cref="AssessmentResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AssessmentResource" /> object. </returns>
        public static AssessmentResource GetAssessmentResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                AssessmentResource.ValidateResourceId(id);
                return new AssessmentResource(client, id);
            }
            );
        }
        #endregion

        #region AssessedMachineResource
        /// <summary>
        /// Gets an object representing an <see cref="AssessedMachineResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="AssessedMachineResource.CreateResourceIdentifier" /> to create an <see cref="AssessedMachineResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AssessedMachineResource" /> object. </returns>
        public static AssessedMachineResource GetAssessedMachineResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                AssessedMachineResource.ValidateResourceId(id);
                return new AssessedMachineResource(client, id);
            }
            );
        }
        #endregion

        #region HyperVCollectorResource
        /// <summary>
        /// Gets an object representing a <see cref="HyperVCollectorResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="HyperVCollectorResource.CreateResourceIdentifier" /> to create a <see cref="HyperVCollectorResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="HyperVCollectorResource" /> object. </returns>
        public static HyperVCollectorResource GetHyperVCollectorResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                HyperVCollectorResource.ValidateResourceId(id);
                return new HyperVCollectorResource(client, id);
            }
            );
        }
        #endregion

        #region ServerCollectorResource
        /// <summary>
        /// Gets an object representing a <see cref="ServerCollectorResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ServerCollectorResource.CreateResourceIdentifier" /> to create a <see cref="ServerCollectorResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServerCollectorResource" /> object. </returns>
        public static ServerCollectorResource GetServerCollectorResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ServerCollectorResource.ValidateResourceId(id);
                return new ServerCollectorResource(client, id);
            }
            );
        }
        #endregion

        #region VMwareCollectorResource
        /// <summary>
        /// Gets an object representing a <see cref="VMwareCollectorResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="VMwareCollectorResource.CreateResourceIdentifier" /> to create a <see cref="VMwareCollectorResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="VMwareCollectorResource" /> object. </returns>
        public static VMwareCollectorResource GetVMwareCollectorResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                VMwareCollectorResource.ValidateResourceId(id);
                return new VMwareCollectorResource(client, id);
            }
            );
        }
        #endregion

        #region ImportCollectorResource
        /// <summary>
        /// Gets an object representing an <see cref="ImportCollectorResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ImportCollectorResource.CreateResourceIdentifier" /> to create an <see cref="ImportCollectorResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ImportCollectorResource" /> object. </returns>
        public static ImportCollectorResource GetImportCollectorResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                ImportCollectorResource.ValidateResourceId(id);
                return new ImportCollectorResource(client, id);
            }
            );
        }
        #endregion

        #region MigratePrivateEndpointConnectionResource
        /// <summary>
        /// Gets an object representing a <see cref="MigratePrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigratePrivateEndpointConnectionResource.CreateResourceIdentifier" /> to create a <see cref="MigratePrivateEndpointConnectionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="MigratePrivateEndpointConnectionResource" /> object. </returns>
        public static MigratePrivateEndpointConnectionResource GetMigratePrivateEndpointConnectionResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                MigratePrivateEndpointConnectionResource.ValidateResourceId(id);
                return new MigratePrivateEndpointConnectionResource(client, id);
            }
            );
        }
        #endregion

        #region MigratePrivateLinkResource
        /// <summary>
        /// Gets an object representing a <see cref="MigratePrivateLinkResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MigratePrivateLinkResource.CreateResourceIdentifier" /> to create a <see cref="MigratePrivateLinkResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="MigratePrivateLinkResource" /> object. </returns>
        public static MigratePrivateLinkResource GetMigratePrivateLinkResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                MigratePrivateLinkResource.ValidateResourceId(id);
                return new MigratePrivateLinkResource(client, id);
            }
            );
        }
        #endregion
    }
}
