// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.Migrate;
using Azure.ResourceManager.Migrate.Models;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.Migrate.Samples
{
    public partial class Sample_MigrateAssessmentProjectResource
    {
        // AssessmentProjectsOperations_ListBySubscription_MaximumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetMigrateAssessmentProjects_AssessmentProjectsOperationsListBySubscriptionMaximumSetGen()
        {
            // Generated from example definition: specification/migrate/resource-manager/Microsoft.Migrate/AssessmentProjects/stable/2023-03-15/examples/AssessmentProjectsOperations_ListBySubscription_MaximumSet_Gen.json
            // this example is just showing the usage of "AssessmentProjectsOperations_ListBySubscription" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "4bd2aa0f-2bd2-4d67-91a8-5a4533d58600";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation and iterate over the result
            await foreach (MigrateAssessmentProjectResource item in subscriptionResource.GetMigrateAssessmentProjectsAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                MigrateAssessmentProjectData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine($"Succeeded");
        }

        // AssessmentProjectsOperations_Get_MaximumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_AssessmentProjectsOperationsGetMaximumSetGen()
        {
            // Generated from example definition: specification/migrate/resource-manager/Microsoft.Migrate/AssessmentProjects/stable/2023-03-15/examples/AssessmentProjectsOperations_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "AssessmentProjectsOperations_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this MigrateAssessmentProjectResource created on azure
            // for more information of creating MigrateAssessmentProjectResource, please refer to the document of MigrateAssessmentProjectResource
            string subscriptionId = "4bd2aa0f-2bd2-4d67-91a8-5a4533d58600";
            string resourceGroupName = "sakanwar";
            string projectName = "sakanwar1204project";
            ResourceIdentifier migrateAssessmentProjectResourceId = MigrateAssessmentProjectResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName);
            MigrateAssessmentProjectResource migrateAssessmentProject = client.GetMigrateAssessmentProjectResource(migrateAssessmentProjectResourceId);

            // invoke the operation
            MigrateAssessmentProjectResource result = await migrateAssessmentProject.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            MigrateAssessmentProjectData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // AssessmentProjectsOperations_Update_MaximumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_AssessmentProjectsOperationsUpdateMaximumSetGen()
        {
            // Generated from example definition: specification/migrate/resource-manager/Microsoft.Migrate/AssessmentProjects/stable/2023-03-15/examples/AssessmentProjectsOperations_Update_MaximumSet_Gen.json
            // this example is just showing the usage of "AssessmentProjectsOperations_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this MigrateAssessmentProjectResource created on azure
            // for more information of creating MigrateAssessmentProjectResource, please refer to the document of MigrateAssessmentProjectResource
            string subscriptionId = "4bd2aa0f-2bd2-4d67-91a8-5a4533d58600";
            string resourceGroupName = "sakanwar";
            string projectName = "sakanwar1204project";
            ResourceIdentifier migrateAssessmentProjectResourceId = MigrateAssessmentProjectResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName);
            MigrateAssessmentProjectResource migrateAssessmentProject = client.GetMigrateAssessmentProjectResource(migrateAssessmentProjectResourceId);

            // invoke the operation
            MigrateAssessmentProjectPatch patch = new MigrateAssessmentProjectPatch()
            {
                Tags =
{
["Migrate Project"] = "sakanwar-PE-SEA",
},
                AssessmentSolutionId = "/subscriptions/4bd2aa0f-2bd2-4d67-91a8-5a4533d58600/resourceGroups/sakanwar/providers/Microsoft.Storage/storageAccounts/sakanwar1204usa",
                ProjectStatus = AssessmentProjectStatus.Active,
                CustomerWorkspaceId = null,
                CustomerWorkspaceLocation = null,
                PublicNetworkAccess = "Disabled",
                CustomerStorageAccountArmId = new ResourceIdentifier("/subscriptions/4bd2aa0f-2bd2-4d67-91a8-5a4533d58600/resourceGroups/sakanwar/providers/Microsoft.Storage/storageAccounts/sakanwar1204usa"),
                ProvisioningState = MigrateProvisioningState.Succeeded,
            };
            ArmOperation<MigrateAssessmentProjectResource> lro = await migrateAssessmentProject.UpdateAsync(WaitUntil.Completed, patch);
            MigrateAssessmentProjectResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            MigrateAssessmentProjectData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // AssessmentProjectsOperations_Delete_MaximumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_AssessmentProjectsOperationsDeleteMaximumSetGen()
        {
            // Generated from example definition: specification/migrate/resource-manager/Microsoft.Migrate/AssessmentProjects/stable/2023-03-15/examples/AssessmentProjectsOperations_Delete_MaximumSet_Gen.json
            // this example is just showing the usage of "AssessmentProjectsOperations_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this MigrateAssessmentProjectResource created on azure
            // for more information of creating MigrateAssessmentProjectResource, please refer to the document of MigrateAssessmentProjectResource
            string subscriptionId = "A926B99C-7F4C-4556-871E-20CB8C6ADB56";
            string resourceGroupName = "rgmigrate";
            string projectName = "zqrsyncwahgydqvwuchkfd";
            ResourceIdentifier migrateAssessmentProjectResourceId = MigrateAssessmentProjectResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName);
            MigrateAssessmentProjectResource migrateAssessmentProject = client.GetMigrateAssessmentProjectResource(migrateAssessmentProjectResourceId);

            // invoke the operation
            await migrateAssessmentProject.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }
    }
}
