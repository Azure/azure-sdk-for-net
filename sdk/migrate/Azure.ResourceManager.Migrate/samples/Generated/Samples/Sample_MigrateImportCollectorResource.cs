// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.Migrate;
using Azure.ResourceManager.Migrate.Models;

namespace Azure.ResourceManager.Migrate.Samples
{
    public partial class Sample_MigrateImportCollectorResource
    {
        // ImportCollectorsOperations_Get_MaximumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_ImportCollectorsOperationsGetMaximumSetGen()
        {
            // Generated from example definition: specification/migrate/resource-manager/Microsoft.Migrate/AssessmentProjects/stable/2023-03-15/examples/ImportCollectorsOperations_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "ImportCollectorsOperations_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this MigrateImportCollectorResource created on azure
            // for more information of creating MigrateImportCollectorResource, please refer to the document of MigrateImportCollectorResource
            string subscriptionId = "4bd2aa0f-2bd2-4d67-91a8-5a4533d58600";
            string resourceGroupName = "ayagrawRG";
            string projectName = "app18700project";
            string importCollectorName = "importCollectore7d5";
            ResourceIdentifier migrateImportCollectorResourceId = MigrateImportCollectorResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName, importCollectorName);
            MigrateImportCollectorResource migrateImportCollector = client.GetMigrateImportCollectorResource(migrateImportCollectorResourceId);

            // invoke the operation
            MigrateImportCollectorResource result = await migrateImportCollector.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            MigrateImportCollectorData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // ImportCollectorsOperations_Create_MaximumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_ImportCollectorsOperationsCreateMaximumSetGen()
        {
            // Generated from example definition: specification/migrate/resource-manager/Microsoft.Migrate/AssessmentProjects/stable/2023-03-15/examples/ImportCollectorsOperations_Create_MaximumSet_Gen.json
            // this example is just showing the usage of "ImportCollectorsOperations_Create" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this MigrateImportCollectorResource created on azure
            // for more information of creating MigrateImportCollectorResource, please refer to the document of MigrateImportCollectorResource
            string subscriptionId = "4bd2aa0f-2bd2-4d67-91a8-5a4533d58600";
            string resourceGroupName = "ayagrawRG";
            string projectName = "app18700project";
            string importCollectorName = "importCollectore7d5";
            ResourceIdentifier migrateImportCollectorResourceId = MigrateImportCollectorResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName, importCollectorName);
            MigrateImportCollectorResource migrateImportCollector = client.GetMigrateImportCollectorResource(migrateImportCollectorResourceId);

            // invoke the operation
            MigrateImportCollectorData data = new MigrateImportCollectorData()
            {
                ProvisioningState = MigrateProvisioningState.Succeeded,
                DiscoverySiteId = "/subscriptions/4bd2aa0f-2bd2-4d67-91a8-5a4533d58600/resourcegroups/ayagrawRG/providers/microsoft.offazure/importsites/actualSEA37d4importSite",
            };
            ArmOperation<MigrateImportCollectorResource> lro = await migrateImportCollector.UpdateAsync(WaitUntil.Completed, data);
            MigrateImportCollectorResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            MigrateImportCollectorData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // ImportCollectorsOperations_Delete_MaximumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_ImportCollectorsOperationsDeleteMaximumSetGen()
        {
            // Generated from example definition: specification/migrate/resource-manager/Microsoft.Migrate/AssessmentProjects/stable/2023-03-15/examples/ImportCollectorsOperations_Delete_MaximumSet_Gen.json
            // this example is just showing the usage of "ImportCollectorsOperations_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this MigrateImportCollectorResource created on azure
            // for more information of creating MigrateImportCollectorResource, please refer to the document of MigrateImportCollectorResource
            string subscriptionId = "4bd2aa0f-2bd2-4d67-91a8-5a4533d58600";
            string resourceGroupName = "ayagrawRG";
            string projectName = "app18700project";
            string importCollectorName = "importCollectore7d5";
            ResourceIdentifier migrateImportCollectorResourceId = MigrateImportCollectorResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName, importCollectorName);
            MigrateImportCollectorResource migrateImportCollector = client.GetMigrateImportCollectorResource(migrateImportCollectorResourceId);

            // invoke the operation
            await migrateImportCollector.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }
    }
}
