// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.Migrate;
using Azure.ResourceManager.Migrate.Models;

namespace Azure.ResourceManager.Migrate.Samples
{
    public partial class Sample_MigratePrivateEndpointConnectionResource
    {
        // PrivateEndpointConnectionOperations_Get_MaximumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_PrivateEndpointConnectionOperationsGetMaximumSetGen()
        {
            // Generated from example definition: specification/migrate/resource-manager/Microsoft.Migrate/AssessmentProjects/stable/2023-03-15/examples/PrivateEndpointConnectionOperations_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "PrivateEndpointConnectionOperations_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this MigratePrivateEndpointConnectionResource created on azure
            // for more information of creating MigratePrivateEndpointConnectionResource, please refer to the document of MigratePrivateEndpointConnectionResource
            string subscriptionId = "4bd2aa0f-2bd2-4d67-91a8-5a4533d58600";
            string resourceGroupName = "sakanwar";
            string projectName = "sakanwar1204project";
            string privateEndpointConnectionName = "sakanwar1204project1634pe.bf42f8a1-09f5-4ee4-aea6-a019cc60f9d7";
            ResourceIdentifier migratePrivateEndpointConnectionResourceId = MigratePrivateEndpointConnectionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName, privateEndpointConnectionName);
            MigratePrivateEndpointConnectionResource migratePrivateEndpointConnection = client.GetMigratePrivateEndpointConnectionResource(migratePrivateEndpointConnectionResourceId);

            // invoke the operation
            MigratePrivateEndpointConnectionResource result = await migratePrivateEndpointConnection.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            MigratePrivateEndpointConnectionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // PrivateEndpointConnectionOperations_Update_MaximumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_PrivateEndpointConnectionOperationsUpdateMaximumSetGen()
        {
            // Generated from example definition: specification/migrate/resource-manager/Microsoft.Migrate/AssessmentProjects/stable/2023-03-15/examples/PrivateEndpointConnectionOperations_Update_MaximumSet_Gen.json
            // this example is just showing the usage of "PrivateEndpointConnectionOperations_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this MigratePrivateEndpointConnectionResource created on azure
            // for more information of creating MigratePrivateEndpointConnectionResource, please refer to the document of MigratePrivateEndpointConnectionResource
            string subscriptionId = "4bd2aa0f-2bd2-4d67-91a8-5a4533d58600";
            string resourceGroupName = "sakanwar";
            string projectName = "sakanwar1204project";
            string privateEndpointConnectionName = "sakanwar1204project1634pe.bf42f8a1-09f5-4ee4-aea6-a019cc60f9d7";
            ResourceIdentifier migratePrivateEndpointConnectionResourceId = MigratePrivateEndpointConnectionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName, privateEndpointConnectionName);
            MigratePrivateEndpointConnectionResource migratePrivateEndpointConnection = client.GetMigratePrivateEndpointConnectionResource(migratePrivateEndpointConnectionResourceId);

            // invoke the operation
            MigratePrivateEndpointConnectionData data = new MigratePrivateEndpointConnectionData()
            {
                ConnectionState = new MigratePrivateLinkServiceConnectionState()
                {
                    Status = MigratePrivateEndpointServiceConnectionStatus.Approved,
                    Description = null,
                    ActionsRequired = "",
                },
            };
            ArmOperation<MigratePrivateEndpointConnectionResource> lro = await migratePrivateEndpointConnection.UpdateAsync(WaitUntil.Completed, data);
            MigratePrivateEndpointConnectionResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            MigratePrivateEndpointConnectionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // PrivateEndpointConnectionOperations_Delete_MaximumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_PrivateEndpointConnectionOperationsDeleteMaximumSetGen()
        {
            // Generated from example definition: specification/migrate/resource-manager/Microsoft.Migrate/AssessmentProjects/stable/2023-03-15/examples/PrivateEndpointConnectionOperations_Delete_MaximumSet_Gen.json
            // this example is just showing the usage of "PrivateEndpointConnectionOperations_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this MigratePrivateEndpointConnectionResource created on azure
            // for more information of creating MigratePrivateEndpointConnectionResource, please refer to the document of MigratePrivateEndpointConnectionResource
            string subscriptionId = "4bd2aa0f-2bd2-4d67-91a8-5a4533d58600";
            string resourceGroupName = "sakanwar";
            string projectName = "sakanwar1204project";
            string privateEndpointConnectionName = "sakanwar1204project1634pe.bf42f8a1-09f5-4ee4-aea6-a019cc60f9d7";
            ResourceIdentifier migratePrivateEndpointConnectionResourceId = MigratePrivateEndpointConnectionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName, privateEndpointConnectionName);
            MigratePrivateEndpointConnectionResource migratePrivateEndpointConnection = client.GetMigratePrivateEndpointConnectionResource(migratePrivateEndpointConnectionResourceId);

            // invoke the operation
            await migratePrivateEndpointConnection.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }
    }
}
