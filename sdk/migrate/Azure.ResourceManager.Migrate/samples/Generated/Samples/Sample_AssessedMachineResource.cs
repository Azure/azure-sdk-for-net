// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.Migrate;

namespace Azure.ResourceManager.Migrate.Samples
{
    public partial class Sample_AssessedMachineResource
    {
        // AssessedMachinesOperations_Get_MaximumSet_Gen
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_AssessedMachinesOperationsGetMaximumSetGen()
        {
            // Generated from example definition: specification/migrate/resource-manager/Microsoft.Migrate/AssessmentProjects/stable/2023-03-15/examples/AssessedMachinesOperations_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "AssessedMachinesOperations_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this AssessedMachineResource created on azure
            // for more information of creating AssessedMachineResource, please refer to the document of AssessedMachineResource
            string subscriptionId = "D8E1C413-E65F-40C0-8A7E-743D6B7A6AE9";
            string resourceGroupName = "rgopenapi";
            string projectName = "pavqtntysjn";
            string groupName = "smawqdmhfngray";
            string assessmentName = "qjlumxyqsitd";
            string assessedMachineName = "oqxjeheiipjmuo";
            ResourceIdentifier assessedMachineResourceId = AssessedMachineResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, projectName, groupName, assessmentName, assessedMachineName);
            AssessedMachineResource assessedMachine = client.GetAssessedMachineResource(assessedMachineResourceId);

            // invoke the operation
            AssessedMachineResource result = await assessedMachine.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            AssessedMachineData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
