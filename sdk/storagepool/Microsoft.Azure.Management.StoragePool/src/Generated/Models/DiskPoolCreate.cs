// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.StoragePool.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Request payload for create or update Disk Pool request.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class DiskPoolCreate : IResource
    {
        /// <summary>
        /// Initializes a new instance of the DiskPoolCreate class.
        /// </summary>
        public DiskPoolCreate()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DiskPoolCreate class.
        /// </summary>
        /// <param name="sku">Determines the SKU of the Disk Pool</param>
        /// <param name="subnetId">Azure Resource ID of a Subnet for the Disk
        /// Pool.</param>
        /// <param name="location">The geo-location where the resource
        /// lives.</param>
        /// <param name="availabilityZones">Logical zone for Disk Pool
        /// resource; example: ["1"].</param>
        /// <param name="disks">List of Azure Managed Disks to attach to a Disk
        /// Pool.</param>
        /// <param name="additionalCapabilities">List of additional
        /// capabilities for a Disk Pool.</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="id">Fully qualified resource Id for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. Ex-
        /// Microsoft.Compute/virtualMachines or
        /// Microsoft.Storage/storageAccounts.</param>
        public DiskPoolCreate(Sku sku, string subnetId, string location, IList<string> availabilityZones = default(IList<string>), IList<Disk> disks = default(IList<Disk>), IList<string> additionalCapabilities = default(IList<string>), IDictionary<string, string> tags = default(IDictionary<string, string>), string id = default(string), string name = default(string), string type = default(string))
        {
            Sku = sku;
            AvailabilityZones = availabilityZones;
            Disks = disks;
            SubnetId = subnetId;
            AdditionalCapabilities = additionalCapabilities;
            Tags = tags;
            Location = location;
            Id = id;
            Name = name;
            Type = type;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets determines the SKU of the Disk Pool
        /// </summary>
        [JsonProperty(PropertyName = "sku")]
        public Sku Sku { get; set; }

        /// <summary>
        /// Gets or sets logical zone for Disk Pool resource; example: ["1"].
        /// </summary>
        [JsonProperty(PropertyName = "properties.availabilityZones")]
        public IList<string> AvailabilityZones { get; set; }

        /// <summary>
        /// Gets or sets list of Azure Managed Disks to attach to a Disk Pool.
        /// </summary>
        [JsonProperty(PropertyName = "properties.disks")]
        public IList<Disk> Disks { get; set; }

        /// <summary>
        /// Gets or sets azure Resource ID of a Subnet for the Disk Pool.
        /// </summary>
        [JsonProperty(PropertyName = "properties.subnetId")]
        public string SubnetId { get; set; }

        /// <summary>
        /// Gets or sets list of additional capabilities for a Disk Pool.
        /// </summary>
        [JsonProperty(PropertyName = "properties.additionalCapabilities")]
        public IList<string> AdditionalCapabilities { get; set; }

        /// <summary>
        /// Gets or sets resource tags.
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

        /// <summary>
        /// Gets or sets the geo-location where the resource lives.
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public string Location { get; set; }

        /// <summary>
        /// Gets fully qualified resource Id for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets the name of the resource
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets the type of the resource. Ex-
        /// Microsoft.Compute/virtualMachines or
        /// Microsoft.Storage/storageAccounts.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

    }
}
