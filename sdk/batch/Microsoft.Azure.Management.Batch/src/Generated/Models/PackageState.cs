// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Batch.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for PackageState.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum PackageState
    {
        /// <summary>
        /// The application package has been created but has not yet been
        /// activated.
        /// </summary>
        [EnumMember(Value = "Pending")]
        Pending,
        /// <summary>
        /// The application package is ready for use.
        /// </summary>
        [EnumMember(Value = "Active")]
        Active
    }
    internal static class PackageStateEnumExtension
    {
        internal static string ToSerializedValue(this PackageState? value)
        {
            return value == null ? null : ((PackageState)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this PackageState value)
        {
            switch( value )
            {
                case PackageState.Pending:
                    return "Pending";
                case PackageState.Active:
                    return "Active";
            }
            return null;
        }

        internal static PackageState? ParsePackageState(this string value)
        {
            switch( value )
            {
                case "Pending":
                    return PackageState.Pending;
                case "Active":
                    return PackageState.Active;
            }
            return null;
        }
    }
}
