// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Batch.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The container settings for a task.
    /// </summary>
    public partial class TaskContainerSettings
    {
        /// <summary>
        /// Initializes a new instance of the TaskContainerSettings class.
        /// </summary>
        public TaskContainerSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TaskContainerSettings class.
        /// </summary>
        /// <param name="imageName">The image to use to create the container in
        /// which the task will run.</param>
        /// <param name="containerRunOptions">Additional options to the
        /// container create command.</param>
        /// <param name="registry">The private registry which contains the
        /// container image.</param>
        public TaskContainerSettings(string imageName, string containerRunOptions = default(string), ContainerRegistry registry = default(ContainerRegistry))
        {
            ContainerRunOptions = containerRunOptions;
            ImageName = imageName;
            Registry = registry;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets additional options to the container create command.
        /// </summary>
        /// <remarks>
        /// These additional options are supplied as arguments to the "docker
        /// create" command, in addition to those controlled by the Batch
        /// Service.
        /// </remarks>
        [JsonProperty(PropertyName = "containerRunOptions")]
        public string ContainerRunOptions { get; set; }

        /// <summary>
        /// Gets or sets the image to use to create the container in which the
        /// task will run.
        /// </summary>
        /// <remarks>
        /// This is the full image reference, as would be specified to "docker
        /// pull". If no tag is provided as part of the image name, the tag
        /// ":latest" is used as a default.
        /// </remarks>
        [JsonProperty(PropertyName = "imageName")]
        public string ImageName { get; set; }

        /// <summary>
        /// Gets or sets the private registry which contains the container
        /// image.
        /// </summary>
        /// <remarks>
        /// This setting can be omitted if was already provided at pool
        /// creation.
        /// </remarks>
        [JsonProperty(PropertyName = "registry")]
        public ContainerRegistry Registry { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ImageName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ImageName");
            }
            if (Registry != null)
            {
                Registry.Validate();
            }
        }
    }
}
