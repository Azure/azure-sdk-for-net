// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Batch.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Network access profile for Batch endpoint.
    /// </summary>
    public partial class EndpointAccessProfile
    {
        /// <summary>
        /// Initializes a new instance of the EndpointAccessProfile class.
        /// </summary>
        public EndpointAccessProfile()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EndpointAccessProfile class.
        /// </summary>
        /// <param name="defaultAction">The default action when there is no
        /// IPRule matched.</param>
        /// <param name="ipRules">Array of IP ranges to filter client IP
        /// address.</param>
        public EndpointAccessProfile(EndpointAccessDefaultAction defaultAction, IList<IPRule> ipRules = default(IList<IPRule>))
        {
            DefaultAction = defaultAction;
            IpRules = ipRules;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the default action when there is no IPRule matched.
        /// </summary>
        /// <remarks>
        /// Default action for endpoint access. It is only applicable when
        /// publicNetworkAccess is enabled. Possible values include: 'Allow',
        /// 'Deny'
        /// </remarks>
        [JsonProperty(PropertyName = "defaultAction")]
        public EndpointAccessDefaultAction DefaultAction { get; set; }

        /// <summary>
        /// Gets or sets array of IP ranges to filter client IP address.
        /// </summary>
        [JsonProperty(PropertyName = "ipRules")]
        public IList<IPRule> IpRules { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (IpRules != null)
            {
                foreach (var element in IpRules)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
