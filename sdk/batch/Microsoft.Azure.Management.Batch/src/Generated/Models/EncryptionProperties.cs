// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Batch.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Configures how customer data is encrypted inside the Batch account. By
    /// default, accounts are encrypted using a Microsoft managed key. For
    /// additional control, a customer-managed key can be used instead.
    /// </summary>
    public partial class EncryptionProperties
    {
        /// <summary>
        /// Initializes a new instance of the EncryptionProperties class.
        /// </summary>
        public EncryptionProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EncryptionProperties class.
        /// </summary>
        /// <param name="keySource">Type of the key source. Possible values
        /// include: 'Microsoft.Batch', 'Microsoft.KeyVault'</param>
        /// <param name="keyVaultProperties">Additional details when using
        /// Microsoft.KeyVault</param>
        public EncryptionProperties(KeySource? keySource = default(KeySource?), KeyVaultProperties keyVaultProperties = default(KeyVaultProperties))
        {
            KeySource = keySource;
            KeyVaultProperties = keyVaultProperties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets type of the key source. Possible values include:
        /// 'Microsoft.Batch', 'Microsoft.KeyVault'
        /// </summary>
        [JsonProperty(PropertyName = "keySource")]
        public KeySource? KeySource { get; set; }

        /// <summary>
        /// Gets or sets additional details when using Microsoft.KeyVault
        /// </summary>
        [JsonProperty(PropertyName = "keyVaultProperties")]
        public KeyVaultProperties KeyVaultProperties { get; set; }

    }
}
