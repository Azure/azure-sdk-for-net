// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.Batch.Models
{
    internal static partial class BatchPrivateEndpointConnectionProvisioningStateExtensions
    {
        public static string ToSerialString(this BatchPrivateEndpointConnectionProvisioningState value) => value switch
        {
            BatchPrivateEndpointConnectionProvisioningState.Creating => "Creating",
            BatchPrivateEndpointConnectionProvisioningState.Updating => "Updating",
            BatchPrivateEndpointConnectionProvisioningState.Deleting => "Deleting",
            BatchPrivateEndpointConnectionProvisioningState.Succeeded => "Succeeded",
            BatchPrivateEndpointConnectionProvisioningState.Failed => "Failed",
            BatchPrivateEndpointConnectionProvisioningState.Cancelled => "Cancelled",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown BatchPrivateEndpointConnectionProvisioningState value.")
        };

        public static BatchPrivateEndpointConnectionProvisioningState ToBatchPrivateEndpointConnectionProvisioningState(this string value)
        {
            if (string.Equals(value, "Creating", StringComparison.InvariantCultureIgnoreCase)) return BatchPrivateEndpointConnectionProvisioningState.Creating;
            if (string.Equals(value, "Updating", StringComparison.InvariantCultureIgnoreCase)) return BatchPrivateEndpointConnectionProvisioningState.Updating;
            if (string.Equals(value, "Deleting", StringComparison.InvariantCultureIgnoreCase)) return BatchPrivateEndpointConnectionProvisioningState.Deleting;
            if (string.Equals(value, "Succeeded", StringComparison.InvariantCultureIgnoreCase)) return BatchPrivateEndpointConnectionProvisioningState.Succeeded;
            if (string.Equals(value, "Failed", StringComparison.InvariantCultureIgnoreCase)) return BatchPrivateEndpointConnectionProvisioningState.Failed;
            if (string.Equals(value, "Cancelled", StringComparison.InvariantCultureIgnoreCase)) return BatchPrivateEndpointConnectionProvisioningState.Cancelled;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown BatchPrivateEndpointConnectionProvisioningState value.");
        }
    }
}
