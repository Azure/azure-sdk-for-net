// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Batch.Models
{
    public partial class TaskContainerSettings : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(ContainerRunOptions))
            {
                writer.WritePropertyName("containerRunOptions");
                writer.WriteStringValue(ContainerRunOptions);
            }
            writer.WritePropertyName("imageName");
            writer.WriteStringValue(ImageName);
            if (Optional.IsDefined(Registry))
            {
                writer.WritePropertyName("registry");
                writer.WriteObjectValue(Registry);
            }
            if (Optional.IsDefined(WorkingDirectory))
            {
                writer.WritePropertyName("workingDirectory");
                writer.WriteStringValue(WorkingDirectory.Value.ToSerialString());
            }
            writer.WriteEndObject();
        }

        internal static TaskContainerSettings DeserializeTaskContainerSettings(JsonElement element)
        {
            Optional<string> containerRunOptions = default;
            string imageName = default;
            Optional<ContainerRegistry> registry = default;
            Optional<ContainerWorkingDirectory> workingDirectory = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("containerRunOptions"))
                {
                    containerRunOptions = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("imageName"))
                {
                    imageName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("registry"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    registry = ContainerRegistry.DeserializeContainerRegistry(property.Value);
                    continue;
                }
                if (property.NameEquals("workingDirectory"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    workingDirectory = property.Value.GetString().ToContainerWorkingDirectory();
                    continue;
                }
            }
            return new TaskContainerSettings(containerRunOptions.Value, imageName, registry.Value, Optional.ToNullable(workingDirectory));
        }
    }
}
