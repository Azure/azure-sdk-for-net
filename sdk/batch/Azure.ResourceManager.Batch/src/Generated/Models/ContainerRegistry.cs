// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.Batch.Models
{
    /// <summary> A private container registry. </summary>
    public partial class ContainerRegistry
    {
        /// <summary> Initializes a new instance of ContainerRegistry. </summary>
        public ContainerRegistry()
        {
        }

        /// <summary> Initializes a new instance of ContainerRegistry. </summary>
        /// <param name="userName"> The user name to log into the registry server. </param>
        /// <param name="password"> The password to log into the registry server. </param>
        /// <param name="registryServer"> If omitted, the default is &quot;docker.io&quot;. </param>
        /// <param name="identityReference"> The reference to a user assigned identity associated with the Batch pool which a compute node will use. </param>
        internal ContainerRegistry(string userName, string password, string registryServer, ComputeNodeIdentityReference identityReference)
        {
            UserName = userName;
            Password = password;
            RegistryServer = registryServer;
            IdentityReference = identityReference;
        }

        /// <summary> The user name to log into the registry server. </summary>
        public string UserName { get; set; }
        /// <summary> The password to log into the registry server. </summary>
        public string Password { get; set; }
        /// <summary> If omitted, the default is &quot;docker.io&quot;. </summary>
        public string RegistryServer { get; set; }
        /// <summary> The reference to a user assigned identity associated with the Batch pool which a compute node will use. </summary>
        internal ComputeNodeIdentityReference IdentityReference { get; set; }
        /// <summary> The ARM resource id of the user assigned identity. </summary>
        public string IdentityReferenceResourceId
        {
            get => IdentityReference is null ? default : IdentityReference.ResourceId;
            set
            {
                if (IdentityReference is null)
                    IdentityReference = new ComputeNodeIdentityReference();
                IdentityReference.ResourceId = value;
            }
        }
    }
}
