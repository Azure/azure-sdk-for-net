{
  "Name": "OutputFile",
  "ProtocolName": "Models.OutputFile",
  "SummaryComment": "A specification for uploading files from an Azure Batch node to another location after the Batch service has finished executing the task process.",
  "IsConstructorPublic": true,
  "IsUsedInCollections": true,
  "Properties": [
    {
      "Key": {
        "Type": "string",
        "Name": "FilePattern",
        "SummaryComment": "A pattern indicating which file(s) to upload.",
        "RemarksComment": "<para>Both relative and absolute paths are supported. Relative paths are relative to the Task working directory.</para><para>The following wildcards are supported: * matches 0 or more characters (for example pattern abc* would match abc or abcdef), ** matches any directory, ? matches any single character, [abc] matches one character in the brackets, and [a-c] matches one character in the range.</para><para>Brackets can include a negation to match any character not specified (for example [!abc] matches any character but a, b, or c).</para><para>If a file name starts with \".\" it is ignored by default but may be matched by specifying it explicitly (for example *.gif will not match .a.gif, but .*.gif will). A simple example: **\\*.txt matches any file that does not start in '.' and ends with .txt in the Task working directory or any subdirectory.</para><para>If the filename contains a wildcard character it can be escaped using brackets (for example abc[*] would match a file named abc*).</para><para>Note that both \\ and / are treated as directory separators on Windows, but only / is on Linux.</para><para>Environment variables (%var% on Windows or $var on Linux) are expanded prior to the pattern being applied.</para>",
        "BoundAccess": "read",
        "UnboundAccess": "read,write",
        "ConstructorArgumentType": "Required",
        "HideSetter": true
      },
      "Value": null
    },
    {
      "Key": {
        "Type": "OutputFileDestination",
        "Name": "Destination",
        "SummaryComment": "The destination for the output file(s).",
        "RemarksComment": null,
        "BoundAccess": "read",
        "UnboundAccess": "read,write",
        "ConstructorArgumentType": "Required",
        "HideSetter": true
      },
      "Value": null
    },
    {
      "Key": {
        "Type": "OutputFileUploadOptions",
        "Name": "UploadOptions",
        "SummaryComment": "Additional options for the upload operation, including under what conditions to perform the upload.",
        "RemarksComment": null,
        "BoundAccess": "read",
        "UnboundAccess": "read,write",
        "ConstructorArgumentType": "Required",
        "HideSetter": true
      },
      "Value": null
    }
  ]
}
