    {
      "Name": "JobReleaseTask",
      "ProtocolName": "Models.JobReleaseTask",
      "SummaryComment": "A Job Release task to run on job completion on any compute node where the job has run.",
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "Id",
            "SummaryComment": "The id of the task.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "CommandLine",
            "SummaryComment": "The command line of the task.",
            "RemarksComment": "The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux. If the command line refers to file paths, it should use a relative path (relative to the task working directory), or use the Batch provided environment variables (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "IList<ResourceFile>",
            "Name": "ResourceFiles",
            "SummaryComment": "A list of files that the Batch service will download to the compute node before running the command line.",
            "RemarksComment": "There is a maximum size for the list of resource files. When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of resource files must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers.",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "IList<Models.ResourceFile>",
            "Name": "ResourceFiles"
          }
        },
        {
          "Key": {
            "Type": "IList<EnvironmentSetting>",
            "Name": "EnvironmentSettings",
            "SummaryComment": "The collection of EnvironmentSetting instances.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "IList<Models.EnvironmentSetting>",
            "Name": "EnvironmentSettings"
          }
        },
        {
          "Key": {
            "Type": "UserIdentity",
            "Name": "UserIdentity",
            "SummaryComment": "The user identity under which the task runs.",
            "RemarksComment": "If omitted, the task runs as a non-administrative user unique to the task.",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "TimeSpan?",
            "Name": "MaxWallClockTime",
            "SummaryComment": "The maximum duration of time for which a task is allowed to run from the time it is created.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "TimeSpan?",
            "Name": "RetentionTime",
            "SummaryComment": "The duration of time for which files in the task's working directory are retained, from the time it completes execution. After this duration, the task's working directory is reclaimed.",
            "RemarksComment": "The default is 7 days, i.e. the task directory will be retained for 7 days unless the compute node is removed or the job is deleted.",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "TaskContainerSettings",
            "Name": "ContainerSettings",
            "SummaryComment": "The settings for the container under which the task runs.",
            "RemarksComment": "When this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are mapped into the container, all task environment variables are mapped into the container, and the task command line is executed in the container.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null
        }
      ]
    }
