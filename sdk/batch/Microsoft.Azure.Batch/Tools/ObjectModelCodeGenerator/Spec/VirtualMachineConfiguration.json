    {
      "Name": "VirtualMachineConfiguration",
      "ProtocolName": "Models.VirtualMachineConfiguration",
      "SummaryComment": "The configuration for compute nodes in a pool based on the Azure Virtual Machines infrastructure.",
      "ForceConstructorOrder":  true,
      "Properties": [
        {
          "Key": {
            "Type": "ImageReference",
            "Name": "ImageReference",
            "SummaryComment": "A reference to the Azure Virtual Machines Marketplace Image or the custom Virtual Machine Image to use.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "NodeAgentSkuId",
            "SummaryComment": "The SKU of Batch Node Agent to be provisioned on the compute node.",
            "RemarksComment": "The Batch node agent is a program that runs on each node in the pool, and provides the command-and-control interface between the node and the Batch service. There are different implementations of the node agent, known as SKUs, for different operating systems.",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required"
          },
          "Value": {
            "Type": "string",
            "Name": "NodeAgentSKUId"
          }
        },
        {
          "Key": {
            "Type": "IList<DataDisk>",
            "Name": "DataDisks",
            "SummaryComment": "The configuration for data disks attached to the Comptue Nodes in the pool.",
            "RemarksComment": "This property must be specified if the Compute Nodes in the pool need to have empty data disks attached to them. This cannot be updated.",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "LicenseType",
            "SummaryComment": "The type of on-premises license to be used when deploying the operating system.",
            "RemarksComment": "This only applies to images that contain the Windows operating system, and should only be used when you hold valid on-premises licenses for the nodes which will be deployed. If omitted, no on-premises licensing discount is applied. Values are: 'Windows_Server' - The on-premises license is for Windows Server. 'Windows_Client' - The on-premises license is for Windows Client.",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "WindowsConfiguration",
            "Name": "WindowsConfiguration",
            "SummaryComment": "Windows operating system settings on the Virtual Machine. This property must not be specified if the ImageReference property specifies a Linux OS image.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "ContainerConfiguration",
            "Name": "ContainerConfiguration",
            "SummaryComment": "The container configuration for the pool.",
            "RemarksComment": "If specified, setup is performed on each node in the pool to allow tasks to run in containers. All regular tasks and job manager tasks run on this pool must specify <see cref=\"TaskContainerSettings\" />, and all other tasks may specify it.",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DiskEncryptionConfiguration",
            "Name": "DiskEncryptionConfiguration",
            "SummaryComment": "The disk encryption configuration for the pool.",
            "RemarksComment": "If specified, encryption is performed on each node in the pool during node provisioning.",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        }
      ]
    }
