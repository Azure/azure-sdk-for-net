    {
      "Name": "Certificate",
      "ProtocolName": "Models.Certificate",
      "TransportProtocolName": "Models.CertificateAddParameter",
      "SummaryComment": "A certificate that can be installed on compute nodes and can be used to authenticate operations on a node.",
      "IsTopLevelObject": true,
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "Data",
            "SummaryComment": "The base64-encoded raw certificate data (contents of the .pfx or .cer file or data from which the <see cref=\"Certificate\"/> was created).",
            "RemarksComment": "<para>This property is set when creating a new <see cref=\"Certificate\"/>. It is not defined for certificates retrieved from the Batch service.</para> <para>The maximum size is 10 KB.</para>",
            "BoundAccess": "none",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required",
            "HideSetter": true
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Thumbprint",
            "SummaryComment": "The thumbprint of the certificate. This is a sequence of up to 40 hex digits.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required",
            "HideSetter": true
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "ThumbprintAlgorithm",
            "SummaryComment": "The algorithm used to derive the thumbprint.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required",
            "HideSetter": true
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Url",
            "SummaryComment": "The URL of the certificate.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "Common.CertificateState?",
            "Name": "State",
            "SummaryComment": "The current state of the certificate.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.CertificateState?",
            "Name": "State"
          }
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "StateTransitionTime",
            "SummaryComment": "The time at which the certificate entered its current state.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "Common.CertificateState?",
            "Name": "PreviousState",
            "SummaryComment": "The previous state of the certificate.",
            "RemarksComment": "If the certificate is in its initial <see cref=\"Common.CertificateState.Active\"/> state, the PreviousState property is not defined.",
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.CertificateState?",
            "Name": "PreviousState"
          }
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "PreviousStateTransitionTime",
            "SummaryComment": "The time at which the certificate entered its previous state.",
            "RemarksComment": "If the certificate is in its initial <see cref=\"Common.CertificateState.Active\"/> state, the PreviousStateTransitionTime property is not defined.",
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "Common.CertificateFormat?",
            "Name": "CertificateFormat",
            "SummaryComment": "The format of the certificate data.",
            "RemarksComment": null,
            "BoundAccess": "none",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Optional",
            "HideSetter": true
          },
          "Value": {
            "Type": "Models.CertificateFormat?",
            "Name": "CertificateFormat"
          }
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Password",
            "SummaryComment": "The password to access the certificate private key.",
            "RemarksComment": "This property is set when creating a new <see cref=\"Certificate\"/> from .pfx format data (see <see cref=\"CertificateOperations.CreateCertificateFromPfx(byte[], string)\"/> and <see cref=\"CertificateOperations.CreateCertificateFromPfx(string, string)\"/>). It is not defined for certificates retrieved from the Batch service.",
            "BoundAccess": "none",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Optional",
            "HideSetter": true
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "PublicData",
            "SummaryComment": "The public part of the certificate as a string containing base-64 encoded .cer format data.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DeleteCertificateError",
            "Name": "DeleteCertificateError",
            "SummaryComment": "The error that occurred on the last attempt to delete this certificate.",
            "RemarksComment": "This property is null unless the certificate is in the <see cref=\"Common.CertificateState.DeleteFailed\"/> state.",
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        }
      ]
    }
