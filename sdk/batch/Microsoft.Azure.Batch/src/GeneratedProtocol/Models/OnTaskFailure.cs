// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Batch.Protocol.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for OnTaskFailure.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum OnTaskFailure
    {
        /// <summary>
        /// Do nothing. The Job remains active unless terminated or disabled by
        /// some other means.
        /// </summary>
        [EnumMember(Value = "noaction")]
        NoAction,
        /// <summary>
        /// Take the action associated with the Task exit condition in the
        /// Task's exitConditions collection. (This may still result in no
        /// action being taken, if that is what the Task specifies.)
        /// </summary>
        [EnumMember(Value = "performexitoptionsjobaction")]
        PerformExitOptionsJobAction
    }
    internal static class OnTaskFailureEnumExtension
    {
        internal static string ToSerializedValue(this OnTaskFailure? value)
        {
            return value == null ? null : ((OnTaskFailure)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this OnTaskFailure value)
        {
            switch( value )
            {
                case OnTaskFailure.NoAction:
                    return "noaction";
                case OnTaskFailure.PerformExitOptionsJobAction:
                    return "performexitoptionsjobaction";
            }
            return null;
        }

        internal static OnTaskFailure? ParseOnTaskFailure(this string value)
        {
            switch( value )
            {
                case "noaction":
                    return OnTaskFailure.NoAction;
                case "performexitoptionsjobaction":
                    return OnTaskFailure.PerformExitOptionsJobAction;
            }
            return null;
        }
    }
}
