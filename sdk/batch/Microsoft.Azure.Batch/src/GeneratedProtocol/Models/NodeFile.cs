// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Batch.Protocol.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Information about a file or directory on a compute node.
    /// </summary>
    public partial class NodeFile
    {
        /// <summary>
        /// Initializes a new instance of the NodeFile class.
        /// </summary>
        public NodeFile()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NodeFile class.
        /// </summary>
        /// <param name="name">The file path.</param>
        /// <param name="url">The URL of the file.</param>
        /// <param name="isDirectory">Whether the object represents a
        /// directory.</param>
        /// <param name="properties">The file properties.</param>
        public NodeFile(string name = default(string), string url = default(string), bool? isDirectory = default(bool?), FileProperties properties = default(FileProperties))
        {
            Name = name;
            Url = url;
            IsDirectory = isDirectory;
            Properties = properties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the file path.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the URL of the file.
        /// </summary>
        [JsonProperty(PropertyName = "url")]
        public string Url { get; set; }

        /// <summary>
        /// Gets or sets whether the object represents a directory.
        /// </summary>
        [JsonProperty(PropertyName = "isDirectory")]
        public bool? IsDirectory { get; set; }

        /// <summary>
        /// Gets or sets the file properties.
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public FileProperties Properties { get; set; }

    }
}
