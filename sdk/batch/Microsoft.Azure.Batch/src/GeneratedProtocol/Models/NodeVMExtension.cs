// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Batch.Protocol.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The configuration for virtual machine extension instance view.
    /// </summary>
    public partial class NodeVMExtension
    {
        /// <summary>
        /// Initializes a new instance of the NodeVMExtension class.
        /// </summary>
        public NodeVMExtension()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NodeVMExtension class.
        /// </summary>
        /// <param name="provisioningState">The provisioning state of the
        /// virtual machine extension.</param>
        /// <param name="vmExtension">The virtual machine extension</param>
        /// <param name="instanceView">The vm extension instance view.</param>
        public NodeVMExtension(string provisioningState = default(string), VMExtension vmExtension = default(VMExtension), VMExtensionInstanceView instanceView = default(VMExtensionInstanceView))
        {
            ProvisioningState = provisioningState;
            VmExtension = vmExtension;
            InstanceView = instanceView;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the provisioning state of the virtual machine
        /// extension.
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Gets or sets the virtual machine extension
        /// </summary>
        [JsonProperty(PropertyName = "vmExtension")]
        public VMExtension VmExtension { get; set; }

        /// <summary>
        /// Gets or sets the vm extension instance view.
        /// </summary>
        [JsonProperty(PropertyName = "instanceView")]
        public VMExtensionInstanceView InstanceView { get; set; }

    }
}
