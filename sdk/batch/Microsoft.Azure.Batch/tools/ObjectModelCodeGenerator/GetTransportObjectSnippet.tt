<#@ template debug="false" linePragmas="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Microsoft.VisualStudio.TextTemplating" #>
<#@ assembly name="$(ProjectDir)$(OutDir)\CodeGenerationLibrary.dll" #>
<#@ import namespace="CodeGenerationLibrary" #>
<#@ parameter type="CodeGenerationLibrary.ObjectModelTypeData" name="type" #>
<# if (type.ShouldDefineGetTransportObject)
{
#>
        /// <summary>
        /// Return a protocol object of the requested type.
        /// </summary>
        /// <returns>The protocol object of the requested type.</returns>
        <#= type.TransportObjectTypeName #> ITransportObjectProvider<<#= type.TransportObjectTypeName #>>.GetTransportObject()
        {
            <#= type.TransportObjectTypeName #> result = new <#= type.TransportObjectTypeName #>()
            {
<#
foreach (var kvp in type.OrderedPublicProperties)
{
    if (kvp.Key.CanSerializeToServer)
    {
#>
                <#= CodeGenerationUtilities.GetProtocolPropertyName(kvp.Key, kvp.Value) #> = <#= CodeGenerationUtilities.GetObjectModelToProtocolString(kvp.Key, kvp.Value) #>,
<#
    }
}
#>
            };

            return result;
        }
<#
}
#>