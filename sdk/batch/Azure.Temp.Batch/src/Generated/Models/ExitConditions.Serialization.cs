// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Temp.Batch.Models
{
    public partial class ExitConditions : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(ExitCodes))
            {
                writer.WritePropertyName("exitCodes"u8);
                writer.WriteStartArray();
                foreach (var item in ExitCodes)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(ExitCodeRanges))
            {
                writer.WritePropertyName("exitCodeRanges"u8);
                writer.WriteStartArray();
                foreach (var item in ExitCodeRanges)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(PreProcessingError))
            {
                writer.WritePropertyName("preProcessingError"u8);
                writer.WriteObjectValue(PreProcessingError);
            }
            if (Optional.IsDefined(FileUploadError))
            {
                writer.WritePropertyName("fileUploadError"u8);
                writer.WriteObjectValue(FileUploadError);
            }
            if (Optional.IsDefined(Default))
            {
                writer.WritePropertyName("default"u8);
                writer.WriteObjectValue(Default);
            }
            writer.WriteEndObject();
        }

        internal static ExitConditions DeserializeExitConditions(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<IList<ExitCodeMapping>> exitCodes = default;
            Optional<IList<ExitCodeRangeMapping>> exitCodeRanges = default;
            Optional<ExitOptions> preProcessingError = default;
            Optional<ExitOptions> fileUploadError = default;
            Optional<ExitOptions> @default = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("exitCodes"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<ExitCodeMapping> array = new List<ExitCodeMapping>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ExitCodeMapping.DeserializeExitCodeMapping(item));
                    }
                    exitCodes = array;
                    continue;
                }
                if (property.NameEquals("exitCodeRanges"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<ExitCodeRangeMapping> array = new List<ExitCodeRangeMapping>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ExitCodeRangeMapping.DeserializeExitCodeRangeMapping(item));
                    }
                    exitCodeRanges = array;
                    continue;
                }
                if (property.NameEquals("preProcessingError"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    preProcessingError = ExitOptions.DeserializeExitOptions(property.Value);
                    continue;
                }
                if (property.NameEquals("fileUploadError"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    fileUploadError = ExitOptions.DeserializeExitOptions(property.Value);
                    continue;
                }
                if (property.NameEquals("default"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    @default = ExitOptions.DeserializeExitOptions(property.Value);
                    continue;
                }
            }
            return new ExitConditions(Optional.ToList(exitCodes), Optional.ToList(exitCodeRanges), preProcessingError.Value, fileUploadError.Value, @default.Value);
        }
    }
}
