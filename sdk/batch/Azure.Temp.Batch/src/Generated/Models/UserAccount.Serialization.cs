// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Temp.Batch.Models
{
    public partial class UserAccount : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("name"u8);
            writer.WriteStringValue(Name);
            writer.WritePropertyName("password"u8);
            writer.WriteStringValue(Password);
            if (Optional.IsDefined(ElevationLevel))
            {
                writer.WritePropertyName("elevationLevel"u8);
                writer.WriteStringValue(ElevationLevel.Value.ToSerialString());
            }
            if (Optional.IsDefined(LinuxUserConfiguration))
            {
                writer.WritePropertyName("linuxUserConfiguration"u8);
                writer.WriteObjectValue(LinuxUserConfiguration);
            }
            if (Optional.IsDefined(WindowsUserConfiguration))
            {
                writer.WritePropertyName("windowsUserConfiguration"u8);
                writer.WriteObjectValue(WindowsUserConfiguration);
            }
            writer.WriteEndObject();
        }

        internal static UserAccount DeserializeUserAccount(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            string name = default;
            string password = default;
            Optional<ElevationLevel> elevationLevel = default;
            Optional<LinuxUserConfiguration> linuxUserConfiguration = default;
            Optional<WindowsUserConfiguration> windowsUserConfiguration = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("name"u8))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("password"u8))
                {
                    password = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("elevationLevel"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    elevationLevel = property.Value.GetString().ToElevationLevel();
                    continue;
                }
                if (property.NameEquals("linuxUserConfiguration"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    linuxUserConfiguration = LinuxUserConfiguration.DeserializeLinuxUserConfiguration(property.Value);
                    continue;
                }
                if (property.NameEquals("windowsUserConfiguration"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    windowsUserConfiguration = WindowsUserConfiguration.DeserializeWindowsUserConfiguration(property.Value);
                    continue;
                }
            }
            return new UserAccount(name, password, Optional.ToNullable(elevationLevel), linuxUserConfiguration.Value, windowsUserConfiguration.Value);
        }
    }
}
