// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core.Extensions;
using Azure.Temp.Batch;

namespace Microsoft.Extensions.Azure
{
    /// <summary> Extension methods to add <see cref="ApplicationClient"/>, <see cref="PoolClient"/>, <see cref="AccountClient"/>, <see cref="CertificateClient"/>, <see cref="FileClient"/>, <see cref="JobScheduleClient"/>, <see cref="JobClient"/>, <see cref="TaskClient"/>, <see cref="ComputeNodeClient"/>, <see cref="ComputeNodeExtensionClient"/> to client builder. </summary>
    public static partial class TempBatchClientBuilderExtensions
    {
        /// <summary> Registers a <see cref="ApplicationClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="batchUrl"> The base URL for all Azure Batch service requests. </param>
        public static IAzureClientBuilder<ApplicationClient, BatchServiceClientOptions> AddApplicationClient<TBuilder>(this TBuilder builder, string batchUrl)
        where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            return builder.RegisterClientFactory<ApplicationClient, BatchServiceClientOptions>((options, cred) => new ApplicationClient(batchUrl, cred, options));
        }

        /// <summary> Registers a <see cref="PoolClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="batchUrl"> The base URL for all Azure Batch service requests. </param>
        public static IAzureClientBuilder<PoolClient, BatchServiceClientOptions> AddPoolClient<TBuilder>(this TBuilder builder, string batchUrl)
        where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            return builder.RegisterClientFactory<PoolClient, BatchServiceClientOptions>((options, cred) => new PoolClient(batchUrl, cred, options));
        }

        /// <summary> Registers a <see cref="AccountClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="batchUrl"> The base URL for all Azure Batch service requests. </param>
        public static IAzureClientBuilder<AccountClient, BatchServiceClientOptions> AddAccountClient<TBuilder>(this TBuilder builder, string batchUrl)
        where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            return builder.RegisterClientFactory<AccountClient, BatchServiceClientOptions>((options, cred) => new AccountClient(batchUrl, cred, options));
        }

        /// <summary> Registers a <see cref="CertificateClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="batchUrl"> The base URL for all Azure Batch service requests. </param>
        public static IAzureClientBuilder<CertificateClient, BatchServiceClientOptions> AddCertificateClient<TBuilder>(this TBuilder builder, string batchUrl)
        where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            return builder.RegisterClientFactory<CertificateClient, BatchServiceClientOptions>((options, cred) => new CertificateClient(batchUrl, cred, options));
        }

        /// <summary> Registers a <see cref="FileClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="batchUrl"> The base URL for all Azure Batch service requests. </param>
        public static IAzureClientBuilder<FileClient, BatchServiceClientOptions> AddFileClient<TBuilder>(this TBuilder builder, string batchUrl)
        where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            return builder.RegisterClientFactory<FileClient, BatchServiceClientOptions>((options, cred) => new FileClient(batchUrl, cred, options));
        }

        /// <summary> Registers a <see cref="JobScheduleClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="batchUrl"> The base URL for all Azure Batch service requests. </param>
        public static IAzureClientBuilder<JobScheduleClient, BatchServiceClientOptions> AddJobScheduleClient<TBuilder>(this TBuilder builder, string batchUrl)
        where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            return builder.RegisterClientFactory<JobScheduleClient, BatchServiceClientOptions>((options, cred) => new JobScheduleClient(batchUrl, cred, options));
        }

        /// <summary> Registers a <see cref="JobClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="batchUrl"> The base URL for all Azure Batch service requests. </param>
        public static IAzureClientBuilder<JobClient, BatchServiceClientOptions> AddJobClient<TBuilder>(this TBuilder builder, string batchUrl)
        where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            return builder.RegisterClientFactory<JobClient, BatchServiceClientOptions>((options, cred) => new JobClient(batchUrl, cred, options));
        }

        /// <summary> Registers a <see cref="TaskClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="batchUrl"> The base URL for all Azure Batch service requests. </param>
        public static IAzureClientBuilder<TaskClient, BatchServiceClientOptions> AddTaskClient<TBuilder>(this TBuilder builder, string batchUrl)
        where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            return builder.RegisterClientFactory<TaskClient, BatchServiceClientOptions>((options, cred) => new TaskClient(batchUrl, cred, options));
        }

        /// <summary> Registers a <see cref="ComputeNodeClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="batchUrl"> The base URL for all Azure Batch service requests. </param>
        public static IAzureClientBuilder<ComputeNodeClient, BatchServiceClientOptions> AddComputeNodeClient<TBuilder>(this TBuilder builder, string batchUrl)
        where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            return builder.RegisterClientFactory<ComputeNodeClient, BatchServiceClientOptions>((options, cred) => new ComputeNodeClient(batchUrl, cred, options));
        }

        /// <summary> Registers a <see cref="ComputeNodeExtensionClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="batchUrl"> The base URL for all Azure Batch service requests. </param>
        public static IAzureClientBuilder<ComputeNodeExtensionClient, BatchServiceClientOptions> AddComputeNodeExtensionClient<TBuilder>(this TBuilder builder, string batchUrl)
        where TBuilder : IAzureClientFactoryBuilderWithCredential
        {
            return builder.RegisterClientFactory<ComputeNodeExtensionClient, BatchServiceClientOptions>((options, cred) => new ComputeNodeExtensionClient(batchUrl, cred, options));
        }

        /// <summary> Registers a <see cref="ApplicationClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration values. </param>
        public static IAzureClientBuilder<ApplicationClient, BatchServiceClientOptions> AddApplicationClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
        where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<ApplicationClient, BatchServiceClientOptions>(configuration);
        }
        /// <summary> Registers a <see cref="PoolClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration values. </param>
        public static IAzureClientBuilder<PoolClient, BatchServiceClientOptions> AddPoolClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
        where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<PoolClient, BatchServiceClientOptions>(configuration);
        }
        /// <summary> Registers a <see cref="AccountClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration values. </param>
        public static IAzureClientBuilder<AccountClient, BatchServiceClientOptions> AddAccountClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
        where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<AccountClient, BatchServiceClientOptions>(configuration);
        }
        /// <summary> Registers a <see cref="CertificateClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration values. </param>
        public static IAzureClientBuilder<CertificateClient, BatchServiceClientOptions> AddCertificateClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
        where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<CertificateClient, BatchServiceClientOptions>(configuration);
        }
        /// <summary> Registers a <see cref="FileClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration values. </param>
        public static IAzureClientBuilder<FileClient, BatchServiceClientOptions> AddFileClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
        where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<FileClient, BatchServiceClientOptions>(configuration);
        }
        /// <summary> Registers a <see cref="JobScheduleClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration values. </param>
        public static IAzureClientBuilder<JobScheduleClient, BatchServiceClientOptions> AddJobScheduleClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
        where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<JobScheduleClient, BatchServiceClientOptions>(configuration);
        }
        /// <summary> Registers a <see cref="JobClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration values. </param>
        public static IAzureClientBuilder<JobClient, BatchServiceClientOptions> AddJobClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
        where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<JobClient, BatchServiceClientOptions>(configuration);
        }
        /// <summary> Registers a <see cref="TaskClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration values. </param>
        public static IAzureClientBuilder<TaskClient, BatchServiceClientOptions> AddTaskClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
        where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<TaskClient, BatchServiceClientOptions>(configuration);
        }
        /// <summary> Registers a <see cref="ComputeNodeClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration values. </param>
        public static IAzureClientBuilder<ComputeNodeClient, BatchServiceClientOptions> AddComputeNodeClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
        where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<ComputeNodeClient, BatchServiceClientOptions>(configuration);
        }
        /// <summary> Registers a <see cref="ComputeNodeExtensionClient"/> instance. </summary>
        /// <param name="builder"> The builder to register with. </param>
        /// <param name="configuration"> The configuration values. </param>
        public static IAzureClientBuilder<ComputeNodeExtensionClient, BatchServiceClientOptions> AddComputeNodeExtensionClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)
        where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>
        {
            return builder.RegisterClientFactory<ComputeNodeExtensionClient, BatchServiceClientOptions>(configuration);
        }
    }
}
