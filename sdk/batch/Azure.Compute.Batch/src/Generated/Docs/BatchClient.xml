<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetApplicationAsync(string,int?,DateTimeOffset?,CancellationToken)">
      <example>
This sample shows how to call GetApplicationAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response<BatchApplication> response = await client.GetApplicationAsync("my_application_id");
]]></code></example>
    </member>
    <member name="GetApplication(string,int?,DateTimeOffset?,CancellationToken)">
      <example>
This sample shows how to call GetApplication.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response<BatchApplication> response = client.GetApplication("my_application_id");
]]></code></example>
    </member>
    <member name="GetApplicationAsync(string,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call GetApplicationAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.GetApplicationAsync("my_application_id", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("versions")[0].ToString());
]]></code></example>
    </member>
    <member name="GetApplication(string,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call GetApplication and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.GetApplication("my_application_id", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("versions")[0].ToString());
]]></code></example>
    </member>
    <member name="CreatePoolAsync(BatchPoolCreateContent,int?,DateTimeOffset?,CancellationToken)">
      <example>
This sample shows how to call CreatePoolAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchPoolCreateContent pool = new BatchPoolCreateContent(null, null);
Response response = await client.CreatePoolAsync(pool);
]]></code>
This sample shows how to call CreatePoolAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchPoolCreateContent pool = new BatchPoolCreateContent(null, null);
Response response = await client.CreatePoolAsync(pool);
]]></code>
This sample shows how to call CreatePoolAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchPoolCreateContent pool = new BatchPoolCreateContent(null, null);
Response response = await client.CreatePoolAsync(pool);
]]></code>
This sample shows how to call CreatePoolAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchPoolCreateContent pool = new BatchPoolCreateContent(null, null);
Response response = await client.CreatePoolAsync(pool);
]]></code>
This sample shows how to call CreatePoolAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchPoolCreateContent pool = new BatchPoolCreateContent(null, null);
Response response = await client.CreatePoolAsync(pool);
]]></code>
This sample shows how to call CreatePoolAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchPoolCreateContent pool = new BatchPoolCreateContent(null, null);
Response response = await client.CreatePoolAsync(pool);
]]></code>
This sample shows how to call CreatePoolAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchPoolCreateContent pool = new BatchPoolCreateContent(null, null);
Response response = await client.CreatePoolAsync(pool);
]]></code>
This sample shows how to call CreatePoolAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchPoolCreateContent pool = new BatchPoolCreateContent(null, null);
Response response = await client.CreatePoolAsync(pool);
]]></code>
This sample shows how to call CreatePoolAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchPoolCreateContent pool = new BatchPoolCreateContent(null, null);
Response response = await client.CreatePoolAsync(pool);
]]></code></example>
    </member>
    <member name="CreatePool(BatchPoolCreateContent,int?,DateTimeOffset?,CancellationToken)">
      <example>
This sample shows how to call CreatePool.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchPoolCreateContent pool = new BatchPoolCreateContent(null, null);
Response response = client.CreatePool(pool);
]]></code>
This sample shows how to call CreatePool.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchPoolCreateContent pool = new BatchPoolCreateContent(null, null);
Response response = client.CreatePool(pool);
]]></code>
This sample shows how to call CreatePool.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchPoolCreateContent pool = new BatchPoolCreateContent(null, null);
Response response = client.CreatePool(pool);
]]></code>
This sample shows how to call CreatePool.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchPoolCreateContent pool = new BatchPoolCreateContent(null, null);
Response response = client.CreatePool(pool);
]]></code>
This sample shows how to call CreatePool.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchPoolCreateContent pool = new BatchPoolCreateContent(null, null);
Response response = client.CreatePool(pool);
]]></code>
This sample shows how to call CreatePool.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchPoolCreateContent pool = new BatchPoolCreateContent(null, null);
Response response = client.CreatePool(pool);
]]></code>
This sample shows how to call CreatePool.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchPoolCreateContent pool = new BatchPoolCreateContent(null, null);
Response response = client.CreatePool(pool);
]]></code>
This sample shows how to call CreatePool.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchPoolCreateContent pool = new BatchPoolCreateContent(null, null);
Response response = client.CreatePool(pool);
]]></code>
This sample shows how to call CreatePool.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchPoolCreateContent pool = new BatchPoolCreateContent(null, null);
Response response = client.CreatePool(pool);
]]></code></example>
    </member>
    <member name="CreatePoolAsync(RequestContent,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call CreatePoolAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.CreatePoolAsync(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CreatePoolAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.CreatePoolAsync(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CreatePoolAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.CreatePoolAsync(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CreatePoolAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.CreatePoolAsync(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CreatePoolAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.CreatePoolAsync(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CreatePoolAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.CreatePoolAsync(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CreatePoolAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.CreatePoolAsync(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CreatePoolAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.CreatePoolAsync(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CreatePoolAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.CreatePoolAsync(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="CreatePool(RequestContent,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call CreatePool.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.CreatePool(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CreatePool.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.CreatePool(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CreatePool.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.CreatePool(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CreatePool.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.CreatePool(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CreatePool.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.CreatePool(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CreatePool.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.CreatePool(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CreatePool.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.CreatePool(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CreatePool.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.CreatePool(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CreatePool.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.CreatePool(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeletePoolAsync(string,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call DeletePoolAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.DeletePoolAsync("poolId");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeletePool(string,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call DeletePool.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.DeletePool("poolId");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetPoolAsync(string,int?,DateTimeOffset?,IEnumerable{string},IEnumerable{string},RequestConditions,CancellationToken)">
      <example>
This sample shows how to call GetPoolAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response<BatchPool> response = await client.GetPoolAsync("pool");
]]></code>
This sample shows how to call GetPoolAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response<BatchPool> response = await client.GetPoolAsync("pool");
]]></code>
This sample shows how to call GetPoolAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response<BatchPool> response = await client.GetPoolAsync("mypool001");
]]></code>
This sample shows how to call GetPoolAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response<BatchPool> response = await client.GetPoolAsync("pool");
]]></code>
This sample shows how to call GetPoolAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response<BatchPool> response = await client.GetPoolAsync("mypool001");
]]></code>
This sample shows how to call GetPoolAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response<BatchPool> response = await client.GetPoolAsync("pool");
]]></code></example>
    </member>
    <member name="GetPool(string,int?,DateTimeOffset?,IEnumerable{string},IEnumerable{string},RequestConditions,CancellationToken)">
      <example>
This sample shows how to call GetPool.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response<BatchPool> response = client.GetPool("pool");
]]></code>
This sample shows how to call GetPool.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response<BatchPool> response = client.GetPool("pool");
]]></code>
This sample shows how to call GetPool.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response<BatchPool> response = client.GetPool("mypool001");
]]></code>
This sample shows how to call GetPool.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response<BatchPool> response = client.GetPool("pool");
]]></code>
This sample shows how to call GetPool.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response<BatchPool> response = client.GetPool("mypool001");
]]></code>
This sample shows how to call GetPool.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response<BatchPool> response = client.GetPool("pool");
]]></code></example>
    </member>
    <member name="GetPoolAsync(string,int?,DateTimeOffset?,IEnumerable{string},IEnumerable{string},RequestConditions,RequestContext)">
      <example>
This sample shows how to call GetPoolAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.GetPoolAsync("pool", null, DateTimeOffset.Parse("Fri, 28 Apr 2023 02:43:01 GMT"), null, null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetPoolAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.GetPoolAsync("pool", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetPoolAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.GetPoolAsync("mypool001", null, DateTimeOffset.Parse("Wed, 14 Jun 2023 06:39:01 GMT"), null, null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetPoolAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.GetPoolAsync("pool", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetPoolAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.GetPoolAsync("mypool001", null, DateTimeOffset.Parse("Wed, 23 Aug 2023 08:42:01 GMT"), null, null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetPoolAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.GetPoolAsync("pool", null, DateTimeOffset.Parse("Thu, 11 May 2023 08:08:01 GMT"), null, null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetPool(string,int?,DateTimeOffset?,IEnumerable{string},IEnumerable{string},RequestConditions,RequestContext)">
      <example>
This sample shows how to call GetPool and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.GetPool("pool", null, DateTimeOffset.Parse("Fri, 28 Apr 2023 02:43:01 GMT"), null, null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetPool and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.GetPool("pool", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetPool and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.GetPool("mypool001", null, DateTimeOffset.Parse("Wed, 14 Jun 2023 06:39:01 GMT"), null, null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetPool and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.GetPool("pool", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetPool and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.GetPool("mypool001", null, DateTimeOffset.Parse("Wed, 23 Aug 2023 08:42:01 GMT"), null, null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetPool and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.GetPool("pool", null, DateTimeOffset.Parse("Thu, 11 May 2023 08:08:01 GMT"), null, null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="UpdatePoolAsync(string,RequestContent,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call UpdatePoolAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.UpdatePoolAsync("poolId", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="UpdatePool(string,RequestContent,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call UpdatePool.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.UpdatePool("poolId", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DisablePoolAutoScaleAsync(string,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call DisablePoolAutoScaleAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.DisablePoolAutoScaleAsync("poolId");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DisablePoolAutoScale(string,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call DisablePoolAutoScale.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.DisablePoolAutoScale("poolId");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="EnablePoolAutoScaleAsync(string,BatchPoolEnableAutoScaleContent,int?,DateTimeOffset?,RequestConditions,CancellationToken)">
      <example>
This sample shows how to call EnablePoolAutoScaleAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchPoolEnableAutoScaleContent content = new BatchPoolEnableAutoScaleContent();
Response response = await client.EnablePoolAutoScaleAsync("poolId", content);
]]></code></example>
    </member>
    <member name="EnablePoolAutoScale(string,BatchPoolEnableAutoScaleContent,int?,DateTimeOffset?,RequestConditions,CancellationToken)">
      <example>
This sample shows how to call EnablePoolAutoScale.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchPoolEnableAutoScaleContent content = new BatchPoolEnableAutoScaleContent();
Response response = client.EnablePoolAutoScale("poolId", content);
]]></code></example>
    </member>
    <member name="EnablePoolAutoScaleAsync(string,RequestContent,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call EnablePoolAutoScaleAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.EnablePoolAutoScaleAsync("poolId", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="EnablePoolAutoScale(string,RequestContent,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call EnablePoolAutoScale.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.EnablePoolAutoScale("poolId", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="EvaluatePoolAutoScaleAsync(string,BatchPoolEvaluateAutoScaleContent,int?,DateTimeOffset?,CancellationToken)">
      <example>
This sample shows how to call EvaluatePoolAutoScaleAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchPoolEvaluateAutoScaleContent content = new BatchPoolEvaluateAutoScaleContent(null);
Response<AutoScaleRun> response = await client.EvaluatePoolAutoScaleAsync("poolId", content);
]]></code></example>
    </member>
    <member name="EvaluatePoolAutoScale(string,BatchPoolEvaluateAutoScaleContent,int?,DateTimeOffset?,CancellationToken)">
      <example>
This sample shows how to call EvaluatePoolAutoScale.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchPoolEvaluateAutoScaleContent content = new BatchPoolEvaluateAutoScaleContent(null);
Response<AutoScaleRun> response = client.EvaluatePoolAutoScale("poolId", content);
]]></code></example>
    </member>
    <member name="EvaluatePoolAutoScaleAsync(string,RequestContent,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call EvaluatePoolAutoScaleAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.EvaluatePoolAutoScaleAsync("poolId", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("timestamp").ToString());
]]></code></example>
    </member>
    <member name="EvaluatePoolAutoScale(string,RequestContent,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call EvaluatePoolAutoScale and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.EvaluatePoolAutoScale("poolId", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("timestamp").ToString());
]]></code></example>
    </member>
    <member name="ResizePoolAsync(string,BatchPoolResizeContent,int?,DateTimeOffset?,RequestConditions,CancellationToken)">
      <example>
This sample shows how to call ResizePoolAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchPoolResizeContent content = new BatchPoolResizeContent();
Response response = await client.ResizePoolAsync("resizePool", content);
]]></code></example>
    </member>
    <member name="ResizePool(string,BatchPoolResizeContent,int?,DateTimeOffset?,RequestConditions,CancellationToken)">
      <example>
This sample shows how to call ResizePool.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchPoolResizeContent content = new BatchPoolResizeContent();
Response response = client.ResizePool("resizePool", content);
]]></code></example>
    </member>
    <member name="ResizePoolAsync(string,RequestContent,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call ResizePoolAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.ResizePoolAsync("resizePool", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ResizePool(string,RequestContent,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call ResizePool.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.ResizePool("resizePool", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="StopPoolResizeAsync(string,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call StopPoolResizeAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.StopPoolResizeAsync("poolId");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="StopPoolResize(string,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call StopPoolResize.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.StopPoolResize("poolId");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ReplacePoolPropertiesAsync(string,BatchPoolReplaceContent,int?,DateTimeOffset?,CancellationToken)">
      <example>
This sample shows how to call ReplacePoolPropertiesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchPoolReplaceContent pool = new BatchPoolReplaceContent(null, null);
Response response = await client.ReplacePoolPropertiesAsync("poolId", pool);
]]></code></example>
    </member>
    <member name="ReplacePoolProperties(string,BatchPoolReplaceContent,int?,DateTimeOffset?,CancellationToken)">
      <example>
This sample shows how to call ReplacePoolProperties.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchPoolReplaceContent pool = new BatchPoolReplaceContent(null, null);
Response response = client.ReplacePoolProperties("poolId", pool);
]]></code></example>
    </member>
    <member name="ReplacePoolPropertiesAsync(string,RequestContent,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call ReplacePoolPropertiesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.ReplacePoolPropertiesAsync("poolId", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ReplacePoolProperties(string,RequestContent,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call ReplacePoolProperties.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.ReplacePoolProperties("poolId", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="RemoveNodesAsync(string,BatchNodeRemoveContent,int?,DateTimeOffset?,RequestConditions,CancellationToken)">
      <example>
This sample shows how to call RemoveNodesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchNodeRemoveContent content = new BatchNodeRemoveContent(null);
Response response = await client.RemoveNodesAsync("poolId", content);
]]></code></example>
    </member>
    <member name="RemoveNodes(string,BatchNodeRemoveContent,int?,DateTimeOffset?,RequestConditions,CancellationToken)">
      <example>
This sample shows how to call RemoveNodes.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchNodeRemoveContent content = new BatchNodeRemoveContent(null);
Response response = client.RemoveNodes("poolId", content);
]]></code></example>
    </member>
    <member name="RemoveNodesAsync(string,RequestContent,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call RemoveNodesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.RemoveNodesAsync("poolId", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="RemoveNodes(string,RequestContent,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call RemoveNodes.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.RemoveNodes("poolId", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteJobAsync(string,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call DeleteJobAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.DeleteJobAsync("jobId");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteJob(string,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call DeleteJob.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.DeleteJob("jobId");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetJobAsync(string,int?,DateTimeOffset?,IEnumerable{string},IEnumerable{string},RequestConditions,CancellationToken)">
      <example>
This sample shows how to call GetJobAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response<BatchJob> response = await client.GetJobAsync("jobId");
]]></code></example>
    </member>
    <member name="GetJob(string,int?,DateTimeOffset?,IEnumerable{string},IEnumerable{string},RequestConditions,CancellationToken)">
      <example>
This sample shows how to call GetJob.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response<BatchJob> response = client.GetJob("jobId");
]]></code></example>
    </member>
    <member name="GetJobAsync(string,int?,DateTimeOffset?,IEnumerable{string},IEnumerable{string},RequestConditions,RequestContext)">
      <example>
This sample shows how to call GetJobAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.GetJobAsync("jobId", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("poolInfo").ToString());
]]></code></example>
    </member>
    <member name="GetJob(string,int?,DateTimeOffset?,IEnumerable{string},IEnumerable{string},RequestConditions,RequestContext)">
      <example>
This sample shows how to call GetJob and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.GetJob("jobId", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("poolInfo").ToString());
]]></code></example>
    </member>
    <member name="UpdateJobAsync(string,RequestContent,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call UpdateJobAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.UpdateJobAsync("jobId", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="UpdateJob(string,RequestContent,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call UpdateJob.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.UpdateJob("jobId", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ReplaceJobAsync(string,BatchJob,int?,DateTimeOffset?,RequestConditions,CancellationToken)">
      <example>
This sample shows how to call ReplaceJobAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchJob job = new BatchJob(new BatchPoolInfo
{
    PoolId = "poolId",
})
{
    Priority = 100,
    Constraints = new BatchJobConstraints
    {
        MaxWallClockTime = XmlConvert.ToTimeSpan("PT1H"),
        MaxTaskRetryCount = -1,
    },
};
Response response = await client.ReplaceJobAsync("jobId", job);
]]></code></example>
    </member>
    <member name="ReplaceJob(string,BatchJob,int?,DateTimeOffset?,RequestConditions,CancellationToken)">
      <example>
This sample shows how to call ReplaceJob.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchJob job = new BatchJob(new BatchPoolInfo
{
    PoolId = "poolId",
})
{
    Priority = 100,
    Constraints = new BatchJobConstraints
    {
        MaxWallClockTime = XmlConvert.ToTimeSpan("PT1H"),
        MaxTaskRetryCount = -1,
    },
};
Response response = client.ReplaceJob("jobId", job);
]]></code></example>
    </member>
    <member name="ReplaceJobAsync(string,RequestContent,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call ReplaceJobAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    priority = 100,
    constraints = new
    {
        maxWallClockTime = "PT1H",
        maxTaskRetryCount = -1,
    },
    poolInfo = new
    {
        poolId = "poolId",
    },
});
Response response = await client.ReplaceJobAsync("jobId", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ReplaceJob(string,RequestContent,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call ReplaceJob.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    priority = 100,
    constraints = new
    {
        maxWallClockTime = "PT1H",
        maxTaskRetryCount = -1,
    },
    poolInfo = new
    {
        poolId = "poolId",
    },
});
Response response = client.ReplaceJob("jobId", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DisableJobAsync(string,BatchJobDisableContent,int?,DateTimeOffset?,RequestConditions,CancellationToken)">
      <example>
This sample shows how to call DisableJobAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchJobDisableContent content = new BatchJobDisableContent(default);
Response response = await client.DisableJobAsync("jobId", content);
]]></code></example>
    </member>
    <member name="DisableJob(string,BatchJobDisableContent,int?,DateTimeOffset?,RequestConditions,CancellationToken)">
      <example>
This sample shows how to call DisableJob.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchJobDisableContent content = new BatchJobDisableContent(default);
Response response = client.DisableJob("jobId", content);
]]></code></example>
    </member>
    <member name="DisableJobAsync(string,RequestContent,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call DisableJobAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.DisableJobAsync("jobId", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DisableJob(string,RequestContent,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call DisableJob.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.DisableJob("jobId", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="EnableJobAsync(string,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call EnableJobAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.EnableJobAsync("jobId");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="EnableJob(string,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call EnableJob.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.EnableJob("jobId");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="TerminateJobAsync(string,BatchJobTerminateContent,int?,DateTimeOffset?,RequestConditions,CancellationToken)">
      <example>
This sample shows how to call TerminateJobAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.TerminateJobAsync("jobId");
]]></code></example>
    </member>
    <member name="TerminateJob(string,BatchJobTerminateContent,int?,DateTimeOffset?,RequestConditions,CancellationToken)">
      <example>
This sample shows how to call TerminateJob.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.TerminateJob("jobId");
]]></code></example>
    </member>
    <member name="TerminateJobAsync(string,RequestContent,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call TerminateJobAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = null;
Response response = await client.TerminateJobAsync("jobId", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="TerminateJob(string,RequestContent,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call TerminateJob.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = null;
Response response = client.TerminateJob("jobId", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="CreateJobAsync(BatchJobCreateContent,int?,DateTimeOffset?,CancellationToken)">
      <example>
This sample shows how to call CreateJobAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchJobCreateContent job = new BatchJobCreateContent(null, null);
Response response = await client.CreateJobAsync(job);
]]></code>
This sample shows how to call CreateJobAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchJobCreateContent job = new BatchJobCreateContent(null, null);
Response response = await client.CreateJobAsync(job);
]]></code></example>
    </member>
    <member name="CreateJob(BatchJobCreateContent,int?,DateTimeOffset?,CancellationToken)">
      <example>
This sample shows how to call CreateJob.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchJobCreateContent job = new BatchJobCreateContent(null, null);
Response response = client.CreateJob(job);
]]></code>
This sample shows how to call CreateJob.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchJobCreateContent job = new BatchJobCreateContent(null, null);
Response response = client.CreateJob(job);
]]></code></example>
    </member>
    <member name="CreateJobAsync(RequestContent,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call CreateJobAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.CreateJobAsync(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CreateJobAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.CreateJobAsync(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="CreateJob(RequestContent,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call CreateJob.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.CreateJob(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CreateJob.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.CreateJob(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetJobTaskCountsAsync(string,int?,DateTimeOffset?,CancellationToken)">
      <example>
This sample shows how to call GetJobTaskCountsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response<BatchTaskCountsResult> response = await client.GetJobTaskCountsAsync("jobId");
]]></code></example>
    </member>
    <member name="GetJobTaskCounts(string,int?,DateTimeOffset?,CancellationToken)">
      <example>
This sample shows how to call GetJobTaskCounts.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response<BatchTaskCountsResult> response = client.GetJobTaskCounts("jobId");
]]></code></example>
    </member>
    <member name="GetJobTaskCountsAsync(string,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call GetJobTaskCountsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.GetJobTaskCountsAsync("jobId", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("taskCounts").GetProperty("active").ToString());
Console.WriteLine(result.GetProperty("taskCounts").GetProperty("running").ToString());
Console.WriteLine(result.GetProperty("taskCounts").GetProperty("completed").ToString());
Console.WriteLine(result.GetProperty("taskCounts").GetProperty("succeeded").ToString());
Console.WriteLine(result.GetProperty("taskCounts").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("taskSlotCounts").GetProperty("active").ToString());
Console.WriteLine(result.GetProperty("taskSlotCounts").GetProperty("running").ToString());
Console.WriteLine(result.GetProperty("taskSlotCounts").GetProperty("completed").ToString());
Console.WriteLine(result.GetProperty("taskSlotCounts").GetProperty("succeeded").ToString());
Console.WriteLine(result.GetProperty("taskSlotCounts").GetProperty("failed").ToString());
]]></code></example>
    </member>
    <member name="GetJobTaskCounts(string,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call GetJobTaskCounts and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.GetJobTaskCounts("jobId", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("taskCounts").GetProperty("active").ToString());
Console.WriteLine(result.GetProperty("taskCounts").GetProperty("running").ToString());
Console.WriteLine(result.GetProperty("taskCounts").GetProperty("completed").ToString());
Console.WriteLine(result.GetProperty("taskCounts").GetProperty("succeeded").ToString());
Console.WriteLine(result.GetProperty("taskCounts").GetProperty("failed").ToString());
Console.WriteLine(result.GetProperty("taskSlotCounts").GetProperty("active").ToString());
Console.WriteLine(result.GetProperty("taskSlotCounts").GetProperty("running").ToString());
Console.WriteLine(result.GetProperty("taskSlotCounts").GetProperty("completed").ToString());
Console.WriteLine(result.GetProperty("taskSlotCounts").GetProperty("succeeded").ToString());
Console.WriteLine(result.GetProperty("taskSlotCounts").GetProperty("failed").ToString());
]]></code></example>
    </member>
    <member name="DeleteJobScheduleAsync(string,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call DeleteJobScheduleAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.DeleteJobScheduleAsync("jobScheduleId");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteJobSchedule(string,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call DeleteJobSchedule.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.DeleteJobSchedule("jobScheduleId");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetJobScheduleAsync(string,int?,DateTimeOffset?,IEnumerable{string},IEnumerable{string},RequestConditions,CancellationToken)">
      <example>
This sample shows how to call GetJobScheduleAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response<BatchJobSchedule> response = await client.GetJobScheduleAsync("jobScheduleId");
]]></code></example>
    </member>
    <member name="GetJobSchedule(string,int?,DateTimeOffset?,IEnumerable{string},IEnumerable{string},RequestConditions,CancellationToken)">
      <example>
This sample shows how to call GetJobSchedule.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response<BatchJobSchedule> response = client.GetJobSchedule("jobScheduleId");
]]></code></example>
    </member>
    <member name="GetJobScheduleAsync(string,int?,DateTimeOffset?,IEnumerable{string},IEnumerable{string},RequestConditions,RequestContext)">
      <example>
This sample shows how to call GetJobScheduleAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.GetJobScheduleAsync("jobScheduleId", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobSpecification").GetProperty("poolInfo").ToString());
]]></code></example>
    </member>
    <member name="GetJobSchedule(string,int?,DateTimeOffset?,IEnumerable{string},IEnumerable{string},RequestConditions,RequestContext)">
      <example>
This sample shows how to call GetJobSchedule and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.GetJobSchedule("jobScheduleId", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("jobSpecification").GetProperty("poolInfo").ToString());
]]></code></example>
    </member>
    <member name="UpdateJobScheduleAsync(string,RequestContent,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call UpdateJobScheduleAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.UpdateJobScheduleAsync("jobScheduleId", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="UpdateJobSchedule(string,RequestContent,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call UpdateJobSchedule.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.UpdateJobSchedule("jobScheduleId", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ReplaceJobScheduleAsync(string,BatchJobSchedule,int?,DateTimeOffset?,RequestConditions,CancellationToken)">
      <example>
This sample shows how to call ReplaceJobScheduleAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchJobSchedule jobSchedule = new BatchJobSchedule(new BatchJobSpecification(new BatchPoolInfo
{
    PoolId = "poolId",
})
{
    Priority = 0,
    UsesTaskDependencies = false,
    Constraints = new BatchJobConstraints
    {
        MaxWallClockTime = XmlConvert.ToTimeSpan("P10675199DT2H48M5.4775807S"),
        MaxTaskRetryCount = 0,
    },
})
{
    Schedule = new BatchJobScheduleConfiguration
    {
        DoNotRunUntil = DateTimeOffset.Parse("2025-01-01T12:30:00Z"),
    },
};
Response response = await client.ReplaceJobScheduleAsync("jobScheduleId", jobSchedule);
]]></code></example>
    </member>
    <member name="ReplaceJobSchedule(string,BatchJobSchedule,int?,DateTimeOffset?,RequestConditions,CancellationToken)">
      <example>
This sample shows how to call ReplaceJobSchedule.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchJobSchedule jobSchedule = new BatchJobSchedule(new BatchJobSpecification(new BatchPoolInfo
{
    PoolId = "poolId",
})
{
    Priority = 0,
    UsesTaskDependencies = false,
    Constraints = new BatchJobConstraints
    {
        MaxWallClockTime = XmlConvert.ToTimeSpan("P10675199DT2H48M5.4775807S"),
        MaxTaskRetryCount = 0,
    },
})
{
    Schedule = new BatchJobScheduleConfiguration
    {
        DoNotRunUntil = DateTimeOffset.Parse("2025-01-01T12:30:00Z"),
    },
};
Response response = client.ReplaceJobSchedule("jobScheduleId", jobSchedule);
]]></code></example>
    </member>
    <member name="ReplaceJobScheduleAsync(string,RequestContent,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call ReplaceJobScheduleAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    schedule = new
    {
        doNotRunUntil = "2025-01-01T12:30:00Z",
    },
    jobSpecification = new
    {
        priority = 0,
        usesTaskDependencies = false,
        constraints = new
        {
            maxWallClockTime = "P10675199DT2H48M5.4775807S",
            maxTaskRetryCount = 0,
        },
        poolInfo = new
        {
            poolId = "poolId",
        },
    },
});
Response response = await client.ReplaceJobScheduleAsync("jobScheduleId", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ReplaceJobSchedule(string,RequestContent,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call ReplaceJobSchedule.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    schedule = new
    {
        doNotRunUntil = "2025-01-01T12:30:00Z",
    },
    jobSpecification = new
    {
        priority = 0,
        usesTaskDependencies = false,
        constraints = new
        {
            maxWallClockTime = "P10675199DT2H48M5.4775807S",
            maxTaskRetryCount = 0,
        },
        poolInfo = new
        {
            poolId = "poolId",
        },
    },
});
Response response = client.ReplaceJobSchedule("jobScheduleId", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DisableJobScheduleAsync(string,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call DisableJobScheduleAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.DisableJobScheduleAsync("jobScheduleId");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DisableJobSchedule(string,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call DisableJobSchedule.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.DisableJobSchedule("jobScheduleId");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="EnableJobScheduleAsync(string,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call EnableJobScheduleAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.EnableJobScheduleAsync("jobScheduleId");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="EnableJobSchedule(string,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call EnableJobSchedule.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.EnableJobSchedule("jobScheduleId");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="TerminateJobScheduleAsync(string,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call TerminateJobScheduleAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.TerminateJobScheduleAsync("jobScheduleId");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="TerminateJobSchedule(string,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call TerminateJobSchedule.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.TerminateJobSchedule("jobScheduleId");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="CreateJobScheduleAsync(BatchJobScheduleCreateContent,int?,DateTimeOffset?,CancellationToken)">
      <example>
This sample shows how to call CreateJobScheduleAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchJobScheduleCreateContent jobSchedule = new BatchJobScheduleCreateContent(null, null, null);
Response response = await client.CreateJobScheduleAsync(jobSchedule);
]]></code>
This sample shows how to call CreateJobScheduleAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchJobScheduleCreateContent jobSchedule = new BatchJobScheduleCreateContent(null, null, null);
Response response = await client.CreateJobScheduleAsync(jobSchedule);
]]></code></example>
    </member>
    <member name="CreateJobSchedule(BatchJobScheduleCreateContent,int?,DateTimeOffset?,CancellationToken)">
      <example>
This sample shows how to call CreateJobSchedule.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchJobScheduleCreateContent jobSchedule = new BatchJobScheduleCreateContent(null, null, null);
Response response = client.CreateJobSchedule(jobSchedule);
]]></code>
This sample shows how to call CreateJobSchedule.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchJobScheduleCreateContent jobSchedule = new BatchJobScheduleCreateContent(null, null, null);
Response response = client.CreateJobSchedule(jobSchedule);
]]></code></example>
    </member>
    <member name="CreateJobScheduleAsync(RequestContent,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call CreateJobScheduleAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.CreateJobScheduleAsync(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CreateJobScheduleAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.CreateJobScheduleAsync(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="CreateJobSchedule(RequestContent,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call CreateJobSchedule.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.CreateJobSchedule(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CreateJobSchedule.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.CreateJobSchedule(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="CreateTaskAsync(string,BatchTaskCreateContent,int?,DateTimeOffset?,CancellationToken)">
      <example>
This sample shows how to call CreateTaskAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchTaskCreateContent task = new BatchTaskCreateContent(null, null);
Response response = await client.CreateTaskAsync("jobId", task);
]]></code>
This sample shows how to call CreateTaskAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchTaskCreateContent task = new BatchTaskCreateContent(null, null);
Response response = await client.CreateTaskAsync("jobId", task);
]]></code>
This sample shows how to call CreateTaskAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchTaskCreateContent task = new BatchTaskCreateContent(null, null);
Response response = await client.CreateTaskAsync("jobId", task);
]]></code>
This sample shows how to call CreateTaskAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchTaskCreateContent task = new BatchTaskCreateContent(null, null);
Response response = await client.CreateTaskAsync("jobId", task);
]]></code></example>
    </member>
    <member name="CreateTask(string,BatchTaskCreateContent,int?,DateTimeOffset?,CancellationToken)">
      <example>
This sample shows how to call CreateTask.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchTaskCreateContent task = new BatchTaskCreateContent(null, null);
Response response = client.CreateTask("jobId", task);
]]></code>
This sample shows how to call CreateTask.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchTaskCreateContent task = new BatchTaskCreateContent(null, null);
Response response = client.CreateTask("jobId", task);
]]></code>
This sample shows how to call CreateTask.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchTaskCreateContent task = new BatchTaskCreateContent(null, null);
Response response = client.CreateTask("jobId", task);
]]></code>
This sample shows how to call CreateTask.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchTaskCreateContent task = new BatchTaskCreateContent(null, null);
Response response = client.CreateTask("jobId", task);
]]></code></example>
    </member>
    <member name="CreateTaskAsync(string,RequestContent,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call CreateTaskAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.CreateTaskAsync("jobId", content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CreateTaskAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.CreateTaskAsync("jobId", content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CreateTaskAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.CreateTaskAsync("jobId", content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CreateTaskAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.CreateTaskAsync("jobId", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="CreateTask(string,RequestContent,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call CreateTask.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.CreateTask("jobId", content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CreateTask.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.CreateTask("jobId", content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CreateTask.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.CreateTask("jobId", content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CreateTask.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.CreateTask("jobId", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="CreateTaskCollectionAsync(string,BatchTaskGroup,int?,DateTimeOffset?,CancellationToken)">
      <example>
This sample shows how to call CreateTaskCollectionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchTaskGroup taskCollection = new BatchTaskGroup(null);
Response<BatchTaskAddCollectionResult> response = await client.CreateTaskCollectionAsync("jobId", taskCollection);
]]></code>
This sample shows how to call CreateTaskCollectionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchTaskGroup taskCollection = new BatchTaskGroup(null);
Response<BatchTaskAddCollectionResult> response = await client.CreateTaskCollectionAsync("jobId", taskCollection);
]]></code></example>
    </member>
    <member name="CreateTaskCollection(string,BatchTaskGroup,int?,DateTimeOffset?,CancellationToken)">
      <example>
This sample shows how to call CreateTaskCollection.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchTaskGroup taskCollection = new BatchTaskGroup(null);
Response<BatchTaskAddCollectionResult> response = client.CreateTaskCollection("jobId", taskCollection);
]]></code>
This sample shows how to call CreateTaskCollection.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchTaskGroup taskCollection = new BatchTaskGroup(null);
Response<BatchTaskAddCollectionResult> response = client.CreateTaskCollection("jobId", taskCollection);
]]></code></example>
    </member>
    <member name="CreateTaskCollectionAsync(string,RequestContent,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call CreateTaskCollectionAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.CreateTaskCollectionAsync("jobId", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateTaskCollectionAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.CreateTaskCollectionAsync("jobId", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="CreateTaskCollection(string,RequestContent,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call CreateTaskCollection and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.CreateTaskCollection("jobId", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateTaskCollection and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.CreateTaskCollection("jobId", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="DeleteTaskAsync(string,string,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call DeleteTaskAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.DeleteTaskAsync("jobId", "taskId");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteTask(string,string,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call DeleteTask.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.DeleteTask("jobId", "taskId");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetTaskAsync(string,string,int?,DateTimeOffset?,IEnumerable{string},IEnumerable{string},RequestConditions,CancellationToken)">
      <example>
This sample shows how to call GetTaskAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response<BatchTask> response = await client.GetTaskAsync("jobId", "taskId");
]]></code></example>
    </member>
    <member name="GetTask(string,string,int?,DateTimeOffset?,IEnumerable{string},IEnumerable{string},RequestConditions,CancellationToken)">
      <example>
This sample shows how to call GetTask.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response<BatchTask> response = client.GetTask("jobId", "taskId");
]]></code></example>
    </member>
    <member name="GetTaskAsync(string,string,int?,DateTimeOffset?,IEnumerable{string},IEnumerable{string},RequestConditions,RequestContext)">
      <example>
This sample shows how to call GetTaskAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.GetTaskAsync("jobId", "taskId", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetTask(string,string,int?,DateTimeOffset?,IEnumerable{string},IEnumerable{string},RequestConditions,RequestContext)">
      <example>
This sample shows how to call GetTask and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.GetTask("jobId", "taskId", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="ReplaceTaskAsync(string,string,BatchTask,int?,DateTimeOffset?,RequestConditions,CancellationToken)">
      <example>
This sample shows how to call ReplaceTaskAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchTask task = new BatchTask
{
    Constraints = new BatchTaskConstraints
    {
        MaxWallClockTime = XmlConvert.ToTimeSpan("PT1H"),
        RetentionTime = XmlConvert.ToTimeSpan("PT1H"),
        MaxTaskRetryCount = 3,
    },
};
Response response = await client.ReplaceTaskAsync("jobId", "taskId", task);
]]></code></example>
    </member>
    <member name="ReplaceTask(string,string,BatchTask,int?,DateTimeOffset?,RequestConditions,CancellationToken)">
      <example>
This sample shows how to call ReplaceTask.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchTask task = new BatchTask
{
    Constraints = new BatchTaskConstraints
    {
        MaxWallClockTime = XmlConvert.ToTimeSpan("PT1H"),
        RetentionTime = XmlConvert.ToTimeSpan("PT1H"),
        MaxTaskRetryCount = 3,
    },
};
Response response = client.ReplaceTask("jobId", "taskId", task);
]]></code></example>
    </member>
    <member name="ReplaceTaskAsync(string,string,RequestContent,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call ReplaceTaskAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    constraints = new
    {
        maxWallClockTime = "PT1H",
        maxTaskRetryCount = 3,
        retentionTime = "PT1H",
    },
});
Response response = await client.ReplaceTaskAsync("jobId", "taskId", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ReplaceTask(string,string,RequestContent,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call ReplaceTask.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    constraints = new
    {
        maxWallClockTime = "PT1H",
        maxTaskRetryCount = 3,
        retentionTime = "PT1H",
    },
});
Response response = client.ReplaceTask("jobId", "taskId", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="TerminateTaskAsync(string,string,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call TerminateTaskAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.TerminateTaskAsync("jobId", "taskId");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="TerminateTask(string,string,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call TerminateTask.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.TerminateTask("jobId", "taskId");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ReactivateTaskAsync(string,string,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call ReactivateTaskAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.ReactivateTaskAsync("jobId", "taskId");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ReactivateTask(string,string,int?,DateTimeOffset?,RequestConditions,RequestContext)">
      <example>
This sample shows how to call ReactivateTask.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.ReactivateTask("jobId", "taskId");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteTaskFileAsync(string,string,string,int?,DateTimeOffset?,bool?,RequestContext)">
      <example>
This sample shows how to call DeleteTaskFileAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.DeleteTaskFileAsync("jobId", "task1", "wd\\testFile.txt");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteTaskFile(string,string,string,int?,DateTimeOffset?,bool?,RequestContext)">
      <example>
This sample shows how to call DeleteTaskFile.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.DeleteTaskFile("jobId", "task1", "wd\\testFile.txt");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetTaskFileAsync(string,string,string,int?,DateTimeOffset?,string,RequestConditions,CancellationToken)">
      <example>
This sample shows how to call GetTaskFileAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response<BinaryData> response = await client.GetTaskFileAsync("jobId", "task1", "wd\\testFile.txt");
]]></code></example>
    </member>
    <member name="GetTaskFile(string,string,string,int?,DateTimeOffset?,string,RequestConditions,CancellationToken)">
      <example>
This sample shows how to call GetTaskFile.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response<BinaryData> response = client.GetTaskFile("jobId", "task1", "wd\\testFile.txt");
]]></code></example>
    </member>
    <member name="GetTaskFileAsync(string,string,string,int?,DateTimeOffset?,string,RequestConditions,RequestContext)">
      <example>
This sample shows how to call GetTaskFileAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.GetTaskFileAsync("jobId", "task1", "wd\\testFile.txt", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetTaskFile(string,string,string,int?,DateTimeOffset?,string,RequestConditions,RequestContext)">
      <example>
This sample shows how to call GetTaskFile and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.GetTaskFile("jobId", "task1", "wd\\testFile.txt", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="CreateNodeUserAsync(string,string,BatchNodeUserCreateContent,int?,DateTimeOffset?,CancellationToken)">
      <example>
This sample shows how to call CreateNodeUserAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchNodeUserCreateContent user = new BatchNodeUserCreateContent(null);
Response response = await client.CreateNodeUserAsync("poolId", "tvm-1695681911_1-20161121t182739z", user);
]]></code></example>
    </member>
    <member name="CreateNodeUser(string,string,BatchNodeUserCreateContent,int?,DateTimeOffset?,CancellationToken)">
      <example>
This sample shows how to call CreateNodeUser.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchNodeUserCreateContent user = new BatchNodeUserCreateContent(null);
Response response = client.CreateNodeUser("poolId", "tvm-1695681911_1-20161121t182739z", user);
]]></code></example>
    </member>
    <member name="CreateNodeUserAsync(string,string,RequestContent,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call CreateNodeUserAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.CreateNodeUserAsync("poolId", "tvm-1695681911_1-20161121t182739z", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="CreateNodeUser(string,string,RequestContent,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call CreateNodeUser.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.CreateNodeUser("poolId", "tvm-1695681911_1-20161121t182739z", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteNodeUserAsync(string,string,string,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call DeleteNodeUserAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.DeleteNodeUserAsync("poolId", "tvm-1695681911_1-20161121t182739z", "userName");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteNodeUser(string,string,string,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call DeleteNodeUser.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.DeleteNodeUser("poolId", "tvm-1695681911_1-20161121t182739z", "userName");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ReplaceNodeUserAsync(string,string,string,BatchNodeUserUpdateContent,int?,DateTimeOffset?,CancellationToken)">
      <example>
This sample shows how to call ReplaceNodeUserAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchNodeUserUpdateContent content = new BatchNodeUserUpdateContent();
Response response = await client.ReplaceNodeUserAsync("poolId", "tvm-1695681911_1-20161121t182739z", "userName", content);
]]></code></example>
    </member>
    <member name="ReplaceNodeUser(string,string,string,BatchNodeUserUpdateContent,int?,DateTimeOffset?,CancellationToken)">
      <example>
This sample shows how to call ReplaceNodeUser.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

BatchNodeUserUpdateContent content = new BatchNodeUserUpdateContent();
Response response = client.ReplaceNodeUser("poolId", "tvm-1695681911_1-20161121t182739z", "userName", content);
]]></code></example>
    </member>
    <member name="ReplaceNodeUserAsync(string,string,string,RequestContent,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call ReplaceNodeUserAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.ReplaceNodeUserAsync("poolId", "tvm-1695681911_1-20161121t182739z", "userName", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ReplaceNodeUser(string,string,string,RequestContent,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call ReplaceNodeUser.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.ReplaceNodeUser("poolId", "tvm-1695681911_1-20161121t182739z", "userName", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetNodeAsync(string,string,int?,DateTimeOffset?,IEnumerable{string},CancellationToken)">
      <example>
This sample shows how to call GetNodeAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response<BatchNode> response = await client.GetNodeAsync("poolId", "tvm-1695681911_2-20161122t193202z");
]]></code></example>
    </member>
    <member name="GetNode(string,string,int?,DateTimeOffset?,IEnumerable{string},CancellationToken)">
      <example>
This sample shows how to call GetNode.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response<BatchNode> response = client.GetNode("poolId", "tvm-1695681911_2-20161122t193202z");
]]></code></example>
    </member>
    <member name="GetNodeAsync(string,string,int?,DateTimeOffset?,IEnumerable{string},RequestContext)">
      <example>
This sample shows how to call GetNodeAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.GetNodeAsync("poolId", "tvm-1695681911_2-20161122t193202z", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetNode(string,string,int?,DateTimeOffset?,IEnumerable{string},RequestContext)">
      <example>
This sample shows how to call GetNode and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.GetNode("poolId", "tvm-1695681911_2-20161122t193202z", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="RebootNodeAsync(string,string,BatchNodeRebootContent,int?,DateTimeOffset?,CancellationToken)">
      <example>
This sample shows how to call RebootNodeAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.RebootNodeAsync("poolId", "tvm-1695681911_1-20161122t193202z");
]]></code></example>
    </member>
    <member name="RebootNode(string,string,BatchNodeRebootContent,int?,DateTimeOffset?,CancellationToken)">
      <example>
This sample shows how to call RebootNode.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.RebootNode("poolId", "tvm-1695681911_1-20161122t193202z");
]]></code></example>
    </member>
    <member name="RebootNodeAsync(string,string,RequestContent,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call RebootNodeAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = null;
Response response = await client.RebootNodeAsync("poolId", "tvm-1695681911_1-20161122t193202z", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="RebootNode(string,string,RequestContent,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call RebootNode.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = null;
Response response = client.RebootNode("poolId", "tvm-1695681911_1-20161122t193202z", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DisableNodeSchedulingAsync(string,string,BatchNodeDisableSchedulingContent,int?,DateTimeOffset?,CancellationToken)">
      <example>
This sample shows how to call DisableNodeSchedulingAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.DisableNodeSchedulingAsync("poolId", "tvm-1695681911_1-20161122t193202z");
]]></code></example>
    </member>
    <member name="DisableNodeScheduling(string,string,BatchNodeDisableSchedulingContent,int?,DateTimeOffset?,CancellationToken)">
      <example>
This sample shows how to call DisableNodeScheduling.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.DisableNodeScheduling("poolId", "tvm-1695681911_1-20161122t193202z");
]]></code></example>
    </member>
    <member name="DisableNodeSchedulingAsync(string,string,RequestContent,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call DisableNodeSchedulingAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = null;
Response response = await client.DisableNodeSchedulingAsync("poolId", "tvm-1695681911_1-20161122t193202z", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DisableNodeScheduling(string,string,RequestContent,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call DisableNodeScheduling.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = null;
Response response = client.DisableNodeScheduling("poolId", "tvm-1695681911_1-20161122t193202z", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="EnableNodeSchedulingAsync(string,string,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call EnableNodeSchedulingAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.EnableNodeSchedulingAsync("poolId", "tvm-1695681911_1-20161122t193202z");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="EnableNodeScheduling(string,string,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call EnableNodeScheduling.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.EnableNodeScheduling("poolId", "tvm-1695681911_1-20161122t193202z");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetNodeRemoteLoginSettingsAsync(string,string,int?,DateTimeOffset?,CancellationToken)">
      <example>
This sample shows how to call GetNodeRemoteLoginSettingsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response<BatchNodeRemoteLoginSettings> response = await client.GetNodeRemoteLoginSettingsAsync("poolId", "tvm-1695681911_1-20161121t182739z");
]]></code></example>
    </member>
    <member name="GetNodeRemoteLoginSettings(string,string,int?,DateTimeOffset?,CancellationToken)">
      <example>
This sample shows how to call GetNodeRemoteLoginSettings.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response<BatchNodeRemoteLoginSettings> response = client.GetNodeRemoteLoginSettings("poolId", "tvm-1695681911_1-20161121t182739z");
]]></code></example>
    </member>
    <member name="GetNodeRemoteLoginSettingsAsync(string,string,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call GetNodeRemoteLoginSettingsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.GetNodeRemoteLoginSettingsAsync("poolId", "tvm-1695681911_1-20161121t182739z", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("remoteLoginIPAddress").ToString());
Console.WriteLine(result.GetProperty("remoteLoginPort").ToString());
]]></code></example>
    </member>
    <member name="GetNodeRemoteLoginSettings(string,string,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call GetNodeRemoteLoginSettings and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.GetNodeRemoteLoginSettings("poolId", "tvm-1695681911_1-20161121t182739z", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("remoteLoginIPAddress").ToString());
Console.WriteLine(result.GetProperty("remoteLoginPort").ToString());
]]></code></example>
    </member>
    <member name="UploadNodeLogsAsync(string,string,UploadBatchServiceLogsContent,int?,DateTimeOffset?,CancellationToken)">
      <example>
This sample shows how to call UploadNodeLogsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

UploadBatchServiceLogsContent content = new UploadBatchServiceLogsContent(null, default);
Response<UploadBatchServiceLogsResult> response = await client.UploadNodeLogsAsync("poolId", "tvm-1695681911_1-20161121t182739z", content);
]]></code></example>
    </member>
    <member name="UploadNodeLogs(string,string,UploadBatchServiceLogsContent,int?,DateTimeOffset?,CancellationToken)">
      <example>
This sample shows how to call UploadNodeLogs.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

UploadBatchServiceLogsContent content = new UploadBatchServiceLogsContent(null, default);
Response<UploadBatchServiceLogsResult> response = client.UploadNodeLogs("poolId", "tvm-1695681911_1-20161121t182739z", content);
]]></code></example>
    </member>
    <member name="UploadNodeLogsAsync(string,string,RequestContent,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call UploadNodeLogsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.UploadNodeLogsAsync("poolId", "tvm-1695681911_1-20161121t182739z", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("virtualDirectoryName").ToString());
Console.WriteLine(result.GetProperty("numberOfFilesUploaded").ToString());
]]></code></example>
    </member>
    <member name="UploadNodeLogs(string,string,RequestContent,int?,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call UploadNodeLogs and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.UploadNodeLogs("poolId", "tvm-1695681911_1-20161121t182739z", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("virtualDirectoryName").ToString());
Console.WriteLine(result.GetProperty("numberOfFilesUploaded").ToString());
]]></code></example>
    </member>
    <member name="GetNodeExtensionAsync(string,string,string,int?,DateTimeOffset?,IEnumerable{string},CancellationToken)">
      <example>
This sample shows how to call GetNodeExtensionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response<BatchNodeVMExtension> response = await client.GetNodeExtensionAsync("poolId", "tvm-1695681911_2-20161122t193202z", "batchNodeExtension");
]]></code></example>
    </member>
    <member name="GetNodeExtension(string,string,string,int?,DateTimeOffset?,IEnumerable{string},CancellationToken)">
      <example>
This sample shows how to call GetNodeExtension.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response<BatchNodeVMExtension> response = client.GetNodeExtension("poolId", "tvm-1695681911_2-20161122t193202z", "batchNodeExtension");
]]></code></example>
    </member>
    <member name="GetNodeExtensionAsync(string,string,string,int?,DateTimeOffset?,IEnumerable{string},RequestContext)">
      <example>
This sample shows how to call GetNodeExtensionAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.GetNodeExtensionAsync("poolId", "tvm-1695681911_2-20161122t193202z", "batchNodeExtension", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetNodeExtension(string,string,string,int?,DateTimeOffset?,IEnumerable{string},RequestContext)">
      <example>
This sample shows how to call GetNodeExtension and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.GetNodeExtension("poolId", "tvm-1695681911_2-20161122t193202z", "batchNodeExtension", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="DeleteNodeFileAsync(string,string,string,int?,DateTimeOffset?,bool?,RequestContext)">
      <example>
This sample shows how to call DeleteNodeFileAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.DeleteNodeFileAsync("poolId", "tvm-1695681911_1-20161122t193202z", "workitems\\jobId\\job-1\\task1\\wd\\testFile.txt");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteNodeFile(string,string,string,int?,DateTimeOffset?,bool?,RequestContext)">
      <example>
This sample shows how to call DeleteNodeFile.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.DeleteNodeFile("poolId", "tvm-1695681911_1-20161122t193202z", "workitems\\jobId\\job-1\\task1\\wd\\testFile.txt");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetNodeFileAsync(string,string,string,int?,DateTimeOffset?,string,RequestConditions,CancellationToken)">
      <example>
This sample shows how to call GetNodeFileAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response<BinaryData> response = await client.GetNodeFileAsync("poolId", "nodeId", "workitems\\jobId\\job-1\\task1\\wd\\testFile.txt");
]]></code></example>
    </member>
    <member name="GetNodeFile(string,string,string,int?,DateTimeOffset?,string,RequestConditions,CancellationToken)">
      <example>
This sample shows how to call GetNodeFile.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response<BinaryData> response = client.GetNodeFile("poolId", "nodeId", "workitems\\jobId\\job-1\\task1\\wd\\testFile.txt");
]]></code></example>
    </member>
    <member name="GetNodeFileAsync(string,string,string,int?,DateTimeOffset?,string,RequestConditions,RequestContext)">
      <example>
This sample shows how to call GetNodeFileAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = await client.GetNodeFileAsync("poolId", "nodeId", "workitems\\jobId\\job-1\\task1\\wd\\testFile.txt", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetNodeFile(string,string,string,int?,DateTimeOffset?,string,RequestConditions,RequestContext)">
      <example>
This sample shows how to call GetNodeFile and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

Response response = client.GetNodeFile("poolId", "nodeId", "workitems\\jobId\\job-1\\task1\\wd\\testFile.txt", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetApplicationsAsync(int?,DateTimeOffset?,int?,CancellationToken)">
      <example>
This sample shows how to call GetApplicationsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

await foreach (BatchApplication item in client.GetApplicationsAsync())
{
}
]]></code></example>
    </member>
    <member name="GetApplications(int?,DateTimeOffset?,int?,CancellationToken)">
      <example>
This sample shows how to call GetApplications.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

foreach (BatchApplication item in client.GetApplications())
{
}
]]></code></example>
    </member>
    <member name="GetApplicationsAsync(int?,DateTimeOffset?,int?,RequestContext)">
      <example>
This sample shows how to call GetApplicationsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

await foreach (BinaryData item in client.GetApplicationsAsync(null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("versions")[0].ToString());
}
]]></code></example>
    </member>
    <member name="GetApplications(int?,DateTimeOffset?,int?,RequestContext)">
      <example>
This sample shows how to call GetApplications and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

foreach (BinaryData item in client.GetApplications(null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("versions")[0].ToString());
}
]]></code></example>
    </member>
    <member name="GetPoolUsageMetricsAsync(int?,DateTimeOffset?,int?,DateTimeOffset?,DateTimeOffset?,string,CancellationToken)">
      <example>
This sample shows how to call GetPoolUsageMetricsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

await foreach (BatchPoolUsageMetrics item in client.GetPoolUsageMetricsAsync())
{
}
]]></code></example>
    </member>
    <member name="GetPoolUsageMetrics(int?,DateTimeOffset?,int?,DateTimeOffset?,DateTimeOffset?,string,CancellationToken)">
      <example>
This sample shows how to call GetPoolUsageMetrics.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

foreach (BatchPoolUsageMetrics item in client.GetPoolUsageMetrics())
{
}
]]></code></example>
    </member>
    <member name="GetPoolUsageMetricsAsync(int?,DateTimeOffset?,int?,DateTimeOffset?,DateTimeOffset?,string,RequestContext)">
      <example>
This sample shows how to call GetPoolUsageMetricsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

await foreach (BinaryData item in client.GetPoolUsageMetricsAsync(null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("poolId").ToString());
    Console.WriteLine(result.GetProperty("startTime").ToString());
    Console.WriteLine(result.GetProperty("endTime").ToString());
    Console.WriteLine(result.GetProperty("vmSize").ToString());
    Console.WriteLine(result.GetProperty("totalCoreHours").ToString());
}
]]></code></example>
    </member>
    <member name="GetPoolUsageMetrics(int?,DateTimeOffset?,int?,DateTimeOffset?,DateTimeOffset?,string,RequestContext)">
      <example>
This sample shows how to call GetPoolUsageMetrics and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

foreach (BinaryData item in client.GetPoolUsageMetrics(null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("poolId").ToString());
    Console.WriteLine(result.GetProperty("startTime").ToString());
    Console.WriteLine(result.GetProperty("endTime").ToString());
    Console.WriteLine(result.GetProperty("vmSize").ToString());
    Console.WriteLine(result.GetProperty("totalCoreHours").ToString());
}
]]></code></example>
    </member>
    <member name="GetPoolsAsync(int?,DateTimeOffset?,int?,string,IEnumerable{string},IEnumerable{string},CancellationToken)">
      <example>
This sample shows how to call GetPoolsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

await foreach (BatchPool item in client.GetPoolsAsync())
{
}
]]></code></example>
    </member>
    <member name="GetPools(int?,DateTimeOffset?,int?,string,IEnumerable{string},IEnumerable{string},CancellationToken)">
      <example>
This sample shows how to call GetPools.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

foreach (BatchPool item in client.GetPools())
{
}
]]></code></example>
    </member>
    <member name="GetPoolsAsync(int?,DateTimeOffset?,int?,string,IEnumerable{string},IEnumerable{string},RequestContext)">
      <example>
This sample shows how to call GetPoolsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

await foreach (BinaryData item in client.GetPoolsAsync(null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code></example>
    </member>
    <member name="GetPools(int?,DateTimeOffset?,int?,string,IEnumerable{string},IEnumerable{string},RequestContext)">
      <example>
This sample shows how to call GetPools and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

foreach (BinaryData item in client.GetPools(null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code></example>
    </member>
    <member name="GetSupportedImagesAsync(int?,DateTimeOffset?,int?,string,CancellationToken)">
      <example>
This sample shows how to call GetSupportedImagesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

await foreach (BatchSupportedImage item in client.GetSupportedImagesAsync())
{
}
]]></code></example>
    </member>
    <member name="GetSupportedImages(int?,DateTimeOffset?,int?,string,CancellationToken)">
      <example>
This sample shows how to call GetSupportedImages.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

foreach (BatchSupportedImage item in client.GetSupportedImages())
{
}
]]></code></example>
    </member>
    <member name="GetSupportedImagesAsync(int?,DateTimeOffset?,int?,string,RequestContext)">
      <example>
This sample shows how to call GetSupportedImagesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

await foreach (BinaryData item in client.GetSupportedImagesAsync(null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("nodeAgentSKUId").ToString());
    Console.WriteLine(result.GetProperty("imageReference").ToString());
    Console.WriteLine(result.GetProperty("osType").ToString());
    Console.WriteLine(result.GetProperty("verificationType").ToString());
}
]]></code></example>
    </member>
    <member name="GetSupportedImages(int?,DateTimeOffset?,int?,string,RequestContext)">
      <example>
This sample shows how to call GetSupportedImages and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

foreach (BinaryData item in client.GetSupportedImages(null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("nodeAgentSKUId").ToString());
    Console.WriteLine(result.GetProperty("imageReference").ToString());
    Console.WriteLine(result.GetProperty("osType").ToString());
    Console.WriteLine(result.GetProperty("verificationType").ToString());
}
]]></code></example>
    </member>
    <member name="GetPoolNodeCountsAsync(int?,DateTimeOffset?,int?,string,CancellationToken)">
      <example>
This sample shows how to call GetPoolNodeCountsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

await foreach (BatchPoolNodeCounts item in client.GetPoolNodeCountsAsync())
{
}
]]></code></example>
    </member>
    <member name="GetPoolNodeCounts(int?,DateTimeOffset?,int?,string,CancellationToken)">
      <example>
This sample shows how to call GetPoolNodeCounts.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

foreach (BatchPoolNodeCounts item in client.GetPoolNodeCounts())
{
}
]]></code></example>
    </member>
    <member name="GetPoolNodeCountsAsync(int?,DateTimeOffset?,int?,string,RequestContext)">
      <example>
This sample shows how to call GetPoolNodeCountsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

await foreach (BinaryData item in client.GetPoolNodeCountsAsync(null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("poolId").ToString());
}
]]></code></example>
    </member>
    <member name="GetPoolNodeCounts(int?,DateTimeOffset?,int?,string,RequestContext)">
      <example>
This sample shows how to call GetPoolNodeCounts and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

foreach (BinaryData item in client.GetPoolNodeCounts(null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("poolId").ToString());
}
]]></code></example>
    </member>
    <member name="GetJobsAsync(int?,DateTimeOffset?,int?,string,IEnumerable{string},IEnumerable{string},CancellationToken)">
      <example>
This sample shows how to call GetJobsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

await foreach (BatchJob item in client.GetJobsAsync())
{
}
]]></code></example>
    </member>
    <member name="GetJobs(int?,DateTimeOffset?,int?,string,IEnumerable{string},IEnumerable{string},CancellationToken)">
      <example>
This sample shows how to call GetJobs.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

foreach (BatchJob item in client.GetJobs())
{
}
]]></code></example>
    </member>
    <member name="GetJobsAsync(int?,DateTimeOffset?,int?,string,IEnumerable{string},IEnumerable{string},RequestContext)">
      <example>
This sample shows how to call GetJobsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

await foreach (BinaryData item in client.GetJobsAsync(null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("poolInfo").ToString());
}
]]></code></example>
    </member>
    <member name="GetJobs(int?,DateTimeOffset?,int?,string,IEnumerable{string},IEnumerable{string},RequestContext)">
      <example>
This sample shows how to call GetJobs and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

foreach (BinaryData item in client.GetJobs(null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("poolInfo").ToString());
}
]]></code></example>
    </member>
    <member name="GetJobsFromSchedulesAsync(string,int?,DateTimeOffset?,int?,string,IEnumerable{string},IEnumerable{string},CancellationToken)">
      <example>
This sample shows how to call GetJobsFromSchedulesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

await foreach (BatchJob item in client.GetJobsFromSchedulesAsync("jobScheduleId"))
{
}
]]></code></example>
    </member>
    <member name="GetJobsFromSchedules(string,int?,DateTimeOffset?,int?,string,IEnumerable{string},IEnumerable{string},CancellationToken)">
      <example>
This sample shows how to call GetJobsFromSchedules.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

foreach (BatchJob item in client.GetJobsFromSchedules("jobScheduleId"))
{
}
]]></code></example>
    </member>
    <member name="GetJobsFromSchedulesAsync(string,int?,DateTimeOffset?,int?,string,IEnumerable{string},IEnumerable{string},RequestContext)">
      <example>
This sample shows how to call GetJobsFromSchedulesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

await foreach (BinaryData item in client.GetJobsFromSchedulesAsync("jobScheduleId", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("poolInfo").ToString());
}
]]></code></example>
    </member>
    <member name="GetJobsFromSchedules(string,int?,DateTimeOffset?,int?,string,IEnumerable{string},IEnumerable{string},RequestContext)">
      <example>
This sample shows how to call GetJobsFromSchedules and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

foreach (BinaryData item in client.GetJobsFromSchedules("jobScheduleId", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("poolInfo").ToString());
}
]]></code></example>
    </member>
    <member name="GetJobPreparationAndReleaseTaskStatusesAsync(string,int?,DateTimeOffset?,int?,string,IEnumerable{string},CancellationToken)">
      <example>
This sample shows how to call GetJobPreparationAndReleaseTaskStatusesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

await foreach (BatchJobPreparationAndReleaseTaskStatus item in client.GetJobPreparationAndReleaseTaskStatusesAsync("jobId"))
{
}
]]></code></example>
    </member>
    <member name="GetJobPreparationAndReleaseTaskStatuses(string,int?,DateTimeOffset?,int?,string,IEnumerable{string},CancellationToken)">
      <example>
This sample shows how to call GetJobPreparationAndReleaseTaskStatuses.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

foreach (BatchJobPreparationAndReleaseTaskStatus item in client.GetJobPreparationAndReleaseTaskStatuses("jobId"))
{
}
]]></code></example>
    </member>
    <member name="GetJobPreparationAndReleaseTaskStatusesAsync(string,int?,DateTimeOffset?,int?,string,IEnumerable{string},RequestContext)">
      <example>
This sample shows how to call GetJobPreparationAndReleaseTaskStatusesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

await foreach (BinaryData item in client.GetJobPreparationAndReleaseTaskStatusesAsync("jobId", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code></example>
    </member>
    <member name="GetJobPreparationAndReleaseTaskStatuses(string,int?,DateTimeOffset?,int?,string,IEnumerable{string},RequestContext)">
      <example>
This sample shows how to call GetJobPreparationAndReleaseTaskStatuses and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

foreach (BinaryData item in client.GetJobPreparationAndReleaseTaskStatuses("jobId", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code></example>
    </member>
    <member name="GetJobSchedulesAsync(int?,DateTimeOffset?,int?,string,IEnumerable{string},IEnumerable{string},CancellationToken)">
      <example>
This sample shows how to call GetJobSchedulesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

await foreach (BatchJobSchedule item in client.GetJobSchedulesAsync())
{
}
]]></code></example>
    </member>
    <member name="GetJobSchedules(int?,DateTimeOffset?,int?,string,IEnumerable{string},IEnumerable{string},CancellationToken)">
      <example>
This sample shows how to call GetJobSchedules.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

foreach (BatchJobSchedule item in client.GetJobSchedules())
{
}
]]></code></example>
    </member>
    <member name="GetJobSchedulesAsync(int?,DateTimeOffset?,int?,string,IEnumerable{string},IEnumerable{string},RequestContext)">
      <example>
This sample shows how to call GetJobSchedulesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

await foreach (BinaryData item in client.GetJobSchedulesAsync(null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("jobSpecification").GetProperty("poolInfo").ToString());
}
]]></code></example>
    </member>
    <member name="GetJobSchedules(int?,DateTimeOffset?,int?,string,IEnumerable{string},IEnumerable{string},RequestContext)">
      <example>
This sample shows how to call GetJobSchedules and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

foreach (BinaryData item in client.GetJobSchedules(null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("jobSpecification").GetProperty("poolInfo").ToString());
}
]]></code></example>
    </member>
    <member name="GetTasksAsync(string,int?,DateTimeOffset?,int?,string,IEnumerable{string},IEnumerable{string},CancellationToken)">
      <example>
This sample shows how to call GetTasksAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

await foreach (BatchTask item in client.GetTasksAsync("jobId"))
{
}
]]></code></example>
    </member>
    <member name="GetTasks(string,int?,DateTimeOffset?,int?,string,IEnumerable{string},IEnumerable{string},CancellationToken)">
      <example>
This sample shows how to call GetTasks.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

foreach (BatchTask item in client.GetTasks("jobId"))
{
}
]]></code></example>
    </member>
    <member name="GetTasksAsync(string,int?,DateTimeOffset?,int?,string,IEnumerable{string},IEnumerable{string},RequestContext)">
      <example>
This sample shows how to call GetTasksAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

await foreach (BinaryData item in client.GetTasksAsync("jobId", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code></example>
    </member>
    <member name="GetTasks(string,int?,DateTimeOffset?,int?,string,IEnumerable{string},IEnumerable{string},RequestContext)">
      <example>
This sample shows how to call GetTasks and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

foreach (BinaryData item in client.GetTasks("jobId", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code></example>
    </member>
    <member name="GetSubTasksAsync(string,string,int?,DateTimeOffset?,IEnumerable{string},CancellationToken)">
      <example>
This sample shows how to call GetSubTasksAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

await foreach (BatchSubtask item in client.GetSubTasksAsync("jobId", "taskId"))
{
}
]]></code></example>
    </member>
    <member name="GetSubTasks(string,string,int?,DateTimeOffset?,IEnumerable{string},CancellationToken)">
      <example>
This sample shows how to call GetSubTasks.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

foreach (BatchSubtask item in client.GetSubTasks("jobId", "taskId"))
{
}
]]></code></example>
    </member>
    <member name="GetSubTasksAsync(string,string,int?,DateTimeOffset?,IEnumerable{string},RequestContext)">
      <example>
This sample shows how to call GetSubTasksAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

await foreach (BinaryData item in client.GetSubTasksAsync("jobId", "taskId", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code></example>
    </member>
    <member name="GetSubTasks(string,string,int?,DateTimeOffset?,IEnumerable{string},RequestContext)">
      <example>
This sample shows how to call GetSubTasks and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

foreach (BinaryData item in client.GetSubTasks("jobId", "taskId", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code></example>
    </member>
    <member name="GetTaskFilesAsync(string,string,int?,DateTimeOffset?,int?,string,bool?,CancellationToken)">
      <example>
This sample shows how to call GetTaskFilesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

await foreach (BatchNodeFile item in client.GetTaskFilesAsync("jobId", "taskId"))
{
}
]]></code></example>
    </member>
    <member name="GetTaskFiles(string,string,int?,DateTimeOffset?,int?,string,bool?,CancellationToken)">
      <example>
This sample shows how to call GetTaskFiles.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

foreach (BatchNodeFile item in client.GetTaskFiles("jobId", "taskId"))
{
}
]]></code></example>
    </member>
    <member name="GetTaskFilesAsync(string,string,int?,DateTimeOffset?,int?,string,bool?,RequestContext)">
      <example>
This sample shows how to call GetTaskFilesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

await foreach (BinaryData item in client.GetTaskFilesAsync("jobId", "taskId", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, false, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code></example>
    </member>
    <member name="GetTaskFiles(string,string,int?,DateTimeOffset?,int?,string,bool?,RequestContext)">
      <example>
This sample shows how to call GetTaskFiles and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

foreach (BinaryData item in client.GetTaskFiles("jobId", "taskId", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, false, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code></example>
    </member>
    <member name="GetNodesAsync(string,int?,DateTimeOffset?,int?,string,IEnumerable{string},CancellationToken)">
      <example>
This sample shows how to call GetNodesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

await foreach (BatchNode item in client.GetNodesAsync("poolId"))
{
}
]]></code></example>
    </member>
    <member name="GetNodes(string,int?,DateTimeOffset?,int?,string,IEnumerable{string},CancellationToken)">
      <example>
This sample shows how to call GetNodes.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

foreach (BatchNode item in client.GetNodes("poolId"))
{
}
]]></code></example>
    </member>
    <member name="GetNodesAsync(string,int?,DateTimeOffset?,int?,string,IEnumerable{string},RequestContext)">
      <example>
This sample shows how to call GetNodesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

await foreach (BinaryData item in client.GetNodesAsync("poolId", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code></example>
    </member>
    <member name="GetNodes(string,int?,DateTimeOffset?,int?,string,IEnumerable{string},RequestContext)">
      <example>
This sample shows how to call GetNodes and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

foreach (BinaryData item in client.GetNodes("poolId", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code></example>
    </member>
    <member name="GetNodeExtensionsAsync(string,string,int?,DateTimeOffset?,int?,IEnumerable{string},CancellationToken)">
      <example>
This sample shows how to call GetNodeExtensionsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

await foreach (BatchNodeVMExtension item in client.GetNodeExtensionsAsync("poolId", "tvm-1695681911_2-20161122t193202z"))
{
}
]]></code></example>
    </member>
    <member name="GetNodeExtensions(string,string,int?,DateTimeOffset?,int?,IEnumerable{string},CancellationToken)">
      <example>
This sample shows how to call GetNodeExtensions.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

foreach (BatchNodeVMExtension item in client.GetNodeExtensions("poolId", "tvm-1695681911_2-20161122t193202z"))
{
}
]]></code></example>
    </member>
    <member name="GetNodeExtensionsAsync(string,string,int?,DateTimeOffset?,int?,IEnumerable{string},RequestContext)">
      <example>
This sample shows how to call GetNodeExtensionsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

await foreach (BinaryData item in client.GetNodeExtensionsAsync("poolId", "tvm-1695681911_2-20161122t193202z", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code></example>
    </member>
    <member name="GetNodeExtensions(string,string,int?,DateTimeOffset?,int?,IEnumerable{string},RequestContext)">
      <example>
This sample shows how to call GetNodeExtensions and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

foreach (BinaryData item in client.GetNodeExtensions("poolId", "tvm-1695681911_2-20161122t193202z", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code></example>
    </member>
    <member name="GetNodeFilesAsync(string,string,int?,DateTimeOffset?,int?,string,bool?,CancellationToken)">
      <example>
This sample shows how to call GetNodeFilesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

await foreach (BatchNodeFile item in client.GetNodeFilesAsync("poolId", "tvm-1695681911_1-20161122t193202z"))
{
}
]]></code></example>
    </member>
    <member name="GetNodeFiles(string,string,int?,DateTimeOffset?,int?,string,bool?,CancellationToken)">
      <example>
This sample shows how to call GetNodeFiles.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

foreach (BatchNodeFile item in client.GetNodeFiles("poolId", "tvm-1695681911_1-20161122t193202z"))
{
}
]]></code></example>
    </member>
    <member name="GetNodeFilesAsync(string,string,int?,DateTimeOffset?,int?,string,bool?,RequestContext)">
      <example>
This sample shows how to call GetNodeFilesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

await foreach (BinaryData item in client.GetNodeFilesAsync("poolId", "tvm-1695681911_1-20161122t193202z", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, false, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code></example>
    </member>
    <member name="GetNodeFiles(string,string,int?,DateTimeOffset?,int?,string,bool?,RequestContext)">
      <example>
This sample shows how to call GetNodeFiles and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
BatchClient client = new BatchClient(endpoint, credential);

foreach (BinaryData item in client.GetNodeFiles("poolId", "tvm-1695681911_1-20161122t193202z", null, DateTimeOffset.Parse("Fri, 17 Feb 2017 00:00:00 GMT"), null, null, false, null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code></example>
    </member>
  </members>
</doc>