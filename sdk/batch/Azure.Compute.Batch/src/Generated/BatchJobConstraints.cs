// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Batch
{
    /// <summary> The execution constraints for a Job. </summary>
    public partial class BatchJobConstraints
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="BatchJobConstraints"/>. </summary>
        public BatchJobConstraints()
        {
        }

        /// <summary> Initializes a new instance of <see cref="BatchJobConstraints"/>. </summary>
        /// <param name="maxWallClockTime"> The maximum elapsed time that the Job may run, measured from the time the Job is created. If the Job does not complete within the time limit, the Batch service terminates it and any Tasks that are still running. In this case, the termination reason will be MaxWallClockTimeExpiry. If this property is not specified, there is no time limit on how long the Job may run. </param>
        /// <param name="maxTaskRetryCount"> The maximum number of times each Task may be retried. The Batch service retries a Task if its exit code is nonzero. Note that this value specifically controls the number of retries. The Batch service will try each Task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries a Task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry Tasks. If the maximum retry count is -1, the Batch service retries Tasks without limit. The default value is 0 (no retries). </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal BatchJobConstraints(TimeSpan? maxWallClockTime, int? maxTaskRetryCount, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            MaxWallClockTime = maxWallClockTime;
            MaxTaskRetryCount = maxTaskRetryCount;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The maximum elapsed time that the Job may run, measured from the time the Job is created. If the Job does not complete within the time limit, the Batch service terminates it and any Tasks that are still running. In this case, the termination reason will be MaxWallClockTimeExpiry. If this property is not specified, there is no time limit on how long the Job may run. </summary>
        public TimeSpan? MaxWallClockTime { get; set; }

        /// <summary> The maximum number of times each Task may be retried. The Batch service retries a Task if its exit code is nonzero. Note that this value specifically controls the number of retries. The Batch service will try each Task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries a Task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry Tasks. If the maximum retry count is -1, the Batch service retries Tasks without limit. The default value is 0 (no retries). </summary>
        public int? MaxTaskRetryCount { get; set; }
    }
}
