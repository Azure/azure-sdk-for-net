// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Compute.Batch
{
    /// <summary> The vm extension instance view. </summary>
    public partial class VMExtensionInstanceView
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="VMExtensionInstanceView"/>. </summary>
        internal VMExtensionInstanceView()
        {
            Statuses = new ChangeTrackingList<InstanceViewStatus>();
            SubStatuses = new ChangeTrackingList<InstanceViewStatus>();
        }

        /// <summary> Initializes a new instance of <see cref="VMExtensionInstanceView"/>. </summary>
        /// <param name="name"> The name of the vm extension instance view. </param>
        /// <param name="statuses"> The resource status information. </param>
        /// <param name="subStatuses"> The resource status information. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal VMExtensionInstanceView(string name, IList<InstanceViewStatus> statuses, IList<InstanceViewStatus> subStatuses, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Name = name;
            Statuses = statuses;
            SubStatuses = subStatuses;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The name of the vm extension instance view. </summary>
        public string Name { get; }

        /// <summary> The resource status information. </summary>
        public IList<InstanceViewStatus> Statuses { get; }

        /// <summary> The resource status information. </summary>
        public IList<InstanceViewStatus> SubStatuses { get; }
    }
}
