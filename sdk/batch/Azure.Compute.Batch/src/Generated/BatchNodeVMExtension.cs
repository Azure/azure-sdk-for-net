// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Compute.Batch
{
    /// <summary> The configuration for virtual machine extension instance view. </summary>
    public partial class BatchNodeVMExtension
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="BatchNodeVMExtension"/>. </summary>
        internal BatchNodeVMExtension()
        {
        }

        /// <summary> Initializes a new instance of <see cref="BatchNodeVMExtension"/>. </summary>
        /// <param name="provisioningState"> The provisioning state of the virtual machine extension. </param>
        /// <param name="vmExtension"> The virtual machine extension. </param>
        /// <param name="instanceView"> The vm extension instance view. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal BatchNodeVMExtension(string provisioningState, VMExtension vmExtension, VMExtensionInstanceView instanceView, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            ProvisioningState = provisioningState;
            VmExtension = vmExtension;
            InstanceView = instanceView;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The provisioning state of the virtual machine extension. </summary>
        public string ProvisioningState { get; }

        /// <summary> The virtual machine extension. </summary>
        public VMExtension VmExtension { get; }

        /// <summary> The vm extension instance view. </summary>
        public VMExtensionInstanceView InstanceView { get; }
    }
}
