// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Compute.Batch
{
    /// <summary> Specifies the security profile settings for the managed disk. **Note**: It can only be set for Confidential VMs and required when using Confidential VMs. </summary>
    public partial class VmDiskSecurityProfile
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="VmDiskSecurityProfile"/>. </summary>
        public VmDiskSecurityProfile()
        {
        }

        /// <summary> Initializes a new instance of <see cref="VmDiskSecurityProfile"/>. </summary>
        /// <param name="securityEncryptionType"> Specifies the EncryptionType of the managed disk. It is set to VMGuestStateOnly for encryption of just the VMGuestState blob, and NonPersistedTPM for not persisting firmware state in the VMGuestState blob. **Note**: It can be set for only Confidential VMs and is required when using Confidential VMs. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal VmDiskSecurityProfile(SecurityEncryptionTypes? securityEncryptionType, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            SecurityEncryptionType = securityEncryptionType;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Specifies the EncryptionType of the managed disk. It is set to VMGuestStateOnly for encryption of just the VMGuestState blob, and NonPersistedTPM for not persisting firmware state in the VMGuestState blob. **Note**: It can be set for only Confidential VMs and is required when using Confidential VMs. </summary>
        public SecurityEncryptionTypes? SecurityEncryptionType { get; set; }
    }
}
