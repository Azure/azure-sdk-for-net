// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Compute.Batch
{
    /// <summary> Information about a file or directory on a Compute Node. </summary>
    public partial class BatchNodeFile
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="BatchNodeFile"/>. </summary>
        internal BatchNodeFile()
        {
        }

        /// <summary> Initializes a new instance of <see cref="BatchNodeFile"/>. </summary>
        /// <param name="name"> The file path. </param>
        /// <param name="uri"> The URL of the file. </param>
        /// <param name="isDirectory"> Whether the object represents a directory. </param>
        /// <param name="properties"> The file properties. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal BatchNodeFile(string name, Uri uri, bool? isDirectory, FileProperties properties, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Name = name;
            Uri = uri;
            IsDirectory = isDirectory;
            Properties = properties;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The file path. </summary>
        public string Name { get; }

        /// <summary> The URL of the file. </summary>
        public Uri Uri { get; }

        /// <summary> Whether the object represents a directory. </summary>
        public bool? IsDirectory { get; }

        /// <summary> The file properties. </summary>
        public FileProperties Properties { get; }
    }
}
