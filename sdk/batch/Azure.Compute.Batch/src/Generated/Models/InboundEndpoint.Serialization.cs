// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure;
using Azure.Core;

namespace BatchService.Models
{
    public partial class InboundEndpoint
    {
        internal static InboundEndpoint DeserializeInboundEndpoint(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            string name = default;
            InboundEndpointProtocol protocol = default;
            string publicIPAddress = default;
            string publicFQDN = default;
            int frontendPort = default;
            int backendPort = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("name"u8))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("protocol"u8))
                {
                    protocol = new InboundEndpointProtocol(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("publicIPAddress"u8))
                {
                    publicIPAddress = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("publicFQDN"u8))
                {
                    publicFQDN = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("frontendPort"u8))
                {
                    frontendPort = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("backendPort"u8))
                {
                    backendPort = property.Value.GetInt32();
                    continue;
                }
            }
            return new InboundEndpoint(name, protocol, publicIPAddress, publicFQDN, frontendPort, backendPort);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static InboundEndpoint FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializeInboundEndpoint(document.RootElement);
        }
    }
}
