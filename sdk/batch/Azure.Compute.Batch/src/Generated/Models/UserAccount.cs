// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace BatchService.Models
{
    /// <summary>
    /// Properties used to create a user used to execute Tasks on an Azure Batch
    /// Compute Node.
    /// </summary>
    public partial class UserAccount
    {
        /// <summary> Initializes a new instance of UserAccount. </summary>
        /// <param name="name">
        /// The name of the user Account. Names can contain any Unicode characters up to a
        /// maximum length of 20.
        /// </param>
        /// <param name="password"> The password for the user Account. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> or <paramref name="password"/> is null. </exception>
        public UserAccount(string name, string password)
        {
            Argument.AssertNotNull(name, nameof(name));
            Argument.AssertNotNull(password, nameof(password));

            Name = name;
            Password = password;
        }

        /// <summary> Initializes a new instance of UserAccount. </summary>
        /// <param name="name">
        /// The name of the user Account. Names can contain any Unicode characters up to a
        /// maximum length of 20.
        /// </param>
        /// <param name="password"> The password for the user Account. </param>
        /// <param name="elevationLevel"> The default value is nonAdmin. </param>
        /// <param name="linuxUserConfiguration">
        /// This property is ignored if specified on a Windows Pool. If not specified, the
        /// user is created with the default options.
        /// </param>
        /// <param name="windowsUserConfiguration">
        /// This property can only be specified if the user is on a Windows Pool. If not
        /// specified and on a Windows Pool, the user is created with the default options.
        /// </param>
        internal UserAccount(string name, string password, ElevationLevel? elevationLevel, LinuxUserConfiguration linuxUserConfiguration, WindowsUserConfiguration windowsUserConfiguration)
        {
            Name = name;
            Password = password;
            ElevationLevel = elevationLevel;
            LinuxUserConfiguration = linuxUserConfiguration;
            WindowsUserConfiguration = windowsUserConfiguration;
        }

        /// <summary>
        /// The name of the user Account. Names can contain any Unicode characters up to a
        /// maximum length of 20.
        /// </summary>
        public string Name { get; set; }
        /// <summary> The password for the user Account. </summary>
        public string Password { get; set; }
        /// <summary> The default value is nonAdmin. </summary>
        public ElevationLevel? ElevationLevel { get; set; }
        /// <summary>
        /// This property is ignored if specified on a Windows Pool. If not specified, the
        /// user is created with the default options.
        /// </summary>
        public LinuxUserConfiguration LinuxUserConfiguration { get; set; }
        /// <summary>
        /// This property can only be specified if the user is on a Windows Pool. If not
        /// specified and on a Windows Pool, the user is created with the default options.
        /// </summary>
        public WindowsUserConfiguration WindowsUserConfiguration { get; set; }
    }
}
