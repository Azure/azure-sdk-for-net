// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace BatchService.Models
{
    /// <summary> A network security group rule to apply to an inbound endpoint. </summary>
    public partial class NetworkSecurityGroupRule
    {
        /// <summary> Initializes a new instance of NetworkSecurityGroupRule. </summary>
        /// <param name="priority">
        /// Priorities within a Pool must be unique and are evaluated in order of priority.
        /// The lower the number the higher the priority. For example, rules could be
        /// specified with order numbers of 150, 250, and 350. The rule with the order
        /// number of 150 takes precedence over the rule that has an order of 250. Allowed
        /// priorities are 150 to 4096. If any reserved or duplicate values are provided
        /// the request fails with HTTP status code 400.
        /// </param>
        /// <param name="access"> The action that should be taken for a specified IP address, subnet range or tag. </param>
        /// <param name="sourceAddressPrefix">
        /// Valid values are a single IP address (i.e. 10.10.10.10), IP subnet (i.e.
        /// 192.168.1.0/24), default tag, or * (for all addresses).  If any other values
        /// are provided the request fails with HTTP status code 400.
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="sourceAddressPrefix"/> is null. </exception>
        public NetworkSecurityGroupRule(int priority, NetworkSecurityGroupRuleAccess access, string sourceAddressPrefix)
        {
            Argument.AssertNotNull(sourceAddressPrefix, nameof(sourceAddressPrefix));

            Priority = priority;
            Access = access;
            SourceAddressPrefix = sourceAddressPrefix;
            SourcePortRanges = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of NetworkSecurityGroupRule. </summary>
        /// <param name="priority">
        /// Priorities within a Pool must be unique and are evaluated in order of priority.
        /// The lower the number the higher the priority. For example, rules could be
        /// specified with order numbers of 150, 250, and 350. The rule with the order
        /// number of 150 takes precedence over the rule that has an order of 250. Allowed
        /// priorities are 150 to 4096. If any reserved or duplicate values are provided
        /// the request fails with HTTP status code 400.
        /// </param>
        /// <param name="access"> The action that should be taken for a specified IP address, subnet range or tag. </param>
        /// <param name="sourceAddressPrefix">
        /// Valid values are a single IP address (i.e. 10.10.10.10), IP subnet (i.e.
        /// 192.168.1.0/24), default tag, or * (for all addresses).  If any other values
        /// are provided the request fails with HTTP status code 400.
        /// </param>
        /// <param name="sourcePortRanges">
        /// Valid values are '*' (for all ports 0 - 65535), a specific port (i.e. 22), or a
        /// port range (i.e. 100-200). The ports must be in the range of 0 to 65535. Each
        /// entry in this collection must not overlap any other entry (either a range or an
        /// individual port). If any other values are provided the request fails with HTTP
        /// status code 400. The default value is '*'.
        /// </param>
        internal NetworkSecurityGroupRule(int priority, NetworkSecurityGroupRuleAccess access, string sourceAddressPrefix, IList<string> sourcePortRanges)
        {
            Priority = priority;
            Access = access;
            SourceAddressPrefix = sourceAddressPrefix;
            SourcePortRanges = sourcePortRanges.ToList();
        }

        /// <summary>
        /// Priorities within a Pool must be unique and are evaluated in order of priority.
        /// The lower the number the higher the priority. For example, rules could be
        /// specified with order numbers of 150, 250, and 350. The rule with the order
        /// number of 150 takes precedence over the rule that has an order of 250. Allowed
        /// priorities are 150 to 4096. If any reserved or duplicate values are provided
        /// the request fails with HTTP status code 400.
        /// </summary>
        public int Priority { get; set; }
        /// <summary> The action that should be taken for a specified IP address, subnet range or tag. </summary>
        public NetworkSecurityGroupRuleAccess Access { get; set; }
        /// <summary>
        /// Valid values are a single IP address (i.e. 10.10.10.10), IP subnet (i.e.
        /// 192.168.1.0/24), default tag, or * (for all addresses).  If any other values
        /// are provided the request fails with HTTP status code 400.
        /// </summary>
        public string SourceAddressPrefix { get; set; }
        /// <summary>
        /// Valid values are '*' (for all ports 0 - 65535), a specific port (i.e. 22), or a
        /// port range (i.e. 100-200). The ports must be in the range of 0 to 65535. Each
        /// entry in this collection must not overlap any other entry (either a range or an
        /// individual port). If any other values are provided the request fails with HTTP
        /// status code 400. The default value is '*'.
        /// </summary>
        public IList<string> SourcePortRanges { get; }
    }
}
