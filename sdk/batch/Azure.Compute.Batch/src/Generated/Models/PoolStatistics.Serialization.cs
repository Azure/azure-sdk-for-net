// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure;
using Azure.Core;

namespace BatchService.Models
{
    public partial class PoolStatistics : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("startTime"u8);
            writer.WriteStringValue(StartTime, "O");
            writer.WritePropertyName("lastUpdateTime"u8);
            writer.WriteStringValue(LastUpdateTime, "O");
            if (Optional.IsDefined(UsageStats))
            {
                writer.WritePropertyName("usageStats"u8);
                writer.WriteObjectValue(UsageStats);
            }
            if (Optional.IsDefined(ResourceStats))
            {
                writer.WritePropertyName("resourceStats"u8);
                writer.WriteObjectValue(ResourceStats);
            }
            writer.WriteEndObject();
        }

        internal static PoolStatistics DeserializePoolStatistics(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            string url = default;
            DateTimeOffset startTime = default;
            DateTimeOffset lastUpdateTime = default;
            Optional<UsageStatistics> usageStats = default;
            Optional<ResourceStatistics> resourceStats = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("url"u8))
                {
                    url = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("startTime"u8))
                {
                    startTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("lastUpdateTime"u8))
                {
                    lastUpdateTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("usageStats"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    usageStats = UsageStatistics.DeserializeUsageStatistics(property.Value);
                    continue;
                }
                if (property.NameEquals("resourceStats"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    resourceStats = ResourceStatistics.DeserializeResourceStatistics(property.Value);
                    continue;
                }
            }
            return new PoolStatistics(url, startTime, lastUpdateTime, usageStats, resourceStats);
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static PoolStatistics FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializePoolStatistics(document.RootElement);
        }

        /// <summary> Convert into a Utf8JsonRequestContent. </summary>
        internal virtual RequestContent ToRequestContent()
        {
            var content = new Utf8JsonRequestContent();
            content.JsonWriter.WriteObjectValue(this);
            return content;
        }
    }
}
