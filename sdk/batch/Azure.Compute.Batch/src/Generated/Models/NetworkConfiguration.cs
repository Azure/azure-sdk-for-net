// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace BatchService.Models
{
    /// <summary> The network configuration for a Pool. </summary>
    public partial class NetworkConfiguration
    {
        /// <summary> Initializes a new instance of NetworkConfiguration. </summary>
        public NetworkConfiguration()
        {
        }

        /// <summary> Initializes a new instance of NetworkConfiguration. </summary>
        /// <param name="subnetId">
        /// The virtual network must be in the same region and subscription as the Azure
        /// Batch Account. The specified subnet should have enough free IP addresses to
        /// accommodate the number of Compute Nodes in the Pool. If the subnet doesn't have
        /// enough free IP addresses, the Pool will partially allocate Nodes and a resize
        /// error will occur. The 'MicrosoftAzureBatch' service principal must have the
        /// 'Classic Virtual Machine Contributor' Role-Based Access Control (RBAC) role for
        /// the specified VNet. The specified subnet must allow communication from the
        /// Azure Batch service to be able to schedule Tasks on the Nodes. This can be
        /// verified by checking if the specified VNet has any associated Network Security
        /// Groups (NSG). If communication to the Nodes in the specified subnet is denied
        /// by an NSG, then the Batch service will set the state of the Compute Nodes to
        /// unusable. For Pools created with virtualMachineConfiguration only ARM virtual
        /// networks ('Microsoft.Network/virtualNetworks') are supported, but for Pools
        /// created with cloudServiceConfiguration both ARM and classic virtual networks
        /// are supported. If the specified VNet has any associated Network Security Groups
        /// (NSG), then a few reserved system ports must be enabled for inbound
        /// communication. For Pools created with a virtual machine configuration, enable
        /// ports 29876 and 29877, as well as port 22 for Linux and port 3389 for Windows.
        /// For Pools created with a cloud service configuration, enable ports 10100,
        /// 20100, and 30100. Also enable outbound connections to Azure Storage on port
        /// 443. For more details see:
        /// https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration
        /// </param>
        /// <param name="dynamicVNetAssignmentScope"> The scope of dynamic vnet assignment. </param>
        /// <param name="endpointConfiguration">
        /// Pool endpoint configuration is only supported on Pools with the
        /// virtualMachineConfiguration property.
        /// </param>
        /// <param name="publicIPAddressConfiguration">
        /// Public IP configuration property is only supported on Pools with the
        /// virtualMachineConfiguration property.
        /// </param>
        internal NetworkConfiguration(string subnetId, DynamicVNetAssignmentScope? dynamicVNetAssignmentScope, PoolEndpointConfiguration endpointConfiguration, PublicIPAddressConfiguration publicIPAddressConfiguration)
        {
            SubnetId = subnetId;
            DynamicVNetAssignmentScope = dynamicVNetAssignmentScope;
            EndpointConfiguration = endpointConfiguration;
            PublicIPAddressConfiguration = publicIPAddressConfiguration;
        }

        /// <summary>
        /// The virtual network must be in the same region and subscription as the Azure
        /// Batch Account. The specified subnet should have enough free IP addresses to
        /// accommodate the number of Compute Nodes in the Pool. If the subnet doesn't have
        /// enough free IP addresses, the Pool will partially allocate Nodes and a resize
        /// error will occur. The 'MicrosoftAzureBatch' service principal must have the
        /// 'Classic Virtual Machine Contributor' Role-Based Access Control (RBAC) role for
        /// the specified VNet. The specified subnet must allow communication from the
        /// Azure Batch service to be able to schedule Tasks on the Nodes. This can be
        /// verified by checking if the specified VNet has any associated Network Security
        /// Groups (NSG). If communication to the Nodes in the specified subnet is denied
        /// by an NSG, then the Batch service will set the state of the Compute Nodes to
        /// unusable. For Pools created with virtualMachineConfiguration only ARM virtual
        /// networks ('Microsoft.Network/virtualNetworks') are supported, but for Pools
        /// created with cloudServiceConfiguration both ARM and classic virtual networks
        /// are supported. If the specified VNet has any associated Network Security Groups
        /// (NSG), then a few reserved system ports must be enabled for inbound
        /// communication. For Pools created with a virtual machine configuration, enable
        /// ports 29876 and 29877, as well as port 22 for Linux and port 3389 for Windows.
        /// For Pools created with a cloud service configuration, enable ports 10100,
        /// 20100, and 30100. Also enable outbound connections to Azure Storage on port
        /// 443. For more details see:
        /// https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration
        /// </summary>
        public string SubnetId { get; set; }
        /// <summary> The scope of dynamic vnet assignment. </summary>
        public DynamicVNetAssignmentScope? DynamicVNetAssignmentScope { get; set; }
        /// <summary>
        /// Pool endpoint configuration is only supported on Pools with the
        /// virtualMachineConfiguration property.
        /// </summary>
        public PoolEndpointConfiguration EndpointConfiguration { get; set; }
        /// <summary>
        /// Public IP configuration property is only supported on Pools with the
        /// virtualMachineConfiguration property.
        /// </summary>
        public PublicIPAddressConfiguration PublicIPAddressConfiguration { get; set; }
    }
}
