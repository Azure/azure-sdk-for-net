// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace BatchService.Models
{
    /// <summary> Specifies how the Batch service responds to a particular exit condition. </summary>
    public partial class ExitOptions
    {
        /// <summary> Initializes a new instance of ExitOptions. </summary>
        public ExitOptions()
        {
        }

        /// <summary> Initializes a new instance of ExitOptions. </summary>
        /// <param name="jobAction">
        /// The default is none for exit code 0 and terminate for all other exit
        /// conditions. If the Job's onTaskFailed property is noaction, then specifying
        /// this property returns an error and the add Task request fails with an invalid
        /// property value error; if you are calling the REST API directly, the HTTP status
        /// code is 400 (Bad Request).
        /// </param>
        /// <param name="dependencyAction">
        /// Possible values are 'satisfy' (allowing dependent tasks to progress) and
        /// 'block' (dependent tasks continue to wait). Batch does not yet support
        /// cancellation of dependent tasks.
        /// </param>
        internal ExitOptions(JobAction? jobAction, DependencyAction? dependencyAction)
        {
            JobAction = jobAction;
            DependencyAction = dependencyAction;
        }

        /// <summary>
        /// The default is none for exit code 0 and terminate for all other exit
        /// conditions. If the Job's onTaskFailed property is noaction, then specifying
        /// this property returns an error and the add Task request fails with an invalid
        /// property value error; if you are calling the REST API directly, the HTTP status
        /// code is 400 (Bad Request).
        /// </summary>
        public JobAction? JobAction { get; set; }
        /// <summary>
        /// Possible values are 'satisfy' (allowing dependent tasks to progress) and
        /// 'block' (dependent tasks continue to wait). Batch does not yet support
        /// cancellation of dependent tasks.
        /// </summary>
        public DependencyAction? DependencyAction { get; set; }
    }
}
