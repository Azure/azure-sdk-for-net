// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace BatchService.Models
{
    /// <summary> Statistics related to resource consumption by Compute Nodes in a Pool. </summary>
    public partial class ResourceStatistics
    {
        /// <summary> Initializes a new instance of ResourceStatistics. </summary>
        /// <param name="startTime"> The start time of the time range covered by the statistics. </param>
        /// <param name="lastUpdateTime">
        /// The time at which the statistics were last updated. All statistics are limited
        /// to the range between startTime and lastUpdateTime.
        /// </param>
        /// <param name="avgCPUPercentage">
        /// The average CPU usage across all Compute Nodes in the Pool (percentage per
        /// node).
        /// </param>
        /// <param name="avgMemoryGiB"> The average memory usage in GiB across all Compute Nodes in the Pool. </param>
        /// <param name="peakMemoryGiB"> The peak memory usage in GiB across all Compute Nodes in the Pool. </param>
        /// <param name="avgDiskGiB"> The average used disk space in GiB across all Compute Nodes in the Pool. </param>
        /// <param name="peakDiskGiB"> The peak used disk space in GiB across all Compute Nodes in the Pool. </param>
        /// <param name="diskReadIOps"> The total number of disk read operations across all Compute Nodes in the Pool. </param>
        /// <param name="diskWriteIOps"> The total number of disk write operations across all Compute Nodes in the Pool. </param>
        /// <param name="diskReadGiB">
        /// The total amount of data in GiB of disk reads across all Compute Nodes in the
        /// Pool.
        /// </param>
        /// <param name="diskWriteGiB">
        /// The total amount of data in GiB of disk writes across all Compute Nodes in the
        /// Pool.
        /// </param>
        /// <param name="networkReadGiB">
        /// The total amount of data in GiB of network reads across all Compute Nodes in
        /// the Pool.
        /// </param>
        /// <param name="networkWriteGiB">
        /// The total amount of data in GiB of network writes across all Compute Nodes in
        /// the Pool.
        /// </param>
        public ResourceStatistics(DateTimeOffset startTime, DateTimeOffset lastUpdateTime, float avgCPUPercentage, float avgMemoryGiB, float peakMemoryGiB, float avgDiskGiB, float peakDiskGiB, int diskReadIOps, int diskWriteIOps, float diskReadGiB, float diskWriteGiB, float networkReadGiB, float networkWriteGiB)
        {
            StartTime = startTime;
            LastUpdateTime = lastUpdateTime;
            AvgCPUPercentage = avgCPUPercentage;
            AvgMemoryGiB = avgMemoryGiB;
            PeakMemoryGiB = peakMemoryGiB;
            AvgDiskGiB = avgDiskGiB;
            PeakDiskGiB = peakDiskGiB;
            DiskReadIOps = diskReadIOps;
            DiskWriteIOps = diskWriteIOps;
            DiskReadGiB = diskReadGiB;
            DiskWriteGiB = diskWriteGiB;
            NetworkReadGiB = networkReadGiB;
            NetworkWriteGiB = networkWriteGiB;
        }

        /// <summary> The start time of the time range covered by the statistics. </summary>
        public DateTimeOffset StartTime { get; set; }
        /// <summary>
        /// The time at which the statistics were last updated. All statistics are limited
        /// to the range between startTime and lastUpdateTime.
        /// </summary>
        public DateTimeOffset LastUpdateTime { get; set; }
        /// <summary>
        /// The average CPU usage across all Compute Nodes in the Pool (percentage per
        /// node).
        /// </summary>
        public float AvgCPUPercentage { get; set; }
        /// <summary> The average memory usage in GiB across all Compute Nodes in the Pool. </summary>
        public float AvgMemoryGiB { get; set; }
        /// <summary> The peak memory usage in GiB across all Compute Nodes in the Pool. </summary>
        public float PeakMemoryGiB { get; set; }
        /// <summary> The average used disk space in GiB across all Compute Nodes in the Pool. </summary>
        public float AvgDiskGiB { get; set; }
        /// <summary> The peak used disk space in GiB across all Compute Nodes in the Pool. </summary>
        public float PeakDiskGiB { get; set; }
        /// <summary> The total number of disk read operations across all Compute Nodes in the Pool. </summary>
        public int DiskReadIOps { get; set; }
        /// <summary> The total number of disk write operations across all Compute Nodes in the Pool. </summary>
        public int DiskWriteIOps { get; set; }
        /// <summary>
        /// The total amount of data in GiB of disk reads across all Compute Nodes in the
        /// Pool.
        /// </summary>
        public float DiskReadGiB { get; set; }
        /// <summary>
        /// The total amount of data in GiB of disk writes across all Compute Nodes in the
        /// Pool.
        /// </summary>
        public float DiskWriteGiB { get; set; }
        /// <summary>
        /// The total amount of data in GiB of network reads across all Compute Nodes in
        /// the Pool.
        /// </summary>
        public float NetworkReadGiB { get; set; }
        /// <summary>
        /// The total amount of data in GiB of network writes across all Compute Nodes in
        /// the Pool.
        /// </summary>
        public float NetworkWriteGiB { get; set; }
    }
}
