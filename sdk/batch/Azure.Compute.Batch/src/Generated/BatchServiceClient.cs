// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.Core.Pipeline;

namespace BatchService
{
    // Data plane generated client.
    /// <summary> The BatchService service client. </summary>
    public partial class BatchServiceClient
    {
        private static readonly string[] AuthorizationScopes = new string[] { "https://batch.core.windows.net//.default" };
        private readonly TokenCredential _tokenCredential;
        private readonly HttpPipeline _pipeline;

        /// <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        internal ClientDiagnostics ClientDiagnostics { get; }

        /// <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        public virtual HttpPipeline Pipeline => _pipeline;

        /// <summary> Initializes a new instance of BatchServiceClient for mocking. </summary>
        protected BatchServiceClient()
        {
        }

        /// <summary> Initializes a new instance of BatchServiceClient. </summary>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="credential"/> is null. </exception>
        public BatchServiceClient(TokenCredential credential) : this(credential, new BatchServiceClientOptions())
        {
        }

        /// <summary> Initializes a new instance of BatchServiceClient. </summary>
        /// <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="credential"/> is null. </exception>
        public BatchServiceClient(TokenCredential credential, BatchServiceClientOptions options)
        {
            Argument.AssertNotNull(credential, nameof(credential));
            options ??= new BatchServiceClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _tokenCredential = credential;
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), new HttpPipelinePolicy[] { new BearerTokenAuthenticationPolicy(_tokenCredential, AuthorizationScopes) }, new ResponseClassifier());
        }

        /// <summary> Initializes a new instance of Applications. </summary>
        /// <param name="apiVersion"> The String to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="apiVersion"/> is null. </exception>
        public virtual Applications GetApplicationsClient(string apiVersion = "2022-10-01.16.0")
        {
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new Applications(ClientDiagnostics, _pipeline, _tokenCredential, apiVersion);
        }

        /// <summary> Initializes a new instance of Pool. </summary>
        /// <param name="apiVersion"> The String to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="apiVersion"/> is null. </exception>
        public virtual Pool GetPoolClient(string apiVersion = "2022-10-01.16.0")
        {
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new Pool(ClientDiagnostics, _pipeline, _tokenCredential, apiVersion);
        }

        /// <summary> Initializes a new instance of Account. </summary>
        /// <param name="apiVersion"> The String to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="apiVersion"/> is null. </exception>
        public virtual Account GetAccountClient(string apiVersion = "2022-10-01.16.0")
        {
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new Account(ClientDiagnostics, _pipeline, _tokenCredential, apiVersion);
        }

        /// <summary> Initializes a new instance of Job. </summary>
        /// <param name="apiVersion"> The String to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="apiVersion"/> is null. </exception>
        public virtual Job GetJobClient(string apiVersion = "2022-10-01.16.0")
        {
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new Job(ClientDiagnostics, _pipeline, _tokenCredential, apiVersion);
        }

        /// <summary> Initializes a new instance of Certificates. </summary>
        /// <param name="apiVersion"> The String to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="apiVersion"/> is null. </exception>
        public virtual Certificates GetCertificatesClient(string apiVersion = "2022-10-01.16.0")
        {
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new Certificates(ClientDiagnostics, _pipeline, _tokenCredential, apiVersion);
        }

        /// <summary> Initializes a new instance of File. </summary>
        /// <param name="apiVersion"> The String to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="apiVersion"/> is null. </exception>
        public virtual File GetFileClient(string apiVersion = "2022-10-01.16.0")
        {
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new File(ClientDiagnostics, _pipeline, _tokenCredential, apiVersion);
        }

        /// <summary> Initializes a new instance of JobSchedule. </summary>
        /// <param name="apiVersion"> The String to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="apiVersion"/> is null. </exception>
        public virtual JobSchedule GetJobScheduleClient(string apiVersion = "2022-10-01.16.0")
        {
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new JobSchedule(ClientDiagnostics, _pipeline, _tokenCredential, apiVersion);
        }

        /// <summary> Initializes a new instance of Task. </summary>
        /// <param name="apiVersion"> The String to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="apiVersion"/> is null. </exception>
        public virtual Task GetTaskClient(string apiVersion = "2022-10-01.16.0")
        {
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new Task(ClientDiagnostics, _pipeline, _tokenCredential, apiVersion);
        }

        /// <summary> Initializes a new instance of ComputeNodes. </summary>
        /// <param name="apiVersion"> The String to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="apiVersion"/> is null. </exception>
        public virtual ComputeNodes GetComputeNodesClient(string apiVersion = "2022-10-01.16.0")
        {
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new ComputeNodes(ClientDiagnostics, _pipeline, _tokenCredential, apiVersion);
        }

        /// <summary> Initializes a new instance of ComputeNodeExtensions. </summary>
        /// <param name="apiVersion"> The String to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="apiVersion"/> is null. </exception>
        public virtual ComputeNodeExtensions GetComputeNodeExtensionsClient(string apiVersion = "2022-10-01.16.0")
        {
            Argument.AssertNotNull(apiVersion, nameof(apiVersion));

            return new ComputeNodeExtensions(ClientDiagnostics, _pipeline, _tokenCredential, apiVersion);
        }
    }
}
