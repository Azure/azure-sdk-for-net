// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Batch
{
    /// <summary>
    /// The Batch service does not assign any meaning to this metadata; it is solely
    /// for the use of user code.
    /// </summary>
    public partial class MetadataItem
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="MetadataItem"/>. </summary>
        /// <param name="name"> The name of the metadata item. </param>
        /// <param name="value"> The value of the metadata item. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> or <paramref name="value"/> is null. </exception>
        public MetadataItem(string name, string value)
        {
            Argument.AssertNotNull(name, nameof(name));
            Argument.AssertNotNull(value, nameof(value));

            Name = name;
            Value = value;
        }

        /// <summary> Initializes a new instance of <see cref="MetadataItem"/>. </summary>
        /// <param name="name"> The name of the metadata item. </param>
        /// <param name="value"> The value of the metadata item. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal MetadataItem(string name, string value, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Name = name;
            Value = value;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The name of the metadata item. </summary>
        public string Name { get; set; }

        /// <summary> The value of the metadata item. </summary>
        public string Value { get; set; }
    }
}
