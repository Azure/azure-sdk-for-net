// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Compute.Batch
{
    /// <summary> Parameters for creating an Azure Batch Job Schedule. </summary>
    public partial class BatchJobScheduleCreateOptions
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="BatchJobScheduleCreateOptions"/>. </summary>
        /// <param name="id"> A string that uniquely identifies the schedule within the Account. The ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not have two IDs within an Account that differ only by case). </param>
        /// <param name="schedule"> The schedule according to which Jobs will be created. All times are fixed respective to UTC and are not impacted by daylight saving time. </param>
        /// <param name="jobSpecification"> The details of the Jobs to be created on this schedule. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/>, <paramref name="schedule"/> or <paramref name="jobSpecification"/> is null. </exception>
        public BatchJobScheduleCreateOptions(string id, BatchJobScheduleConfiguration schedule, BatchJobSpecification jobSpecification)
        {
            Argument.AssertNotNull(id, nameof(id));
            Argument.AssertNotNull(schedule, nameof(schedule));
            Argument.AssertNotNull(jobSpecification, nameof(jobSpecification));

            Id = id;
            Schedule = schedule;
            JobSpecification = jobSpecification;
            Metadata = new ChangeTrackingList<BatchMetadataItem>();
        }

        /// <summary> Initializes a new instance of <see cref="BatchJobScheduleCreateOptions"/>. </summary>
        /// <param name="id"> A string that uniquely identifies the schedule within the Account. The ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not have two IDs within an Account that differ only by case). </param>
        /// <param name="displayName"> The display name for the schedule. The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024. </param>
        /// <param name="schedule"> The schedule according to which Jobs will be created. All times are fixed respective to UTC and are not impacted by daylight saving time. </param>
        /// <param name="jobSpecification"> The details of the Jobs to be created on this schedule. </param>
        /// <param name="metadata"> A list of name-value pairs associated with the schedule as metadata. The Batch service does not assign any meaning to metadata; it is solely for the use of user code. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal BatchJobScheduleCreateOptions(string id, string displayName, BatchJobScheduleConfiguration schedule, BatchJobSpecification jobSpecification, IList<BatchMetadataItem> metadata, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Id = id;
            DisplayName = displayName;
            Schedule = schedule;
            JobSpecification = jobSpecification;
            Metadata = metadata;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> A string that uniquely identifies the schedule within the Account. The ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not have two IDs within an Account that differ only by case). </summary>
        public string Id { get; }

        /// <summary> The display name for the schedule. The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024. </summary>
        public string DisplayName { get; set; }

        /// <summary> The schedule according to which Jobs will be created. All times are fixed respective to UTC and are not impacted by daylight saving time. </summary>
        public BatchJobScheduleConfiguration Schedule { get; }

        /// <summary> The details of the Jobs to be created on this schedule. </summary>
        public BatchJobSpecification JobSpecification { get; }

        /// <summary> A list of name-value pairs associated with the schedule as metadata. The Batch service does not assign any meaning to metadata; it is solely for the use of user code. </summary>
        public IList<BatchMetadataItem> Metadata { get; }
    }
}
