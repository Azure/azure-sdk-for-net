// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.Batch
{
    /// <summary> Contains information about an application in an Azure Batch Account. </summary>
    public partial class BatchApplication
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="BatchApplication"/>. </summary>
        /// <param name="id"> A string that uniquely identifies the application within the Account. </param>
        /// <param name="displayName"> The display name for the application. </param>
        /// <param name="versions"> The list of available versions of the application. </param>
        internal BatchApplication(string id, string displayName, IEnumerable<string> versions)
        {
            Id = id;
            DisplayName = displayName;
            Versions = versions.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="BatchApplication"/>. </summary>
        /// <param name="id"> A string that uniquely identifies the application within the Account. </param>
        /// <param name="displayName"> The display name for the application. </param>
        /// <param name="versions"> The list of available versions of the application. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal BatchApplication(string id, string displayName, IList<string> versions, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Id = id;
            DisplayName = displayName;
            Versions = versions;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> A string that uniquely identifies the application within the Account. </summary>
        public string Id { get; }

        /// <summary> The display name for the application. </summary>
        public string DisplayName { get; }

        /// <summary> The list of available versions of the application. </summary>
        public IList<string> Versions { get; }
    }
}
