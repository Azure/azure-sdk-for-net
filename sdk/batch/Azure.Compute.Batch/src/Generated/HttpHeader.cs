// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Batch
{
    /// <summary> An HTTP header name-value pair. </summary>
    public partial class HttpHeader
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="HttpHeader"/>. </summary>
        /// <param name="name"> The case-insensitive name of the header to be used while uploading output files. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> is null. </exception>
        public HttpHeader(string name)
        {
            Argument.AssertNotNull(name, nameof(name));

            Name = name;
        }

        /// <summary> Initializes a new instance of <see cref="HttpHeader"/>. </summary>
        /// <param name="name"> The case-insensitive name of the header to be used while uploading output files. </param>
        /// <param name="value"> The value of the header to be used while uploading output files. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal HttpHeader(string name, string value, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Name = name;
            Value = value;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The case-insensitive name of the header to be used while uploading output files. </summary>
        public string Name { get; set; }

        /// <summary> The value of the header to be used while uploading output files. </summary>
        public string Value { get; set; }
    }
}
