// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Batch
{
    /// <summary> Statistics related to Pool usage information. </summary>
    public partial class BatchPoolUsageStatistics
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="BatchPoolUsageStatistics"/>. </summary>
        /// <param name="startTime"> The start time of the time range covered by the statistics. </param>
        /// <param name="lastUpdateTime"> The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime. </param>
        /// <param name="dedicatedCoreTime"> The aggregated wall-clock time of the dedicated Compute Node cores being part of the Pool. </param>
        internal BatchPoolUsageStatistics(DateTimeOffset startTime, DateTimeOffset lastUpdateTime, TimeSpan dedicatedCoreTime)
        {
            StartTime = startTime;
            LastUpdateTime = lastUpdateTime;
            DedicatedCoreTime = dedicatedCoreTime;
        }

        /// <summary> Initializes a new instance of <see cref="BatchPoolUsageStatistics"/>. </summary>
        /// <param name="startTime"> The start time of the time range covered by the statistics. </param>
        /// <param name="lastUpdateTime"> The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime. </param>
        /// <param name="dedicatedCoreTime"> The aggregated wall-clock time of the dedicated Compute Node cores being part of the Pool. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal BatchPoolUsageStatistics(DateTimeOffset startTime, DateTimeOffset lastUpdateTime, TimeSpan dedicatedCoreTime, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            StartTime = startTime;
            LastUpdateTime = lastUpdateTime;
            DedicatedCoreTime = dedicatedCoreTime;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The start time of the time range covered by the statistics. </summary>
        public DateTimeOffset StartTime { get; }

        /// <summary> The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime. </summary>
        public DateTimeOffset LastUpdateTime { get; }

        /// <summary> The aggregated wall-clock time of the dedicated Compute Node cores being part of the Pool. </summary>
        public TimeSpan DedicatedCoreTime { get; }
    }
}
