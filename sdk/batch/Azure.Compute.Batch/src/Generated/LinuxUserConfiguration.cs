// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Batch
{
    /// <summary> Properties used to create a user Account on a Linux Compute Node. </summary>
    public partial class LinuxUserConfiguration
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="LinuxUserConfiguration"/>. </summary>
        public LinuxUserConfiguration()
        {
        }

        /// <summary> Initializes a new instance of <see cref="LinuxUserConfiguration"/>. </summary>
        /// <param name="uid"> The user ID of the user Account. The uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the uid. </param>
        /// <param name="gid"> The group ID for the user Account. The uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the gid. </param>
        /// <param name="sshPrivateKey"> The SSH private key for the user Account. The private key must not be password protected. The private key is used to automatically configure asymmetric-key based authentication for SSH between Compute Nodes in a Linux Pool when the Pool's enableInterNodeCommunication property is true (it is ignored if enableInterNodeCommunication is false). It does this by placing the key pair into the user's .ssh directory. If not specified, password-less SSH is not configured between Compute Nodes (no modification of the user's .ssh directory is done). </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal LinuxUserConfiguration(int? uid, int? gid, string sshPrivateKey, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Uid = uid;
            Gid = gid;
            SshPrivateKey = sshPrivateKey;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The user ID of the user Account. The uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the uid. </summary>
        public int? Uid { get; set; }

        /// <summary> The group ID for the user Account. The uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the gid. </summary>
        public int? Gid { get; set; }

        /// <summary> The SSH private key for the user Account. The private key must not be password protected. The private key is used to automatically configure asymmetric-key based authentication for SSH between Compute Nodes in a Linux Pool when the Pool's enableInterNodeCommunication property is true (it is ignored if enableInterNodeCommunication is false). It does this by placing the key pair into the user's .ssh directory. If not specified, password-less SSH is not configured between Compute Nodes (no modification of the user's .ssh directory is done). </summary>
        public string SshPrivateKey { get; set; }
    }
}
