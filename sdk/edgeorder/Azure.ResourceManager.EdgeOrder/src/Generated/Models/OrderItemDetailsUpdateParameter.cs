// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.EdgeOrder.Models
{
    /// <summary> Order item details Patchable Properties. </summary>
    public partial class OrderItemDetailsUpdateParameter
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="OrderItemDetailsUpdateParameter"/>. </summary>
        public OrderItemDetailsUpdateParameter()
        {
        }

        /// <summary> Initializes a new instance of <see cref="OrderItemDetailsUpdateParameter"/>. </summary>
        /// <param name="productDetails"> Represents product details. </param>
        /// <param name="siteDetails"> Site Related Details. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal OrderItemDetailsUpdateParameter(ProductDetailsUpdateParameter productDetails, SiteDetails siteDetails, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            ProductDetails = productDetails;
            SiteDetails = siteDetails;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Represents product details. </summary>
        internal ProductDetailsUpdateParameter ProductDetails { get; set; }
        /// <summary> Device Provisioning Details for Parent. </summary>
        public ProvisioningDetails ParentProvisioningDetails
        {
            get => ProductDetails is null ? default : ProductDetails.ParentProvisioningDetails;
            set
            {
                if (ProductDetails is null)
                    ProductDetails = new ProductDetailsUpdateParameter();
                ProductDetails.ParentProvisioningDetails = value;
            }
        }

        /// <summary> Site Related Details. </summary>
        internal SiteDetails SiteDetails { get; set; }
        /// <summary> Unique Id, Identifying A Site. </summary>
        public string SiteId
        {
            get => SiteDetails is null ? default : SiteDetails.SiteId;
            set => SiteDetails = new SiteDetails(value);
        }
    }
}
