// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.EdgeOrder.Models
{
    public partial class ProvisioningDetails : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(AutoProvisioningStatus))
            {
                writer.WritePropertyName("autoProvisioningStatus"u8);
                writer.WriteStringValue(AutoProvisioningStatus.Value.ToString());
            }
            if (Optional.IsDefined(Quantity))
            {
                writer.WritePropertyName("quantity"u8);
                writer.WriteNumberValue(Quantity.Value);
            }
            if (Optional.IsDefined(ProvisioningArmId))
            {
                writer.WritePropertyName("provisioningArmId"u8);
                writer.WriteStringValue(ProvisioningArmId);
            }
            if (Optional.IsDefined(ProvisioningEndPoint))
            {
                writer.WritePropertyName("provisioningEndPoint"u8);
                writer.WriteStringValue(ProvisioningEndPoint);
            }
            if (Optional.IsDefined(SerialNumber))
            {
                writer.WritePropertyName("serialNumber"u8);
                writer.WriteStringValue(SerialNumber);
            }
            if (Optional.IsDefined(VendorName))
            {
                writer.WritePropertyName("vendorName"u8);
                writer.WriteStringValue(VendorName);
            }
            if (Optional.IsDefined(ReadyToConnectArmId))
            {
                writer.WritePropertyName("readyToConnectArmId"u8);
                writer.WriteStringValue(ReadyToConnectArmId);
            }
            if (Optional.IsDefined(ManagementResourceArmId))
            {
                writer.WritePropertyName("managementResourceArmId"u8);
                writer.WriteStringValue(ManagementResourceArmId);
            }
            writer.WriteEndObject();
        }

        internal static ProvisioningDetails DeserializeProvisioningDetails(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<AutoProvisioningStatus> autoProvisioningStatus = default;
            Optional<int> quantity = default;
            Optional<string> provisioningArmId = default;
            Optional<string> provisioningEndPoint = default;
            Optional<string> serialNumber = default;
            Optional<string> vendorName = default;
            Optional<string> readyToConnectArmId = default;
            Optional<string> managementResourceArmId = default;
            Optional<string> uniqueDeviceIdentifier = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("autoProvisioningStatus"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    autoProvisioningStatus = new AutoProvisioningStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("quantity"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    quantity = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("provisioningArmId"u8))
                {
                    provisioningArmId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("provisioningEndPoint"u8))
                {
                    provisioningEndPoint = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("serialNumber"u8))
                {
                    serialNumber = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("vendorName"u8))
                {
                    vendorName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("readyToConnectArmId"u8))
                {
                    readyToConnectArmId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("managementResourceArmId"u8))
                {
                    managementResourceArmId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("uniqueDeviceIdentifier"u8))
                {
                    uniqueDeviceIdentifier = property.Value.GetString();
                    continue;
                }
            }
            return new ProvisioningDetails(Optional.ToNullable(autoProvisioningStatus), Optional.ToNullable(quantity), provisioningArmId.Value, provisioningEndPoint.Value, serialNumber.Value, vendorName.Value, readyToConnectArmId.Value, managementResourceArmId.Value, uniqueDeviceIdentifier.Value);
        }
    }
}
