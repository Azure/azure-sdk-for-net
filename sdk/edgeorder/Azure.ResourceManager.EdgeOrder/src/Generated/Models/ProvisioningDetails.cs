// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.EdgeOrder.Models
{
    /// <summary> Details Related To Provision Resource. </summary>
    public partial class ProvisioningDetails
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ProvisioningDetails"/>. </summary>
        public ProvisioningDetails()
        {
        }

        /// <summary> Initializes a new instance of <see cref="ProvisioningDetails"/>. </summary>
        /// <param name="quantity"> Quantity of the devices. </param>
        /// <param name="provisioningArmId"> Provisioning Resource Arm ID. </param>
        /// <param name="provisioningEndPoint"> Provisioning End Point. </param>
        /// <param name="serialNumber"> Serial Number for the Device. </param>
        /// <param name="vendorName"> Vendor Name for the Device , (for 1P devices - Microsoft). </param>
        /// <param name="readyToConnectArmId"> Arc Enabled Resource Arm id. </param>
        /// <param name="managementResourceArmId"> Management Resource ArmId. </param>
        /// <param name="uniqueDeviceIdentifier"> Unique Identity for a Device. </param>
        /// <param name="autoProvisioningStatus"> Auto Provisioning Details. </param>
        /// <param name="devicePresenceVerification"> Proof of possession details. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ProvisioningDetails(int? quantity, ResourceIdentifier provisioningArmId, string provisioningEndPoint, string serialNumber, string vendorName, ResourceIdentifier readyToConnectArmId, ResourceIdentifier managementResourceArmId, string uniqueDeviceIdentifier, AutoProvisioningStatus? autoProvisioningStatus, DevicePresenceVerificationDetails devicePresenceVerification, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Quantity = quantity;
            ProvisioningArmId = provisioningArmId;
            ProvisioningEndPoint = provisioningEndPoint;
            SerialNumber = serialNumber;
            VendorName = vendorName;
            ReadyToConnectArmId = readyToConnectArmId;
            ManagementResourceArmId = managementResourceArmId;
            UniqueDeviceIdentifier = uniqueDeviceIdentifier;
            AutoProvisioningStatus = autoProvisioningStatus;
            DevicePresenceVerification = devicePresenceVerification;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Quantity of the devices. </summary>
        public int? Quantity { get; set; }
        /// <summary> Provisioning Resource Arm ID. </summary>
        public ResourceIdentifier ProvisioningArmId { get; set; }
        /// <summary> Provisioning End Point. </summary>
        public string ProvisioningEndPoint { get; set; }
        /// <summary> Serial Number for the Device. </summary>
        public string SerialNumber { get; set; }
        /// <summary> Vendor Name for the Device , (for 1P devices - Microsoft). </summary>
        public string VendorName { get; set; }
        /// <summary> Arc Enabled Resource Arm id. </summary>
        public ResourceIdentifier ReadyToConnectArmId { get; set; }
        /// <summary> Management Resource ArmId. </summary>
        public ResourceIdentifier ManagementResourceArmId { get; set; }
        /// <summary> Unique Identity for a Device. </summary>
        public string UniqueDeviceIdentifier { get; }
        /// <summary> Auto Provisioning Details. </summary>
        public AutoProvisioningStatus? AutoProvisioningStatus { get; set; }
        /// <summary> Proof of possession details. </summary>
        public DevicePresenceVerificationDetails DevicePresenceVerification { get; set; }
    }
}
