// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.EdgeOrder.Models
{
    public partial class ProductDescription
    {
        internal static ProductDescription DeserializeProductDescription(JsonElement element)
        {
            Optional<DescriptionType> descriptionType = default;
            Optional<string> shortDescription = default;
            Optional<string> longDescription = default;
            Optional<IReadOnlyList<string>> keywords = default;
            Optional<IReadOnlyList<string>> attributes = default;
            Optional<IReadOnlyList<ProductLink>> links = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("descriptionType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    descriptionType = new DescriptionType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("shortDescription"))
                {
                    shortDescription = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("longDescription"))
                {
                    longDescription = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("keywords"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    keywords = array;
                    continue;
                }
                if (property.NameEquals("attributes"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    attributes = array;
                    continue;
                }
                if (property.NameEquals("links"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<ProductLink> array = new List<ProductLink>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ProductLink.DeserializeProductLink(item));
                    }
                    links = array;
                    continue;
                }
            }
            return new ProductDescription(Optional.ToNullable(descriptionType), shortDescription.Value, longDescription.Value, Optional.ToList(keywords), Optional.ToList(attributes), Optional.ToList(links));
        }
    }
}
