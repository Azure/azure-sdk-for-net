// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.EdgeOrder.Models
{
    public partial class MeterDetails
    {
        internal static MeterDetails DeserializeMeterDetails(JsonElement element)
        {
            if (element.TryGetProperty("billingType", out JsonElement discriminator))
            {
                switch (discriminator.GetString())
                {
                    case "Pav2": return Pav2MeterDetails.DeserializePav2MeterDetails(element);
                    case "Purchase": return PurchaseMeterDetails.DeserializePurchaseMeterDetails(element);
                }
            }
            BillingType billingType = default;
            Optional<double> multiplier = default;
            Optional<ChargingType> chargingType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("billingType"))
                {
                    billingType = new BillingType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("multiplier"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    multiplier = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("chargingType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    chargingType = new ChargingType(property.Value.GetString());
                    continue;
                }
            }
            return new MeterDetails(billingType, Optional.ToNullable(multiplier), Optional.ToNullable(chargingType));
        }
    }
}
