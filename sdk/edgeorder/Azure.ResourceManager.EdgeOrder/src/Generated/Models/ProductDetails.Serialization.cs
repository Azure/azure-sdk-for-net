// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.EdgeOrder.Models
{
    public partial class ProductDetails : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(DisplayInfo))
            {
                writer.WritePropertyName("displayInfo"u8);
                writer.WriteObjectValue(DisplayInfo);
            }
            writer.WritePropertyName("hierarchyInformation"u8);
            writer.WriteObjectValue(HierarchyInformation);
            if (Optional.IsDefined(ParentProvisioningDetails))
            {
                writer.WritePropertyName("parentProvisioningDetails"u8);
                writer.WriteObjectValue(ParentProvisioningDetails);
            }
            if (Optional.IsCollectionDefined(OptInAdditionalConfigurations))
            {
                writer.WritePropertyName("optInAdditionalConfigurations"u8);
                writer.WriteStartArray();
                foreach (var item in OptInAdditionalConfigurations)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static ProductDetails DeserializeProductDetails(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<ProductDisplayInfo> displayInfo = default;
            HierarchyInformation hierarchyInformation = default;
            Optional<DoubleEncryptionStatus> productDoubleEncryptionStatus = default;
            Optional<IdentificationType> identificationType = default;
            Optional<EdgeOrderProductDeviceDetails> parentDeviceDetails = default;
            Optional<ProvisioningDetails> parentProvisioningDetails = default;
            Optional<IList<AdditionalConfiguration>> optInAdditionalConfigurations = default;
            Optional<IReadOnlyList<ConfigurationDeviceDetails>> childConfigurationDeviceDetails = default;
            Optional<TermCommitmentInformation> termCommitmentInformation = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("displayInfo"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    displayInfo = ProductDisplayInfo.DeserializeProductDisplayInfo(property.Value);
                    continue;
                }
                if (property.NameEquals("hierarchyInformation"u8))
                {
                    hierarchyInformation = HierarchyInformation.DeserializeHierarchyInformation(property.Value);
                    continue;
                }
                if (property.NameEquals("productDoubleEncryptionStatus"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    productDoubleEncryptionStatus = new DoubleEncryptionStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("identificationType"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    identificationType = new IdentificationType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("parentDeviceDetails"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    parentDeviceDetails = EdgeOrderProductDeviceDetails.DeserializeEdgeOrderProductDeviceDetails(property.Value);
                    continue;
                }
                if (property.NameEquals("parentProvisioningDetails"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    parentProvisioningDetails = ProvisioningDetails.DeserializeProvisioningDetails(property.Value);
                    continue;
                }
                if (property.NameEquals("optInAdditionalConfigurations"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<AdditionalConfiguration> array = new List<AdditionalConfiguration>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(AdditionalConfiguration.DeserializeAdditionalConfiguration(item));
                    }
                    optInAdditionalConfigurations = array;
                    continue;
                }
                if (property.NameEquals("childConfigurationDeviceDetails"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<ConfigurationDeviceDetails> array = new List<ConfigurationDeviceDetails>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ConfigurationDeviceDetails.DeserializeConfigurationDeviceDetails(item));
                    }
                    childConfigurationDeviceDetails = array;
                    continue;
                }
                if (property.NameEquals("termCommitmentInformation"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    termCommitmentInformation = TermCommitmentInformation.DeserializeTermCommitmentInformation(property.Value);
                    continue;
                }
            }
            return new ProductDetails(displayInfo.Value, hierarchyInformation, Optional.ToNullable(productDoubleEncryptionStatus), Optional.ToNullable(identificationType), parentDeviceDetails.Value, parentProvisioningDetails.Value, Optional.ToList(optInAdditionalConfigurations), Optional.ToList(childConfigurationDeviceDetails), termCommitmentInformation.Value);
        }
    }
}
