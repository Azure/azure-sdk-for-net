// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.EdgeOrder.Models
{
    /// <summary> Configuration object. </summary>
    public partial class ProductConfiguration
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ProductConfiguration"/>. </summary>
        internal ProductConfiguration()
        {
            Specifications = new ChangeTrackingList<ProductSpecification>();
            ChildConfigurationTypes = new ChangeTrackingList<ChildConfigurationType>();
            GroupedChildConfigurations = new ChangeTrackingList<GroupedChildConfigurations>();
            SupportedTermCommitmentDurations = new ChangeTrackingList<TimeSpan>();
            ImageInformation = new ChangeTrackingList<EdgeOrderProductImageInformation>();
            FilterableProperties = new ChangeTrackingList<FilterableProperty>();
        }

        /// <summary> Initializes a new instance of <see cref="ProductConfiguration"/>. </summary>
        /// <param name="specifications"> Specifications of the configuration. </param>
        /// <param name="dimensions"> Dimensions of the configuration. </param>
        /// <param name="provisioningSupport"> Determining nature of provisioning that the configuration supports. </param>
        /// <param name="childConfigurationTypes"> Different types of child configurations which exist for this configuration, these can be used to populate the child configuration filter. </param>
        /// <param name="groupedChildConfigurations"> Child configurations present for the configuration after applying child configuration filter, grouped by the category name of the child configuration. </param>
        /// <param name="supportedTermCommitmentDurations"> The Term Commitment Durations that are supported for a configuration. </param>
        /// <param name="displayName"></param>
        /// <param name="description"></param>
        /// <param name="imageInformation"></param>
        /// <param name="costInformation"></param>
        /// <param name="availabilityInformation"></param>
        /// <param name="hierarchyInformation"></param>
        /// <param name="filterableProperties"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ProductConfiguration(IReadOnlyList<ProductSpecification> specifications, ProductDimensions dimensions, EdgeOrderProvisioningSupport? provisioningSupport, IReadOnlyList<ChildConfigurationType> childConfigurationTypes, IReadOnlyList<GroupedChildConfigurations> groupedChildConfigurations, IReadOnlyList<TimeSpan> supportedTermCommitmentDurations, string displayName, ProductDescription description, IReadOnlyList<EdgeOrderProductImageInformation> imageInformation, EdgeOrderProductCostInformation costInformation, ProductAvailabilityInformation availabilityInformation, HierarchyInformation hierarchyInformation, IReadOnlyList<FilterableProperty> filterableProperties, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Specifications = specifications;
            Dimensions = dimensions;
            ProvisioningSupport = provisioningSupport;
            ChildConfigurationTypes = childConfigurationTypes;
            GroupedChildConfigurations = groupedChildConfigurations;
            SupportedTermCommitmentDurations = supportedTermCommitmentDurations;
            DisplayName = displayName;
            Description = description;
            ImageInformation = imageInformation;
            CostInformation = costInformation;
            AvailabilityInformation = availabilityInformation;
            HierarchyInformation = hierarchyInformation;
            FilterableProperties = filterableProperties;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Specifications of the configuration. </summary>
        public IReadOnlyList<ProductSpecification> Specifications { get; }
        /// <summary> Dimensions of the configuration. </summary>
        public ProductDimensions Dimensions { get; }
        /// <summary> Determining nature of provisioning that the configuration supports. </summary>
        public EdgeOrderProvisioningSupport? ProvisioningSupport { get; }
        /// <summary> Different types of child configurations which exist for this configuration, these can be used to populate the child configuration filter. </summary>
        public IReadOnlyList<ChildConfigurationType> ChildConfigurationTypes { get; }
        /// <summary> Child configurations present for the configuration after applying child configuration filter, grouped by the category name of the child configuration. </summary>
        public IReadOnlyList<GroupedChildConfigurations> GroupedChildConfigurations { get; }
        /// <summary> The Term Commitment Durations that are supported for a configuration. </summary>
        public IReadOnlyList<TimeSpan> SupportedTermCommitmentDurations { get; }
    }
}
