// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.EdgeOrder;
using Azure.ResourceManager.EdgeOrder.Models;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.EdgeOrder.Samples
{
    public partial class Sample_EdgeOrderItemCollection
    {
        // ListOrderItemsAtResourceGroupLevel
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetAll_ListOrderItemsAtResourceGroupLevel()
        {
            // Generated from example definition: specification/edgeorder/resource-manager/Microsoft.EdgeOrder/preview/2023-05-01-preview/examples/ListOrderItemsAtResourceGroupLevel.json
            // this example is just showing the usage of "OrderItems_ListByResourceGroup" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "YourSubscriptionId";
            string resourceGroupName = "YourResourceGroupName";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // get the collection of this EdgeOrderItemResource
            EdgeOrderItemCollection collection = resourceGroupResource.GetEdgeOrderItems();

            // invoke the operation and iterate over the result
            await foreach (EdgeOrderItemResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                EdgeOrderItemData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine($"Succeeded");
        }

        // GetOrderItemByName
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetOrderItemByName()
        {
            // Generated from example definition: specification/edgeorder/resource-manager/Microsoft.EdgeOrder/preview/2023-05-01-preview/examples/GetOrderItemByName.json
            // this example is just showing the usage of "OrderItems_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "YourSubscriptionId";
            string resourceGroupName = "YourResourceGroupName";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // get the collection of this EdgeOrderItemResource
            EdgeOrderItemCollection collection = resourceGroupResource.GetEdgeOrderItems();

            // invoke the operation
            string orderItemName = "TestOrderItemName1";
            EdgeOrderItemResource result = await collection.GetAsync(orderItemName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            EdgeOrderItemData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // GetOrderItemByName
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Exists_GetOrderItemByName()
        {
            // Generated from example definition: specification/edgeorder/resource-manager/Microsoft.EdgeOrder/preview/2023-05-01-preview/examples/GetOrderItemByName.json
            // this example is just showing the usage of "OrderItems_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "YourSubscriptionId";
            string resourceGroupName = "YourResourceGroupName";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // get the collection of this EdgeOrderItemResource
            EdgeOrderItemCollection collection = resourceGroupResource.GetEdgeOrderItems();

            // invoke the operation
            string orderItemName = "TestOrderItemName1";
            bool result = await collection.ExistsAsync(orderItemName);

            Console.WriteLine($"Succeeded: {result}");
        }

        // CreateOrderItem
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task CreateOrUpdate_CreateOrderItem()
        {
            // Generated from example definition: specification/edgeorder/resource-manager/Microsoft.EdgeOrder/preview/2023-05-01-preview/examples/CreateOrderItem.json
            // this example is just showing the usage of "OrderItems_Create" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ResourceGroupResource created on azure
            // for more information of creating ResourceGroupResource, please refer to the document of ResourceGroupResource
            string subscriptionId = "YourSubscriptionId";
            string resourceGroupName = "YourResourceGroupName";
            ResourceIdentifier resourceGroupResourceId = ResourceGroupResource.CreateResourceIdentifier(subscriptionId, resourceGroupName);
            ResourceGroupResource resourceGroupResource = client.GetResourceGroupResource(resourceGroupResourceId);

            // get the collection of this EdgeOrderItemResource
            EdgeOrderItemCollection collection = resourceGroupResource.GetEdgeOrderItems();

            // invoke the operation
            string orderItemName = "TestOrderItemName2";
            EdgeOrderItemData data = new EdgeOrderItemData(new AzureLocation("eastus"), new EdgeOrderItemDetails(new ProductDetails(new HierarchyInformation()
            {
                ProductFamilyName = "azurestackedge",
                ProductLineName = "azurestackedge",
                ProductName = "azurestackedgegpu",
                ConfigurationName = "edgep_base",
            }), OrderItemType.Purchase)
            {
                Preferences = new OrderItemPreferences()
                {
                    TransportPreferencesPreferredShipmentType = TransportShipmentType.MicrosoftManaged,
                },
            }, new ResourceIdentifier("/subscriptions/YourSubscriptionId/resourceGroups/YourResourceGroupName/providers/Microsoft.EdgeOrder/locations/eastus/orders/TestOrderName2"))
            {
                AddressDetails = new EdgeOrderItemAddressDetails(new EdgeOrderItemAddressProperties(new EdgeOrderAddressContactDetails("XXXX XXXX", "0000000000", new string[]
            {
"xxxx@xxxx.xxx"
            })
                {
                    PhoneExtension = "",
                })
                {
                    ShippingAddress = new EdgeOrderShippingAddress("16 TOWNSEND ST", "US")
                    {
                        StreetAddress2 = "UNIT 1",
                        City = "San Francisco",
                        StateOrProvince = "CA",
                        PostalCode = "94107",
                        CompanyName = "Microsoft",
                        AddressType = EdgeOrderAddressType.None,
                    },
                }),
            };
            ArmOperation<EdgeOrderItemResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, orderItemName, data);
            EdgeOrderItemResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            EdgeOrderItemData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
