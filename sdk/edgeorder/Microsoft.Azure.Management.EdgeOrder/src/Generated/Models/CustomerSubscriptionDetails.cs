// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.EdgeOrder.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Holds Customer subscription details. Clients can display available
    /// products to unregistered customers by explicitly passing subscription
    /// details
    /// </summary>
    public partial class CustomerSubscriptionDetails
    {
        /// <summary>
        /// Initializes a new instance of the CustomerSubscriptionDetails
        /// class.
        /// </summary>
        public CustomerSubscriptionDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CustomerSubscriptionDetails
        /// class.
        /// </summary>
        /// <param name="quotaId">Quota ID of a subscription</param>
        /// <param name="registeredFeatures">List of registered feature flags
        /// for subscription</param>
        /// <param name="locationPlacementId">Location placement Id of a
        /// subscription</param>
        public CustomerSubscriptionDetails(string quotaId, IList<CustomerSubscriptionRegisteredFeatures> registeredFeatures = default(IList<CustomerSubscriptionRegisteredFeatures>), string locationPlacementId = default(string))
        {
            RegisteredFeatures = registeredFeatures;
            LocationPlacementId = locationPlacementId;
            QuotaId = quotaId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets list of registered feature flags for subscription
        /// </summary>
        [JsonProperty(PropertyName = "registeredFeatures")]
        public IList<CustomerSubscriptionRegisteredFeatures> RegisteredFeatures { get; set; }

        /// <summary>
        /// Gets or sets location placement Id of a subscription
        /// </summary>
        [JsonProperty(PropertyName = "locationPlacementId")]
        public string LocationPlacementId { get; set; }

        /// <summary>
        /// Gets or sets quota ID of a subscription
        /// </summary>
        [JsonProperty(PropertyName = "quotaId")]
        public string QuotaId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (QuotaId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "QuotaId");
            }
        }
    }
}
