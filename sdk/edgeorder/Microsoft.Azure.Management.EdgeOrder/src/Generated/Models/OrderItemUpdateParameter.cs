// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.EdgeOrder.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Updates order item parameters.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class OrderItemUpdateParameter
    {
        /// <summary>
        /// Initializes a new instance of the OrderItemUpdateParameter class.
        /// </summary>
        public OrderItemUpdateParameter()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OrderItemUpdateParameter class.
        /// </summary>
        /// <param name="forwardAddress">Updates forward shipping address and
        /// contact details.</param>
        /// <param name="preferences">Customer preference.</param>
        /// <param name="notificationEmailList">Additional notification email
        /// list.</param>
        /// <param name="tags">The list of key value pairs that describe the
        /// resource. These tags can be used in viewing and grouping this
        /// resource (across resource groups).</param>
        public OrderItemUpdateParameter(AddressProperties forwardAddress = default(AddressProperties), Preferences preferences = default(Preferences), IList<string> notificationEmailList = default(IList<string>), IDictionary<string, string> tags = default(IDictionary<string, string>))
        {
            ForwardAddress = forwardAddress;
            Preferences = preferences;
            NotificationEmailList = notificationEmailList;
            Tags = tags;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets updates forward shipping address and contact details.
        /// </summary>
        [JsonProperty(PropertyName = "properties.forwardAddress")]
        public AddressProperties ForwardAddress { get; set; }

        /// <summary>
        /// Gets or sets customer preference.
        /// </summary>
        [JsonProperty(PropertyName = "properties.preferences")]
        public Preferences Preferences { get; set; }

        /// <summary>
        /// Gets or sets additional notification email list.
        /// </summary>
        [JsonProperty(PropertyName = "properties.notificationEmailList")]
        public IList<string> NotificationEmailList { get; set; }

        /// <summary>
        /// Gets or sets the list of key value pairs that describe the
        /// resource. These tags can be used in viewing and grouping this
        /// resource (across resource groups).
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ForwardAddress != null)
            {
                ForwardAddress.Validate();
            }
            if (Preferences != null)
            {
                Preferences.Validate();
            }
        }
    }
}
