// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.EdgeOrder.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Billing type Purchase meter details
    /// </summary>
    [Newtonsoft.Json.JsonObject("Purchase")]
    public partial class PurchaseMeterDetails : MeterDetails
    {
        /// <summary>
        /// Initializes a new instance of the PurchaseMeterDetails class.
        /// </summary>
        public PurchaseMeterDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PurchaseMeterDetails class.
        /// </summary>
        /// <param name="multiplier">Billing unit applicable for Pav2
        /// billing</param>
        /// <param name="chargingType">Charging type. Possible values include:
        /// 'PerOrder', 'PerDevice'</param>
        /// <param name="productId">Product Id</param>
        /// <param name="skuId">Sku Id</param>
        /// <param name="termId">Term Id</param>
        public PurchaseMeterDetails(double? multiplier = default(double?), string chargingType = default(string), string productId = default(string), string skuId = default(string), string termId = default(string))
            : base(multiplier, chargingType)
        {
            ProductId = productId;
            SkuId = skuId;
            TermId = termId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets product Id
        /// </summary>
        [JsonProperty(PropertyName = "productId")]
        public string ProductId { get; private set; }

        /// <summary>
        /// Gets sku Id
        /// </summary>
        [JsonProperty(PropertyName = "skuId")]
        public string SkuId { get; private set; }

        /// <summary>
        /// Gets term Id
        /// </summary>
        [JsonProperty(PropertyName = "termId")]
        public string TermId { get; private set; }

    }
}
