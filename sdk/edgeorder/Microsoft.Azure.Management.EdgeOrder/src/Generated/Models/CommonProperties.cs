// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.EdgeOrder.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Represents common properties across product hierarchy
    /// </summary>
    public partial class CommonProperties : BasicInformation
    {
        /// <summary>
        /// Initializes a new instance of the CommonProperties class.
        /// </summary>
        public CommonProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CommonProperties class.
        /// </summary>
        /// <param name="displayName">Display Name for the product
        /// system.</param>
        /// <param name="description">Description related to the product
        /// system.</param>
        /// <param name="imageInformation">Image information for the product
        /// system.</param>
        /// <param name="costInformation">Cost information for the product
        /// system.</param>
        /// <param name="availabilityInformation">Availability information of
        /// the product system.</param>
        /// <param name="hierarchyInformation">Hierarchy information of a
        /// product.</param>
        /// <param name="filterableProperties">list of filters supported for a
        /// product</param>
        public CommonProperties(string displayName = default(string), Description description = default(Description), IList<ImageInformation> imageInformation = default(IList<ImageInformation>), CostInformation costInformation = default(CostInformation), AvailabilityInformation availabilityInformation = default(AvailabilityInformation), HierarchyInformation hierarchyInformation = default(HierarchyInformation), IList<FilterableProperty> filterableProperties = default(IList<FilterableProperty>))
            : base(displayName, description, imageInformation, costInformation, availabilityInformation, hierarchyInformation)
        {
            FilterableProperties = filterableProperties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets list of filters supported for a product
        /// </summary>
        [JsonProperty(PropertyName = "filterableProperties")]
        public IList<FilterableProperty> FilterableProperties { get; private set; }

    }
}
