// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.EdgeOrder.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Represents product details
    /// </summary>
    public partial class ProductDetails
    {
        /// <summary>
        /// Initializes a new instance of the ProductDetails class.
        /// </summary>
        public ProductDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ProductDetails class.
        /// </summary>
        /// <param name="hierarchyInformation">Hierarchy of the product which
        /// uniquely identifies the product</param>
        /// <param name="displayInfo">Display details of the product</param>
        /// <param name="count">Quantity of the product</param>
        /// <param name="deviceDetails">list of device details</param>
        public ProductDetails(HierarchyInformation hierarchyInformation, DisplayInfo displayInfo = default(DisplayInfo), int? count = default(int?), IList<DeviceDetails> deviceDetails = default(IList<DeviceDetails>))
        {
            DisplayInfo = displayInfo;
            HierarchyInformation = hierarchyInformation;
            Count = count;
            DeviceDetails = deviceDetails;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets display details of the product
        /// </summary>
        [JsonProperty(PropertyName = "displayInfo")]
        public DisplayInfo DisplayInfo { get; set; }

        /// <summary>
        /// Gets or sets hierarchy of the product which uniquely identifies the
        /// product
        /// </summary>
        [JsonProperty(PropertyName = "hierarchyInformation")]
        public HierarchyInformation HierarchyInformation { get; set; }

        /// <summary>
        /// Gets or sets quantity of the product
        /// </summary>
        [JsonProperty(PropertyName = "count")]
        public int? Count { get; set; }

        /// <summary>
        /// Gets list of device details
        /// </summary>
        [JsonProperty(PropertyName = "deviceDetails")]
        public IList<DeviceDetails> DeviceDetails { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (HierarchyInformation == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "HierarchyInformation");
            }
        }
    }
}
