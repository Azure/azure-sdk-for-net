// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.EdgeOrder.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Configuration request object.
    /// </summary>
    public partial class ConfigurationsRequest
    {
        /// <summary>
        /// Initializes a new instance of the ConfigurationsRequest class.
        /// </summary>
        public ConfigurationsRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ConfigurationsRequest class.
        /// </summary>
        /// <param name="configurationFilters">Holds details about product
        /// hierarchy information and filterable property.</param>
        /// <param name="customerSubscriptionDetails">Customer subscription
        /// properties. Clients can display available products to unregistered
        /// customers by explicitly passing subscription details</param>
        public ConfigurationsRequest(IList<ConfigurationFilters> configurationFilters, CustomerSubscriptionDetails customerSubscriptionDetails = default(CustomerSubscriptionDetails))
        {
            ConfigurationFilters = configurationFilters;
            CustomerSubscriptionDetails = customerSubscriptionDetails;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets holds details about product hierarchy information and
        /// filterable property.
        /// </summary>
        [JsonProperty(PropertyName = "configurationFilters")]
        public IList<ConfigurationFilters> ConfigurationFilters { get; set; }

        /// <summary>
        /// Gets or sets customer subscription properties. Clients can display
        /// available products to unregistered customers by explicitly passing
        /// subscription details
        /// </summary>
        [JsonProperty(PropertyName = "customerSubscriptionDetails")]
        public CustomerSubscriptionDetails CustomerSubscriptionDetails { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ConfigurationFilters == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ConfigurationFilters");
            }
            if (ConfigurationFilters != null)
            {
                if (ConfigurationFilters.Count != System.Linq.Enumerable.Count(System.Linq.Enumerable.Distinct(ConfigurationFilters)))
                {
                    throw new ValidationException(ValidationRules.UniqueItems, "ConfigurationFilters");
                }
                foreach (var element in ConfigurationFilters)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (CustomerSubscriptionDetails != null)
            {
                CustomerSubscriptionDetails.Validate();
            }
        }
    }
}
