// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.EdgeOrder
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Edge Order API's
    /// </summary>
    public partial interface IEdgeOrderManagementClient : System.IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        System.Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }

        /// <summary>
        /// Credentials needed for the client to connect to Azure.
        /// </summary>
        ServiceClientCredentials Credentials { get; }

        /// <summary>
        /// The API version to use for this operation.
        /// </summary>
        string ApiVersion { get; }

        /// <summary>
        /// The ID of the target subscription.
        /// </summary>
        string SubscriptionId { get; set; }

        /// <summary>
        /// The preferred language for the response.
        /// </summary>
        string AcceptLanguage { get; set; }

        /// <summary>
        /// The retry timeout in seconds for Long Running Operations. Default
        /// value is 30.
        /// </summary>
        int? LongRunningOperationRetryTimeout { get; set; }

        /// <summary>
        /// Whether a unique x-ms-client-request-id should be generated. When
        /// set to true a unique x-ms-client-request-id value is generated and
        /// included in each request. Default is true.
        /// </summary>
        bool? GenerateClientRequestId { get; set; }


        /// <summary>
        /// This method gets all the operations that are exposed for customer.
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<Operation>>> ListOperationsWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Lists all the addresses available under the subscription.
        /// </summary>
        /// <param name='filter'>
        /// $filter is supported to filter based on shipping address
        /// properties. Filter supports only equals operation.
        /// </param>
        /// <param name='skipToken'>
        /// $skipToken is supported on Get list of addresses, which provides
        /// the next page in the list of addresses.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<AddressResource>>> ListAddressesAtSubscriptionLevelWithHttpMessagesAsync(string filter = default(string), string skipToken = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// This method provides the list of product families for the given
        /// subscription.
        /// </summary>
        /// <param name='productFamiliesRequest'>
        /// Filters for showing the product families.
        /// </param>
        /// <param name='expand'>
        /// $expand is supported on configurations parameter for product, which
        /// provides details on the configurations for the product.
        /// </param>
        /// <param name='skipToken'>
        /// $skipToken is supported on list of product families, which provides
        /// the next page in the list of product families.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<ProductFamily>>> ListProductFamiliesWithHttpMessagesAsync(ProductFamiliesRequest productFamiliesRequest, string expand = default(string), string skipToken = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// This method provides the list of configurations for the given
        /// product family, product line and product under subscription.
        /// </summary>
        /// <param name='configurationsRequest'>
        /// Filters for showing the configurations.
        /// </param>
        /// <param name='skipToken'>
        /// $skipToken is supported on list of configurations, which provides
        /// the next page in the list of configurations.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<Configuration>>> ListConfigurationsWithHttpMessagesAsync(ConfigurationsRequest configurationsRequest, string skipToken = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// This method provides the list of product families metadata for the
        /// given subscription.
        /// </summary>
        /// <param name='skipToken'>
        /// $skipToken is supported on list of product families metadata, which
        /// provides the next page in the list of product families metadata.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<ProductFamiliesMetadataDetails>>> ListProductFamiliesMetadataWithHttpMessagesAsync(string skipToken = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Lists order at subscription level.
        /// </summary>
        /// <param name='skipToken'>
        /// $skipToken is supported on Get list of order, which provides the
        /// next page in the list of order.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<OrderResource>>> ListOrderAtSubscriptionLevelWithHttpMessagesAsync(string skipToken = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Lists order at subscription level.
        /// </summary>
        /// <param name='filter'>
        /// $filter is supported to filter based on order id. Filter supports
        /// only equals operation.
        /// </param>
        /// <param name='skipToken'>
        /// $skipToken is supported on Get list of orders, which provides the
        /// next page in the list of order.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<OrderItemResource>>> ListOrderItemsAtSubscriptionLevelWithHttpMessagesAsync(string filter = default(string), string skipToken = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Lists all the addresses available under the given resource group.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='filter'>
        /// $filter is supported to filter based on shipping address
        /// properties. Filter supports only equals operation.
        /// </param>
        /// <param name='skipToken'>
        /// $skipToken is supported on Get list of addresses, which provides
        /// the next page in the list of address.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<AddressResource>>> ListAddressesAtResourceGroupLevelWithHttpMessagesAsync(string resourceGroupName, string filter = default(string), string skipToken = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets information about the specified address.
        /// </summary>
        /// <param name='addressName'>
        /// The name of the address Resource within the specified resource
        /// group. address names must be between 3 and 24 characters in length
        /// and use any alphanumeric and underscore only
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<AddressResource>> GetAddressByNameWithHttpMessagesAsync(string addressName, string resourceGroupName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Creates a new address with the specified parameters. Existing
        /// address cannot be updated with this API and should instead be
        /// updated with the Update address API.
        /// </summary>
        /// <param name='addressName'>
        /// The name of the address Resource within the specified resource
        /// group. address names must be between 3 and 24 characters in length
        /// and use any alphanumeric and underscore only
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='addressResource'>
        /// Address details from request body.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<AddressResource>> CreateAddressWithHttpMessagesAsync(string addressName, string resourceGroupName, AddressResource addressResource, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Deletes an address.
        /// </summary>
        /// <param name='addressName'>
        /// The name of the address Resource within the specified resource
        /// group. address names must be between 3 and 24 characters in length
        /// and use any alphanumeric and underscore only
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse> DeleteAddressByNameWithHttpMessagesAsync(string addressName, string resourceGroupName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Updates the properties of an existing address.
        /// </summary>
        /// <param name='addressName'>
        /// The name of the address Resource within the specified resource
        /// group. address names must be between 3 and 24 characters in length
        /// and use any alphanumeric and underscore only
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='addressUpdateParameter'>
        /// Address update parameters from request body.
        /// </param>
        /// <param name='ifMatch'>
        /// Defines the If-Match condition. The patch will be performed only if
        /// the ETag of the job on the server matches this value.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<AddressResource>> UpdateAddressWithHttpMessagesAsync(string addressName, string resourceGroupName, AddressUpdateParameter addressUpdateParameter, string ifMatch = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Lists order at resource group level.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='skipToken'>
        /// $skipToken is supported on Get list of order, which provides the
        /// next page in the list of order.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<OrderResource>>> ListOrderAtResourceGroupLevelWithHttpMessagesAsync(string resourceGroupName, string skipToken = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets an order.
        /// </summary>
        /// <param name='orderName'>
        /// The name of the order
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='location'>
        /// The name of Azure region.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<OrderResource>> GetOrderByNameWithHttpMessagesAsync(string orderName, string resourceGroupName, string location, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Lists order item at resource group level.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='filter'>
        /// $filter is supported to filter based on order id. Filter supports
        /// only equals operation.
        /// </param>
        /// <param name='expand'>
        /// $expand is supported on device details parameter for order item,
        /// which provides details on the devices of the product.
        /// </param>
        /// <param name='skipToken'>
        /// $skipToken is supported on Get list of order items, which provides
        /// the next page in the list of order items.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<OrderItemResource>>> ListOrderItemsAtResourceGroupLevelWithHttpMessagesAsync(string resourceGroupName, string filter = default(string), string expand = default(string), string skipToken = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets an order item.
        /// </summary>
        /// <param name='orderItemName'>
        /// The name of the order item
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='expand'>
        /// $expand is supported on device details parameter for order item,
        /// which provides details on the devices of the product.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<OrderItemResource>> GetOrderItemByNameWithHttpMessagesAsync(string orderItemName, string resourceGroupName, string expand = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Creates an order item. Existing order item cannot be updated with
        /// this api and should instead be updated with the Update order item
        /// API.
        /// </summary>
        /// <param name='orderItemName'>
        /// The name of the order item
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='orderItemResource'>
        /// Order item details from request body.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<OrderItemResource>> CreateOrderItemWithHttpMessagesAsync(string orderItemName, string resourceGroupName, OrderItemResource orderItemResource, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Deletes an order item.
        /// </summary>
        /// <param name='orderItemName'>
        /// The name of the order item
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse> DeleteOrderItemByNameWithHttpMessagesAsync(string orderItemName, string resourceGroupName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Updates the properties of an existing order item.
        /// </summary>
        /// <param name='orderItemName'>
        /// The name of the order item
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='orderItemUpdateParameter'>
        /// order item update parameters from request body.
        /// </param>
        /// <param name='ifMatch'>
        /// Defines the If-Match condition. The patch will be performed only if
        /// the ETag of the order on the server matches this value.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<OrderItemResource>> UpdateOrderItemWithHttpMessagesAsync(string orderItemName, string resourceGroupName, OrderItemUpdateParameter orderItemUpdateParameter, string ifMatch = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Cancel order item.
        /// </summary>
        /// <param name='orderItemName'>
        /// The name of the order item
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='cancellationReason'>
        /// Reason for cancellation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse> CancelOrderItemWithHttpMessagesAsync(string orderItemName, string resourceGroupName, CancellationReason cancellationReason, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Return order item.
        /// </summary>
        /// <param name='orderItemName'>
        /// The name of the order item
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='returnOrderItemDetails'>
        /// Return order item CurrentStatus.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse> ReturnOrderItemWithHttpMessagesAsync(string orderItemName, string resourceGroupName, ReturnOrderItemDetails returnOrderItemDetails, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Creates a new address with the specified parameters. Existing
        /// address cannot be updated with this API and should instead be
        /// updated with the Update address API.
        /// </summary>
        /// <param name='addressName'>
        /// The name of the address Resource within the specified resource
        /// group. address names must be between 3 and 24 characters in length
        /// and use any alphanumeric and underscore only
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='addressResource'>
        /// Address details from request body.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<AddressResource>> BeginCreateAddressWithHttpMessagesAsync(string addressName, string resourceGroupName, AddressResource addressResource, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Deletes an address.
        /// </summary>
        /// <param name='addressName'>
        /// The name of the address Resource within the specified resource
        /// group. address names must be between 3 and 24 characters in length
        /// and use any alphanumeric and underscore only
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse> BeginDeleteAddressByNameWithHttpMessagesAsync(string addressName, string resourceGroupName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Updates the properties of an existing address.
        /// </summary>
        /// <param name='addressName'>
        /// The name of the address Resource within the specified resource
        /// group. address names must be between 3 and 24 characters in length
        /// and use any alphanumeric and underscore only
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='addressUpdateParameter'>
        /// Address update parameters from request body.
        /// </param>
        /// <param name='ifMatch'>
        /// Defines the If-Match condition. The patch will be performed only if
        /// the ETag of the job on the server matches this value.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<AddressResource>> BeginUpdateAddressWithHttpMessagesAsync(string addressName, string resourceGroupName, AddressUpdateParameter addressUpdateParameter, string ifMatch = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Creates an order item. Existing order item cannot be updated with
        /// this api and should instead be updated with the Update order item
        /// API.
        /// </summary>
        /// <param name='orderItemName'>
        /// The name of the order item
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='orderItemResource'>
        /// Order item details from request body.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<OrderItemResource>> BeginCreateOrderItemWithHttpMessagesAsync(string orderItemName, string resourceGroupName, OrderItemResource orderItemResource, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Deletes an order item.
        /// </summary>
        /// <param name='orderItemName'>
        /// The name of the order item
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse> BeginDeleteOrderItemByNameWithHttpMessagesAsync(string orderItemName, string resourceGroupName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Updates the properties of an existing order item.
        /// </summary>
        /// <param name='orderItemName'>
        /// The name of the order item
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='orderItemUpdateParameter'>
        /// order item update parameters from request body.
        /// </param>
        /// <param name='ifMatch'>
        /// Defines the If-Match condition. The patch will be performed only if
        /// the ETag of the order on the server matches this value.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<OrderItemResource>> BeginUpdateOrderItemWithHttpMessagesAsync(string orderItemName, string resourceGroupName, OrderItemUpdateParameter orderItemUpdateParameter, string ifMatch = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Return order item.
        /// </summary>
        /// <param name='orderItemName'>
        /// The name of the order item
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='returnOrderItemDetails'>
        /// Return order item CurrentStatus.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse> BeginReturnOrderItemWithHttpMessagesAsync(string orderItemName, string resourceGroupName, ReturnOrderItemDetails returnOrderItemDetails, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// This method gets all the operations that are exposed for customer.
        /// </summary>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<Operation>>> ListOperationsNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Lists all the addresses available under the subscription.
        /// </summary>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<AddressResource>>> ListAddressesAtSubscriptionLevelNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// This method provides the list of product families for the given
        /// subscription.
        /// </summary>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<ProductFamily>>> ListProductFamiliesNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// This method provides the list of configurations for the given
        /// product family, product line and product under subscription.
        /// </summary>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<Configuration>>> ListConfigurationsNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// This method provides the list of product families metadata for the
        /// given subscription.
        /// </summary>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<ProductFamiliesMetadataDetails>>> ListProductFamiliesMetadataNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Lists order at subscription level.
        /// </summary>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<OrderResource>>> ListOrderAtSubscriptionLevelNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Lists order at subscription level.
        /// </summary>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<OrderItemResource>>> ListOrderItemsAtSubscriptionLevelNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Lists all the addresses available under the given resource group.
        /// </summary>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<AddressResource>>> ListAddressesAtResourceGroupLevelNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Lists order at resource group level.
        /// </summary>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<OrderResource>>> ListOrderAtResourceGroupLevelNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Lists order item at resource group level.
        /// </summary>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<OrderItemResource>>> ListOrderItemsAtResourceGroupLevelNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

    }
}
