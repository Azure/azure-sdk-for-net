// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ClientModel.Clients;
using System.ClientModel.Clients.Models;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace System.ClientModel.Clients.Samples
{
    public partial class Samples_ModelReaderWriterTestsClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ModelReaderWriterTests_Op1_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            ModelReaderWriterTestsClient client = new ModelReaderWriterTestsClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                id = 1234,
            });
            Response response = client.Op1(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ModelReaderWriterTests_Op1_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            ModelReaderWriterTestsClient client = new ModelReaderWriterTestsClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                id = 1234,
            });
            Response response = await client.Op1Async(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ModelReaderWriterTests_Op1_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            ModelReaderWriterTestsClient client = new ModelReaderWriterTestsClient(endpoint, credential);

            ModelAsStruct body = new ModelAsStruct(1234);
            Response<ModelAsStruct> response = client.Op1(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ModelReaderWriterTests_Op1_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            ModelReaderWriterTestsClient client = new ModelReaderWriterTestsClient(endpoint, credential);

            ModelAsStruct body = new ModelAsStruct(1234);
            Response<ModelAsStruct> response = await client.Op1Async(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ModelReaderWriterTests_Op1_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            ModelReaderWriterTestsClient client = new ModelReaderWriterTestsClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                id = 1234,
            });
            Response response = client.Op1(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ModelReaderWriterTests_Op1_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            ModelReaderWriterTestsClient client = new ModelReaderWriterTestsClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                id = 1234,
            });
            Response response = await client.Op1Async(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ModelReaderWriterTests_Op1_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            ModelReaderWriterTestsClient client = new ModelReaderWriterTestsClient(endpoint, credential);

            ModelAsStruct body = new ModelAsStruct(1234);
            Response<ModelAsStruct> response = client.Op1(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ModelReaderWriterTests_Op1_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            ModelReaderWriterTestsClient client = new ModelReaderWriterTestsClient(endpoint, credential);

            ModelAsStruct body = new ModelAsStruct(1234);
            Response<ModelAsStruct> response = await client.Op1Async(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ModelReaderWriterTests_Op2_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            ModelReaderWriterTestsClient client = new ModelReaderWriterTestsClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new object());
            Response response = client.Op2(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("xProperty").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ModelReaderWriterTests_Op2_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            ModelReaderWriterTestsClient client = new ModelReaderWriterTestsClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new object());
            Response response = await client.Op2Async(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("xProperty").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ModelReaderWriterTests_Op2_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            ModelReaderWriterTestsClient client = new ModelReaderWriterTestsClient(endpoint, credential);

            ModelWithPersistableOnly body = new ModelWithPersistableOnly();
            Response<ModelWithPersistableOnly> response = client.Op2(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ModelReaderWriterTests_Op2_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            ModelReaderWriterTestsClient client = new ModelReaderWriterTestsClient(endpoint, credential);

            ModelWithPersistableOnly body = new ModelWithPersistableOnly();
            Response<ModelWithPersistableOnly> response = await client.Op2Async(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ModelReaderWriterTests_Op2_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            ModelReaderWriterTestsClient client = new ModelReaderWriterTestsClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
                fields = new object[]
            {
"<fields>"
            },
                nullProperty = 1234,
                keyValuePairs = new
                {
                    key = "<keyValuePairs>",
                },
            });
            Response response = client.Op2(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("fields")[0].ToString());
            Console.WriteLine(result.GetProperty("nullProperty").ToString());
            Console.WriteLine(result.GetProperty("keyValuePairs").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("xProperty").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ModelReaderWriterTests_Op2_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            ModelReaderWriterTestsClient client = new ModelReaderWriterTestsClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
                fields = new object[]
            {
"<fields>"
            },
                nullProperty = 1234,
                keyValuePairs = new
                {
                    key = "<keyValuePairs>",
                },
            });
            Response response = await client.Op2Async(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("fields")[0].ToString());
            Console.WriteLine(result.GetProperty("nullProperty").ToString());
            Console.WriteLine(result.GetProperty("keyValuePairs").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("xProperty").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ModelReaderWriterTests_Op2_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            ModelReaderWriterTestsClient client = new ModelReaderWriterTestsClient(endpoint, credential);

            ModelWithPersistableOnly body = new ModelWithPersistableOnly
            {
                Name = "<name>",
                Fields = { "<fields>" },
                NullProperty = 1234,
                KeyValuePairs =
{
["key"] = "<keyValuePairs>"
},
            };
            Response<ModelWithPersistableOnly> response = client.Op2(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ModelReaderWriterTests_Op2_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            ModelReaderWriterTestsClient client = new ModelReaderWriterTestsClient(endpoint, credential);

            ModelWithPersistableOnly body = new ModelWithPersistableOnly
            {
                Name = "<name>",
                Fields = { "<fields>" },
                NullProperty = 1234,
                KeyValuePairs =
{
["key"] = "<keyValuePairs>"
},
            };
            Response<ModelWithPersistableOnly> response = await client.Op2Async(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ModelReaderWriterTests_Op3_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            ModelReaderWriterTestsClient client = new ModelReaderWriterTestsClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                kind = "X",
            });
            Response response = client.Op3(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("kind").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ModelReaderWriterTests_Op3_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            ModelReaderWriterTestsClient client = new ModelReaderWriterTestsClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                kind = "X",
            });
            Response response = await client.Op3Async(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("kind").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ModelReaderWriterTests_Op3_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            ModelReaderWriterTestsClient client = new ModelReaderWriterTestsClient(endpoint, credential);

            BaseModel body = new ModelX();
            Response<BaseModel> response = client.Op3(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ModelReaderWriterTests_Op3_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            ModelReaderWriterTestsClient client = new ModelReaderWriterTestsClient(endpoint, credential);

            BaseModel body = new ModelX();
            Response<BaseModel> response = await client.Op3Async(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ModelReaderWriterTests_Op3_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            ModelReaderWriterTestsClient client = new ModelReaderWriterTestsClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                fields = new object[]
            {
"<fields>"
            },
                nullProperty = 1234,
                keyValuePairs = new
                {
                    key = "<keyValuePairs>",
                },
                kind = "X",
                name = "<name>",
            });
            Response response = client.Op3(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("kind").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ModelReaderWriterTests_Op3_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            ModelReaderWriterTestsClient client = new ModelReaderWriterTestsClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                fields = new object[]
            {
"<fields>"
            },
                nullProperty = 1234,
                keyValuePairs = new
                {
                    key = "<keyValuePairs>",
                },
                kind = "X",
                name = "<name>",
            });
            Response response = await client.Op3Async(content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("kind").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ModelReaderWriterTests_Op3_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            ModelReaderWriterTestsClient client = new ModelReaderWriterTestsClient(endpoint, credential);

            BaseModel body = new ModelX
            {
                Fields = { "<fields>" },
                NullProperty = 1234,
                KeyValuePairs =
{
["key"] = "<keyValuePairs>"
},
                Name = "<name>",
            };
            Response<BaseModel> response = client.Op3(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ModelReaderWriterTests_Op3_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            ModelReaderWriterTestsClient client = new ModelReaderWriterTestsClient(endpoint, credential);

            BaseModel body = new ModelX
            {
                Fields = { "<fields>" },
                NullProperty = 1234,
                KeyValuePairs =
{
["key"] = "<keyValuePairs>"
},
                Name = "<name>",
            };
            Response<BaseModel> response = await client.Op3Async(body);
        }
    }
}
