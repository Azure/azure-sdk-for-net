// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace System.ClientModel.Clients.Models
{
    /// <summary> The ModelX in the discriminated set. </summary>
    public partial class ModelX : BaseModel
    {
        /// <summary> Initializes a new instance of <see cref="ModelX"/>. </summary>
        public ModelX()
        {
            Kind = "X";
            Fields = new ChangeTrackingList<string>();
            KeyValuePairs = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of <see cref="ModelX"/>. </summary>
        /// <param name="kind"> The kind. </param>
        /// <param name="name"> The name property. </param>
        /// <param name="fields"> Optional list. </param>
        /// <param name="nullProperty"> Nullable integer. </param>
        /// <param name="keyValuePairs"> Optional dictionary. </param>
        /// <param name="xProperty"> The XProperty property. </param>
        internal ModelX(string kind, string name, IList<string> fields, int? nullProperty, IDictionary<string, string> keyValuePairs, int xProperty) : base(kind, name)
        {
            Fields = fields;
            NullProperty = nullProperty;
            KeyValuePairs = keyValuePairs;
            XProperty = xProperty;
        }

        /// <summary> Optional list. </summary>
        public IList<string> Fields { get; }
        /// <summary> Nullable integer. </summary>
        public int? NullProperty { get; set; }
        /// <summary> Optional dictionary. </summary>
        public IDictionary<string, string> KeyValuePairs { get; }
        /// <summary> The XProperty property. </summary>
        public int XProperty { get; }
    }
}
