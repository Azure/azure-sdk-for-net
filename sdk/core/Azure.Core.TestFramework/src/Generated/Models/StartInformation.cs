// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.Core.TestFramework.Models
{
    /// <summary> Start object to be specified when starting playback or record. </summary>
    public partial class StartInformation
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="StartInformation"/>. </summary>
        /// <param name="xRecordingFile"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="xRecordingFile"/> is null. </exception>
        public StartInformation(string xRecordingFile)
        {
            Argument.AssertNotNull(xRecordingFile, nameof(xRecordingFile));

            XRecordingFile = xRecordingFile;
        }

        /// <summary> Initializes a new instance of <see cref="StartInformation"/>. </summary>
        /// <param name="xRecordingFile"></param>
        /// <param name="xRecordingAssetsFile"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal StartInformation(string xRecordingFile, string xRecordingAssetsFile, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            XRecordingFile = xRecordingFile;
            XRecordingAssetsFile = xRecordingAssetsFile;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="StartInformation"/> for deserialization. </summary>
        internal StartInformation()
        {
        }

        /// <summary> Gets the x recording file. </summary>
        public string XRecordingFile { get; }
        /// <summary> Gets or sets the x recording assets file. </summary>
        public string XRecordingAssetsFile { get; set; }
    }
}
