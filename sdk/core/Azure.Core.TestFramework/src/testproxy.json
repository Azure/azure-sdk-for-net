{
  "swagger": "2.0",
  "info": {
    "title": "Test Proxy",
    "version": "2021-11",
    "description": "The Test Proxy is used to record and playback live tests."
  },
  "schemes": [
    "https"
  ],
  "paths": {
    "/playback/start": {
      "post": {
        "summary": "Start playback for a test.",
        "description": "Start playback for a test.",
        "operationId": "TestProxy_StartPlayback",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "File location of the recording.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartInformation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "headers": {
              "x-recording-id": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An error response received from the Test Proxy.",
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "Error code for specific error that occurred."
              }
            }
          }
        }
      }
    },
    "/playback/stop": {
      "post": {
        "summary": "Stop playback for a test.",
        "description": "Stop playback for a test.",
        "operationId": "TestProxy_StopPlayback",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-recording-id",
            "in": "header",
            "description": "The recording ID to stop playback for.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "An error response received from the Test Proxy.",
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "Error code for specific error that occurred."
              }
            }
          }
        }
      }
    },
    "/record/start": {
      "post": {
        "summary": "Start recording for a test.",
        "description": "Start recording for a test.",
        "operationId": "TestProxy_StartRecord",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "File location of the recording.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartInformation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "x-recording-id": {
                "type": "string",
                "description": "The recording ID for the test recording."
              }
            }
          },
          "default": {
            "description": "An error response received from the Test Proxy.",
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "Error code for specific error that occurred."
              }
            }
          }
        }
      }
    },
    "/record/stop": {
      "post": {
        "summary": "Stop recording a test.",
        "description": "Stop recording for a test.",
        "operationId": "TestProxy_StopRecord",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-recording-id",
            "in": "header",
            "description": "The recording ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-recording-skip",
            "in": "header",
            "description": "Set to request-response to skip recording this session.",
            "type": "string"
          },
          {
            "name": "variables",
            "in": "body",
            "description": "Variables for the recording.",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "An error response received from the Test Proxy.",
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "Error code for specific error that occurred."
              }
            }
          }
        }
      }
    },
    "/admin/setrecordingoptions": {
      "post": {
        "summary": "Set the proxy recording options.",
        "description": "Set the proxy recording options.",
        "operationId": "TestProxy_SetRecordingTransportOptions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-recording-id",
            "in": "header",
            "description": "The recording ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "proxyOptions",
            "in": "body",
            "description": "File location of the recording.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProxyOptions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "An error response received from the Test Proxy.",
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "Error code for specific error that occurred."
              }
            }
          }
        }
      }
    }
  },
  "x-ms-paths": {
    "/admin/addsanitizer?overload=BodyKeySanitizer": {
      "post": {
        "summary": "Add a sanitizer.",
        "description": "Stop recording for a test.",
        "operationId": "TestProxy_AddBodyKeySanitizer",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-abstraction-identifier",
            "in": "header",
            "description": "The type of sanitizer.",
            "required": true,
            "type": "string",
            "enum": [
              "BodyKeySanitizer"
            ],
            "x-ms-enum": {
              "name": "SanitizerType",
              "modelAsString": false
            }
          },
          {
            "name": "x-recording-id",
            "in": "header",
            "description": "The recording ID to apply the sanitizer to.",
            "type": "string"
          },
          {
            "name": "sanitizer",
            "in": "body",
            "description": "The body for a header regex sanitizer.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BodyKeySanitizer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "An error response received from the Test Proxy.",
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "Error code for specific error that occurred."
              }
            }
          }
        }
      }
    },
    "/admin/addsanitizer?overload=HeaderRegexSanitizer": {
      "post": {
        "summary": "Add a sanitizer.",
        "description": "Add header sanitizer.",
        "operationId": "TestProxy_AddHeaderSanitizer",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-abstraction-identifier",
            "in": "header",
            "description": "The type of sanitizer.",
            "required": true,
            "type": "string",
            "enum": [
              "HeaderRegexSanitizer"
            ],
            "x-ms-enum": {
              "name": "SanitizerType",
              "modelAsString": false
            }
          },
          {
            "name": "x-recording-id",
            "in": "header",
            "description": "The recording ID to apply the sanitizer to.",
            "type": "string"
          },
          {
            "name": "sanitizer",
            "in": "body",
            "description": "The body for a header regex sanitizer.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HeaderRegexSanitizer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "An error response received from the Test Proxy.",
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "Error code for specific error that occurred."
              }
            }
          }
        }
      }
    },
    "/admin/addsanitizer?overload=UriRegexSanitizer": {
      "post": {
        "summary": "Add a sanitizer.",
        "operationId": "TestProxy_AddUriSanitizer",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-abstraction-identifier",
            "in": "header",
            "description": "The type of sanitizer.",
            "required": true,
            "type": "string",
            "enum": [
              "UriRegexSanitizer"
            ],
            "x-ms-enum": {
              "name": "SanitizerType",
              "modelAsString": false
            }
          },
          {
            "name": "x-recording-id",
            "in": "header",
            "description": "The recording ID to apply the sanitizer to.",
            "type": "string"
          },
          {
            "name": "sanitizer",
            "in": "body",
            "description": "The body for a URI regex sanitizer.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UriRegexSanitizer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "An error response received from the Test Proxy.",
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "Error code for specific error that occurred."
              }
            }
          }
        }
      }
    },
    "/admin/addsanitizer?overload=BodyRegexSanitizer": {
      "post": {
        "summary": "Add a sanitizer.",
        "description": "Add a sanitizer.",
        "operationId": "TestProxy_AddBodyRegexSanitizer",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-abstraction-identifier",
            "in": "header",
            "description": "The type of sanitizer.",
            "required": true,
            "type": "string",
            "enum": [
              "BodyRegexSanitizer"
            ],
            "x-ms-enum": {
              "name": "SanitizerType",
              "modelAsString": false
            }
          },
          {
            "name": "x-recording-id",
            "in": "header",
            "description": "The recording ID to apply the sanitizer to.",
            "type": "string"
          },
          {
            "name": "sanitizer",
            "in": "body",
            "description": "The body for a body regex sanitizer.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BodyRegexSanitizer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "An error response received from the Test Proxy.",
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "Error code for specific error that occurred."
              }
            }
          }
        }
      }
    },
    "/admin/setmatcher?overload=BodilessMatcher": {
      "post": {
        "summary": "Add a bodiless matcher.",
        "description": "Add a bodiless matcher.",
        "operationId": "TestProxy_AddBodilessMatcher",
        "parameters": [
          {
            "name": "x-abstraction-identifier",
            "in": "header",
            "description": "The type of matcher.",
            "required": true,
            "type": "string",
            "enum": [
              "BodilessMatcher"
            ],
            "x-ms-enum": {
              "name": "MatcherType",
              "modelAsString": false
            }
          },
          {
            "name": "x-recording-id",
            "in": "header",
            "description": "The recording ID to apply the matcher to.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "An error response received from the Test Proxy.",
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "Error code for specific error that occurred."
              }
            }
          }
        }
      }
    },
    "/admin/setmatcher?overload=CustomDefaultMatcher": {
      "post": {
        "summary": "Add a custom matcher.",
        "description": "Add a custom matcher.",
        "operationId": "TestProxy_AddCustomMatcher",
        "parameters": [
          {
            "name": "x-abstraction-identifier",
            "in": "header",
            "description": "The type of matcher.",
            "required": true,
            "type": "string",
            "enum": [
              "CustomDefaultMatcher"
            ],
            "x-ms-enum": {
              "name": "MatcherType",
              "modelAsString": false
            }
          },
          {
            "name": "x-recording-id",
            "in": "header",
            "description": "The recording ID to apply the matcher to.",
            "type": "string"
          },
          {
            "name": "matcher",
            "in": "body",
            "description": "The body for a custom matcher.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomDefaultMatcher"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "An error response received from the Test Proxy.",
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "Error code for specific error that occurred."
              }
            }
          }
        }
      }
    },
    "/admin/addtransform?overload=HeaderTransform": {
      "post": {
        "summary": "Add a header transform.",
        "description": "Add a header transform.",
        "operationId": "TestProxy_AddHeaderTransform",
        "parameters": [
          {
            "name": "x-abstraction-identifier",
            "in": "header",
            "description": "The type of transform.",
            "required": true,
            "type": "string",
            "enum": [
              "HeaderTransform"
            ],
            "x-ms-enum": {
              "name": "MatcherType",
              "modelAsString": false
            }
          },
          {
            "name": "x-recording-id",
            "in": "header",
            "description": "The recording ID to apply the transform to.",
            "type": "string"
          },
          {
            "name": "transform",
            "in": "body",
            "description": "The body for a header transform.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HeaderTransform"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "An error response received from the Test Proxy.",
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "Error code for specific error that occurred."
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "SanitizerType": {
      "type": "string",
      "enum": [
        "BodyKeySanitizer",
        "HeaderRegexSanitizer",
        "UriRegexSanitizer"
      ],
      "x-ms-enum": {
        "name": "SanitizerType",
        "modelAsString": false
      }
    },
    "MatcherType": {
      "type": "string",
      "enum": [
        "BodilessMatcher",
        "CustomDefaultMatcher"
      ],
      "x-ms-enum": {
        "name": "MatcherType",
        "modelAsString": false
      }
    },
    "TransformType": {
      "type": "string",
      "enum": [
        "HeaderTransform"
      ],
      "x-ms-enum": {
        "name": "TransformType",
        "modelAsString": false
      }
    },
    "CustomDefaultMatcher": {
      "type": "object",
      "properties": {
        "excludedHeaders": {
          "type": "string"
        },
        "compareBodies": {
          "type": "boolean"
        },
        "ignoredHeaders": {
          "type": "string"
        },
        "ignoredQueryParameters": {
          "type": "string"
        }
      }
    },
    "HeaderTransform": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "condition": {
          "$ref": "#/definitions/Condition"
        }
      },
      "required": [
        "key",
        "value"
      ]
    },
    "BodyKeySanitizer": {
      "type": "object",
      "description": "Sanitizer for a request body",
      "properties": {
        "jsonPath": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "regex": {
          "type": "string"
        },
        "groupForReplace": {
          "type": "string"
        }
      },
      "required": [
        "value"
      ]
    },
    "BodyRegexSanitizer": {
      "type": "object",
      "description": "Sanitizer for a request body",
      "properties": {
        "regex": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "groupForReplace": {
          "type": "string"
        },
        "condition": {
          "$ref": "#/definitions/Condition"
        }
      },
      "required": [
        "regex",
        "value"
      ]
    },
    "HeaderRegexSanitizer": {
      "type": "object",
      "description": "Sanitizer for a request header",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "regex": {
          "type": "string"
        },
        "groupForReplace": {
          "type": "string"
        }
      },
      "required": [
        "key",
        "value"
      ]
    },
    "UriRegexSanitizer": {
      "type": "object",
      "description": "Sanitizer for a request URI",
      "properties": {
        "regex": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "groupForReplace": {
          "type": "string"
        }
      },
      "required": [
        "regex",
        "value"
      ]
    },
    "Condition": {
      "type": "object",
      "description": "Condition to apply for the sanitization or transform. If the condition is not met, sanitization/transform is not performed.",
      "properties": {
        "uriRegex": {
          "type": "string"
        },
        "responseHeader": {
          "$ref": "#/definitions/HeaderCondition"
        }
      },
      "required": []
    },
    "HeaderCondition": {
      "type": "object",
      "description": "Header condition to apply",
      "properties": {
        "key": {
          "type": "string"
        },
        "valueRegex": {
          "type": "string"
        }
      }
    },
    "StartInformation": {
      "type": "object",
      "description": "Start object to be specified when starting playback or record",
      "properties": {
        "x-recording-file": {
          "type": "string"
        },
        "x-recording-assets-file": {
          "type": "string"
        }
      },
      "required": [
        "x-recording-file"
      ]
    },
    "ProxyOptions": {
      "description": "The proxy options",
      "type": "object",
      "properties": {
        "Transport": {
          "type": "object",
          "properties": {
            "AllowAutoRedirect": {
              "type": "boolean",
              "default" : true
            },
            "TLSValidationCert": {
              "type": "string"
            },
            "Certificates": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "PemValue": {
                    "type": "string"
                  },
                  "PemKey": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
