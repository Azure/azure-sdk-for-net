// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Microsoft.ClientModel.TestFramework
{
    /// <summary> The HeaderTransform. </summary>
    public partial class HeaderTransform
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="HeaderTransform"/>. </summary>
        /// <param name="key"></param>
        /// <param name="value"></param>
        /// <param name="condition"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="key"/>, <paramref name="value"/> or <paramref name="condition"/> is null. </exception>
        public HeaderTransform(string key, string value, Condition condition)
        {
            Argument.AssertNotNull(key, nameof(key));
            Argument.AssertNotNull(value, nameof(value));
            Argument.AssertNotNull(condition, nameof(condition));

            Key = key;
            Value = value;
            Condition = condition;
        }

        /// <summary> Initializes a new instance of <see cref="HeaderTransform"/>. </summary>
        /// <param name="key"></param>
        /// <param name="value"></param>
        /// <param name="condition"></param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal HeaderTransform(string key, string value, Condition condition, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Key = key;
            Value = value;
            Condition = condition;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Gets the Key. </summary>
        public string Key { get; }

        /// <summary> Gets the Value. </summary>
        public string Value { get; }

        /// <summary> Gets the Condition. </summary>
        public Condition Condition { get; }
    }
}
