// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Microsoft.ClientModel.TestFramework.TestProxy
{
    /// <summary> The SanitizerCondition. </summary>
    public partial class SanitizerCondition
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="SanitizerCondition"/>. </summary>
        public SanitizerCondition()
        {
        }

        /// <summary> Initializes a new instance of <see cref="SanitizerCondition"/>. </summary>
        /// <param name="uriRegex"></param>
        /// <param name="responseHeader"></param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal SanitizerCondition(string uriRegex, HeaderCondition responseHeader, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            UriRegex = uriRegex;
            ResponseHeader = responseHeader;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Gets or sets the UriRegex. </summary>
        public string UriRegex { get; set; }

        /// <summary> Gets or sets the ResponseHeader. </summary>
        public HeaderCondition ResponseHeader { get; set; }
    }
}
