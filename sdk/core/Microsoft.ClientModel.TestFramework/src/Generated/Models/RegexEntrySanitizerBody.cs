// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Microsoft.ClientModel.TestFramework;

namespace Microsoft.ClientModel.TestFramework.TestProxy.Admin
{
    /// <summary> The RegexEntrySanitizerBody. </summary>
    public partial class RegexEntrySanitizerBody
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="RegexEntrySanitizerBody"/>. </summary>
        /// <param name="target"></param>
        /// <param name="regex"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="regex"/> is null. </exception>
        public RegexEntrySanitizerBody(RegexEntryValues target, string regex)
        {
            Argument.AssertNotNull(regex, nameof(regex));

            Target = target;
            Regex = regex;
        }

        /// <summary> Initializes a new instance of <see cref="RegexEntrySanitizerBody"/>. </summary>
        /// <param name="target"></param>
        /// <param name="regex"></param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal RegexEntrySanitizerBody(RegexEntryValues target, string regex, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Target = target;
            Regex = regex;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Gets the Target. </summary>
        public RegexEntryValues Target { get; }

        /// <summary> Gets the Regex. </summary>
        public string Regex { get; }
    }
}
