// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Microsoft.ClientModel.TestFramework;

namespace Microsoft.ClientModel.TestFramework.TestProxy
{
    /// <summary> The TestProxyStartInformation. </summary>
    public partial class TestProxyStartInformation
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="TestProxyStartInformation"/>. </summary>
        /// <param name="xRecordingFile"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="xRecordingFile"/> is null. </exception>
        public TestProxyStartInformation(string xRecordingFile)
        {
            Argument.AssertNotNull(xRecordingFile, nameof(xRecordingFile));

            XRecordingFile = xRecordingFile;
        }

        /// <summary> Initializes a new instance of <see cref="TestProxyStartInformation"/>. </summary>
        /// <param name="xRecordingFile"></param>
        /// <param name="xRecordingAssetsFiles"></param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal TestProxyStartInformation(string xRecordingFile, string xRecordingAssetsFiles, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            XRecordingFile = xRecordingFile;
            XRecordingAssetsFiles = xRecordingAssetsFiles;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Gets the XRecordingFile. </summary>
        public string XRecordingFile { get; }

        /// <summary> Gets or sets the XRecordingAssetsFiles. </summary>
        public string XRecordingAssetsFiles { get; set; }
    }
}
