// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Microsoft.ClientModel.TestFramework;

namespace Microsoft.ClientModel.TestFramework.TestProxy.Admin
{
    /// <summary> The RemoveHeaderSanitizerBody. </summary>
    public partial class RemoveHeaderSanitizerBody
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="RemoveHeaderSanitizerBody"/>. </summary>
        /// <param name="headersForRemoval"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="headersForRemoval"/> is null. </exception>
        public RemoveHeaderSanitizerBody(string headersForRemoval)
        {
            Argument.AssertNotNull(headersForRemoval, nameof(headersForRemoval));

            HeadersForRemoval = headersForRemoval;
        }

        /// <summary> Initializes a new instance of <see cref="RemoveHeaderSanitizerBody"/>. </summary>
        /// <param name="headersForRemoval"></param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal RemoveHeaderSanitizerBody(string headersForRemoval, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            HeadersForRemoval = headersForRemoval;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Gets the HeadersForRemoval. </summary>
        public string HeadersForRemoval { get; }
    }
}
