// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Microsoft.ClientModel.TestFramework.TestProxy
{
    internal static partial class SanitizerTypeExtensions
    {
        /// <param name="value"> The value to serialize. </param>
        public static string ToSerialString(this SanitizerType value) => value switch
        {
            SanitizerType.BodyKeySanitizer => "BodyKeySanitizer",
            SanitizerType.HeaderRegexSanitizer => "HeaderRegexSanitizer",
            SanitizerType.UriRegexSanitizer => "UriRegexSanitizer",
            SanitizerType.BodyRegexSanitizer => "BodyRegexSanitizer",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown SanitizerType value.")
        };

        /// <param name="value"> The value to deserialize. </param>
        public static SanitizerType ToSanitizerType(this string value)
        {
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "BodyKeySanitizer"))
            {
                return SanitizerType.BodyKeySanitizer;
            }
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "HeaderRegexSanitizer"))
            {
                return SanitizerType.HeaderRegexSanitizer;
            }
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "UriRegexSanitizer"))
            {
                return SanitizerType.UriRegexSanitizer;
            }
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "BodyRegexSanitizer"))
            {
                return SanitizerType.BodyRegexSanitizer;
            }
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown SanitizerType value.");
        }
    }
}
