// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Microsoft.ClientModel.TestFramework;

namespace Microsoft.ClientModel.TestFramework.TestProxy
{
    /// <summary> The AddBodyKeySanitizerRequest. </summary>
    internal partial class AddBodyKeySanitizerRequest
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="AddBodyKeySanitizerRequest"/>. </summary>
        /// <param name="sanitizer"> The body for a header regex sanitizer. </param>
        internal AddBodyKeySanitizerRequest(BodyKeySanitizer sanitizer)
        {
            Sanitizer = sanitizer;
        }

        /// <summary> Initializes a new instance of <see cref="AddBodyKeySanitizerRequest"/>. </summary>
        /// <param name="sanitizerType"></param>
        /// <param name="recordingId"></param>
        /// <param name="sanitizer"> The body for a header regex sanitizer. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal AddBodyKeySanitizerRequest(string sanitizerType, string recordingId, BodyKeySanitizer sanitizer, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            SanitizerType = sanitizerType;
            RecordingId = recordingId;
            Sanitizer = sanitizer;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Gets the SanitizerType. </summary>
        public string SanitizerType { get; } = "BodyKeySanitizer";

        /// <summary> Gets the RecordingId. </summary>
        public string RecordingId { get; }

        /// <summary> The body for a header regex sanitizer. </summary>
        public BodyKeySanitizer Sanitizer { get; }
    }
}
