// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Microsoft.ClientModel.TestFramework.TestProxy.Admin
{
    /// <summary> The RecordingOptions. </summary>
    public partial class RecordingOptions
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="RecordingOptions"/>. </summary>
        public RecordingOptions()
        {
        }

        /// <summary> Initializes a new instance of <see cref="RecordingOptions"/>. </summary>
        /// <param name="handleRedirects"></param>
        /// <param name="contextDirectory"></param>
        /// <param name="assetsStore"></param>
        /// <param name="transport"></param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal RecordingOptions(bool? handleRedirects, string contextDirectory, StoreType? assetsStore, TransportCustomizations transport, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            HandleRedirects = handleRedirects;
            ContextDirectory = contextDirectory;
            AssetsStore = assetsStore;
            Transport = transport;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Gets or sets the HandleRedirects. </summary>
        public bool? HandleRedirects { get; set; }

        /// <summary> Gets or sets the ContextDirectory. </summary>
        public string ContextDirectory { get; set; }

        /// <summary> Gets or sets the AssetsStore. </summary>
        public StoreType? AssetsStore { get; set; }

        /// <summary> Gets or sets the Transport. </summary>
        public TransportCustomizations Transport { get; set; }
    }
}
