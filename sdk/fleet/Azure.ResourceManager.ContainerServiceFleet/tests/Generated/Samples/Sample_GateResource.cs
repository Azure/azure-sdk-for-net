// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.ContainerServiceFleet.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.ContainerServiceFleet.Samples
{
    public partial class Sample_GateResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_GetsAGateResource()
        {
            // Generated from example definition: specification/containerservice/resource-manager/Microsoft.ContainerService/fleet/preview/2025-04-01-preview/examples/Gates_Get.json
            // this example is just showing the usage of "Gates_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this GateResource created on azure
            // for more information of creating GateResource, please refer to the document of GateResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "rg1";
            string fleetName = "fleet1";
            string gateName = "12345678-910a-bcde-f000-000000000000";
            ResourceIdentifier gateResourceId = GateResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, fleetName, gateName);
            GateResource gate = client.GetGateResource(gateResourceId);

            // invoke the operation
            GateResource result = await gate.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            GateData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_UpdatesAGateResource()
        {
            // Generated from example definition: specification/containerservice/resource-manager/Microsoft.ContainerService/fleet/preview/2025-04-01-preview/examples/Gates_Update.json
            // this example is just showing the usage of "Gates_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this GateResource created on azure
            // for more information of creating GateResource, please refer to the document of GateResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "rg1";
            string fleetName = "fleet1";
            string gateName = "12345678-910a-bcde-f000-000000000000";
            ResourceIdentifier gateResourceId = GateResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, fleetName, gateName);
            GateResource gate = client.GetGateResource(gateResourceId);

            // invoke the operation
            GatePatch patch = new GatePatch
            {
                GatePatchState = GateState.Completed,
            };
            ArmOperation<GateResource> lro = await gate.UpdateAsync(WaitUntil.Completed, patch);
            GateResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            GateData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
