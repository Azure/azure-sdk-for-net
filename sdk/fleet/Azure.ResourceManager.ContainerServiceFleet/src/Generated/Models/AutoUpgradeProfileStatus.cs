// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.ContainerServiceFleet.Models
{
    /// <summary> AutoUpgradeProfileStatus is the status of an auto upgrade profile. </summary>
    public partial class AutoUpgradeProfileStatus
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="AutoUpgradeProfileStatus"/>. </summary>
        public AutoUpgradeProfileStatus()
        {
            LastTriggerUpgradeVersions = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of <see cref="AutoUpgradeProfileStatus"/>. </summary>
        /// <param name="lastTriggeredOn"> The UTC time of the last attempt to automatically create and start an UpdateRun as triggered by the release of new versions. </param>
        /// <param name="lastTriggerStatus"> The status of the last AutoUpgrade trigger. </param>
        /// <param name="lastTriggerError"> The error details of the last trigger. </param>
        /// <param name="lastTriggerUpgradeVersions"> The target Kubernetes version or node image versions of the last trigger. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal AutoUpgradeProfileStatus(DateTimeOffset? lastTriggeredOn, AutoUpgradeLastTriggerStatus? lastTriggerStatus, ResponseError lastTriggerError, IReadOnlyList<string> lastTriggerUpgradeVersions, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            LastTriggeredOn = lastTriggeredOn;
            LastTriggerStatus = lastTriggerStatus;
            LastTriggerError = lastTriggerError;
            LastTriggerUpgradeVersions = lastTriggerUpgradeVersions;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The UTC time of the last attempt to automatically create and start an UpdateRun as triggered by the release of new versions. </summary>
        public DateTimeOffset? LastTriggeredOn { get; }
        /// <summary> The status of the last AutoUpgrade trigger. </summary>
        public AutoUpgradeLastTriggerStatus? LastTriggerStatus { get; }
        /// <summary> The error details of the last trigger. </summary>
        public ResponseError LastTriggerError { get; }
        /// <summary> The target Kubernetes version or node image versions of the last trigger. </summary>
        public IReadOnlyList<string> LastTriggerUpgradeVersions { get; }
    }
}
