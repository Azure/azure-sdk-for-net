// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.ContainerServiceFleet.Models
{
    /// <summary> Defines a stage which contains the groups to update and the steps to take (e.g., wait for a time period) before starting the next stage. </summary>
    public partial class ContainerServiceFleetUpdateStage
    {
        /// <summary> Initializes a new instance of <see cref="ContainerServiceFleetUpdateStage"/>. </summary>
        /// <param name="name"> The name of the stage. Must be unique within the UpdateRun. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> is null. </exception>
        public ContainerServiceFleetUpdateStage(string name)
        {
            Argument.AssertNotNull(name, nameof(name));

            Name = name;
            Groups = new ChangeTrackingList<ContainerServiceFleetUpdateGroup>();
        }

        /// <summary> Initializes a new instance of <see cref="ContainerServiceFleetUpdateStage"/>. </summary>
        /// <param name="name"> The name of the stage. Must be unique within the UpdateRun. </param>
        /// <param name="groups"> Defines the groups to be executed in parallel in this stage. Duplicate groups are not allowed. Min size: 1. </param>
        /// <param name="afterStageWaitInSeconds"> The time in seconds to wait at the end of this stage before starting the next one. Defaults to 0 seconds if unspecified. </param>
        internal ContainerServiceFleetUpdateStage(string name, IList<ContainerServiceFleetUpdateGroup> groups, int? afterStageWaitInSeconds)
        {
            Name = name;
            Groups = groups;
            AfterStageWaitInSeconds = afterStageWaitInSeconds;
        }

        /// <summary> The name of the stage. Must be unique within the UpdateRun. </summary>
        public string Name { get; set; }
        /// <summary> Defines the groups to be executed in parallel in this stage. Duplicate groups are not allowed. Min size: 1. </summary>
        public IList<ContainerServiceFleetUpdateGroup> Groups { get; }
        /// <summary> The time in seconds to wait at the end of this stage before starting the next one. Defaults to 0 seconds if unspecified. </summary>
        public int? AfterStageWaitInSeconds { get; set; }
    }
}
