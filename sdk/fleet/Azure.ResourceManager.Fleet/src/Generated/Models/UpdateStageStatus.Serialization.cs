// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Fleet.Models
{
    public partial class UpdateStageStatus
    {
        internal static UpdateStageStatus DeserializeUpdateStageStatus(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<UpdateStatus> status = default;
            Optional<string> name = default;
            Optional<IReadOnlyList<UpdateGroupStatus>> groups = default;
            Optional<WaitStatus> afterStageWaitStatus = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("status"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    status = UpdateStatus.DeserializeUpdateStatus(property.Value);
                    continue;
                }
                if (property.NameEquals("name"u8))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("groups"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<UpdateGroupStatus> array = new List<UpdateGroupStatus>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(UpdateGroupStatus.DeserializeUpdateGroupStatus(item));
                    }
                    groups = array;
                    continue;
                }
                if (property.NameEquals("afterStageWaitStatus"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    afterStageWaitStatus = WaitStatus.DeserializeWaitStatus(property.Value);
                    continue;
                }
            }
            return new UpdateStageStatus(status.Value, name.Value, Optional.ToList(groups), afterStageWaitStatus.Value);
        }
    }
}
