// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.ResourceManager;
using Azure.ResourceManager.DevTestLabs.Models;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.DevTestLabs
{
    /// <summary> A class to add extension methods to Azure.ResourceManager.DevTestLabs. </summary>
    public static partial class DevTestLabsExtensions
    {
        /// <summary>
        /// List labs in a subscription.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.DevTestLab/labs
        /// Operation Id: Labs_ListBySubscription
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="expand"> Specify the $expand query. Example: &apos;properties($select=defaultStorageAccount)&apos;. </param>
        /// <param name="filter"> The filter to apply to the operation. Example: &apos;$filter=contains(name,&apos;myName&apos;). </param>
        /// <param name="top"> The maximum number of resources to return from the operation. Example: &apos;$top=10&apos;. </param>
        /// <param name="orderby"> The ordering expression for the results, using OData notation. Example: &apos;$orderby=name desc&apos;. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="DevTestLabResource" /> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<DevTestLabResource> GetDevTestLabsAsync(this SubscriptionResource subscriptionResource, string expand = null, string filter = null, int? top = null, string orderby = null, CancellationToken cancellationToken = default)
        {
            DevTestLabsExtensionsGetDevTestLabsOptions options = new DevTestLabsExtensionsGetDevTestLabsOptions
            {
                Expand = expand,
                Filter = filter,
                Top = top,
                Orderby = orderby
            };

            return GetExtensionClient(subscriptionResource).GetDevTestLabsAsync(options, cancellationToken);
        }

        /// <summary>
        /// List labs in a subscription.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.DevTestLab/labs
        /// Operation Id: Labs_ListBySubscription
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="expand"> Specify the $expand query. Example: &apos;properties($select=defaultStorageAccount)&apos;. </param>
        /// <param name="filter"> The filter to apply to the operation. Example: &apos;$filter=contains(name,&apos;myName&apos;). </param>
        /// <param name="top"> The maximum number of resources to return from the operation. Example: &apos;$top=10&apos;. </param>
        /// <param name="orderby"> The ordering expression for the results, using OData notation. Example: &apos;$orderby=name desc&apos;. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="DevTestLabResource" /> that may take multiple service requests to iterate over. </returns>
        public static Pageable<DevTestLabResource> GetDevTestLabs(this SubscriptionResource subscriptionResource, string expand = null, string filter = null, int? top = null, string orderby = null, CancellationToken cancellationToken = default)
        {
            DevTestLabsExtensionsGetDevTestLabsOptions options = new DevTestLabsExtensionsGetDevTestLabsOptions
            {
                Expand = expand,
                Filter = filter,
                Top = top,
                Orderby = orderby
            };

            return GetExtensionClient(subscriptionResource).GetDevTestLabs(options, cancellationToken);
        }

        /// <summary>
        /// List schedules in a subscription.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.DevTestLab/schedules
        /// Operation Id: GlobalSchedules_ListBySubscription
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="expand"> Specify the $expand query. Example: &apos;properties($select=status)&apos;. </param>
        /// <param name="filter"> The filter to apply to the operation. Example: &apos;$filter=contains(name,&apos;myName&apos;). </param>
        /// <param name="top"> The maximum number of resources to return from the operation. Example: &apos;$top=10&apos;. </param>
        /// <param name="orderby"> The ordering expression for the results, using OData notation. Example: &apos;$orderby=name desc&apos;. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="DevTestLabGlobalScheduleResource" /> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<DevTestLabGlobalScheduleResource> GetDevTestLabGlobalSchedulesAsync(this SubscriptionResource subscriptionResource, string expand = null, string filter = null, int? top = null, string orderby = null, CancellationToken cancellationToken = default)
        {
            DevTestLabsExtensionsGetDevTestLabGlobalSchedulesOptions options = new DevTestLabsExtensionsGetDevTestLabGlobalSchedulesOptions
            {
                Expand = expand,
                Filter = filter,
                Top = top,
                Orderby = orderby
            };

            return GetExtensionClient(subscriptionResource).GetDevTestLabGlobalSchedulesAsync(options, cancellationToken);
        }

        /// <summary>
        /// List schedules in a subscription.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.DevTestLab/schedules
        /// Operation Id: GlobalSchedules_ListBySubscription
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="expand"> Specify the $expand query. Example: &apos;properties($select=status)&apos;. </param>
        /// <param name="filter"> The filter to apply to the operation. Example: &apos;$filter=contains(name,&apos;myName&apos;). </param>
        /// <param name="top"> The maximum number of resources to return from the operation. Example: &apos;$top=10&apos;. </param>
        /// <param name="orderby"> The ordering expression for the results, using OData notation. Example: &apos;$orderby=name desc&apos;. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="DevTestLabGlobalScheduleResource" /> that may take multiple service requests to iterate over. </returns>
        public static Pageable<DevTestLabGlobalScheduleResource> GetDevTestLabGlobalSchedules(this SubscriptionResource subscriptionResource, string expand = null, string filter = null, int? top = null, string orderby = null, CancellationToken cancellationToken = default)
        {
            DevTestLabsExtensionsGetDevTestLabGlobalSchedulesOptions options = new DevTestLabsExtensionsGetDevTestLabGlobalSchedulesOptions
            {
                Expand = expand,
                Filter = filter,
                Top = top,
                Orderby = orderby
            };

            return GetExtensionClient(subscriptionResource).GetDevTestLabGlobalSchedules(options, cancellationToken);
        }
    }
}
