// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DevTestLabs.Models
{
    public partial class DevTestLabSubnetOverride : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(ResourceId))
            {
                writer.WritePropertyName("resourceId"u8);
                writer.WriteStringValue(ResourceId);
            }
            if (Optional.IsDefined(LabSubnetName))
            {
                writer.WritePropertyName("labSubnetName"u8);
                writer.WriteStringValue(LabSubnetName);
            }
            if (Optional.IsDefined(UseInVmCreationPermission))
            {
                writer.WritePropertyName("useInVmCreationPermission"u8);
                writer.WriteStringValue(UseInVmCreationPermission.Value.ToString());
            }
            if (Optional.IsDefined(UsePublicIPAddressPermission))
            {
                writer.WritePropertyName("usePublicIpAddressPermission"u8);
                writer.WriteStringValue(UsePublicIPAddressPermission.Value.ToString());
            }
            if (Optional.IsDefined(SharedPublicIPAddressConfiguration))
            {
                writer.WritePropertyName("sharedPublicIpAddressConfiguration"u8);
                writer.WriteObjectValue(SharedPublicIPAddressConfiguration);
            }
            if (Optional.IsDefined(VirtualNetworkPoolName))
            {
                writer.WritePropertyName("virtualNetworkPoolName"u8);
                writer.WriteStringValue(VirtualNetworkPoolName);
            }
            writer.WriteEndObject();
        }

        internal static DevTestLabSubnetOverride DeserializeDevTestLabSubnetOverride(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<ResourceIdentifier> resourceId = default;
            Optional<string> labSubnetName = default;
            Optional<DevTestLabUsagePermissionType> useInVmCreationPermission = default;
            Optional<DevTestLabUsagePermissionType> usePublicIPAddressPermission = default;
            Optional<SubnetSharedPublicIPAddressConfiguration> sharedPublicIPAddressConfiguration = default;
            Optional<string> virtualNetworkPoolName = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("resourceId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    resourceId = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("labSubnetName"u8))
                {
                    labSubnetName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("useInVmCreationPermission"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    useInVmCreationPermission = new DevTestLabUsagePermissionType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("usePublicIpAddressPermission"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    usePublicIPAddressPermission = new DevTestLabUsagePermissionType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("sharedPublicIpAddressConfiguration"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    sharedPublicIPAddressConfiguration = SubnetSharedPublicIPAddressConfiguration.DeserializeSubnetSharedPublicIPAddressConfiguration(property.Value);
                    continue;
                }
                if (property.NameEquals("virtualNetworkPoolName"u8))
                {
                    virtualNetworkPoolName = property.Value.GetString();
                    continue;
                }
            }
            return new DevTestLabSubnetOverride(resourceId.Value, labSubnetName.Value, Optional.ToNullable(useInVmCreationPermission), Optional.ToNullable(usePublicIPAddressPermission), sharedPublicIPAddressConfiguration.Value, virtualNetworkPoolName.Value);
        }
    }
}
