// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DevTestLabs.Models
{
    public partial class ArtifactInstallProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(ArtifactId))
            {
                writer.WritePropertyName("artifactId");
                writer.WriteStringValue(ArtifactId);
            }
            if (Optional.IsDefined(ArtifactTitle))
            {
                writer.WritePropertyName("artifactTitle");
                writer.WriteStringValue(ArtifactTitle);
            }
            if (Optional.IsCollectionDefined(Parameters))
            {
                writer.WritePropertyName("parameters");
                writer.WriteStartArray();
                foreach (var item in Parameters)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(Status))
            {
                writer.WritePropertyName("status");
                writer.WriteStringValue(Status);
            }
            if (Optional.IsDefined(DeploymentStatusMessage))
            {
                writer.WritePropertyName("deploymentStatusMessage");
                writer.WriteStringValue(DeploymentStatusMessage);
            }
            if (Optional.IsDefined(VmExtensionStatusMessage))
            {
                writer.WritePropertyName("vmExtensionStatusMessage");
                writer.WriteStringValue(VmExtensionStatusMessage);
            }
            if (Optional.IsDefined(InstallOn))
            {
                writer.WritePropertyName("installTime");
                writer.WriteStringValue(InstallOn.Value, "O");
            }
            writer.WriteEndObject();
        }

        internal static ArtifactInstallProperties DeserializeArtifactInstallProperties(JsonElement element)
        {
            Optional<string> artifactId = default;
            Optional<string> artifactTitle = default;
            Optional<IList<ArtifactParameterProperties>> parameters = default;
            Optional<string> status = default;
            Optional<string> deploymentStatusMessage = default;
            Optional<string> vmExtensionStatusMessage = default;
            Optional<DateTimeOffset> installTime = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("artifactId"))
                {
                    artifactId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("artifactTitle"))
                {
                    artifactTitle = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("parameters"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<ArtifactParameterProperties> array = new List<ArtifactParameterProperties>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ArtifactParameterProperties.DeserializeArtifactParameterProperties(item));
                    }
                    parameters = array;
                    continue;
                }
                if (property.NameEquals("status"))
                {
                    status = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("deploymentStatusMessage"))
                {
                    deploymentStatusMessage = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("vmExtensionStatusMessage"))
                {
                    vmExtensionStatusMessage = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("installTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    installTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
            }
            return new ArtifactInstallProperties(artifactId.Value, artifactTitle.Value, Optional.ToList(parameters), status.Value, deploymentStatusMessage.Value, vmExtensionStatusMessage.Value, Optional.ToNullable(installTime));
        }
    }
}
