// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DevTestLabs.Models
{
    public partial class LabResourceCostProperties
    {
        internal static LabResourceCostProperties DeserializeLabResourceCostProperties(JsonElement element)
        {
            Optional<string> resourcename = default;
            Optional<string> resourceUId = default;
            Optional<double> resourceCost = default;
            Optional<string> resourceType = default;
            Optional<string> resourceOwner = default;
            Optional<string> resourcePricingTier = default;
            Optional<string> resourceStatus = default;
            Optional<string> resourceId = default;
            Optional<string> externalResourceId = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("resourcename"))
                {
                    resourcename = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("resourceUId"))
                {
                    resourceUId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("resourceCost"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    resourceCost = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("resourceType"))
                {
                    resourceType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("resourceOwner"))
                {
                    resourceOwner = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("resourcePricingTier"))
                {
                    resourcePricingTier = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("resourceStatus"))
                {
                    resourceStatus = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("resourceId"))
                {
                    resourceId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("externalResourceId"))
                {
                    externalResourceId = property.Value.GetString();
                    continue;
                }
            }
            return new LabResourceCostProperties(resourcename.Value, resourceUId.Value, Optional.ToNullable(resourceCost), resourceType.Value, resourceOwner.Value, resourcePricingTier.Value, resourceStatus.Value, resourceId.Value, externalResourceId.Value);
        }
    }
}
