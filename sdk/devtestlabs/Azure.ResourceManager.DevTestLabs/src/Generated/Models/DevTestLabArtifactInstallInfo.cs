// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.DevTestLabs.Models
{
    /// <summary>
    /// Properties of an artifact.
    /// Serialized Name: ArtifactInstallProperties
    /// </summary>
    public partial class DevTestLabArtifactInstallInfo
    {
        /// <summary> Initializes a new instance of DevTestLabArtifactInstallInfo. </summary>
        public DevTestLabArtifactInstallInfo()
        {
            Parameters = new ChangeTrackingList<DevTestLabArtifactParameter>();
        }

        /// <summary> Initializes a new instance of DevTestLabArtifactInstallInfo. </summary>
        /// <param name="artifactId">
        /// The artifact&apos;s identifier.
        /// Serialized Name: ArtifactInstallProperties.artifactId
        /// </param>
        /// <param name="artifactTitle">
        /// The artifact&apos;s title.
        /// Serialized Name: ArtifactInstallProperties.artifactTitle
        /// </param>
        /// <param name="parameters">
        /// The parameters of the artifact.
        /// Serialized Name: ArtifactInstallProperties.parameters
        /// </param>
        /// <param name="status">
        /// The status of the artifact.
        /// Serialized Name: ArtifactInstallProperties.status
        /// </param>
        /// <param name="deploymentStatusMessage">
        /// The status message from the deployment.
        /// Serialized Name: ArtifactInstallProperties.deploymentStatusMessage
        /// </param>
        /// <param name="vmExtensionStatusMessage">
        /// The status message from the virtual machine extension.
        /// Serialized Name: ArtifactInstallProperties.vmExtensionStatusMessage
        /// </param>
        /// <param name="installOn">
        /// The time that the artifact starts to install on the virtual machine.
        /// Serialized Name: ArtifactInstallProperties.installTime
        /// </param>
        internal DevTestLabArtifactInstallInfo(string artifactId, string artifactTitle, IList<DevTestLabArtifactParameter> parameters, string status, string deploymentStatusMessage, string vmExtensionStatusMessage, DateTimeOffset? installOn)
        {
            ArtifactId = artifactId;
            ArtifactTitle = artifactTitle;
            Parameters = parameters;
            Status = status;
            DeploymentStatusMessage = deploymentStatusMessage;
            VmExtensionStatusMessage = vmExtensionStatusMessage;
            InstallOn = installOn;
        }

        /// <summary>
        /// The artifact&apos;s identifier.
        /// Serialized Name: ArtifactInstallProperties.artifactId
        /// </summary>
        public string ArtifactId { get; set; }
        /// <summary>
        /// The artifact&apos;s title.
        /// Serialized Name: ArtifactInstallProperties.artifactTitle
        /// </summary>
        public string ArtifactTitle { get; set; }
        /// <summary>
        /// The parameters of the artifact.
        /// Serialized Name: ArtifactInstallProperties.parameters
        /// </summary>
        public IList<DevTestLabArtifactParameter> Parameters { get; }
        /// <summary>
        /// The status of the artifact.
        /// Serialized Name: ArtifactInstallProperties.status
        /// </summary>
        public string Status { get; set; }
        /// <summary>
        /// The status message from the deployment.
        /// Serialized Name: ArtifactInstallProperties.deploymentStatusMessage
        /// </summary>
        public string DeploymentStatusMessage { get; set; }
        /// <summary>
        /// The status message from the virtual machine extension.
        /// Serialized Name: ArtifactInstallProperties.vmExtensionStatusMessage
        /// </summary>
        public string VmExtensionStatusMessage { get; set; }
        /// <summary>
        /// The time that the artifact starts to install on the virtual machine.
        /// Serialized Name: ArtifactInstallProperties.installTime
        /// </summary>
        public DateTimeOffset? InstallOn { get; set; }
    }
}
