// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.DevTestLabs.Models
{
    /// <summary>
    /// Properties for creating a schedule.
    /// Serialized Name: ScheduleCreationParameter
    /// </summary>
    public partial class ScheduleCreationParameter
    {
        /// <summary> Initializes a new instance of ScheduleCreationParameter. </summary>
        public ScheduleCreationParameter()
        {
            Tags = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of ScheduleCreationParameter. </summary>
        /// <param name="name">
        /// The name of the virtual machine or environment
        /// Serialized Name: ScheduleCreationParameter.name
        /// </param>
        /// <param name="location">
        /// The location of the new virtual machine or environment
        /// Serialized Name: ScheduleCreationParameter.location
        /// </param>
        /// <param name="tags">
        /// The tags of the resource.
        /// Serialized Name: ScheduleCreationParameter.tags
        /// </param>
        /// <param name="status">
        /// The status of the schedule (i.e. Enabled, Disabled)
        /// Serialized Name: ScheduleCreationParameter.properties.status
        /// </param>
        /// <param name="taskType">
        /// The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
        /// Serialized Name: ScheduleCreationParameter.properties.taskType
        /// </param>
        /// <param name="weeklyRecurrence">
        /// If the schedule will occur only some days of the week, specify the weekly recurrence.
        /// Serialized Name: ScheduleCreationParameter.properties.weeklyRecurrence
        /// </param>
        /// <param name="dailyRecurrence">
        /// If the schedule will occur once each day of the week, specify the daily recurrence.
        /// Serialized Name: ScheduleCreationParameter.properties.dailyRecurrence
        /// </param>
        /// <param name="hourlyRecurrence">
        /// If the schedule will occur multiple times a day, specify the hourly recurrence.
        /// Serialized Name: ScheduleCreationParameter.properties.hourlyRecurrence
        /// </param>
        /// <param name="timeZoneId">
        /// The time zone ID (e.g. Pacific Standard time).
        /// Serialized Name: ScheduleCreationParameter.properties.timeZoneId
        /// </param>
        /// <param name="notificationSettings">
        /// Notification settings.
        /// Serialized Name: ScheduleCreationParameter.properties.notificationSettings
        /// </param>
        /// <param name="targetResourceId">
        /// The resource ID to which the schedule belongs
        /// Serialized Name: ScheduleCreationParameter.properties.targetResourceId
        /// </param>
        internal ScheduleCreationParameter(string name, AzureLocation? location, IDictionary<string, string> tags, EnableStatus? status, string taskType, WeekDetails weeklyRecurrence, DayDetails dailyRecurrence, HourDetails hourlyRecurrence, string timeZoneId, NotificationSettings notificationSettings, string targetResourceId)
        {
            Name = name;
            Location = location;
            Tags = tags;
            Status = status;
            TaskType = taskType;
            WeeklyRecurrence = weeklyRecurrence;
            DailyRecurrence = dailyRecurrence;
            HourlyRecurrence = hourlyRecurrence;
            TimeZoneId = timeZoneId;
            NotificationSettings = notificationSettings;
            TargetResourceId = targetResourceId;
        }

        /// <summary>
        /// The name of the virtual machine or environment
        /// Serialized Name: ScheduleCreationParameter.name
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// The location of the new virtual machine or environment
        /// Serialized Name: ScheduleCreationParameter.location
        /// </summary>
        public AzureLocation? Location { get; }
        /// <summary>
        /// The tags of the resource.
        /// Serialized Name: ScheduleCreationParameter.tags
        /// </summary>
        public IDictionary<string, string> Tags { get; }
        /// <summary>
        /// The status of the schedule (i.e. Enabled, Disabled)
        /// Serialized Name: ScheduleCreationParameter.properties.status
        /// </summary>
        public EnableStatus? Status { get; set; }
        /// <summary>
        /// The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
        /// Serialized Name: ScheduleCreationParameter.properties.taskType
        /// </summary>
        public string TaskType { get; set; }
        /// <summary>
        /// If the schedule will occur only some days of the week, specify the weekly recurrence.
        /// Serialized Name: ScheduleCreationParameter.properties.weeklyRecurrence
        /// </summary>
        public WeekDetails WeeklyRecurrence { get; set; }
        /// <summary>
        /// If the schedule will occur once each day of the week, specify the daily recurrence.
        /// Serialized Name: ScheduleCreationParameter.properties.dailyRecurrence
        /// </summary>
        internal DayDetails DailyRecurrence { get; set; }
        /// <summary>
        /// The time of day the schedule will occur.
        /// Serialized Name: DayDetails.time
        /// </summary>
        public string DailyRecurrenceTime
        {
            get => DailyRecurrence is null ? default : DailyRecurrence.Time;
            set
            {
                if (DailyRecurrence is null)
                    DailyRecurrence = new DayDetails();
                DailyRecurrence.Time = value;
            }
        }

        /// <summary>
        /// If the schedule will occur multiple times a day, specify the hourly recurrence.
        /// Serialized Name: ScheduleCreationParameter.properties.hourlyRecurrence
        /// </summary>
        internal HourDetails HourlyRecurrence { get; set; }
        /// <summary>
        /// Minutes of the hour the schedule will run.
        /// Serialized Name: HourDetails.minute
        /// </summary>
        public int? HourlyRecurrenceMinute
        {
            get => HourlyRecurrence is null ? default : HourlyRecurrence.Minute;
            set
            {
                if (HourlyRecurrence is null)
                    HourlyRecurrence = new HourDetails();
                HourlyRecurrence.Minute = value;
            }
        }

        /// <summary>
        /// The time zone ID (e.g. Pacific Standard time).
        /// Serialized Name: ScheduleCreationParameter.properties.timeZoneId
        /// </summary>
        public string TimeZoneId { get; set; }
        /// <summary>
        /// Notification settings.
        /// Serialized Name: ScheduleCreationParameter.properties.notificationSettings
        /// </summary>
        public NotificationSettings NotificationSettings { get; set; }
        /// <summary>
        /// The resource ID to which the schedule belongs
        /// Serialized Name: ScheduleCreationParameter.properties.targetResourceId
        /// </summary>
        public string TargetResourceId { get; set; }
    }
}
