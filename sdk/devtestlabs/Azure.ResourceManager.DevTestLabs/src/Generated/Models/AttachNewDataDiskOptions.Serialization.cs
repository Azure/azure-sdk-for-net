// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DevTestLabs.Models
{
    public partial class AttachNewDataDiskOptions : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(DiskSizeGiB))
            {
                writer.WritePropertyName("diskSizeGiB");
                writer.WriteNumberValue(DiskSizeGiB.Value);
            }
            if (Optional.IsDefined(DiskName))
            {
                writer.WritePropertyName("diskName");
                writer.WriteStringValue(DiskName);
            }
            if (Optional.IsDefined(DiskType))
            {
                writer.WritePropertyName("diskType");
                writer.WriteStringValue(DiskType.Value.ToString());
            }
            writer.WriteEndObject();
        }

        internal static AttachNewDataDiskOptions DeserializeAttachNewDataDiskOptions(JsonElement element)
        {
            Optional<int> diskSizeGiB = default;
            Optional<string> diskName = default;
            Optional<StorageType> diskType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("diskSizeGiB"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    diskSizeGiB = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("diskName"))
                {
                    diskName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("diskType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    diskType = new StorageType(property.Value.GetString());
                    continue;
                }
            }
            return new AttachNewDataDiskOptions(Optional.ToNullable(diskSizeGiB), diskName.Value, Optional.ToNullable(diskType));
        }
    }
}
