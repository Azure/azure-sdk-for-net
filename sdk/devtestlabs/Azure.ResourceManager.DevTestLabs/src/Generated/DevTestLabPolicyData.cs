// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.DevTestLabs.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.DevTestLabs
{
    /// <summary> A class representing the DevTestLabPolicy data model. </summary>
    public partial class DevTestLabPolicyData : TrackedResourceData
    {
        /// <summary> Initializes a new instance of DevTestLabPolicyData. </summary>
        /// <param name="location"> The location. </param>
        public DevTestLabPolicyData(AzureLocation location) : base(location)
        {
        }

        /// <summary> Initializes a new instance of DevTestLabPolicyData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="description">
        /// The description of the policy.
        /// Serialized Name: Policy.properties.description
        /// </param>
        /// <param name="status">
        /// The status of the policy.
        /// Serialized Name: Policy.properties.status
        /// </param>
        /// <param name="factName">
        /// The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab, etc.
        /// Serialized Name: Policy.properties.factName
        /// </param>
        /// <param name="factData">
        /// The fact data of the policy.
        /// Serialized Name: Policy.properties.factData
        /// </param>
        /// <param name="threshold">
        /// The threshold of the policy (i.e. a number for MaxValuePolicy, and a JSON array of values for AllowedValuesPolicy).
        /// Serialized Name: Policy.properties.threshold
        /// </param>
        /// <param name="evaluatorType">
        /// The evaluator type of the policy (i.e. AllowedValuesPolicy, MaxValuePolicy).
        /// Serialized Name: Policy.properties.evaluatorType
        /// </param>
        /// <param name="createdOn">
        /// The creation date of the policy.
        /// Serialized Name: Policy.properties.createdDate
        /// </param>
        /// <param name="provisioningState">
        /// The provisioning status of the resource.
        /// Serialized Name: Policy.properties.provisioningState
        /// </param>
        /// <param name="uniqueIdentifier">
        /// The unique immutable identifier of a resource (Guid).
        /// Serialized Name: Policy.properties.uniqueIdentifier
        /// </param>
        internal DevTestLabPolicyData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary<string, string> tags, AzureLocation location, string description, PolicyStatus? status, PolicyFactName? factName, string factData, string threshold, PolicyEvaluatorType? evaluatorType, DateTimeOffset? createdOn, string provisioningState, string uniqueIdentifier) : base(id, name, resourceType, systemData, tags, location)
        {
            Description = description;
            Status = status;
            FactName = factName;
            FactData = factData;
            Threshold = threshold;
            EvaluatorType = evaluatorType;
            CreatedOn = createdOn;
            ProvisioningState = provisioningState;
            UniqueIdentifier = uniqueIdentifier;
        }

        /// <summary>
        /// The description of the policy.
        /// Serialized Name: Policy.properties.description
        /// </summary>
        public string Description { get; set; }
        /// <summary>
        /// The status of the policy.
        /// Serialized Name: Policy.properties.status
        /// </summary>
        public PolicyStatus? Status { get; set; }
        /// <summary>
        /// The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab, etc.
        /// Serialized Name: Policy.properties.factName
        /// </summary>
        public PolicyFactName? FactName { get; set; }
        /// <summary>
        /// The fact data of the policy.
        /// Serialized Name: Policy.properties.factData
        /// </summary>
        public string FactData { get; set; }
        /// <summary>
        /// The threshold of the policy (i.e. a number for MaxValuePolicy, and a JSON array of values for AllowedValuesPolicy).
        /// Serialized Name: Policy.properties.threshold
        /// </summary>
        public string Threshold { get; set; }
        /// <summary>
        /// The evaluator type of the policy (i.e. AllowedValuesPolicy, MaxValuePolicy).
        /// Serialized Name: Policy.properties.evaluatorType
        /// </summary>
        public PolicyEvaluatorType? EvaluatorType { get; set; }
        /// <summary>
        /// The creation date of the policy.
        /// Serialized Name: Policy.properties.createdDate
        /// </summary>
        public DateTimeOffset? CreatedOn { get; }
        /// <summary>
        /// The provisioning status of the resource.
        /// Serialized Name: Policy.properties.provisioningState
        /// </summary>
        public string ProvisioningState { get; }
        /// <summary>
        /// The unique immutable identifier of a resource (Guid).
        /// Serialized Name: Policy.properties.uniqueIdentifier
        /// </summary>
        public string UniqueIdentifier { get; }
    }
}
