// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.DevTestLabs.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.DevTestLabs
{
    /// <summary> A class representing the DevTestLabVm data model. </summary>
    public partial class DevTestLabVmData : TrackedResourceData
    {
        /// <summary> Initializes a new instance of DevTestLabVmData. </summary>
        /// <param name="location"> The location. </param>
        public DevTestLabVmData(AzureLocation location) : base(location)
        {
            Artifacts = new ChangeTrackingList<DevTestLabArtifactInstallInfo>();
            DataDiskParameters = new ChangeTrackingList<DevTestLabDataDiskProperties>();
            ScheduleParameters = new ChangeTrackingList<DevTestLabScheduleCreationParameter>();
        }

        /// <summary> Initializes a new instance of DevTestLabVmData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="notes">
        /// The notes of the virtual machine.
        /// Serialized Name: LabVirtualMachine.properties.notes
        /// </param>
        /// <param name="ownerObjectId">
        /// The object identifier of the owner of the virtual machine.
        /// Serialized Name: LabVirtualMachine.properties.ownerObjectId
        /// </param>
        /// <param name="ownerUserPrincipalName">
        /// The user principal name of the virtual machine owner.
        /// Serialized Name: LabVirtualMachine.properties.ownerUserPrincipalName
        /// </param>
        /// <param name="createdByUserId">
        /// The object identifier of the creator of the virtual machine.
        /// Serialized Name: LabVirtualMachine.properties.createdByUserId
        /// </param>
        /// <param name="createdByUser">
        /// The email address of creator of the virtual machine.
        /// Serialized Name: LabVirtualMachine.properties.createdByUser
        /// </param>
        /// <param name="createdOn">
        /// The creation date of the virtual machine.
        /// Serialized Name: LabVirtualMachine.properties.createdDate
        /// </param>
        /// <param name="computeId">
        /// The resource identifier (Microsoft.Compute) of the virtual machine.
        /// Serialized Name: LabVirtualMachine.properties.computeId
        /// </param>
        /// <param name="customImageId">
        /// The custom image identifier of the virtual machine.
        /// Serialized Name: LabVirtualMachine.properties.customImageId
        /// </param>
        /// <param name="osType">
        /// The OS type of the virtual machine.
        /// Serialized Name: LabVirtualMachine.properties.osType
        /// </param>
        /// <param name="size">
        /// The size of the virtual machine.
        /// Serialized Name: LabVirtualMachine.properties.size
        /// </param>
        /// <param name="userName">
        /// The user name of the virtual machine.
        /// Serialized Name: LabVirtualMachine.properties.userName
        /// </param>
        /// <param name="password">
        /// The password of the virtual machine administrator.
        /// Serialized Name: LabVirtualMachine.properties.password
        /// </param>
        /// <param name="sshKey">
        /// The SSH key of the virtual machine administrator.
        /// Serialized Name: LabVirtualMachine.properties.sshKey
        /// </param>
        /// <param name="isAuthenticationWithSshKey">
        /// Indicates whether this virtual machine uses an SSH key for authentication.
        /// Serialized Name: LabVirtualMachine.properties.isAuthenticationWithSshKey
        /// </param>
        /// <param name="fqdn">
        /// The fully-qualified domain name of the virtual machine.
        /// Serialized Name: LabVirtualMachine.properties.fqdn
        /// </param>
        /// <param name="labSubnetName">
        /// The lab subnet name of the virtual machine.
        /// Serialized Name: LabVirtualMachine.properties.labSubnetName
        /// </param>
        /// <param name="labVirtualNetworkId">
        /// The lab virtual network identifier of the virtual machine.
        /// Serialized Name: LabVirtualMachine.properties.labVirtualNetworkId
        /// </param>
        /// <param name="isPublicIPAddressDisallowed">
        /// Indicates whether the virtual machine is to be created without a public IP address.
        /// Serialized Name: LabVirtualMachine.properties.disallowPublicIpAddress
        /// </param>
        /// <param name="artifacts">
        /// The artifacts to be installed on the virtual machine.
        /// Serialized Name: LabVirtualMachine.properties.artifacts
        /// </param>
        /// <param name="artifactDeploymentStatus">
        /// The artifact deployment status for the virtual machine.
        /// Serialized Name: LabVirtualMachine.properties.artifactDeploymentStatus
        /// </param>
        /// <param name="galleryImageReference">
        /// The Microsoft Azure Marketplace image reference of the virtual machine.
        /// Serialized Name: LabVirtualMachine.properties.galleryImageReference
        /// </param>
        /// <param name="planId">
        /// The id of the plan associated with the virtual machine image
        /// Serialized Name: LabVirtualMachine.properties.planId
        /// </param>
        /// <param name="computeVm">
        /// The compute virtual machine properties.
        /// Serialized Name: LabVirtualMachine.properties.computeVm
        /// </param>
        /// <param name="networkInterface">
        /// The network interface properties.
        /// Serialized Name: LabVirtualMachine.properties.networkInterface
        /// </param>
        /// <param name="applicableSchedule">
        /// The applicable schedule for the virtual machine.
        /// Serialized Name: LabVirtualMachine.properties.applicableSchedule
        /// </param>
        /// <param name="expireOn">
        /// The expiration date for VM.
        /// Serialized Name: LabVirtualMachine.properties.expirationDate
        /// </param>
        /// <param name="allowClaim">
        /// Indicates whether another user can take ownership of the virtual machine
        /// Serialized Name: LabVirtualMachine.properties.allowClaim
        /// </param>
        /// <param name="storageType">
        /// Storage type to use for virtual machine (i.e. Standard, Premium).
        /// Serialized Name: LabVirtualMachine.properties.storageType
        /// </param>
        /// <param name="virtualMachineCreationSource">
        /// Tells source of creation of lab virtual machine. Output property only.
        /// Serialized Name: LabVirtualMachine.properties.virtualMachineCreationSource
        /// </param>
        /// <param name="environmentId">
        /// The resource ID of the environment that contains this virtual machine, if any.
        /// Serialized Name: LabVirtualMachine.properties.environmentId
        /// </param>
        /// <param name="dataDiskParameters">
        /// New or existing data disks to attach to the virtual machine after creation
        /// Serialized Name: LabVirtualMachine.properties.dataDiskParameters
        /// </param>
        /// <param name="scheduleParameters">
        /// Virtual Machine schedules to be created
        /// Serialized Name: LabVirtualMachine.properties.scheduleParameters
        /// </param>
        /// <param name="lastKnownPowerState">
        /// Last known compute power state captured in DTL
        /// Serialized Name: LabVirtualMachine.properties.lastKnownPowerState
        /// </param>
        /// <param name="provisioningState">
        /// The provisioning status of the resource.
        /// Serialized Name: LabVirtualMachine.properties.provisioningState
        /// </param>
        /// <param name="uniqueIdentifier">
        /// The unique immutable identifier of a resource (Guid).
        /// Serialized Name: LabVirtualMachine.properties.uniqueIdentifier
        /// </param>
        internal DevTestLabVmData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary<string, string> tags, AzureLocation location, string notes, string ownerObjectId, string ownerUserPrincipalName, string createdByUserId, string createdByUser, DateTimeOffset? createdOn, ResourceIdentifier computeId, string customImageId, string osType, string size, string userName, string password, string sshKey, bool? isAuthenticationWithSshKey, string fqdn, string labSubnetName, ResourceIdentifier labVirtualNetworkId, bool? isPublicIPAddressDisallowed, IList<DevTestLabArtifactInstallInfo> artifacts, DevTestLabArtifactDeploymentStatus artifactDeploymentStatus, DevTestLabGalleryImageReference galleryImageReference, string planId, ComputeVmProperties computeVm, DevTestLabNetworkInterface networkInterface, DevTestLabApplicableSchedule applicableSchedule, DateTimeOffset? expireOn, bool? allowClaim, string storageType, DevTestLabVmCreationSource? virtualMachineCreationSource, ResourceIdentifier environmentId, IList<DevTestLabDataDiskProperties> dataDiskParameters, IList<DevTestLabScheduleCreationParameter> scheduleParameters, string lastKnownPowerState, string provisioningState, string uniqueIdentifier) : base(id, name, resourceType, systemData, tags, location)
        {
            Notes = notes;
            OwnerObjectId = ownerObjectId;
            OwnerUserPrincipalName = ownerUserPrincipalName;
            CreatedByUserId = createdByUserId;
            CreatedByUser = createdByUser;
            CreatedOn = createdOn;
            ComputeId = computeId;
            CustomImageId = customImageId;
            OSType = osType;
            Size = size;
            UserName = userName;
            Password = password;
            SshKey = sshKey;
            IsAuthenticationWithSshKey = isAuthenticationWithSshKey;
            Fqdn = fqdn;
            LabSubnetName = labSubnetName;
            LabVirtualNetworkId = labVirtualNetworkId;
            IsPublicIPAddressDisallowed = isPublicIPAddressDisallowed;
            Artifacts = artifacts;
            ArtifactDeploymentStatus = artifactDeploymentStatus;
            GalleryImageReference = galleryImageReference;
            PlanId = planId;
            ComputeVm = computeVm;
            NetworkInterface = networkInterface;
            ApplicableSchedule = applicableSchedule;
            ExpireOn = expireOn;
            AllowClaim = allowClaim;
            StorageType = storageType;
            VirtualMachineCreationSource = virtualMachineCreationSource;
            EnvironmentId = environmentId;
            DataDiskParameters = dataDiskParameters;
            ScheduleParameters = scheduleParameters;
            LastKnownPowerState = lastKnownPowerState;
            ProvisioningState = provisioningState;
            UniqueIdentifier = uniqueIdentifier;
        }

        /// <summary>
        /// The notes of the virtual machine.
        /// Serialized Name: LabVirtualMachine.properties.notes
        /// </summary>
        public string Notes { get; set; }
        /// <summary>
        /// The object identifier of the owner of the virtual machine.
        /// Serialized Name: LabVirtualMachine.properties.ownerObjectId
        /// </summary>
        public string OwnerObjectId { get; set; }
        /// <summary>
        /// The user principal name of the virtual machine owner.
        /// Serialized Name: LabVirtualMachine.properties.ownerUserPrincipalName
        /// </summary>
        public string OwnerUserPrincipalName { get; set; }
        /// <summary>
        /// The object identifier of the creator of the virtual machine.
        /// Serialized Name: LabVirtualMachine.properties.createdByUserId
        /// </summary>
        public string CreatedByUserId { get; }
        /// <summary>
        /// The email address of creator of the virtual machine.
        /// Serialized Name: LabVirtualMachine.properties.createdByUser
        /// </summary>
        public string CreatedByUser { get; }
        /// <summary>
        /// The creation date of the virtual machine.
        /// Serialized Name: LabVirtualMachine.properties.createdDate
        /// </summary>
        public DateTimeOffset? CreatedOn { get; set; }
        /// <summary>
        /// The resource identifier (Microsoft.Compute) of the virtual machine.
        /// Serialized Name: LabVirtualMachine.properties.computeId
        /// </summary>
        public ResourceIdentifier ComputeId { get; }
        /// <summary>
        /// The custom image identifier of the virtual machine.
        /// Serialized Name: LabVirtualMachine.properties.customImageId
        /// </summary>
        public string CustomImageId { get; set; }
        /// <summary>
        /// The OS type of the virtual machine.
        /// Serialized Name: LabVirtualMachine.properties.osType
        /// </summary>
        public string OSType { get; }
        /// <summary>
        /// The size of the virtual machine.
        /// Serialized Name: LabVirtualMachine.properties.size
        /// </summary>
        public string Size { get; set; }
        /// <summary>
        /// The user name of the virtual machine.
        /// Serialized Name: LabVirtualMachine.properties.userName
        /// </summary>
        public string UserName { get; set; }
        /// <summary>
        /// The password of the virtual machine administrator.
        /// Serialized Name: LabVirtualMachine.properties.password
        /// </summary>
        public string Password { get; set; }
        /// <summary>
        /// The SSH key of the virtual machine administrator.
        /// Serialized Name: LabVirtualMachine.properties.sshKey
        /// </summary>
        public string SshKey { get; set; }
        /// <summary>
        /// Indicates whether this virtual machine uses an SSH key for authentication.
        /// Serialized Name: LabVirtualMachine.properties.isAuthenticationWithSshKey
        /// </summary>
        public bool? IsAuthenticationWithSshKey { get; set; }
        /// <summary>
        /// The fully-qualified domain name of the virtual machine.
        /// Serialized Name: LabVirtualMachine.properties.fqdn
        /// </summary>
        public string Fqdn { get; }
        /// <summary>
        /// The lab subnet name of the virtual machine.
        /// Serialized Name: LabVirtualMachine.properties.labSubnetName
        /// </summary>
        public string LabSubnetName { get; set; }
        /// <summary>
        /// The lab virtual network identifier of the virtual machine.
        /// Serialized Name: LabVirtualMachine.properties.labVirtualNetworkId
        /// </summary>
        public ResourceIdentifier LabVirtualNetworkId { get; set; }
        /// <summary>
        /// Indicates whether the virtual machine is to be created without a public IP address.
        /// Serialized Name: LabVirtualMachine.properties.disallowPublicIpAddress
        /// </summary>
        public bool? IsPublicIPAddressDisallowed { get; set; }
        /// <summary>
        /// The artifacts to be installed on the virtual machine.
        /// Serialized Name: LabVirtualMachine.properties.artifacts
        /// </summary>
        public IList<DevTestLabArtifactInstallInfo> Artifacts { get; }
        /// <summary>
        /// The artifact deployment status for the virtual machine.
        /// Serialized Name: LabVirtualMachine.properties.artifactDeploymentStatus
        /// </summary>
        public DevTestLabArtifactDeploymentStatus ArtifactDeploymentStatus { get; }
        /// <summary>
        /// The Microsoft Azure Marketplace image reference of the virtual machine.
        /// Serialized Name: LabVirtualMachine.properties.galleryImageReference
        /// </summary>
        public DevTestLabGalleryImageReference GalleryImageReference { get; set; }
        /// <summary>
        /// The id of the plan associated with the virtual machine image
        /// Serialized Name: LabVirtualMachine.properties.planId
        /// </summary>
        public string PlanId { get; set; }
        /// <summary>
        /// The compute virtual machine properties.
        /// Serialized Name: LabVirtualMachine.properties.computeVm
        /// </summary>
        public ComputeVmProperties ComputeVm { get; }
        /// <summary>
        /// The network interface properties.
        /// Serialized Name: LabVirtualMachine.properties.networkInterface
        /// </summary>
        public DevTestLabNetworkInterface NetworkInterface { get; set; }
        /// <summary>
        /// The applicable schedule for the virtual machine.
        /// Serialized Name: LabVirtualMachine.properties.applicableSchedule
        /// </summary>
        public DevTestLabApplicableSchedule ApplicableSchedule { get; }
        /// <summary>
        /// The expiration date for VM.
        /// Serialized Name: LabVirtualMachine.properties.expirationDate
        /// </summary>
        public DateTimeOffset? ExpireOn { get; set; }
        /// <summary>
        /// Indicates whether another user can take ownership of the virtual machine
        /// Serialized Name: LabVirtualMachine.properties.allowClaim
        /// </summary>
        public bool? AllowClaim { get; set; }
        /// <summary>
        /// Storage type to use for virtual machine (i.e. Standard, Premium).
        /// Serialized Name: LabVirtualMachine.properties.storageType
        /// </summary>
        public string StorageType { get; set; }
        /// <summary>
        /// Tells source of creation of lab virtual machine. Output property only.
        /// Serialized Name: LabVirtualMachine.properties.virtualMachineCreationSource
        /// </summary>
        public DevTestLabVmCreationSource? VirtualMachineCreationSource { get; }
        /// <summary>
        /// The resource ID of the environment that contains this virtual machine, if any.
        /// Serialized Name: LabVirtualMachine.properties.environmentId
        /// </summary>
        public ResourceIdentifier EnvironmentId { get; set; }
        /// <summary>
        /// New or existing data disks to attach to the virtual machine after creation
        /// Serialized Name: LabVirtualMachine.properties.dataDiskParameters
        /// </summary>
        public IList<DevTestLabDataDiskProperties> DataDiskParameters { get; }
        /// <summary>
        /// Virtual Machine schedules to be created
        /// Serialized Name: LabVirtualMachine.properties.scheduleParameters
        /// </summary>
        public IList<DevTestLabScheduleCreationParameter> ScheduleParameters { get; }
        /// <summary>
        /// Last known compute power state captured in DTL
        /// Serialized Name: LabVirtualMachine.properties.lastKnownPowerState
        /// </summary>
        public string LastKnownPowerState { get; }
        /// <summary>
        /// The provisioning status of the resource.
        /// Serialized Name: LabVirtualMachine.properties.provisioningState
        /// </summary>
        public string ProvisioningState { get; }
        /// <summary>
        /// The unique immutable identifier of a resource (Guid).
        /// Serialized Name: LabVirtualMachine.properties.uniqueIdentifier
        /// </summary>
        public string UniqueIdentifier { get; }
    }
}
