// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.DevTestLabs.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.DevTestLabs.Samples
{
    public partial class Sample_ArtifactResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_ArtifactsGet()
        {
            // Generated from example definition: 2018-09-15/Artifacts_Get.json
            // this example is just showing the usage of "Artifact_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ArtifactResource created on azure
            // for more information of creating ArtifactResource, please refer to the document of ArtifactResource
            string subscriptionId = "{subscriptionId}";
            string resourceGroupName = "resourceGroupName";
            string labName = "{labName}";
            string artifactSourceName = "{artifactSourceName}";
            string name = "{artifactName}";
            ResourceIdentifier artifactResourceId = ArtifactResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, labName, artifactSourceName, name);
            ArtifactResource artifact = client.GetArtifactResource(artifactResourceId);

            // invoke the operation
            ArtifactResource result = await artifact.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ArtifactData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GenerateArmTemplate_ArtifactsGenerateArmTemplate()
        {
            // Generated from example definition: 2018-09-15/Artifacts_GenerateArmTemplate.json
            // this example is just showing the usage of "Artifacts_GenerateArmTemplate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ArtifactResource created on azure
            // for more information of creating ArtifactResource, please refer to the document of ArtifactResource
            string subscriptionId = "{subscriptionId}";
            string resourceGroupName = "resourceGroupName";
            string labName = "{labName}";
            string artifactSourceName = "{artifactSourceName}";
            string name = "{artifactName}";
            ResourceIdentifier artifactResourceId = ArtifactResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, labName, artifactSourceName, name);
            ArtifactResource artifact = client.GetArtifactResource(artifactResourceId);

            // invoke the operation
            GenerateArmTemplateContent content = new GenerateArmTemplateContent
            {
                VirtualMachineName = "{vmName}",
                Location = "{location}",
                FileUploadOptions = FileUploadOption.None,
            };
            ArmTemplateInfo result = await artifact.GenerateArmTemplateAsync(content);

            Console.WriteLine($"Succeeded: {result}");
        }
    }
}
