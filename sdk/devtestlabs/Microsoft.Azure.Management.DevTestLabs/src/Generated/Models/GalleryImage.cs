// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DevTestLabs.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// A gallery image.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class GalleryImage : Resource
    {
        /// <summary>
        /// Initializes a new instance of the GalleryImage class.
        /// </summary>
        public GalleryImage()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GalleryImage class.
        /// </summary>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="author">The author of the gallery image.</param>
        /// <param name="createdDate">The creation date of the gallery
        /// image.</param>
        /// <param name="description">The description of the gallery
        /// image.</param>
        /// <param name="offer">The offer of the gallery image.</param>
        /// <param name="publisher">The publisher of the gallery image.</param>
        /// <param name="sku">The SKU of the gallery image.</param>
        /// <param name="osType">The OS type of the gallery image.</param>
        /// <param name="version">The version of the gallery image.</param>
        /// <param name="icon">The icon of the gallery image.</param>
        /// <param name="enabled">Indicates whether this gallery image is
        /// enabled.</param>
        /// <param name="planId">The third party plan that applies to this
        /// image</param>
        /// <param name="isPlanAuthorized">Indicates if the plan has been
        /// authorized for programmatic deployment.</param>
        /// <param name="systemData">The system metadata relating to this
        /// resource</param>
        public GalleryImage(string id = default(string), string name = default(string), string type = default(string), string author = default(string), System.DateTime? createdDate = default(System.DateTime?), string description = default(string), string offer = default(string), string publisher = default(string), string sku = default(string), string osType = default(string), string version = default(string), string icon = default(string), bool? enabled = default(bool?), string planId = default(string), bool? isPlanAuthorized = default(bool?), SystemData systemData = default(SystemData))
            : base(id, name, type)
        {
            Author = author;
            CreatedDate = createdDate;
            Description = description;
            Offer = offer;
            Publisher = publisher;
            Sku = sku;
            OsType = osType;
            Version = version;
            Icon = icon;
            Enabled = enabled;
            PlanId = planId;
            IsPlanAuthorized = isPlanAuthorized;
            SystemData = systemData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the author of the gallery image.
        /// </summary>
        [JsonProperty(PropertyName = "properties.author")]
        public string Author { get; set; }

        /// <summary>
        /// Gets the creation date of the gallery image.
        /// </summary>
        [JsonProperty(PropertyName = "properties.createdDate")]
        public System.DateTime? CreatedDate { get; private set; }

        /// <summary>
        /// Gets or sets the description of the gallery image.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the offer of the gallery image.
        /// </summary>
        [JsonProperty(PropertyName = "properties.imageReference.offer")]
        public string Offer { get; set; }

        /// <summary>
        /// Gets or sets the publisher of the gallery image.
        /// </summary>
        [JsonProperty(PropertyName = "properties.imageReference.publisher")]
        public string Publisher { get; set; }

        /// <summary>
        /// Gets or sets the SKU of the gallery image.
        /// </summary>
        [JsonProperty(PropertyName = "properties.imageReference.sku")]
        public string Sku { get; set; }

        /// <summary>
        /// Gets or sets the OS type of the gallery image.
        /// </summary>
        [JsonProperty(PropertyName = "properties.imageReference.osType")]
        public string OsType { get; set; }

        /// <summary>
        /// Gets or sets the version of the gallery image.
        /// </summary>
        [JsonProperty(PropertyName = "properties.imageReference.version")]
        public string Version { get; set; }

        /// <summary>
        /// Gets or sets the icon of the gallery image.
        /// </summary>
        [JsonProperty(PropertyName = "properties.icon")]
        public string Icon { get; set; }

        /// <summary>
        /// Gets or sets indicates whether this gallery image is enabled.
        /// </summary>
        [JsonProperty(PropertyName = "properties.enabled")]
        public bool? Enabled { get; set; }

        /// <summary>
        /// Gets or sets the third party plan that applies to this image
        /// </summary>
        [JsonProperty(PropertyName = "properties.planId")]
        public string PlanId { get; set; }

        /// <summary>
        /// Gets or sets indicates if the plan has been authorized for
        /// programmatic deployment.
        /// </summary>
        [JsonProperty(PropertyName = "properties.isPlanAuthorized")]
        public bool? IsPlanAuthorized { get; set; }

        /// <summary>
        /// Gets the system metadata relating to this resource
        /// </summary>
        [JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData { get; private set; }

    }
}
