// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DevTestLabs.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// An artifact.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class Artifact : Resource
    {
        /// <summary>
        /// Initializes a new instance of the Artifact class.
        /// </summary>
        public Artifact()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Artifact class.
        /// </summary>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="title">The artifact's title.</param>
        /// <param name="description">The artifact's description.</param>
        /// <param name="publisher">The artifact's publisher.</param>
        /// <param name="filePath">The file path to the artifact.</param>
        /// <param name="icon">The URI to the artifact icon.</param>
        /// <param name="targetOsType">The artifact's target OS.</param>
        /// <param name="parameters">The artifact's parameters.</param>
        /// <param name="createdDate">The artifact's creation date.</param>
        /// <param name="systemData">The system metadata relating to this
        /// resource</param>
        public Artifact(string id = default(string), string name = default(string), string type = default(string), string title = default(string), string description = default(string), string publisher = default(string), string filePath = default(string), string icon = default(string), string targetOsType = default(string), object parameters = default(object), System.DateTime? createdDate = default(System.DateTime?), SystemData systemData = default(SystemData))
            : base(id, name, type)
        {
            Title = title;
            Description = description;
            Publisher = publisher;
            FilePath = filePath;
            Icon = icon;
            TargetOsType = targetOsType;
            Parameters = parameters;
            CreatedDate = createdDate;
            SystemData = systemData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the artifact's title.
        /// </summary>
        [JsonProperty(PropertyName = "properties.title")]
        public string Title { get; private set; }

        /// <summary>
        /// Gets the artifact's description.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; private set; }

        /// <summary>
        /// Gets the artifact's publisher.
        /// </summary>
        [JsonProperty(PropertyName = "properties.publisher")]
        public string Publisher { get; private set; }

        /// <summary>
        /// Gets the file path to the artifact.
        /// </summary>
        [JsonProperty(PropertyName = "properties.filePath")]
        public string FilePath { get; private set; }

        /// <summary>
        /// Gets the URI to the artifact icon.
        /// </summary>
        [JsonProperty(PropertyName = "properties.icon")]
        public string Icon { get; private set; }

        /// <summary>
        /// Gets the artifact's target OS.
        /// </summary>
        [JsonProperty(PropertyName = "properties.targetOsType")]
        public string TargetOsType { get; private set; }

        /// <summary>
        /// Gets the artifact's parameters.
        /// </summary>
        [JsonProperty(PropertyName = "properties.parameters")]
        public object Parameters { get; private set; }

        /// <summary>
        /// Gets the artifact's creation date.
        /// </summary>
        [JsonProperty(PropertyName = "properties.createdDate")]
        public System.DateTime? CreatedDate { get; private set; }

        /// <summary>
        /// Gets the system metadata relating to this resource
        /// </summary>
        [JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData { get; private set; }

    }
}
