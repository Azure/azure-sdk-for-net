// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DevTestLabs.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Properties of a virtual machine returned by the Microsoft.Compute API.
    /// </summary>
    public partial class ComputeVmPropertiesFragment
    {
        /// <summary>
        /// Initializes a new instance of the ComputeVmPropertiesFragment
        /// class.
        /// </summary>
        public ComputeVmPropertiesFragment()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ComputeVmPropertiesFragment
        /// class.
        /// </summary>
        /// <param name="statuses">Gets the statuses of the virtual
        /// machine.</param>
        /// <param name="osType">Gets the OS type of the virtual
        /// machine.</param>
        /// <param name="vmSize">Gets the size of the virtual machine.</param>
        /// <param name="networkInterfaceId">Gets the network interface ID of
        /// the virtual machine.</param>
        /// <param name="osDiskId">Gets OS disk blob uri for the virtual
        /// machine.</param>
        /// <param name="dataDiskIds">Gets data disks blob uri for the virtual
        /// machine.</param>
        /// <param name="dataDisks">Gets all data disks attached to the virtual
        /// machine.</param>
        public ComputeVmPropertiesFragment(IList<ComputeVmInstanceViewStatusFragment> statuses = default(IList<ComputeVmInstanceViewStatusFragment>), string osType = default(string), string vmSize = default(string), string networkInterfaceId = default(string), string osDiskId = default(string), IList<string> dataDiskIds = default(IList<string>), IList<ComputeDataDiskFragment> dataDisks = default(IList<ComputeDataDiskFragment>))
        {
            Statuses = statuses;
            OsType = osType;
            VmSize = vmSize;
            NetworkInterfaceId = networkInterfaceId;
            OsDiskId = osDiskId;
            DataDiskIds = dataDiskIds;
            DataDisks = dataDisks;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the statuses of the virtual machine.
        /// </summary>
        [JsonProperty(PropertyName = "statuses")]
        public IList<ComputeVmInstanceViewStatusFragment> Statuses { get; set; }

        /// <summary>
        /// Gets the OS type of the virtual machine.
        /// </summary>
        [JsonProperty(PropertyName = "osType")]
        public string OsType { get; set; }

        /// <summary>
        /// Gets the size of the virtual machine.
        /// </summary>
        [JsonProperty(PropertyName = "vmSize")]
        public string VmSize { get; set; }

        /// <summary>
        /// Gets the network interface ID of the virtual machine.
        /// </summary>
        [JsonProperty(PropertyName = "networkInterfaceId")]
        public string NetworkInterfaceId { get; set; }

        /// <summary>
        /// Gets OS disk blob uri for the virtual machine.
        /// </summary>
        [JsonProperty(PropertyName = "osDiskId")]
        public string OsDiskId { get; set; }

        /// <summary>
        /// Gets data disks blob uri for the virtual machine.
        /// </summary>
        [JsonProperty(PropertyName = "dataDiskIds")]
        public IList<string> DataDiskIds { get; set; }

        /// <summary>
        /// Gets all data disks attached to the virtual machine.
        /// </summary>
        [JsonProperty(PropertyName = "dataDisks")]
        public IList<ComputeDataDiskFragment> DataDisks { get; set; }

    }
}
