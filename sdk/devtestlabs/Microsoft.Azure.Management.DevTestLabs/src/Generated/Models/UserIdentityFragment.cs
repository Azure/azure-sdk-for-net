// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DevTestLabs.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Identity attributes of a lab user.
    /// </summary>
    public partial class UserIdentityFragment
    {
        /// <summary>
        /// Initializes a new instance of the UserIdentityFragment class.
        /// </summary>
        public UserIdentityFragment()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UserIdentityFragment class.
        /// </summary>
        /// <param name="principalName">Set to the principal name / UPN of the
        /// client JWT making the request.</param>
        /// <param name="principalId">Set to the principal Id of the client JWT
        /// making the request. Service principal will not have the principal
        /// Id.</param>
        /// <param name="tenantId">Set to the tenant ID of the client JWT
        /// making the request.</param>
        /// <param name="objectId">Set to the object Id of the client JWT
        /// making the request. Not all users have object Id. For CSP
        /// (reseller) scenarios for example, object Id is not
        /// available.</param>
        /// <param name="appId">Set to the app Id of the client JWT making the
        /// request.</param>
        public UserIdentityFragment(string principalName = default(string), string principalId = default(string), string tenantId = default(string), string objectId = default(string), string appId = default(string))
        {
            PrincipalName = principalName;
            PrincipalId = principalId;
            TenantId = tenantId;
            ObjectId = objectId;
            AppId = appId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets set to the principal name / UPN of the client JWT
        /// making the request.
        /// </summary>
        [JsonProperty(PropertyName = "principalName")]
        public string PrincipalName { get; set; }

        /// <summary>
        /// Gets or sets set to the principal Id of the client JWT making the
        /// request. Service principal will not have the principal Id.
        /// </summary>
        [JsonProperty(PropertyName = "principalId")]
        public string PrincipalId { get; set; }

        /// <summary>
        /// Gets or sets set to the tenant ID of the client JWT making the
        /// request.
        /// </summary>
        [JsonProperty(PropertyName = "tenantId")]
        public string TenantId { get; set; }

        /// <summary>
        /// Gets or sets set to the object Id of the client JWT making the
        /// request. Not all users have object Id. For CSP (reseller) scenarios
        /// for example, object Id is not available.
        /// </summary>
        [JsonProperty(PropertyName = "objectId")]
        public string ObjectId { get; set; }

        /// <summary>
        /// Gets or sets set to the app Id of the client JWT making the
        /// request.
        /// </summary>
        [JsonProperty(PropertyName = "appId")]
        public string AppId { get; set; }

    }
}
