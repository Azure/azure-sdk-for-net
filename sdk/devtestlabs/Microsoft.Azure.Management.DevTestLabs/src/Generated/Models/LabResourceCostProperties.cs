// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DevTestLabs.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The properties of a resource cost item.
    /// </summary>
    public partial class LabResourceCostProperties
    {
        /// <summary>
        /// Initializes a new instance of the LabResourceCostProperties class.
        /// </summary>
        public LabResourceCostProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LabResourceCostProperties class.
        /// </summary>
        /// <param name="resourcename">The name of the resource.</param>
        /// <param name="resourceUId">The unique identifier of the
        /// resource.</param>
        /// <param name="resourceCost">The cost component of the resource cost
        /// item.</param>
        /// <param name="resourceType">The logical resource type (ex.
        /// virtualmachine, storageaccount)</param>
        /// <param name="resourceOwner">The owner of the resource (ex.
        /// janedoe@microsoft.com)</param>
        /// <param name="resourcePricingTier">The category of the resource (ex.
        /// Premium_LRS, Standard_DS1)</param>
        /// <param name="resourceStatus">The status of the resource (ex.
        /// Active)</param>
        /// <param name="resourceId">The ID of the resource</param>
        /// <param name="externalResourceId">The ID of the external
        /// resource</param>
        public LabResourceCostProperties(string resourcename = default(string), string resourceUId = default(string), double? resourceCost = default(double?), string resourceType = default(string), string resourceOwner = default(string), string resourcePricingTier = default(string), string resourceStatus = default(string), string resourceId = default(string), string externalResourceId = default(string))
        {
            Resourcename = resourcename;
            ResourceUId = resourceUId;
            ResourceCost = resourceCost;
            ResourceType = resourceType;
            ResourceOwner = resourceOwner;
            ResourcePricingTier = resourcePricingTier;
            ResourceStatus = resourceStatus;
            ResourceId = resourceId;
            ExternalResourceId = externalResourceId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "resourcename")]
        public string Resourcename { get; set; }

        /// <summary>
        /// Gets or sets the unique identifier of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "resourceUId")]
        public string ResourceUId { get; set; }

        /// <summary>
        /// Gets or sets the cost component of the resource cost item.
        /// </summary>
        [JsonProperty(PropertyName = "resourceCost")]
        public double? ResourceCost { get; set; }

        /// <summary>
        /// Gets or sets the logical resource type (ex. virtualmachine,
        /// storageaccount)
        /// </summary>
        [JsonProperty(PropertyName = "resourceType")]
        public string ResourceType { get; set; }

        /// <summary>
        /// Gets or sets the owner of the resource (ex. janedoe@microsoft.com)
        /// </summary>
        [JsonProperty(PropertyName = "resourceOwner")]
        public string ResourceOwner { get; set; }

        /// <summary>
        /// Gets or sets the category of the resource (ex. Premium_LRS,
        /// Standard_DS1)
        /// </summary>
        [JsonProperty(PropertyName = "resourcePricingTier")]
        public string ResourcePricingTier { get; set; }

        /// <summary>
        /// Gets or sets the status of the resource (ex. Active)
        /// </summary>
        [JsonProperty(PropertyName = "resourceStatus")]
        public string ResourceStatus { get; set; }

        /// <summary>
        /// Gets or sets the ID of the resource
        /// </summary>
        [JsonProperty(PropertyName = "resourceId")]
        public string ResourceId { get; set; }

        /// <summary>
        /// Gets or sets the ID of the external resource
        /// </summary>
        [JsonProperty(PropertyName = "externalResourceId")]
        public string ExternalResourceId { get; set; }

    }
}
