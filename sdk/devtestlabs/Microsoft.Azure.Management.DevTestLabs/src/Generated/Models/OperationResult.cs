// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DevTestLabs.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// An Operation Result
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class OperationResult
    {
        /// <summary>
        /// Initializes a new instance of the OperationResult class.
        /// </summary>
        public OperationResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OperationResult class.
        /// </summary>
        /// <param name="status">The operation status.</param>
        /// <param name="statusCode">The status code for the operation.
        /// Possible values include: 'Continue', 'SwitchingProtocols',
        /// 'Processing', 'EarlyHints', 'OK', 'Created', 'Accepted',
        /// 'NonAuthoritativeInformation', 'NoContent', 'ResetContent',
        /// 'PartialContent', 'MultiStatus', 'AlreadyReported', 'IMUsed',
        /// 'MultipleChoices', 'Ambiguous', 'MovedPermanently', 'Moved',
        /// 'Found', 'Redirect', 'SeeOther', 'RedirectMethod', 'NotModified',
        /// 'UseProxy', 'Unused', 'TemporaryRedirect', 'RedirectKeepVerb',
        /// 'PermanentRedirect', 'BadRequest', 'Unauthorized',
        /// 'PaymentRequired', 'Forbidden', 'NotFound', 'MethodNotAllowed',
        /// 'NotAcceptable', 'ProxyAuthenticationRequired', 'RequestTimeout',
        /// 'Conflict', 'Gone', 'LengthRequired', 'PreconditionFailed',
        /// 'RequestEntityTooLarge', 'RequestUriTooLong',
        /// 'UnsupportedMediaType', 'RequestedRangeNotSatisfiable',
        /// 'ExpectationFailed', 'MisdirectedRequest', 'UnprocessableEntity',
        /// 'Locked', 'FailedDependency', 'UpgradeRequired',
        /// 'PreconditionRequired', 'TooManyRequests',
        /// 'RequestHeaderFieldsTooLarge', 'UnavailableForLegalReasons',
        /// 'InternalServerError', 'NotImplemented', 'BadGateway',
        /// 'ServiceUnavailable', 'GatewayTimeout', 'HttpVersionNotSupported',
        /// 'VariantAlsoNegotiates', 'InsufficientStorage', 'LoopDetected',
        /// 'NotExtended', 'NetworkAuthenticationRequired'</param>
        /// <param name="code">The error code of the operation error.</param>
        /// <param name="message">The error message of the operation
        /// error.</param>
        public OperationResult(string status = default(string), string statusCode = default(string), string code = default(string), string message = default(string))
        {
            Status = status;
            StatusCode = statusCode;
            Code = code;
            Message = message;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the operation status.
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets the status code for the operation. Possible values
        /// include: 'Continue', 'SwitchingProtocols', 'Processing',
        /// 'EarlyHints', 'OK', 'Created', 'Accepted',
        /// 'NonAuthoritativeInformation', 'NoContent', 'ResetContent',
        /// 'PartialContent', 'MultiStatus', 'AlreadyReported', 'IMUsed',
        /// 'MultipleChoices', 'Ambiguous', 'MovedPermanently', 'Moved',
        /// 'Found', 'Redirect', 'SeeOther', 'RedirectMethod', 'NotModified',
        /// 'UseProxy', 'Unused', 'TemporaryRedirect', 'RedirectKeepVerb',
        /// 'PermanentRedirect', 'BadRequest', 'Unauthorized',
        /// 'PaymentRequired', 'Forbidden', 'NotFound', 'MethodNotAllowed',
        /// 'NotAcceptable', 'ProxyAuthenticationRequired', 'RequestTimeout',
        /// 'Conflict', 'Gone', 'LengthRequired', 'PreconditionFailed',
        /// 'RequestEntityTooLarge', 'RequestUriTooLong',
        /// 'UnsupportedMediaType', 'RequestedRangeNotSatisfiable',
        /// 'ExpectationFailed', 'MisdirectedRequest', 'UnprocessableEntity',
        /// 'Locked', 'FailedDependency', 'UpgradeRequired',
        /// 'PreconditionRequired', 'TooManyRequests',
        /// 'RequestHeaderFieldsTooLarge', 'UnavailableForLegalReasons',
        /// 'InternalServerError', 'NotImplemented', 'BadGateway',
        /// 'ServiceUnavailable', 'GatewayTimeout', 'HttpVersionNotSupported',
        /// 'VariantAlsoNegotiates', 'InsufficientStorage', 'LoopDetected',
        /// 'NotExtended', 'NetworkAuthenticationRequired'
        /// </summary>
        [JsonProperty(PropertyName = "statusCode")]
        public string StatusCode { get; set; }

        /// <summary>
        /// Gets or sets the error code of the operation error.
        /// </summary>
        [JsonProperty(PropertyName = "error.code")]
        public string Code { get; set; }

        /// <summary>
        /// Gets or sets the error message of the operation error.
        /// </summary>
        [JsonProperty(PropertyName = "error.message")]
        public string Message { get; set; }

    }
}
