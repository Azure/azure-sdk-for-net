// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Automanage
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for HCIReportsOperations.
    /// </summary>
    public static partial class HCIReportsOperationsExtensions
    {
            /// <summary>
            /// Get information about a report associated with a configuration profile
            /// assignment run
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the Arc machine.
            /// </param>
            /// <param name='configurationProfileAssignmentName'>
            /// The configuration profile assignment name.
            /// </param>
            /// <param name='reportName'>
            /// The report name.
            /// </param>
            public static Report Get(this IHCIReportsOperations operations, string resourceGroupName, string clusterName, string configurationProfileAssignmentName, string reportName)
            {
                return operations.GetAsync(resourceGroupName, clusterName, configurationProfileAssignmentName, reportName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get information about a report associated with a configuration profile
            /// assignment run
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the Arc machine.
            /// </param>
            /// <param name='configurationProfileAssignmentName'>
            /// The configuration profile assignment name.
            /// </param>
            /// <param name='reportName'>
            /// The report name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Report> GetAsync(this IHCIReportsOperations operations, string resourceGroupName, string clusterName, string configurationProfileAssignmentName, string reportName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, clusterName, configurationProfileAssignmentName, reportName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieve a list of reports within a given configuration profile assignment
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the Arc machine.
            /// </param>
            /// <param name='configurationProfileAssignmentName'>
            /// The configuration profile assignment name.
            /// </param>
            public static IEnumerable<Report> ListByConfigurationProfileAssignments(this IHCIReportsOperations operations, string resourceGroupName, string clusterName, string configurationProfileAssignmentName)
            {
                return operations.ListByConfigurationProfileAssignmentsAsync(resourceGroupName, clusterName, configurationProfileAssignmentName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve a list of reports within a given configuration profile assignment
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the Arc machine.
            /// </param>
            /// <param name='configurationProfileAssignmentName'>
            /// The configuration profile assignment name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IEnumerable<Report>> ListByConfigurationProfileAssignmentsAsync(this IHCIReportsOperations operations, string resourceGroupName, string clusterName, string configurationProfileAssignmentName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByConfigurationProfileAssignmentsWithHttpMessagesAsync(resourceGroupName, clusterName, configurationProfileAssignmentName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
