// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Automanage.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The Service Principal Id for the subscription.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ServicePrincipal : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the ServicePrincipal class.
        /// </summary>
        public ServicePrincipal()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ServicePrincipal class.
        /// </summary>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="servicePrincipalId">The Service Principal Id for the
        /// subscription.</param>
        /// <param name="authorizationSet">Returns the contributor RBAC Role
        /// exist or not for the Service Principal Id.</param>
        /// <param name="systemData">Azure Resource Manager metadata containing
        /// createdBy and modifiedBy information.</param>
        public ServicePrincipal(string id = default(string), string name = default(string), string type = default(string), string servicePrincipalId = default(string), bool? authorizationSet = default(bool?), SystemData systemData = default(SystemData))
            : base(id, name, type)
        {
            ServicePrincipalId = servicePrincipalId;
            AuthorizationSet = authorizationSet;
            SystemData = systemData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the Service Principal Id for the subscription.
        /// </summary>
        [JsonProperty(PropertyName = "properties.servicePrincipalId")]
        public string ServicePrincipalId { get; private set; }

        /// <summary>
        /// Gets returns the contributor RBAC Role exist or not for the Service
        /// Principal Id.
        /// </summary>
        [JsonProperty(PropertyName = "properties.authorizationSet")]
        public bool? AuthorizationSet { get; private set; }

        /// <summary>
        /// Gets azure Resource Manager metadata containing createdBy and
        /// modifiedBy information.
        /// </summary>
        [JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData { get; private set; }

    }
}
