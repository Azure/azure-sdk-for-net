// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure;
using Azure.Core;
using Azure.ResourceManager.Automanage;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Automanage.Models
{
    /// <summary> Model factory for generated models. </summary>
    public static partial class AutomanageModelFactory
    {
        /// <summary> Initializes a new instance of BestPracticeData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="configuration"> configuration dictionary of the configuration profile. </param>
        /// <returns> A new <see cref="Automanage.BestPracticeData"/> instance for mocking. </returns>
        public static BestPracticeData BestPracticeData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, BinaryData configuration = null)
        {
            return new BestPracticeData(id, name, resourceType, systemData, configuration);
        }

        /// <summary> Initializes a new instance of ConfigurationProfileData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="configuration"> Properties of the configuration profile. </param>
        /// <returns> A new <see cref="Automanage.ConfigurationProfileData"/> instance for mocking. </returns>
        public static ConfigurationProfileData ConfigurationProfileData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IDictionary<string, string> tags = null, AzureLocation location = default, BinaryData configuration = null)
        {
            tags ??= new Dictionary<string, string>();

            return new ConfigurationProfileData(id, name, resourceType, systemData, tags, location, configuration != null ? new ConfigurationProfileProperties(configuration) : null);
        }

        /// <summary> Initializes a new instance of ConfigurationProfileAssignmentData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="properties"> Properties of the configuration profile assignment. </param>
        /// <param name="managedBy"> Azure resource id. Indicates if this resource is managed by another Azure resource. </param>
        /// <returns> A new <see cref="Automanage.ConfigurationProfileAssignmentData"/> instance for mocking. </returns>
        public static ConfigurationProfileAssignmentData ConfigurationProfileAssignmentData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, ConfigurationProfileAssignmentProperties properties = null, string managedBy = null)
        {
            return new ConfigurationProfileAssignmentData(id, name, resourceType, systemData, properties, managedBy);
        }

        /// <summary> Initializes a new instance of ConfigurationProfileAssignmentProperties. </summary>
        /// <param name="configurationProfile"> The Automanage configurationProfile ARM Resource URI. </param>
        /// <param name="targetId"> The target VM resource URI. </param>
        /// <param name="status"> The status of onboarding, which only appears in the response. </param>
        /// <returns> A new <see cref="Models.ConfigurationProfileAssignmentProperties"/> instance for mocking. </returns>
        public static ConfigurationProfileAssignmentProperties ConfigurationProfileAssignmentProperties(string configurationProfile = null, string targetId = null, string status = null)
        {
            return new ConfigurationProfileAssignmentProperties(configurationProfile, targetId, status);
        }

        /// <summary> Initializes a new instance of Report. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="startTime"> Start time of the configuration profile assignment processing. </param>
        /// <param name="endTime"> End time of the configuration profile assignment processing. </param>
        /// <param name="lastModifiedTime"> Last modified time of the configuration profile assignment processing. </param>
        /// <param name="duration"> Duration of the configuration profile assignment processing. </param>
        /// <param name="typePropertiesType"> Type of the configuration profile assignment processing (Initial/Consistency). </param>
        /// <param name="status"> The status of the configuration profile assignment. </param>
        /// <param name="configurationProfile"> The configurationProfile linked to the assignment. </param>
        /// <param name="resources"> List of resources processed by the configuration profile assignment. </param>
        /// <param name="error"> Error message, if any, returned by the configuration profile assignment processing. </param>
        /// <param name="reportFormatVersion"> Version of the report format. </param>
        /// <returns> A new <see cref="Models.Report"/> instance for mocking. </returns>
        public static Report Report(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, string startTime = null, string endTime = null, string lastModifiedTime = null, TimeSpan? duration = null, string typePropertiesType = null, string status = null, string configurationProfile = null, IEnumerable<ReportResource> resources = null, ResponseError error = null, string reportFormatVersion = null)
        {
            resources ??= new List<ReportResource>();

            return new Report(id, name, resourceType, systemData, startTime, endTime, lastModifiedTime, duration, typePropertiesType, status, configurationProfile, resources?.ToList(), error, reportFormatVersion);
        }

        /// <summary> Initializes a new instance of ReportResource. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="status"> Status of the resource. </param>
        /// <param name="error"> Error message, if any, returned when deploying the resource. </param>
        /// <returns> A new <see cref="Models.ReportResource"/> instance for mocking. </returns>
        public static ReportResource ReportResource(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, string status = null, ResponseError error = null)
        {
            return new ReportResource(id, name, resourceType, systemData, status, error);
        }

        /// <summary> Initializes a new instance of ServicePrincipalData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="servicePrincipalId"> The Service Principal Id for the subscription. </param>
        /// <param name="authorizationSet"> Returns the contributor RBAC Role exist or not for the Service Principal Id. </param>
        /// <returns> A new <see cref="Automanage.ServicePrincipalData"/> instance for mocking. </returns>
        public static ServicePrincipalData ServicePrincipalData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, string servicePrincipalId = null, bool? authorizationSet = null)
        {
            return new ServicePrincipalData(id, name, resourceType, systemData, servicePrincipalId, authorizationSet);
        }
    }
}
