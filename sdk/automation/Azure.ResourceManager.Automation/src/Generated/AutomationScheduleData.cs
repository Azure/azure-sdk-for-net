// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.ResourceManager.Automation.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Automation
{
    /// <summary> A class representing the AutomationSchedule data model. </summary>
    public partial class AutomationScheduleData : ResourceData
    {
        /// <summary> Initializes a new instance of AutomationScheduleData. </summary>
        public AutomationScheduleData()
        {
        }

        /// <summary> Initializes a new instance of AutomationScheduleData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="startOn">
        /// Gets or sets the start time of the schedule.
        /// Serialized Name: Schedule.properties.startTime
        /// </param>
        /// <param name="startTimeOffsetMinutes">
        /// Gets the start time&apos;s offset in minutes.
        /// Serialized Name: Schedule.properties.startTimeOffsetMinutes
        /// </param>
        /// <param name="expiryOn">
        /// Gets or sets the end time of the schedule.
        /// Serialized Name: Schedule.properties.expiryTime
        /// </param>
        /// <param name="expiryTimeOffsetMinutes">
        /// Gets or sets the expiry time&apos;s offset in minutes.
        /// Serialized Name: Schedule.properties.expiryTimeOffsetMinutes
        /// </param>
        /// <param name="isEnabled">
        /// Gets or sets a value indicating whether this schedule is enabled.
        /// Serialized Name: Schedule.properties.isEnabled
        /// </param>
        /// <param name="nextRun">
        /// Gets or sets the next run time of the schedule.
        /// Serialized Name: Schedule.properties.nextRun
        /// </param>
        /// <param name="nextRunOffsetMinutes">
        /// Gets or sets the next run time&apos;s offset in minutes.
        /// Serialized Name: Schedule.properties.nextRunOffsetMinutes
        /// </param>
        /// <param name="interval">
        /// Gets or sets the interval of the schedule.
        /// Serialized Name: Schedule.properties.interval
        /// </param>
        /// <param name="frequency">
        /// Gets or sets the frequency of the schedule.
        /// Serialized Name: Schedule.properties.frequency
        /// </param>
        /// <param name="timeZone">
        /// Gets or sets the time zone of the schedule.
        /// Serialized Name: Schedule.properties.timeZone
        /// </param>
        /// <param name="advancedSchedule">
        /// Gets or sets the advanced schedule.
        /// Serialized Name: Schedule.properties.advancedSchedule
        /// </param>
        /// <param name="createdOn">
        /// Gets or sets the creation time.
        /// Serialized Name: Schedule.properties.creationTime
        /// </param>
        /// <param name="lastModifiedOn">
        /// Gets or sets the last modified time.
        /// Serialized Name: Schedule.properties.lastModifiedTime
        /// </param>
        /// <param name="description">
        /// Gets or sets the description.
        /// Serialized Name: Schedule.properties.description
        /// </param>
        internal AutomationScheduleData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, DateTimeOffset? startOn, double? startTimeOffsetMinutes, DateTimeOffset? expiryOn, double? expiryTimeOffsetMinutes, bool? isEnabled, DateTimeOffset? nextRun, double? nextRunOffsetMinutes, BinaryData interval, AutomationScheduleFrequency? frequency, string timeZone, AutomationAdvancedSchedule advancedSchedule, DateTimeOffset? createdOn, DateTimeOffset? lastModifiedOn, string description) : base(id, name, resourceType, systemData)
        {
            StartOn = startOn;
            StartTimeOffsetMinutes = startTimeOffsetMinutes;
            ExpiryOn = expiryOn;
            ExpiryTimeOffsetMinutes = expiryTimeOffsetMinutes;
            IsEnabled = isEnabled;
            NextRun = nextRun;
            NextRunOffsetMinutes = nextRunOffsetMinutes;
            Interval = interval;
            Frequency = frequency;
            TimeZone = timeZone;
            AdvancedSchedule = advancedSchedule;
            CreatedOn = createdOn;
            LastModifiedOn = lastModifiedOn;
            Description = description;
        }

        /// <summary>
        /// Gets or sets the start time of the schedule.
        /// Serialized Name: Schedule.properties.startTime
        /// </summary>
        public DateTimeOffset? StartOn { get; set; }
        /// <summary>
        /// Gets the start time&apos;s offset in minutes.
        /// Serialized Name: Schedule.properties.startTimeOffsetMinutes
        /// </summary>
        public double? StartTimeOffsetMinutes { get; }
        /// <summary>
        /// Gets or sets the end time of the schedule.
        /// Serialized Name: Schedule.properties.expiryTime
        /// </summary>
        public DateTimeOffset? ExpiryOn { get; set; }
        /// <summary>
        /// Gets or sets the expiry time&apos;s offset in minutes.
        /// Serialized Name: Schedule.properties.expiryTimeOffsetMinutes
        /// </summary>
        public double? ExpiryTimeOffsetMinutes { get; set; }
        /// <summary>
        /// Gets or sets a value indicating whether this schedule is enabled.
        /// Serialized Name: Schedule.properties.isEnabled
        /// </summary>
        public bool? IsEnabled { get; set; }
        /// <summary>
        /// Gets or sets the next run time of the schedule.
        /// Serialized Name: Schedule.properties.nextRun
        /// </summary>
        public DateTimeOffset? NextRun { get; set; }
        /// <summary>
        /// Gets or sets the next run time&apos;s offset in minutes.
        /// Serialized Name: Schedule.properties.nextRunOffsetMinutes
        /// </summary>
        public double? NextRunOffsetMinutes { get; set; }
        /// <summary>
        /// Gets or sets the interval of the schedule.
        /// Serialized Name: Schedule.properties.interval
        /// <para>
        /// To assign an object to this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formated json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public BinaryData Interval { get; set; }
        /// <summary>
        /// Gets or sets the frequency of the schedule.
        /// Serialized Name: Schedule.properties.frequency
        /// </summary>
        public AutomationScheduleFrequency? Frequency { get; set; }
        /// <summary>
        /// Gets or sets the time zone of the schedule.
        /// Serialized Name: Schedule.properties.timeZone
        /// </summary>
        public string TimeZone { get; set; }
        /// <summary>
        /// Gets or sets the advanced schedule.
        /// Serialized Name: Schedule.properties.advancedSchedule
        /// </summary>
        public AutomationAdvancedSchedule AdvancedSchedule { get; set; }
        /// <summary>
        /// Gets or sets the creation time.
        /// Serialized Name: Schedule.properties.creationTime
        /// </summary>
        public DateTimeOffset? CreatedOn { get; set; }
        /// <summary>
        /// Gets or sets the last modified time.
        /// Serialized Name: Schedule.properties.lastModifiedTime
        /// </summary>
        public DateTimeOffset? LastModifiedOn { get; set; }
        /// <summary>
        /// Gets or sets the description.
        /// Serialized Name: Schedule.properties.description
        /// </summary>
        public string Description { get; set; }
    }
}
