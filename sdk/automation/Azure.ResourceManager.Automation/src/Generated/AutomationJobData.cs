// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Automation.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Automation
{
    /// <summary> A class representing the AutomationJob data model. </summary>
    public partial class AutomationJobData : ResourceData
    {
        /// <summary> Initializes a new instance of AutomationJobData. </summary>
        public AutomationJobData()
        {
            Parameters = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of AutomationJobData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="runbook">
        /// Gets or sets the runbook.
        /// Serialized Name: Job.properties.runbook
        /// </param>
        /// <param name="startedBy">
        /// Gets or sets the job started by.
        /// Serialized Name: Job.properties.startedBy
        /// </param>
        /// <param name="runOn">
        /// Gets or sets the runOn which specifies the group name where the job is to be executed.
        /// Serialized Name: Job.properties.runOn
        /// </param>
        /// <param name="jobId">
        /// Gets or sets the id of the job.
        /// Serialized Name: Job.properties.jobId
        /// </param>
        /// <param name="createdOn">
        /// Gets or sets the creation time of the job.
        /// Serialized Name: Job.properties.creationTime
        /// </param>
        /// <param name="status">
        /// Gets or sets the status of the job.
        /// Serialized Name: Job.properties.status
        /// </param>
        /// <param name="statusDetails">
        /// Gets or sets the status details of the job.
        /// Serialized Name: Job.properties.statusDetails
        /// </param>
        /// <param name="startOn">
        /// Gets or sets the start time of the job.
        /// Serialized Name: Job.properties.startTime
        /// </param>
        /// <param name="endOn">
        /// Gets or sets the end time of the job.
        /// Serialized Name: Job.properties.endTime
        /// </param>
        /// <param name="exception">
        /// Gets or sets the exception of the job.
        /// Serialized Name: Job.properties.exception
        /// </param>
        /// <param name="lastModifiedOn">
        /// Gets or sets the last modified time of the job.
        /// Serialized Name: Job.properties.lastModifiedTime
        /// </param>
        /// <param name="lastStatusModifiedOn">
        /// Gets or sets the last status modified time of the job.
        /// Serialized Name: Job.properties.lastStatusModifiedTime
        /// </param>
        /// <param name="parameters">
        /// Gets or sets the parameters of the job.
        /// Serialized Name: Job.properties.parameters
        /// </param>
        /// <param name="provisioningState">
        /// The current provisioning state of the job.
        /// Serialized Name: Job.properties.provisioningState
        /// </param>
        internal AutomationJobData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, RunbookAssociationProperty runbook, string startedBy, string runOn, Guid? jobId, DateTimeOffset? createdOn, AutomationJobStatus? status, string statusDetails, DateTimeOffset? startOn, DateTimeOffset? endOn, string exception, DateTimeOffset? lastModifiedOn, DateTimeOffset? lastStatusModifiedOn, IDictionary<string, string> parameters, JobProvisioningState? provisioningState) : base(id, name, resourceType, systemData)
        {
            Runbook = runbook;
            StartedBy = startedBy;
            RunOn = runOn;
            JobId = jobId;
            CreatedOn = createdOn;
            Status = status;
            StatusDetails = statusDetails;
            StartOn = startOn;
            EndOn = endOn;
            Exception = exception;
            LastModifiedOn = lastModifiedOn;
            LastStatusModifiedOn = lastStatusModifiedOn;
            Parameters = parameters;
            ProvisioningState = provisioningState;
        }

        /// <summary>
        /// Gets or sets the runbook.
        /// Serialized Name: Job.properties.runbook
        /// </summary>
        internal RunbookAssociationProperty Runbook { get; set; }
        /// <summary>
        /// Gets or sets the name of the runbook.
        /// Serialized Name: RunbookAssociationProperty.name
        /// </summary>
        public string RunbookName
        {
            get => Runbook is null ? default : Runbook.Name;
            set
            {
                if (Runbook is null)
                    Runbook = new RunbookAssociationProperty();
                Runbook.Name = value;
            }
        }

        /// <summary>
        /// Gets or sets the job started by.
        /// Serialized Name: Job.properties.startedBy
        /// </summary>
        public string StartedBy { get; set; }
        /// <summary>
        /// Gets or sets the runOn which specifies the group name where the job is to be executed.
        /// Serialized Name: Job.properties.runOn
        /// </summary>
        public string RunOn { get; set; }
        /// <summary>
        /// Gets or sets the id of the job.
        /// Serialized Name: Job.properties.jobId
        /// </summary>
        public Guid? JobId { get; set; }
        /// <summary>
        /// Gets or sets the creation time of the job.
        /// Serialized Name: Job.properties.creationTime
        /// </summary>
        public DateTimeOffset? CreatedOn { get; set; }
        /// <summary>
        /// Gets or sets the status of the job.
        /// Serialized Name: Job.properties.status
        /// </summary>
        public AutomationJobStatus? Status { get; set; }
        /// <summary>
        /// Gets or sets the status details of the job.
        /// Serialized Name: Job.properties.statusDetails
        /// </summary>
        public string StatusDetails { get; set; }
        /// <summary>
        /// Gets or sets the start time of the job.
        /// Serialized Name: Job.properties.startTime
        /// </summary>
        public DateTimeOffset? StartOn { get; set; }
        /// <summary>
        /// Gets or sets the end time of the job.
        /// Serialized Name: Job.properties.endTime
        /// </summary>
        public DateTimeOffset? EndOn { get; set; }
        /// <summary>
        /// Gets or sets the exception of the job.
        /// Serialized Name: Job.properties.exception
        /// </summary>
        public string Exception { get; set; }
        /// <summary>
        /// Gets or sets the last modified time of the job.
        /// Serialized Name: Job.properties.lastModifiedTime
        /// </summary>
        public DateTimeOffset? LastModifiedOn { get; set; }
        /// <summary>
        /// Gets or sets the last status modified time of the job.
        /// Serialized Name: Job.properties.lastStatusModifiedTime
        /// </summary>
        public DateTimeOffset? LastStatusModifiedOn { get; set; }
        /// <summary>
        /// Gets or sets the parameters of the job.
        /// Serialized Name: Job.properties.parameters
        /// </summary>
        public IDictionary<string, string> Parameters { get; }
        /// <summary>
        /// The current provisioning state of the job.
        /// Serialized Name: Job.properties.provisioningState
        /// </summary>
        public JobProvisioningState? ProvisioningState { get; set; }
    }
}
