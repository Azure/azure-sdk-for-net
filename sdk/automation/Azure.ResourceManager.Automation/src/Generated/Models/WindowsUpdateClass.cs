// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Automation.Models
{
    /// <summary> Update classification included in the software update configuration. A comma separated string with required values. </summary>
    public readonly partial struct WindowsUpdateClass : IEquatable<WindowsUpdateClass>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="WindowsUpdateClass"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public WindowsUpdateClass(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string UnclassifiedValue = "Unclassified";
        private const string CriticalValue = "Critical";
        private const string SecurityValue = "Security";
        private const string UpdateRollupValue = "UpdateRollup";
        private const string FeaturePackValue = "FeaturePack";
        private const string ServicePackValue = "ServicePack";
        private const string DefinitionValue = "Definition";
        private const string ToolsValue = "Tools";
        private const string UpdatesValue = "Updates";

        /// <summary> Unclassified. </summary>
        public static WindowsUpdateClass Unclassified { get; } = new WindowsUpdateClass(UnclassifiedValue);
        /// <summary> Critical. </summary>
        public static WindowsUpdateClass Critical { get; } = new WindowsUpdateClass(CriticalValue);
        /// <summary> Security. </summary>
        public static WindowsUpdateClass Security { get; } = new WindowsUpdateClass(SecurityValue);
        /// <summary> UpdateRollup. </summary>
        public static WindowsUpdateClass UpdateRollup { get; } = new WindowsUpdateClass(UpdateRollupValue);
        /// <summary> FeaturePack. </summary>
        public static WindowsUpdateClass FeaturePack { get; } = new WindowsUpdateClass(FeaturePackValue);
        /// <summary> ServicePack. </summary>
        public static WindowsUpdateClass ServicePack { get; } = new WindowsUpdateClass(ServicePackValue);
        /// <summary> Definition. </summary>
        public static WindowsUpdateClass Definition { get; } = new WindowsUpdateClass(DefinitionValue);
        /// <summary> Tools. </summary>
        public static WindowsUpdateClass Tools { get; } = new WindowsUpdateClass(ToolsValue);
        /// <summary> Updates. </summary>
        public static WindowsUpdateClass Updates { get; } = new WindowsUpdateClass(UpdatesValue);
        /// <summary> Determines if two <see cref="WindowsUpdateClass"/> values are the same. </summary>
        public static bool operator ==(WindowsUpdateClass left, WindowsUpdateClass right) => left.Equals(right);
        /// <summary> Determines if two <see cref="WindowsUpdateClass"/> values are not the same. </summary>
        public static bool operator !=(WindowsUpdateClass left, WindowsUpdateClass right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="WindowsUpdateClass"/>. </summary>
        public static implicit operator WindowsUpdateClass(string value) => new WindowsUpdateClass(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is WindowsUpdateClass other && Equals(other);
        /// <inheritdoc />
        public bool Equals(WindowsUpdateClass other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
