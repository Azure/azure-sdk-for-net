// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.Automation.Models
{
    /// <summary>
    /// Definition of schedule parameters.
    /// Serialized Name: SUCScheduleProperties
    /// </summary>
    public partial class SoftwareUpdateConfigurationScheduleProperties
    {
        /// <summary> Initializes a new instance of SoftwareUpdateConfigurationScheduleProperties. </summary>
        public SoftwareUpdateConfigurationScheduleProperties()
        {
        }

        /// <summary> Initializes a new instance of SoftwareUpdateConfigurationScheduleProperties. </summary>
        /// <param name="startOn">
        /// Gets or sets the start time of the schedule.
        /// Serialized Name: SUCScheduleProperties.startTime
        /// </param>
        /// <param name="startTimeOffsetMinutes">
        /// Gets the start time&apos;s offset in minutes.
        /// Serialized Name: SUCScheduleProperties.startTimeOffsetMinutes
        /// </param>
        /// <param name="expiryOn">
        /// Gets or sets the end time of the schedule.
        /// Serialized Name: SUCScheduleProperties.expiryTime
        /// </param>
        /// <param name="expiryTimeOffsetMinutes">
        /// Gets or sets the expiry time&apos;s offset in minutes.
        /// Serialized Name: SUCScheduleProperties.expiryTimeOffsetMinutes
        /// </param>
        /// <param name="isEnabled">
        /// Gets or sets a value indicating whether this schedule is enabled.
        /// Serialized Name: SUCScheduleProperties.isEnabled
        /// </param>
        /// <param name="nextRun">
        /// Gets or sets the next run time of the schedule.
        /// Serialized Name: SUCScheduleProperties.nextRun
        /// </param>
        /// <param name="nextRunOffsetMinutes">
        /// Gets or sets the next run time&apos;s offset in minutes.
        /// Serialized Name: SUCScheduleProperties.nextRunOffsetMinutes
        /// </param>
        /// <param name="interval">
        /// Gets or sets the interval of the schedule.
        /// Serialized Name: SUCScheduleProperties.interval
        /// </param>
        /// <param name="frequency">
        /// Gets or sets the frequency of the schedule.
        /// Serialized Name: SUCScheduleProperties.frequency
        /// </param>
        /// <param name="timeZone">
        /// Gets or sets the time zone of the schedule.
        /// Serialized Name: SUCScheduleProperties.timeZone
        /// </param>
        /// <param name="advancedSchedule">
        /// Gets or sets the advanced schedule.
        /// Serialized Name: SUCScheduleProperties.advancedSchedule
        /// </param>
        /// <param name="createdOn">
        /// Gets or sets the creation time.
        /// Serialized Name: SUCScheduleProperties.creationTime
        /// </param>
        /// <param name="lastModifiedOn">
        /// Gets or sets the last modified time.
        /// Serialized Name: SUCScheduleProperties.lastModifiedTime
        /// </param>
        /// <param name="description">
        /// Gets or sets the description.
        /// Serialized Name: SUCScheduleProperties.description
        /// </param>
        internal SoftwareUpdateConfigurationScheduleProperties(DateTimeOffset? startOn, double? startTimeOffsetMinutes, DateTimeOffset? expiryOn, double? expiryTimeOffsetMinutes, bool? isEnabled, DateTimeOffset? nextRun, double? nextRunOffsetMinutes, long? interval, AutomationScheduleFrequency? frequency, string timeZone, AutomationAdvancedSchedule advancedSchedule, DateTimeOffset? createdOn, DateTimeOffset? lastModifiedOn, string description)
        {
            StartOn = startOn;
            StartTimeOffsetMinutes = startTimeOffsetMinutes;
            ExpiryOn = expiryOn;
            ExpiryTimeOffsetMinutes = expiryTimeOffsetMinutes;
            IsEnabled = isEnabled;
            NextRun = nextRun;
            NextRunOffsetMinutes = nextRunOffsetMinutes;
            Interval = interval;
            Frequency = frequency;
            TimeZone = timeZone;
            AdvancedSchedule = advancedSchedule;
            CreatedOn = createdOn;
            LastModifiedOn = lastModifiedOn;
            Description = description;
        }

        /// <summary>
        /// Gets or sets the start time of the schedule.
        /// Serialized Name: SUCScheduleProperties.startTime
        /// </summary>
        public DateTimeOffset? StartOn { get; set; }
        /// <summary>
        /// Gets the start time&apos;s offset in minutes.
        /// Serialized Name: SUCScheduleProperties.startTimeOffsetMinutes
        /// </summary>
        public double? StartTimeOffsetMinutes { get; }
        /// <summary>
        /// Gets or sets the end time of the schedule.
        /// Serialized Name: SUCScheduleProperties.expiryTime
        /// </summary>
        public DateTimeOffset? ExpiryOn { get; set; }
        /// <summary>
        /// Gets or sets the expiry time&apos;s offset in minutes.
        /// Serialized Name: SUCScheduleProperties.expiryTimeOffsetMinutes
        /// </summary>
        public double? ExpiryTimeOffsetMinutes { get; set; }
        /// <summary>
        /// Gets or sets a value indicating whether this schedule is enabled.
        /// Serialized Name: SUCScheduleProperties.isEnabled
        /// </summary>
        public bool? IsEnabled { get; set; }
        /// <summary>
        /// Gets or sets the next run time of the schedule.
        /// Serialized Name: SUCScheduleProperties.nextRun
        /// </summary>
        public DateTimeOffset? NextRun { get; set; }
        /// <summary>
        /// Gets or sets the next run time&apos;s offset in minutes.
        /// Serialized Name: SUCScheduleProperties.nextRunOffsetMinutes
        /// </summary>
        public double? NextRunOffsetMinutes { get; set; }
        /// <summary>
        /// Gets or sets the interval of the schedule.
        /// Serialized Name: SUCScheduleProperties.interval
        /// </summary>
        public long? Interval { get; set; }
        /// <summary>
        /// Gets or sets the frequency of the schedule.
        /// Serialized Name: SUCScheduleProperties.frequency
        /// </summary>
        public AutomationScheduleFrequency? Frequency { get; set; }
        /// <summary>
        /// Gets or sets the time zone of the schedule.
        /// Serialized Name: SUCScheduleProperties.timeZone
        /// </summary>
        public string TimeZone { get; set; }
        /// <summary>
        /// Gets or sets the advanced schedule.
        /// Serialized Name: SUCScheduleProperties.advancedSchedule
        /// </summary>
        public AutomationAdvancedSchedule AdvancedSchedule { get; set; }
        /// <summary>
        /// Gets or sets the creation time.
        /// Serialized Name: SUCScheduleProperties.creationTime
        /// </summary>
        public DateTimeOffset? CreatedOn { get; set; }
        /// <summary>
        /// Gets or sets the last modified time.
        /// Serialized Name: SUCScheduleProperties.lastModifiedTime
        /// </summary>
        public DateTimeOffset? LastModifiedOn { get; set; }
        /// <summary>
        /// Gets or sets the description.
        /// Serialized Name: SUCScheduleProperties.description
        /// </summary>
        public string Description { get; set; }
    }
}
