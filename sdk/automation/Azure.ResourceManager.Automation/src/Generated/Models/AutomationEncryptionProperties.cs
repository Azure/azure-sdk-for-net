// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Automation.Models
{
    /// <summary> The encryption settings for automation account. </summary>
    public partial class AutomationEncryptionProperties
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="AutomationEncryptionProperties"/>. </summary>
        public AutomationEncryptionProperties()
        {
        }

        /// <summary> Initializes a new instance of <see cref="AutomationEncryptionProperties"/>. </summary>
        /// <param name="keyVaultProperties"> Key vault properties. </param>
        /// <param name="keySource"> Encryption Key Source. </param>
        /// <param name="identity"> User identity used for CMK. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal AutomationEncryptionProperties(AutomationKeyVaultProperties keyVaultProperties, EncryptionKeySourceType? keySource, EncryptionPropertiesIdentity identity, Dictionary<string, BinaryData> rawData)
        {
            KeyVaultProperties = keyVaultProperties;
            KeySource = keySource;
            Identity = identity;
            _rawData = rawData;
        }

        /// <summary> Key vault properties. </summary>
        public AutomationKeyVaultProperties KeyVaultProperties { get; set; }
        /// <summary> Encryption Key Source. </summary>
        public EncryptionKeySourceType? KeySource { get; set; }
        /// <summary> User identity used for CMK. </summary>
        internal EncryptionPropertiesIdentity Identity { get; set; }
        /// <summary>
        /// The user identity used for CMK. It will be an ARM resource id in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// <para>
        /// To assign an object to this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formated json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public BinaryData UserAssignedIdentity
        {
            get => Identity is null ? default : Identity.UserAssignedIdentity;
            set
            {
                if (Identity is null)
                    Identity = new EncryptionPropertiesIdentity();
                Identity.UserAssignedIdentity = value;
            }
        }
    }
}
