// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Automation.Models
{
    public partial class SourceControlCreateOrUpdateContent : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("properties");
            writer.WriteStartObject();
            if (Optional.IsDefined(RepoUri))
            {
                writer.WritePropertyName("repoUrl");
                writer.WriteStringValue(RepoUri.AbsoluteUri);
            }
            if (Optional.IsDefined(Branch))
            {
                writer.WritePropertyName("branch");
                writer.WriteStringValue(Branch);
            }
            if (Optional.IsDefined(FolderPath))
            {
                writer.WritePropertyName("folderPath");
                writer.WriteStringValue(FolderPath);
            }
            if (Optional.IsDefined(AutoSync))
            {
                writer.WritePropertyName("autoSync");
                writer.WriteBooleanValue(AutoSync.Value);
            }
            if (Optional.IsDefined(PublishRunbook))
            {
                writer.WritePropertyName("publishRunbook");
                writer.WriteBooleanValue(PublishRunbook.Value);
            }
            if (Optional.IsDefined(SourceType))
            {
                writer.WritePropertyName("sourceType");
                writer.WriteStringValue(SourceType.Value.ToString());
            }
            if (Optional.IsDefined(SecurityToken))
            {
                writer.WritePropertyName("securityToken");
                writer.WriteObjectValue(SecurityToken);
            }
            if (Optional.IsDefined(Description))
            {
                writer.WritePropertyName("description");
                writer.WriteStringValue(Description);
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
        }
    }
}
