// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Automation.Models
{
    /// <summary> The parameters supplied to the update connection operation. </summary>
    public partial class AutomationConnectionPatch
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="AutomationConnectionPatch"/>. </summary>
        public AutomationConnectionPatch()
        {
            FieldDefinitionValues = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of <see cref="AutomationConnectionPatch"/>. </summary>
        /// <param name="name"> Gets or sets the name of the connection. </param>
        /// <param name="description"> Gets or sets the description of the connection. </param>
        /// <param name="fieldDefinitionValues"> Gets or sets the field definition values of the connection. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal AutomationConnectionPatch(string name, string description, IDictionary<string, string> fieldDefinitionValues, Dictionary<string, BinaryData> rawData)
        {
            Name = name;
            Description = description;
            FieldDefinitionValues = fieldDefinitionValues;
            _rawData = rawData;
        }

        /// <summary> Gets or sets the name of the connection. </summary>
        public string Name { get; set; }
        /// <summary> Gets or sets the description of the connection. </summary>
        public string Description { get; set; }
        /// <summary> Gets or sets the field definition values of the connection. </summary>
        public IDictionary<string, string> FieldDefinitionValues { get; }
    }
}
