// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Automation.Models
{
    public partial class WindowsUpdateConfigurationProperties : Core.IUtf8JsonSerializable
    {
        void Core.IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Core.Optional.IsDefined(IncludedUpdateClassifications))
            {
                writer.WritePropertyName("includedUpdateClassifications"u8);
                writer.WriteStringValue(IncludedUpdateClassifications.Value.ToString());
            }
            if (Core.Optional.IsCollectionDefined(ExcludedKBNumbers))
            {
                writer.WritePropertyName("excludedKbNumbers"u8);
                writer.WriteStartArray();
                foreach (var item in ExcludedKBNumbers)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (Core.Optional.IsCollectionDefined(IncludedKBNumbers))
            {
                writer.WritePropertyName("includedKbNumbers"u8);
                writer.WriteStartArray();
                foreach (var item in IncludedKBNumbers)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (Core.Optional.IsDefined(RebootSetting))
            {
                writer.WritePropertyName("rebootSetting"u8);
                writer.WriteStringValue(RebootSetting);
            }
            writer.WriteEndObject();
        }

        internal static WindowsUpdateConfigurationProperties DeserializeWindowsUpdateConfigurationProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<WindowsUpdateClassification> includedUpdateClassifications = default;
            Core.Optional<IList<string>> excludedKbNumbers = default;
            Core.Optional<IList<string>> includedKbNumbers = default;
            Core.Optional<string> rebootSetting = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("includedUpdateClassifications"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    includedUpdateClassifications = new WindowsUpdateClassification(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("excludedKbNumbers"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    excludedKbNumbers = array;
                    continue;
                }
                if (property.NameEquals("includedKbNumbers"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    includedKbNumbers = array;
                    continue;
                }
                if (property.NameEquals("rebootSetting"u8))
                {
                    rebootSetting = property.Value.GetString();
                    continue;
                }
            }
            return new WindowsUpdateConfigurationProperties(Core.Optional.ToNullable(includedUpdateClassifications), Core.Optional.ToList(excludedKbNumbers), Core.Optional.ToList(includedKbNumbers), rebootSetting.Value);
        }
    }
}
