// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Automation.Models
{
    /// <summary> Settings concerning key vault encryption for a configuration store. </summary>
    public partial class AutomationKeyVaultProperties
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="AutomationKeyVaultProperties"/>. </summary>
        public AutomationKeyVaultProperties()
        {
        }

        /// <summary> Initializes a new instance of <see cref="AutomationKeyVaultProperties"/>. </summary>
        /// <param name="keyvaultUri"> The URI of the key vault key used to encrypt data. </param>
        /// <param name="keyName"> The name of key used to encrypt data. </param>
        /// <param name="keyVersion"> The key version of the key used to encrypt data. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal AutomationKeyVaultProperties(Uri keyvaultUri, string keyName, string keyVersion, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            KeyvaultUri = keyvaultUri;
            KeyName = keyName;
            KeyVersion = keyVersion;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The URI of the key vault key used to encrypt data. </summary>
        public Uri KeyvaultUri { get; set; }
        /// <summary> The name of key used to encrypt data. </summary>
        public string KeyName { get; set; }
        /// <summary> The key version of the key used to encrypt data. </summary>
        public string KeyVersion { get; set; }
    }
}
