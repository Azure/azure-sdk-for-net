// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Automation;

namespace Azure.ResourceManager.Automation.Models
{
    /// <summary>
    /// The response model for the list dsc nodes operation.
    /// Serialized Name: DscNodeListResult
    /// </summary>
    internal partial class DscNodeListResult
    {
        /// <summary> Initializes a new instance of DscNodeListResult. </summary>
        internal DscNodeListResult()
        {
            Value = new ChangeTrackingList<DscNodeData>();
        }

        /// <summary> Initializes a new instance of DscNodeListResult. </summary>
        /// <param name="value">
        /// Gets or sets a list of dsc nodes.
        /// Serialized Name: DscNodeListResult.value
        /// </param>
        /// <param name="nextLink">
        /// Gets or sets the next link.
        /// Serialized Name: DscNodeListResult.nextLink
        /// </param>
        /// <param name="totalCount">
        /// Gets the total number of nodes matching filter criteria.
        /// Serialized Name: DscNodeListResult.totalCount
        /// </param>
        internal DscNodeListResult(IReadOnlyList<DscNodeData> value, string nextLink, int? totalCount)
        {
            Value = value;
            NextLink = nextLink;
            TotalCount = totalCount;
        }

        /// <summary>
        /// Gets or sets a list of dsc nodes.
        /// Serialized Name: DscNodeListResult.value
        /// </summary>
        public IReadOnlyList<DscNodeData> Value { get; }
        /// <summary>
        /// Gets or sets the next link.
        /// Serialized Name: DscNodeListResult.nextLink
        /// </summary>
        public string NextLink { get; }
        /// <summary>
        /// Gets the total number of nodes matching filter criteria.
        /// Serialized Name: DscNodeListResult.totalCount
        /// </summary>
        public int? TotalCount { get; }
    }
}
