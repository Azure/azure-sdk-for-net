// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Automation.Models
{
    public partial class SourceControlSyncJobStreamById
    {
        internal static SourceControlSyncJobStreamById DeserializeSourceControlSyncJobStreamById(JsonElement element)
        {
            Optional<string> id = default;
            Optional<string> sourceControlSyncJobStreamId = default;
            Optional<string> summary = default;
            Optional<DateTimeOffset?> time = default;
            Optional<StreamType> streamType = default;
            Optional<string> streamText = default;
            Optional<IReadOnlyDictionary<string, BinaryData>> value = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("properties"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("sourceControlSyncJobStreamId"))
                        {
                            sourceControlSyncJobStreamId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("summary"))
                        {
                            summary = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("time"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                time = null;
                                continue;
                            }
                            time = property0.Value.GetDateTimeOffset("O");
                            continue;
                        }
                        if (property0.NameEquals("streamType"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            streamType = new StreamType(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("streamText"))
                        {
                            streamText = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("value"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            Dictionary<string, BinaryData> dictionary = new Dictionary<string, BinaryData>();
                            foreach (var property1 in property0.Value.EnumerateObject())
                            {
                                dictionary.Add(property1.Name, BinaryData.FromString(property1.Value.GetRawText()));
                            }
                            value = dictionary;
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new SourceControlSyncJobStreamById(id.Value, sourceControlSyncJobStreamId.Value, summary.Value, Optional.ToNullable(time), Optional.ToNullable(streamType), streamText.Value, Optional.ToDictionary(value));
        }
    }
}
