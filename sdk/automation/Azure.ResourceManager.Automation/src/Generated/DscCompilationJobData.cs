// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Automation.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Automation
{
    /// <summary> A class representing the DscCompilationJob data model. </summary>
    public partial class DscCompilationJobData : ResourceData
    {
        /// <summary> Initializes a new instance of DscCompilationJobData. </summary>
        public DscCompilationJobData()
        {
            Parameters = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of DscCompilationJobData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="configuration">
        /// Gets or sets the configuration.
        /// Serialized Name: DscCompilationJob.properties.configuration
        /// </param>
        /// <param name="startedBy">
        /// Gets the compilation job started by.
        /// Serialized Name: DscCompilationJob.properties.startedBy
        /// </param>
        /// <param name="jobId">
        /// Gets the id of the job.
        /// Serialized Name: DscCompilationJob.properties.jobId
        /// </param>
        /// <param name="createdOn">
        /// Gets the creation time of the job.
        /// Serialized Name: DscCompilationJob.properties.creationTime
        /// </param>
        /// <param name="provisioningState">
        /// The current provisioning state of the job.
        /// Serialized Name: DscCompilationJob.properties.provisioningState
        /// </param>
        /// <param name="runOn">
        /// Gets or sets the runOn which specifies the group name where the job is to be executed.
        /// Serialized Name: DscCompilationJob.properties.runOn
        /// </param>
        /// <param name="status">
        /// Gets or sets the status of the job.
        /// Serialized Name: DscCompilationJob.properties.status
        /// </param>
        /// <param name="statusDetails">
        /// Gets or sets the status details of the job.
        /// Serialized Name: DscCompilationJob.properties.statusDetails
        /// </param>
        /// <param name="startOn">
        /// Gets the start time of the job.
        /// Serialized Name: DscCompilationJob.properties.startTime
        /// </param>
        /// <param name="endOn">
        /// Gets the end time of the job.
        /// Serialized Name: DscCompilationJob.properties.endTime
        /// </param>
        /// <param name="exception">
        /// Gets the exception of the job.
        /// Serialized Name: DscCompilationJob.properties.exception
        /// </param>
        /// <param name="lastModifiedOn">
        /// Gets the last modified time of the job.
        /// Serialized Name: DscCompilationJob.properties.lastModifiedTime
        /// </param>
        /// <param name="lastStatusModifiedOn">
        /// Gets the last status modified time of the job.
        /// Serialized Name: DscCompilationJob.properties.lastStatusModifiedTime
        /// </param>
        /// <param name="parameters">
        /// Gets or sets the parameters of the job.
        /// Serialized Name: DscCompilationJob.properties.parameters
        /// </param>
        internal DscCompilationJobData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, DscConfigurationAssociationProperty configuration, string startedBy, Guid? jobId, DateTimeOffset? createdOn, JobProvisioningState? provisioningState, string runOn, AutomationJobStatus? status, string statusDetails, DateTimeOffset? startOn, DateTimeOffset? endOn, string exception, DateTimeOffset? lastModifiedOn, DateTimeOffset? lastStatusModifiedOn, IDictionary<string, string> parameters) : base(id, name, resourceType, systemData)
        {
            Configuration = configuration;
            StartedBy = startedBy;
            JobId = jobId;
            CreatedOn = createdOn;
            ProvisioningState = provisioningState;
            RunOn = runOn;
            Status = status;
            StatusDetails = statusDetails;
            StartOn = startOn;
            EndOn = endOn;
            Exception = exception;
            LastModifiedOn = lastModifiedOn;
            LastStatusModifiedOn = lastStatusModifiedOn;
            Parameters = parameters;
        }

        /// <summary>
        /// Gets or sets the configuration.
        /// Serialized Name: DscCompilationJob.properties.configuration
        /// </summary>
        internal DscConfigurationAssociationProperty Configuration { get; set; }
        /// <summary>
        /// Gets or sets the name of the Dsc configuration.
        /// Serialized Name: DscConfigurationAssociationProperty.name
        /// </summary>
        public string ConfigurationName
        {
            get => Configuration is null ? default : Configuration.ConfigurationName;
            set
            {
                if (Configuration is null)
                    Configuration = new DscConfigurationAssociationProperty();
                Configuration.ConfigurationName = value;
            }
        }

        /// <summary>
        /// Gets the compilation job started by.
        /// Serialized Name: DscCompilationJob.properties.startedBy
        /// </summary>
        public string StartedBy { get; }
        /// <summary>
        /// Gets the id of the job.
        /// Serialized Name: DscCompilationJob.properties.jobId
        /// </summary>
        public Guid? JobId { get; }
        /// <summary>
        /// Gets the creation time of the job.
        /// Serialized Name: DscCompilationJob.properties.creationTime
        /// </summary>
        public DateTimeOffset? CreatedOn { get; }
        /// <summary>
        /// The current provisioning state of the job.
        /// Serialized Name: DscCompilationJob.properties.provisioningState
        /// </summary>
        public JobProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// Gets or sets the runOn which specifies the group name where the job is to be executed.
        /// Serialized Name: DscCompilationJob.properties.runOn
        /// </summary>
        public string RunOn { get; set; }
        /// <summary>
        /// Gets or sets the status of the job.
        /// Serialized Name: DscCompilationJob.properties.status
        /// </summary>
        public AutomationJobStatus? Status { get; set; }
        /// <summary>
        /// Gets or sets the status details of the job.
        /// Serialized Name: DscCompilationJob.properties.statusDetails
        /// </summary>
        public string StatusDetails { get; set; }
        /// <summary>
        /// Gets the start time of the job.
        /// Serialized Name: DscCompilationJob.properties.startTime
        /// </summary>
        public DateTimeOffset? StartOn { get; }
        /// <summary>
        /// Gets the end time of the job.
        /// Serialized Name: DscCompilationJob.properties.endTime
        /// </summary>
        public DateTimeOffset? EndOn { get; }
        /// <summary>
        /// Gets the exception of the job.
        /// Serialized Name: DscCompilationJob.properties.exception
        /// </summary>
        public string Exception { get; }
        /// <summary>
        /// Gets the last modified time of the job.
        /// Serialized Name: DscCompilationJob.properties.lastModifiedTime
        /// </summary>
        public DateTimeOffset? LastModifiedOn { get; }
        /// <summary>
        /// Gets the last status modified time of the job.
        /// Serialized Name: DscCompilationJob.properties.lastStatusModifiedTime
        /// </summary>
        public DateTimeOffset? LastStatusModifiedOn { get; }
        /// <summary>
        /// Gets or sets the parameters of the job.
        /// Serialized Name: DscCompilationJob.properties.parameters
        /// </summary>
        public IDictionary<string, string> Parameters { get; }
    }
}
