// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Automation
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Microsoft.Rest.Azure.OData;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for JobOperations.
    /// </summary>
    public static partial class JobOperationsExtensions
    {
            /// <summary>
            /// Retrieve the job output identified by job name.
            /// <see href="http://aka.ms/azureautomationsdk/joboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='jobName'>
            /// The name of the job to be created.
            /// </param>
            /// <param name='clientRequestId'>
            /// Identifies this specific client request.
            /// </param>
            public static string GetOutput(this IJobOperations operations, string resourceGroupName, string automationAccountName, string jobName, string clientRequestId = default(string))
            {
                return operations.GetOutputAsync(resourceGroupName, automationAccountName, jobName, clientRequestId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve the job output identified by job name.
            /// <see href="http://aka.ms/azureautomationsdk/joboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='jobName'>
            /// The name of the job to be created.
            /// </param>
            /// <param name='clientRequestId'>
            /// Identifies this specific client request.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<string> GetOutputAsync(this IJobOperations operations, string resourceGroupName, string automationAccountName, string jobName, string clientRequestId = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetOutputWithHttpMessagesAsync(resourceGroupName, automationAccountName, jobName, clientRequestId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieve the runbook content of the job identified by job name.
            /// <see href="http://aka.ms/azureautomationsdk/joboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='jobName'>
            /// The job name.
            /// </param>
            /// <param name='clientRequestId'>
            /// Identifies this specific client request.
            /// </param>
            public static string GetRunbookContent(this IJobOperations operations, string resourceGroupName, string automationAccountName, string jobName, string clientRequestId = default(string))
            {
                return operations.GetRunbookContentAsync(resourceGroupName, automationAccountName, jobName, clientRequestId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve the runbook content of the job identified by job name.
            /// <see href="http://aka.ms/azureautomationsdk/joboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='jobName'>
            /// The job name.
            /// </param>
            /// <param name='clientRequestId'>
            /// Identifies this specific client request.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<string> GetRunbookContentAsync(this IJobOperations operations, string resourceGroupName, string automationAccountName, string jobName, string clientRequestId = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetRunbookContentWithHttpMessagesAsync(resourceGroupName, automationAccountName, jobName, clientRequestId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Suspend the job identified by job name.
            /// <see href="http://aka.ms/azureautomationsdk/joboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='jobName'>
            /// The job name.
            /// </param>
            /// <param name='clientRequestId'>
            /// Identifies this specific client request.
            /// </param>
            public static void Suspend(this IJobOperations operations, string resourceGroupName, string automationAccountName, string jobName, string clientRequestId = default(string))
            {
                operations.SuspendAsync(resourceGroupName, automationAccountName, jobName, clientRequestId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Suspend the job identified by job name.
            /// <see href="http://aka.ms/azureautomationsdk/joboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='jobName'>
            /// The job name.
            /// </param>
            /// <param name='clientRequestId'>
            /// Identifies this specific client request.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task SuspendAsync(this IJobOperations operations, string resourceGroupName, string automationAccountName, string jobName, string clientRequestId = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.SuspendWithHttpMessagesAsync(resourceGroupName, automationAccountName, jobName, clientRequestId, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Stop the job identified by jobName.
            /// <see href="http://aka.ms/azureautomationsdk/joboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='jobName'>
            /// The job name.
            /// </param>
            /// <param name='clientRequestId'>
            /// Identifies this specific client request.
            /// </param>
            public static void Stop(this IJobOperations operations, string resourceGroupName, string automationAccountName, string jobName, string clientRequestId = default(string))
            {
                operations.StopAsync(resourceGroupName, automationAccountName, jobName, clientRequestId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Stop the job identified by jobName.
            /// <see href="http://aka.ms/azureautomationsdk/joboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='jobName'>
            /// The job name.
            /// </param>
            /// <param name='clientRequestId'>
            /// Identifies this specific client request.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task StopAsync(this IJobOperations operations, string resourceGroupName, string automationAccountName, string jobName, string clientRequestId = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.StopWithHttpMessagesAsync(resourceGroupName, automationAccountName, jobName, clientRequestId, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Retrieve the job identified by job name.
            /// <see href="http://aka.ms/azureautomationsdk/joboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='jobName'>
            /// The job name.
            /// </param>
            /// <param name='clientRequestId'>
            /// Identifies this specific client request.
            /// </param>
            public static Job Get(this IJobOperations operations, string resourceGroupName, string automationAccountName, string jobName, string clientRequestId = default(string))
            {
                return operations.GetAsync(resourceGroupName, automationAccountName, jobName, clientRequestId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve the job identified by job name.
            /// <see href="http://aka.ms/azureautomationsdk/joboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='jobName'>
            /// The job name.
            /// </param>
            /// <param name='clientRequestId'>
            /// Identifies this specific client request.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Job> GetAsync(this IJobOperations operations, string resourceGroupName, string automationAccountName, string jobName, string clientRequestId = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, automationAccountName, jobName, clientRequestId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create a job of the runbook.
            /// <see href="http://aka.ms/azureautomationsdk/joboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='jobName'>
            /// The job name.
            /// </param>
            /// <param name='parameters'>
            /// The parameters supplied to the create job operation.
            /// </param>
            /// <param name='clientRequestId'>
            /// Identifies this specific client request.
            /// </param>
            public static Job Create(this IJobOperations operations, string resourceGroupName, string automationAccountName, string jobName, JobCreateParameters parameters, string clientRequestId = default(string))
            {
                return operations.CreateAsync(resourceGroupName, automationAccountName, jobName, parameters, clientRequestId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create a job of the runbook.
            /// <see href="http://aka.ms/azureautomationsdk/joboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='jobName'>
            /// The job name.
            /// </param>
            /// <param name='parameters'>
            /// The parameters supplied to the create job operation.
            /// </param>
            /// <param name='clientRequestId'>
            /// Identifies this specific client request.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Job> CreateAsync(this IJobOperations operations, string resourceGroupName, string automationAccountName, string jobName, JobCreateParameters parameters, string clientRequestId = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(resourceGroupName, automationAccountName, jobName, parameters, clientRequestId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieve a list of jobs.
            /// <see href="http://aka.ms/azureautomationsdk/joboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='odataQuery'>
            /// OData parameters to apply to the operation.
            /// </param>
            /// <param name='clientRequestId'>
            /// Identifies this specific client request.
            /// </param>
            public static IPage<JobCollectionItem> ListByAutomationAccount(this IJobOperations operations, string resourceGroupName, string automationAccountName, ODataQuery<JobCollectionItem> odataQuery = default(ODataQuery<JobCollectionItem>), string clientRequestId = default(string))
            {
                return operations.ListByAutomationAccountAsync(resourceGroupName, automationAccountName, odataQuery, clientRequestId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve a list of jobs.
            /// <see href="http://aka.ms/azureautomationsdk/joboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='odataQuery'>
            /// OData parameters to apply to the operation.
            /// </param>
            /// <param name='clientRequestId'>
            /// Identifies this specific client request.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<JobCollectionItem>> ListByAutomationAccountAsync(this IJobOperations operations, string resourceGroupName, string automationAccountName, ODataQuery<JobCollectionItem> odataQuery = default(ODataQuery<JobCollectionItem>), string clientRequestId = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByAutomationAccountWithHttpMessagesAsync(resourceGroupName, automationAccountName, odataQuery, clientRequestId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Resume the job identified by jobName.
            /// <see href="http://aka.ms/azureautomationsdk/joboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='jobName'>
            /// The job name.
            /// </param>
            /// <param name='clientRequestId'>
            /// Identifies this specific client request.
            /// </param>
            public static void Resume(this IJobOperations operations, string resourceGroupName, string automationAccountName, string jobName, string clientRequestId = default(string))
            {
                operations.ResumeAsync(resourceGroupName, automationAccountName, jobName, clientRequestId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Resume the job identified by jobName.
            /// <see href="http://aka.ms/azureautomationsdk/joboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='jobName'>
            /// The job name.
            /// </param>
            /// <param name='clientRequestId'>
            /// Identifies this specific client request.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ResumeAsync(this IJobOperations operations, string resourceGroupName, string automationAccountName, string jobName, string clientRequestId = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ResumeWithHttpMessagesAsync(resourceGroupName, automationAccountName, jobName, clientRequestId, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Retrieve a list of jobs.
            /// <see href="http://aka.ms/azureautomationsdk/joboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='clientRequestId'>
            /// Identifies this specific client request.
            /// </param>
            public static IPage<JobCollectionItem> ListByAutomationAccountNext(this IJobOperations operations, string nextPageLink, string clientRequestId = default(string))
            {
                return operations.ListByAutomationAccountNextAsync(nextPageLink, clientRequestId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve a list of jobs.
            /// <see href="http://aka.ms/azureautomationsdk/joboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='clientRequestId'>
            /// Identifies this specific client request.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<JobCollectionItem>> ListByAutomationAccountNextAsync(this IJobOperations operations, string nextPageLink, string clientRequestId = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByAutomationAccountNextWithHttpMessagesAsync(nextPageLink, clientRequestId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
