// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Automation.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Definition of the automation account type.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class AutomationAccount : TrackedResource
    {
        /// <summary>
        /// Initializes a new instance of the AutomationAccount class.
        /// </summary>
        public AutomationAccount()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AutomationAccount class.
        /// </summary>
        /// <param name="id">Fully qualified resource Id for the
        /// resource</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource.</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="location">The Azure Region where the resource
        /// lives</param>
        /// <param name="sku">Gets or sets the SKU of account.</param>
        /// <param name="lastModifiedBy">Gets or sets the last modified
        /// by.</param>
        /// <param name="state">Gets status of account. Possible values
        /// include: 'Ok', 'Unavailable', 'Suspended'</param>
        /// <param name="creationTime">Gets the creation time.</param>
        /// <param name="lastModifiedTime">Gets the last modified time.</param>
        /// <param name="description">Gets or sets the description.</param>
        /// <param name="encryption">Encryption properties for the automation
        /// account</param>
        /// <param name="privateEndpointConnections">List of Automation
        /// operations supported by the Automation resource provider.</param>
        /// <param name="publicNetworkAccess">Indicates whether traffic on the
        /// non-ARM endpoint (Webhook/Agent) is allowed from the public
        /// internet</param>
        /// <param name="etag">Gets or sets the etag of the resource.</param>
        public AutomationAccount(string id = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string location = default(string), Sku sku = default(Sku), string lastModifiedBy = default(string), string state = default(string), System.DateTimeOffset creationTime = default(System.DateTimeOffset), System.DateTimeOffset lastModifiedTime = default(System.DateTimeOffset), string description = default(string), EncryptionProperties encryption = default(EncryptionProperties), IList<PrivateEndpointConnection> privateEndpointConnections = default(IList<PrivateEndpointConnection>), bool? publicNetworkAccess = default(bool?), string etag = default(string), Identity identity = default(Identity))
            : base(id, name, type, tags, location)
        {
            Sku = sku;
            LastModifiedBy = lastModifiedBy;
            State = state;
            CreationTime = creationTime;
            LastModifiedTime = lastModifiedTime;
            Description = description;
            Encryption = encryption;
            PrivateEndpointConnections = privateEndpointConnections;
            PublicNetworkAccess = publicNetworkAccess;
            Etag = etag;
            Identity = identity;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the SKU of account.
        /// </summary>
        [JsonProperty(PropertyName = "properties.sku")]
        public Sku Sku { get; set; }

        /// <summary>
        /// Gets or sets the last modified by.
        /// </summary>
        [JsonProperty(PropertyName = "properties.lastModifiedBy")]
        public string LastModifiedBy { get; set; }

        /// <summary>
        /// Gets status of account. Possible values include: 'Ok',
        /// 'Unavailable', 'Suspended'
        /// </summary>
        [JsonProperty(PropertyName = "properties.state")]
        public string State { get; private set; }

        /// <summary>
        /// Gets the creation time.
        /// </summary>
        [JsonProperty(PropertyName = "properties.creationTime")]
        public System.DateTimeOffset CreationTime { get; private set; }

        /// <summary>
        /// Gets the last modified time.
        /// </summary>
        [JsonProperty(PropertyName = "properties.lastModifiedTime")]
        public System.DateTimeOffset LastModifiedTime { get; private set; }

        /// <summary>
        /// Gets or sets the description.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets encryption properties for the automation account
        /// </summary>
        [JsonProperty(PropertyName = "properties.encryption")]
        public EncryptionProperties Encryption { get; set; }

        /// <summary>
        /// Gets or sets list of Automation operations supported by the
        /// Automation resource provider.
        /// </summary>
        [JsonProperty(PropertyName = "properties.privateEndpointConnections")]
        public IList<PrivateEndpointConnection> PrivateEndpointConnections { get; set; }

        /// <summary>
        /// Gets or sets indicates whether traffic on the non-ARM endpoint
        /// (Webhook/Agent) is allowed from the public internet
        /// </summary>
        [JsonProperty(PropertyName = "properties.publicNetworkAccess")]
        public bool? PublicNetworkAccess { get; set; }

        /// <summary>
        /// Gets or sets the etag of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "etag")]
        public string Etag { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "identity")]
        public Identity Identity { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Sku != null)
            {
                Sku.Validate();
            }
        }
    }
}
