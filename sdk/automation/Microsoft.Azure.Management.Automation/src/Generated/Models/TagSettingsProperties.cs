// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Automation.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Tag filter information for the VM.
    /// </summary>
    public partial class TagSettingsProperties
    {
        /// <summary>
        /// Initializes a new instance of the TagSettingsProperties class.
        /// </summary>
        public TagSettingsProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TagSettingsProperties class.
        /// </summary>
        /// <param name="tags">Dictionary of tags with its list of
        /// values.</param>
        /// <param name="filterOperator">Filter VMs by Any or All specified
        /// tags. Possible values include: 'All', 'Any'</param>
        public TagSettingsProperties(IDictionary<string, IList<string>> tags = default(IDictionary<string, IList<string>>), TagOperators? filterOperator = default(TagOperators?))
        {
            Tags = tags;
            FilterOperator = filterOperator;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets dictionary of tags with its list of values.
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, IList<string>> Tags { get; set; }

        /// <summary>
        /// Gets or sets filter VMs by Any or All specified tags. Possible
        /// values include: 'All', 'Any'
        /// </summary>
        [JsonProperty(PropertyName = "filterOperator")]
        public TagOperators? FilterOperator { get; set; }

    }
}
