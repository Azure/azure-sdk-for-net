// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Automation.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Definition of Usage.
    /// </summary>
    public partial class Usage
    {
        /// <summary>
        /// Initializes a new instance of the Usage class.
        /// </summary>
        public Usage()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Usage class.
        /// </summary>
        /// <param name="id">Gets or sets the id of the resource.</param>
        /// <param name="name">Gets or sets the usage counter name.</param>
        /// <param name="unit">Gets or sets the usage unit name.</param>
        /// <param name="currentValue">Gets or sets the current usage
        /// value.</param>
        /// <param name="limit">Gets or sets max limit. -1 for
        /// unlimited</param>
        /// <param name="throttleStatus">Gets or sets the throttle
        /// status.</param>
        public Usage(string id = default(string), UsageCounterName name = default(UsageCounterName), string unit = default(string), double? currentValue = default(double?), long? limit = default(long?), string throttleStatus = default(string))
        {
            Id = id;
            Name = name;
            Unit = unit;
            CurrentValue = currentValue;
            Limit = limit;
            ThrottleStatus = throttleStatus;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the id of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets the usage counter name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public UsageCounterName Name { get; set; }

        /// <summary>
        /// Gets or sets the usage unit name.
        /// </summary>
        [JsonProperty(PropertyName = "unit")]
        public string Unit { get; set; }

        /// <summary>
        /// Gets or sets the current usage value.
        /// </summary>
        [JsonProperty(PropertyName = "currentValue")]
        public double? CurrentValue { get; set; }

        /// <summary>
        /// Gets or sets max limit. -1 for unlimited
        /// </summary>
        [JsonProperty(PropertyName = "limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// Gets or sets the throttle status.
        /// </summary>
        [JsonProperty(PropertyName = "throttleStatus")]
        public string ThrottleStatus { get; set; }

    }
}
