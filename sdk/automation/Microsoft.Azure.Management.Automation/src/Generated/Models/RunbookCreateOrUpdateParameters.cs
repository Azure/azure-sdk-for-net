// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Automation.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The parameters supplied to the create or update runbook operation.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class RunbookCreateOrUpdateParameters
    {
        /// <summary>
        /// Initializes a new instance of the RunbookCreateOrUpdateParameters
        /// class.
        /// </summary>
        public RunbookCreateOrUpdateParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RunbookCreateOrUpdateParameters
        /// class.
        /// </summary>
        /// <param name="runbookType">Gets or sets the type of the runbook.
        /// Possible values include: 'Script', 'Graph', 'PowerShellWorkflow',
        /// 'PowerShell', 'GraphPowerShellWorkflow', 'GraphPowerShell'</param>
        /// <param name="logVerbose">Gets or sets verbose log option.</param>
        /// <param name="logProgress">Gets or sets progress log option.</param>
        /// <param name="draft">Gets or sets the draft runbook
        /// properties.</param>
        /// <param name="publishContentLink">Gets or sets the published runbook
        /// content link.</param>
        /// <param name="description">Gets or sets the description of the
        /// runbook.</param>
        /// <param name="logActivityTrace">Gets or sets the activity-level
        /// tracing options of the runbook.</param>
        /// <param name="name">Gets or sets the name of the resource.</param>
        /// <param name="location">Gets or sets the location of the
        /// resource.</param>
        /// <param name="tags">Gets or sets the tags attached to the
        /// resource.</param>
        public RunbookCreateOrUpdateParameters(string runbookType, bool? logVerbose = default(bool?), bool? logProgress = default(bool?), RunbookDraft draft = default(RunbookDraft), ContentLink publishContentLink = default(ContentLink), string description = default(string), int? logActivityTrace = default(int?), string name = default(string), string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>))
        {
            LogVerbose = logVerbose;
            LogProgress = logProgress;
            RunbookType = runbookType;
            Draft = draft;
            PublishContentLink = publishContentLink;
            Description = description;
            LogActivityTrace = logActivityTrace;
            Name = name;
            Location = location;
            Tags = tags;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets verbose log option.
        /// </summary>
        [JsonProperty(PropertyName = "properties.logVerbose")]
        public bool? LogVerbose { get; set; }

        /// <summary>
        /// Gets or sets progress log option.
        /// </summary>
        [JsonProperty(PropertyName = "properties.logProgress")]
        public bool? LogProgress { get; set; }

        /// <summary>
        /// Gets or sets the type of the runbook. Possible values include:
        /// 'Script', 'Graph', 'PowerShellWorkflow', 'PowerShell',
        /// 'GraphPowerShellWorkflow', 'GraphPowerShell'
        /// </summary>
        [JsonProperty(PropertyName = "properties.runbookType")]
        public string RunbookType { get; set; }

        /// <summary>
        /// Gets or sets the draft runbook properties.
        /// </summary>
        [JsonProperty(PropertyName = "properties.draft")]
        public RunbookDraft Draft { get; set; }

        /// <summary>
        /// Gets or sets the published runbook content link.
        /// </summary>
        [JsonProperty(PropertyName = "properties.publishContentLink")]
        public ContentLink PublishContentLink { get; set; }

        /// <summary>
        /// Gets or sets the description of the runbook.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the activity-level tracing options of the runbook.
        /// </summary>
        [JsonProperty(PropertyName = "properties.logActivityTrace")]
        public int? LogActivityTrace { get; set; }

        /// <summary>
        /// Gets or sets the name of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the location of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public string Location { get; set; }

        /// <summary>
        /// Gets or sets the tags attached to the resource.
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (RunbookType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "RunbookType");
            }
            if (Draft != null)
            {
                Draft.Validate();
            }
            if (PublishContentLink != null)
            {
                PublishContentLink.Validate();
            }
        }
    }
}
