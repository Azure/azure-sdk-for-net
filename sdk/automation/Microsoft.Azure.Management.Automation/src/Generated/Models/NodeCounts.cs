// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Automation.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Gets the count of nodes by count type
    /// </summary>
    public partial class NodeCounts
    {
        /// <summary>
        /// Initializes a new instance of the NodeCounts class.
        /// </summary>
        public NodeCounts()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NodeCounts class.
        /// </summary>
        /// <param name="value">Gets an array of counts</param>
        /// <param name="totalCount">Gets the total number of records matching
        /// countType criteria.</param>
        public NodeCounts(IList<NodeCount> value = default(IList<NodeCount>), int? totalCount = default(int?))
        {
            Value = value;
            TotalCount = totalCount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets an array of counts
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public IList<NodeCount> Value { get; set; }

        /// <summary>
        /// Gets the total number of records matching countType criteria.
        /// </summary>
        [JsonProperty(PropertyName = "totalCount")]
        public int? TotalCount { get; set; }

    }
}
