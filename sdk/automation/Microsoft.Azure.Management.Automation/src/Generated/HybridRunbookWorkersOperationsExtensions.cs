// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Automation
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Microsoft.Rest.Azure.OData;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for HybridRunbookWorkersOperations.
    /// </summary>
    public static partial class HybridRunbookWorkersOperationsExtensions
    {
            /// <summary>
            /// Delete a hybrid runbook worker.
            /// <see href="http://aka.ms/azureautomationsdk/hybridrunbookworkeroperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='hybridRunbookWorkerGroupName'>
            /// The hybrid runbook worker group name
            /// </param>
            /// <param name='hybridRunbookWorkerId'>
            /// The hybrid runbook worker id
            /// </param>
            public static void Delete(this IHybridRunbookWorkersOperations operations, string resourceGroupName, string automationAccountName, string hybridRunbookWorkerGroupName, string hybridRunbookWorkerId)
            {
                operations.DeleteAsync(resourceGroupName, automationAccountName, hybridRunbookWorkerGroupName, hybridRunbookWorkerId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete a hybrid runbook worker.
            /// <see href="http://aka.ms/azureautomationsdk/hybridrunbookworkeroperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='hybridRunbookWorkerGroupName'>
            /// The hybrid runbook worker group name
            /// </param>
            /// <param name='hybridRunbookWorkerId'>
            /// The hybrid runbook worker id
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IHybridRunbookWorkersOperations operations, string resourceGroupName, string automationAccountName, string hybridRunbookWorkerGroupName, string hybridRunbookWorkerId, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, automationAccountName, hybridRunbookWorkerGroupName, hybridRunbookWorkerId, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Retrieve a hybrid runbook worker.
            /// <see href="http://aka.ms/azureautomationsdk/hybridrunbookworkeroperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='hybridRunbookWorkerGroupName'>
            /// The hybrid runbook worker group name
            /// </param>
            /// <param name='hybridRunbookWorkerId'>
            /// The hybrid runbook worker id
            /// </param>
            public static HybridRunbookWorker Get(this IHybridRunbookWorkersOperations operations, string resourceGroupName, string automationAccountName, string hybridRunbookWorkerGroupName, string hybridRunbookWorkerId)
            {
                return operations.GetAsync(resourceGroupName, automationAccountName, hybridRunbookWorkerGroupName, hybridRunbookWorkerId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve a hybrid runbook worker.
            /// <see href="http://aka.ms/azureautomationsdk/hybridrunbookworkeroperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='hybridRunbookWorkerGroupName'>
            /// The hybrid runbook worker group name
            /// </param>
            /// <param name='hybridRunbookWorkerId'>
            /// The hybrid runbook worker id
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<HybridRunbookWorker> GetAsync(this IHybridRunbookWorkersOperations operations, string resourceGroupName, string automationAccountName, string hybridRunbookWorkerGroupName, string hybridRunbookWorkerId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, automationAccountName, hybridRunbookWorkerGroupName, hybridRunbookWorkerId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create a hybrid runbook worker.
            /// <see href="http://aka.ms/azureautomationsdk/hybridrunbookworkeroperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='hybridRunbookWorkerGroupName'>
            /// The hybrid runbook worker group name
            /// </param>
            /// <param name='hybridRunbookWorkerId'>
            /// The hybrid runbook worker id
            /// </param>
            /// <param name='hybridRunbookWorkerCreationParameters'>
            /// The create or update parameters for hybrid runbook worker.
            /// </param>
            public static HybridRunbookWorker Create(this IHybridRunbookWorkersOperations operations, string resourceGroupName, string automationAccountName, string hybridRunbookWorkerGroupName, string hybridRunbookWorkerId, HybridRunbookWorkerCreateParameters hybridRunbookWorkerCreationParameters)
            {
                return operations.CreateAsync(resourceGroupName, automationAccountName, hybridRunbookWorkerGroupName, hybridRunbookWorkerId, hybridRunbookWorkerCreationParameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create a hybrid runbook worker.
            /// <see href="http://aka.ms/azureautomationsdk/hybridrunbookworkeroperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='hybridRunbookWorkerGroupName'>
            /// The hybrid runbook worker group name
            /// </param>
            /// <param name='hybridRunbookWorkerId'>
            /// The hybrid runbook worker id
            /// </param>
            /// <param name='hybridRunbookWorkerCreationParameters'>
            /// The create or update parameters for hybrid runbook worker.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<HybridRunbookWorker> CreateAsync(this IHybridRunbookWorkersOperations operations, string resourceGroupName, string automationAccountName, string hybridRunbookWorkerGroupName, string hybridRunbookWorkerId, HybridRunbookWorkerCreateParameters hybridRunbookWorkerCreationParameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(resourceGroupName, automationAccountName, hybridRunbookWorkerGroupName, hybridRunbookWorkerId, hybridRunbookWorkerCreationParameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Move a hybrid worker to a different group.
            /// <see href="http://aka.ms/azureautomationsdk/hybridrunbookworkeroperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='hybridRunbookWorkerGroupName'>
            /// The hybrid runbook worker group name
            /// </param>
            /// <param name='hybridRunbookWorkerId'>
            /// The hybrid runbook worker id
            /// </param>
            /// <param name='hybridRunbookWorkerMoveParameters'>
            /// The hybrid runbook worker move parameters
            /// </param>
            public static void Move(this IHybridRunbookWorkersOperations operations, string resourceGroupName, string automationAccountName, string hybridRunbookWorkerGroupName, string hybridRunbookWorkerId, HybridRunbookWorkerMoveParameters hybridRunbookWorkerMoveParameters)
            {
                operations.MoveAsync(resourceGroupName, automationAccountName, hybridRunbookWorkerGroupName, hybridRunbookWorkerId, hybridRunbookWorkerMoveParameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Move a hybrid worker to a different group.
            /// <see href="http://aka.ms/azureautomationsdk/hybridrunbookworkeroperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='hybridRunbookWorkerGroupName'>
            /// The hybrid runbook worker group name
            /// </param>
            /// <param name='hybridRunbookWorkerId'>
            /// The hybrid runbook worker id
            /// </param>
            /// <param name='hybridRunbookWorkerMoveParameters'>
            /// The hybrid runbook worker move parameters
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task MoveAsync(this IHybridRunbookWorkersOperations operations, string resourceGroupName, string automationAccountName, string hybridRunbookWorkerGroupName, string hybridRunbookWorkerId, HybridRunbookWorkerMoveParameters hybridRunbookWorkerMoveParameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.MoveWithHttpMessagesAsync(resourceGroupName, automationAccountName, hybridRunbookWorkerGroupName, hybridRunbookWorkerId, hybridRunbookWorkerMoveParameters, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Retrieve a list of hybrid runbook workers.
            /// <see href="http://aka.ms/azureautomationsdk/hybridrunbookworkeroperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='hybridRunbookWorkerGroupName'>
            /// The hybrid runbook worker group name
            /// </param>
            /// <param name='odataQuery'>
            /// OData parameters to apply to the operation.
            /// </param>
            public static IPage<HybridRunbookWorker> ListByHybridRunbookWorkerGroup(this IHybridRunbookWorkersOperations operations, string resourceGroupName, string automationAccountName, string hybridRunbookWorkerGroupName, ODataQuery<HybridRunbookWorker> odataQuery = default(ODataQuery<HybridRunbookWorker>))
            {
                return operations.ListByHybridRunbookWorkerGroupAsync(resourceGroupName, automationAccountName, hybridRunbookWorkerGroupName, odataQuery).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve a list of hybrid runbook workers.
            /// <see href="http://aka.ms/azureautomationsdk/hybridrunbookworkeroperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='hybridRunbookWorkerGroupName'>
            /// The hybrid runbook worker group name
            /// </param>
            /// <param name='odataQuery'>
            /// OData parameters to apply to the operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<HybridRunbookWorker>> ListByHybridRunbookWorkerGroupAsync(this IHybridRunbookWorkersOperations operations, string resourceGroupName, string automationAccountName, string hybridRunbookWorkerGroupName, ODataQuery<HybridRunbookWorker> odataQuery = default(ODataQuery<HybridRunbookWorker>), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByHybridRunbookWorkerGroupWithHttpMessagesAsync(resourceGroupName, automationAccountName, hybridRunbookWorkerGroupName, odataQuery, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieve a list of hybrid runbook workers.
            /// <see href="http://aka.ms/azureautomationsdk/hybridrunbookworkeroperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<HybridRunbookWorker> ListByHybridRunbookWorkerGroupNext(this IHybridRunbookWorkersOperations operations, string nextPageLink)
            {
                return operations.ListByHybridRunbookWorkerGroupNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve a list of hybrid runbook workers.
            /// <see href="http://aka.ms/azureautomationsdk/hybridrunbookworkeroperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<HybridRunbookWorker>> ListByHybridRunbookWorkerGroupNextAsync(this IHybridRunbookWorkersOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByHybridRunbookWorkerGroupNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
