// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Automation
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for SourceControlSyncJobOperations.
    /// </summary>
    public static partial class SourceControlSyncJobOperationsExtensions
    {
            /// <summary>
            /// Creates the sync job for a source control.
            /// <see href="http://aka.ms/azureautomationsdk/sourcecontrolsyncjoboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='sourceControlName'>
            /// The source control name.
            /// </param>
            /// <param name='sourceControlSyncJobId'>
            /// The source control sync job id.
            /// </param>
            /// <param name='parameters'>
            /// The parameters supplied to the create source control sync job operation.
            /// </param>
            public static SourceControlSyncJob Create(this ISourceControlSyncJobOperations operations, string resourceGroupName, string automationAccountName, string sourceControlName, System.Guid sourceControlSyncJobId, SourceControlSyncJobCreateParameters parameters)
            {
                return operations.CreateAsync(resourceGroupName, automationAccountName, sourceControlName, sourceControlSyncJobId, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates the sync job for a source control.
            /// <see href="http://aka.ms/azureautomationsdk/sourcecontrolsyncjoboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='sourceControlName'>
            /// The source control name.
            /// </param>
            /// <param name='sourceControlSyncJobId'>
            /// The source control sync job id.
            /// </param>
            /// <param name='parameters'>
            /// The parameters supplied to the create source control sync job operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SourceControlSyncJob> CreateAsync(this ISourceControlSyncJobOperations operations, string resourceGroupName, string automationAccountName, string sourceControlName, System.Guid sourceControlSyncJobId, SourceControlSyncJobCreateParameters parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(resourceGroupName, automationAccountName, sourceControlName, sourceControlSyncJobId, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieve the source control sync job identified by job id.
            /// <see href="http://aka.ms/azureautomationsdk/sourcecontrolsyncjoboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='sourceControlName'>
            /// The source control name.
            /// </param>
            /// <param name='sourceControlSyncJobId'>
            /// The source control sync job id.
            /// </param>
            public static SourceControlSyncJobById Get(this ISourceControlSyncJobOperations operations, string resourceGroupName, string automationAccountName, string sourceControlName, System.Guid sourceControlSyncJobId)
            {
                return operations.GetAsync(resourceGroupName, automationAccountName, sourceControlName, sourceControlSyncJobId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve the source control sync job identified by job id.
            /// <see href="http://aka.ms/azureautomationsdk/sourcecontrolsyncjoboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='sourceControlName'>
            /// The source control name.
            /// </param>
            /// <param name='sourceControlSyncJobId'>
            /// The source control sync job id.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SourceControlSyncJobById> GetAsync(this ISourceControlSyncJobOperations operations, string resourceGroupName, string automationAccountName, string sourceControlName, System.Guid sourceControlSyncJobId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, automationAccountName, sourceControlName, sourceControlSyncJobId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieve a list of source control sync jobs.
            /// <see href="http://aka.ms/azureautomationsdk/sourcecontrolsyncjoboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='sourceControlName'>
            /// The source control name.
            /// </param>
            /// <param name='filter'>
            /// The filter to apply on the operation.
            /// </param>
            public static IPage<SourceControlSyncJob> ListByAutomationAccount(this ISourceControlSyncJobOperations operations, string resourceGroupName, string automationAccountName, string sourceControlName, string filter = default(string))
            {
                return operations.ListByAutomationAccountAsync(resourceGroupName, automationAccountName, sourceControlName, filter).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve a list of source control sync jobs.
            /// <see href="http://aka.ms/azureautomationsdk/sourcecontrolsyncjoboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='sourceControlName'>
            /// The source control name.
            /// </param>
            /// <param name='filter'>
            /// The filter to apply on the operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<SourceControlSyncJob>> ListByAutomationAccountAsync(this ISourceControlSyncJobOperations operations, string resourceGroupName, string automationAccountName, string sourceControlName, string filter = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByAutomationAccountWithHttpMessagesAsync(resourceGroupName, automationAccountName, sourceControlName, filter, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieve a list of source control sync jobs.
            /// <see href="http://aka.ms/azureautomationsdk/sourcecontrolsyncjoboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<SourceControlSyncJob> ListByAutomationAccountNext(this ISourceControlSyncJobOperations operations, string nextPageLink)
            {
                return operations.ListByAutomationAccountNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve a list of source control sync jobs.
            /// <see href="http://aka.ms/azureautomationsdk/sourcecontrolsyncjoboperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<SourceControlSyncJob>> ListByAutomationAccountNextAsync(this ISourceControlSyncJobOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByAutomationAccountNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
