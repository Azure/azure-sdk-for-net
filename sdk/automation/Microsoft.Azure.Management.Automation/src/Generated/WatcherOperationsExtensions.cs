// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Automation
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Microsoft.Rest.Azure.OData;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for WatcherOperations.
    /// </summary>
    public static partial class WatcherOperationsExtensions
    {
            /// <summary>
            /// Create the watcher identified by watcher name.
            /// <see href="http://aka.ms/azureautomationsdk/watcheroperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='watcherName'>
            /// The watcher name.
            /// </param>
            /// <param name='parameters'>
            /// The create or update parameters for watcher.
            /// </param>
            public static Watcher CreateOrUpdate(this IWatcherOperations operations, string resourceGroupName, string automationAccountName, string watcherName, Watcher parameters)
            {
                return operations.CreateOrUpdateAsync(resourceGroupName, automationAccountName, watcherName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create the watcher identified by watcher name.
            /// <see href="http://aka.ms/azureautomationsdk/watcheroperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='watcherName'>
            /// The watcher name.
            /// </param>
            /// <param name='parameters'>
            /// The create or update parameters for watcher.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Watcher> CreateOrUpdateAsync(this IWatcherOperations operations, string resourceGroupName, string automationAccountName, string watcherName, Watcher parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, automationAccountName, watcherName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieve the watcher identified by watcher name.
            /// <see href="http://aka.ms/azureautomationsdk/watcheroperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='watcherName'>
            /// The watcher name.
            /// </param>
            public static Watcher Get(this IWatcherOperations operations, string resourceGroupName, string automationAccountName, string watcherName)
            {
                return operations.GetAsync(resourceGroupName, automationAccountName, watcherName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve the watcher identified by watcher name.
            /// <see href="http://aka.ms/azureautomationsdk/watcheroperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='watcherName'>
            /// The watcher name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Watcher> GetAsync(this IWatcherOperations operations, string resourceGroupName, string automationAccountName, string watcherName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, automationAccountName, watcherName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Update the watcher identified by watcher name.
            /// <see href="http://aka.ms/azureautomationsdk/watcheroperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='watcherName'>
            /// The watcher name.
            /// </param>
            /// <param name='parameters'>
            /// The update parameters for watcher.
            /// </param>
            public static Watcher Update(this IWatcherOperations operations, string resourceGroupName, string automationAccountName, string watcherName, WatcherUpdateParameters parameters)
            {
                return operations.UpdateAsync(resourceGroupName, automationAccountName, watcherName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update the watcher identified by watcher name.
            /// <see href="http://aka.ms/azureautomationsdk/watcheroperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='watcherName'>
            /// The watcher name.
            /// </param>
            /// <param name='parameters'>
            /// The update parameters for watcher.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Watcher> UpdateAsync(this IWatcherOperations operations, string resourceGroupName, string automationAccountName, string watcherName, WatcherUpdateParameters parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(resourceGroupName, automationAccountName, watcherName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete the watcher by name.
            /// <see href="http://aka.ms/azureautomationsdk/watcheroperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='watcherName'>
            /// The watcher name.
            /// </param>
            public static void Delete(this IWatcherOperations operations, string resourceGroupName, string automationAccountName, string watcherName)
            {
                operations.DeleteAsync(resourceGroupName, automationAccountName, watcherName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete the watcher by name.
            /// <see href="http://aka.ms/azureautomationsdk/watcheroperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='watcherName'>
            /// The watcher name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IWatcherOperations operations, string resourceGroupName, string automationAccountName, string watcherName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, automationAccountName, watcherName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Resume the watcher identified by watcher name.
            /// <see href="http://aka.ms/azureautomationsdk/watcheroperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='watcherName'>
            /// The watcher name.
            /// </param>
            public static void Start(this IWatcherOperations operations, string resourceGroupName, string automationAccountName, string watcherName)
            {
                operations.StartAsync(resourceGroupName, automationAccountName, watcherName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Resume the watcher identified by watcher name.
            /// <see href="http://aka.ms/azureautomationsdk/watcheroperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='watcherName'>
            /// The watcher name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task StartAsync(this IWatcherOperations operations, string resourceGroupName, string automationAccountName, string watcherName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.StartWithHttpMessagesAsync(resourceGroupName, automationAccountName, watcherName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Resume the watcher identified by watcher name.
            /// <see href="http://aka.ms/azureautomationsdk/watcheroperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='watcherName'>
            /// The watcher name.
            /// </param>
            public static void Stop(this IWatcherOperations operations, string resourceGroupName, string automationAccountName, string watcherName)
            {
                operations.StopAsync(resourceGroupName, automationAccountName, watcherName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Resume the watcher identified by watcher name.
            /// <see href="http://aka.ms/azureautomationsdk/watcheroperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='watcherName'>
            /// The watcher name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task StopAsync(this IWatcherOperations operations, string resourceGroupName, string automationAccountName, string watcherName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.StopWithHttpMessagesAsync(resourceGroupName, automationAccountName, watcherName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Retrieve a list of watchers.
            /// <see href="http://aka.ms/azureautomationsdk/watcheroperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='odataQuery'>
            /// OData parameters to apply to the operation.
            /// </param>
            public static IPage<Watcher> ListByAutomationAccount(this IWatcherOperations operations, string resourceGroupName, string automationAccountName, ODataQuery<Watcher> odataQuery = default(ODataQuery<Watcher>))
            {
                return operations.ListByAutomationAccountAsync(resourceGroupName, automationAccountName, odataQuery).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve a list of watchers.
            /// <see href="http://aka.ms/azureautomationsdk/watcheroperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure Resource group.
            /// </param>
            /// <param name='automationAccountName'>
            /// The name of the automation account.
            /// </param>
            /// <param name='odataQuery'>
            /// OData parameters to apply to the operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<Watcher>> ListByAutomationAccountAsync(this IWatcherOperations operations, string resourceGroupName, string automationAccountName, ODataQuery<Watcher> odataQuery = default(ODataQuery<Watcher>), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByAutomationAccountWithHttpMessagesAsync(resourceGroupName, automationAccountName, odataQuery, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieve a list of watchers.
            /// <see href="http://aka.ms/azureautomationsdk/watcheroperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<Watcher> ListByAutomationAccountNext(this IWatcherOperations operations, string nextPageLink)
            {
                return operations.ListByAutomationAccountNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve a list of watchers.
            /// <see href="http://aka.ms/azureautomationsdk/watcheroperations" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<Watcher>> ListByAutomationAccountNextAsync(this IWatcherOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByAutomationAccountNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
