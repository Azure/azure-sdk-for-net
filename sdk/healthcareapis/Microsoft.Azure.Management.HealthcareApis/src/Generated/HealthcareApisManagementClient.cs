// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.Core.Pipeline;

namespace Microsoft.Azure.Management.HealthcareApis
{
    /// <summary> HealthcareApis service management client. </summary>
    public partial class HealthcareApisManagementClient
    {
        private readonly ClientDiagnostics _clientDiagnostics;
        private readonly HttpPipeline _pipeline;
        private readonly string _subscriptionId;
        private readonly Uri _endpoint;

        /// <summary> Initializes a new instance of HealthcareApisManagementClient for mocking. </summary>
        protected HealthcareApisManagementClient()
        {
        }

        /// <summary> Initializes a new instance of HealthcareApisManagementClient. </summary>
        /// <param name="subscriptionId"> The subscription identifier. </param>
        /// <param name="tokenCredential"> The OAuth token for making client requests. </param>
        /// <param name="options"> The options for configuring the client. </param>
        public HealthcareApisManagementClient(string subscriptionId, TokenCredential tokenCredential, HealthcareApisManagementClientOptions options = null) : this(subscriptionId, null, tokenCredential, options)
        {
        }
        /// <summary> Initializes a new instance of HealthcareApisManagementClient. </summary>
        /// <param name="subscriptionId"> The subscription identifier. </param>
        /// <param name="endpoint"> server parameter. </param>
        /// <param name="tokenCredential"> The OAuth token for making client requests. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="subscriptionId"/> is null. </exception>
        public HealthcareApisManagementClient(string subscriptionId, Uri endpoint, TokenCredential tokenCredential, HealthcareApisManagementClientOptions options = null)
        {
            if (subscriptionId == null)
            {
                throw new ArgumentNullException(nameof(subscriptionId));
            }
            endpoint ??= new Uri("https://management.azure.com");

            options ??= new HealthcareApisManagementClientOptions();
            _clientDiagnostics = new ClientDiagnostics(options);
            _pipeline = ManagementPipelineBuilder.Build(tokenCredential, endpoint, options);
            _subscriptionId = subscriptionId;
            _endpoint = endpoint;
        }

        /// <summary> Returns an instance of ServicesOperations. </summary>
        public virtual ServicesOperations Services => new ServicesOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of PrivateEndpointConnectionsOperations. </summary>
        public virtual PrivateEndpointConnectionsOperations PrivateEndpointConnections => new PrivateEndpointConnectionsOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of PrivateLinkResourcesOperations. </summary>
        public virtual PrivateLinkResourcesOperations PrivateLinkResources => new PrivateLinkResourcesOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of WorkspacesOperations. </summary>
        public virtual WorkspacesOperations Workspaces => new WorkspacesOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of DicomServicesOperations. </summary>
        public virtual DicomServicesOperations DicomServices => new DicomServicesOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of IotConnectorsOperations. </summary>
        public virtual IotConnectorsOperations IotConnectors => new IotConnectorsOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of FhirDestinationsOperations. </summary>
        public virtual FhirDestinationsOperations FhirDestinations => new FhirDestinationsOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of IotConnectorFhirDestinationOperations. </summary>
        public virtual IotConnectorFhirDestinationOperations IotConnectorFhirDestination => new IotConnectorFhirDestinationOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of FhirServicesOperations. </summary>
        public virtual FhirServicesOperations FhirServices => new FhirServicesOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of WorkspacePrivateEndpointConnectionsOperations. </summary>
        public virtual WorkspacePrivateEndpointConnectionsOperations WorkspacePrivateEndpointConnections => new WorkspacePrivateEndpointConnectionsOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of WorkspacePrivateLinkResourcesOperations. </summary>
        public virtual WorkspacePrivateLinkResourcesOperations WorkspacePrivateLinkResources => new WorkspacePrivateLinkResourcesOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);

        /// <summary> Returns an instance of Operations. </summary>
        public virtual Operations Operations => new Operations(_clientDiagnostics, _pipeline, _endpoint);

        /// <summary> Returns an instance of OperationResultsOperations. </summary>
        public virtual OperationResultsOperations OperationResults => new OperationResultsOperations(_clientDiagnostics, _pipeline, _subscriptionId, _endpoint);
    }
}
