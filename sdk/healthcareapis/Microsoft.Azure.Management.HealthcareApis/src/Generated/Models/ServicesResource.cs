// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Microsoft.Azure.Management.HealthcareApis.Models
{
    /// <summary> The common properties of a service. </summary>
    public partial class ServicesResource
    {
        /// <summary> Initializes a new instance of ServicesResource. </summary>
        /// <param name="kind"> The kind of the service. </param>
        /// <param name="location"> The resource location. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="location"/> is null. </exception>
        public ServicesResource(Kind kind, string location)
        {
            if (location == null)
            {
                throw new ArgumentNullException(nameof(location));
            }

            Kind = kind;
            Location = location;
            Tags = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of ServicesResource. </summary>
        /// <param name="id"> The resource identifier. </param>
        /// <param name="name"> The resource name. </param>
        /// <param name="type"> The resource type. </param>
        /// <param name="kind"> The kind of the service. </param>
        /// <param name="location"> The resource location. </param>
        /// <param name="tags"> The resource tags. </param>
        /// <param name="etag"> An etag associated with the resource, used for optimistic concurrency when editing it. </param>
        /// <param name="identity"> Setting indicating whether the service has a managed identity associated with it. </param>
        internal ServicesResource(string id, string name, string type, Kind kind, string location, IDictionary<string, string> tags, string etag, ServicesResourceIdentity identity)
        {
            Id = id;
            Name = name;
            Type = type;
            Kind = kind;
            Location = location;
            Tags = tags;
            Etag = etag;
            Identity = identity;
        }

        /// <summary> The resource identifier. </summary>
        public string Id { get; }
        /// <summary> The resource name. </summary>
        public string Name { get; }
        /// <summary> The resource type. </summary>
        public string Type { get; }
        /// <summary> The kind of the service. </summary>
        public Kind Kind { get; set; }
        /// <summary> The resource location. </summary>
        public string Location { get; set; }
        /// <summary> The resource tags. </summary>
        public IDictionary<string, string> Tags { get; }
        /// <summary> An etag associated with the resource, used for optimistic concurrency when editing it. </summary>
        public string Etag { get; set; }
        /// <summary> Setting indicating whether the service has a managed identity associated with it. </summary>
        public ServicesResourceIdentity Identity { get; set; }
    }
}
