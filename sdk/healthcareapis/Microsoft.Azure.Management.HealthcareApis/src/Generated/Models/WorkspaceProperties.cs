// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.HealthcareApis.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Workspaces resource specific properties.
    /// </summary>
    public partial class WorkspaceProperties : IResource
    {
        /// <summary>
        /// Initializes a new instance of the WorkspaceProperties class.
        /// </summary>
        public WorkspaceProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WorkspaceProperties class.
        /// </summary>
        /// <param name="provisioningState">The provisioning state. Possible
        /// values include: 'Deleting', 'Succeeded', 'Creating', 'Accepted',
        /// 'Verifying', 'Updating', 'Failed', 'Canceled', 'Deprovisioned',
        /// 'Moving', 'Suspended', 'Warned', 'SystemMaintenance'</param>
        /// <param name="privateEndpointConnections">The list of private
        /// endpoint connections that are set up for this resource.</param>
        /// <param name="publicNetworkAccess">Control permission for data plane
        /// traffic coming from public networks while private endpoint is
        /// enabled. Possible values include: 'Enabled', 'Disabled'</param>
        public WorkspaceProperties(string provisioningState = default(string), IList<PrivateEndpointConnection> privateEndpointConnections = default(IList<PrivateEndpointConnection>), string publicNetworkAccess = default(string))
        {
            ProvisioningState = provisioningState;
            PrivateEndpointConnections = privateEndpointConnections;
            PublicNetworkAccess = publicNetworkAccess;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the provisioning state. Possible values include:
        /// 'Deleting', 'Succeeded', 'Creating', 'Accepted', 'Verifying',
        /// 'Updating', 'Failed', 'Canceled', 'Deprovisioned', 'Moving',
        /// 'Suspended', 'Warned', 'SystemMaintenance'
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Gets the list of private endpoint connections that are set up for
        /// this resource.
        /// </summary>
        [JsonProperty(PropertyName = "privateEndpointConnections")]
        public IList<PrivateEndpointConnection> PrivateEndpointConnections { get; private set; }

        /// <summary>
        /// Gets or sets control permission for data plane traffic coming from
        /// public networks while private endpoint is enabled. Possible values
        /// include: 'Enabled', 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "publicNetworkAccess")]
        public string PublicNetworkAccess { get; set; }

    }
}
