// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Microsoft.Azure.Management.HealthcareApis.Models
{
    /// <summary> The description of the service. </summary>
    public partial class ServicesDescription : ServicesResource
    {
        /// <summary> Initializes a new instance of ServicesDescription. </summary>
        /// <param name="kind"> The kind of the service. </param>
        /// <param name="location"> The resource location. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="location"/> is null. </exception>
        public ServicesDescription(Kind kind, string location) : base(kind, location)
        {
            if (location == null)
            {
                throw new ArgumentNullException(nameof(location));
            }
        }

        /// <summary> Initializes a new instance of ServicesDescription. </summary>
        /// <param name="id"> The resource identifier. </param>
        /// <param name="name"> The resource name. </param>
        /// <param name="type"> The resource type. </param>
        /// <param name="kind"> The kind of the service. </param>
        /// <param name="location"> The resource location. </param>
        /// <param name="tags"> The resource tags. </param>
        /// <param name="etag"> An etag associated with the resource, used for optimistic concurrency when editing it. </param>
        /// <param name="identity"> Setting indicating whether the service has a managed identity associated with it. </param>
        /// <param name="properties"> The common properties of a service. </param>
        /// <param name="systemData"> Metadata pertaining to creation and last modification of the resource. </param>
        internal ServicesDescription(string id, string name, string type, Kind kind, string location, IDictionary<string, string> tags, string etag, ServicesResourceIdentity identity, ServicesProperties properties, SystemData systemData) : base(id, name, type, kind, location, tags, etag, identity)
        {
            Properties = properties;
            SystemData = systemData;
        }

        /// <summary> The common properties of a service. </summary>
        public ServicesProperties Properties { get; set; }
        /// <summary> Metadata pertaining to creation and last modification of the resource. </summary>
        public SystemData SystemData { get; }
    }
}
