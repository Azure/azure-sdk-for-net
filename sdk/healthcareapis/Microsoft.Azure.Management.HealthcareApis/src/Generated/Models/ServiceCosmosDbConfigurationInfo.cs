// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.HealthcareApis.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The settings for the Cosmos DB database backing the service.
    /// </summary>
    public partial class ServiceCosmosDbConfigurationInfo
    {
        /// <summary>
        /// Initializes a new instance of the ServiceCosmosDbConfigurationInfo
        /// class.
        /// </summary>
        public ServiceCosmosDbConfigurationInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ServiceCosmosDbConfigurationInfo
        /// class.
        /// </summary>
        /// <param name="offerThroughput">The provisioned throughput for the
        /// backing database.</param>
        /// <param name="keyVaultKeyUri">The URI of the customer-managed key
        /// for the backing database.</param>
        public ServiceCosmosDbConfigurationInfo(int? offerThroughput = default(int?), string keyVaultKeyUri = default(string))
        {
            OfferThroughput = offerThroughput;
            KeyVaultKeyUri = keyVaultKeyUri;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the provisioned throughput for the backing database.
        /// </summary>
        [JsonProperty(PropertyName = "offerThroughput")]
        public int? OfferThroughput { get; set; }

        /// <summary>
        /// Gets or sets the URI of the customer-managed key for the backing
        /// database.
        /// </summary>
        [JsonProperty(PropertyName = "keyVaultKeyUri")]
        public string KeyVaultKeyUri { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (OfferThroughput > 10000)
            {
                throw new ValidationException(ValidationRules.InclusiveMaximum, "OfferThroughput", 10000);
            }
            if (OfferThroughput < 400)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "OfferThroughput", 400);
            }
        }
    }
}
