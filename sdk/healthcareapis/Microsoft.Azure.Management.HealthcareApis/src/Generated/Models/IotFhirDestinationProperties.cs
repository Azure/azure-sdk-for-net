// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Microsoft.Azure.Management.HealthcareApis.Models
{
    /// <summary> IoT Connector destination properties for an Azure FHIR service. </summary>
    internal partial class IotFhirDestinationProperties : IotDestinationProperties
    {
        /// <summary> Initializes a new instance of IotFhirDestinationProperties. </summary>
        /// <param name="resourceIdentityResolutionType"> Determines how resource identity is resolved on the destination. </param>
        /// <param name="fhirServiceResourceId"> Fully qualified resource id of the FHIR service to connect to. </param>
        /// <param name="fhirMapping"> FHIR Mappings. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="fhirServiceResourceId"/> or <paramref name="fhirMapping"/> is null. </exception>
        internal IotFhirDestinationProperties(IotIdentityResolutionType resourceIdentityResolutionType, string fhirServiceResourceId, IotMappingProperties fhirMapping)
        {
            if (fhirServiceResourceId == null)
            {
                throw new ArgumentNullException(nameof(fhirServiceResourceId));
            }
            if (fhirMapping == null)
            {
                throw new ArgumentNullException(nameof(fhirMapping));
            }

            ResourceIdentityResolutionType = resourceIdentityResolutionType;
            FhirServiceResourceId = fhirServiceResourceId;
            FhirMapping = fhirMapping;
        }

        /// <summary> Determines how resource identity is resolved on the destination. </summary>
        public IotIdentityResolutionType ResourceIdentityResolutionType { get; }
        /// <summary> Fully qualified resource id of the FHIR service to connect to. </summary>
        public string FhirServiceResourceId { get; }
        /// <summary> FHIR Mappings. </summary>
        public IotMappingProperties FhirMapping { get; }
    }
}
