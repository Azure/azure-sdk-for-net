// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.HealthcareApis.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Workspace resource.
    /// </summary>
    public partial class Workspace : TaggedResource
    {
        /// <summary>
        /// Initializes a new instance of the Workspace class.
        /// </summary>
        public Workspace()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Workspace class.
        /// </summary>
        /// <param name="tags">Resource tags.</param>
        /// <param name="location">The resource location.</param>
        /// <param name="properties">Workspaces resource specific
        /// properties.</param>
        /// <param name="systemData">Metadata pertaining to creation and last
        /// modification of the resource.</param>
        public Workspace(IDictionary<string, string> tags = default(IDictionary<string, string>), string location = default(string), WorkspaceProperties properties = default(WorkspaceProperties), SystemData systemData = default(SystemData))
            : base(tags, location)
        {
            Properties = properties;
            SystemData = systemData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets workspaces resource specific properties.
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public WorkspaceProperties Properties { get; set; }

        /// <summary>
        /// Gets or sets metadata pertaining to creation and last modification
        /// of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData { get; set; }

    }
}
