// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.HealthcareApis.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Authentication configuration information
    /// </summary>
    public partial class ServiceAuthenticationConfigurationInfo
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ServiceAuthenticationConfigurationInfo class.
        /// </summary>
        public ServiceAuthenticationConfigurationInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ServiceAuthenticationConfigurationInfo class.
        /// </summary>
        /// <param name="authority">The authority url for the service</param>
        /// <param name="audience">The audience url for the service</param>
        /// <param name="smartProxyEnabled">If the SMART on FHIR proxy is
        /// enabled</param>
        public ServiceAuthenticationConfigurationInfo(string authority = default(string), string audience = default(string), bool? smartProxyEnabled = default(bool?))
        {
            Authority = authority;
            Audience = audience;
            SmartProxyEnabled = smartProxyEnabled;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the authority url for the service
        /// </summary>
        [JsonProperty(PropertyName = "authority")]
        public string Authority { get; set; }

        /// <summary>
        /// Gets or sets the audience url for the service
        /// </summary>
        [JsonProperty(PropertyName = "audience")]
        public string Audience { get; set; }

        /// <summary>
        /// Gets or sets if the SMART on FHIR proxy is enabled
        /// </summary>
        [JsonProperty(PropertyName = "smartProxyEnabled")]
        public bool? SmartProxyEnabled { get; set; }

    }
}
