// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Microsoft.Azure.Management.HealthcareApis.Models
{
    /// <summary> The description of Dicom Service. </summary>
    public partial class DicomService : TaggedResource
    {
        /// <summary> Initializes a new instance of DicomService. </summary>
        public DicomService()
        {
            PrivateEndpointConnections = new ChangeTrackingList<PrivateEndpointConnection>();
        }

        /// <summary> Initializes a new instance of DicomService. </summary>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="location"> The resource location. </param>
        /// <param name="id"> The resource identifier. </param>
        /// <param name="name"> The resource name. </param>
        /// <param name="type"> The resource type. </param>
        /// <param name="etag"> An etag associated with the resource, used for optimistic concurrency when editing it. </param>
        /// <param name="systemData"> Metadata pertaining to creation and last modification of the resource. </param>
        /// <param name="provisioningState"> The provisioning state. </param>
        /// <param name="authenticationConfiguration"> Dicom Service authentication configuration. </param>
        /// <param name="serviceUrl"> The url of the Dicom Services. </param>
        /// <param name="privateEndpointConnections"> The list of private endpoint connections that are set up for this resource. </param>
        /// <param name="publicNetworkAccess"> Control permission for data plane traffic coming from public networks while private endpoint is enabled. </param>
        /// <param name="identity"> Setting indicating whether the service has a managed identity associated with it. </param>
        internal DicomService(IDictionary<string, string> tags, string location, string id, string name, string type, string etag, SystemData systemData, ProvisioningState? provisioningState, DicomServiceAuthenticationConfiguration authenticationConfiguration, string serviceUrl, IReadOnlyList<PrivateEndpointConnection> privateEndpointConnections, PublicNetworkAccess? publicNetworkAccess, ServiceManagedIdentityIdentity identity) : base(tags, location, id, name, type, etag)
        {
            SystemData = systemData;
            ProvisioningState = provisioningState;
            AuthenticationConfiguration = authenticationConfiguration;
            ServiceUrl = serviceUrl;
            PrivateEndpointConnections = privateEndpointConnections;
            PublicNetworkAccess = publicNetworkAccess;
            Identity = identity;
        }

        /// <summary> Metadata pertaining to creation and last modification of the resource. </summary>
        public SystemData SystemData { get; }
        /// <summary> The provisioning state. </summary>
        public ProvisioningState? ProvisioningState { get; }
        /// <summary> Dicom Service authentication configuration. </summary>
        public DicomServiceAuthenticationConfiguration AuthenticationConfiguration { get; set; }
        /// <summary> The url of the Dicom Services. </summary>
        public string ServiceUrl { get; }
        /// <summary> The list of private endpoint connections that are set up for this resource. </summary>
        public IReadOnlyList<PrivateEndpointConnection> PrivateEndpointConnections { get; }
        /// <summary> Control permission for data plane traffic coming from public networks while private endpoint is enabled. </summary>
        public PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary> Setting indicating whether the service has a managed identity associated with it. </summary>
        public ServiceManagedIdentityIdentity Identity { get; set; }
    }
}
