// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.HealthcareApis.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The settings for the CORS configuration of the service instance.
    /// </summary>
    public partial class ServiceCorsConfigurationInfo
    {
        /// <summary>
        /// Initializes a new instance of the ServiceCorsConfigurationInfo
        /// class.
        /// </summary>
        public ServiceCorsConfigurationInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ServiceCorsConfigurationInfo
        /// class.
        /// </summary>
        /// <param name="origins">The origins to be allowed via CORS.</param>
        /// <param name="headers">The headers to be allowed via CORS.</param>
        /// <param name="methods">The methods to be allowed via CORS.</param>
        /// <param name="maxAge">The max age to be allowed via CORS.</param>
        /// <param name="allowCredentials">If credentials are allowed via
        /// CORS.</param>
        public ServiceCorsConfigurationInfo(IList<string> origins = default(IList<string>), IList<string> headers = default(IList<string>), IList<string> methods = default(IList<string>), int? maxAge = default(int?), bool? allowCredentials = default(bool?))
        {
            Origins = origins;
            Headers = headers;
            Methods = methods;
            MaxAge = maxAge;
            AllowCredentials = allowCredentials;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the origins to be allowed via CORS.
        /// </summary>
        [JsonProperty(PropertyName = "origins")]
        public IList<string> Origins { get; set; }

        /// <summary>
        /// Gets or sets the headers to be allowed via CORS.
        /// </summary>
        [JsonProperty(PropertyName = "headers")]
        public IList<string> Headers { get; set; }

        /// <summary>
        /// Gets or sets the methods to be allowed via CORS.
        /// </summary>
        [JsonProperty(PropertyName = "methods")]
        public IList<string> Methods { get; set; }

        /// <summary>
        /// Gets or sets the max age to be allowed via CORS.
        /// </summary>
        [JsonProperty(PropertyName = "maxAge")]
        public int? MaxAge { get; set; }

        /// <summary>
        /// Gets or sets if credentials are allowed via CORS.
        /// </summary>
        [JsonProperty(PropertyName = "allowCredentials")]
        public bool? AllowCredentials { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (MaxAge > 99999)
            {
                throw new ValidationException(ValidationRules.InclusiveMaximum, "MaxAge", 99999);
            }
            if (MaxAge < 0)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "MaxAge", 0);
            }
        }
    }
}
