// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.HealthcareApis.Models
{
    /// <summary>
    /// The settings for the CORS configuration of the service instance.
    /// Serialized Name: CorsConfiguration
    /// </summary>
    public partial class DicomServiceCorsConfiguration
    {
        /// <summary> Initializes a new instance of DicomServiceCorsConfiguration. </summary>
        public DicomServiceCorsConfiguration()
        {
            Origins = new ChangeTrackingList<string>();
            Headers = new ChangeTrackingList<string>();
            Methods = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of DicomServiceCorsConfiguration. </summary>
        /// <param name="origins">
        /// The origins to be allowed via CORS.
        /// Serialized Name: CorsConfiguration.origins
        /// </param>
        /// <param name="headers">
        /// The headers to be allowed via CORS.
        /// Serialized Name: CorsConfiguration.headers
        /// </param>
        /// <param name="methods">
        /// The methods to be allowed via CORS.
        /// Serialized Name: CorsConfiguration.methods
        /// </param>
        /// <param name="maxAge">
        /// The max age to be allowed via CORS.
        /// Serialized Name: CorsConfiguration.maxAge
        /// </param>
        /// <param name="allowCredentials">
        /// If credentials are allowed via CORS.
        /// Serialized Name: CorsConfiguration.allowCredentials
        /// </param>
        internal DicomServiceCorsConfiguration(IList<string> origins, IList<string> headers, IList<string> methods, int? maxAge, bool? allowCredentials)
        {
            Origins = origins;
            Headers = headers;
            Methods = methods;
            MaxAge = maxAge;
            AllowCredentials = allowCredentials;
        }

        /// <summary>
        /// The origins to be allowed via CORS.
        /// Serialized Name: CorsConfiguration.origins
        /// </summary>
        public IList<string> Origins { get; }
        /// <summary>
        /// The headers to be allowed via CORS.
        /// Serialized Name: CorsConfiguration.headers
        /// </summary>
        public IList<string> Headers { get; }
        /// <summary>
        /// The methods to be allowed via CORS.
        /// Serialized Name: CorsConfiguration.methods
        /// </summary>
        public IList<string> Methods { get; }
        /// <summary>
        /// The max age to be allowed via CORS.
        /// Serialized Name: CorsConfiguration.maxAge
        /// </summary>
        public int? MaxAge { get; set; }
        /// <summary>
        /// If credentials are allowed via CORS.
        /// Serialized Name: CorsConfiguration.allowCredentials
        /// </summary>
        public bool? AllowCredentials { get; set; }
    }
}
