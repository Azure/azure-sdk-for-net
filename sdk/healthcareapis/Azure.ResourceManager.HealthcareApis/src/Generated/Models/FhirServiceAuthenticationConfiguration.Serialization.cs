// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.HealthcareApis.Models
{
    public partial class FhirServiceAuthenticationConfiguration : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Authority))
            {
                writer.WritePropertyName("authority");
                writer.WriteStringValue(Authority);
            }
            if (Optional.IsDefined(Audience))
            {
                writer.WritePropertyName("audience");
                writer.WriteStringValue(Audience);
            }
            if (Optional.IsDefined(IsSmartProxyEnabled))
            {
                writer.WritePropertyName("smartProxyEnabled");
                writer.WriteBooleanValue(IsSmartProxyEnabled.Value);
            }
            writer.WriteEndObject();
        }

        internal static FhirServiceAuthenticationConfiguration DeserializeFhirServiceAuthenticationConfiguration(JsonElement element)
        {
            Optional<string> authority = default;
            Optional<string> audience = default;
            Optional<bool> smartProxyEnabled = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("authority"))
                {
                    authority = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("audience"))
                {
                    audience = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("smartProxyEnabled"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    smartProxyEnabled = property.Value.GetBoolean();
                    continue;
                }
            }
            return new FhirServiceAuthenticationConfiguration(authority.Value, audience.Value, Optional.ToNullable(smartProxyEnabled));
        }
    }
}
