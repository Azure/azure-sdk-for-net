// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.HealthcareApis.Models
{
    /// <summary> IoT Connector definition. </summary>
    public partial class HealthcareApisIotConnector : TaggedResource
    {
        /// <summary> Initializes a new instance of <see cref="HealthcareApisIotConnector"/>. </summary>
        public HealthcareApisIotConnector()
        {
        }

        /// <summary> Initializes a new instance of <see cref="HealthcareApisIotConnector"/>. </summary>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="systemData"> Metadata pertaining to creation and last modification of the resource. </param>
        /// <param name="provisioningState"> The provisioning state. </param>
        /// <param name="ingestionEndpointConfiguration"> Source configuration. </param>
        /// <param name="deviceMapping"> Device Mappings. </param>
        internal HealthcareApisIotConnector(IDictionary<string, string> tags, IDictionary<string, BinaryData> serializedAdditionalRawData, SystemData systemData, HealthcareApisProvisioningState? provisioningState, HealthcareApisIotConnectorEventHubIngestionConfiguration ingestionEndpointConfiguration, HealthcareApisIotMappingProperties deviceMapping) : base(tags, serializedAdditionalRawData)
        {
            SystemData = systemData;
            ProvisioningState = provisioningState;
            IngestionEndpointConfiguration = ingestionEndpointConfiguration;
            DeviceMapping = deviceMapping;
        }

        /// <summary> Metadata pertaining to creation and last modification of the resource. </summary>
        public SystemData SystemData { get; }
        /// <summary> The provisioning state. </summary>
        public HealthcareApisProvisioningState? ProvisioningState { get; }
        /// <summary> Source configuration. </summary>
        public HealthcareApisIotConnectorEventHubIngestionConfiguration IngestionEndpointConfiguration { get; set; }
        /// <summary> Device Mappings. </summary>
        internal HealthcareApisIotMappingProperties DeviceMapping { get; set; }
        /// <summary>
        /// The mapping.
        /// <para>
        /// To assign an object to this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public BinaryData DeviceMappingContent
        {
            get => DeviceMapping is null ? default : DeviceMapping.Content;
            set
            {
                if (DeviceMapping is null)
                    DeviceMapping = new HealthcareApisIotMappingProperties();
                DeviceMapping.Content = value;
            }
        }
    }
}
