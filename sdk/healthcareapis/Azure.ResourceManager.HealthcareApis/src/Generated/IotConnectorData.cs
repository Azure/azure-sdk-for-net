// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure;
using Azure.Core;
using Azure.ResourceManager.HealthcareApis.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.HealthcareApis
{
    /// <summary> A class representing the IotConnector data model. </summary>
    public partial class IotConnectorData : TrackedResourceData
    {
        /// <summary> Initializes a new instance of IotConnectorData. </summary>
        /// <param name="location"> The location. </param>
        public IotConnectorData(AzureLocation location) : base(location)
        {
        }

        /// <summary> Initializes a new instance of IotConnectorData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="provisioningState"> The provisioning state. </param>
        /// <param name="ingestionEndpointConfiguration"> Source configuration. </param>
        /// <param name="deviceMapping"> Device Mappings. </param>
        /// <param name="identity"> Setting indicating whether the service has a managed identity associated with it. </param>
        /// <param name="etag"> An etag associated with the resource, used for optimistic concurrency when editing it. </param>
        internal IotConnectorData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, IDictionary<string, string> tags, AzureLocation location, ProvisioningState? provisioningState, IotEventHubIngestionEndpointConfiguration ingestionEndpointConfiguration, IotMappingProperties deviceMapping, ManagedServiceIdentity identity, ETag? etag) : base(id, name, resourceType, systemData, tags, location)
        {
            ProvisioningState = provisioningState;
            IngestionEndpointConfiguration = ingestionEndpointConfiguration;
            DeviceMapping = deviceMapping;
            Identity = identity;
            ETag = etag;
        }

        /// <summary> The provisioning state. </summary>
        public ProvisioningState? ProvisioningState { get; }
        /// <summary> Source configuration. </summary>
        public IotEventHubIngestionEndpointConfiguration IngestionEndpointConfiguration { get; set; }
        /// <summary> Device Mappings. </summary>
        internal IotMappingProperties DeviceMapping { get; set; }
        /// <summary> The mapping. </summary>
        public BinaryData DeviceMappingContent
        {
            get => DeviceMapping is null ? default : DeviceMapping.Content;
            set
            {
                if (DeviceMapping is null)
                    DeviceMapping = new IotMappingProperties();
                DeviceMapping.Content = value;
            }
        }

        /// <summary> Setting indicating whether the service has a managed identity associated with it. </summary>
        public ManagedServiceIdentity Identity { get; set; }
        /// <summary> An etag associated with the resource, used for optimistic concurrency when editing it. </summary>
        public ETag? ETag { get; set; }
    }
}
