// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerRegistry.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The properties of a certificate used for authenticating a token.
    /// </summary>
    public partial class TokenCertificate
    {
        /// <summary>
        /// Initializes a new instance of the TokenCertificate class.
        /// </summary>
        public TokenCertificate()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TokenCertificate class.
        /// </summary>
        /// <param name="name">Possible values include: 'certificate1',
        /// 'certificate2'</param>
        /// <param name="expiry">The expiry datetime of the
        /// certificate.</param>
        /// <param name="thumbprint">The thumbprint of the certificate.</param>
        /// <param name="encodedPemCertificate">Base 64 encoded string of the
        /// public certificate1 in PEM format that will be used for
        /// authenticating the token.</param>
        public TokenCertificate(string name = default(string), System.DateTime? expiry = default(System.DateTime?), string thumbprint = default(string), string encodedPemCertificate = default(string))
        {
            Name = name;
            Expiry = expiry;
            Thumbprint = thumbprint;
            EncodedPemCertificate = encodedPemCertificate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'certificate1',
        /// 'certificate2'
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the expiry datetime of the certificate.
        /// </summary>
        [JsonProperty(PropertyName = "expiry")]
        public System.DateTime? Expiry { get; set; }

        /// <summary>
        /// Gets or sets the thumbprint of the certificate.
        /// </summary>
        [JsonProperty(PropertyName = "thumbprint")]
        public string Thumbprint { get; set; }

        /// <summary>
        /// Gets or sets base 64 encoded string of the public certificate1 in
        /// PEM format that will be used for authenticating the token.
        /// </summary>
        [JsonProperty(PropertyName = "encodedPemCertificate")]
        public string EncodedPemCertificate { get; set; }

    }
}
