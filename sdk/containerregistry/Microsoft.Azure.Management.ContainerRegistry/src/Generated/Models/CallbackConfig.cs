// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerRegistry.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The configuration of service URI and custom headers for the webhook.
    /// </summary>
    public partial class CallbackConfig
    {
        /// <summary>
        /// Initializes a new instance of the CallbackConfig class.
        /// </summary>
        public CallbackConfig()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CallbackConfig class.
        /// </summary>
        /// <param name="serviceUri">The service URI for the webhook to post
        /// notifications.</param>
        /// <param name="customHeaders">Custom headers that will be added to
        /// the webhook notifications.</param>
        public CallbackConfig(string serviceUri, IDictionary<string, string> customHeaders = default(IDictionary<string, string>))
        {
            ServiceUri = serviceUri;
            CustomHeaders = customHeaders;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the service URI for the webhook to post notifications.
        /// </summary>
        [JsonProperty(PropertyName = "serviceUri")]
        public string ServiceUri { get; set; }

        /// <summary>
        /// Gets or sets custom headers that will be added to the webhook
        /// notifications.
        /// </summary>
        [JsonProperty(PropertyName = "customHeaders")]
        public IDictionary<string, string> CustomHeaders { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ServiceUri == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ServiceUri");
            }
        }
    }
}
