// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerRegistry.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The parameters for a task run request.
    /// </summary>
    public partial class TaskRunRequest : RunRequest
    {
        /// <summary>
        /// Initializes a new instance of the TaskRunRequest class.
        /// </summary>
        public TaskRunRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TaskRunRequest class.
        /// </summary>
        /// <param name="taskId">The resource ID of task against which run has
        /// to be queued.</param>
        /// <param name="isArchiveEnabled">The value that indicates whether
        /// archiving is enabled for the run or not.</param>
        /// <param name="agentPoolName">The dedicated agent pool for the
        /// run.</param>
        /// <param name="overrideTaskStepProperties">Set of overridable
        /// parameters that can be passed when running a Task.</param>
        public TaskRunRequest(string taskId, bool? isArchiveEnabled = default(bool?), string agentPoolName = default(string), OverrideTaskStepProperties overrideTaskStepProperties = default(OverrideTaskStepProperties))
            : base(isArchiveEnabled, agentPoolName)
        {
            TaskId = taskId;
            OverrideTaskStepProperties = overrideTaskStepProperties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the resource ID of task against which run has to be
        /// queued.
        /// </summary>
        [JsonProperty(PropertyName = "taskId")]
        public string TaskId { get; set; }

        /// <summary>
        /// Gets or sets set of overridable parameters that can be passed when
        /// running a Task.
        /// </summary>
        [JsonProperty(PropertyName = "overrideTaskStepProperties")]
        public OverrideTaskStepProperties OverrideTaskStepProperties { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (TaskId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TaskId");
            }
        }
    }
}
