// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerRegistry.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// An object that represents a pipeline run for a container registry.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class PipelineRun : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the PipelineRun class.
        /// </summary>
        public PipelineRun()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PipelineRun class.
        /// </summary>
        /// <param name="id">The resource ID.</param>
        /// <param name="name">The name of the resource.</param>
        /// <param name="type">The type of the resource.</param>
        /// <param name="provisioningState">The provisioning state of a
        /// pipeline run. Possible values include: 'Creating', 'Updating',
        /// 'Deleting', 'Succeeded', 'Failed', 'Canceled'</param>
        /// <param name="request">The request parameters for a pipeline
        /// run.</param>
        /// <param name="response">The response of a pipeline run.</param>
        /// <param name="forceUpdateTag">How the pipeline run should be forced
        /// to recreate even if the pipeline run configuration has not
        /// changed.</param>
        public PipelineRun(string id = default(string), string name = default(string), string type = default(string), string provisioningState = default(string), PipelineRunRequest request = default(PipelineRunRequest), PipelineRunResponse response = default(PipelineRunResponse), string forceUpdateTag = default(string))
            : base(id, name, type)
        {
            ProvisioningState = provisioningState;
            Request = request;
            Response = response;
            ForceUpdateTag = forceUpdateTag;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the provisioning state of a pipeline run. Possible values
        /// include: 'Creating', 'Updating', 'Deleting', 'Succeeded', 'Failed',
        /// 'Canceled'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets or sets the request parameters for a pipeline run.
        /// </summary>
        [JsonProperty(PropertyName = "properties.request")]
        public PipelineRunRequest Request { get; set; }

        /// <summary>
        /// Gets the response of a pipeline run.
        /// </summary>
        [JsonProperty(PropertyName = "properties.response")]
        public PipelineRunResponse Response { get; private set; }

        /// <summary>
        /// Gets or sets how the pipeline run should be forced to recreate even
        /// if the pipeline run configuration has not changed.
        /// </summary>
        [JsonProperty(PropertyName = "properties.forceUpdateTag")]
        public string ForceUpdateTag { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Response != null)
            {
                Response.Validate();
            }
        }
    }
}
