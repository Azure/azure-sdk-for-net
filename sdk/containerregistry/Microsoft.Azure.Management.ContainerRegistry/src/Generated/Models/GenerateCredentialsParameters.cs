// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerRegistry.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The parameters used to generate credentials for a specified token or
    /// user of a container registry.
    /// </summary>
    public partial class GenerateCredentialsParameters
    {
        /// <summary>
        /// Initializes a new instance of the GenerateCredentialsParameters
        /// class.
        /// </summary>
        public GenerateCredentialsParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GenerateCredentialsParameters
        /// class.
        /// </summary>
        /// <param name="tokenId">The resource ID of the token for which
        /// credentials have to be generated.</param>
        /// <param name="expiry">The expiry date of the generated credentials
        /// after which the credentials become invalid.</param>
        /// <param name="name">Specifies name of the password which should be
        /// regenerated if any -- password1 or password2. Possible values
        /// include: 'password1', 'password2'</param>
        public GenerateCredentialsParameters(string tokenId = default(string), System.DateTime? expiry = default(System.DateTime?), string name = default(string))
        {
            TokenId = tokenId;
            Expiry = expiry;
            Name = name;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the resource ID of the token for which credentials
        /// have to be generated.
        /// </summary>
        [JsonProperty(PropertyName = "tokenId")]
        public string TokenId { get; set; }

        /// <summary>
        /// Gets or sets the expiry date of the generated credentials after
        /// which the credentials become invalid.
        /// </summary>
        [JsonProperty(PropertyName = "expiry")]
        public System.DateTime? Expiry { get; set; }

        /// <summary>
        /// Gets or sets specifies name of the password which should be
        /// regenerated if any -- password1 or password2. Possible values
        /// include: 'password1', 'password2'
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

    }
}
