// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerRegistry.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The request properties provided for a pipeline run.
    /// </summary>
    public partial class PipelineRunRequest
    {
        /// <summary>
        /// Initializes a new instance of the PipelineRunRequest class.
        /// </summary>
        public PipelineRunRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PipelineRunRequest class.
        /// </summary>
        /// <param name="pipelineResourceId">The resource ID of the pipeline to
        /// run.</param>
        /// <param name="artifacts">List of source artifacts to be transferred
        /// by the pipeline.
        /// Specify an image by repository ('hello-world'). This will use the
        /// 'latest' tag.
        /// Specify an image by tag ('hello-world:latest').
        /// Specify an image by sha256-based manifest digest
        /// ('hello-world@sha256:abc123').</param>
        /// <param name="source">The source properties of the pipeline
        /// run.</param>
        /// <param name="target">The target properties of the pipeline
        /// run.</param>
        /// <param name="catalogDigest">The digest of the tar used to transfer
        /// the artifacts.</param>
        public PipelineRunRequest(string pipelineResourceId = default(string), IList<string> artifacts = default(IList<string>), PipelineRunSourceProperties source = default(PipelineRunSourceProperties), PipelineRunTargetProperties target = default(PipelineRunTargetProperties), string catalogDigest = default(string))
        {
            PipelineResourceId = pipelineResourceId;
            Artifacts = artifacts;
            Source = source;
            Target = target;
            CatalogDigest = catalogDigest;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the resource ID of the pipeline to run.
        /// </summary>
        [JsonProperty(PropertyName = "pipelineResourceId")]
        public string PipelineResourceId { get; set; }

        /// <summary>
        /// Gets or sets list of source artifacts to be transferred by the
        /// pipeline.
        /// Specify an image by repository ('hello-world'). This will use the
        /// 'latest' tag.
        /// Specify an image by tag ('hello-world:latest').
        /// Specify an image by sha256-based manifest digest
        /// ('hello-world@sha256:abc123').
        /// </summary>
        [JsonProperty(PropertyName = "artifacts")]
        public IList<string> Artifacts { get; set; }

        /// <summary>
        /// Gets or sets the source properties of the pipeline run.
        /// </summary>
        [JsonProperty(PropertyName = "source")]
        public PipelineRunSourceProperties Source { get; set; }

        /// <summary>
        /// Gets or sets the target properties of the pipeline run.
        /// </summary>
        [JsonProperty(PropertyName = "target")]
        public PipelineRunTargetProperties Target { get; set; }

        /// <summary>
        /// Gets or sets the digest of the tar used to transfer the artifacts.
        /// </summary>
        [JsonProperty(PropertyName = "catalogDigest")]
        public string CatalogDigest { get; set; }

    }
}
