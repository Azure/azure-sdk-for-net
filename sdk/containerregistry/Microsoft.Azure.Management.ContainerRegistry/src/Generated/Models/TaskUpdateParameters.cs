// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerRegistry.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The parameters for updating a task.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class TaskUpdateParameters
    {
        /// <summary>
        /// Initializes a new instance of the TaskUpdateParameters class.
        /// </summary>
        public TaskUpdateParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TaskUpdateParameters class.
        /// </summary>
        /// <param name="identity">Identity for the resource.</param>
        /// <param name="status">The current status of task. Possible values
        /// include: 'Disabled', 'Enabled'</param>
        /// <param name="platform">The platform properties against which the
        /// run has to happen.</param>
        /// <param name="agentConfiguration">The machine configuration of the
        /// run agent.</param>
        /// <param name="agentPoolName">The dedicated agent pool for the
        /// task.</param>
        /// <param name="timeout">Run timeout in seconds.</param>
        /// <param name="step">The properties for updating a task step.</param>
        /// <param name="trigger">The properties for updating trigger
        /// properties.</param>
        /// <param name="credentials">The parameters that describes a set of
        /// credentials that will be used when this run is invoked.</param>
        /// <param name="tags">The ARM resource tags.</param>
        public TaskUpdateParameters(IdentityProperties identity = default(IdentityProperties), string status = default(string), PlatformUpdateParameters platform = default(PlatformUpdateParameters), AgentProperties agentConfiguration = default(AgentProperties), string agentPoolName = default(string), int? timeout = default(int?), TaskStepUpdateParameters step = default(TaskStepUpdateParameters), TriggerUpdateParameters trigger = default(TriggerUpdateParameters), Credentials credentials = default(Credentials), IDictionary<string, string> tags = default(IDictionary<string, string>))
        {
            Identity = identity;
            Status = status;
            Platform = platform;
            AgentConfiguration = agentConfiguration;
            AgentPoolName = agentPoolName;
            Timeout = timeout;
            Step = step;
            Trigger = trigger;
            Credentials = credentials;
            Tags = tags;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets identity for the resource.
        /// </summary>
        [JsonProperty(PropertyName = "identity")]
        public IdentityProperties Identity { get; set; }

        /// <summary>
        /// Gets or sets the current status of task. Possible values include:
        /// 'Disabled', 'Enabled'
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets the platform properties against which the run has to
        /// happen.
        /// </summary>
        [JsonProperty(PropertyName = "properties.platform")]
        public PlatformUpdateParameters Platform { get; set; }

        /// <summary>
        /// Gets or sets the machine configuration of the run agent.
        /// </summary>
        [JsonProperty(PropertyName = "properties.agentConfiguration")]
        public AgentProperties AgentConfiguration { get; set; }

        /// <summary>
        /// Gets or sets the dedicated agent pool for the task.
        /// </summary>
        [JsonProperty(PropertyName = "properties.agentPoolName")]
        public string AgentPoolName { get; set; }

        /// <summary>
        /// Gets or sets run timeout in seconds.
        /// </summary>
        [JsonProperty(PropertyName = "properties.timeout")]
        public int? Timeout { get; set; }

        /// <summary>
        /// Gets or sets the properties for updating a task step.
        /// </summary>
        [JsonProperty(PropertyName = "properties.step")]
        public TaskStepUpdateParameters Step { get; set; }

        /// <summary>
        /// Gets or sets the properties for updating trigger properties.
        /// </summary>
        [JsonProperty(PropertyName = "properties.trigger")]
        public TriggerUpdateParameters Trigger { get; set; }

        /// <summary>
        /// Gets or sets the parameters that describes a set of credentials
        /// that will be used when this run is invoked.
        /// </summary>
        [JsonProperty(PropertyName = "properties.credentials")]
        public Credentials Credentials { get; set; }

        /// <summary>
        /// Gets or sets the ARM resource tags.
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Trigger != null)
            {
                Trigger.Validate();
            }
        }
    }
}
