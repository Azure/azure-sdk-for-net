// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerRegistry.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The properties for updating the platform configuration.
    /// </summary>
    public partial class PlatformUpdateParameters
    {
        /// <summary>
        /// Initializes a new instance of the PlatformUpdateParameters class.
        /// </summary>
        public PlatformUpdateParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PlatformUpdateParameters class.
        /// </summary>
        /// <param name="os">The operating system type required for the run.
        /// Possible values include: 'Windows', 'Linux'</param>
        /// <param name="architecture">The OS architecture. Possible values
        /// include: 'amd64', 'x86', '386', 'arm', 'arm64'</param>
        /// <param name="variant">Variant of the CPU. Possible values include:
        /// 'v6', 'v7', 'v8'</param>
        public PlatformUpdateParameters(string os = default(string), string architecture = default(string), string variant = default(string))
        {
            Os = os;
            Architecture = architecture;
            Variant = variant;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the operating system type required for the run.
        /// Possible values include: 'Windows', 'Linux'
        /// </summary>
        [JsonProperty(PropertyName = "os")]
        public string Os { get; set; }

        /// <summary>
        /// Gets or sets the OS architecture. Possible values include: 'amd64',
        /// 'x86', '386', 'arm', 'arm64'
        /// </summary>
        [JsonProperty(PropertyName = "architecture")]
        public string Architecture { get; set; }

        /// <summary>
        /// Gets or sets variant of the CPU. Possible values include: 'v6',
        /// 'v7', 'v8'
        /// </summary>
        [JsonProperty(PropertyName = "variant")]
        public string Variant { get; set; }

    }
}
