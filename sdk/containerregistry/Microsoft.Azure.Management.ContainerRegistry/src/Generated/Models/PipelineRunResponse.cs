// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerRegistry.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The response properties returned for a pipeline run.
    /// </summary>
    public partial class PipelineRunResponse
    {
        /// <summary>
        /// Initializes a new instance of the PipelineRunResponse class.
        /// </summary>
        public PipelineRunResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PipelineRunResponse class.
        /// </summary>
        /// <param name="status">The current status of the pipeline
        /// run.</param>
        /// <param name="importedArtifacts">The artifacts imported in the
        /// pipeline run.</param>
        /// <param name="progress">The current progress of the copy
        /// operation.</param>
        /// <param name="startTime">The time the pipeline run started.</param>
        /// <param name="finishTime">The time the pipeline run
        /// finished.</param>
        /// <param name="source">The source of the pipeline run.</param>
        /// <param name="target">The target of the pipeline run.</param>
        /// <param name="catalogDigest">The digest of the tar used to transfer
        /// the artifacts.</param>
        /// <param name="trigger">The trigger that caused the pipeline
        /// run.</param>
        /// <param name="pipelineRunErrorMessage">The detailed error message
        /// for the pipeline run in the case of failure.</param>
        public PipelineRunResponse(string status = default(string), IList<string> importedArtifacts = default(IList<string>), ProgressProperties progress = default(ProgressProperties), System.DateTime? startTime = default(System.DateTime?), System.DateTime? finishTime = default(System.DateTime?), ImportPipelineSourceProperties source = default(ImportPipelineSourceProperties), ExportPipelineTargetProperties target = default(ExportPipelineTargetProperties), string catalogDigest = default(string), PipelineTriggerDescriptor trigger = default(PipelineTriggerDescriptor), string pipelineRunErrorMessage = default(string))
        {
            Status = status;
            ImportedArtifacts = importedArtifacts;
            Progress = progress;
            StartTime = startTime;
            FinishTime = finishTime;
            Source = source;
            Target = target;
            CatalogDigest = catalogDigest;
            Trigger = trigger;
            PipelineRunErrorMessage = pipelineRunErrorMessage;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the current status of the pipeline run.
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets the artifacts imported in the pipeline run.
        /// </summary>
        [JsonProperty(PropertyName = "importedArtifacts")]
        public IList<string> ImportedArtifacts { get; set; }

        /// <summary>
        /// Gets or sets the current progress of the copy operation.
        /// </summary>
        [JsonProperty(PropertyName = "progress")]
        public ProgressProperties Progress { get; set; }

        /// <summary>
        /// Gets or sets the time the pipeline run started.
        /// </summary>
        [JsonProperty(PropertyName = "startTime")]
        public System.DateTime? StartTime { get; set; }

        /// <summary>
        /// Gets or sets the time the pipeline run finished.
        /// </summary>
        [JsonProperty(PropertyName = "finishTime")]
        public System.DateTime? FinishTime { get; set; }

        /// <summary>
        /// Gets or sets the source of the pipeline run.
        /// </summary>
        [JsonProperty(PropertyName = "source")]
        public ImportPipelineSourceProperties Source { get; set; }

        /// <summary>
        /// Gets or sets the target of the pipeline run.
        /// </summary>
        [JsonProperty(PropertyName = "target")]
        public ExportPipelineTargetProperties Target { get; set; }

        /// <summary>
        /// Gets or sets the digest of the tar used to transfer the artifacts.
        /// </summary>
        [JsonProperty(PropertyName = "catalogDigest")]
        public string CatalogDigest { get; set; }

        /// <summary>
        /// Gets or sets the trigger that caused the pipeline run.
        /// </summary>
        [JsonProperty(PropertyName = "trigger")]
        public PipelineTriggerDescriptor Trigger { get; set; }

        /// <summary>
        /// Gets or sets the detailed error message for the pipeline run in the
        /// case of failure.
        /// </summary>
        [JsonProperty(PropertyName = "pipelineRunErrorMessage")]
        public string PipelineRunErrorMessage { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Source != null)
            {
                Source.Validate();
            }
            if (Target != null)
            {
                Target.Validate();
            }
        }
    }
}
