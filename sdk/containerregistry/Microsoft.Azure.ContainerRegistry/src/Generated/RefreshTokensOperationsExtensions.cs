// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.ContainerRegistry
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for RefreshTokensOperations.
    /// </summary>
    public static partial class RefreshTokensOperationsExtensions
    {
            /// <summary>
            /// Exchange AAD tokens for an ACR refresh Token
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='grantType'>
            /// Can take a value of access_token_refresh_token, or access_token, or
            /// refresh_token. Possible values include: 'access_token_refresh_token',
            /// 'access_token', 'refresh_token'
            /// </param>
            /// <param name='service'>
            /// Indicates the name of your Azure container registry.
            /// </param>
            /// <param name='tenant'>
            /// AAD tenant associated to the AAD credentials.
            /// </param>
            /// <param name='refreshToken'>
            /// AAD refresh token, mandatory when grant_type is access_token_refresh_token
            /// or refresh_token
            /// </param>
            /// <param name='accessToken'>
            /// AAD access token, mandatory when grant_type is access_token_refresh_token
            /// or access_token.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<RefreshToken> GetFromExchangeAsync(this IRefreshTokensOperations operations, string grantType, string service, string tenant = default(string), string refreshToken = default(string), string accessToken = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetFromExchangeWithHttpMessagesAsync(grantType, service, tenant, refreshToken, accessToken, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
