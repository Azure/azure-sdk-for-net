// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.ContainerRegistry.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Returns the requested OCI index file
    /// </summary>
    [Newtonsoft.Json.JsonObject("application/vnd.oci.image.index.v1+json")]
    public partial class OCIIndex : Manifest
    {
        /// <summary>
        /// Initializes a new instance of the OCIIndex class.
        /// </summary>
        public OCIIndex()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OCIIndex class.
        /// </summary>
        /// <param name="architecture">CPU architecture</param>
        /// <param name="name">Image name</param>
        /// <param name="tag">Image tag</param>
        /// <param name="fsLayers">List of layer information</param>
        /// <param name="history">Image history</param>
        /// <param name="signatures">Image signature</param>
        /// <param name="schemaVersion">Schema version</param>
        /// <param name="manifests">List of OCI image layer information</param>
        public OCIIndex(string architecture = default(string), string name = default(string), string tag = default(string), IList<FsLayer> fsLayers = default(IList<FsLayer>), IList<History> history = default(IList<History>), IList<ImageSignature> signatures = default(IList<ImageSignature>), int? schemaVersion = default(int?), IList<ManifestListAttributes> manifests = default(IList<ManifestListAttributes>), Annotations annotations = default(Annotations))
            : base(architecture, name, tag, fsLayers, history, signatures, schemaVersion)
        {
            Manifests = manifests;
            Annotations = annotations;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets list of OCI image layer information
        /// </summary>
        [JsonProperty(PropertyName = "manifests")]
        public IList<ManifestListAttributes> Manifests { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "annotations")]
        public Annotations Annotations { get; set; }

    }
}
