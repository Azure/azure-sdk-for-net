// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.ContainerRegistry.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Additional information provided through arbitrary metadata
    /// </summary>
    public partial class Annotations
    {
        /// <summary>
        /// Initializes a new instance of the Annotations class.
        /// </summary>
        public Annotations()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Annotations class.
        /// </summary>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="orgopencontainersimagecreated">Date and time on which
        /// the image was built (string, date-time as defined by
        /// https://tools.ietf.org/html/rfc3339#section-5.6)</param>
        /// <param name="orgopencontainersimageauthors">Contact details of the
        /// people or organization responsible for the image (freeform
        /// string)</param>
        /// <param name="orgopencontainersimageurl">URL to find more
        /// information on the image (string)</param>
        /// <param name="orgopencontainersimagedocumentation">URL to get
        /// documentation on the image (string)</param>
        /// <param name="orgopencontainersimagesource">URL to get source code
        /// for building the image (string)</param>
        /// <param name="orgopencontainersimageversion">Version of the packaged
        /// software. The version MAY match a label or tag in the source code
        /// repository, may also be Semantic versioning-compatible</param>
        /// <param name="orgopencontainersimagerevision">Source control
        /// revision identifier for the packaged software.</param>
        /// <param name="orgopencontainersimagevendor">Name of the distributing
        /// entity, organization or individual.</param>
        /// <param name="orgopencontainersimagelicenses">License(s) under which
        /// contained software is distributed as an SPDX License
        /// Expression.</param>
        /// <param name="orgopencontainersimagerefname">Name of the reference
        /// for a target (string). </param>
        /// <param name="orgopencontainersimagetitle">Human-readable title of
        /// the image (string)</param>
        /// <param name="orgopencontainersimagedescription">Human-readable
        /// description of the software packaged in the image (string)</param>
        public Annotations(IDictionary<string, string> additionalProperties = default(IDictionary<string, string>), System.DateTime? orgopencontainersimagecreated = default(System.DateTime?), string orgopencontainersimageauthors = default(string), string orgopencontainersimageurl = default(string), string orgopencontainersimagedocumentation = default(string), string orgopencontainersimagesource = default(string), string orgopencontainersimageversion = default(string), string orgopencontainersimagerevision = default(string), string orgopencontainersimagevendor = default(string), string orgopencontainersimagelicenses = default(string), string orgopencontainersimagerefname = default(string), string orgopencontainersimagetitle = default(string), string orgopencontainersimagedescription = default(string))
        {
            AdditionalProperties = additionalProperties;
            Orgopencontainersimagecreated = orgopencontainersimagecreated;
            Orgopencontainersimageauthors = orgopencontainersimageauthors;
            Orgopencontainersimageurl = orgopencontainersimageurl;
            Orgopencontainersimagedocumentation = orgopencontainersimagedocumentation;
            Orgopencontainersimagesource = orgopencontainersimagesource;
            Orgopencontainersimageversion = orgopencontainersimageversion;
            Orgopencontainersimagerevision = orgopencontainersimagerevision;
            Orgopencontainersimagevendor = orgopencontainersimagevendor;
            Orgopencontainersimagelicenses = orgopencontainersimagelicenses;
            Orgopencontainersimagerefname = orgopencontainersimagerefname;
            Orgopencontainersimagetitle = orgopencontainersimagetitle;
            Orgopencontainersimagedescription = orgopencontainersimagedescription;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets unmatched properties from the message are deserialized
        /// this collection
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, string> AdditionalProperties { get; set; }

        /// <summary>
        /// Gets or sets date and time on which the image was built (string,
        /// date-time as defined by
        /// https://tools.ietf.org/html/rfc3339#section-5.6)
        /// </summary>
        [JsonProperty(PropertyName = "org.opencontainers.image.created")]
        public System.DateTime? Orgopencontainersimagecreated { get; set; }

        /// <summary>
        /// Gets or sets contact details of the people or organization
        /// responsible for the image (freeform string)
        /// </summary>
        [JsonProperty(PropertyName = "org.opencontainers.image.authors")]
        public string Orgopencontainersimageauthors { get; set; }

        /// <summary>
        /// Gets or sets URL to find more information on the image (string)
        /// </summary>
        [JsonProperty(PropertyName = "org.opencontainers.image.url")]
        public string Orgopencontainersimageurl { get; set; }

        /// <summary>
        /// Gets or sets URL to get documentation on the image (string)
        /// </summary>
        [JsonProperty(PropertyName = "org.opencontainers.image.documentation")]
        public string Orgopencontainersimagedocumentation { get; set; }

        /// <summary>
        /// Gets or sets URL to get source code for building the image (string)
        /// </summary>
        [JsonProperty(PropertyName = "org.opencontainers.image.source")]
        public string Orgopencontainersimagesource { get; set; }

        /// <summary>
        /// Gets or sets version of the packaged software. The version MAY
        /// match a label or tag in the source code repository, may also be
        /// Semantic versioning-compatible
        /// </summary>
        [JsonProperty(PropertyName = "org.opencontainers.image.version")]
        public string Orgopencontainersimageversion { get; set; }

        /// <summary>
        /// Gets or sets source control revision identifier for the packaged
        /// software.
        /// </summary>
        [JsonProperty(PropertyName = "org.opencontainers.image.revision")]
        public string Orgopencontainersimagerevision { get; set; }

        /// <summary>
        /// Gets or sets name of the distributing entity, organization or
        /// individual.
        /// </summary>
        [JsonProperty(PropertyName = "org.opencontainers.image.vendor")]
        public string Orgopencontainersimagevendor { get; set; }

        /// <summary>
        /// Gets or sets license(s) under which contained software is
        /// distributed as an SPDX License Expression.
        /// </summary>
        [JsonProperty(PropertyName = "org.opencontainers.image.licenses")]
        public string Orgopencontainersimagelicenses { get; set; }

        /// <summary>
        /// Gets or sets name of the reference for a target (string).
        /// </summary>
        [JsonProperty(PropertyName = "org.opencontainers.image.ref.name")]
        public string Orgopencontainersimagerefname { get; set; }

        /// <summary>
        /// Gets or sets human-readable title of the image (string)
        /// </summary>
        [JsonProperty(PropertyName = "org.opencontainers.image.title")]
        public string Orgopencontainersimagetitle { get; set; }

        /// <summary>
        /// Gets or sets human-readable description of the software packaged in
        /// the image (string)
        /// </summary>
        [JsonProperty(PropertyName = "org.opencontainers.image.description")]
        public string Orgopencontainersimagedescription { get; set; }

    }
}
