// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.ContainerRegistry.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// List of tag details
    /// </summary>
    public partial class TagList
    {
        /// <summary>
        /// Initializes a new instance of the TagList class.
        /// </summary>
        public TagList()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TagList class.
        /// </summary>
        /// <param name="registry">Registry name</param>
        /// <param name="imageName">Image name</param>
        /// <param name="tags">List of tag attribute details</param>
        public TagList(string registry = default(string), string imageName = default(string), IList<TagAttributesBase> tags = default(IList<TagAttributesBase>))
        {
            Registry = registry;
            ImageName = imageName;
            Tags = tags;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets registry name
        /// </summary>
        [JsonProperty(PropertyName = "registry")]
        public string Registry { get; set; }

        /// <summary>
        /// Gets or sets image name
        /// </summary>
        [JsonProperty(PropertyName = "imageName")]
        public string ImageName { get; set; }

        /// <summary>
        /// Gets or sets list of tag attribute details
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IList<TagAttributesBase> Tags { get; set; }

    }
}
