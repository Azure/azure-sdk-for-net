// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.ContainerRegistry.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Signature of a signed manifest
    /// </summary>
    public partial class ImageSignature
    {
        /// <summary>
        /// Initializes a new instance of the ImageSignature class.
        /// </summary>
        public ImageSignature()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ImageSignature class.
        /// </summary>
        /// <param name="header">A JSON web signature</param>
        /// <param name="signature">A signature for the image manifest, signed
        /// by a libtrust private key</param>
        /// <param name="protectedProperty">The signed protected header</param>
        public ImageSignature(JWK header = default(JWK), string signature = default(string), string protectedProperty = default(string))
        {
            Header = header;
            Signature = signature;
            ProtectedProperty = protectedProperty;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets a JSON web signature
        /// </summary>
        [JsonProperty(PropertyName = "header")]
        public JWK Header { get; set; }

        /// <summary>
        /// Gets or sets a signature for the image manifest, signed by a
        /// libtrust private key
        /// </summary>
        [JsonProperty(PropertyName = "signature")]
        public string Signature { get; set; }

        /// <summary>
        /// Gets or sets the signed protected header
        /// </summary>
        [JsonProperty(PropertyName = "protected")]
        public string ProtectedProperty { get; set; }

    }
}
