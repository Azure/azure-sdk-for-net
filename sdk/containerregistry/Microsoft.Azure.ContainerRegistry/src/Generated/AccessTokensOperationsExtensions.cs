// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.ContainerRegistry
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for AccessTokensOperations.
    /// </summary>
    public static partial class AccessTokensOperationsExtensions
    {
            /// <summary>
            /// Exchange ACR Refresh token for an ACR Access Token
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='service'>
            /// Indicates the name of your Azure container registry.
            /// </param>
            /// <param name='scope'>
            /// Which is expected to be a valid scope, and can be specified more than once
            /// for multiple scope requests. You obtained this from the Www-Authenticate
            /// response header from the challenge.
            /// </param>
            /// <param name='refreshToken'>
            /// Must be a valid ACR refresh token
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<AccessToken> GetAsync(this IAccessTokensOperations operations, string service, string scope, string refreshToken, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(service, scope, refreshToken, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Exchange Username, Password and Scope an ACR Access Token
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='service'>
            /// Indicates the name of your Azure container registry.
            /// </param>
            /// <param name='scope'>
            /// Expected to be a valid scope, and can be specified more than once for
            /// multiple scope requests. You can obtain this from the Www-Authenticate
            /// response header from the challenge.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<AccessToken> GetFromLoginAsync(this IAccessTokensOperations operations, string service, string scope, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetFromLoginWithHttpMessagesAsync(service, scope, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
