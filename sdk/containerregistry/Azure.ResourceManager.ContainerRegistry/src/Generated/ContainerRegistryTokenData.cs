// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.ResourceManager.ContainerRegistry.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.ContainerRegistry
{
    /// <summary>
    /// A class representing the ContainerRegistryToken data model.
    /// An object that represents a token for a container registry.
    /// </summary>
    public partial class ContainerRegistryTokenData : ResourceData
    {
        /// <summary> Initializes a new instance of <see cref="ContainerRegistryTokenData"/>. </summary>
        public ContainerRegistryTokenData()
        {
        }

        /// <summary> Initializes a new instance of <see cref="ContainerRegistryTokenData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="createdOn"> The creation date of scope map. </param>
        /// <param name="provisioningState"> Provisioning state of the resource. </param>
        /// <param name="scopeMapId"> The resource ID of the scope map to which the token will be associated with. </param>
        /// <param name="credentials"> The credentials that can be used for authenticating the token. </param>
        /// <param name="status"> The status of the token example enabled or disabled. </param>
        internal ContainerRegistryTokenData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, DateTimeOffset? createdOn, ContainerRegistryProvisioningState? provisioningState, ResourceIdentifier scopeMapId, ContainerRegistryTokenCredentials credentials, ContainerRegistryTokenStatus? status) : base(id, name, resourceType, systemData)
        {
            CreatedOn = createdOn;
            ProvisioningState = provisioningState;
            ScopeMapId = scopeMapId;
            Credentials = credentials;
            Status = status;
        }

        /// <summary> The creation date of scope map. </summary>
        public DateTimeOffset? CreatedOn { get; }
        /// <summary> Provisioning state of the resource. </summary>
        public ContainerRegistryProvisioningState? ProvisioningState { get; }
        /// <summary> The resource ID of the scope map to which the token will be associated with. </summary>
        public ResourceIdentifier ScopeMapId { get; set; }
        /// <summary> The credentials that can be used for authenticating the token. </summary>
        public ContainerRegistryTokenCredentials Credentials { get; set; }
        /// <summary> The status of the token example enabled or disabled. </summary>
        public ContainerRegistryTokenStatus? Status { get; set; }
    }
}
