// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.ResourceManager.ContainerRegistry.Models
{
    /// <summary> The properties for updating base image dependency trigger. </summary>
    public partial class ContainerRegistryBaseImageTriggerUpdateContent
    {
        /// <summary> Initializes a new instance of <see cref="ContainerRegistryBaseImageTriggerUpdateContent"/>. </summary>
        /// <param name="name"> The name of the trigger. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> is null. </exception>
        public ContainerRegistryBaseImageTriggerUpdateContent(string name)
        {
            Argument.AssertNotNull(name, nameof(name));

            Name = name;
        }

        /// <summary> Initializes a new instance of <see cref="ContainerRegistryBaseImageTriggerUpdateContent"/>. </summary>
        /// <param name="baseImageTriggerType"> The type of the auto trigger for base image dependency updates. </param>
        /// <param name="updateTriggerEndpoint"> The endpoint URL for receiving update triggers. </param>
        /// <param name="updateTriggerPayloadType"> Type of Payload body for Base image update triggers. </param>
        /// <param name="status"> The current status of trigger. </param>
        /// <param name="name"> The name of the trigger. </param>
        internal ContainerRegistryBaseImageTriggerUpdateContent(ContainerRegistryBaseImageTriggerType? baseImageTriggerType, string updateTriggerEndpoint, ContainerRegistryUpdateTriggerPayloadType? updateTriggerPayloadType, ContainerRegistryTriggerStatus? status, string name)
        {
            BaseImageTriggerType = baseImageTriggerType;
            UpdateTriggerEndpoint = updateTriggerEndpoint;
            UpdateTriggerPayloadType = updateTriggerPayloadType;
            Status = status;
            Name = name;
        }

        /// <summary> The type of the auto trigger for base image dependency updates. </summary>
        public ContainerRegistryBaseImageTriggerType? BaseImageTriggerType { get; set; }
        /// <summary> The endpoint URL for receiving update triggers. </summary>
        public string UpdateTriggerEndpoint { get; set; }
        /// <summary> Type of Payload body for Base image update triggers. </summary>
        public ContainerRegistryUpdateTriggerPayloadType? UpdateTriggerPayloadType { get; set; }
        /// <summary> The current status of trigger. </summary>
        public ContainerRegistryTriggerStatus? Status { get; set; }
        /// <summary> The name of the trigger. </summary>
        public string Name { get; }
    }
}
