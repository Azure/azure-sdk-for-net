// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.ContainerRegistry.Models
{
    /// <summary> The SourceTriggerEvent. </summary>
    public readonly partial struct SourceTriggerEvent : IEquatable<SourceTriggerEvent>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="SourceTriggerEvent"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public SourceTriggerEvent(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string CommitValue = "commit";
        private const string PullrequestValue = "pullrequest";

        /// <summary> commit. </summary>
        public static SourceTriggerEvent Commit { get; } = new SourceTriggerEvent(CommitValue);
        /// <summary> pullrequest. </summary>
        public static SourceTriggerEvent Pullrequest { get; } = new SourceTriggerEvent(PullrequestValue);
        /// <summary> Determines if two <see cref="SourceTriggerEvent"/> values are the same. </summary>
        public static bool operator ==(SourceTriggerEvent left, SourceTriggerEvent right) => left.Equals(right);
        /// <summary> Determines if two <see cref="SourceTriggerEvent"/> values are not the same. </summary>
        public static bool operator !=(SourceTriggerEvent left, SourceTriggerEvent right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="SourceTriggerEvent"/>. </summary>
        public static implicit operator SourceTriggerEvent(string value) => new SourceTriggerEvent(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is SourceTriggerEvent other && Equals(other);
        /// <inheritdoc />
        public bool Equals(SourceTriggerEvent other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
