// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.ResourceManager.ContainerRegistry.Models
{
    /// <summary> A request to check whether a container registry name is available. </summary>
    public partial class ContainerRegistryNameAvailabilityContent
    {
        /// <summary> Initializes a new instance of <see cref="ContainerRegistryNameAvailabilityContent"/>. </summary>
        /// <param name="name"> The name of the container registry. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> is null. </exception>
        public ContainerRegistryNameAvailabilityContent(string name)
        {
            Argument.AssertNotNull(name, nameof(name));

            Name = name;
            ResourceType = ContainerRegistryResourceType.MicrosoftContainerRegistryRegistries;
        }

        /// <summary> Initializes a new instance of <see cref="ContainerRegistryNameAvailabilityContent"/>. </summary>
        /// <param name="name"> The name of the container registry. </param>
        /// <param name="resourceType"> The resource type of the container registry. This field must be set to 'Microsoft.ContainerRegistry/registries'. </param>
        internal ContainerRegistryNameAvailabilityContent(string name, ContainerRegistryResourceType resourceType)
        {
            Name = name;
            ResourceType = resourceType;
        }

        /// <summary> The name of the container registry. </summary>
        public string Name { get; }
        /// <summary> The resource type of the container registry. This field must be set to 'Microsoft.ContainerRegistry/registries'. </summary>
        public ContainerRegistryResourceType ResourceType { get; }
    }
}
