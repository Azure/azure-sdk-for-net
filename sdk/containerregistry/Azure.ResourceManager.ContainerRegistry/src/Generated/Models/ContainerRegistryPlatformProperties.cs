// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.ContainerRegistry.Models
{
    /// <summary> The platform properties against which the run has to happen. </summary>
    public partial class ContainerRegistryPlatformProperties
    {
        private Dictionary<string, BinaryData> _rawData;

        /// <summary> Initializes a new instance of <see cref="ContainerRegistryPlatformProperties"/>. </summary>
        /// <param name="os"> The operating system type required for the run. </param>
        public ContainerRegistryPlatformProperties(ContainerRegistryOS os)
        {
            OS = os;
        }

        /// <summary> Initializes a new instance of <see cref="ContainerRegistryPlatformProperties"/>. </summary>
        /// <param name="os"> The operating system type required for the run. </param>
        /// <param name="architecture"> The OS architecture. </param>
        /// <param name="variant"> Variant of the CPU. </param>
        /// <param name="rawData"> Keeps track of any properties unknown to the library. </param>
        internal ContainerRegistryPlatformProperties(ContainerRegistryOS os, ContainerRegistryOSArchitecture? architecture, ContainerRegistryCpuVariant? variant, Dictionary<string, BinaryData> rawData)
        {
            OS = os;
            Architecture = architecture;
            Variant = variant;
            _rawData = rawData;
        }

        /// <summary> Initializes a new instance of <see cref="ContainerRegistryPlatformProperties"/> for deserialization. </summary>
        internal ContainerRegistryPlatformProperties()
        {
        }

        /// <summary> The operating system type required for the run. </summary>
        public ContainerRegistryOS OS { get; set; }
        /// <summary> The OS architecture. </summary>
        public ContainerRegistryOSArchitecture? Architecture { get; set; }
        /// <summary> Variant of the CPU. </summary>
        public ContainerRegistryCpuVariant? Variant { get; set; }
    }
}
