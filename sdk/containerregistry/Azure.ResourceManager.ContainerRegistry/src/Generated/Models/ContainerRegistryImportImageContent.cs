// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.ContainerRegistry.Models
{
    /// <summary> The ContainerRegistryImportImageContent. </summary>
    public partial class ContainerRegistryImportImageContent
    {
        /// <summary> Initializes a new instance of <see cref="ContainerRegistryImportImageContent"/>. </summary>
        /// <param name="source"> The source of the image. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="source"/> is null. </exception>
        public ContainerRegistryImportImageContent(ContainerRegistryImportSource source)
        {
            Argument.AssertNotNull(source, nameof(source));

            Source = source;
            TargetTags = new ChangeTrackingList<string>();
            UntaggedTargetRepositories = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of <see cref="ContainerRegistryImportImageContent"/>. </summary>
        /// <param name="source"> The source of the image. </param>
        /// <param name="targetTags"> List of strings of the form repo[:tag]. When tag is omitted the source will be used (or 'latest' if source tag is also omitted). </param>
        /// <param name="untaggedTargetRepositories"> List of strings of repository names to do a manifest only copy. No tag will be created. </param>
        /// <param name="mode"> When Force, any existing target tags will be overwritten. When NoForce, any existing target tags will fail the operation before any copying begins. </param>
        internal ContainerRegistryImportImageContent(ContainerRegistryImportSource source, IList<string> targetTags, IList<string> untaggedTargetRepositories, ContainerRegistryImportMode? mode)
        {
            Source = source;
            TargetTags = targetTags;
            UntaggedTargetRepositories = untaggedTargetRepositories;
            Mode = mode;
        }

        /// <summary> The source of the image. </summary>
        public ContainerRegistryImportSource Source { get; }
        /// <summary> List of strings of the form repo[:tag]. When tag is omitted the source will be used (or 'latest' if source tag is also omitted). </summary>
        public IList<string> TargetTags { get; }
        /// <summary> List of strings of repository names to do a manifest only copy. No tag will be created. </summary>
        public IList<string> UntaggedTargetRepositories { get; }
        /// <summary> When Force, any existing target tags will be overwritten. When NoForce, any existing target tags will fail the operation before any copying begins. </summary>
        public ContainerRegistryImportMode? Mode { get; set; }
    }
}
