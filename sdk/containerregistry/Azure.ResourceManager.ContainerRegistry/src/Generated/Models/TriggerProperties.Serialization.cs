// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ContainerRegistry.Models
{
    public partial class TriggerProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(TimerTriggers))
            {
                writer.WritePropertyName("timerTriggers");
                writer.WriteStartArray();
                foreach (var item in TimerTriggers)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(SourceTriggers))
            {
                writer.WritePropertyName("sourceTriggers");
                writer.WriteStartArray();
                foreach (var item in SourceTriggers)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(BaseImageTrigger))
            {
                writer.WritePropertyName("baseImageTrigger");
                writer.WriteObjectValue(BaseImageTrigger);
            }
            writer.WriteEndObject();
        }

        internal static TriggerProperties DeserializeTriggerProperties(JsonElement element)
        {
            Optional<IList<TimerTrigger>> timerTriggers = default;
            Optional<IList<SourceTrigger>> sourceTriggers = default;
            Optional<BaseImageTrigger> baseImageTrigger = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("timerTriggers"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<TimerTrigger> array = new List<TimerTrigger>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(TimerTrigger.DeserializeTimerTrigger(item));
                    }
                    timerTriggers = array;
                    continue;
                }
                if (property.NameEquals("sourceTriggers"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<SourceTrigger> array = new List<SourceTrigger>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(SourceTrigger.DeserializeSourceTrigger(item));
                    }
                    sourceTriggers = array;
                    continue;
                }
                if (property.NameEquals("baseImageTrigger"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    baseImageTrigger = BaseImageTrigger.DeserializeBaseImageTrigger(property.Value);
                    continue;
                }
            }
            return new TriggerProperties(Optional.ToList(timerTriggers), Optional.ToList(sourceTriggers), baseImageTrigger.Value);
        }
    }
}
