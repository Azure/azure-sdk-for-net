// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.ContainerRegistry.Models
{
    /// <summary> The request properties provided for a pipeline run. </summary>
    public partial class PipelineRunContent
    {
        /// <summary> Initializes a new instance of PipelineRunContent. </summary>
        public PipelineRunContent()
        {
            Artifacts = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of PipelineRunContent. </summary>
        /// <param name="pipelineResourceId"> The resource ID of the pipeline to run. </param>
        /// <param name="artifacts">
        /// List of source artifacts to be transferred by the pipeline. 
        /// Specify an image by repository (&apos;hello-world&apos;). This will use the &apos;latest&apos; tag.
        /// Specify an image by tag (&apos;hello-world:latest&apos;).
        /// Specify an image by sha256-based manifest digest (&apos;hello-world@sha256:abc123&apos;).
        /// </param>
        /// <param name="source"> The source properties of the pipeline run. </param>
        /// <param name="target"> The target properties of the pipeline run. </param>
        /// <param name="catalogDigest"> The digest of the tar used to transfer the artifacts. </param>
        internal PipelineRunContent(ResourceIdentifier pipelineResourceId, IList<string> artifacts, PipelineRunSourceProperties source, PipelineRunTargetProperties target, string catalogDigest)
        {
            PipelineResourceId = pipelineResourceId;
            Artifacts = artifacts;
            Source = source;
            Target = target;
            CatalogDigest = catalogDigest;
        }

        /// <summary> The resource ID of the pipeline to run. </summary>
        public ResourceIdentifier PipelineResourceId { get; set; }
        /// <summary>
        /// List of source artifacts to be transferred by the pipeline. 
        /// Specify an image by repository (&apos;hello-world&apos;). This will use the &apos;latest&apos; tag.
        /// Specify an image by tag (&apos;hello-world:latest&apos;).
        /// Specify an image by sha256-based manifest digest (&apos;hello-world@sha256:abc123&apos;).
        /// </summary>
        public IList<string> Artifacts { get; }
        /// <summary> The source properties of the pipeline run. </summary>
        public PipelineRunSourceProperties Source { get; set; }
        /// <summary> The target properties of the pipeline run. </summary>
        public PipelineRunTargetProperties Target { get; set; }
        /// <summary> The digest of the tar used to transfer the artifacts. </summary>
        public string CatalogDigest { get; set; }
    }
}
