// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ContainerRegistry.Models
{
    public partial class PipelineRunResult
    {
        internal static PipelineRunResult DeserializePipelineRunResult(JsonElement element)
        {
            Optional<string> status = default;
            Optional<IReadOnlyList<string>> importedArtifacts = default;
            Optional<PipelineProgress> progress = default;
            Optional<DateTimeOffset> startTime = default;
            Optional<DateTimeOffset> finishTime = default;
            Optional<ImportPipelineSourceProperties> source = default;
            Optional<ExportPipelineTargetProperties> target = default;
            Optional<string> catalogDigest = default;
            Optional<PipelineTriggerDescriptor> trigger = default;
            Optional<string> pipelineRunErrorMessage = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("status"))
                {
                    status = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("importedArtifacts"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    importedArtifacts = array;
                    continue;
                }
                if (property.NameEquals("progress"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    progress = PipelineProgress.DeserializePipelineProgress(property.Value);
                    continue;
                }
                if (property.NameEquals("startTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    startTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("finishTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    finishTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("source"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    source = ImportPipelineSourceProperties.DeserializeImportPipelineSourceProperties(property.Value);
                    continue;
                }
                if (property.NameEquals("target"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    target = ExportPipelineTargetProperties.DeserializeExportPipelineTargetProperties(property.Value);
                    continue;
                }
                if (property.NameEquals("catalogDigest"))
                {
                    catalogDigest = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("trigger"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    trigger = PipelineTriggerDescriptor.DeserializePipelineTriggerDescriptor(property.Value);
                    continue;
                }
                if (property.NameEquals("pipelineRunErrorMessage"))
                {
                    pipelineRunErrorMessage = property.Value.GetString();
                    continue;
                }
            }
            return new PipelineRunResult(status.Value, Optional.ToList(importedArtifacts), progress.Value, Optional.ToNullable(startTime), Optional.ToNullable(finishTime), source.Value, target.Value, catalogDigest.Value, trigger.Value, pipelineRunErrorMessage.Value);
        }
    }
}
