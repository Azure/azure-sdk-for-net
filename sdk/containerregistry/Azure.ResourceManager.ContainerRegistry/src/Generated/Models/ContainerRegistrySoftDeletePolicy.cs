// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.ContainerRegistry.Models
{
    /// <summary> The soft delete policy for a container registry. </summary>
    public partial class ContainerRegistrySoftDeletePolicy
    {
        /// <summary> Initializes a new instance of ContainerRegistrySoftDeletePolicy. </summary>
        public ContainerRegistrySoftDeletePolicy()
        {
        }

        /// <summary> Initializes a new instance of ContainerRegistrySoftDeletePolicy. </summary>
        /// <param name="retentionDays"> The number of days after which a soft-deleted item is permanently deleted. </param>
        /// <param name="lastUpdatedOn"> The timestamp when the policy was last updated. </param>
        /// <param name="status"> The value that indicates whether the policy is enabled or not. </param>
        internal ContainerRegistrySoftDeletePolicy(int? retentionDays, DateTimeOffset? lastUpdatedOn, ContainerRegistryPolicyStatus? status)
        {
            RetentionDays = retentionDays;
            LastUpdatedOn = lastUpdatedOn;
            Status = status;
        }

        /// <summary> The number of days after which a soft-deleted item is permanently deleted. </summary>
        public int? RetentionDays { get; set; }
        /// <summary> The timestamp when the policy was last updated. </summary>
        public DateTimeOffset? LastUpdatedOn { get; }
        /// <summary> The value that indicates whether the policy is enabled or not. </summary>
        public ContainerRegistryPolicyStatus? Status { get; set; }
    }
}
