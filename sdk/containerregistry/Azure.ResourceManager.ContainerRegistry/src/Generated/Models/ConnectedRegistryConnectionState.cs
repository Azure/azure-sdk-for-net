// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.ContainerRegistry.Models
{
    /// <summary> The current connection state of the connected registry. </summary>
    public readonly partial struct ConnectedRegistryConnectionState : IEquatable<ConnectedRegistryConnectionState>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="ConnectedRegistryConnectionState"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ConnectedRegistryConnectionState(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string OnlineValue = "Online";
        private const string OfflineValue = "Offline";
        private const string SyncingValue = "Syncing";
        private const string UnhealthyValue = "Unhealthy";

        /// <summary> Online. </summary>
        public static ConnectedRegistryConnectionState Online { get; } = new ConnectedRegistryConnectionState(OnlineValue);
        /// <summary> Offline. </summary>
        public static ConnectedRegistryConnectionState Offline { get; } = new ConnectedRegistryConnectionState(OfflineValue);
        /// <summary> Syncing. </summary>
        public static ConnectedRegistryConnectionState Syncing { get; } = new ConnectedRegistryConnectionState(SyncingValue);
        /// <summary> Unhealthy. </summary>
        public static ConnectedRegistryConnectionState Unhealthy { get; } = new ConnectedRegistryConnectionState(UnhealthyValue);
        /// <summary> Determines if two <see cref="ConnectedRegistryConnectionState"/> values are the same. </summary>
        public static bool operator ==(ConnectedRegistryConnectionState left, ConnectedRegistryConnectionState right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ConnectedRegistryConnectionState"/> values are not the same. </summary>
        public static bool operator !=(ConnectedRegistryConnectionState left, ConnectedRegistryConnectionState right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="ConnectedRegistryConnectionState"/>. </summary>
        public static implicit operator ConnectedRegistryConnectionState(string value) => new ConnectedRegistryConnectionState(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ConnectedRegistryConnectionState other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ConnectedRegistryConnectionState other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
