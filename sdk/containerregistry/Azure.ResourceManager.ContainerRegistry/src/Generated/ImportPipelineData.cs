// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.ContainerRegistry.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.ContainerRegistry
{
    /// <summary> A class representing the ImportPipeline data model. </summary>
    public partial class ImportPipelineData : ResourceData
    {
        /// <summary> Initializes a new instance of ImportPipelineData. </summary>
        public ImportPipelineData()
        {
            Options = new ChangeTrackingList<PipelineOption>();
        }

        /// <summary> Initializes a new instance of ImportPipelineData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="location"> The location of the import pipeline. </param>
        /// <param name="identity"> The identity of the import pipeline. </param>
        /// <param name="source"> The source properties of the import pipeline. </param>
        /// <param name="trigger"> The properties that describe the trigger of the import pipeline. </param>
        /// <param name="options"> The list of all options configured for the pipeline. </param>
        /// <param name="provisioningState"> The provisioning state of the pipeline at the time the operation was called. </param>
        internal ImportPipelineData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, AzureLocation? location, ManagedServiceIdentity identity, ImportPipelineSourceProperties source, PipelineTriggerProperties trigger, IList<PipelineOption> options, ContainerRegistryProvisioningState? provisioningState) : base(id, name, resourceType, systemData)
        {
            Location = location;
            Identity = identity;
            Source = source;
            Trigger = trigger;
            Options = options;
            ProvisioningState = provisioningState;
        }

        /// <summary> The location of the import pipeline. </summary>
        public AzureLocation? Location { get; set; }
        /// <summary> The identity of the import pipeline. </summary>
        public ManagedServiceIdentity Identity { get; set; }
        /// <summary> The source properties of the import pipeline. </summary>
        public ImportPipelineSourceProperties Source { get; set; }
        /// <summary> The properties that describe the trigger of the import pipeline. </summary>
        internal PipelineTriggerProperties Trigger { get; set; }
        /// <summary> The current status of the source trigger. </summary>
        public ContainerRegistryTriggerStatus? SourceTriggerStatus
        {
            get => Trigger is null ? default : Trigger.SourceTriggerStatus;
            set
            {
                if (value.HasValue)
                {
                    if (Trigger is null)
                        Trigger = new PipelineTriggerProperties();
                    Trigger.SourceTriggerStatus = value.Value;
                }
                else
                {
                    Trigger = null;
                }
            }
        }

        /// <summary> The list of all options configured for the pipeline. </summary>
        public IList<PipelineOption> Options { get; }
        /// <summary> The provisioning state of the pipeline at the time the operation was called. </summary>
        public ContainerRegistryProvisioningState? ProvisioningState { get; }
    }
}
