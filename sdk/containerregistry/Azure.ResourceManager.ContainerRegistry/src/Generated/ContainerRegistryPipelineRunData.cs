// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager.ContainerRegistry.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.ContainerRegistry
{
    /// <summary> A class representing the ContainerRegistryPipelineRun data model. </summary>
    public partial class ContainerRegistryPipelineRunData : ResourceData
    {
        /// <summary> Initializes a new instance of ContainerRegistryPipelineRunData. </summary>
        public ContainerRegistryPipelineRunData()
        {
        }

        /// <summary> Initializes a new instance of ContainerRegistryPipelineRunData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="provisioningState"> The provisioning state of a pipeline run. </param>
        /// <param name="request"> The request parameters for a pipeline run. </param>
        /// <param name="response"> The response of a pipeline run. </param>
        /// <param name="forceUpdateTag"> How the pipeline run should be forced to recreate even if the pipeline run configuration has not changed. </param>
        internal ContainerRegistryPipelineRunData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, ContainerRegistryProvisioningState? provisioningState, PipelineRunContent request, PipelineRunResult response, string forceUpdateTag) : base(id, name, resourceType, systemData)
        {
            ProvisioningState = provisioningState;
            Request = request;
            Response = response;
            ForceUpdateTag = forceUpdateTag;
        }

        /// <summary> The provisioning state of a pipeline run. </summary>
        public ContainerRegistryProvisioningState? ProvisioningState { get; }
        /// <summary> The request parameters for a pipeline run. </summary>
        public PipelineRunContent Request { get; set; }
        /// <summary> The response of a pipeline run. </summary>
        public PipelineRunResult Response { get; }
        /// <summary> How the pipeline run should be forced to recreate even if the pipeline run configuration has not changed. </summary>
        public string ForceUpdateTag { get; set; }
    }
}
