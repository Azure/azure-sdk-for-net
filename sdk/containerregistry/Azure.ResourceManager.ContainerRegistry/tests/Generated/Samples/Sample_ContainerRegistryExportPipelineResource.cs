// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.ContainerRegistry.Models;
using Azure.ResourceManager.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.ContainerRegistry.Samples
{
    public partial class Sample_ContainerRegistryExportPipelineResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_ExportPipelineGet()
        {
            // Generated from example definition: specification/containerregistry/resource-manager/Microsoft.ContainerRegistry/preview/2024-11-01-preview/examples/ExportPipelineGet.json
            // this example is just showing the usage of "ExportPipelines_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ContainerRegistryExportPipelineResource created on azure
            // for more information of creating ContainerRegistryExportPipelineResource, please refer to the document of ContainerRegistryExportPipelineResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string registryName = "myRegistry";
            string exportPipelineName = "myExportPipeline";
            ResourceIdentifier containerRegistryExportPipelineResourceId = ContainerRegistryExportPipelineResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, registryName, exportPipelineName);
            ContainerRegistryExportPipelineResource containerRegistryExportPipeline = client.GetContainerRegistryExportPipelineResource(containerRegistryExportPipelineResourceId);

            // invoke the operation
            ContainerRegistryExportPipelineResource result = await containerRegistryExportPipeline.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ContainerRegistryExportPipelineData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_ExportPipelineDelete()
        {
            // Generated from example definition: specification/containerregistry/resource-manager/Microsoft.ContainerRegistry/preview/2024-11-01-preview/examples/ExportPipelineDelete.json
            // this example is just showing the usage of "ExportPipelines_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ContainerRegistryExportPipelineResource created on azure
            // for more information of creating ContainerRegistryExportPipelineResource, please refer to the document of ContainerRegistryExportPipelineResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string registryName = "myRegistry";
            string exportPipelineName = "myExportPipeline";
            ResourceIdentifier containerRegistryExportPipelineResourceId = ContainerRegistryExportPipelineResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, registryName, exportPipelineName);
            ContainerRegistryExportPipelineResource containerRegistryExportPipeline = client.GetContainerRegistryExportPipelineResource(containerRegistryExportPipelineResourceId);

            // invoke the operation
            await containerRegistryExportPipeline.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_ExportPipelineCreate()
        {
            // Generated from example definition: specification/containerregistry/resource-manager/Microsoft.ContainerRegistry/preview/2024-11-01-preview/examples/ExportPipelineCreate.json
            // this example is just showing the usage of "ExportPipelines_Create" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ContainerRegistryExportPipelineResource created on azure
            // for more information of creating ContainerRegistryExportPipelineResource, please refer to the document of ContainerRegistryExportPipelineResource
            string subscriptionId = "00000000-0000-0000-0000-000000000000";
            string resourceGroupName = "myResourceGroup";
            string registryName = "myRegistry";
            string exportPipelineName = "myExportPipeline";
            ResourceIdentifier containerRegistryExportPipelineResourceId = ContainerRegistryExportPipelineResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, registryName, exportPipelineName);
            ContainerRegistryExportPipelineResource containerRegistryExportPipeline = client.GetContainerRegistryExportPipelineResource(containerRegistryExportPipelineResourceId);

            // invoke the operation
            ContainerRegistryExportPipelineData data = new ContainerRegistryExportPipelineData
            {
                Location = new AzureLocation("westus"),
                Identity = new ManagedServiceIdentity("SystemAssigned"),
                Target = new ExportPipelineTargetProperties(new Uri("https://myvault.vault.azure.net/secrets/acrexportsas"))
                {
                    PipelineTargetType = "AzureStorageBlobContainer",
                    Uri = new Uri("https://accountname.blob.core.windows.net/containername"),
                },
                Options = { ContainerRegistryPipelineOption.OverwriteBlobs },
            };
            ArmOperation<ContainerRegistryExportPipelineResource> lro = await containerRegistryExportPipeline.UpdateAsync(WaitUntil.Completed, data);
            ContainerRegistryExportPipelineResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ContainerRegistryExportPipelineData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
