// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.Containers.ContainerRegistry.Models
{
    /// <summary> Returns the requested manifest file. </summary>
    internal partial class ManifestWrapper : Manifest
    {
        /// <summary> Initializes a new instance of ManifestWrapper. </summary>
        internal ManifestWrapper()
        {
            Manifests = new ChangeTrackingList<ManifestListAttributes>();
            Layers = new ChangeTrackingList<Descriptor>();
            FsLayers = new ChangeTrackingList<FsLayer>();
            History = new ChangeTrackingList<History>();
            Signatures = new ChangeTrackingList<ImageSignature>();
        }

        /// <summary> Media type for this Manifest. </summary>
        public string MediaType { get; }
        /// <summary> (ManifestList, OCIIndex) List of V2 image layer information. </summary>
        public IReadOnlyList<ManifestListAttributes> Manifests { get; }
        /// <summary> (V2, OCI) Image config descriptor. </summary>
        public Descriptor Config { get; }
        /// <summary> (V2, OCI) List of V2 image layer information. </summary>
        public IReadOnlyList<Descriptor> Layers { get; }
        /// <summary> (OCI, OCIIndex) Additional metadata. </summary>
        public Annotations Annotations { get; }
        /// <summary> (V1) CPU architecture. </summary>
        public string Architecture { get; }
        /// <summary> (V1) Image name. </summary>
        public string Name { get; }
        /// <summary> (V1) Image tag. </summary>
        public string Tag { get; }
        /// <summary> (V1) List of layer information. </summary>
        public IReadOnlyList<FsLayer> FsLayers { get; }
        /// <summary> (V1) Image history. </summary>
        public IReadOnlyList<History> History { get; }
        /// <summary> (V1) Image signature. </summary>
        public IReadOnlyList<ImageSignature> Signatures { get; }
    }
}
