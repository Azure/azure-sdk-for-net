// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.Containers.ContainerRegistry.Models
{
    /// <summary> Returns the requested manifest file. </summary>
    public partial class CombinedManifest : Manifest
    {
        /// <summary> Initializes a new instance of CombinedManifest. </summary>
        public CombinedManifest()
        {
            Manifests = new ChangeTrackingList<ManifestListAttributes>();
            Layers = new ChangeTrackingList<ContentDescriptor>();
        }

        /// <summary> Initializes a new instance of CombinedManifest. </summary>
        /// <param name="schemaVersion"> Schema version. </param>
        /// <param name="mediaType"> Media type for this Manifest. </param>
        /// <param name="manifests"> (ManifestList, OCIIndex) List of V2 image layer information. </param>
        /// <param name="config"> (V2, OCI) Image config descriptor. </param>
        /// <param name="layers"> (V2, OCI) List of V2 image layer information. </param>
        /// <param name="annotations"> (OCI, OCIIndex) Additional metadata. </param>
        internal CombinedManifest(int? schemaVersion, string mediaType, IList<ManifestListAttributes> manifests, ContentDescriptor config, IList<ContentDescriptor> layers, Annotations annotations) : base(schemaVersion)
        {
            MediaType = mediaType;
            Manifests = manifests;
            Config = config;
            Layers = layers;
            Annotations = annotations;
        }

        /// <summary> Media type for this Manifest. </summary>
        public string MediaType { get; set; }
        /// <summary> (ManifestList, OCIIndex) List of V2 image layer information. </summary>
        public IList<ManifestListAttributes> Manifests { get; }
        /// <summary> (V2, OCI) Image config descriptor. </summary>
        public ContentDescriptor Config { get; set; }
        /// <summary> (V2, OCI) List of V2 image layer information. </summary>
        public IList<ContentDescriptor> Layers { get; }
        /// <summary> (OCI, OCIIndex) Additional metadata. </summary>
        public Annotations Annotations { get; set; }
    }
}
