// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Containers.ContainerRegistry
{
    /// <summary> Repository attributes. </summary>
    public partial class RepositoryProperties
    {
        /// <summary> Initializes a new instance of RepositoryProperties. </summary>
        internal RepositoryProperties()
        {
        }

        /// <summary> Initializes a new instance of RepositoryProperties. </summary>
        /// <param name="registry"> Registry name. </param>
        /// <param name="name"> Image name. </param>
        /// <param name="createdOn"> Image created time. </param>
        /// <param name="lastUpdatedOn"> Image last update time. </param>
        /// <param name="registryArtifactCount"> Number of the manifests. </param>
        /// <param name="tagCount"> Number of the tags. </param>
        /// <param name="writeableProperties"> Changeable attributes. </param>
        internal RepositoryProperties(string registry, string name, DateTimeOffset? createdOn, DateTimeOffset? lastUpdatedOn, int? registryArtifactCount, int? tagCount, ContentProperties writeableProperties)
        {
            Registry = registry;
            Name = name;
            CreatedOn = createdOn;
            LastUpdatedOn = lastUpdatedOn;
            RegistryArtifactCount = registryArtifactCount;
            TagCount = tagCount;
            WriteableProperties = writeableProperties;
        }

        /// <summary> Registry name. </summary>
        public string Registry { get; }
        /// <summary> Image name. </summary>
        public string Name { get; }
        /// <summary> Image created time. </summary>
        public DateTimeOffset? CreatedOn { get; }
        /// <summary> Image last update time. </summary>
        public DateTimeOffset? LastUpdatedOn { get; }
        /// <summary> Number of the manifests. </summary>
        public int? RegistryArtifactCount { get; }
        /// <summary> Number of the tags. </summary>
        public int? TagCount { get; }
        /// <summary> Changeable attributes. </summary>
        public ContentProperties WriteableProperties { get; }
    }
}
