// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Containers.ContainerRegistry
{
    /// <summary> Repository attributes. </summary>
    public partial class RepositoryProperties
    {
        /// <summary> Initializes a new instance of RepositoryProperties. </summary>
        /// <param name="name"> Image name. </param>
        /// <param name="createdOn"> Image created time. </param>
        /// <param name="lastUpdatedOn"> Image last update time. </param>
        /// <param name="manifestCount"> Number of the manifests. </param>
        /// <param name="tagCount"> Number of the tags. </param>
        /// <param name="writeableProperties"> Writeable properties of the resource. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> or <paramref name="writeableProperties"/> is null. </exception>
        internal RepositoryProperties(string name, DateTimeOffset createdOn, DateTimeOffset lastUpdatedOn, int manifestCount, int tagCount, RepositoryWriteableProperties writeableProperties)
        {
            if (name == null)
            {
                throw new ArgumentNullException(nameof(name));
            }
            if (writeableProperties == null)
            {
                throw new ArgumentNullException(nameof(writeableProperties));
            }

            Name = name;
            CreatedOn = createdOn;
            LastUpdatedOn = lastUpdatedOn;
            ManifestCount = manifestCount;
            TagCount = tagCount;
            WriteableProperties = writeableProperties;
        }

        /// <summary> Image name. </summary>
        public string Name { get; }
        /// <summary> Image created time. </summary>
        public DateTimeOffset CreatedOn { get; }
        /// <summary> Image last update time. </summary>
        public DateTimeOffset LastUpdatedOn { get; }
        /// <summary> Number of the manifests. </summary>
        public int ManifestCount { get; }
        /// <summary> Number of the tags. </summary>
        public int TagCount { get; }
        /// <summary> Writeable properties of the resource. </summary>
        public RepositoryWriteableProperties WriteableProperties { get; }
    }
}
