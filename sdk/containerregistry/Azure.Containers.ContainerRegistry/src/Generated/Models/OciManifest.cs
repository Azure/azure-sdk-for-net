// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.Containers.ContainerRegistry.Specialized
{
    /// <summary> Returns the requested OCI Manifest file. </summary>
    public partial class OciManifest
    {
        /// <summary> Initializes a new instance of OciManifest. </summary>
        public OciManifest()
        {
            Layers = new ChangeTrackingList<OciBlobDescriptor>();
        }

        /// <summary> Initializes a new instance of OciManifest. </summary>
        /// <param name="config"> V2 image config descriptor. </param>
        /// <param name="layers"> List of V2 image layer information. </param>
        /// <param name="annotations"> Additional information provided through arbitrary metadata. </param>
        /// <param name="schemaVersion"> Schema version. </param>
        internal OciManifest(OciBlobDescriptor config, IList<OciBlobDescriptor> layers, OciAnnotations annotations, int? schemaVersion)
        {
            Config = config;
            Layers = layers;
            Annotations = annotations;
            SchemaVersion = schemaVersion;
        }

        /// <summary> V2 image config descriptor. </summary>
        public OciBlobDescriptor Config { get; set; }
        /// <summary> List of V2 image layer information. </summary>
        public IList<OciBlobDescriptor> Layers { get; }
    }
}
