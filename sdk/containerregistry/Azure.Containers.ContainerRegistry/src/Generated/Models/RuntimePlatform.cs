// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.Containers.ContainerRegistry.Storage.Models
{
    /// <summary> The platform object describes the platform which the image in the manifest runs on. A full list of valid operating system and architecture values are listed in the Go language documentation for $GOOS and $GOARCH. </summary>
    public partial class RuntimePlatform
    {
        /// <summary> Initializes a new instance of RuntimePlatform. </summary>
        public RuntimePlatform()
        {
            OsFeatures = new ChangeTrackingList<string>();
            CpuFeatures = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of RuntimePlatform. </summary>
        /// <param name="cpuArchitecture"> Specifies the CPU architecture, for example amd64 or ppc64le. </param>
        /// <param name="operatingSystem"> The os field specifies the operating system, for example linux or windows. </param>
        /// <param name="osVersion"> The optional os.version field specifies the operating system version, for example 10.0.10586. </param>
        /// <param name="osFeatures"> The optional os.features field specifies an array of strings, each listing a required OS feature (for example on Windows win32k. </param>
        /// <param name="variant"> The optional variant field specifies a variant of the CPU, for example armv6l to specify a particular CPU variant of the ARM CPU. </param>
        /// <param name="cpuFeatures"> The optional features field specifies an array of strings, each listing a required CPU feature (for example sse4 or aes. </param>
        internal RuntimePlatform(string cpuArchitecture, string operatingSystem, string osVersion, IList<string> osFeatures, string variant, IList<string> cpuFeatures)
        {
            CpuArchitecture = cpuArchitecture;
            OperatingSystem = operatingSystem;
            OsVersion = osVersion;
            OsFeatures = osFeatures;
            Variant = variant;
            CpuFeatures = cpuFeatures;
        }
        /// <summary> The optional os.version field specifies the operating system version, for example 10.0.10586. </summary>
        public string OsVersion { get; set; }
        /// <summary> The optional os.features field specifies an array of strings, each listing a required OS feature (for example on Windows win32k. </summary>
        public IList<string> OsFeatures { get; }
        /// <summary> The optional variant field specifies a variant of the CPU, for example armv6l to specify a particular CPU variant of the ARM CPU. </summary>
        public string Variant { get; set; }
    }
}
