// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.SoftwarePlan
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// HybridUseBenefitOperations operations.
    /// </summary>
    public partial interface IHybridUseBenefitOperations
    {
        /// <summary>
        /// Get all hybrid use benefits associated with an ARM resource.
        /// </summary>
        /// <param name='scope'>
        /// The scope at which the operation is performed. This is limited to
        /// Microsoft.Compute/virtualMachines and
        /// Microsoft.Compute/hostGroups/hosts for now
        /// </param>
        /// <param name='filter'>
        /// Supports applying filter on the type of SKU
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<HybridUseBenefitModel>>> ListWithHttpMessagesAsync(string scope, string filter = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Create a new hybrid use benefit under a given scope
        /// </summary>
        /// <param name='scope'>
        /// The scope at which the operation is performed. This is limited to
        /// Microsoft.Compute/virtualMachines and
        /// Microsoft.Compute/hostGroups/hosts for now
        /// </param>
        /// <param name='planId'>
        /// This is a unique identifier for a plan. Should be a guid.
        /// </param>
        /// <param name='sku'>
        /// Hybrid use benefit SKU
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<HybridUseBenefitModel>> CreateWithHttpMessagesAsync(string scope, string planId, Sku sku, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates an existing hybrid use benefit
        /// </summary>
        /// <param name='scope'>
        /// The scope at which the operation is performed. This is limited to
        /// Microsoft.Compute/virtualMachines and
        /// Microsoft.Compute/hostGroups/hosts for now
        /// </param>
        /// <param name='planId'>
        /// This is a unique identifier for a plan. Should be a guid.
        /// </param>
        /// <param name='sku'>
        /// Hybrid use benefit SKU
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<HybridUseBenefitModel>> UpdateWithHttpMessagesAsync(string scope, string planId, Sku sku, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets a given plan ID
        /// </summary>
        /// <param name='scope'>
        /// The scope at which the operation is performed. This is limited to
        /// Microsoft.Compute/virtualMachines and
        /// Microsoft.Compute/hostGroups/hosts for now
        /// </param>
        /// <param name='planId'>
        /// This is a unique identifier for a plan. Should be a guid.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<HybridUseBenefitModel>> GetWithHttpMessagesAsync(string scope, string planId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Deletes a given plan ID
        /// </summary>
        /// <param name='scope'>
        /// The scope at which the operation is performed. This is limited to
        /// Microsoft.Compute/virtualMachines and
        /// Microsoft.Compute/hostGroups/hosts for now
        /// </param>
        /// <param name='planId'>
        /// This is a unique identifier for a plan. Should be a guid.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse> DeleteWithHttpMessagesAsync(string scope, string planId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get all hybrid use benefits associated with an ARM resource.
        /// </summary>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<HybridUseBenefitModel>>> ListNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
