<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="PatchAsync(string,string,RequestContent,string,string,RequestContext)">
      <example>
This sample shows how to call PatchAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TestRunsClient client = new TestRunsClient(endpoint);

using RequestContent content = null;
Response response = await client.PatchAsync("<workspaceId>", "<testRunId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("displayName").ToString());
]]></code>
This sample shows how to call PatchAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TestRunsClient client = new TestRunsClient(endpoint);

using RequestContent content = RequestContent.Create(new
{
    runId = "<runId>",
    displayName = "<displayName>",
    creatorId = "<creatorId>",
    creatorName = "<creatorName>",
    summary = new
    {
        status = "<status>",
        billableTime = 1234L,
        numBrowserSessions = 1234L,
        maxConcurrentBrowserSessions = 1234,
        startTime = "<startTime>",
        endTime = "<endTime>",
        duration = 1234L,
        errorMessages = new object[]
        {
            "<errorMessages>"
        },
    },
    ciConfig = new
    {
        providerName = "<providerName>",
        branch = "<branch>",
        author = "<author>",
        commitId = "<commitId>",
        revisionUrl = "<revisionUrl>",
    },
    config = new
    {
        framework = new
        {
            name = "<name>",
            version = "<version>",
            runnerName = "<runnerName>",
        },
        sdkLanguage = "<sdkLanguage>",
    },
});
Response response = await client.PatchAsync("<workspaceId>", "<testRunId>", content, authorization: "<authorization>", xCorrelationId: "<xCorrelationId>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("runId").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("creatorId").ToString());
Console.WriteLine(result.GetProperty("creatorName").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("billableTime").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("numBrowserSessions").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("maxConcurrentBrowserSessions").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("duration").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("errorMessages")[0].ToString());
Console.WriteLine(result.GetProperty("ciConfig").GetProperty("providerName").ToString());
Console.WriteLine(result.GetProperty("ciConfig").GetProperty("branch").ToString());
Console.WriteLine(result.GetProperty("ciConfig").GetProperty("author").ToString());
Console.WriteLine(result.GetProperty("ciConfig").GetProperty("commitId").ToString());
Console.WriteLine(result.GetProperty("ciConfig").GetProperty("revisionUrl").ToString());
Console.WriteLine(result.GetProperty("config").GetProperty("framework").GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("config").GetProperty("framework").GetProperty("version").ToString());
Console.WriteLine(result.GetProperty("config").GetProperty("framework").GetProperty("runnerName").ToString());
Console.WriteLine(result.GetProperty("config").GetProperty("sdkLanguage").ToString());
]]></code></example>
    </member>
    <member name="Patch(string,string,RequestContent,string,string,RequestContext)">
      <example>
This sample shows how to call Patch and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TestRunsClient client = new TestRunsClient(endpoint);

using RequestContent content = null;
Response response = client.Patch("<workspaceId>", "<testRunId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("displayName").ToString());
]]></code>
This sample shows how to call Patch with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TestRunsClient client = new TestRunsClient(endpoint);

using RequestContent content = RequestContent.Create(new
{
    runId = "<runId>",
    displayName = "<displayName>",
    creatorId = "<creatorId>",
    creatorName = "<creatorName>",
    summary = new
    {
        status = "<status>",
        billableTime = 1234L,
        numBrowserSessions = 1234L,
        maxConcurrentBrowserSessions = 1234,
        startTime = "<startTime>",
        endTime = "<endTime>",
        duration = 1234L,
        errorMessages = new object[]
        {
            "<errorMessages>"
        },
    },
    ciConfig = new
    {
        providerName = "<providerName>",
        branch = "<branch>",
        author = "<author>",
        commitId = "<commitId>",
        revisionUrl = "<revisionUrl>",
    },
    config = new
    {
        framework = new
        {
            name = "<name>",
            version = "<version>",
            runnerName = "<runnerName>",
        },
        sdkLanguage = "<sdkLanguage>",
    },
});
Response response = client.Patch("<workspaceId>", "<testRunId>", content, authorization: "<authorization>", xCorrelationId: "<xCorrelationId>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("runId").ToString());
Console.WriteLine(result.GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("creatorId").ToString());
Console.WriteLine(result.GetProperty("creatorName").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("billableTime").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("numBrowserSessions").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("maxConcurrentBrowserSessions").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("duration").ToString());
Console.WriteLine(result.GetProperty("summary").GetProperty("errorMessages")[0].ToString());
Console.WriteLine(result.GetProperty("ciConfig").GetProperty("providerName").ToString());
Console.WriteLine(result.GetProperty("ciConfig").GetProperty("branch").ToString());
Console.WriteLine(result.GetProperty("ciConfig").GetProperty("author").ToString());
Console.WriteLine(result.GetProperty("ciConfig").GetProperty("commitId").ToString());
Console.WriteLine(result.GetProperty("ciConfig").GetProperty("revisionUrl").ToString());
Console.WriteLine(result.GetProperty("config").GetProperty("framework").GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("config").GetProperty("framework").GetProperty("version").ToString());
Console.WriteLine(result.GetProperty("config").GetProperty("framework").GetProperty("runnerName").ToString());
Console.WriteLine(result.GetProperty("config").GetProperty("sdkLanguage").ToString());
]]></code></example>
    </member>
    <member name="GETAsync(string,string,int?,int?,string,string,RequestContext)">
      <example>
This sample shows how to call GETAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TestRunsClient client = new TestRunsClient(endpoint);

Response response = await client.GETAsync("<workspaceId>", null, null, null, null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GETAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TestRunsClient client = new TestRunsClient(endpoint);

Response response = await client.GETAsync("<workspaceId>", "<filter>", 1234, 1234, "<authorization>", "<xCorrelationId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("runId").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("creatorId").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("creatorName").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("summary").GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("summary").GetProperty("billableTime").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("summary").GetProperty("numBrowserSessions").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("summary").GetProperty("maxConcurrentBrowserSessions").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("summary").GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("summary").GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("summary").GetProperty("duration").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("summary").GetProperty("errorMessages")[0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("ciConfig").GetProperty("providerName").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("ciConfig").GetProperty("branch").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("ciConfig").GetProperty("author").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("ciConfig").GetProperty("commitId").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("ciConfig").GetProperty("revisionUrl").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("config").GetProperty("framework").GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("config").GetProperty("framework").GetProperty("version").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("config").GetProperty("framework").GetProperty("runnerName").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("config").GetProperty("sdkLanguage").ToString());
Console.WriteLine(result.GetProperty("nextLink").ToString());
Console.WriteLine(result.GetProperty("size").ToString());
]]></code></example>
    </member>
    <member name="GET(string,string,int?,int?,string,string,RequestContext)">
      <example>
This sample shows how to call GET and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TestRunsClient client = new TestRunsClient(endpoint);

Response response = client.GET("<workspaceId>", null, null, null, null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GET with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
TestRunsClient client = new TestRunsClient(endpoint);

Response response = client.GET("<workspaceId>", "<filter>", 1234, 1234, "<authorization>", "<xCorrelationId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("runId").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("creatorId").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("creatorName").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("summary").GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("summary").GetProperty("billableTime").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("summary").GetProperty("numBrowserSessions").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("summary").GetProperty("maxConcurrentBrowserSessions").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("summary").GetProperty("startTime").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("summary").GetProperty("endTime").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("summary").GetProperty("duration").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("summary").GetProperty("errorMessages")[0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("ciConfig").GetProperty("providerName").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("ciConfig").GetProperty("branch").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("ciConfig").GetProperty("author").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("ciConfig").GetProperty("commitId").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("ciConfig").GetProperty("revisionUrl").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("config").GetProperty("framework").GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("config").GetProperty("framework").GetProperty("version").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("config").GetProperty("framework").GetProperty("runnerName").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("config").GetProperty("sdkLanguage").ToString());
Console.WriteLine(result.GetProperty("nextLink").ToString());
Console.WriteLine(result.GetProperty("size").ToString());
]]></code></example>
    </member>
  </members>
</doc>