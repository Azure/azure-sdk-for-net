// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Identity;
using NUnit.Framework;

namespace ReportingTestReporting.Samples
{
    public partial class Samples_LinkStorageAccountClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PUT_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            LinkStorageAccountClient client = new LinkStorageAccountClient(endpoint);

            Response response = client.PUT("<workspaceId>", null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PUT_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            LinkStorageAccountClient client = new LinkStorageAccountClient(endpoint);

            Response response = await client.PUTAsync("<workspaceId>", null, null, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PUT_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            LinkStorageAccountClient client = new LinkStorageAccountClient(endpoint);

            Response response = client.PUT("<workspaceId>", "<authorization>", "<xCorrelationId>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("subscriptionId").ToString());
            Console.WriteLine(result.GetProperty("linkedAt").ToString());
            Console.WriteLine(result.GetProperty("accountId").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PUT_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            LinkStorageAccountClient client = new LinkStorageAccountClient(endpoint);

            Response response = await client.PUTAsync("<workspaceId>", "<authorization>", "<xCorrelationId>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("subscriptionId").ToString());
            Console.WriteLine(result.GetProperty("linkedAt").ToString());
            Console.WriteLine(result.GetProperty("accountId").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
        }
    }
}
