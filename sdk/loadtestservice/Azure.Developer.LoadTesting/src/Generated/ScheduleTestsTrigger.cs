// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.Developer.LoadTesting
{
    /// <summary> ScheduleTestsTrigger model. </summary>
    public partial class ScheduleTestsTrigger : LoadTestingTrigger
    {
        /// <summary> Initializes a new instance of <see cref="ScheduleTestsTrigger"/>. </summary>
        /// <param name="displayName"> The name of the trigger. </param>
        /// <param name="testIds"> The test id of test to be triggered by this schedule trigger. Currently only one test is supported for a trigger. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="displayName"/> or <paramref name="testIds"/> is null. </exception>
        public ScheduleTestsTrigger(string displayName, IEnumerable<string> testIds) : base(displayName)
        {
            Argument.AssertNotNull(displayName, nameof(displayName));
            Argument.AssertNotNull(testIds, nameof(testIds));

            Kind = TriggerType.ScheduleTestsTrigger;
            TestIds = testIds.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="ScheduleTestsTrigger"/>. </summary>
        /// <param name="triggerId"> The unique identifier of the trigger. </param>
        /// <param name="displayName"> The name of the trigger. </param>
        /// <param name="description"> The description of the trigger. </param>
        /// <param name="kind"> The type of the trigger. </param>
        /// <param name="state"> The current state of the trigger. </param>
        /// <param name="stateDetails"> Details of current state of the trigger. </param>
        /// <param name="createdDateTime"> The creation datetime(RFC 3339 literal format). </param>
        /// <param name="createdBy"> The user that created. </param>
        /// <param name="lastModifiedDateTime"> The last Modified datetime(RFC 3339 literal format). </param>
        /// <param name="lastModifiedBy"> The user that last modified. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="testIds"> The test id of test to be triggered by this schedule trigger. Currently only one test is supported for a trigger. </param>
        /// <param name="startDateTime"> Start date time of the trigger in UTC timezone. (RFC 3339 literal format). </param>
        /// <param name="recurrenceStatus"></param>
        /// <param name="recurrence">
        /// Recurrence details of the trigger. Null if schedule is not recurring.
        /// Please note <see cref="LoadTestingRecurrence"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="RecurrenceWithCron"/>, <see cref="DailyRecurrence"/>, <see cref="HourlyRecurrence"/>, <see cref="MonthlyRecurrenceByDates"/>, <see cref="MonthlyRecurrenceByWeekDays"/> and <see cref="WeeklyRecurrence"/>.
        /// </param>
        internal ScheduleTestsTrigger(string triggerId, string displayName, string description, TriggerType kind, TriggerState? state, StateDetails stateDetails, DateTimeOffset? createdDateTime, string createdBy, DateTimeOffset? lastModifiedDateTime, string lastModifiedBy, IDictionary<string, BinaryData> serializedAdditionalRawData, IList<string> testIds, DateTimeOffset? startDateTime, RecurrenceStatus recurrenceStatus, LoadTestingRecurrence recurrence) : base(triggerId, displayName, description, kind, state, stateDetails, createdDateTime, createdBy, lastModifiedDateTime, lastModifiedBy, serializedAdditionalRawData)
        {
            TestIds = testIds;
            StartDateTime = startDateTime;
            RecurrenceStatus = recurrenceStatus;
            Recurrence = recurrence;
        }

        /// <summary> Initializes a new instance of <see cref="ScheduleTestsTrigger"/> for deserialization. </summary>
        internal ScheduleTestsTrigger()
        {
        }

        /// <summary> The test id of test to be triggered by this schedule trigger. Currently only one test is supported for a trigger. </summary>
        public IList<string> TestIds { get; }
        /// <summary> Start date time of the trigger in UTC timezone. (RFC 3339 literal format). </summary>
        public DateTimeOffset? StartDateTime { get; set; }
        /// <summary> Gets the recurrence status. </summary>
        public RecurrenceStatus RecurrenceStatus { get; }
        /// <summary>
        /// Recurrence details of the trigger. Null if schedule is not recurring.
        /// Please note <see cref="LoadTestingRecurrence"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="RecurrenceWithCron"/>, <see cref="DailyRecurrence"/>, <see cref="HourlyRecurrence"/>, <see cref="MonthlyRecurrenceByDates"/>, <see cref="MonthlyRecurrenceByWeekDays"/> and <see cref="WeeklyRecurrence"/>.
        /// </summary>
        public LoadTestingRecurrence Recurrence { get; set; }
    }
}
