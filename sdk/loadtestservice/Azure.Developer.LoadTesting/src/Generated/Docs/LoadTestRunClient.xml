<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="CreateOrUpdateAppComponentsAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrUpdateAppComponentsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    components = new Dictionary<string, object>
    {
        ["/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/samplerg/providers/microsoft.insights/components/appcomponentresource"] = new
        {
            resourceType = "microsoft.insights/components",
            resourceName = "appcomponentresource",
            displayName = "Performance_LoadTest_Insights",
            kind = "web",
        }
    },
});
Response response = await client.CreateOrUpdateAppComponentsAsync("ee843bd9-a6d4-4364-a45c-427a03c39fa7", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("components").GetProperty("<key>").GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("components").GetProperty("<key>").GetProperty("resourceName").ToString());
Console.WriteLine(result.GetProperty("components").GetProperty("<key>").GetProperty("resourceType").ToString());
]]></code></example>
    </member>
    <member name="CreateOrUpdateAppComponents(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrUpdateAppComponents and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    components = new Dictionary<string, object>
    {
        ["/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/samplerg/providers/microsoft.insights/components/appcomponentresource"] = new
        {
            resourceType = "microsoft.insights/components",
            resourceName = "appcomponentresource",
            displayName = "Performance_LoadTest_Insights",
            kind = "web",
        }
    },
});
Response response = client.CreateOrUpdateAppComponents("ee843bd9-a6d4-4364-a45c-427a03c39fa7", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("components").GetProperty("<key>").GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("components").GetProperty("<key>").GetProperty("resourceName").ToString());
Console.WriteLine(result.GetProperty("components").GetProperty("<key>").GetProperty("resourceType").ToString());
]]></code></example>
    </member>
    <member name="CreateOrUpdateServerMetricsConfigAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrUpdateServerMetricsConfigAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    metrics = new Dictionary<string, object>
    {
        ["/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/samplerg/providers/microsoft.insights/components/appcomponentresource/providers/microsoft.insights/metricdefinitions/requests/duration"] = new
        {
            resourceId = "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/samplerg/providers/microsoft.insights/components/appcomponentresource",
            metricNamespace = "microsoft.insights/components",
            displayDescription = "sample description",
            name = "requests/duration",
            aggregation = "Average",
            resourceType = "microsoft.insights/components",
        }
    },
});
Response response = await client.CreateOrUpdateServerMetricsConfigAsync("edc6e529-d009-4b99-b763-ca492e3a2823", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="CreateOrUpdateServerMetricsConfig(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateOrUpdateServerMetricsConfig and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    metrics = new Dictionary<string, object>
    {
        ["/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/samplerg/providers/microsoft.insights/components/appcomponentresource/providers/microsoft.insights/metricdefinitions/requests/duration"] = new
        {
            resourceId = "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/samplerg/providers/microsoft.insights/components/appcomponentresource",
            metricNamespace = "microsoft.insights/components",
            displayDescription = "sample description",
            name = "requests/duration",
            aggregation = "Average",
            resourceType = "microsoft.insights/components",
        }
    },
});
Response response = client.CreateOrUpdateServerMetricsConfig("edc6e529-d009-4b99-b763-ca492e3a2823", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="DeleteTestRunAsync(string,RequestContext)">
      <example>
This sample shows how to call DeleteTestRunAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response response = await client.DeleteTestRunAsync("12316678-1234-1234-1234-122451189012");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteTestRun(string,RequestContext)">
      <example>
This sample shows how to call DeleteTestRun.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response response = client.DeleteTestRun("12316678-1234-1234-1234-122451189012");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetAppComponentsAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetAppComponentsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response<TestRunAppComponents> response = await client.GetAppComponentsAsync("ee843bd9-a6d4-4364-a45c-427a03c39fa7");
]]></code></example>
    </member>
    <member name="GetAppComponents(string,CancellationToken)">
      <example>
This sample shows how to call GetAppComponents.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response<TestRunAppComponents> response = client.GetAppComponents("ee843bd9-a6d4-4364-a45c-427a03c39fa7");
]]></code></example>
    </member>
    <member name="GetAppComponentsAsync(string,RequestContext)">
      <example>
This sample shows how to call GetAppComponentsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response response = await client.GetAppComponentsAsync("ee843bd9-a6d4-4364-a45c-427a03c39fa7", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("components").GetProperty("<key>").GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("components").GetProperty("<key>").GetProperty("resourceName").ToString());
Console.WriteLine(result.GetProperty("components").GetProperty("<key>").GetProperty("resourceType").ToString());
]]></code></example>
    </member>
    <member name="GetAppComponents(string,RequestContext)">
      <example>
This sample shows how to call GetAppComponents and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response response = client.GetAppComponents("ee843bd9-a6d4-4364-a45c-427a03c39fa7", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("components").GetProperty("<key>").GetProperty("resourceId").ToString());
Console.WriteLine(result.GetProperty("components").GetProperty("<key>").GetProperty("resourceName").ToString());
Console.WriteLine(result.GetProperty("components").GetProperty("<key>").GetProperty("resourceType").ToString());
]]></code></example>
    </member>
    <member name="GetServerMetricsConfigAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetServerMetricsConfigAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response<TestRunServerMetricsConfiguration> response = await client.GetServerMetricsConfigAsync("12345678-1234-1234-1234-123456789012");
]]></code></example>
    </member>
    <member name="GetServerMetricsConfig(string,CancellationToken)">
      <example>
This sample shows how to call GetServerMetricsConfig.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response<TestRunServerMetricsConfiguration> response = client.GetServerMetricsConfig("12345678-1234-1234-1234-123456789012");
]]></code></example>
    </member>
    <member name="GetServerMetricsConfigAsync(string,RequestContext)">
      <example>
This sample shows how to call GetServerMetricsConfigAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response response = await client.GetServerMetricsConfigAsync("12345678-1234-1234-1234-123456789012", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetServerMetricsConfig(string,RequestContext)">
      <example>
This sample shows how to call GetServerMetricsConfig and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response response = client.GetServerMetricsConfig("12345678-1234-1234-1234-123456789012", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="GetTestRunAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetTestRunAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response<LoadTestRun> response = await client.GetTestRunAsync("12316678-1234-1234-1234-122451189012");
]]></code></example>
    </member>
    <member name="GetTestRun(string,CancellationToken)">
      <example>
This sample shows how to call GetTestRun.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response<LoadTestRun> response = client.GetTestRun("12316678-1234-1234-1234-122451189012");
]]></code></example>
    </member>
    <member name="GetTestRunAsync(string,RequestContext)">
      <example>
This sample shows how to call GetTestRunAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response response = await client.GetTestRunAsync("12316678-1234-1234-1234-122451189012", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("testRunId").ToString());
]]></code></example>
    </member>
    <member name="GetTestRun(string,RequestContext)">
      <example>
This sample shows how to call GetTestRun and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response response = client.GetTestRun("12316678-1234-1234-1234-122451189012", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("testRunId").ToString());
]]></code></example>
    </member>
    <member name="GetTestRunFileAsync(string,string,CancellationToken)">
      <example>
This sample shows how to call GetTestRunFileAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response<TestRunFileInfo> response = await client.GetTestRunFileAsync("12316678-1234-1234-1234-122451189012", "sample.jmx");
]]></code></example>
    </member>
    <member name="GetTestRunFile(string,string,CancellationToken)">
      <example>
This sample shows how to call GetTestRunFile.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response<TestRunFileInfo> response = client.GetTestRunFile("12316678-1234-1234-1234-122451189012", "sample.jmx");
]]></code></example>
    </member>
    <member name="GetTestRunFileAsync(string,string,RequestContext)">
      <example>
This sample shows how to call GetTestRunFileAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response response = await client.GetTestRunFileAsync("12316678-1234-1234-1234-122451189012", "sample.jmx", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("fileName").ToString());
]]></code></example>
    </member>
    <member name="GetTestRunFile(string,string,RequestContext)">
      <example>
This sample shows how to call GetTestRunFile and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response response = client.GetTestRunFile("12316678-1234-1234-1234-122451189012", "sample.jmx", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("fileName").ToString());
]]></code></example>
    </member>
    <member name="GetMetricDefinitionsAsync(string,string,CancellationToken)">
      <example>
This sample shows how to call GetMetricDefinitionsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response<MetricDefinitions> response = await client.GetMetricDefinitionsAsync("12316678-1234-1234-1234-122451189012", "LoadTestRunMetrics");
]]></code></example>
    </member>
    <member name="GetMetricDefinitions(string,string,CancellationToken)">
      <example>
This sample shows how to call GetMetricDefinitions.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response<MetricDefinitions> response = client.GetMetricDefinitions("12316678-1234-1234-1234-122451189012", "LoadTestRunMetrics");
]]></code></example>
    </member>
    <member name="GetMetricDefinitionsAsync(string,string,RequestContext)">
      <example>
This sample shows how to call GetMetricDefinitionsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response response = await client.GetMetricDefinitionsAsync("12316678-1234-1234-1234-122451189012", "LoadTestRunMetrics", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].ToString());
]]></code></example>
    </member>
    <member name="GetMetricDefinitions(string,string,RequestContext)">
      <example>
This sample shows how to call GetMetricDefinitions and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response response = client.GetMetricDefinitions("12316678-1234-1234-1234-122451189012", "LoadTestRunMetrics", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].ToString());
]]></code></example>
    </member>
    <member name="GetMetricNamespacesAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetMetricNamespacesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response<MetricNamespaces> response = await client.GetMetricNamespacesAsync("12316678-1234-1234-1234-122451189012");
]]></code></example>
    </member>
    <member name="GetMetricNamespaces(string,CancellationToken)">
      <example>
This sample shows how to call GetMetricNamespaces.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response<MetricNamespaces> response = client.GetMetricNamespaces("12316678-1234-1234-1234-122451189012");
]]></code></example>
    </member>
    <member name="GetMetricNamespacesAsync(string,RequestContext)">
      <example>
This sample shows how to call GetMetricNamespacesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response response = await client.GetMetricNamespacesAsync("12316678-1234-1234-1234-122451189012", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].ToString());
]]></code></example>
    </member>
    <member name="GetMetricNamespaces(string,RequestContext)">
      <example>
This sample shows how to call GetMetricNamespaces and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response response = client.GetMetricNamespaces("12316678-1234-1234-1234-122451189012", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].ToString());
]]></code></example>
    </member>
    <member name="StopTestRunAsync(string,CancellationToken)">
      <example>
This sample shows how to call StopTestRunAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response<LoadTestRun> response = await client.StopTestRunAsync("12316678-1234-1234-1234-122451189012");
]]></code></example>
    </member>
    <member name="StopTestRun(string,CancellationToken)">
      <example>
This sample shows how to call StopTestRun.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response<LoadTestRun> response = client.StopTestRun("12316678-1234-1234-1234-122451189012");
]]></code></example>
    </member>
    <member name="StopTestRunAsync(string,RequestContext)">
      <example>
This sample shows how to call StopTestRunAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response response = await client.StopTestRunAsync("12316678-1234-1234-1234-122451189012", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("testRunId").ToString());
]]></code></example>
    </member>
    <member name="StopTestRun(string,RequestContext)">
      <example>
This sample shows how to call StopTestRun and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response response = client.StopTestRun("12316678-1234-1234-1234-122451189012", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("testRunId").ToString());
]]></code></example>
    </member>
    <member name="DeleteTestProfileRunAsync(string,RequestContext)">
      <example>
This sample shows how to call DeleteTestProfileRunAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response response = await client.DeleteTestProfileRunAsync("12316678-1234-1234-1234-122451189012");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteTestProfileRun(string,RequestContext)">
      <example>
This sample shows how to call DeleteTestProfileRun.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response response = client.DeleteTestProfileRun("12316678-1234-1234-1234-122451189012");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetTestProfileRunAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetTestProfileRunAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response<TestProfileRun> response = await client.GetTestProfileRunAsync("12316678-1234-1234-1234-122451189012");
]]></code>
This sample shows how to call GetTestProfileRunAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response<TestProfileRun> response = await client.GetTestProfileRunAsync("12316678-1234-1234-1234-122451189012");
]]></code></example>
    </member>
    <member name="GetTestProfileRun(string,CancellationToken)">
      <example>
This sample shows how to call GetTestProfileRun.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response<TestProfileRun> response = client.GetTestProfileRun("12316678-1234-1234-1234-122451189012");
]]></code>
This sample shows how to call GetTestProfileRun.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response<TestProfileRun> response = client.GetTestProfileRun("12316678-1234-1234-1234-122451189012");
]]></code></example>
    </member>
    <member name="GetTestProfileRunAsync(string,RequestContext)">
      <example>
This sample shows how to call GetTestProfileRunAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response response = await client.GetTestProfileRunAsync("12316678-1234-1234-1234-122451189012", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("testProfileRunId").ToString());
]]></code>
This sample shows how to call GetTestProfileRunAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response response = await client.GetTestProfileRunAsync("12316678-1234-1234-1234-122451189012", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("testProfileRunId").ToString());
]]></code></example>
    </member>
    <member name="GetTestProfileRun(string,RequestContext)">
      <example>
This sample shows how to call GetTestProfileRun and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response response = client.GetTestProfileRun("12316678-1234-1234-1234-122451189012", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("testProfileRunId").ToString());
]]></code>
This sample shows how to call GetTestProfileRun and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response response = client.GetTestProfileRun("12316678-1234-1234-1234-122451189012", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("testProfileRunId").ToString());
]]></code></example>
    </member>
    <member name="StopTestProfileRunAsync(string,CancellationToken)">
      <example>
This sample shows how to call StopTestProfileRunAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response<TestProfileRun> response = await client.StopTestProfileRunAsync("12316678-1234-1234-1234-122451189012");
]]></code></example>
    </member>
    <member name="StopTestProfileRun(string,CancellationToken)">
      <example>
This sample shows how to call StopTestProfileRun.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response<TestProfileRun> response = client.StopTestProfileRun("12316678-1234-1234-1234-122451189012");
]]></code></example>
    </member>
    <member name="StopTestProfileRunAsync(string,RequestContext)">
      <example>
This sample shows how to call StopTestProfileRunAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response response = await client.StopTestProfileRunAsync("12316678-1234-1234-1234-122451189012", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("testProfileRunId").ToString());
]]></code></example>
    </member>
    <member name="StopTestProfileRun(string,RequestContext)">
      <example>
This sample shows how to call StopTestProfileRun and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

Response response = client.StopTestProfileRun("12316678-1234-1234-1234-122451189012", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("testProfileRunId").ToString());
]]></code></example>
    </member>
    <member name="GetMetricDimensionValuesAsync(string,string,string,string,string,TimeGrain?,CancellationToken)">
      <example>
This sample shows how to call GetMetricDimensionValuesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

await foreach (string item in client.GetMetricDimensionValuesAsync("12316678-1234-1234-1234-122451189012", "SamplerName", "ActiveThreads", "LoadTestRunMetrics", "2022-09-24T19:00:40Z/2022-09-25T19:28:40Z"))
{
}
]]></code></example>
    </member>
    <member name="GetMetricDimensionValues(string,string,string,string,string,TimeGrain?,CancellationToken)">
      <example>
This sample shows how to call GetMetricDimensionValues.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

foreach (string item in client.GetMetricDimensionValues("12316678-1234-1234-1234-122451189012", "SamplerName", "ActiveThreads", "LoadTestRunMetrics", "2022-09-24T19:00:40Z/2022-09-25T19:28:40Z"))
{
}
]]></code></example>
    </member>
    <member name="GetMetricDimensionValuesAsync(string,string,string,string,string,string,RequestContext)">
      <example>
This sample shows how to call GetMetricDimensionValuesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

await foreach (BinaryData item in client.GetMetricDimensionValuesAsync("12316678-1234-1234-1234-122451189012", "SamplerName", "ActiveThreads", "LoadTestRunMetrics", "2022-09-24T19:00:40Z/2022-09-25T19:28:40Z", "PT1H", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code></example>
    </member>
    <member name="GetMetricDimensionValues(string,string,string,string,string,string,RequestContext)">
      <example>
This sample shows how to call GetMetricDimensionValues and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

foreach (BinaryData item in client.GetMetricDimensionValues("12316678-1234-1234-1234-122451189012", "SamplerName", "ActiveThreads", "LoadTestRunMetrics", "2022-09-24T19:00:40Z/2022-09-25T19:28:40Z", "PT1H", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code></example>
    </member>
    <member name="GetMetricsAsync(string,string,string,string,MetricsFilters,string,TimeGrain?,CancellationToken)">
      <example>
This sample shows how to call GetMetricsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

await foreach (TimeSeriesElement item in client.GetMetricsAsync("12316678-1234-1234-1234-122451189012", "ActiveThreads", "LoadTestRunMetrics", "2022-09-24T19:00:40Z/2022-09-25T19:28:40Z"))
{
}
]]></code></example>
    </member>
    <member name="GetMetrics(string,string,string,string,MetricsFilters,string,TimeGrain?,CancellationToken)">
      <example>
This sample shows how to call GetMetrics.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

foreach (TimeSeriesElement item in client.GetMetrics("12316678-1234-1234-1234-122451189012", "ActiveThreads", "LoadTestRunMetrics", "2022-09-24T19:00:40Z/2022-09-25T19:28:40Z"))
{
}
]]></code></example>
    </member>
    <member name="GetMetricsAsync(string,string,string,string,RequestContent,string,string,RequestContext)">
      <example>
This sample shows how to call GetMetricsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    filters = new object[]
    {
        new
        {
            name = "SamplerName",
            values = new object[]
            {
                "HTTP Request"
            },
        }
    },
});
await foreach (BinaryData item in client.GetMetricsAsync("12316678-1234-1234-1234-122451189012", "ActiveThreads", "LoadTestRunMetrics", "2022-09-24T19:00:40Z/2022-09-25T19:28:40Z", content))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code></example>
    </member>
    <member name="GetMetrics(string,string,string,string,RequestContent,string,string,RequestContext)">
      <example>
This sample shows how to call GetMetrics and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
LoadTestRunClient client = new LoadTestRunClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    filters = new object[]
    {
        new
        {
            name = "SamplerName",
            values = new object[]
            {
                "HTTP Request"
            },
        }
    },
});
foreach (BinaryData item in client.GetMetrics("12316678-1234-1234-1234-122451189012", "ActiveThreads", "LoadTestRunMetrics", "2022-09-24T19:00:40Z/2022-09-25T19:28:40Z", content))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.ToString());
}
]]></code></example>
    </member>
  </members>
</doc>