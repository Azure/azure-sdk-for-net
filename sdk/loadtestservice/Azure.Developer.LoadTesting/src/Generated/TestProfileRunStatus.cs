// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.Developer.LoadTesting
{
    /// <summary> Test profile run status. </summary>
    public readonly partial struct TestProfileRunStatus : IEquatable<TestProfileRunStatus>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="TestProfileRunStatus"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public TestProfileRunStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string AcceptedValue = "ACCEPTED";
        private const string NotStartedValue = "NOTSTARTED";
        private const string ExecutingValue = "EXECUTING";
        private const string DoneValue = "DONE";
        private const string CancellingValue = "CANCELLING";
        private const string CancelledValue = "CANCELLED";
        private const string FailedValue = "FAILED";

        /// <summary> Test profile run request is accepted. </summary>
        public static TestProfileRunStatus Accepted { get; } = new TestProfileRunStatus(AcceptedValue);
        /// <summary> Test profile run is not yet started. </summary>
        public static TestProfileRunStatus NotStarted { get; } = new TestProfileRunStatus(NotStartedValue);
        /// <summary> Test profile run has started executing. </summary>
        public static TestProfileRunStatus Executing { get; } = new TestProfileRunStatus(ExecutingValue);
        /// <summary> Test profile run has completed successfully. </summary>
        public static TestProfileRunStatus Done { get; } = new TestProfileRunStatus(DoneValue);
        /// <summary> Test profile run is being cancelled. </summary>
        public static TestProfileRunStatus Cancelling { get; } = new TestProfileRunStatus(CancellingValue);
        /// <summary> Test profile run is cancelled. </summary>
        public static TestProfileRunStatus Cancelled { get; } = new TestProfileRunStatus(CancelledValue);
        /// <summary> Test profile run has failed. </summary>
        public static TestProfileRunStatus Failed { get; } = new TestProfileRunStatus(FailedValue);
        /// <summary> Determines if two <see cref="TestProfileRunStatus"/> values are the same. </summary>
        public static bool operator ==(TestProfileRunStatus left, TestProfileRunStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="TestProfileRunStatus"/> values are not the same. </summary>
        public static bool operator !=(TestProfileRunStatus left, TestProfileRunStatus right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="TestProfileRunStatus"/>. </summary>
        public static implicit operator TestProfileRunStatus(string value) => new TestProfileRunStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is TestProfileRunStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(TestProfileRunStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
