// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Developer.LoadTesting
{
    /// <summary> Unknown version of NotificationRule. </summary>
    internal partial class UnknownNotificationRule : NotificationRule
    {
        /// <summary> Initializes a new instance of <see cref="UnknownNotificationRule"/>. </summary>
        /// <param name="notificationRuleId"> The unique identifier of the notification rule. </param>
        /// <param name="displayName"> The name of the notification rule. </param>
        /// <param name="actionGroupIds"> The action groups to notify. </param>
        /// <param name="scope"> The scope of the notification rule. </param>
        /// <param name="createdDateTime"> The creation datetime(RFC 3339 literal format). </param>
        /// <param name="createdBy"> The user that created. </param>
        /// <param name="lastModifiedDateTime"> The last Modified datetime(RFC 3339 literal format). </param>
        /// <param name="lastModifiedBy"> The user that last modified. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal UnknownNotificationRule(string notificationRuleId, string displayName, IList<string> actionGroupIds, NotificationScopeType scope, DateTimeOffset? createdDateTime, string createdBy, DateTimeOffset? lastModifiedDateTime, string lastModifiedBy, IDictionary<string, BinaryData> serializedAdditionalRawData) : base(notificationRuleId, displayName, actionGroupIds, scope, createdDateTime, createdBy, lastModifiedDateTime, lastModifiedBy, serializedAdditionalRawData)
        {
        }

        /// <summary> Initializes a new instance of <see cref="UnknownNotificationRule"/> for deserialization. </summary>
        internal UnknownNotificationRule()
        {
        }
    }
}
