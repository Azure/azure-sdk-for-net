// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.Developer.LoadTesting.Models
{
    /// <summary> Server metrics config model. </summary>
    public partial class ServerMetricsModel
    {
        /// <summary> Initializes a new instance of ServerMetricsModel. </summary>
        public ServerMetricsModel()
        {
            Metrics = new ChangeTrackingDictionary<string, ResourceMetricModel>();
        }

        /// <summary> Initializes a new instance of ServerMetricsModel. </summary>
        /// <param name="name"> Server metrics config name. </param>
        /// <param name="testId"> [Required, if testRunId is not given] Load test unique identifier. </param>
        /// <param name="testRunId"> [Required, if testId is not given] Load test run unique identifier. </param>
        /// <param name="metrics"> Metrics map {metric id : metrics object} (Refer : https://docs.microsoft.com/en-us/rest/api/monitor/metric-definitions/list#metricdefinition for metric id). </param>
        internal ServerMetricsModel(string name, string testId, string testRunId, IDictionary<string, ResourceMetricModel> metrics)
        {
            Name = name;
            TestId = testId;
            TestRunId = testRunId;
            Metrics = metrics;
        }

        /// <summary> Server metrics config name. </summary>
        public string Name { get; }
        /// <summary> [Required, if testRunId is not given] Load test unique identifier. </summary>
        public string TestId { get; set; }
        /// <summary> [Required, if testId is not given] Load test run unique identifier. </summary>
        public string TestRunId { get; set; }
        /// <summary> Metrics map {metric id : metrics object} (Refer : https://docs.microsoft.com/en-us/rest/api/monitor/metric-definitions/list#metricdefinition for metric id). </summary>
        public IDictionary<string, ResourceMetricModel> Metrics { get; }
    }
}
