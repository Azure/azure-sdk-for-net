// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace AzureLoadTesting.Models
{
    /// <summary> Test run statistics. </summary>
    public partial class TestRunStatistics
    {
        /// <summary> Initializes a new instance of TestRunStatistics. </summary>
        internal TestRunStatistics()
        {
        }

        /// <summary> Initializes a new instance of TestRunStatistics. </summary>
        /// <param name="transaction"> Transaction name. </param>
        /// <param name="sampleCount"> Sampler count. </param>
        /// <param name="errorCount"> Error count. </param>
        /// <param name="errorPct"> Error percentage. </param>
        /// <param name="meanResTime"> Mean response time. </param>
        /// <param name="medianResTime"> Median response time. </param>
        /// <param name="maxResTime"> Max response time. </param>
        /// <param name="minResTime"> Minimum response time. </param>
        /// <param name="pct1ResTime"> 90 percentile response time. </param>
        /// <param name="pct2ResTime"> 95 percentile response time. </param>
        /// <param name="pct3ResTime"> 99 percentile response time. </param>
        /// <param name="throughput"> Throughput. </param>
        /// <param name="receivedKBytesPerSec"> Received network bytes. </param>
        /// <param name="sentKBytesPerSec"> Send network bytes. </param>
        internal TestRunStatistics(string transaction, float? sampleCount, float? errorCount, float? errorPct, float? meanResTime, float? medianResTime, float? maxResTime, float? minResTime, float? pct1ResTime, float? pct2ResTime, float? pct3ResTime, float? throughput, float? receivedKBytesPerSec, float? sentKBytesPerSec)
        {
            Transaction = transaction;
            SampleCount = sampleCount;
            ErrorCount = errorCount;
            ErrorPct = errorPct;
            MeanResTime = meanResTime;
            MedianResTime = medianResTime;
            MaxResTime = maxResTime;
            MinResTime = minResTime;
            Pct1ResTime = pct1ResTime;
            Pct2ResTime = pct2ResTime;
            Pct3ResTime = pct3ResTime;
            Throughput = throughput;
            ReceivedKBytesPerSec = receivedKBytesPerSec;
            SentKBytesPerSec = sentKBytesPerSec;
        }

        /// <summary> Transaction name. </summary>
        public string Transaction { get; }
        /// <summary> Sampler count. </summary>
        public float? SampleCount { get; }
        /// <summary> Error count. </summary>
        public float? ErrorCount { get; }
        /// <summary> Error percentage. </summary>
        public float? ErrorPct { get; }
        /// <summary> Mean response time. </summary>
        public float? MeanResTime { get; }
        /// <summary> Median response time. </summary>
        public float? MedianResTime { get; }
        /// <summary> Max response time. </summary>
        public float? MaxResTime { get; }
        /// <summary> Minimum response time. </summary>
        public float? MinResTime { get; }
        /// <summary> 90 percentile response time. </summary>
        public float? Pct1ResTime { get; }
        /// <summary> 95 percentile response time. </summary>
        public float? Pct2ResTime { get; }
        /// <summary> 99 percentile response time. </summary>
        public float? Pct3ResTime { get; }
        /// <summary> Throughput. </summary>
        public float? Throughput { get; }
        /// <summary> Received network bytes. </summary>
        public float? ReceivedKBytesPerSec { get; }
        /// <summary> Send network bytes. </summary>
        public float? SentKBytesPerSec { get; }
    }
}
