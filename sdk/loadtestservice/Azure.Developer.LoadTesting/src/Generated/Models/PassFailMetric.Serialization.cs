// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure;
using Azure.Core;

namespace AzureLoadTesting.Models
{
    public partial class PassFailMetric
    {
        internal static PassFailMetric DeserializePassFailMetric(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<PFMetrics> clientMetric = default;
            Optional<PFAgFunc> aggregate = default;
            Optional<string> condition = default;
            Optional<string> requestName = default;
            Optional<float> value = default;
            Optional<PFAction> action = default;
            Optional<float> actualValue = default;
            Optional<PFResult> result = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("clientMetric"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    clientMetric = new PFMetrics(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("aggregate"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    aggregate = new PFAgFunc(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("condition"u8))
                {
                    condition = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("requestName"u8))
                {
                    requestName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("value"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    value = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("action"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    action = new PFAction(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("actualValue"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    actualValue = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("result"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result = new PFResult(property.Value.GetString());
                    continue;
                }
            }
            return new PassFailMetric(Optional.ToNullable(clientMetric), Optional.ToNullable(aggregate), condition.Value, requestName.Value, Optional.ToNullable(value), Optional.ToNullable(action), Optional.ToNullable(actualValue), Optional.ToNullable(result));
        }

        /// <summary> Deserializes the model from a raw response. </summary>
        /// <param name="response"> The response to deserialize the model from. </param>
        internal static PassFailMetric FromResponse(Response response)
        {
            using var document = JsonDocument.Parse(response.Content);
            return DeserializePassFailMetric(document.RootElement);
        }
    }
}
