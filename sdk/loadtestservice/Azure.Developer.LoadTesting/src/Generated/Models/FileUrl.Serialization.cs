// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.Developer.LoadTesting.Models
{
    public partial class FileUrl
    {
        internal static FileUrl DeserializeFileUrl(JsonElement element)
        {
            Optional<string> url = default;
            Optional<string> fileId = default;
            Optional<string> filename = default;
            Optional<FileType> fileType = default;
            Optional<DateTimeOffset> expireTime = default;
            Optional<string> validationStatus = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("url"))
                {
                    url = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("fileId"))
                {
                    fileId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("filename"))
                {
                    filename = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("fileType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    fileType = new FileType(property.Value.GetInt32());
                    continue;
                }
                if (property.NameEquals("expireTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    expireTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("validationStatus"))
                {
                    validationStatus = property.Value.GetString();
                    continue;
                }
            }
            return new FileUrl(url.Value, fileId.Value, filename.Value, Optional.ToNullable(fileType), Optional.ToNullable(expireTime), validationStatus.Value);
        }
    }
}
