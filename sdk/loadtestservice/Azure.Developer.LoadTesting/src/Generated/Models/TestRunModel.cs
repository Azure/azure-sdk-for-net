// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.Developer.LoadTesting.Models
{
    /// <summary> Load test run model. </summary>
    public partial class TestRunModel
    {
        /// <summary> Initializes a new instance of TestRunModel. </summary>
        public TestRunModel()
        {
            TestRunStatistics = new ChangeTrackingDictionary<string, TestRunStatisticsModel>();
            Secrets = new ChangeTrackingDictionary<string, SecretMetadata>();
            EnvironmentVariables = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of TestRunModel. </summary>
        /// <param name="testRunId"> Unique test run name as identifier. </param>
        /// <param name="displayName"> Display name of a test run. </param>
        /// <param name="testId"> Associated test Id. </param>
        /// <param name="resourceId"> Load test resource Id. </param>
        /// <param name="description"> The test run description. </param>
        /// <param name="status"> The test run status. </param>
        /// <param name="startDateTime"> The test run start DateTime(ISO 8601 literal format). </param>
        /// <param name="endDateTime"> The test run end DateTime(ISO 8601 literal format). </param>
        /// <param name="loadTestConfig"> The load test configuration. </param>
        /// <param name="testResult"> Test result for pass/Fail criteria used during the test run. possible outcome - ‘Passed’ , ‘Failed’ , ‘Not Applicable’. </param>
        /// <param name="passFailCriteria"> Pass fail criteria for a test. </param>
        /// <param name="testArtifacts"> . </param>
        /// <param name="executedDateTime"> Test run initiated time. </param>
        /// <param name="vusers"> Number of virtual users, for which test has been run. </param>
        /// <param name="testRunStatistics"> Test run statistics. </param>
        /// <param name="createdDateTime"> The created DateTime(ISO 8601 literal format) of the test run. </param>
        /// <param name="createdBy"> The user that created the test run. </param>
        /// <param name="lastModifiedDateTime"> The last updated  DateTime(ISO 8601 literal format) of the test run. </param>
        /// <param name="lastModifiedBy"> The user that updated the test run. </param>
        /// <param name="portalUrl"> Portal url. </param>
        /// <param name="secrets"> Secrets can be stored in an Azure Key Vault or any other secret store. If the secret is stored in an Azure Key Vault, the value should be the secret identifier and the type should be AKV_SECRET_URI. If the secret is stored elsewhere, the secret value should be provided directly and the type should be SECRET_VALUE. </param>
        /// <param name="environmentVariables"> Environment variables which are defined as a set of &lt;name,value&gt; pairs. </param>
        /// <param name="duration"> Test run duration in milliseconds. </param>
        /// <param name="subnetId"> Subnet ID on which the load test instances should run. </param>
        internal TestRunModel(string testRunId, string displayName, string testId, string resourceId, string description, string status, DateTimeOffset? startDateTime, DateTimeOffset? endDateTime, LoadTestConfig loadTestConfig, string testResult, PassFailCriteria passFailCriteria, TestArtifacts testArtifacts, DateTimeOffset? executedDateTime, int? vusers, IReadOnlyDictionary<string, TestRunStatisticsModel> testRunStatistics, DateTimeOffset? createdDateTime, string createdBy, DateTimeOffset? lastModifiedDateTime, string lastModifiedBy, string portalUrl, IDictionary<string, SecretMetadata> secrets, IDictionary<string, string> environmentVariables, long? duration, string subnetId)
        {
            TestRunId = testRunId;
            DisplayName = displayName;
            TestId = testId;
            ResourceId = resourceId;
            Description = description;
            Status = status;
            StartDateTime = startDateTime;
            EndDateTime = endDateTime;
            LoadTestConfig = loadTestConfig;
            TestResult = testResult;
            PassFailCriteria = passFailCriteria;
            TestArtifacts = testArtifacts;
            ExecutedDateTime = executedDateTime;
            Vusers = vusers;
            TestRunStatistics = testRunStatistics;
            CreatedDateTime = createdDateTime;
            CreatedBy = createdBy;
            LastModifiedDateTime = lastModifiedDateTime;
            LastModifiedBy = lastModifiedBy;
            PortalUrl = portalUrl;
            Secrets = secrets;
            EnvironmentVariables = environmentVariables;
            Duration = duration;
            SubnetId = subnetId;
        }

        /// <summary> Unique test run name as identifier. </summary>
        public string TestRunId { get; }
        /// <summary> Display name of a test run. </summary>
        public string DisplayName { get; set; }
        /// <summary> Associated test Id. </summary>
        public string TestId { get; set; }
        /// <summary> Load test resource Id. </summary>
        public string ResourceId { get; }
        /// <summary> The test run description. </summary>
        public string Description { get; set; }
        /// <summary> The test run status. </summary>
        public string Status { get; }
        /// <summary> The test run start DateTime(ISO 8601 literal format). </summary>
        public DateTimeOffset? StartDateTime { get; }
        /// <summary> The test run end DateTime(ISO 8601 literal format). </summary>
        public DateTimeOffset? EndDateTime { get; }
        /// <summary> The load test configuration. </summary>
        public LoadTestConfig LoadTestConfig { get; set; }
        /// <summary> Test result for pass/Fail criteria used during the test run. possible outcome - ‘Passed’ , ‘Failed’ , ‘Not Applicable’. </summary>
        public string TestResult { get; }
        /// <summary> Pass fail criteria for a test. </summary>
        public PassFailCriteria PassFailCriteria { get; set; }
        public TestArtifacts TestArtifacts { get; }
        /// <summary> Test run initiated time. </summary>
        public DateTimeOffset? ExecutedDateTime { get; }
        /// <summary> Number of virtual users, for which test has been run. </summary>
        public int? Vusers { get; }
        /// <summary> Test run statistics. </summary>
        public IReadOnlyDictionary<string, TestRunStatisticsModel> TestRunStatistics { get; }
        /// <summary> The created DateTime(ISO 8601 literal format) of the test run. </summary>
        public DateTimeOffset? CreatedDateTime { get; }
        /// <summary> The user that created the test run. </summary>
        public string CreatedBy { get; }
        /// <summary> The last updated  DateTime(ISO 8601 literal format) of the test run. </summary>
        public DateTimeOffset? LastModifiedDateTime { get; }
        /// <summary> The user that updated the test run. </summary>
        public string LastModifiedBy { get; }
        /// <summary> Portal url. </summary>
        public string PortalUrl { get; }
        /// <summary> Secrets can be stored in an Azure Key Vault or any other secret store. If the secret is stored in an Azure Key Vault, the value should be the secret identifier and the type should be AKV_SECRET_URI. If the secret is stored elsewhere, the secret value should be provided directly and the type should be SECRET_VALUE. </summary>
        public IDictionary<string, SecretMetadata> Secrets { get; }
        /// <summary> Environment variables which are defined as a set of &lt;name,value&gt; pairs. </summary>
        public IDictionary<string, string> EnvironmentVariables { get; }
        /// <summary> Test run duration in milliseconds. </summary>
        public long? Duration { get; }
        /// <summary> Subnet ID on which the load test instances should run. </summary>
        public string SubnetId { get; }
    }
}
