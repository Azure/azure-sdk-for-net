// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Developer.LoadTesting
{
    /// <summary> Recurrence model when frequency is set as MonthlyByDates. </summary>
    public partial class MonthlyRecurrenceByDates : LoadTestingRecurrence
    {
        /// <summary> Initializes a new instance of <see cref="MonthlyRecurrenceByDates"/>. </summary>
        public MonthlyRecurrenceByDates()
        {
            Frequency = Frequency.MonthlyByDates;
            DatesInMonth = new ChangeTrackingList<int>();
        }

        /// <summary> Initializes a new instance of <see cref="MonthlyRecurrenceByDates"/>. </summary>
        /// <param name="frequency"> Frequency of the recurrence. </param>
        /// <param name="recurrenceEnd"> Recurrence end model. You can specify the end either by providing a numberOfOccurrences (which will end the recurrence after the specified number of occurrences) or by providing an endDateTime (which will end the recurrence after the specified date). If neither value is provided, the recurrence will continue until it is manually ended. However, if both values are provided, an error will be thrown. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="datesInMonth"> Recurrence set to repeat on the specified dates of the month. Value of dates can be 1 to 31 and -1. -1 represents the last day of the month. </param>
        /// <param name="interval"> The interval at which the recurrence should repeat. It signifies the number of months between each recurrence. </param>
        internal MonthlyRecurrenceByDates(Frequency frequency, RecurrenceEnd recurrenceEnd, IDictionary<string, BinaryData> serializedAdditionalRawData, IList<int> datesInMonth, int? interval) : base(frequency, recurrenceEnd, serializedAdditionalRawData)
        {
            DatesInMonth = datesInMonth;
            Interval = interval;
        }

        /// <summary> Recurrence set to repeat on the specified dates of the month. Value of dates can be 1 to 31 and -1. -1 represents the last day of the month. </summary>
        public IList<int> DatesInMonth { get; }
        /// <summary> The interval at which the recurrence should repeat. It signifies the number of months between each recurrence. </summary>
        public int? Interval { get; set; }
    }
}
