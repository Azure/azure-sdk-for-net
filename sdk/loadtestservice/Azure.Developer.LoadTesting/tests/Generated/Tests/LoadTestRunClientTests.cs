// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.Developer.LoadTesting.Tests
{
    public partial class LoadTestRunClientTests : DeveloperLoadTestingTestBase
    {
        public LoadTestRunClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetTestRun_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestRunClient client = CreateLoadTestRunClient(endpoint, credential);

            Response response = await client.GetTestRunAsync("<testRunId>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetTestRun_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestRunClient client = CreateLoadTestRunClient(endpoint, credential);

            Response response = await client.GetTestRunAsync("<testRunId>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task DeleteTestRun_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestRunClient client = CreateLoadTestRunClient(endpoint, credential);

            Response response = await client.DeleteTestRunAsync("<testRunId>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task DeleteTestRun_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestRunClient client = CreateLoadTestRunClient(endpoint, credential);

            Response response = await client.DeleteTestRunAsync("<testRunId>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetTestRunFile_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestRunClient client = CreateLoadTestRunClient(endpoint, credential);

            Response response = await client.GetTestRunFileAsync("<testRunId>", "<fileName>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetTestRunFile_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestRunClient client = CreateLoadTestRunClient(endpoint, credential);

            Response response = await client.GetTestRunFileAsync("<testRunId>", "<fileName>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task StopTestRun_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestRunClient client = CreateLoadTestRunClient(endpoint, credential);

            Response response = await client.StopTestRunAsync("<testRunId>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task StopTestRun_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestRunClient client = CreateLoadTestRunClient(endpoint, credential);

            Response response = await client.StopTestRunAsync("<testRunId>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetMetricNamespaces_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestRunClient client = CreateLoadTestRunClient(endpoint, credential);

            Response response = await client.GetMetricNamespacesAsync("<testRunId>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetMetricNamespaces_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestRunClient client = CreateLoadTestRunClient(endpoint, credential);

            Response response = await client.GetMetricNamespacesAsync("<testRunId>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetMetricDefinitions_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestRunClient client = CreateLoadTestRunClient(endpoint, credential);

            Response response = await client.GetMetricDefinitionsAsync("<testRunId>", "<metricNamespace>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetMetricDefinitions_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestRunClient client = CreateLoadTestRunClient(endpoint, credential);

            Response response = await client.GetMetricDefinitionsAsync("<testRunId>", "<metricNamespace>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CreateOrUpdateAppComponents_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestRunClient client = CreateLoadTestRunClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                components = new
                {
                    key = new object(),
                },
            });
            Response response = await client.CreateOrUpdateAppComponentsAsync("<testRunId>", content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CreateOrUpdateAppComponents_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestRunClient client = CreateLoadTestRunClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                components = new
                {
                    key = new
                    {
                        resourceName = "<resourceName>",
                        resourceType = "<resourceType>",
                        displayName = "<displayName>",
                        kind = "<kind>",
                    },
                },
            });
            Response response = await client.CreateOrUpdateAppComponentsAsync("<testRunId>", content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetAppComponents_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestRunClient client = CreateLoadTestRunClient(endpoint, credential);

            Response response = await client.GetAppComponentsAsync("<testRunId>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetAppComponents_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestRunClient client = CreateLoadTestRunClient(endpoint, credential);

            Response response = await client.GetAppComponentsAsync("<testRunId>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CreateOrUpdateServerMetricsConfig_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestRunClient client = CreateLoadTestRunClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new object());
            Response response = await client.CreateOrUpdateServerMetricsConfigAsync("<testRunId>", content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CreateOrUpdateServerMetricsConfig_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestRunClient client = CreateLoadTestRunClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                metrics = new
                {
                    key = new
                    {
                        resourceId = "<resourceId>",
                        metricNamespace = "<metricNamespace>",
                        displayDescription = "<displayDescription>",
                        name = "<name>",
                        aggregation = "<aggregation>",
                        unit = "<unit>",
                        resourceType = "<resourceType>",
                    },
                },
            });
            Response response = await client.CreateOrUpdateServerMetricsConfigAsync("<testRunId>", content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetServerMetricsConfig_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestRunClient client = CreateLoadTestRunClient(endpoint, credential);

            Response response = await client.GetServerMetricsConfigAsync("<testRunId>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetServerMetricsConfig_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestRunClient client = CreateLoadTestRunClient(endpoint, credential);

            Response response = await client.GetServerMetricsConfigAsync("<testRunId>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetMetrics_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestRunClient client = CreateLoadTestRunClient(endpoint, credential);

            using RequestContent content = null;
            await foreach (BinaryData item in client.GetMetricsAsync("<testRunId>", "<metricname>", "<metricNamespace>", "<timespan>", content))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetMetrics_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestRunClient client = CreateLoadTestRunClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                filters = new object[]
            {
new
{
name = "<name>",
values = new object[]
{
"<values>"
},
}
            },
            });
            await foreach (BinaryData item in client.GetMetricsAsync("<testRunId>", "<metricname>", "<metricNamespace>", "<timespan>", content, aggregation: "<aggregation>", interval: "PT5S"))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetMetricDimensionValues_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestRunClient client = CreateLoadTestRunClient(endpoint, credential);

            await foreach (BinaryData item in client.GetMetricDimensionValuesAsync("<testRunId>", "<name>", "<metricName>", "<metricNamespace>", "<timeInterval>"))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetMetricDimensionValues_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestRunClient client = CreateLoadTestRunClient(endpoint, credential);

            await foreach (BinaryData item in client.GetMetricDimensionValuesAsync("<testRunId>", "<name>", "<metricName>", "<metricNamespace>", "<timeInterval>", interval: "PT5S"))
            {
            }
        }
    }
}
