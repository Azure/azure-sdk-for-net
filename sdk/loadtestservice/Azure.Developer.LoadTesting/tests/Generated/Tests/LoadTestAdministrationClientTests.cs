// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.Developer.LoadTesting.Tests
{
    public partial class LoadTestAdministrationClientTests : DeveloperLoadTestingTestBase
    {
        public LoadTestAdministrationClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CreateOrUpdateTest_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestAdministrationClient client = CreateLoadTestAdministrationClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new object());
            Response response = await client.CreateOrUpdateTestAsync("<testId>", content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CreateOrUpdateTest_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestAdministrationClient client = CreateLoadTestAdministrationClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                passFailCriteria = new
                {
                    passFailMetrics = new
                    {
                        key = new
                        {
                            clientMetric = "response_time_ms",
                            aggregate = "count",
                            condition = "<condition>",
                            requestName = "<requestName>",
                            value = 123.45,
                            action = "continue",
                        },
                    },
                },
                secrets = new
                {
                    key = new
                    {
                        value = "<value>",
                        type = "AKV_SECRET_URI",
                    },
                },
                certificate = new
                {
                    value = "<value>",
                    type = "AKV_CERT_URI",
                    name = "<name>",
                },
                environmentVariables = new
                {
                    key = "<environmentVariables>",
                },
                loadTestConfiguration = new
                {
                    engineInstances = 1234,
                    splitAllCSVs = true,
                    quickStartTest = true,
                    optionalLoadTestConfig = new
                    {
                        endpointUrl = "<endpointUrl>",
                        virtualUsers = 1234,
                        rampUpTime = 1234,
                        duration = 1234,
                    },
                },
                description = "<description>",
                displayName = "<displayName>",
                subnetId = "<subnetId>",
                keyvaultReferenceIdentityType = "<keyvaultReferenceIdentityType>",
                keyvaultReferenceIdentityId = "<keyvaultReferenceIdentityId>",
            });
            Response response = await client.CreateOrUpdateTestAsync("<testId>", content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task DeleteTest_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestAdministrationClient client = CreateLoadTestAdministrationClient(endpoint, credential);

            Response response = await client.DeleteTestAsync("<testId>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task DeleteTest_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestAdministrationClient client = CreateLoadTestAdministrationClient(endpoint, credential);

            Response response = await client.DeleteTestAsync("<testId>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetTest_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestAdministrationClient client = CreateLoadTestAdministrationClient(endpoint, credential);

            Response response = await client.GetTestAsync("<testId>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetTest_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestAdministrationClient client = CreateLoadTestAdministrationClient(endpoint, credential);

            Response response = await client.GetTestAsync("<testId>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetTestFile_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestAdministrationClient client = CreateLoadTestAdministrationClient(endpoint, credential);

            Response response = await client.GetTestFileAsync("<testId>", "<fileName>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetTestFile_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestAdministrationClient client = CreateLoadTestAdministrationClient(endpoint, credential);

            Response response = await client.GetTestFileAsync("<testId>", "<fileName>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task DeleteTestFile_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestAdministrationClient client = CreateLoadTestAdministrationClient(endpoint, credential);

            Response response = await client.DeleteTestFileAsync("<testId>", "<fileName>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task DeleteTestFile_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestAdministrationClient client = CreateLoadTestAdministrationClient(endpoint, credential);

            Response response = await client.DeleteTestFileAsync("<testId>", "<fileName>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CreateOrUpdateAppComponents_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestAdministrationClient client = CreateLoadTestAdministrationClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                components = new
                {
                    key = new object(),
                },
            });
            Response response = await client.CreateOrUpdateAppComponentsAsync("<testId>", content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CreateOrUpdateAppComponents_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestAdministrationClient client = CreateLoadTestAdministrationClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                components = new
                {
                    key = new
                    {
                        resourceName = "<resourceName>",
                        resourceType = "<resourceType>",
                        displayName = "<displayName>",
                        kind = "<kind>",
                    },
                },
            });
            Response response = await client.CreateOrUpdateAppComponentsAsync("<testId>", content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetAppComponents_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestAdministrationClient client = CreateLoadTestAdministrationClient(endpoint, credential);

            Response response = await client.GetAppComponentsAsync("<testId>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetAppComponents_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestAdministrationClient client = CreateLoadTestAdministrationClient(endpoint, credential);

            Response response = await client.GetAppComponentsAsync("<testId>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CreateOrUpdateServerMetricsConfig_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestAdministrationClient client = CreateLoadTestAdministrationClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new object());
            Response response = await client.CreateOrUpdateServerMetricsConfigAsync("<testId>", content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task CreateOrUpdateServerMetricsConfig_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestAdministrationClient client = CreateLoadTestAdministrationClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                metrics = new
                {
                    key = new
                    {
                        resourceId = "<resourceId>",
                        metricNamespace = "<metricNamespace>",
                        displayDescription = "<displayDescription>",
                        name = "<name>",
                        aggregation = "<aggregation>",
                        unit = "<unit>",
                        resourceType = "<resourceType>",
                    },
                },
            });
            Response response = await client.CreateOrUpdateServerMetricsConfigAsync("<testId>", content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetServerMetricsConfig_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestAdministrationClient client = CreateLoadTestAdministrationClient(endpoint, credential);

            Response response = await client.GetServerMetricsConfigAsync("<testId>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetServerMetricsConfig_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestAdministrationClient client = CreateLoadTestAdministrationClient(endpoint, credential);

            Response response = await client.GetServerMetricsConfigAsync("<testId>");
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetTestFiles_ShortVersion()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestAdministrationClient client = CreateLoadTestAdministrationClient(endpoint, credential);

            await foreach (BinaryData item in client.GetTestFilesAsync("<testId>"))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetTestFiles_AllParameters()
        {
            Uri endpoint = new Uri("<endpoint>");
            TokenCredential credential = new DefaultAzureCredential();
            LoadTestAdministrationClient client = CreateLoadTestAdministrationClient(endpoint, credential);

            await foreach (BinaryData item in client.GetTestFilesAsync("<testId>"))
            {
            }
        }
    }
}
