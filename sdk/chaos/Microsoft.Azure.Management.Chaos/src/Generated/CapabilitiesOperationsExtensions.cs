// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Chaos
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for CapabilitiesOperations.
    /// </summary>
    public static partial class CapabilitiesOperationsExtensions
    {
            /// <summary>
            /// Get a list of Capability resources that extend a Target resource..
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// String that represents an Azure resource group.
            /// </param>
            /// <param name='parentProviderNamespace'>
            /// String that represents a resource provider namespace.
            /// </param>
            /// <param name='parentResourceType'>
            /// String that represents a resource type.
            /// </param>
            /// <param name='parentResourceName'>
            /// String that represents a resource name.
            /// </param>
            /// <param name='targetName'>
            /// String that represents a Target resource name.
            /// </param>
            /// <param name='continuationToken'>
            /// String that sets the continuation token.
            /// </param>
            public static IPage<Capability> List(this ICapabilitiesOperations operations, string resourceGroupName, string parentProviderNamespace, string parentResourceType, string parentResourceName, string targetName, string continuationToken = default(string))
            {
                return operations.ListAsync(resourceGroupName, parentProviderNamespace, parentResourceType, parentResourceName, targetName, continuationToken).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get a list of Capability resources that extend a Target resource..
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// String that represents an Azure resource group.
            /// </param>
            /// <param name='parentProviderNamespace'>
            /// String that represents a resource provider namespace.
            /// </param>
            /// <param name='parentResourceType'>
            /// String that represents a resource type.
            /// </param>
            /// <param name='parentResourceName'>
            /// String that represents a resource name.
            /// </param>
            /// <param name='targetName'>
            /// String that represents a Target resource name.
            /// </param>
            /// <param name='continuationToken'>
            /// String that sets the continuation token.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<Capability>> ListAsync(this ICapabilitiesOperations operations, string resourceGroupName, string parentProviderNamespace, string parentResourceType, string parentResourceName, string targetName, string continuationToken = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, parentProviderNamespace, parentResourceType, parentResourceName, targetName, continuationToken, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get a Capability resource that extends a Target resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// String that represents an Azure resource group.
            /// </param>
            /// <param name='parentProviderNamespace'>
            /// String that represents a resource provider namespace.
            /// </param>
            /// <param name='parentResourceType'>
            /// String that represents a resource type.
            /// </param>
            /// <param name='parentResourceName'>
            /// String that represents a resource name.
            /// </param>
            /// <param name='targetName'>
            /// String that represents a Target resource name.
            /// </param>
            /// <param name='capabilityName'>
            /// String that represents a Capability resource name.
            /// </param>
            public static Capability Get(this ICapabilitiesOperations operations, string resourceGroupName, string parentProviderNamespace, string parentResourceType, string parentResourceName, string targetName, string capabilityName)
            {
                return operations.GetAsync(resourceGroupName, parentProviderNamespace, parentResourceType, parentResourceName, targetName, capabilityName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get a Capability resource that extends a Target resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// String that represents an Azure resource group.
            /// </param>
            /// <param name='parentProviderNamespace'>
            /// String that represents a resource provider namespace.
            /// </param>
            /// <param name='parentResourceType'>
            /// String that represents a resource type.
            /// </param>
            /// <param name='parentResourceName'>
            /// String that represents a resource name.
            /// </param>
            /// <param name='targetName'>
            /// String that represents a Target resource name.
            /// </param>
            /// <param name='capabilityName'>
            /// String that represents a Capability resource name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Capability> GetAsync(this ICapabilitiesOperations operations, string resourceGroupName, string parentProviderNamespace, string parentResourceType, string parentResourceName, string targetName, string capabilityName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, parentProviderNamespace, parentResourceType, parentResourceName, targetName, capabilityName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete a Capability that extends a Target resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// String that represents an Azure resource group.
            /// </param>
            /// <param name='parentProviderNamespace'>
            /// String that represents a resource provider namespace.
            /// </param>
            /// <param name='parentResourceType'>
            /// String that represents a resource type.
            /// </param>
            /// <param name='parentResourceName'>
            /// String that represents a resource name.
            /// </param>
            /// <param name='targetName'>
            /// String that represents a Target resource name.
            /// </param>
            /// <param name='capabilityName'>
            /// String that represents a Capability resource name.
            /// </param>
            public static void Delete(this ICapabilitiesOperations operations, string resourceGroupName, string parentProviderNamespace, string parentResourceType, string parentResourceName, string targetName, string capabilityName)
            {
                operations.DeleteAsync(resourceGroupName, parentProviderNamespace, parentResourceType, parentResourceName, targetName, capabilityName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete a Capability that extends a Target resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// String that represents an Azure resource group.
            /// </param>
            /// <param name='parentProviderNamespace'>
            /// String that represents a resource provider namespace.
            /// </param>
            /// <param name='parentResourceType'>
            /// String that represents a resource type.
            /// </param>
            /// <param name='parentResourceName'>
            /// String that represents a resource name.
            /// </param>
            /// <param name='targetName'>
            /// String that represents a Target resource name.
            /// </param>
            /// <param name='capabilityName'>
            /// String that represents a Capability resource name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this ICapabilitiesOperations operations, string resourceGroupName, string parentProviderNamespace, string parentResourceType, string parentResourceName, string targetName, string capabilityName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, parentProviderNamespace, parentResourceType, parentResourceName, targetName, capabilityName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Create or update a Capability resource that extends a Target resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// String that represents an Azure resource group.
            /// </param>
            /// <param name='parentProviderNamespace'>
            /// String that represents a resource provider namespace.
            /// </param>
            /// <param name='parentResourceType'>
            /// String that represents a resource type.
            /// </param>
            /// <param name='parentResourceName'>
            /// String that represents a resource name.
            /// </param>
            /// <param name='targetName'>
            /// String that represents a Target resource name.
            /// </param>
            /// <param name='capabilityName'>
            /// String that represents a Capability resource name.
            /// </param>
            public static Capability CreateOrUpdate(this ICapabilitiesOperations operations, string resourceGroupName, string parentProviderNamespace, string parentResourceType, string parentResourceName, string targetName, string capabilityName)
            {
                return operations.CreateOrUpdateAsync(resourceGroupName, parentProviderNamespace, parentResourceType, parentResourceName, targetName, capabilityName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create or update a Capability resource that extends a Target resource.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// String that represents an Azure resource group.
            /// </param>
            /// <param name='parentProviderNamespace'>
            /// String that represents a resource provider namespace.
            /// </param>
            /// <param name='parentResourceType'>
            /// String that represents a resource type.
            /// </param>
            /// <param name='parentResourceName'>
            /// String that represents a resource name.
            /// </param>
            /// <param name='targetName'>
            /// String that represents a Target resource name.
            /// </param>
            /// <param name='capabilityName'>
            /// String that represents a Capability resource name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Capability> CreateOrUpdateAsync(this ICapabilitiesOperations operations, string resourceGroupName, string parentProviderNamespace, string parentResourceType, string parentResourceName, string targetName, string capabilityName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, parentProviderNamespace, parentResourceType, parentResourceName, targetName, capabilityName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get a list of Capability resources that extend a Target resource..
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<Capability> ListNext(this ICapabilitiesOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get a list of Capability resources that extend a Target resource..
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<Capability>> ListNextAsync(this ICapabilitiesOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
