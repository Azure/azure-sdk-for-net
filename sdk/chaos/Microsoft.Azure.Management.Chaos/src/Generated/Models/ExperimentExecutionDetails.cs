// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Chaos.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Model that represents the execution details of a Experiment.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ExperimentExecutionDetails
    {
        /// <summary>
        /// Initializes a new instance of the ExperimentExecutionDetails class.
        /// </summary>
        public ExperimentExecutionDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ExperimentExecutionDetails class.
        /// </summary>
        /// <param name="type">String of the resource type.</param>
        /// <param name="id">String of the fully qualified resource ID.</param>
        /// <param name="name">String of the resource name.</param>
        /// <param name="experimentId">The id of the experiment.</param>
        /// <param name="status">The value of the status of the experiment
        /// execution.</param>
        /// <param name="failureReason">The reason why the execution
        /// failed.</param>
        /// <param name="createdDateUtc">String that represents the created
        /// date time.</param>
        /// <param name="lastActionDateUtc">String that represents the last
        /// action date time.</param>
        /// <param name="startDateUtc">String that represents the start date
        /// time.</param>
        /// <param name="stopDateUtc">String that represents the stop date
        /// time.</param>
        /// <param name="runInformation">The information of the experiment
        /// run.</param>
        public ExperimentExecutionDetails(string type = default(string), string id = default(string), string name = default(string), string experimentId = default(string), string status = default(string), string failureReason = default(string), System.DateTime? createdDateUtc = default(System.DateTime?), System.DateTime? lastActionDateUtc = default(System.DateTime?), System.DateTime? startDateUtc = default(System.DateTime?), System.DateTime? stopDateUtc = default(System.DateTime?), ExperimentExecutionDetailsPropertiesRunInformation runInformation = default(ExperimentExecutionDetailsPropertiesRunInformation))
        {
            Type = type;
            Id = id;
            Name = name;
            ExperimentId = experimentId;
            Status = status;
            FailureReason = failureReason;
            CreatedDateUtc = createdDateUtc;
            LastActionDateUtc = lastActionDateUtc;
            StartDateUtc = startDateUtc;
            StopDateUtc = stopDateUtc;
            RunInformation = runInformation;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets string of the resource type.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

        /// <summary>
        /// Gets string of the fully qualified resource ID.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets string of the resource name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets the id of the experiment.
        /// </summary>
        [JsonProperty(PropertyName = "properties.experimentId")]
        public string ExperimentId { get; private set; }

        /// <summary>
        /// Gets the value of the status of the experiment execution.
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public string Status { get; private set; }

        /// <summary>
        /// Gets the reason why the execution failed.
        /// </summary>
        [JsonProperty(PropertyName = "properties.failureReason")]
        public string FailureReason { get; private set; }

        /// <summary>
        /// Gets string that represents the created date time.
        /// </summary>
        [JsonProperty(PropertyName = "properties.createdDateUtc")]
        public System.DateTime? CreatedDateUtc { get; private set; }

        /// <summary>
        /// Gets string that represents the last action date time.
        /// </summary>
        [JsonProperty(PropertyName = "properties.lastActionDateUtc")]
        public System.DateTime? LastActionDateUtc { get; private set; }

        /// <summary>
        /// Gets string that represents the start date time.
        /// </summary>
        [JsonProperty(PropertyName = "properties.startDateUtc")]
        public System.DateTime? StartDateUtc { get; private set; }

        /// <summary>
        /// Gets string that represents the stop date time.
        /// </summary>
        [JsonProperty(PropertyName = "properties.stopDateUtc")]
        public System.DateTime? StopDateUtc { get; private set; }

        /// <summary>
        /// Gets the information of the experiment run.
        /// </summary>
        [JsonProperty(PropertyName = "properties.runInformation")]
        public ExperimentExecutionDetailsPropertiesRunInformation RunInformation { get; private set; }

    }
}
