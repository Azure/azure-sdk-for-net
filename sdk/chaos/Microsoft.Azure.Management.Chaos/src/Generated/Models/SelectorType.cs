// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Chaos.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for SelectorType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum SelectorType
    {
        [EnumMember(Value = "Percent")]
        Percent,
        [EnumMember(Value = "Random")]
        Random,
        [EnumMember(Value = "Tag")]
        Tag,
        [EnumMember(Value = "List")]
        List
    }
    internal static class SelectorTypeEnumExtension
    {
        internal static string ToSerializedValue(this SelectorType? value)
        {
            return value == null ? null : ((SelectorType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this SelectorType value)
        {
            switch( value )
            {
                case SelectorType.Percent:
                    return "Percent";
                case SelectorType.Random:
                    return "Random";
                case SelectorType.Tag:
                    return "Tag";
                case SelectorType.List:
                    return "List";
            }
            return null;
        }

        internal static SelectorType? ParseSelectorType(this string value)
        {
            switch( value )
            {
                case "Percent":
                    return SelectorType.Percent;
                case "Random":
                    return SelectorType.Random;
                case "Tag":
                    return SelectorType.Tag;
                case "List":
                    return SelectorType.List;
            }
            return null;
        }
    }
}
