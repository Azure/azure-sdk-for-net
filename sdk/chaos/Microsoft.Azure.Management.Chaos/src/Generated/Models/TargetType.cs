// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Chaos.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Model that represents a Target Type resource.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class TargetType : Resource
    {
        /// <summary>
        /// Initializes a new instance of the TargetType class.
        /// </summary>
        public TargetType()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TargetType class.
        /// </summary>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="systemData">The system metadata properties of the
        /// target type resource.</param>
        /// <param name="location">Location of the Target Type
        /// resource.</param>
        /// <param name="displayName">Localized string of the display
        /// name.</param>
        /// <param name="description">Localized string of the
        /// description.</param>
        /// <param name="propertiesSchema">URL to retrieve JSON schema of the
        /// Target Type properties.</param>
        /// <param name="resourceTypes">List of resource types this Target Type
        /// can extend.</param>
        public TargetType(string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), string location = default(string), string displayName = default(string), string description = default(string), string propertiesSchema = default(string), IList<string> resourceTypes = default(IList<string>))
            : base(id, name, type)
        {
            SystemData = systemData;
            Location = location;
            DisplayName = displayName;
            Description = description;
            PropertiesSchema = propertiesSchema;
            ResourceTypes = resourceTypes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the system metadata properties of the target type resource.
        /// </summary>
        [JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData { get; private set; }

        /// <summary>
        /// Gets or sets location of the Target Type resource.
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public string Location { get; set; }

        /// <summary>
        /// Gets localized string of the display name.
        /// </summary>
        [JsonProperty(PropertyName = "properties.displayName")]
        public string DisplayName { get; private set; }

        /// <summary>
        /// Gets localized string of the description.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; private set; }

        /// <summary>
        /// Gets URL to retrieve JSON schema of the Target Type properties.
        /// </summary>
        [JsonProperty(PropertyName = "properties.propertiesSchema")]
        public string PropertiesSchema { get; private set; }

        /// <summary>
        /// Gets list of resource types this Target Type can extend.
        /// </summary>
        [JsonProperty(PropertyName = "properties.resourceTypes")]
        public IList<string> ResourceTypes { get; private set; }

    }
}
