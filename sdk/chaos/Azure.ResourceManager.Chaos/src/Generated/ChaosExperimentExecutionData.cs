// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Chaos
{
    /// <summary>
    /// A class representing the ChaosExperimentExecution data model.
    /// Model that represents the execution of a Experiment.
    /// Serialized Name: ExperimentExecution
    /// </summary>
    public partial class ChaosExperimentExecutionData : ResourceData
    {
        /// <summary> Initializes a new instance of <see cref="ChaosExperimentExecutionData"/>. </summary>
        internal ChaosExperimentExecutionData()
        {
        }

        /// <summary> Initializes a new instance of <see cref="ChaosExperimentExecutionData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="status">
        /// The status of the execution.
        /// Serialized Name: ExperimentExecution.properties.status
        /// </param>
        /// <param name="startedOn">
        /// String that represents the start date time.
        /// Serialized Name: ExperimentExecution.properties.startedAt
        /// </param>
        /// <param name="stoppedOn">
        /// String that represents the stop date time.
        /// Serialized Name: ExperimentExecution.properties.stoppedAt
        /// </param>
        internal ChaosExperimentExecutionData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string status, DateTimeOffset? startedOn, DateTimeOffset? stoppedOn) : base(id, name, resourceType, systemData)
        {
            Status = status;
            StartedOn = startedOn;
            StoppedOn = stoppedOn;
        }

        /// <summary>
        /// The status of the execution.
        /// Serialized Name: ExperimentExecution.properties.status
        /// </summary>
        public string Status { get; }
        /// <summary>
        /// String that represents the start date time.
        /// Serialized Name: ExperimentExecution.properties.startedAt
        /// </summary>
        public DateTimeOffset? StartedOn { get; }
        /// <summary>
        /// String that represents the stop date time.
        /// Serialized Name: ExperimentExecution.properties.stoppedAt
        /// </summary>
        public DateTimeOffset? StoppedOn { get; }
    }
}
