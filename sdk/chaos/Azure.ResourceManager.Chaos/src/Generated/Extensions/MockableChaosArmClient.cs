// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager;
using Azure.ResourceManager.Chaos;

namespace Azure.ResourceManager.Chaos.Mocking
{
    /// <summary> A class to add extension methods to ArmClient. </summary>
    public partial class MockableChaosArmClient : ArmResource
    {
        /// <summary> Initializes a new instance of the <see cref="MockableChaosArmClient"/> class for mocking. </summary>
        protected MockableChaosArmClient()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="MockableChaosArmClient"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal MockableChaosArmClient(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        internal MockableChaosArmClient(ArmClient client) : this(client, ResourceIdentifier.Root)
        {
        }

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary>
        /// Gets an object representing a <see cref="CapabilityResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="CapabilityResource.CreateResourceIdentifier" /> to create a <see cref="CapabilityResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="CapabilityResource"/> object. </returns>
        public virtual CapabilityResource GetCapabilityResource(ResourceIdentifier id)
        {
            CapabilityResource.ValidateResourceId(id);
            return new CapabilityResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="CapabilityTypeResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="CapabilityTypeResource.CreateResourceIdentifier" /> to create a <see cref="CapabilityTypeResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="CapabilityTypeResource"/> object. </returns>
        public virtual CapabilityTypeResource GetCapabilityTypeResource(ResourceIdentifier id)
        {
            CapabilityTypeResource.ValidateResourceId(id);
            return new CapabilityTypeResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing an <see cref="ExperimentResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ExperimentResource.CreateResourceIdentifier" /> to create an <see cref="ExperimentResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ExperimentResource"/> object. </returns>
        public virtual ExperimentResource GetExperimentResource(ResourceIdentifier id)
        {
            ExperimentResource.ValidateResourceId(id);
            return new ExperimentResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing an <see cref="ExperimentStatusResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ExperimentStatusResource.CreateResourceIdentifier" /> to create an <see cref="ExperimentStatusResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ExperimentStatusResource"/> object. </returns>
        public virtual ExperimentStatusResource GetExperimentStatusResource(ResourceIdentifier id)
        {
            ExperimentStatusResource.ValidateResourceId(id);
            return new ExperimentStatusResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing an <see cref="ExperimentExecutionDetailResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ExperimentExecutionDetailResource.CreateResourceIdentifier" /> to create an <see cref="ExperimentExecutionDetailResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ExperimentExecutionDetailResource"/> object. </returns>
        public virtual ExperimentExecutionDetailResource GetExperimentExecutionDetailResource(ResourceIdentifier id)
        {
            ExperimentExecutionDetailResource.ValidateResourceId(id);
            return new ExperimentExecutionDetailResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="TargetTypeResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="TargetTypeResource.CreateResourceIdentifier" /> to create a <see cref="TargetTypeResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="TargetTypeResource"/> object. </returns>
        public virtual TargetTypeResource GetTargetTypeResource(ResourceIdentifier id)
        {
            TargetTypeResource.ValidateResourceId(id);
            return new TargetTypeResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="TargetResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="TargetResource.CreateResourceIdentifier" /> to create a <see cref="TargetResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="TargetResource"/> object. </returns>
        public virtual TargetResource GetTargetResource(ResourceIdentifier id)
        {
            TargetResource.ValidateResourceId(id);
            return new TargetResource(Client, id);
        }
    }
}
