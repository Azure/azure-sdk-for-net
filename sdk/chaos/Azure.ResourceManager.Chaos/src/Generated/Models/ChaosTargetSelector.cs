// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Chaos.Models
{
    /// <summary>
    /// Model that represents a selector in the Experiment resource.
    /// Please note this is the abstract base class. The derived classes available for instantiation are: <see cref="ChaosTargetListSelector"/> and <see cref="ChaosTargetQuerySelector"/>.
    /// </summary>
    public abstract partial class ChaosTargetSelector
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="ChaosTargetSelector"/>. </summary>
        /// <param name="id"> String of the selector ID. </param>
        /// <param name="type"> Chaos target selector discriminator type. </param>
        private protected ChaosTargetSelector(string id, SelectorType @type)
        {
            Id = id;
            Type = @type;
        }

        /// <summary> Initializes a new instance of <see cref="ChaosTargetSelector"/>. </summary>
        /// <param name="id"> String of the selector ID. </param>
        /// <param name="type"> Chaos target selector discriminator type. </param>
        /// <param name="filter"> Model that represents available filter types that can be applied to a targets list. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal ChaosTargetSelector(string id, SelectorType @type, ChaosTargetFilter filter, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Id = id;
            Type = @type;
            Filter = filter;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> String of the selector ID. </summary>
        public string Id { get; set; }

        /// <summary> Chaos target selector discriminator type. </summary>
        internal SelectorType Type { get; set; }

        /// <summary> Model that represents available filter types that can be applied to a targets list. </summary>
        internal ChaosTargetFilter Filter { get; set; }

        /// <summary> Chaos target filter discriminator type. </summary>
        internal FilterType FilterType
        {
            get
            {
                return Filter is null ? default : Filter.Type;
            }
            set
            {
                if (Filter is null)
                {
                    Filter = new Models.ChaosTargetFilter();
                }
                Filter.Type = value;
            }
        }
    }
}
