// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure;

namespace Azure.ResourceManager.Chaos.Models
{
    /// <summary>
    /// The status of operation.
    /// Serialized Name: OperationStatus
    /// </summary>
    public partial class ChaosOperationStatus : ChaosErrorResult
    {
        /// <summary> Initializes a new instance of <see cref="ChaosOperationStatus"/>. </summary>
        internal ChaosOperationStatus()
        {
        }

        /// <summary> Initializes a new instance of <see cref="ChaosOperationStatus"/>. </summary>
        /// <param name="error">
        /// The error object.
        /// Serialized Name: ErrorResponse.error
        /// </param>
        /// <param name="id">
        /// The operation Id.
        /// Serialized Name: OperationStatus.id
        /// </param>
        /// <param name="name">
        /// The operation name.
        /// Serialized Name: OperationStatus.name
        /// </param>
        /// <param name="startOn">
        /// The start time of the operation.
        /// Serialized Name: OperationStatus.startTime
        /// </param>
        /// <param name="endOn">
        /// The end time of the operation.
        /// Serialized Name: OperationStatus.endTime
        /// </param>
        /// <param name="status">
        /// The status of the operation.
        /// Serialized Name: OperationStatus.status
        /// </param>
        internal ChaosOperationStatus(ResponseError error, string id, string name, DateTimeOffset? startOn, DateTimeOffset? endOn, string status) : base(error)
        {
            Id = id;
            Name = name;
            StartOn = startOn;
            EndOn = endOn;
            Status = status;
        }

        /// <summary>
        /// The operation Id.
        /// Serialized Name: OperationStatus.id
        /// </summary>
        public string Id { get; }
        /// <summary>
        /// The operation name.
        /// Serialized Name: OperationStatus.name
        /// </summary>
        public string Name { get; }
        /// <summary>
        /// The start time of the operation.
        /// Serialized Name: OperationStatus.startTime
        /// </summary>
        public DateTimeOffset? StartOn { get; }
        /// <summary>
        /// The end time of the operation.
        /// Serialized Name: OperationStatus.endTime
        /// </summary>
        public DateTimeOffset? EndOn { get; }
        /// <summary>
        /// The status of the operation.
        /// Serialized Name: OperationStatus.status
        /// </summary>
        public string Status { get; }
    }
}
