// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Chaos.Models
{
    /// <summary> Model that represents the extended properties of an experiment execution. </summary>
    public partial class ExperimentExecutionDetailsProperties
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="ExperimentExecutionDetailsProperties"/>. </summary>
        internal ExperimentExecutionDetailsProperties()
        {
        }

        /// <summary> Initializes a new instance of <see cref="ExperimentExecutionDetailsProperties"/>. </summary>
        /// <param name="status"> The status of the execution. </param>
        /// <param name="startedAt"> String that represents the start date time. </param>
        /// <param name="stoppedAt"> String that represents the stop date time. </param>
        /// <param name="failureReason"> The reason why the execution failed. </param>
        /// <param name="lastActionAt"> String that represents the last action date time. </param>
        /// <param name="runInformation"> The information of the experiment run. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal ExperimentExecutionDetailsProperties(string status, DateTimeOffset? startedAt, DateTimeOffset? stoppedAt, string failureReason, DateTimeOffset? lastActionAt, ExperimentExecutionDetailsPropertiesRunInformation runInformation, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Status = status;
            StartedAt = startedAt;
            StoppedAt = stoppedAt;
            FailureReason = failureReason;
            LastActionAt = lastActionAt;
            RunInformation = runInformation;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The status of the execution. </summary>
        public string Status { get; }

        /// <summary> String that represents the start date time. </summary>
        public DateTimeOffset? StartedAt { get; }

        /// <summary> String that represents the stop date time. </summary>
        public DateTimeOffset? StoppedAt { get; }

        /// <summary> The reason why the execution failed. </summary>
        public string FailureReason { get; }

        /// <summary> String that represents the last action date time. </summary>
        public DateTimeOffset? LastActionAt { get; }

        /// <summary> The information of the experiment run. </summary>
        internal ExperimentExecutionDetailsPropertiesRunInformation RunInformation { get; }

        /// <summary> The steps of the experiment run. </summary>
        public IReadOnlyList<ChaosExperimentRunStepStatus> RunInformationSteps
        {
            get
            {
                return RunInformation is null ? default : RunInformation.Steps;
            }
        }
    }
}
