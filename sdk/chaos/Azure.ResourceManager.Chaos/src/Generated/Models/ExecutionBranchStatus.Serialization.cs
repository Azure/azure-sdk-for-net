// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Chaos.Models
{
    public partial class ExecutionBranchStatus
    {
        internal static ExecutionBranchStatus DeserializeExecutionBranchStatus(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> branchName = default;
            Optional<string> branchId = default;
            Optional<string> status = default;
            Optional<IReadOnlyList<ExecutionActionStatus>> actions = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("branchName"u8))
                {
                    branchName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("branchId"u8))
                {
                    branchId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("status"u8))
                {
                    status = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("actions"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<ExecutionActionStatus> array = new List<ExecutionActionStatus>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ExecutionActionStatus.DeserializeExecutionActionStatus(item));
                    }
                    actions = array;
                    continue;
                }
            }
            return new ExecutionBranchStatus(branchName.Value, branchId.Value, status.Value, Optional.ToList(actions));
        }
    }
}
