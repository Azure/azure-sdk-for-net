// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Chaos.Models
{
    public partial class ExperimentExecutionActionTargetDetailsProperties
    {
        internal static ExperimentExecutionActionTargetDetailsProperties DeserializeExperimentExecutionActionTargetDetailsProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<string> status = default;
            Core.Optional<string> target = default;
            Core.Optional<DateTimeOffset?> targetFailedTime = default;
            Core.Optional<DateTimeOffset?> targetCompletedTime = default;
            Core.Optional<ExperimentExecutionActionTargetDetailsError> error = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("status"u8))
                {
                    status = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("target"u8))
                {
                    target = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("targetFailedTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        targetFailedTime = null;
                        continue;
                    }
                    targetFailedTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("targetCompletedTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        targetCompletedTime = null;
                        continue;
                    }
                    targetCompletedTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("error"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        error = null;
                        continue;
                    }
                    error = ExperimentExecutionActionTargetDetailsError.DeserializeExperimentExecutionActionTargetDetailsError(property.Value);
                    continue;
                }
            }
            return new ExperimentExecutionActionTargetDetailsProperties(status.Value, target.Value, Core.Optional.ToNullable(targetFailedTime), Core.Optional.ToNullable(targetCompletedTime), error.Value);
        }
    }
}
