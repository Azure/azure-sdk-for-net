// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Chaos.Models
{
    /// <summary>
    /// Model that represents the a list of actions and action statuses.
    /// Serialized Name: BranchStatus
    /// </summary>
    public partial class ExecutionBranchStatus
    {
        /// <summary> Initializes a new instance of <see cref="ExecutionBranchStatus"/>. </summary>
        internal ExecutionBranchStatus()
        {
            Actions = new ChangeTrackingList<ExecutionActionStatus>();
        }

        /// <summary> Initializes a new instance of <see cref="ExecutionBranchStatus"/>. </summary>
        /// <param name="branchName">
        /// The name of the branch status.
        /// Serialized Name: BranchStatus.branchName
        /// </param>
        /// <param name="branchId">
        /// The id of the branch status.
        /// Serialized Name: BranchStatus.branchId
        /// </param>
        /// <param name="status">
        /// The status of the branch.
        /// Serialized Name: BranchStatus.status
        /// </param>
        /// <param name="actions">
        /// The array of actions.
        /// Serialized Name: BranchStatus.actions
        /// </param>
        internal ExecutionBranchStatus(string branchName, string branchId, string status, IReadOnlyList<ExecutionActionStatus> actions)
        {
            BranchName = branchName;
            BranchId = branchId;
            Status = status;
            Actions = actions;
        }

        /// <summary>
        /// The name of the branch status.
        /// Serialized Name: BranchStatus.branchName
        /// </summary>
        public string BranchName { get; }
        /// <summary>
        /// The id of the branch status.
        /// Serialized Name: BranchStatus.branchId
        /// </summary>
        public string BranchId { get; }
        /// <summary>
        /// The status of the branch.
        /// Serialized Name: BranchStatus.status
        /// </summary>
        public string Status { get; }
        /// <summary>
        /// The array of actions.
        /// Serialized Name: BranchStatus.actions
        /// </summary>
        public IReadOnlyList<ExecutionActionStatus> Actions { get; }
    }
}
