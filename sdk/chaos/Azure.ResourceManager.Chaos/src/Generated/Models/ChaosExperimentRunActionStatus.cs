// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.ResourceManager.Chaos;

namespace Azure.ResourceManager.Chaos.Models
{
    /// <summary> Model that represents the an action and its status. </summary>
    public partial class ChaosExperimentRunActionStatus
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="ChaosExperimentRunActionStatus"/>. </summary>
        internal ChaosExperimentRunActionStatus()
        {
            Targets = new ChangeTrackingList<ExperimentExecutionActionTargetDetailsProperties>();
        }

        /// <summary> Initializes a new instance of <see cref="ChaosExperimentRunActionStatus"/>. </summary>
        /// <param name="actionName"> The name of the action status. </param>
        /// <param name="actionId"> The id of the action status. </param>
        /// <param name="status"> The status of the action. </param>
        /// <param name="startTime"> String that represents the start time of the action. </param>
        /// <param name="endTime"> String that represents the end time of the action. </param>
        /// <param name="targets"> The array of targets. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal ChaosExperimentRunActionStatus(string actionName, string actionId, string status, DateTimeOffset? startTime, DateTimeOffset? endTime, IReadOnlyList<ExperimentExecutionActionTargetDetailsProperties> targets, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            ActionName = actionName;
            ActionId = actionId;
            Status = status;
            StartTime = startTime;
            EndTime = endTime;
            Targets = targets;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The name of the action status. </summary>
        public string ActionName { get; }

        /// <summary> The id of the action status. </summary>
        public string ActionId { get; }

        /// <summary> The status of the action. </summary>
        public string Status { get; }

        /// <summary> String that represents the start time of the action. </summary>
        public DateTimeOffset? StartTime { get; }

        /// <summary> String that represents the end time of the action. </summary>
        public DateTimeOffset? EndTime { get; }

        /// <summary> The array of targets. </summary>
        public IReadOnlyList<ExperimentExecutionActionTargetDetailsProperties> Targets { get; }
    }
}
