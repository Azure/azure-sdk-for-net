// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.ResourceManager.Chaos.Models
{
    /// <summary>
    /// Model that represents a branch in the step. 9 total per experiment.
    /// Serialized Name: ChaosExperimentBranch
    /// </summary>
    public partial class ChaosExperimentBranch
    {
        /// <summary> Initializes a new instance of <see cref="ChaosExperimentBranch"/>. </summary>
        /// <param name="name">
        /// String of the branch name.
        /// Serialized Name: ChaosExperimentBranch.name
        /// </param>
        /// <param name="actions">
        /// List of actions.
        /// Serialized Name: ChaosExperimentBranch.actions
        /// Please note <see cref="ChaosExperimentAction"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="ExperimentContinuousAction"/>, <see cref="ExperimentDelayAction"/> and <see cref="ExperimentDiscreteAction"/>.
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> or <paramref name="actions"/> is null. </exception>
        public ChaosExperimentBranch(string name, IEnumerable<ChaosExperimentAction> actions)
        {
            Argument.AssertNotNull(name, nameof(name));
            Argument.AssertNotNull(actions, nameof(actions));

            Name = name;
            Actions = actions.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="ChaosExperimentBranch"/>. </summary>
        /// <param name="name">
        /// String of the branch name.
        /// Serialized Name: ChaosExperimentBranch.name
        /// </param>
        /// <param name="actions">
        /// List of actions.
        /// Serialized Name: ChaosExperimentBranch.actions
        /// Please note <see cref="ChaosExperimentAction"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="ExperimentContinuousAction"/>, <see cref="ExperimentDelayAction"/> and <see cref="ExperimentDiscreteAction"/>.
        /// </param>
        internal ChaosExperimentBranch(string name, IList<ChaosExperimentAction> actions)
        {
            Name = name;
            Actions = actions;
        }

        /// <summary>
        /// String of the branch name.
        /// Serialized Name: ChaosExperimentBranch.name
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// List of actions.
        /// Serialized Name: ChaosExperimentBranch.actions
        /// Please note <see cref="ChaosExperimentAction"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="ExperimentContinuousAction"/>, <see cref="ExperimentDelayAction"/> and <see cref="ExperimentDiscreteAction"/>.
        /// </summary>
        public IList<ChaosExperimentAction> Actions { get; }
    }
}
