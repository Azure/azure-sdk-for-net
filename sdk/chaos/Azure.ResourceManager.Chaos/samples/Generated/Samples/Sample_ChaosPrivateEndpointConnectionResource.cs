// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.ResourceManager.Chaos.Samples
{
    public partial class Sample_ChaosPrivateEndpointConnectionResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_GetInformationAboutAPrivateEndpointConnectionUnderAPrivateAccessResource()
        {
            // Generated from example definition: 2024-11-01-preview/PrivateAccesses_GetAPrivateEndpointConnection.json
            // this example is just showing the usage of "PrivateEndpointConnection_GetAPrivateEndpointConnection" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ChaosPrivateEndpointConnectionResource created on azure
            // for more information of creating ChaosPrivateEndpointConnectionResource, please refer to the document of ChaosPrivateEndpointConnectionResource
            string subscriptionId = "6b052e15-03d3-4f17-b2e1-be7f07588291";
            string resourceGroupName = "myResourceGroup";
            string privateAccessName = "myPrivateAccess";
            string privateEndpointConnectionName = "myPrivateEndpointConnection";
            ResourceIdentifier chaosPrivateEndpointConnectionResourceId = ChaosPrivateEndpointConnectionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, privateAccessName, privateEndpointConnectionName);
            ChaosPrivateEndpointConnectionResource chaosPrivateEndpointConnection = client.GetChaosPrivateEndpointConnectionResource(chaosPrivateEndpointConnectionResourceId);

            // invoke the operation
            ChaosPrivateEndpointConnectionResource result = await chaosPrivateEndpointConnection.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ChaosPrivateEndpointConnectionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_DeleteAPrivateEndpointConnectionUnderAPrivateAccessResource()
        {
            // Generated from example definition: 2024-11-01-preview/PrivateAccesses_DeleteAPrivateEndpointConnection.json
            // this example is just showing the usage of "PrivateEndpointConnection_DeleteAPrivateEndpointConnection" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ChaosPrivateEndpointConnectionResource created on azure
            // for more information of creating ChaosPrivateEndpointConnectionResource, please refer to the document of ChaosPrivateEndpointConnectionResource
            string subscriptionId = "6b052e15-03d3-4f17-b2e1-be7f07588291";
            string resourceGroupName = "myResourceGroup";
            string privateAccessName = "myPrivateAccess";
            string privateEndpointConnectionName = "myPrivateEndpointConnection";
            ResourceIdentifier chaosPrivateEndpointConnectionResourceId = ChaosPrivateEndpointConnectionResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, privateAccessName, privateEndpointConnectionName);
            ChaosPrivateEndpointConnectionResource chaosPrivateEndpointConnection = client.GetChaosPrivateEndpointConnectionResource(chaosPrivateEndpointConnectionResourceId);

            // invoke the operation
            await chaosPrivateEndpointConnection.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }
    }
}
