{
  "swagger": "2.0",
  "info": {
    "version": "2020-03-13",
    "title": "IotHub Gateway Service APIs"
  },
  "host": "fully-qualified-iothubname.azure-devices.net",
  "schemes": [
    "https"
  ],
  "paths": {
    "/configurations/{id}": {
      "get": {
        "description": "Gets a configuration on the IoT Hub for automatic device/module management.",
        "operationId": "Configuration_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the configuration.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          }
        }
      },
      "put": {
        "description": "Creates or updates a configuration on the IoT Hub for automatic device/module management. Configuration identifier and Content cannot be updated.",
        "operationId": "Configuration_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the configuration.",
            "required": true,
            "type": "string"
          },
          {
            "name": "configuration",
            "in": "body",
            "description": "The configuration to be created or updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The string representing a weak ETag for the configuration, as per RFC7232. This should not be set when creating a configuration, but may be set when updating a configuration.",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          },
          "201": {
            "description": "Created.",
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a configuration on the IoT Hub for automatic device/module management.",
        "operationId": "Configuration_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the configuration.",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The string representing a weak ETag for the configuration, as per RFC7232. The delete operation is performed only if this ETag matches the value maintained by the server, indicating that the configuration has not been modified since it was last retrieved. To force an unconditional delete, set If-Match to the wildcard character (*).",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content."
          }
        }
      }
    },
    "/configurations": {
      "get": {
        "description": "Gets configurations on the IoT Hub for automatic device/module management. Pagination is not supported.",
        "operationId": "Configuration_GetConfigurations",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "top",
            "in": "query",
            "description": "The number of configurations to retrieve. Value will be overridden if greater than the maximum deployment count for the IoT Hub.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Configuration"
              }
            }
          }
        }
      }
    },
    "/configurations/testQueries": {
      "post": {
        "description": "Validates target condition and custom metric queries for a configuration on the IoT Hub.",
        "operationId": "Configuration_TestQueries",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "body",
            "description": "The configuration for target condition and custom metric queries.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigurationQueriesTestInput"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/ConfigurationQueriesTestResponse"
            }
          }
        }
      }
    },
    "/statistics/devices": {
      "get": {
        "description": "Gets device statistics of the IoT Hub identity registry, such as total device count.",
        "operationId": "Statistics_GetDeviceStatistics",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/RegistryStatistics"
            }
          }
        }
      }
    },
    "/statistics/service": {
      "get": {
        "description": "Gets service statistics of the IoT Hub identity registry, such as connected device count.",
        "operationId": "Statistics_GetServiceStatistics",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/ServiceStatistics"
            }
          }
        }
      }
    },
    "/devices": {
      "get": {
        "description": "Gets the identities of multiple devices from the IoT Hub identity registry. Not recommended. Use the IoT Hub query API to retrieve device twin and device identity information. See https://docs.microsoft.com/en-us/rest/api/iothub/service/queryiothub and https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-query-language for more information.",
        "operationId": "Devices_GetDevices",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "top",
            "in": "query",
            "description": "The maximum number of device identities returned by the query. Any value outside the range of 1-1000 is considered to be 1000.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Device"
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates, updates, or deletes the identities of multiple devices from the IoT Hub identity registry. A device identity can be specified only once in the list. Different operations (create, update, delete) on different devices are allowed. A maximum of 100 devices can be specified per invocation. For large scale operations, use the import feature using blob storage (https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities).",
        "operationId": "BulkRegistry_UpdateRegistry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "devices",
            "in": "body",
            "description": "The registry operations to perform.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExportImportDevice"
              }
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/BulkRegistryOperationResult"
            }
          },
          "400": {
            "description": "Bad Request.",
            "schema": {
              "$ref": "#/definitions/BulkRegistryOperationResult"
            }
          }
        }
      }
    },
    "/devices/query": {
      "post": {
        "description": "Query an IoT Hub to retrieve information regarding device twins using a SQL-like language. See https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language for more information. Pagination is supported. This returns information about device twins only.",
        "operationId": "Query_GetTwins",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "querySpecification",
            "in": "body",
            "description": "The query string. See https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language for more information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuerySpecification"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "x-ms-continuation",
            "in": "header",
            "description": "The continuation token used to get the next page of results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-ms-max-item-count",
            "in": "header",
            "description": "The maximum number of items returned per page. The service may use a different value if the value specified is not acceptable.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Twin"
              }
            },
            "headers": {
              "x-ms-item-type": {
                "description": "The type of list of items.",
                "type": "string"
              },
              "x-ms-continuation": {
                "description": "The continuation token used to get the next page of results.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/devices/{id}": {
      "get": {
        "description": "Gets a device from the identity registry of the IoT Hub.",
        "operationId": "Devices_GetIdentity",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the device.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        }
      },
      "put": {
        "description": "Creates or updates the identity of a device in the identity registry of the IoT Hub.",
        "operationId": "Devices_CreateOrUpdateIdentity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "device",
            "in": "body",
            "description": "The contents of the device identity.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Device"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The string representing a weak ETag for the device identity, as per RFC7232. This should not be set when creating a device, but may be set when updating a device.",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes the identity of a device from the identity registry of the IoT Hub.",
        "operationId": "Devices_DeleteIdentity",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The string representing a weak ETag for the device identity, as per RFC7232. The delete operation is performed only if this ETag matches the value maintained by the server, indicating that the device identity has not been modified since it was last retrieved. To force an unconditional delete, set If-Match to the wildcard character (*).",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content."
          }
        }
      }
    },
    "/devices/{id}/applyConfigurationContent": {
      "post": {
        "description": "Applies the configuration content to an edge device.",
        "operationId": "Configuration_ApplyOnEdgeDevice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the edge device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content",
            "in": "body",
            "description": "The configuration content.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigurationContent"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content."
          }
        }
      }
    },
    "/jobs/create": {
      "post": {
        "description": "Creates a new import or export job on the IoT Hub. See https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities for more information.",
        "operationId": "Jobs_CreateImportExportJob",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "jobProperties",
            "in": "body",
            "description": "The job specifications.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobProperties"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/JobProperties"
            }
          }
        }
      }
    },
    "/jobs": {
      "get": {
        "description": "Gets the status of all import and export jobs in the IoT Hub. See https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities for more information.",
        "operationId": "Jobs_GetImportExportJobs",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobProperties"
              }
            }
          }
        }
      }
    },
    "/jobs/{id}": {
      "get": {
        "description": "Gets the status of an import or export job in the IoT Hub. See https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities for more information.",
        "operationId": "Jobs_GetImportExportJob",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the job.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/JobProperties"
            }
          }
        }
      },
      "delete": {
        "description": "Cancels an import or export job in the IoT Hub.",
        "operationId": "Jobs_CancelImportExportJob",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the job.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "No Content."
          }
        }
      }
    },
    "/devices/{id}/commands": {
      "delete": {
        "description": "Deletes all the pending commands for a device in the IoT Hub.",
        "operationId": "CloudToDeviceMessages_PurgeCloudToDeviceMessageQueue",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the device.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/PurgeMessageQueueResult"
            }
          }
        }
      }
    },
    "/twins/{id}": {
      "get": {
        "description": "Gets the device twin. See https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-device-twins for more information.",
        "operationId": "Devices_GetTwin",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the device.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/Twin"
            }
          }
        }
      },
      "put": {
        "description": "Replaces the tags and desired properties of a device twin. See https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-device-twins for more information.",
        "operationId": "Devices_ReplaceTwin",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceTwinInfo",
            "in": "body",
            "description": "The device twin info that will replace the existing info.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Twin"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The string representing a weak ETag for the device twin, as per RFC7232. It determines if the replace operation should be carried out.",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/Twin"
            }
          }
        }
      },
      "patch": {
        "description": "Updates the tags and desired properties of a device twin. See https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-device-twins for more information.",
        "operationId": "Devices_UpdateTwin",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceTwinInfo",
            "in": "body",
            "description": "The device twin info containing the tags and desired properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Twin"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The string representing a weak ETag for the device twin, as per RFC7232. It determines if the update operation should be carried out.",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/Twin"
            }
          }
        }
      }
    },
    "/twins/{id}/modules/{mid}": {
      "get": {
        "description": "Gets the module twin. See https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-device-twins for more information.",
        "operationId": "Modules_GetTwin",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "mid",
            "in": "path",
            "description": "The unique identifier of the module.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "The module state information.",
            "schema": {
              "$ref": "#/definitions/Twin"
            }
          }
        }
      },
      "put": {
        "description": "Replaces the tags and desired properties of a module twin. See https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-device-twins for more information.",
        "operationId": "Modules_ReplaceTwin",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "mid",
            "in": "path",
            "description": "The unique identifier of the module.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceTwinInfo",
            "in": "body",
            "description": "The module twin info that will replace the existing info.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Twin"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The string representing a weak ETag for the device twin, as per RFC7232. It determines if the replace operation should be carried out.",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/Twin"
            }
          }
        }
      },
      "patch": {
        "description": "Updates the tags and desired properties of a module twin. See https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-device-twins for more information.",
        "operationId": "Modules_UpdateTwin",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "mid",
            "in": "path",
            "description": "The unique identifier of the module.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceTwinInfo",
            "in": "body",
            "description": "The module twin info containing the tags and desired properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Twin"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The string representing a weak ETag for the device twin, as per RFC7232. It determines if the update operation should be carried out.",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/Twin"
            }
          }
        }
      }
    },
    "/messages/serviceBound/feedback": {
      "get": {
        "description": "Gets the feedback for cloud-to-device messages. See https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging for more information. This capability is only available in the standard tier IoT Hub. For more information, see [Choose the right IoT Hub tier](https://aka.ms/scaleyouriotsolution).",
        "operationId": "CloudToDeviceMessages_ReceiveFeedbackNotification",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          }
        }
      }
    },
    "/messages/serviceBound/feedback/{lockToken}": {
      "delete": {
        "description": "Completes the cloud-to-device feedback message. A completed message is deleted from the feedback queue of the service. See https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging for more information.",
        "operationId": "CloudToDeviceMessages_CompleteFeedbackNotification",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "lockToken",
            "in": "path",
            "description": "The lock token obtained when the cloud-to-device message is received. This is used to resolve race conditions when completing a feedback message.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content."
          }
        }
      }
    },
    "/messages/serviceBound/feedback/{lockToken}/abandon": {
      "post": {
        "description": "Abandons the lock on a cloud-to-device feedback message. See https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging for more information.",
        "operationId": "CloudToDeviceMessages_AbandonFeedbackNotification",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "lockToken",
            "in": "path",
            "description": "The lock token obtained when the cloud-to-device message is received.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content."
          }
        }
      }
    },
    "/jobs/v2/{id}": {
      "get": {
        "description": "Gets details of a scheduled job from the IoT Hub. See https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-jobs for more information.",
        "operationId": "Jobs_GetScheduledJob",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the job.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/JobResponse"
            }
          }
        }
      },
      "put": {
        "description": "Creates a new job to schedule twin updates or direct methods on the IoT Hub at a scheduled time. See https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-jobs for more information.",
        "operationId": "Jobs_CreateScheduledJob",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the job.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobRequest",
            "in": "body",
            "description": "The job request info.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobRequest"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/JobResponse"
            }
          }
        }
      }
    },
    "/jobs/v2/{id}/cancel": {
      "post": {
        "description": "Cancels a scheduled job on the IoT Hub. See https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-jobs for more information.",
        "operationId": "Jobs_CancelScheduledJob",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the job.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/JobResponse"
            }
          }
        }
      }
    },
    "/jobs/v2/query": {
      "get": {
        "description": "Gets the information about jobs using an IoT Hub query. See https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language for more information.",
        "operationId": "Jobs_QueryScheduledJobs",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "jobType",
            "in": "query",
            "description": "The job type. See https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-jobs#querying-for-progress-on-jobs for a list of possible job types.",
            "required": false,
            "type": "string"
          },
          {
            "name": "jobStatus",
            "in": "query",
            "description": "The job status. See https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-jobs#querying-for-progress-on-jobs for a list of possible statuses.",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/QueryResult"
            }
          }
        }
      }
    },
    "/devices/{id}/modules": {
      "get": {
        "description": "Gets all the module identities on the device.",
        "operationId": "Modules_GetModulesOnDevice",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the device.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Module"
              }
            }
          }
        }
      }
    },
    "/devices/{id}/modules/{mid}": {
      "get": {
        "description": "Gets a module identity on the device.",
        "operationId": "Modules_GetIdentity",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "mid",
            "in": "path",
            "description": "The unique identifier of the module.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/Module"
            }
          }
        }
      },
      "put": {
        "description": "Creates or updates the module identity for a device in the IoT Hub. The moduleId and generationId cannot be updated by the user.",
        "operationId": "Modules_CreateOrUpdateIdentity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "mid",
            "in": "path",
            "description": "The unique identifier of the module.",
            "required": true,
            "type": "string"
          },
          {
            "name": "module",
            "in": "body",
            "description": "The module identity.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Module"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The string representing a weak ETag for the module, as per RFC7232. This should not be set when creating a module, but may be set when updating a module.",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/Module"
            }
          },
          "201": {
            "description": "Created.",
            "schema": {
              "$ref": "#/definitions/Module"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes the module identity for a device in the IoT Hub.",
        "operationId": "Modules_DeleteIdentity",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the deivce.",
            "required": true,
            "type": "string"
          },
          {
            "name": "mid",
            "in": "path",
            "description": "The unique identifier of the module.",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The string representing a weak ETag for the module, as per RFC7232. The delete operation is performed only if this ETag matches the value maintained by the server, indicating that the module has not been modified since it was last retrieved. To force an unconditional delete, set If-Match to the wildcard character (*).",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content."
          }
        }
      }
    },
    "/twins/{deviceId}/methods": {
      "post": {
        "description": "Invokes a direct method on a device. See https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-direct-methods for more information.",
        "operationId": "Devices_InvokeMethod",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "The unique identifier of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "directMethodRequest",
            "in": "body",
            "description": "The parameters to execute a direct method on the device.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloudToDeviceMethod"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/CloudToDeviceMethodResult"
            }
          }
        }
      }
    },
    "/twins/{deviceId}/modules/{moduleId}/methods": {
      "post": {
        "description": "Invokes a direct method on a module of a device. See https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-direct-methods for more information.",
        "operationId": "Modules_InvokeMethod",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "The unique identifier of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "moduleId",
            "in": "path",
            "description": "The unique identifier of the module.",
            "required": true,
            "type": "string"
          },
          {
            "name": "directMethodRequest",
            "in": "body",
            "description": "The parameters to execute a direct method on the module.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloudToDeviceMethod"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/CloudToDeviceMethodResult"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ConfigurationMetrics": {
      "description": "The configuration metrics for Iot Hub devices and modules.",
      "type": "object",
      "properties": {
        "results": {
          "description": "The results of the metrics collection queries.",
          "type": "object",
          "additionalProperties": {
            "format": "int64",
            "type": "integer"
          }
        },
        "queries": {
          "description": "The key-value pairs with queries and their identifier.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Configuration": {
      "description": "The configuration for Iot Hub device and module twins.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique identifier of the configuration.",
          "type": "string"
        },
        "schemaVersion": {
          "description": "The schema version of the configuration.",
          "type": "string"
        },
        "labels": {
          "description": "The key-value pairs used to describe the configuration.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "content": {
          "$ref": "#/definitions/ConfigurationContent",
          "description": "The content of the configuration."
        },
        "targetCondition": {
          "description": "The query used to define the targeted devices or modules. The query is based on twin tags and/or reported properties.",
          "type": "string"
        },
        "createdTimeUtc": {
          "format": "date-time",
          "description": "The creation date and time of the configuration.",
          "type": "string"
        },
        "lastUpdatedTimeUtc": {
          "format": "date-time",
          "description": "The update date and time of the configuration.",
          "type": "string"
        },
        "priority": {
          "format": "int32",
          "description": "The priority number assigned to the configuration.",
          "type": "integer"
        },
        "systemMetrics": {
          "$ref": "#/definitions/ConfigurationMetrics",
          "description": "The system metrics computed by the IoT Hub that cannot be customized."
        },
        "metrics": {
          "$ref": "#/definitions/ConfigurationMetrics",
          "description": "The custom metrics specified by the developer as queries against twin reported properties."
        },
        "etag": {
          "description": "The ETag of the configuration.",
          "type": "string"
        }
      }
    },
    "ConfigurationContent": {
      "description": "The configuration content for devices or modules on edge devices.",
      "type": "object",
      "properties": {
        "deviceContent": {
          "description": "The device configuration content.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "modulesContent": {
          "description": "The modules configuration content.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        },
        "moduleContent": {
          "description": "The module configuration content.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "ConfigurationQueriesTestInput": {
      "type": "object",
      "properties": {
        "targetCondition": {
          "description": "The query used to define targeted devices or modules. The query is based on twin tags and/or reported properties.",
          "type": "string"
        },
        "customMetricQueries": {
          "description": "The key-value pairs with queries and their identifier.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ConfigurationQueriesTestResponse": {
      "type": "object",
      "properties": {
        "targetConditionError": {
          "description": "The errors from running the target condition query.",
          "type": "string"
        },
        "customMetricQueryErrors": {
          "description": "The errors from running the custom metric query.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "RegistryStatistics": {
      "type": "object",
      "properties": {
        "totalDeviceCount": {
          "format": "int64",
          "description": "The total number of devices registered for the IoT Hub.",
          "type": "integer"
        },
        "enabledDeviceCount": {
          "format": "int64",
          "description": "The number of currently enabled devices.",
          "type": "integer"
        },
        "disabledDeviceCount": {
          "format": "int64",
          "description": "The number of currently disabled devices.",
          "type": "integer"
        }
      }
    },
    "ServiceStatistics": {
      "type": "object",
      "properties": {
        "connectedDeviceCount": {
          "format": "int64",
          "description": "The number of currently connected devices.",
          "type": "integer"
        }
      }
    },
    "Device": {
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "The unique identifier of the device.",
          "type": "string"
        },
        "generationId": {
          "description": "The IoT Hub-generated, case-sensitive string up to 128 characters long. This value is used to distinguish devices with the same deviceId, when they have been deleted and re-created.",
          "type": "string"
        },
        "etag": {
          "description": "The string representing a weak ETag for the device identity, as per RFC7232.",
          "type": "string"
        },
        "connectionState": {
          "description": "The state of the device.",
          "enum": [
            "Disconnected",
            "Connected"
          ],
          "type": "string"
        },
        "status": {
          "description": "The status of the device. If the status disabled, a device cannot connect to the service.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "type": "string"
        },
        "statusReason": {
          "description": "The 128 character-long string that stores the reason for the device identity status. All UTF-8 characters are allowed.",
          "type": "string"
        },
        "connectionStateUpdatedTime": {
          "format": "date-time",
          "description": "The date and time the connection state was last updated.",
          "type": "string"
        },
        "statusUpdatedTime": {
          "format": "date-time",
          "description": "The date and time when the status field was last updated.",
          "type": "string"
        },
        "lastActivityTime": {
          "format": "date-time",
          "description": "The date and last time the device last connected, received, or sent a message.",
          "type": "string"
        },
        "cloudToDeviceMessageCount": {
          "format": "int32",
          "description": "The number of cloud-to-device messages currently queued to be sent to the device.",
          "type": "integer"
        },
        "authentication": {
          "$ref": "#/definitions/AuthenticationMechanism",
          "description": "The authentication mechanism used by the device."
        },
        "capabilities": {
          "$ref": "#/definitions/DeviceCapabilities",
          "description": "The set of capabilities of the device. For example, if this device is an edge device or not."
        },
        "deviceScope": {
          "description": "The scope of the device. Auto generated and immutable for edge devices and modifiable in leaf devices to create child/parent relationship.",
          "type": "string"
        }
      }
    },
    "AuthenticationMechanism": {
      "type": "object",
      "properties": {
        "symmetricKey": {
          "$ref": "#/definitions/SymmetricKey",
          "description": "The primary and secondary keys used for SAS based authentication."
        },
        "x509Thumbprint": {
          "$ref": "#/definitions/X509Thumbprint",
          "description": "The primary and secondary x509 thumbprints used for x509 based authentication."
        },
        "type": {
          "description": "The type of authentication used to connect to the service.",
          "enum": [
            "sas",
            "selfSigned",
            "certificateAuthority",
            "none"
          ],
          "type": "string"
        }
      }
    },
    "DeviceCapabilities": {
      "description": "The status of capabilities enabled on the device.",
      "type": "object",
      "properties": {
        "iotEdge": {
          "description": "The property that determines if the device is an edge device or not.",
          "type": "boolean"
        }
      }
    },
    "SymmetricKey": {
      "type": "object",
      "properties": {
        "primaryKey": {
          "description": "The base64 encoded primary key of the device.",
          "type": "string"
        },
        "secondaryKey": {
          "description": "The base64 encoded secondary key of the device.",
          "type": "string"
        }
      }
    },
    "X509Thumbprint": {
      "type": "object",
      "properties": {
        "primaryThumbprint": {
          "description": "The X509 client certificate primary thumbprint.",
          "type": "string"
        },
        "secondaryThumbprint": {
          "description": "The X509 client certificate secondary thumbprint.",
          "type": "string"
        }
      }
    },
    "ExportImportDevice": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique identifier of the device.",
          "type": "string"
        },
        "moduleId": {
          "description": "The unique identifier of the module, if applicable.",
          "type": "string"
        },
        "eTag": {
          "description": "The string representing a weak ETag for the device RFC7232. The value is only used if import mode is updateIfMatchETag, in that case the import operation is performed only if this ETag matches the value maintained by the server.",
          "type": "string"
        },
        "importMode": {
          "description": "The type of registry operation and ETag preferences.",
          "enum": [
            "create",
            "update",
            "updateIfMatchETag",
            "delete",
            "deleteIfMatchETag",
            "updateTwin",
            "updateTwinIfMatchETag"
          ],
          "type": "string"
        },
        "status": {
          "description": "The status of the module. If disabled, the module cannot connect to the service.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "type": "string"
        },
        "statusReason": {
          "description": "The 128 character-long string that stores the reason for the device identity status. All UTF-8 characters are allowed.",
          "type": "string"
        },
        "authentication": {
          "$ref": "#/definitions/AuthenticationMechanism",
          "description": "The authentication mechanism used by the module. This parameter is optional and defaults to SAS if not provided. In that case, primary/secondary access keys are auto-generated."
        },
        "twinETag": {
          "description": "The string representing a weak ETag for the device twin RFC7232. The value is only used if import mode is updateIfMatchETag, in that case the import operation is performed only if this ETag matches the value maintained by the server.",
          "type": "string"
        },
        "tags": {
          "description": "The JSON document read and written by the solution back end. The tags are not visible to device apps.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "properties": {
          "$ref": "#/definitions/PropertyContainer",
          "description": "The desired and reported properties for the device."
        },
        "capabilities": {
          "$ref": "#/definitions/DeviceCapabilities",
          "description": "The status of capabilities enabled on the device."
        },
        "deviceScope": {
          "description": "The scope of the device.",
          "type": "string"
        }
      }
    },
    "PropertyContainer": {
      "description": "The desired and reported properties of the twin. The maximum depth of the object is 10.",
      "type": "object",
      "properties": {
        "desired": {
          "description": "The collection of desired property key-value pairs. The keys are UTF-8 encoded, case-sensitive and up-to 1KB in length. Allowed characters exclude UNICODE control characters (segments C0 and C1), '.', '$' and space. The desired porperty values are JSON objects, up-to 4KB in length.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "reported": {
          "description": "The collection of reported property key-value pairs. The keys are UTF-8 encoded, case-sensitive and up-to 1KB in length. Allowed characters exclude UNICODE control characters (segments C0 and C1), '.', '$' and space. The reported property values are JSON objects, up-to 4KB in length.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "BulkRegistryOperationResult": {
      "description": "The result of the bulk registry operation.",
      "type": "object",
      "properties": {
        "isSuccessful": {
          "description": "The operation result.",
          "type": "boolean"
        },
        "errors": {
          "description": "The device registry operation errors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceRegistryOperationError"
          }
        },
        "warnings": {
          "description": "The device registry operation warnings.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceRegistryOperationWarning"
          }
        }
      }
    },
    "DeviceRegistryOperationError": {
      "description": "The device registry operation error details.",
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "The unique identifier of the device.",
          "type": "string"
        },
        "errorCode": {
          "description": "The error code.",
          "enum": [
            "InvalidErrorCode",
            "GenericBadRequest",
            "InvalidProtocolVersion",
            "DeviceInvalidResultCount",
            "InvalidOperation",
            "ArgumentInvalid",
            "ArgumentNull",
            "IotHubFormatError",
            "DeviceStorageEntitySerializationError",
            "BlobContainerValidationError",
            "ImportWarningExistsError",
            "InvalidSchemaVersion",
            "DeviceDefinedMultipleTimes",
            "DeserializationError",
            "BulkRegistryOperationFailure",
            "DefaultStorageEndpointNotConfigured",
            "InvalidFileUploadCorrelationId",
            "ExpiredFileUploadCorrelationId",
            "InvalidStorageEndpoint",
            "InvalidMessagingEndpoint",
            "InvalidFileUploadCompletionStatus",
            "InvalidStorageEndpointOrBlob",
            "RequestCanceled",
            "InvalidStorageEndpointProperty",
            "EtagDoesNotMatch",
            "RequestTimedOut",
            "UnsupportedOperationOnReplica",
            "NullMessage",
            "ConnectionForcefullyClosedOnNewConnection",
            "InvalidDeviceScope",
            "ConnectionForcefullyClosedOnFaultInjection",
            "ConnectionRejectedOnFaultInjection",
            "InvalidEndpointAuthenticationType",
            "ManagedIdentityNotEnabled",
            "InvalidRouteTestInput",
            "InvalidSourceOnRoute",
            "RoutingNotEnabled",
            "InvalidContentEncodingOrType",
            "InvalidEndorsementKey",
            "InvalidRegistrationId",
            "InvalidStorageRootKey",
            "InvalidEnrollmentGroupId",
            "TooManyEnrollments",
            "RegistrationIdDefinedMultipleTimes",
            "CustomAllocationFailed",
            "CustomAllocationIotHubNotSpecified",
            "CustomAllocationUnauthorizedAccess",
            "CannotRegisterModuleToModule",
            "TenantHubRoutingNotEnabled",
            "InvalidConfigurationTargetCondition",
            "InvalidConfigurationContent",
            "CannotModifyImmutableConfigurationContent",
            "InvalidConfigurationCustomMetricsQuery",
            "InvalidPnPInterfaceDefinition",
            "InvalidPnPDesiredProperties",
            "InvalidPnPReportedProperties",
            "InvalidPnPWritableReportedProperties",
            "InvalidDigitalTwinJsonPatch",
            "InvalidDigitalTwinPayload",
            "InvalidDigitalTwinPatch",
            "InvalidDigitalTwinPatchPath",
            "GenericUnauthorized",
            "IotHubNotFound",
            "IotHubUnauthorizedAccess",
            "IotHubUnauthorized",
            "ElasticPoolNotFound",
            "SystemModuleModifyUnauthorizedAccess",
            "GenericForbidden",
            "IotHubSuspended",
            "IotHubQuotaExceeded",
            "JobQuotaExceeded",
            "DeviceMaximumQueueDepthExceeded",
            "IotHubMaxCbsTokenExceeded",
            "DeviceMaximumActiveFileUploadLimitExceeded",
            "DeviceMaximumQueueSizeExceeded",
            "RoutingEndpointResponseForbidden",
            "InvalidMessageExpiryTime",
            "OperationNotAvailableInCurrentTier",
            "KeyEncryptionKeyRevoked",
            "DeviceModelMaxPropertiesExceeded",
            "DeviceModelMaxIndexablePropertiesExceeded",
            "IotDpsSuspended",
            "IotDpsSuspending",
            "GenericNotFound",
            "DeviceNotFound",
            "JobNotFound",
            "QuotaMetricNotFound",
            "SystemPropertyNotFound",
            "AmqpAddressNotFound",
            "RoutingEndpointResponseNotFound",
            "CertificateNotFound",
            "ElasticPoolTenantHubNotFound",
            "ModuleNotFound",
            "AzureTableStoreNotFound",
            "IotHubFailingOver",
            "FeatureNotSupported",
            "DigitalTwinInterfaceNotFound",
            "QueryStoreClusterNotFound",
            "DeviceNotOnline",
            "DeviceConnectionClosedRemotely",
            "EnrollmentNotFound",
            "DeviceRegistrationNotFound",
            "AsyncOperationNotFound",
            "EnrollmentGroupNotFound",
            "DeviceRecordNotFound",
            "GroupRecordNotFound",
            "DeviceGroupNotFound",
            "ProvisioningSettingsNotFound",
            "ProvisioningRecordNotFound",
            "LinkedHubNotFound",
            "CertificateAuthorityNotFound",
            "ConfigurationNotFound",
            "GroupNotFound",
            "DigitalTwinModelNotFound",
            "InterfaceNameModelNotFound",
            "GenericMethodNotAllowed",
            "OperationNotAllowedInCurrentState",
            "ImportDevicesNotSupported",
            "BulkAddDevicesNotSupported",
            "GenericConflict",
            "DeviceAlreadyExists",
            "LinkCreationConflict",
            "CallbackSubscriptionConflict",
            "ModelAlreadyExists",
            "DeviceLocked",
            "DeviceJobAlreadyExists",
            "JobAlreadyExists",
            "EnrollmentConflict",
            "EnrollmentGroupConflict",
            "RegistrationStatusConflict",
            "DeviceRecordConflict",
            "GroupRecordConflict",
            "DeviceGroupConflict",
            "ProvisioningSettingsConflict",
            "ProvisioningRecordConflict",
            "LinkedHubConflict",
            "CertificateAuthorityConflict",
            "ModuleAlreadyExistsOnDevice",
            "ConfigurationAlreadyExists",
            "ApplyConfigurationAlreadyInProgressOnDevice",
            "DigitalTwinModelAlreadyExists",
            "DigitalTwinModelExistsWithOtherModelType",
            "InterfaceNameModelAlreadyExists",
            "GenericPreconditionFailed",
            "PreconditionFailed",
            "DeviceMessageLockLost",
            "JobRunPreconditionFailed",
            "InflightMessagesInLink",
            "GenericRequestEntityTooLarge",
            "MessageTooLarge",
            "TooManyDevices",
            "TooManyModulesOnDevice",
            "ConfigurationCountLimitExceeded",
            "DigitalTwinModelCountLimitExceeded",
            "InterfaceNameCompressionModelCountLimitExceeded",
            "GenericUnsupportedMediaType",
            "IncompatibleDataType",
            "GenericTooManyRequests",
            "ThrottlingException",
            "ThrottleBacklogLimitExceeded",
            "ThrottlingBacklogTimeout",
            "ThrottlingMaxActiveJobCountExceeded",
            "DeviceThrottlingLimitExceeded",
            "ClientClosedRequest",
            "GenericServerError",
            "ServerError",
            "JobCancelled",
            "StatisticsRetrievalError",
            "ConnectionForcefullyClosed",
            "InvalidBlobState",
            "BackupTimedOut",
            "AzureStorageTimeout",
            "GenericTimeout",
            "InvalidThrottleParameter",
            "EventHubLinkAlreadyClosed",
            "ReliableBlobStoreError",
            "RetryAttemptsExhausted",
            "AzureTableStoreError",
            "CheckpointStoreNotFound",
            "DocumentDbInvalidReturnValue",
            "ReliableDocDbStoreStoreError",
            "ReliableBlobStoreTimeoutError",
            "ConfigReadFailed",
            "InvalidContainerReceiveLink",
            "InvalidPartitionEpoch",
            "RestoreTimedOut",
            "StreamReservationFailure",
            "SerializationError",
            "UnexpectedPropertyValue",
            "OrchestrationOperationFailed",
            "ModelRepoEndpointError",
            "ResolutionError",
            "UnableToFetchCredentials",
            "UnableToFetchTenantInfo",
            "UnableToShareIdentity",
            "UnableToExpandDiscoveryInfo",
            "UnableToExpandComponentInfo",
            "UnableToCompressComponentInfo",
            "UnableToCompressDiscoveryInfo",
            "OrphanDiscoveryDocument",
            "GenericBadGateway",
            "InvalidResponseWhileProxying",
            "GenericServiceUnavailable",
            "ServiceUnavailable",
            "PartitionNotFound",
            "IotHubActivationFailed",
            "ServerBusy",
            "IotHubRestoring",
            "ReceiveLinkOpensThrottled",
            "ConnectionUnavailable",
            "DeviceUnavailable",
            "ConfigurationNotAvailable",
            "GroupNotAvailable",
            "HostingServiceNotAvailable",
            "GenericGatewayTimeout",
            "GatewayTimeout"
          ],
          "type": "string"
        },
        "errorStatus": {
          "description": "The details of the error.",
          "type": "string"
        },
        "moduleId": {
          "description": "The unique identifier of the module, if applicable.",
          "type": "string"
        },
        "operation": {
          "description": "The type of the operation that failed.",
          "type": "string"
        }
      }
    },
    "DeviceRegistryOperationWarning": {
      "description": "The device registry operation warning details.",
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "The unique identifier of the device.",
          "type": "string"
        },
        "warningCode": {
          "description": "The warning code.",
          "enum": [
            "DeviceRegisteredWithoutTwin"
          ],
          "type": "string"
        },
        "warningStatus": {
          "description": "The details of the warning.",
          "type": "string"
        }
      }
    },
    "QuerySpecification": {
      "description": "The Json query request.",
      "type": "object",
      "properties": {
        "query": {
          "description": "The query string.",
          "type": "string"
        }
      }
    },
    "Twin": {
      "description": "The state information for a device or module. This is implicitly created and deleted when the corresponding device/ module identity is created or deleted in the IoT Hub.",
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "The unique identifier of the device in the identity registry of the IoT Hub. It is a case-sensitive string (up to 128 char long) of ASCII 7-bit alphanumeric chars, and the following special characters {'-', ':', '.', '+', '%', '_', '#', '*', '?', '!', '(', ')', ',', '=', '@', ';', '$', '''}.",
          "type": "string"
        },
        "moduleId": {
          "description": "The unique identifier of the module in the identity registry of the IoT Hub. It is a case-sensitive string (up to 128 char long) of ASCII 7-bit alphanumeric chars, and the following special characters {'-', ':', '.', '+', '%', '_', '#', '*', '?', '!', '(', ')', ',', '=', '@', ';', '$', '''}.",
          "type": "string"
        },
        "tags": {
          "description": "The collection of key-value pairs read and written by the solution back end. They are not visible to device apps. They keys are UTF-8 encoded, case-sensitive and up-to 1KB in length. Allowed characters exclude UNICODE control characters (segments C0 and C1), '.', '$' and space. The values are JSON objects, up-to 4KB in length.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "properties": {
          "$ref": "#/definitions/TwinProperties",
          "description": "The desired and reported properties of the twin."
        },
        "etag": {
          "description": "The string representing a ETag for the device twin, as per RFC7232.",
          "type": "string"
        },
        "version": {
          "format": "int64",
          "description": "The version for the device twin including tags and desired properties",
          "type": "integer"
        },
        "deviceEtag": {
          "description": "The string representing a ETag for the device, as per RFC7232.",
          "type": "string"
        },
        "status": {
          "description": "The enabled status of the device. If disabled, the device cannot connect to the service.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "type": "string"
        },
        "statusReason": {
          "description": "The reason for the current status of the device, if any.",
          "type": "string"
        },
        "statusUpdateTime": {
          "format": "date-time",
          "description": "The date and time when the status of the device was last updated.",
          "type": "string"
        },
        "connectionState": {
          "description": "The connection state of the device.",
          "enum": [
            "Disconnected",
            "Connected"
          ],
          "type": "string"
        },
        "lastActivityTime": {
          "format": "date-time",
          "description": "The date and time when the device last connected or received or sent a message. The date and time is sepecified in ISO8601 datetime format in UTC, for example, 2015-01-28T16:24:48.789Z. This value is not updated if the device uses the HTTP/1 protocol to perform messaging operations.",
          "type": "string"
        },
        "cloudToDeviceMessageCount": {
          "format": "int32",
          "description": "The number of cloud-to-device messages sent.",
          "type": "integer"
        },
        "authenticationType": {
          "description": "The authentication type used by the device.",
          "enum": [
            "sas",
            "selfSigned",
            "certificateAuthority",
            "none"
          ],
          "type": "string"
        },
        "x509Thumbprint": {
          "$ref": "#/definitions/X509Thumbprint",
          "description": "The X509 thumbprint of the device."
        },
        "capabilities": {
          "$ref": "#/definitions/DeviceCapabilities"
        },
        "deviceScope": {
          "description": "The scope of the device.",
          "type": "string"
        }
      }
    },
    "TwinProperties": {
      "description": "The desired and reported properties of the twin. The maximum depth of the object is 10.",
      "type": "object",
      "properties": {
        "desired": {
          "description": "The collection of desired property key-value pairs. The keys are UTF-8 encoded, case-sensitive and up-to 1KB in length. Allowed characters exclude UNICODE control characters (segments C0 and C1), '.', '$' and space. The desired porperty values are JSON objects, up-to 4KB in length.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "reported": {
          "description": "The collection of reported property key-value pairs. The keys are UTF-8 encoded, case-sensitive and up-to 1KB in length. Allowed characters exclude UNICODE control characters (segments C0 and C1), '.', '$' and space. The reported property values are JSON objects, up-to 4KB in length.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "JobProperties": {
      "type": "object",
      "properties": {
        "jobId": {
          "description": "The unique identifier of the job.",
          "type": "string"
        },
        "startTimeUtc": {
          "format": "date-time",
          "description": "System generated. Ignored at creation. The start date and time of the job in UTC.",
          "type": "string"
        },
        "endTimeUtc": {
          "format": "date-time",
          "description": "System generated. Ignored at creation. The end date and time of the job in UTC.",
          "type": "string"
        },
        "type": {
          "description": "The job type.",
          "enum": [
            "unknown",
            "export",
            "import",
            "backup",
            "readDeviceProperties",
            "writeDeviceProperties",
            "updateDeviceConfiguration",
            "rebootDevice",
            "factoryResetDevice",
            "firmwareUpdate",
            "scheduleDeviceMethod",
            "scheduleUpdateTwin",
            "restoreFromBackup",
            "failoverDataCopy"
          ],
          "type": "string"
        },
        "status": {
          "description": "System generated. Ignored at creation. The status of the job.",
          "enum": [
            "unknown",
            "enqueued",
            "running",
            "completed",
            "failed",
            "cancelled",
            "scheduled",
            "queued"
          ],
          "type": "string"
        },
        "progress": {
          "format": "int32",
          "description": "System generated. Ignored at creation. The percentage of job completion.",
          "type": "integer"
        },
        "inputBlobContainerUri": {
          "description": "The URI containing SAS token to a blob container that contains registry data to sync.",
          "type": "string"
        },
        "inputBlobName": {
          "description": "The blob name to use when importing from the input blob container.",
          "type": "string"
        },
        "outputBlobContainerUri": {
          "description": "The SAS token to access the blob container. This is used to output the status and results of the job.",
          "type": "string"
        },
        "outputBlobName": {
          "description": "The blob name that will be created in the output blob container. This blob will contain the exported device registry information for the IoT Hub.",
          "type": "string"
        },
        "excludeKeysInExport": {
          "description": "Optional for export jobs; ignored for other jobs. If not specified, the service defaults to false. If false, authorization keys are included in export output. Keys are exported as null otherwise.",
          "type": "boolean"
        },
        "storageAuthenticationType": {
          "description": "The authentication type used for connecting to the storage account.",
          "enum": [
            "keyBased",
            "identityBased"
          ],
          "type": "string"
        },
        "failureReason": {
          "description": "System genereated.  Ignored at creation. The reason for failure, if a failure occurred.",
          "type": "string"
        },
        "includeConfigurations": {
          "description": "Defaults to false. If true, then configurations are included in the data export/import.",
          "type": "boolean"
        },
        "configurationsBlobName": {
          "description": "Defaults to configurations.txt. Specifies the name of the blob to use when exporting/importing configurations.",
          "type": "string"
        }
      }
    },
    "PurgeMessageQueueResult": {
      "description": "The result of a device message queue purge operation.",
      "type": "object",
      "properties": {
        "totalMessagesPurged": {
          "format": "int32",
		  "description": "The total number of messages purged.",
          "type": "integer"
        },
        "deviceId": {
          "description": "The unique identifier of the device.",
          "type": "string"
        },
        "moduleId": {
          "description": "The unique identifier of the module.",
          "type": "string"
        }
      }
    },
    "JobRequest": {
      "type": "object",
      "properties": {
        "jobId": {
          "description": "The unique identifier of the job.",
          "type": "string"
        },
        "type": {
          "description": "The job type.",
          "enum": [
            "unknown",
            "export",
            "import",
            "backup",
            "readDeviceProperties",
            "writeDeviceProperties",
            "updateDeviceConfiguration",
            "rebootDevice",
            "factoryResetDevice",
            "firmwareUpdate",
            "scheduleDeviceMethod",
            "scheduleUpdateTwin",
            "restoreFromBackup",
            "failoverDataCopy"
          ],
          "type": "string"
        },
        "cloudToDeviceMethod": {
          "$ref": "#/definitions/CloudToDeviceMethod",
          "description": "The method type and parameters. This is required if the job type is cloudToDeviceMethod."
        },
        "updateTwin": {
          "$ref": "#/definitions/Twin"
        },
        "queryCondition": {
          "description": "The condition for devices to execute the job. This is required if the job type is updateTwin or cloudToDeviceMethod.",
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "description": "The start date and time of the job in ISO 8601 standard.",
          "type": "string"
        },
        "maxExecutionTimeInSeconds": {
          "format": "int64",
          "description": "The maximum execution time in secounds.",
          "type": "integer"
        }
      }
    },
    "CloudToDeviceMethod": {
      "description": "The parameters to execute a direct method on the device.",
      "type": "object",
      "properties": {
        "methodName": {
          "description": "The name of the method to execute.",
          "type": "string"
        },
        "payload": {
          "description": "The JSON-formatted direct method payload, up to 128kb in size.",
          "type": "object"
        },
        "responseTimeoutInSeconds": {
          "format": "int32",
		  "description": "The time (in seconds) that the service waits for the method invocation to return a response. The default is 30 seconds, minimum is 5 seconds, and maximum is 300 seconds.",
          "type": "integer"
        },
        "connectTimeoutInSeconds": {
          "format": "int32",
		  "description": "The time (in seconds) that the service waits for the device to come online. The default is 0 seconds (which means the device must already be online) and the maximum is 300 seconds.",
          "type": "integer"
        }
      }
    },
    "JobResponse": {
      "type": "object",
      "properties": {
        "jobId": {
          "description": "System generated.  Ignored at creation. The unique identifier of the job.",
          "type": "string"
        },
        "queryCondition": {
          "description": "The device query condition.",
          "type": "string"
        },
        "createdTime": {
          "format": "date-time",
          "description": "System generated.  Ignored at creation. The creation date and time of the job.",
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "description": "The start date and time of the scheduled job in UTC.",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "System generated.  Ignored at creation. The end date and time of the job in UTC.",
          "type": "string"
        },
        "maxExecutionTimeInSeconds": {
          "format": "int64",
          "description": "The maximum execution time in secounds.",
          "type": "integer"
        },
        "type": {
          "description": "The job type.",
          "enum": [
            "unknown",
            "export",
            "import",
            "backup",
            "readDeviceProperties",
            "writeDeviceProperties",
            "updateDeviceConfiguration",
            "rebootDevice",
            "factoryResetDevice",
            "firmwareUpdate",
            "scheduleDeviceMethod",
            "scheduleUpdateTwin",
            "restoreFromBackup",
            "failoverDataCopy"
          ],
          "type": "string"
        },
        "cloudToDeviceMethod": {
          "$ref": "#/definitions/CloudToDeviceMethod",
          "description": "The method type and parameters. This is required if job type is cloudToDeviceMethod."
        },
        "updateTwin": {
          "$ref": "#/definitions/Twin"
        },
        "status": {
          "description": "System generated.  Ignored at creation. The status of the job.",
          "enum": [
            "unknown",
            "enqueued",
            "running",
            "completed",
            "failed",
            "cancelled",
            "scheduled",
            "queued"
          ],
          "type": "string"
        },
        "failureReason": {
          "description": "The reason for the failure, if a failure occurred.",
          "type": "string"
        },
        "statusMessage": {
          "description": "The status message of the job.",
          "type": "string"
        },
        "deviceJobStatistics": {
          "$ref": "#/definitions/DeviceJobStatistics",
          "description": "The details regarding job execution status."
        }
      }
    },
    "DeviceJobStatistics": {
      "description": "The job statistics regarding execution status.",
      "type": "object",
      "properties": {
        "deviceCount": {
          "format": "int32",
          "description": "The number of devices targeted by the job.",
          "type": "integer"
        },
        "failedCount": {
          "format": "int32",
          "description": "The number of failed jobs.",
          "type": "integer"
        },
        "succeededCount": {
          "format": "int32",
          "description": "The number of succeeded jobs.",
          "type": "integer"
        },
        "runningCount": {
          "format": "int32",
          "description": "The number of running jobs.",
          "type": "integer"
        },
        "pendingCount": {
          "format": "int32",
          "description": "The number of pending (scheduled) jobs.",
          "type": "integer"
        }
      }
    },
    "QueryResult": {
      "description": "The query result.",
      "type": "object",
      "properties": {
        "type": {
          "description": "The query result type.",
          "enum": [
            "unknown",
            "twin",
            "deviceJob",
            "jobResponse",
            "raw",
            "enrollment",
            "enrollmentGroup",
            "deviceRegistration"
          ],
          "type": "string"
        },
        "items": {
          "description": "The query result items, as a collection.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "continuationToken": {
          "description": "The continuation token.",
          "type": "string"
        }
      }
    },
    "Module": {
      "description": "The module identity on a device.",
      "type": "object",
      "properties": {
        "moduleId": {
          "description": "The unique identifier of the module.",
          "type": "string"
        },
        "managedBy": {
          "description": "Identifies who manages this module. For instance, this value is \\\"IotEdge\\\" if the edge runtime owns this module.",
          "type": "string"
        },
        "deviceId": {
          "description": "The unique identifier of the device.",
          "type": "string"
        },
        "generationId": {
          "description": "The IoT Hub generated, case-sensitive string up to 128 characters long. This value is used to distinguish modules with the same moduleId, when they have been deleted and re-created.",
          "type": "string"
        },
        "etag": {
          "description": "The string representing a weak ETag for the module identity, as per RFC7232.",
          "type": "string"
        },
        "connectionState": {
          "description": "The connection state of the device.",
          "enum": [
            "Disconnected",
            "Connected"
          ],
          "type": "string"
        },
        "connectionStateUpdatedTime": {
          "format": "date-time",
          "description": "The date and time the connection state was last updated.",
          "type": "string"
        },
        "lastActivityTime": {
          "format": "date-time",
          "description": "The date and time the device last connected, received, or sent a message.",
          "type": "string"
        },
        "cloudToDeviceMessageCount": {
          "format": "int32",
          "description": "The number of cloud-to-module messages currently queued to be sent to the module.",
          "type": "integer"
        },
        "authentication": {
          "$ref": "#/definitions/AuthenticationMechanism",
          "description": "The authentication mechanism used by the module when connecting to the service and edge hub."
        }
      }
    },
    "CloudToDeviceMethodResult": {
      "description": "Represents the Device Method Invocation Results.",
      "type": "object",
      "properties": {
        "status": {
          "format": "int32",
          "description": "Method invocation result status.",
          "type": "integer"
        },
        "payload": {
          "description": "Method invocation result payload.",
          "type": "object"
        }
      }
    }
  },
  "parameters": {
    "api-version": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the Api.",
      "required": true,
      "type": "string",
      "default": "2020-03-13"
    }
  }
}