// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core.Pipeline;
using Azure.Iot.Hub.Service.Models;

namespace Azure.Iot.Hub.Service
{
    /// <summary> The Twin service client. </summary>
    public partial class TwinClient
    {
        private readonly ClientDiagnostics _clientDiagnostics;
        private readonly HttpPipeline _pipeline;
        internal TwinRestClient RestClient { get; }
        /// <summary> Initializes a new instance of TwinClient for mocking. </summary>
        protected TwinClient()
        {
        }
        /// <summary> Initializes a new instance of TwinClient. </summary>
        internal TwinClient(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, string host = "https://fully-qualified-iothubname.azure-devices.net", string apiVersion = "2020-03-13")
        {
            RestClient = new TwinRestClient(clientDiagnostics, pipeline, host, apiVersion);
            _clientDiagnostics = clientDiagnostics;
            _pipeline = pipeline;
        }

        /// <summary> Gets a device twin. See https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-device-twins for more information. For IoT Hub VNET related features(https://docs.microsoft.com/en-us/azure/iot-hub/virtual-network-support) please use API version &apos;2020-03-13&apos;.These features are currently in general availability in the East US, West US 2, and Southcentral US regions only. We are actively working to expand the availability of these features to all regions by end of month May. For rest of the APIs please continue using API version &apos;2019-10-01&apos;. </summary>
        /// <param name="id"> Device ID. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<Response<Twin>> GetDeviceTwinAsync(string id, CancellationToken cancellationToken = default)
        {
            return await RestClient.GetDeviceTwinAsync(id, cancellationToken).ConfigureAwait(false);
        }

        /// <summary> Gets a device twin. See https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-device-twins for more information. For IoT Hub VNET related features(https://docs.microsoft.com/en-us/azure/iot-hub/virtual-network-support) please use API version &apos;2020-03-13&apos;.These features are currently in general availability in the East US, West US 2, and Southcentral US regions only. We are actively working to expand the availability of these features to all regions by end of month May. For rest of the APIs please continue using API version &apos;2019-10-01&apos;. </summary>
        /// <param name="id"> Device ID. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual Response<Twin> GetDeviceTwin(string id, CancellationToken cancellationToken = default)
        {
            return RestClient.GetDeviceTwin(id, cancellationToken);
        }

        /// <summary> Replaces a device twin. See https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-device-twins for more information. For IoT Hub VNET related features(https://docs.microsoft.com/en-us/azure/iot-hub/virtual-network-support) please use API version &apos;2020-03-13&apos;.These features are currently in general availability in the East US, West US 2, and Southcentral US regions only. We are actively working to expand the availability of these features to all regions by end of month May. For rest of the APIs please continue using API version &apos;2019-10-01&apos;. </summary>
        /// <param name="id"> Device ID. </param>
        /// <param name="deviceTwinInfo"> Device twin info. </param>
        /// <param name="ifMatch"> The String to use. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<Response<Twin>> ReplaceDeviceTwinAsync(string id, Twin deviceTwinInfo, string ifMatch = null, CancellationToken cancellationToken = default)
        {
            return await RestClient.ReplaceDeviceTwinAsync(id, deviceTwinInfo, ifMatch, cancellationToken).ConfigureAwait(false);
        }

        /// <summary> Replaces a device twin. See https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-device-twins for more information. For IoT Hub VNET related features(https://docs.microsoft.com/en-us/azure/iot-hub/virtual-network-support) please use API version &apos;2020-03-13&apos;.These features are currently in general availability in the East US, West US 2, and Southcentral US regions only. We are actively working to expand the availability of these features to all regions by end of month May. For rest of the APIs please continue using API version &apos;2019-10-01&apos;. </summary>
        /// <param name="id"> Device ID. </param>
        /// <param name="deviceTwinInfo"> Device twin info. </param>
        /// <param name="ifMatch"> The String to use. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual Response<Twin> ReplaceDeviceTwin(string id, Twin deviceTwinInfo, string ifMatch = null, CancellationToken cancellationToken = default)
        {
            return RestClient.ReplaceDeviceTwin(id, deviceTwinInfo, ifMatch, cancellationToken);
        }

        /// <summary> Updates a device twin. See https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-device-twins for more information. For IoT Hub VNET related features(https://docs.microsoft.com/en-us/azure/iot-hub/virtual-network-support) please use API version &apos;2020-03-13&apos;.These features are currently in general availability in the East US, West US 2, and Southcentral US regions only. We are actively working to expand the availability of these features to all regions by end of month May. For rest of the APIs please continue using API version &apos;2019-10-01&apos;. </summary>
        /// <param name="id"> Device ID. </param>
        /// <param name="deviceTwinInfo"> Device twin info. </param>
        /// <param name="ifMatch"> The String to use. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<Response<Twin>> UpdateDeviceTwinAsync(string id, Twin deviceTwinInfo, string ifMatch = null, CancellationToken cancellationToken = default)
        {
            return await RestClient.UpdateDeviceTwinAsync(id, deviceTwinInfo, ifMatch, cancellationToken).ConfigureAwait(false);
        }

        /// <summary> Updates a device twin. See https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-device-twins for more information. For IoT Hub VNET related features(https://docs.microsoft.com/en-us/azure/iot-hub/virtual-network-support) please use API version &apos;2020-03-13&apos;.These features are currently in general availability in the East US, West US 2, and Southcentral US regions only. We are actively working to expand the availability of these features to all regions by end of month May. For rest of the APIs please continue using API version &apos;2019-10-01&apos;. </summary>
        /// <param name="id"> Device ID. </param>
        /// <param name="deviceTwinInfo"> Device twin info. </param>
        /// <param name="ifMatch"> The String to use. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual Response<Twin> UpdateDeviceTwin(string id, Twin deviceTwinInfo, string ifMatch = null, CancellationToken cancellationToken = default)
        {
            return RestClient.UpdateDeviceTwin(id, deviceTwinInfo, ifMatch, cancellationToken);
        }

        /// <summary> Gets a module twin. See https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-device-twins for more information. For IoT Hub VNET related features(https://docs.microsoft.com/en-us/azure/iot-hub/virtual-network-support) please use API version &apos;2020-03-13&apos;.These features are currently in general availability in the East US, West US 2, and Southcentral US regions only. We are actively working to expand the availability of these features to all regions by end of month May. For rest of the APIs please continue using API version &apos;2019-10-01&apos;. </summary>
        /// <param name="id"> Device ID. </param>
        /// <param name="mid"> Module ID. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<Response<Twin>> GetModuleTwinAsync(string id, string mid, CancellationToken cancellationToken = default)
        {
            return await RestClient.GetModuleTwinAsync(id, mid, cancellationToken).ConfigureAwait(false);
        }

        /// <summary> Gets a module twin. See https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-device-twins for more information. For IoT Hub VNET related features(https://docs.microsoft.com/en-us/azure/iot-hub/virtual-network-support) please use API version &apos;2020-03-13&apos;.These features are currently in general availability in the East US, West US 2, and Southcentral US regions only. We are actively working to expand the availability of these features to all regions by end of month May. For rest of the APIs please continue using API version &apos;2019-10-01&apos;. </summary>
        /// <param name="id"> Device ID. </param>
        /// <param name="mid"> Module ID. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual Response<Twin> GetModuleTwin(string id, string mid, CancellationToken cancellationToken = default)
        {
            return RestClient.GetModuleTwin(id, mid, cancellationToken);
        }

        /// <summary> Replaces a module twin. See https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-device-twins for more information. For IoT Hub VNET related features(https://docs.microsoft.com/en-us/azure/iot-hub/virtual-network-support) please use API version &apos;2020-03-13&apos;.These features are currently in general availability in the East US, West US 2, and Southcentral US regions only. We are actively working to expand the availability of these features to all regions by end of month May. For rest of the APIs please continue using API version &apos;2019-10-01&apos;. </summary>
        /// <param name="id"> Device ID. </param>
        /// <param name="mid"> Module ID. </param>
        /// <param name="deviceTwinInfo"> Device twin info. </param>
        /// <param name="ifMatch"> The String to use. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<Response<Twin>> ReplaceModuleTwinAsync(string id, string mid, Twin deviceTwinInfo, string ifMatch = null, CancellationToken cancellationToken = default)
        {
            return await RestClient.ReplaceModuleTwinAsync(id, mid, deviceTwinInfo, ifMatch, cancellationToken).ConfigureAwait(false);
        }

        /// <summary> Replaces a module twin. See https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-device-twins for more information. For IoT Hub VNET related features(https://docs.microsoft.com/en-us/azure/iot-hub/virtual-network-support) please use API version &apos;2020-03-13&apos;.These features are currently in general availability in the East US, West US 2, and Southcentral US regions only. We are actively working to expand the availability of these features to all regions by end of month May. For rest of the APIs please continue using API version &apos;2019-10-01&apos;. </summary>
        /// <param name="id"> Device ID. </param>
        /// <param name="mid"> Module ID. </param>
        /// <param name="deviceTwinInfo"> Device twin info. </param>
        /// <param name="ifMatch"> The String to use. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual Response<Twin> ReplaceModuleTwin(string id, string mid, Twin deviceTwinInfo, string ifMatch = null, CancellationToken cancellationToken = default)
        {
            return RestClient.ReplaceModuleTwin(id, mid, deviceTwinInfo, ifMatch, cancellationToken);
        }

        /// <summary> Updates a module twin. See https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-device-twins for more information. For IoT Hub VNET related features(https://docs.microsoft.com/en-us/azure/iot-hub/virtual-network-support) please use API version &apos;2020-03-13&apos;.These features are currently in general availability in the East US, West US 2, and Southcentral US regions only. We are actively working to expand the availability of these features to all regions by end of month May. For rest of the APIs please continue using API version &apos;2019-10-01&apos;. </summary>
        /// <param name="id"> Device ID. </param>
        /// <param name="mid"> Module ID. </param>
        /// <param name="deviceTwinInfo"> Device twin information. </param>
        /// <param name="ifMatch"> The String to use. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<Response<Twin>> UpdateModuleTwinAsync(string id, string mid, Twin deviceTwinInfo, string ifMatch = null, CancellationToken cancellationToken = default)
        {
            return await RestClient.UpdateModuleTwinAsync(id, mid, deviceTwinInfo, ifMatch, cancellationToken).ConfigureAwait(false);
        }

        /// <summary> Updates a module twin. See https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-device-twins for more information. For IoT Hub VNET related features(https://docs.microsoft.com/en-us/azure/iot-hub/virtual-network-support) please use API version &apos;2020-03-13&apos;.These features are currently in general availability in the East US, West US 2, and Southcentral US regions only. We are actively working to expand the availability of these features to all regions by end of month May. For rest of the APIs please continue using API version &apos;2019-10-01&apos;. </summary>
        /// <param name="id"> Device ID. </param>
        /// <param name="mid"> Module ID. </param>
        /// <param name="deviceTwinInfo"> Device twin information. </param>
        /// <param name="ifMatch"> The String to use. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual Response<Twin> UpdateModuleTwin(string id, string mid, Twin deviceTwinInfo, string ifMatch = null, CancellationToken cancellationToken = default)
        {
            return RestClient.UpdateModuleTwin(id, mid, deviceTwinInfo, ifMatch, cancellationToken);
        }
    }
}
