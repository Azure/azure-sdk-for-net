// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Iot.Hub.Service.Models
{
    public partial class ExportImportDevice : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Id != null)
            {
                writer.WritePropertyName("id");
                writer.WriteStringValue(Id);
            }
            if (ModuleId != null)
            {
                writer.WritePropertyName("moduleId");
                writer.WriteStringValue(ModuleId);
            }
            if (ETag != null)
            {
                writer.WritePropertyName("eTag");
                writer.WriteStringValue(ETag);
            }
            if (ImportMode != null)
            {
                writer.WritePropertyName("importMode");
                writer.WriteStringValue(ImportMode.Value.ToString());
            }
            if (Status != null)
            {
                writer.WritePropertyName("status");
                writer.WriteStringValue(Status.Value.ToString());
            }
            if (StatusReason != null)
            {
                writer.WritePropertyName("statusReason");
                writer.WriteStringValue(StatusReason);
            }
            if (Authentication != null)
            {
                writer.WritePropertyName("authentication");
                writer.WriteObjectValue(Authentication);
            }
            if (TwinETag != null)
            {
                writer.WritePropertyName("twinETag");
                writer.WriteStringValue(TwinETag);
            }
            if (Tags != null)
            {
                writer.WritePropertyName("tags");
                writer.WriteStartObject();
                foreach (var item in Tags)
                {
                    writer.WritePropertyName(item.Key);
                    writer.WriteObjectValue(item.Value);
                }
                writer.WriteEndObject();
            }
            if (Properties != null)
            {
                writer.WritePropertyName("properties");
                writer.WriteObjectValue(Properties);
            }
            if (Capabilities != null)
            {
                writer.WritePropertyName("capabilities");
                writer.WriteObjectValue(Capabilities);
            }
            if (DeviceScope != null)
            {
                writer.WritePropertyName("deviceScope");
                writer.WriteStringValue(DeviceScope);
            }
            if (ParentScopes != null)
            {
                writer.WritePropertyName("parentScopes");
                writer.WriteStartArray();
                foreach (var item in ParentScopes)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }
    }
}
