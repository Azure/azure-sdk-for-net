// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Iot.Hub.Service.Models
{
    public partial class DeviceJobStatistics
    {
        internal static DeviceJobStatistics DeserializeDeviceJobStatistics(JsonElement element)
        {
            Optional<int> deviceCount = default;
            Optional<int> failedCount = default;
            Optional<int> succeededCount = default;
            Optional<int> runningCount = default;
            Optional<int> pendingCount = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("deviceCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    deviceCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("failedCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    failedCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("succeededCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    succeededCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("runningCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    runningCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("pendingCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    pendingCount = property.Value.GetInt32();
                    continue;
                }
            }
            return new DeviceJobStatistics(Optional.ToNullable(deviceCount), Optional.ToNullable(failedCount), Optional.ToNullable(succeededCount), Optional.ToNullable(runningCount), Optional.ToNullable(pendingCount));
        }
    }
}
