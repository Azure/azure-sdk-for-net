// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.Iot.Hub.Service.Models
{
    /// <summary> The action to perform. </summary>
    internal readonly partial struct FaultInjectionConnectionPropertiesAction : IEquatable<FaultInjectionConnectionPropertiesAction>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="FaultInjectionConnectionPropertiesAction"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public FaultInjectionConnectionPropertiesAction(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string NoneValue = "None";
        private const string CloseAllValue = "CloseAll";
        private const string PeriodicValue = "Periodic";

        /// <summary> None. </summary>
        public static FaultInjectionConnectionPropertiesAction None { get; } = new FaultInjectionConnectionPropertiesAction(NoneValue);
        /// <summary> CloseAll. </summary>
        public static FaultInjectionConnectionPropertiesAction CloseAll { get; } = new FaultInjectionConnectionPropertiesAction(CloseAllValue);
        /// <summary> Periodic. </summary>
        public static FaultInjectionConnectionPropertiesAction Periodic { get; } = new FaultInjectionConnectionPropertiesAction(PeriodicValue);
        /// <summary> Determines if two <see cref="FaultInjectionConnectionPropertiesAction"/> values are the same. </summary>
        public static bool operator ==(FaultInjectionConnectionPropertiesAction left, FaultInjectionConnectionPropertiesAction right) => left.Equals(right);
        /// <summary> Determines if two <see cref="FaultInjectionConnectionPropertiesAction"/> values are not the same. </summary>
        public static bool operator !=(FaultInjectionConnectionPropertiesAction left, FaultInjectionConnectionPropertiesAction right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="FaultInjectionConnectionPropertiesAction"/>. </summary>
        public static implicit operator FaultInjectionConnectionPropertiesAction(string value) => new FaultInjectionConnectionPropertiesAction(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is FaultInjectionConnectionPropertiesAction other && Equals(other);
        /// <inheritdoc />
        public bool Equals(FaultInjectionConnectionPropertiesAction other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
