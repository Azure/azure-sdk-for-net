// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.Iot.Hub.Service.Models
{
    public partial class JobProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(JobId))
            {
                writer.WritePropertyName("jobId");
                writer.WriteStringValue(JobId);
            }
            if (Optional.IsDefined(StartTimeUtc))
            {
                writer.WritePropertyName("startTimeUtc");
                writer.WriteStringValue(StartTimeUtc.Value, "O");
            }
            if (Optional.IsDefined(EndTimeUtc))
            {
                writer.WritePropertyName("endTimeUtc");
                writer.WriteStringValue(EndTimeUtc.Value, "O");
            }
            if (Optional.IsDefined(Type))
            {
                writer.WritePropertyName("type");
                writer.WriteStringValue(Type.Value.ToString());
            }
            if (Optional.IsDefined(Status))
            {
                writer.WritePropertyName("status");
                writer.WriteStringValue(Status.Value.ToString());
            }
            if (Optional.IsDefined(Progress))
            {
                writer.WritePropertyName("progress");
                writer.WriteNumberValue(Progress.Value);
            }
            if (Optional.IsDefined(InputBlobContainerUri))
            {
                writer.WritePropertyName("inputBlobContainerUri");
                writer.WriteStringValue(InputBlobContainerUri);
            }
            if (Optional.IsDefined(InputBlobName))
            {
                writer.WritePropertyName("inputBlobName");
                writer.WriteStringValue(InputBlobName);
            }
            if (Optional.IsDefined(OutputBlobContainerUri))
            {
                writer.WritePropertyName("outputBlobContainerUri");
                writer.WriteStringValue(OutputBlobContainerUri);
            }
            if (Optional.IsDefined(OutputBlobName))
            {
                writer.WritePropertyName("outputBlobName");
                writer.WriteStringValue(OutputBlobName);
            }
            if (Optional.IsDefined(ExcludeKeysInExport))
            {
                writer.WritePropertyName("excludeKeysInExport");
                writer.WriteBooleanValue(ExcludeKeysInExport.Value);
            }
            if (Optional.IsDefined(StorageAuthenticationType))
            {
                writer.WritePropertyName("storageAuthenticationType");
                writer.WriteStringValue(StorageAuthenticationType.Value.ToString());
            }
            if (Optional.IsDefined(FailureReason))
            {
                writer.WritePropertyName("failureReason");
                writer.WriteStringValue(FailureReason);
            }
            writer.WriteEndObject();
        }

        internal static JobProperties DeserializeJobProperties(JsonElement element)
        {
            Optional<string> jobId = default;
            Optional<DateTimeOffset> startTimeUtc = default;
            Optional<DateTimeOffset> endTimeUtc = default;
            Optional<JobPropertiesType> type = default;
            Optional<JobPropertiesStatus> status = default;
            Optional<int> progress = default;
            Optional<string> inputBlobContainerUri = default;
            Optional<string> inputBlobName = default;
            Optional<string> outputBlobContainerUri = default;
            Optional<string> outputBlobName = default;
            Optional<bool> excludeKeysInExport = default;
            Optional<JobPropertiesStorageAuthenticationType> storageAuthenticationType = default;
            Optional<string> failureReason = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("jobId"))
                {
                    jobId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("startTimeUtc"))
                {
                    startTimeUtc = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("endTimeUtc"))
                {
                    endTimeUtc = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = new JobPropertiesType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("status"))
                {
                    status = new JobPropertiesStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("progress"))
                {
                    progress = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("inputBlobContainerUri"))
                {
                    inputBlobContainerUri = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("inputBlobName"))
                {
                    inputBlobName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("outputBlobContainerUri"))
                {
                    outputBlobContainerUri = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("outputBlobName"))
                {
                    outputBlobName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("excludeKeysInExport"))
                {
                    excludeKeysInExport = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("storageAuthenticationType"))
                {
                    storageAuthenticationType = new JobPropertiesStorageAuthenticationType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("failureReason"))
                {
                    failureReason = property.Value.GetString();
                    continue;
                }
            }
            return new JobProperties(jobId.HasValue ? jobId.Value : null, startTimeUtc.HasValue ? startTimeUtc.Value : (DateTimeOffset?)null, endTimeUtc.HasValue ? endTimeUtc.Value : (DateTimeOffset?)null, type.HasValue ? type.Value : (JobPropertiesType?)null, status.HasValue ? status.Value : (JobPropertiesStatus?)null, progress.HasValue ? progress.Value : (int?)null, inputBlobContainerUri.HasValue ? inputBlobContainerUri.Value : null, inputBlobName.HasValue ? inputBlobName.Value : null, outputBlobContainerUri.HasValue ? outputBlobContainerUri.Value : null, outputBlobName.HasValue ? outputBlobName.Value : null, excludeKeysInExport.HasValue ? excludeKeysInExport.Value : (bool?)null, storageAuthenticationType.HasValue ? storageAuthenticationType.Value : (JobPropertiesStorageAuthenticationType?)null, failureReason.HasValue ? failureReason.Value : null);
        }
    }
}
