// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.Iot.Hub.Service.Models
{
    public partial class Module : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (ModuleId != null)
            {
                writer.WritePropertyName("moduleId");
                writer.WriteStringValue(ModuleId);
            }
            if (ManagedBy != null)
            {
                writer.WritePropertyName("managedBy");
                writer.WriteStringValue(ManagedBy);
            }
            if (DeviceId != null)
            {
                writer.WritePropertyName("deviceId");
                writer.WriteStringValue(DeviceId);
            }
            if (GenerationId != null)
            {
                writer.WritePropertyName("generationId");
                writer.WriteStringValue(GenerationId);
            }
            if (Etag != null)
            {
                writer.WritePropertyName("etag");
                writer.WriteStringValue(Etag);
            }
            if (ConnectionState != null)
            {
                writer.WritePropertyName("connectionState");
                writer.WriteStringValue(ConnectionState.Value.ToString());
            }
            if (ConnectionStateUpdatedTime != null)
            {
                writer.WritePropertyName("connectionStateUpdatedTime");
                writer.WriteStringValue(ConnectionStateUpdatedTime.Value, "S");
            }
            if (LastActivityTime != null)
            {
                writer.WritePropertyName("lastActivityTime");
                writer.WriteStringValue(LastActivityTime.Value, "S");
            }
            if (CloudToDeviceMessageCount != null)
            {
                writer.WritePropertyName("cloudToDeviceMessageCount");
                writer.WriteNumberValue(CloudToDeviceMessageCount.Value);
            }
            if (Authentication != null)
            {
                writer.WritePropertyName("authentication");
                writer.WriteObjectValue(Authentication);
            }
            writer.WriteEndObject();
        }

        internal static Module DeserializeModule(JsonElement element)
        {
            string moduleId = default;
            string managedBy = default;
            string deviceId = default;
            string generationId = default;
            string etag = default;
            ModuleConnectionState? connectionState = default;
            DateTimeOffset? connectionStateUpdatedTime = default;
            DateTimeOffset? lastActivityTime = default;
            int? cloudToDeviceMessageCount = default;
            AuthenticationMechanism authentication = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("moduleId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    moduleId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("managedBy"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    managedBy = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("deviceId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    deviceId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("generationId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    generationId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("etag"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    etag = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("connectionState"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    connectionState = new ModuleConnectionState(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("connectionStateUpdatedTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    connectionStateUpdatedTime = property.Value.GetDateTimeOffset("S");
                    continue;
                }
                if (property.NameEquals("lastActivityTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    lastActivityTime = property.Value.GetDateTimeOffset("S");
                    continue;
                }
                if (property.NameEquals("cloudToDeviceMessageCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    cloudToDeviceMessageCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("authentication"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    authentication = AuthenticationMechanism.DeserializeAuthenticationMechanism(property.Value);
                    continue;
                }
            }
            return new Module(moduleId, managedBy, deviceId, generationId, etag, connectionState, connectionStateUpdatedTime, lastActivityTime, cloudToDeviceMessageCount, authentication);
        }
    }
}
