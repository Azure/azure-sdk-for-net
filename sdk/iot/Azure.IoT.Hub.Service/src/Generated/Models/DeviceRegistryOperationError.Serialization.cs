// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.IoT.Hub.Service.Models
{
    public partial class DeviceRegistryOperationError
    {
        internal static DeviceRegistryOperationError DeserializeDeviceRegistryOperationError(JsonElement element)
        {
            Optional<string> deviceId = default;
            Optional<DeviceRegistryOperationErrorCode> errorCode = default;
            Optional<string> errorStatus = default;
            Optional<string> moduleId = default;
            Optional<string> operation = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("deviceId"))
                {
                    deviceId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("errorCode"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    errorCode = new DeviceRegistryOperationErrorCode(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("errorStatus"))
                {
                    errorStatus = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("moduleId"))
                {
                    moduleId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("operation"))
                {
                    operation = property.Value.GetString();
                    continue;
                }
            }
            return new DeviceRegistryOperationError(deviceId.Value, Optional.ToNullable(errorCode), errorStatus.Value, moduleId.Value, operation.Value);
        }
    }
}
