// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.IotFirmwareDefense.Models
{
    /// <summary> Details of a matching paired key or certificate. </summary>
    public partial class PairedKey
    {
        /// <summary> Initializes a new instance of <see cref="PairedKey"/>. </summary>
        internal PairedKey()
        {
        }

        /// <summary> Initializes a new instance of <see cref="PairedKey"/>. </summary>
        /// <param name="id"> ID of the paired key or certificate. </param>
        /// <param name="pairedKeyType"> The type indicating whether the paired object is a key or certificate. </param>
        /// <param name="additionalProperties"> Additional paired key properties. </param>
        internal PairedKey(string id, string pairedKeyType, BinaryData additionalProperties)
        {
            Id = id;
            PairedKeyType = pairedKeyType;
            AdditionalProperties = additionalProperties;
        }

        /// <summary> ID of the paired key or certificate. </summary>
        public string Id { get; }
        /// <summary> The type indicating whether the paired object is a key or certificate. </summary>
        public string PairedKeyType { get; }
        /// <summary>
        /// Additional paired key properties
        /// <para>
        /// To assign an object to this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        public BinaryData AdditionalProperties { get; }
    }
}
