// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.IotFirmwareDefense.Models
{
    /// <summary>
    /// Common Vulnerability Scoring System values.
    /// Serialized Name: CvssScore
    /// </summary>
    public partial class CvssScore
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="CvssScore"/>. </summary>
        /// <param name="version">
        /// The version of the Common Vulnerability Scoring System (CVSS).
        /// Serialized Name: CvssScore.version
        /// </param>
        public CvssScore(int version)
        {
            Version = version;
        }

        /// <summary> Initializes a new instance of <see cref="CvssScore"/>. </summary>
        /// <param name="version">
        /// The version of the Common Vulnerability Scoring System (CVSS).
        /// Serialized Name: CvssScore.version
        /// </param>
        /// <param name="score">
        /// The score of the CVE according to the CVSS specified.
        /// Serialized Name: CvssScore.score
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal CvssScore(int version, float? score, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Version = version;
            Score = score;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="CvssScore"/> for deserialization. </summary>
        internal CvssScore()
        {
        }

        /// <summary>
        /// The version of the Common Vulnerability Scoring System (CVSS).
        /// Serialized Name: CvssScore.version
        /// </summary>
        public int Version { get; set; }
        /// <summary>
        /// The score of the CVE according to the CVSS specified.
        /// Serialized Name: CvssScore.score
        /// </summary>
        public float? Score { get; set; }
    }
}
