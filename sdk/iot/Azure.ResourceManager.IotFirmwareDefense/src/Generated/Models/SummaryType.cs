// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.IotFirmwareDefense.Models
{
    /// <summary> Describes the type of summary. </summary>
    internal readonly partial struct SummaryType : IEquatable<SummaryType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="SummaryType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public SummaryType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string FirmwareValue = "Firmware";
        private const string CVEValue = "CVE";
        private const string BinaryHardeningValue = "BinaryHardening";
        private const string FirmwareCryptoCertificateValue = "CryptoCertificate";
        private const string FirmwareCryptoKeyValue = "CryptoKey";

        /// <summary> Firmware. </summary>
        public static SummaryType Firmware { get; } = new SummaryType(FirmwareValue);
        /// <summary> CVE. </summary>
        public static SummaryType CVE { get; } = new SummaryType(CVEValue);
        /// <summary> BinaryHardening. </summary>
        public static SummaryType BinaryHardening { get; } = new SummaryType(BinaryHardeningValue);
        /// <summary> CryptoCertificate. </summary>
        public static SummaryType FirmwareCryptoCertificate { get; } = new SummaryType(FirmwareCryptoCertificateValue);
        /// <summary> CryptoKey. </summary>
        public static SummaryType FirmwareCryptoKey { get; } = new SummaryType(FirmwareCryptoKeyValue);
        /// <summary> Determines if two <see cref="SummaryType"/> values are the same. </summary>
        public static bool operator ==(SummaryType left, SummaryType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="SummaryType"/> values are not the same. </summary>
        public static bool operator !=(SummaryType left, SummaryType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="SummaryType"/>. </summary>
        public static implicit operator SummaryType(string value) => new SummaryType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is SummaryType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(SummaryType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
