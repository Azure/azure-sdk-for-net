// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.IotFirmwareDefense.Models
{
    /// <summary> CVE summary values. </summary>
    public partial class CveSummary
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private Dictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="CveSummary"/>. </summary>
        internal CveSummary()
        {
        }

        /// <summary> Initializes a new instance of <see cref="CveSummary"/>. </summary>
        /// <param name="critical"> The total number of critical severity CVEs detected. </param>
        /// <param name="high"> The total number of high severity CVEs detected. </param>
        /// <param name="medium"> The total number of medium severity CVEs detected. </param>
        /// <param name="low"> The total number of low severity CVEs detected. </param>
        /// <param name="unknown"> The total number of unknown severity CVEs detected. </param>
        /// <param name="undefined"> The total number of undefined severity CVEs detected. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal CveSummary(long? critical, long? high, long? medium, long? low, long? unknown, long? undefined, Dictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Critical = critical;
            High = high;
            Medium = medium;
            Low = low;
            Unknown = unknown;
            Undefined = undefined;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The total number of critical severity CVEs detected. </summary>
        public long? Critical { get; }
        /// <summary> The total number of high severity CVEs detected. </summary>
        public long? High { get; }
        /// <summary> The total number of medium severity CVEs detected. </summary>
        public long? Medium { get; }
        /// <summary> The total number of low severity CVEs detected. </summary>
        public long? Low { get; }
        /// <summary> The total number of unknown severity CVEs detected. </summary>
        public long? Unknown { get; }
        /// <summary> The total number of undefined severity CVEs detected. </summary>
        public long? Undefined { get; }
    }
}
