// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.IotFirmwareDefense.Models
{
    public partial class PasswordHash
    {
        internal static PasswordHash DeserializePasswordHash(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> passwordHashId = default;
            Optional<string> filePath = default;
            Optional<string> salt = default;
            Optional<string> hash = default;
            Optional<string> context = default;
            Optional<string> username = default;
            Optional<string> algorithm = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("passwordHashId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        passwordHashId = null;
                        continue;
                    }
                    passwordHashId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("filePath"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        filePath = null;
                        continue;
                    }
                    filePath = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("salt"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        salt = null;
                        continue;
                    }
                    salt = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("hash"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        hash = null;
                        continue;
                    }
                    hash = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("context"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        context = null;
                        continue;
                    }
                    context = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("username"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        username = null;
                        continue;
                    }
                    username = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("algorithm"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        algorithm = null;
                        continue;
                    }
                    algorithm = property.Value.GetString();
                    continue;
                }
            }
            return new PasswordHash(passwordHashId.Value, filePath.Value, salt.Value, hash.Value, context.Value, username.Value, algorithm.Value);
        }
    }
}
