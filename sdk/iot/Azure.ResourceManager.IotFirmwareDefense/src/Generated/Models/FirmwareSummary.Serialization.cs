// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.IotFirmwareDefense.Models
{
    public partial class FirmwareSummary
    {
        internal static FirmwareSummary DeserializeFirmwareSummary(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Core.Optional<long?> extractedSize = default;
            Core.Optional<long?> fileSize = default;
            Core.Optional<long?> extractedFileCount = default;
            Core.Optional<long?> componentCount = default;
            Core.Optional<long?> binaryCount = default;
            Core.Optional<long?> analysisTimeSeconds = default;
            Core.Optional<long?> rootFileSystems = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("extractedSize"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        extractedSize = null;
                        continue;
                    }
                    extractedSize = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("fileSize"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        fileSize = null;
                        continue;
                    }
                    fileSize = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("extractedFileCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        extractedFileCount = null;
                        continue;
                    }
                    extractedFileCount = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("componentCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        componentCount = null;
                        continue;
                    }
                    componentCount = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("binaryCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        binaryCount = null;
                        continue;
                    }
                    binaryCount = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("analysisTimeSeconds"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        analysisTimeSeconds = null;
                        continue;
                    }
                    analysisTimeSeconds = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("rootFileSystems"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        rootFileSystems = null;
                        continue;
                    }
                    rootFileSystems = property.Value.GetInt64();
                    continue;
                }
            }
            return new FirmwareSummary(Core.Optional.ToNullable(extractedSize), Core.Optional.ToNullable(fileSize), Core.Optional.ToNullable(extractedFileCount), Core.Optional.ToNullable(componentCount), Core.Optional.ToNullable(binaryCount), Core.Optional.ToNullable(analysisTimeSeconds), Core.Optional.ToNullable(rootFileSystems));
        }
    }
}
