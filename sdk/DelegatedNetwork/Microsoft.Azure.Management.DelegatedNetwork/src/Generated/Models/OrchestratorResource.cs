// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DelegatedNetwork.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Represents an instance of a resource.
    /// </summary>
    public partial class OrchestratorResource : IResource
    {
        /// <summary>
        /// Initializes a new instance of the OrchestratorResource class.
        /// </summary>
        public OrchestratorResource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OrchestratorResource class.
        /// </summary>
        /// <param name="id">An identifier that represents the
        /// resource.</param>
        /// <param name="name">The name of the resource.</param>
        /// <param name="type">The type of resource.</param>
        /// <param name="location">Location of the resource.</param>
        /// <param name="identity">The identity of the orchestrator</param>
        /// <param name="tags">The resource tags.</param>
        public OrchestratorResource(string id = default(string), string name = default(string), string type = default(string), string location = default(string), OrchestratorIdentity identity = default(OrchestratorIdentity), IDictionary<string, string> tags = default(IDictionary<string, string>))
        {
            Id = id;
            Name = name;
            Type = type;
            Location = location;
            Identity = identity;
            Tags = tags;
            CustomInit();
        }
        /// <summary>
        /// Static constructor for OrchestratorResource class.
        /// </summary>
        static OrchestratorResource()
        {
            Kind = "Kubernetes";
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets an identifier that represents the resource.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets the name of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets the type of resource.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

        /// <summary>
        /// Gets or sets location of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public string Location { get; set; }

        /// <summary>
        /// Gets or sets the identity of the orchestrator
        /// </summary>
        [JsonProperty(PropertyName = "identity")]
        public OrchestratorIdentity Identity { get; set; }

        /// <summary>
        /// Gets or sets the resource tags.
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

        /// <summary>
        /// The kind of workbook. Choices are user and shared.
        /// </summary>
        [JsonProperty(PropertyName = "kind")]
        public static string Kind { get; private set; }

    }
}
