// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DelegatedNetwork.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Details of controller type.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ControllerTypeParameters
    {
        /// <summary>
        /// Initializes a new instance of the ControllerTypeParameters class.
        /// </summary>
        public ControllerTypeParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ControllerTypeParameters class.
        /// </summary>
        /// <param name="controllerType">Type of controller. Possible values
        /// include: 'Kubernetes'</param>
        /// <param name="serverAppID">AAD ID used with apiserver</param>
        /// <param name="serverTenantID">TenantID of server App ID</param>
        /// <param name="clusterRootCA">RootCA certificate of kubernetes
        /// cluster</param>
        /// <param name="apiServerEndpoint">APIServer url</param>
        public ControllerTypeParameters(string controllerType = default(string), string serverAppID = default(string), string serverTenantID = default(string), string clusterRootCA = default(string), string apiServerEndpoint = default(string))
        {
            ControllerType = controllerType;
            ServerAppID = serverAppID;
            ServerTenantID = serverTenantID;
            ClusterRootCA = clusterRootCA;
            ApiServerEndpoint = apiServerEndpoint;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets type of controller. Possible values include:
        /// 'Kubernetes'
        /// </summary>
        [JsonProperty(PropertyName = "controllerType")]
        public string ControllerType { get; set; }

        /// <summary>
        /// Gets or sets AAD ID used with apiserver
        /// </summary>
        [JsonProperty(PropertyName = "properties.serverAppID")]
        public string ServerAppID { get; set; }

        /// <summary>
        /// Gets or sets tenantID of server App ID
        /// </summary>
        [JsonProperty(PropertyName = "properties.serverTenantID")]
        public string ServerTenantID { get; set; }

        /// <summary>
        /// Gets or sets rootCA certificate of kubernetes cluster
        /// </summary>
        [JsonProperty(PropertyName = "properties.clusterRootCA")]
        public string ClusterRootCA { get; set; }

        /// <summary>
        /// Gets or sets aPIServer url
        /// </summary>
        [JsonProperty(PropertyName = "properties.apiServerEndpoint")]
        public string ApiServerEndpoint { get; set; }

    }
}
