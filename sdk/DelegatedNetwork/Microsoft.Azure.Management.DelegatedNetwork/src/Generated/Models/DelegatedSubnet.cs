// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DelegatedNetwork.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Delegated subnet details
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class DelegatedSubnet : DelegatedSubnetResource
    {
        /// <summary>
        /// Initializes a new instance of the DelegatedSubnet class.
        /// </summary>
        public DelegatedSubnet()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DelegatedSubnet class.
        /// </summary>
        /// <param name="id">An identifier that represents the DelegatedSubnet
        /// resource.</param>
        /// <param name="name">The name of the DelegatedSubnet
        /// resource.</param>
        /// <param name="type">The type of the DelegatedSubnet
        /// resource.(Microsoft.DelegatedNetwork/delegatedSubnet)</param>
        /// <param name="location">Location of the DelegatedSubnet
        /// resource.</param>
        /// <param name="state">The current state of delegated subnet resource.
        /// Possible values include: 'Deleting', 'Succeeded', 'Failed',
        /// 'Provisioning'</param>
        public DelegatedSubnet(string id = default(string), string name = default(string), string type = default(string), string location = default(string), string state = default(string))
            : base(id, name, type, location)
        {
            State = state;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the current state of delegated subnet resource. Possible
        /// values include: 'Deleting', 'Succeeded', 'Failed', 'Provisioning'
        /// </summary>
        [JsonProperty(PropertyName = "properties.state")]
        public string State { get; private set; }

    }
}
