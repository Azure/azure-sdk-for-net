// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.Insights.Models
{
    /// <summary> A log metrics trigger descriptor. </summary>
    public partial class LogMetricTrigger
    {
        /// <summary> Initializes a new instance of LogMetricTrigger. </summary>
        public LogMetricTrigger()
        {
        }

        /// <summary> Initializes a new instance of LogMetricTrigger. </summary>
        /// <param name="thresholdOperator"> Evaluation operation for Metric -&apos;GreaterThan&apos; or &apos;LessThan&apos; or &apos;Equal&apos;. </param>
        /// <param name="threshold"> The threshold of the metric trigger. </param>
        /// <param name="metricTriggerType"> Metric Trigger Type - &apos;Consecutive&apos; or &apos;Total&apos;. </param>
        /// <param name="metricColumn"> Evaluation of metric on a particular column. </param>
        internal LogMetricTrigger(ConditionalOperator? thresholdOperator, double? threshold, MetricTriggerType? metricTriggerType, string metricColumn)
        {
            ThresholdOperator = thresholdOperator;
            Threshold = threshold;
            MetricTriggerType = metricTriggerType;
            MetricColumn = metricColumn;
        }

        /// <summary> Evaluation operation for Metric -&apos;GreaterThan&apos; or &apos;LessThan&apos; or &apos;Equal&apos;. </summary>
        public ConditionalOperator? ThresholdOperator { get; set; }
        /// <summary> The threshold of the metric trigger. </summary>
        public double? Threshold { get; set; }
        /// <summary> Metric Trigger Type - &apos;Consecutive&apos; or &apos;Total&apos;. </summary>
        public MetricTriggerType? MetricTriggerType { get; set; }
        /// <summary> Evaluation of metric on a particular column. </summary>
        public string MetricColumn { get; set; }
    }
}
