// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Insights.Models
{
    public partial class TriggerCondition : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("thresholdOperator");
            writer.WriteStringValue(ThresholdOperator.ToString());
            writer.WritePropertyName("threshold");
            writer.WriteNumberValue(Threshold);
            if (Optional.IsDefined(MetricTrigger))
            {
                writer.WritePropertyName("metricTrigger");
                writer.WriteObjectValue(MetricTrigger);
            }
            writer.WriteEndObject();
        }

        internal static TriggerCondition DeserializeTriggerCondition(JsonElement element)
        {
            ConditionalOperator thresholdOperator = default;
            double threshold = default;
            Optional<LogMetricTrigger> metricTrigger = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("thresholdOperator"))
                {
                    thresholdOperator = new ConditionalOperator(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("threshold"))
                {
                    threshold = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("metricTrigger"))
                {
                    metricTrigger = LogMetricTrigger.DeserializeLogMetricTrigger(property.Value);
                    continue;
                }
            }
            return new TriggerCondition(thresholdOperator, threshold, metricTrigger.Value);
        }
    }
}
