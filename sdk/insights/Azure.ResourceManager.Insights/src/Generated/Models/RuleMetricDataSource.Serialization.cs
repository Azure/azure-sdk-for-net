// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Insights.Models
{
    public partial class RuleMetricDataSource : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(MetricName))
            {
                writer.WritePropertyName("metricName");
                writer.WriteStringValue(MetricName);
            }
            writer.WritePropertyName("odata.type");
            writer.WriteStringValue(OdataType);
            if (Optional.IsDefined(ResourceUri))
            {
                writer.WritePropertyName("resourceUri");
                writer.WriteStringValue(ResourceUri);
            }
            writer.WriteEndObject();
        }

        internal static RuleMetricDataSource DeserializeRuleMetricDataSource(JsonElement element)
        {
            Optional<string> metricName = default;
            string odataType = default;
            Optional<string> resourceUri = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("metricName"))
                {
                    metricName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("odata.type"))
                {
                    odataType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("resourceUri"))
                {
                    resourceUri = property.Value.GetString();
                    continue;
                }
            }
            return new RuleMetricDataSource(odataType, resourceUri.Value, metricName.Value);
        }
    }
}
