// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.ResourceManager.Insights.Models
{
    /// <summary> Specify action need to be taken when rule type is converting log to metric. </summary>
    public partial class LogToMetricAction : Action
    {
        /// <summary> Initializes a new instance of LogToMetricAction. </summary>
        /// <param name="criteria"> Criteria of Metric. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="criteria"/> is null. </exception>
        public LogToMetricAction(IEnumerable<Criteria> criteria)
        {
            if (criteria == null)
            {
                throw new ArgumentNullException(nameof(criteria));
            }

            Criteria = criteria.ToList();
            OdataType = "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.LogToMetricAction";
        }

        /// <summary> Initializes a new instance of LogToMetricAction. </summary>
        /// <param name="odataType"> Specifies the action. Supported values - AlertingAction, LogToMetricAction. </param>
        /// <param name="criteria"> Criteria of Metric. </param>
        internal LogToMetricAction(string odataType, IList<Criteria> criteria) : base(odataType)
        {
            Criteria = criteria;
            OdataType = odataType ?? "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.LogToMetricAction";
        }

        /// <summary> Criteria of Metric. </summary>
        public IList<Criteria> Criteria { get; }
    }
}
