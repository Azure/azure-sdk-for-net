// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.Insights.Models
{
    internal static partial class TimeAggregationTypeExtensions
    {
        public static string ToSerialString(this TimeAggregationType value) => value switch
        {
            TimeAggregationType.Average => "Average",
            TimeAggregationType.Minimum => "Minimum",
            TimeAggregationType.Maximum => "Maximum",
            TimeAggregationType.Total => "Total",
            TimeAggregationType.Count => "Count",
            TimeAggregationType.Last => "Last",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown TimeAggregationType value.")
        };

        public static TimeAggregationType ToTimeAggregationType(this string value)
        {
            if (string.Equals(value, "Average", StringComparison.InvariantCultureIgnoreCase)) return TimeAggregationType.Average;
            if (string.Equals(value, "Minimum", StringComparison.InvariantCultureIgnoreCase)) return TimeAggregationType.Minimum;
            if (string.Equals(value, "Maximum", StringComparison.InvariantCultureIgnoreCase)) return TimeAggregationType.Maximum;
            if (string.Equals(value, "Total", StringComparison.InvariantCultureIgnoreCase)) return TimeAggregationType.Total;
            if (string.Equals(value, "Count", StringComparison.InvariantCultureIgnoreCase)) return TimeAggregationType.Count;
            if (string.Equals(value, "Last", StringComparison.InvariantCultureIgnoreCase)) return TimeAggregationType.Last;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown TimeAggregationType value.");
        }
    }
}
