// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Insights.Models
{
    public partial class ScaleRuleMetricDimension : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("DimensionName");
            writer.WriteStringValue(DimensionName);
            writer.WritePropertyName("Operator");
            writer.WriteStringValue(Operator.ToString());
            writer.WritePropertyName("Values");
            writer.WriteStartArray();
            foreach (var item in Values)
            {
                writer.WriteStringValue(item);
            }
            writer.WriteEndArray();
            writer.WriteEndObject();
        }

        internal static ScaleRuleMetricDimension DeserializeScaleRuleMetricDimension(JsonElement element)
        {
            string dimensionName = default;
            ScaleRuleMetricDimensionOperationType @operator = default;
            IList<string> values = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("DimensionName"))
                {
                    dimensionName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("Operator"))
                {
                    @operator = new ScaleRuleMetricDimensionOperationType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("Values"))
                {
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    values = array;
                    continue;
                }
            }
            return new ScaleRuleMetricDimension(dimensionName, @operator, values);
        }
    }
}
