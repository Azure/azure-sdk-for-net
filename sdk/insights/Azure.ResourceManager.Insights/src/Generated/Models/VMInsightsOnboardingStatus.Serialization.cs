// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Insights.Models
{
    public partial class VMInsightsOnboardingStatus
    {
        internal static VMInsightsOnboardingStatus DeserializeVMInsightsOnboardingStatus(JsonElement element)
        {
            Optional<string> id = default;
            Optional<string> name = default;
            Optional<string> type = default;
            Optional<string> resourceId = default;
            Optional<OnboardingStatus> onboardingStatus = default;
            Optional<DataStatus> dataStatus = default;
            Optional<IReadOnlyList<DataContainer>> data = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("properties"))
                {
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("resourceId"))
                        {
                            resourceId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("onboardingStatus"))
                        {
                            onboardingStatus = new OnboardingStatus(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("dataStatus"))
                        {
                            dataStatus = new DataStatus(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("data"))
                        {
                            List<DataContainer> array = new List<DataContainer>();
                            foreach (var item in property0.Value.EnumerateArray())
                            {
                                array.Add(DataContainer.DeserializeDataContainer(item));
                            }
                            data = array;
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new VMInsightsOnboardingStatus(id.Value, name.Value, type.Value, resourceId.Value, Optional.ToNullable(onboardingStatus), Optional.ToNullable(dataStatus), Optional.ToList(data));
        }
    }
}
