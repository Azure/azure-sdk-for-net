// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Insights.Models
{
    /// <summary> Specifies the action to post to service when the rule condition is evaluated. The discriminator is always RuleWebhookAction in this case. </summary>
    public partial class RuleWebhookAction : RuleAction
    {
        /// <summary> Initializes a new instance of RuleWebhookAction. </summary>
        public RuleWebhookAction()
        {
            Properties = new ChangeTrackingDictionary<string, string>();
            OdataType = "Microsoft.Azure.Management.Insights.Models.RuleWebhookAction";
        }

        /// <summary> Initializes a new instance of RuleWebhookAction. </summary>
        /// <param name="odataType"> specifies the type of the action. There are two types of actions: RuleEmailAction and RuleWebhookAction. </param>
        /// <param name="serviceUri"> the service uri to Post the notification when the alert activates or resolves. </param>
        /// <param name="properties"> the dictionary of custom properties to include with the post operation. These data are appended to the webhook payload. </param>
        internal RuleWebhookAction(string odataType, string serviceUri, IDictionary<string, string> properties) : base(odataType)
        {
            ServiceUri = serviceUri;
            Properties = properties;
            OdataType = odataType ?? "Microsoft.Azure.Management.Insights.Models.RuleWebhookAction";
        }

        /// <summary> the service uri to Post the notification when the alert activates or resolves. </summary>
        public string ServiceUri { get; set; }
        /// <summary> the dictionary of custom properties to include with the post operation. These data are appended to the webhook payload. </summary>
        public IDictionary<string, string> Properties { get; }
    }
}
