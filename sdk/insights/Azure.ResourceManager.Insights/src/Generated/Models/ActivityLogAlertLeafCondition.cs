// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.Insights.Models
{
    /// <summary> An Activity Log alert condition that is met by comparing an activity log field and value. </summary>
    public partial class ActivityLogAlertLeafCondition
    {
        /// <summary> Initializes a new instance of ActivityLogAlertLeafCondition. </summary>
        /// <param name="field"> The name of the field that this condition will examine. The possible values for this field are (case-insensitive): &apos;resourceId&apos;, &apos;category&apos;, &apos;caller&apos;, &apos;level&apos;, &apos;operationName&apos;, &apos;resourceGroup&apos;, &apos;resourceProvider&apos;, &apos;status&apos;, &apos;subStatus&apos;, &apos;resourceType&apos;, or anything beginning with &apos;properties.&apos;. </param>
        /// <param name="equalsValue"> The field value will be compared to this value (case-insensitive) to determine if the condition is met. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="field"/> or <paramref name="equalsValue"/> is null. </exception>
        public ActivityLogAlertLeafCondition(string field, string equalsValue)
        {
            if (field == null)
            {
                throw new ArgumentNullException(nameof(field));
            }
            if (equalsValue == null)
            {
                throw new ArgumentNullException(nameof(equalsValue));
            }

            Field = field;
            EqualsValue = equalsValue;
        }

        /// <summary> The name of the field that this condition will examine. The possible values for this field are (case-insensitive): &apos;resourceId&apos;, &apos;category&apos;, &apos;caller&apos;, &apos;level&apos;, &apos;operationName&apos;, &apos;resourceGroup&apos;, &apos;resourceProvider&apos;, &apos;status&apos;, &apos;subStatus&apos;, &apos;resourceType&apos;, or anything beginning with &apos;properties.&apos;. </summary>
        public string Field { get; set; }
        /// <summary> The field value will be compared to this value (case-insensitive) to determine if the condition is met. </summary>
        public string EqualsValue { get; set; }
    }
}
