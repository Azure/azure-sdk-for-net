// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core.Pipeline;
using Azure.ResourceManager.Insights.Models;

namespace Azure.ResourceManager.Insights
{
    /// <summary> The MetricBaseline service client. </summary>
    public partial class MetricBaselineOperations
    {
        private readonly ClientDiagnostics _clientDiagnostics;
        private readonly HttpPipeline _pipeline;
        internal MetricBaselineRestOperations RestClient { get; }

        /// <summary> Initializes a new instance of MetricBaselineOperations for mocking. </summary>
        protected MetricBaselineOperations()
        {
        }

        /// <summary> Initializes a new instance of MetricBaselineOperations. </summary>
        /// <param name="clientDiagnostics"> The handler for diagnostic messaging in the client. </param>
        /// <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
        /// <param name="endpoint"> server parameter. </param>
        internal MetricBaselineOperations(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, Uri endpoint = null)
        {
            RestClient = new MetricBaselineRestOperations(clientDiagnostics, pipeline, endpoint);
            _clientDiagnostics = clientDiagnostics;
            _pipeline = pipeline;
        }

        /// <summary> **Gets the baseline values for a specific metric**. </summary>
        /// <param name="resourceUri"> The identifier of the resource. It has the following structure: subscriptions/{subscriptionName}/resourceGroups/{resourceGroupName}/providers/{providerName}/{resourceName}. For example: subscriptions/b368ca2f-e298-46b7-b0ab-012281956afa/resourceGroups/vms/providers/Microsoft.Compute/virtualMachines/vm1. </param>
        /// <param name="metricName"> The name of the metric to retrieve the baseline for. </param>
        /// <param name="timespan"> The timespan of the query. It is a string with the following format &apos;startDateTime_ISO/endDateTime_ISO&apos;. </param>
        /// <param name="interval"> The interval (i.e. timegrain) of the query. </param>
        /// <param name="aggregation"> The aggregation type of the metric to retrieve the baseline for. </param>
        /// <param name="sensitivities"> The list of sensitivities (comma separated) to retrieve. </param>
        /// <param name="resultType"> Allows retrieving only metadata of the baseline. On data request all information is retrieved. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<Response<BaselineResponse>> GetAsync(string resourceUri, string metricName, string timespan = null, TimeSpan? interval = null, string aggregation = null, string sensitivities = null, ResultType? resultType = null, CancellationToken cancellationToken = default)
        {
            using var scope = _clientDiagnostics.CreateScope("MetricBaselineOperations.Get");
            scope.Start();
            try
            {
                return await RestClient.GetAsync(resourceUri, metricName, timespan, interval, aggregation, sensitivities, resultType, cancellationToken).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> **Gets the baseline values for a specific metric**. </summary>
        /// <param name="resourceUri"> The identifier of the resource. It has the following structure: subscriptions/{subscriptionName}/resourceGroups/{resourceGroupName}/providers/{providerName}/{resourceName}. For example: subscriptions/b368ca2f-e298-46b7-b0ab-012281956afa/resourceGroups/vms/providers/Microsoft.Compute/virtualMachines/vm1. </param>
        /// <param name="metricName"> The name of the metric to retrieve the baseline for. </param>
        /// <param name="timespan"> The timespan of the query. It is a string with the following format &apos;startDateTime_ISO/endDateTime_ISO&apos;. </param>
        /// <param name="interval"> The interval (i.e. timegrain) of the query. </param>
        /// <param name="aggregation"> The aggregation type of the metric to retrieve the baseline for. </param>
        /// <param name="sensitivities"> The list of sensitivities (comma separated) to retrieve. </param>
        /// <param name="resultType"> Allows retrieving only metadata of the baseline. On data request all information is retrieved. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual Response<BaselineResponse> Get(string resourceUri, string metricName, string timespan = null, TimeSpan? interval = null, string aggregation = null, string sensitivities = null, ResultType? resultType = null, CancellationToken cancellationToken = default)
        {
            using var scope = _clientDiagnostics.CreateScope("MetricBaselineOperations.Get");
            scope.Start();
            try
            {
                return RestClient.Get(resourceUri, metricName, timespan, interval, aggregation, sensitivities, resultType, cancellationToken);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> **Lists the baseline values for a resource**. </summary>
        /// <param name="resourceUri"> The identifier of the resource. It has the following structure: subscriptions/{subscriptionName}/resourceGroups/{resourceGroupName}/providers/{providerName}/{resourceName}. For example: subscriptions/b368ca2f-e298-46b7-b0ab-012281956afa/resourceGroups/vms/providers/Microsoft.Compute/virtualMachines/vm1. </param>
        /// <param name="timeSeriesInformation"> Information that need to be specified to calculate a baseline on a time series. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<Response<CalculateBaselineResponse>> CalculateBaselineAsync(string resourceUri, TimeSeriesInformation timeSeriesInformation, CancellationToken cancellationToken = default)
        {
            using var scope = _clientDiagnostics.CreateScope("MetricBaselineOperations.CalculateBaseline");
            scope.Start();
            try
            {
                return await RestClient.CalculateBaselineAsync(resourceUri, timeSeriesInformation, cancellationToken).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <summary> **Lists the baseline values for a resource**. </summary>
        /// <param name="resourceUri"> The identifier of the resource. It has the following structure: subscriptions/{subscriptionName}/resourceGroups/{resourceGroupName}/providers/{providerName}/{resourceName}. For example: subscriptions/b368ca2f-e298-46b7-b0ab-012281956afa/resourceGroups/vms/providers/Microsoft.Compute/virtualMachines/vm1. </param>
        /// <param name="timeSeriesInformation"> Information that need to be specified to calculate a baseline on a time series. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual Response<CalculateBaselineResponse> CalculateBaseline(string resourceUri, TimeSeriesInformation timeSeriesInformation, CancellationToken cancellationToken = default)
        {
            using var scope = _clientDiagnostics.CreateScope("MetricBaselineOperations.CalculateBaseline");
            scope.Start();
            try
            {
                return RestClient.CalculateBaseline(resourceUri, timeSeriesInformation, cancellationToken);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }
    }
}
