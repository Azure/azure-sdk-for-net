// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.ResourceManager.LiftrQumulo.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.LiftrQumulo
{
    /// <summary> A class representing the JobDefinition data model. </summary>
    public partial class JobDefinitionData : ResourceData
    {
        /// <summary> Initializes a new instance of JobDefinitionData. </summary>
        /// <param name="copyMode"> Strategy to use for copy. </param>
        /// <param name="sourceName"> The name of the source Endpoint. </param>
        /// <param name="targetName"> The name of the target Endpoint. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="sourceName"/> or <paramref name="targetName"/> is null. </exception>
        public JobDefinitionData(CopyMode copyMode, string sourceName, string targetName)
        {
            Argument.AssertNotNull(sourceName, nameof(sourceName));
            Argument.AssertNotNull(targetName, nameof(targetName));

            CopyMode = copyMode;
            SourceName = sourceName;
            TargetName = targetName;
        }

        /// <summary> Initializes a new instance of JobDefinitionData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="description"> A description for the Job Definition. </param>
        /// <param name="copyMode"> Strategy to use for copy. </param>
        /// <param name="sourceName"> The name of the source Endpoint. </param>
        /// <param name="sourceResourceId"> Fully qualified resource ID of the source Endpoint. </param>
        /// <param name="sourceSubpath"> The subpath to use when reading from the source Endpoint. </param>
        /// <param name="targetName"> The name of the target Endpoint. </param>
        /// <param name="targetResourceId"> Fully qualified resource ID of the target Endpoint. </param>
        /// <param name="targetSubpath"> The subpath to use when writing to the target Endpoint. </param>
        /// <param name="latestQumuloJobRunName"> The name of the Job Run in a non-terminal state, if exists. </param>
        /// <param name="latestQumuloJobRunResourceId"> The fully qualified resource ID of the Job Run in a non-terminal state, if exists. </param>
        /// <param name="latestQumuloJobRunStatus"> The current status of the Job Run in a non-terminal state, if exists. </param>
        /// <param name="qumuloAgentName"> Name of the Agent to assign for new Job Runs of this Job Definition. </param>
        /// <param name="qumuloAgentResourceId"> Fully qualified resource id of the Agent to assign for new Job Runs of this Job Definition. </param>
        /// <param name="provisioningState"> The provisioning state of this resource. </param>
        internal JobDefinitionData(ResourceIdentifier id, string name, ResourceType resourceType, SystemData systemData, string description, CopyMode copyMode, string sourceName, string sourceResourceId, string sourceSubpath, string targetName, string targetResourceId, string targetSubpath, string latestQumuloJobRunName, string latestQumuloJobRunResourceId, QumuloJobRunStatus? latestQumuloJobRunStatus, string qumuloAgentName, string qumuloAgentResourceId, ProvisioningState? provisioningState) : base(id, name, resourceType, systemData)
        {
            Description = description;
            CopyMode = copyMode;
            SourceName = sourceName;
            SourceResourceId = sourceResourceId;
            SourceSubpath = sourceSubpath;
            TargetName = targetName;
            TargetResourceId = targetResourceId;
            TargetSubpath = targetSubpath;
            LatestQumuloJobRunName = latestQumuloJobRunName;
            LatestQumuloJobRunResourceId = latestQumuloJobRunResourceId;
            LatestQumuloJobRunStatus = latestQumuloJobRunStatus;
            QumuloAgentName = qumuloAgentName;
            QumuloAgentResourceId = qumuloAgentResourceId;
            ProvisioningState = provisioningState;
        }

        /// <summary> A description for the Job Definition. </summary>
        public string Description { get; set; }
        /// <summary> Strategy to use for copy. </summary>
        public CopyMode CopyMode { get; set; }
        /// <summary> The name of the source Endpoint. </summary>
        public string SourceName { get; set; }
        /// <summary> Fully qualified resource ID of the source Endpoint. </summary>
        public string SourceResourceId { get; }
        /// <summary> The subpath to use when reading from the source Endpoint. </summary>
        public string SourceSubpath { get; set; }
        /// <summary> The name of the target Endpoint. </summary>
        public string TargetName { get; set; }
        /// <summary> Fully qualified resource ID of the target Endpoint. </summary>
        public string TargetResourceId { get; }
        /// <summary> The subpath to use when writing to the target Endpoint. </summary>
        public string TargetSubpath { get; set; }
        /// <summary> The name of the Job Run in a non-terminal state, if exists. </summary>
        public string LatestQumuloJobRunName { get; }
        /// <summary> The fully qualified resource ID of the Job Run in a non-terminal state, if exists. </summary>
        public string LatestQumuloJobRunResourceId { get; }
        /// <summary> The current status of the Job Run in a non-terminal state, if exists. </summary>
        public QumuloJobRunStatus? LatestQumuloJobRunStatus { get; }
        /// <summary> Name of the Agent to assign for new Job Runs of this Job Definition. </summary>
        public string QumuloAgentName { get; set; }
        /// <summary> Fully qualified resource id of the Agent to assign for new Job Runs of this Job Definition. </summary>
        public string QumuloAgentResourceId { get; }
        /// <summary> The provisioning state of this resource. </summary>
        public ProvisioningState? ProvisioningState { get; }
    }
}
