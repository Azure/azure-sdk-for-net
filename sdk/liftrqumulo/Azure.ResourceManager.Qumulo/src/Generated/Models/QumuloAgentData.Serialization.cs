// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.Qumulo.Models;

namespace Azure.ResourceManager.Qumulo
{
    public partial class QumuloAgentData : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("properties");
            writer.WriteStartObject();
            if (Optional.IsDefined(Description))
            {
                writer.WritePropertyName("description");
                writer.WriteStringValue(Description);
            }
            writer.WritePropertyName("arcResourceId");
            writer.WriteStringValue(ArcResourceId);
            writer.WritePropertyName("arcVmUuid");
            writer.WriteStringValue(ArcVmUuid);
            writer.WriteEndObject();
            writer.WriteEndObject();
        }

        internal static QumuloAgentData DeserializeQumuloAgentData(JsonElement element)
        {
            ResourceIdentifier id = default;
            string name = default;
            ResourceType type = default;
            Optional<SystemData> systemData = default;
            Optional<string> description = default;
            Optional<string> qumuloAgentVersion = default;
            string arcResourceId = default;
            string arcVmUuid = default;
            Optional<QumuloAgentStatus> qumuloAgentStatus = default;
            Optional<DateTimeOffset> lastStatusUpdate = default;
            Optional<string> localIPAddress = default;
            Optional<long> memoryInMB = default;
            Optional<long> numberOfCores = default;
            Optional<long> uptimeInSeconds = default;
            Optional<QumuloAgentPropertiesErrorDetails> errorDetails = default;
            Optional<ProvisioningState> provisioningState = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    id = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = new ResourceType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("systemData"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    systemData = JsonSerializer.Deserialize<SystemData>(property.Value.GetRawText());
                    continue;
                }
                if (property.NameEquals("properties"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("description"))
                        {
                            description = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("agentVersion"))
                        {
                            qumuloAgentVersion = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("arcResourceId"))
                        {
                            arcResourceId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("arcVmUuid"))
                        {
                            arcVmUuid = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("agentStatus"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            qumuloAgentStatus = new QumuloAgentStatus(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("lastStatusUpdate"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            lastStatusUpdate = property0.Value.GetDateTimeOffset("O");
                            continue;
                        }
                        if (property0.NameEquals("localIPAddress"))
                        {
                            localIPAddress = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("memoryInMB"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            memoryInMB = property0.Value.GetInt64();
                            continue;
                        }
                        if (property0.NameEquals("numberOfCores"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            numberOfCores = property0.Value.GetInt64();
                            continue;
                        }
                        if (property0.NameEquals("uptimeInSeconds"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            uptimeInSeconds = property0.Value.GetInt64();
                            continue;
                        }
                        if (property0.NameEquals("errorDetails"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            errorDetails = QumuloAgentPropertiesErrorDetails.DeserializeQumuloAgentPropertiesErrorDetails(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("provisioningState"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            provisioningState = new ProvisioningState(property0.Value.GetString());
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new QumuloAgentData(id, name, type, systemData.Value, description.Value, qumuloAgentVersion.Value, arcResourceId, arcVmUuid, Optional.ToNullable(qumuloAgentStatus), Optional.ToNullable(lastStatusUpdate), localIPAddress.Value, Optional.ToNullable(memoryInMB), Optional.ToNullable(numberOfCores), Optional.ToNullable(uptimeInSeconds), errorDetails.Value, Optional.ToNullable(provisioningState));
        }
    }
}
