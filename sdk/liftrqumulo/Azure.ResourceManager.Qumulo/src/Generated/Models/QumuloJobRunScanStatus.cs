// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.LiftrQumulo.Models
{
    /// <summary> The status of Agent&apos;s scanning of source. </summary>
    public readonly partial struct QumuloJobRunScanStatus : IEquatable<QumuloJobRunScanStatus>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="QumuloJobRunScanStatus"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public QumuloJobRunScanStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string NotStartedValue = "NotStarted";
        private const string ScanningValue = "Scanning";
        private const string CompletedValue = "Completed";

        /// <summary> NotStarted. </summary>
        public static QumuloJobRunScanStatus NotStarted { get; } = new QumuloJobRunScanStatus(NotStartedValue);
        /// <summary> Scanning. </summary>
        public static QumuloJobRunScanStatus Scanning { get; } = new QumuloJobRunScanStatus(ScanningValue);
        /// <summary> Completed. </summary>
        public static QumuloJobRunScanStatus Completed { get; } = new QumuloJobRunScanStatus(CompletedValue);
        /// <summary> Determines if two <see cref="QumuloJobRunScanStatus"/> values are the same. </summary>
        public static bool operator ==(QumuloJobRunScanStatus left, QumuloJobRunScanStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="QumuloJobRunScanStatus"/> values are not the same. </summary>
        public static bool operator !=(QumuloJobRunScanStatus left, QumuloJobRunScanStatus right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="QumuloJobRunScanStatus"/>. </summary>
        public static implicit operator QumuloJobRunScanStatus(string value) => new QumuloJobRunScanStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is QumuloJobRunScanStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(QumuloJobRunScanStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
