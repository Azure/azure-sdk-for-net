// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Qumulo.Models
{
    public partial class NfsMountQumuloEndpointProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("host");
            writer.WriteStringValue(Host);
            if (Optional.IsDefined(NfsVersion))
            {
                writer.WritePropertyName("nfsVersion");
                writer.WriteStringValue(NfsVersion.Value.ToString());
            }
            writer.WritePropertyName("export");
            writer.WriteStringValue(Export);
            writer.WritePropertyName("endpointType");
            writer.WriteStringValue(QumuloEndpointType.ToString());
            if (Optional.IsDefined(Description))
            {
                writer.WritePropertyName("description");
                writer.WriteStringValue(Description);
            }
            writer.WriteEndObject();
        }

        internal static NfsMountQumuloEndpointProperties DeserializeNfsMountQumuloEndpointProperties(JsonElement element)
        {
            string host = default;
            Optional<NfsVersion> nfsVersion = default;
            string export = default;
            QumuloEndpointType qumuloEndpointType = default;
            Optional<string> description = default;
            Optional<ProvisioningState> provisioningState = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("host"))
                {
                    host = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("nfsVersion"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    nfsVersion = new NfsVersion(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("export"))
                {
                    export = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("endpointType"))
                {
                    qumuloEndpointType = new QumuloEndpointType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("description"))
                {
                    description = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("provisioningState"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    provisioningState = new ProvisioningState(property.Value.GetString());
                    continue;
                }
            }
            return new NfsMountQumuloEndpointProperties(qumuloEndpointType, description.Value, Optional.ToNullable(provisioningState), host, Optional.ToNullable(nfsVersion), export);
        }
    }
}
