// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.Qumulo.Models;

namespace Azure.ResourceManager.Qumulo
{
    public partial class JobDefinitionData : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("properties");
            writer.WriteStartObject();
            if (Optional.IsDefined(Description))
            {
                writer.WritePropertyName("description");
                writer.WriteStringValue(Description);
            }
            writer.WritePropertyName("copyMode");
            writer.WriteStringValue(CopyMode.ToString());
            writer.WritePropertyName("sourceName");
            writer.WriteStringValue(SourceName);
            if (Optional.IsDefined(SourceSubpath))
            {
                writer.WritePropertyName("sourceSubpath");
                writer.WriteStringValue(SourceSubpath);
            }
            writer.WritePropertyName("targetName");
            writer.WriteStringValue(TargetName);
            if (Optional.IsDefined(TargetSubpath))
            {
                writer.WritePropertyName("targetSubpath");
                writer.WriteStringValue(TargetSubpath);
            }
            if (Optional.IsDefined(QumuloAgentName))
            {
                writer.WritePropertyName("agentName");
                writer.WriteStringValue(QumuloAgentName);
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
        }

        internal static JobDefinitionData DeserializeJobDefinitionData(JsonElement element)
        {
            ResourceIdentifier id = default;
            string name = default;
            ResourceType type = default;
            Optional<SystemData> systemData = default;
            Optional<string> description = default;
            CopyMode copyMode = default;
            string sourceName = default;
            Optional<string> sourceResourceId = default;
            Optional<string> sourceSubpath = default;
            string targetName = default;
            Optional<string> targetResourceId = default;
            Optional<string> targetSubpath = default;
            Optional<string> latestQumuloJobRunName = default;
            Optional<string> latestQumuloJobRunResourceId = default;
            Optional<QumuloJobRunStatus> latestQumuloJobRunStatus = default;
            Optional<string> qumuloAgentName = default;
            Optional<string> qumuloAgentResourceId = default;
            Optional<ProvisioningState> provisioningState = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    id = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = new ResourceType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("systemData"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    systemData = JsonSerializer.Deserialize<SystemData>(property.Value.GetRawText());
                    continue;
                }
                if (property.NameEquals("properties"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("description"))
                        {
                            description = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("copyMode"))
                        {
                            copyMode = new CopyMode(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("sourceName"))
                        {
                            sourceName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("sourceResourceId"))
                        {
                            sourceResourceId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("sourceSubpath"))
                        {
                            sourceSubpath = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("targetName"))
                        {
                            targetName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("targetResourceId"))
                        {
                            targetResourceId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("targetSubpath"))
                        {
                            targetSubpath = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("latestJobRunName"))
                        {
                            latestQumuloJobRunName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("latestJobRunResourceId"))
                        {
                            latestQumuloJobRunResourceId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("latestJobRunStatus"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            latestQumuloJobRunStatus = new QumuloJobRunStatus(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("agentName"))
                        {
                            qumuloAgentName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("agentResourceId"))
                        {
                            qumuloAgentResourceId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("provisioningState"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            provisioningState = new ProvisioningState(property0.Value.GetString());
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new JobDefinitionData(id, name, type, systemData.Value, description.Value, copyMode, sourceName, sourceResourceId.Value, sourceSubpath.Value, targetName, targetResourceId.Value, targetSubpath.Value, latestQumuloJobRunName.Value, latestQumuloJobRunResourceId.Value, Optional.ToNullable(latestQumuloJobRunStatus), qumuloAgentName.Value, qumuloAgentResourceId.Value, Optional.ToNullable(provisioningState));
        }
    }
}
