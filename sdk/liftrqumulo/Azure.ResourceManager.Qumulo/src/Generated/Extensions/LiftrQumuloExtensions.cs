// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.ResourceManager;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.LiftrQumulo
{
    /// <summary> A class to add extension methods to Azure.ResourceManager.LiftrQumulo. </summary>
    public static partial class LiftrQumuloExtensions
    {
        private static SubscriptionResourceExtensionClient GetExtensionClient(SubscriptionResource subscriptionResource)
        {
            return subscriptionResource.GetCachedClient((client) =>
            {
                return new SubscriptionResourceExtensionClient(client, subscriptionResource.Id);
            }
            );
        }

        /// <summary>
        /// Lists all Storage Movers in a subscription.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.StorageMover/storageMovers
        /// Operation Id: StorageMovers_ListBySubscription
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> An async collection of <see cref="QumuloStorageMoverResource" /> that may take multiple service requests to iterate over. </returns>
        public static AsyncPageable<QumuloStorageMoverResource> GetQumuloStorageMoversAsync(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetQumuloStorageMoversAsync(cancellationToken);
        }

        /// <summary>
        /// Lists all Storage Movers in a subscription.
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.StorageMover/storageMovers
        /// Operation Id: StorageMovers_ListBySubscription
        /// </summary>
        /// <param name="subscriptionResource"> The <see cref="SubscriptionResource" /> instance the method will execute against. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of <see cref="QumuloStorageMoverResource" /> that may take multiple service requests to iterate over. </returns>
        public static Pageable<QumuloStorageMoverResource> GetQumuloStorageMovers(this SubscriptionResource subscriptionResource, CancellationToken cancellationToken = default)
        {
            return GetExtensionClient(subscriptionResource).GetQumuloStorageMovers(cancellationToken);
        }

        private static ResourceGroupResourceExtensionClient GetExtensionClient(ResourceGroupResource resourceGroupResource)
        {
            return resourceGroupResource.GetCachedClient((client) =>
            {
                return new ResourceGroupResourceExtensionClient(client, resourceGroupResource.Id);
            }
            );
        }

        /// <summary> Gets a collection of QumuloStorageMoverResources in the ResourceGroupResource. </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <returns> An object representing collection of QumuloStorageMoverResources and their operations over a QumuloStorageMoverResource. </returns>
        public static QumuloStorageMoverCollection GetQumuloStorageMovers(this ResourceGroupResource resourceGroupResource)
        {
            return GetExtensionClient(resourceGroupResource).GetQumuloStorageMovers();
        }

        /// <summary>
        /// Gets a Storage Mover resource.
        /// Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers/{storageMoverName}
        /// Operation Id: StorageMovers_Get
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="qumuloStorageMoverName"> The name of the Storage Mover resource. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="qumuloStorageMoverName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="qumuloStorageMoverName"/> is null. </exception>
        [ForwardsClientCalls]
        public static async Task<Response<QumuloStorageMoverResource>> GetQumuloStorageMoverAsync(this ResourceGroupResource resourceGroupResource, string qumuloStorageMoverName, CancellationToken cancellationToken = default)
        {
            return await resourceGroupResource.GetQumuloStorageMovers().GetAsync(qumuloStorageMoverName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Gets a Storage Mover resource.
        /// Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers/{storageMoverName}
        /// Operation Id: StorageMovers_Get
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="qumuloStorageMoverName"> The name of the Storage Mover resource. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="qumuloStorageMoverName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="qumuloStorageMoverName"/> is null. </exception>
        [ForwardsClientCalls]
        public static Response<QumuloStorageMoverResource> GetQumuloStorageMover(this ResourceGroupResource resourceGroupResource, string qumuloStorageMoverName, CancellationToken cancellationToken = default)
        {
            return resourceGroupResource.GetQumuloStorageMovers().Get(qumuloStorageMoverName, cancellationToken);
        }

        #region QumuloStorageMoverResource
        /// <summary>
        /// Gets an object representing a <see cref="QumuloStorageMoverResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="QumuloStorageMoverResource.CreateResourceIdentifier" /> to create a <see cref="QumuloStorageMoverResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="QumuloStorageMoverResource" /> object. </returns>
        public static QumuloStorageMoverResource GetQumuloStorageMoverResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                QumuloStorageMoverResource.ValidateResourceId(id);
                return new QumuloStorageMoverResource(client, id);
            }
            );
        }
        #endregion

        #region QumuloAgentResource
        /// <summary>
        /// Gets an object representing a <see cref="QumuloAgentResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="QumuloAgentResource.CreateResourceIdentifier" /> to create a <see cref="QumuloAgentResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="QumuloAgentResource" /> object. </returns>
        public static QumuloAgentResource GetQumuloAgentResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                QumuloAgentResource.ValidateResourceId(id);
                return new QumuloAgentResource(client, id);
            }
            );
        }
        #endregion

        #region QumuloEndpointResource
        /// <summary>
        /// Gets an object representing a <see cref="QumuloEndpointResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="QumuloEndpointResource.CreateResourceIdentifier" /> to create a <see cref="QumuloEndpointResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="QumuloEndpointResource" /> object. </returns>
        public static QumuloEndpointResource GetQumuloEndpointResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                QumuloEndpointResource.ValidateResourceId(id);
                return new QumuloEndpointResource(client, id);
            }
            );
        }
        #endregion

        #region QumuloProjectResource
        /// <summary>
        /// Gets an object representing a <see cref="QumuloProjectResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="QumuloProjectResource.CreateResourceIdentifier" /> to create a <see cref="QumuloProjectResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="QumuloProjectResource" /> object. </returns>
        public static QumuloProjectResource GetQumuloProjectResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                QumuloProjectResource.ValidateResourceId(id);
                return new QumuloProjectResource(client, id);
            }
            );
        }
        #endregion

        #region JobDefinitionResource
        /// <summary>
        /// Gets an object representing a <see cref="JobDefinitionResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="JobDefinitionResource.CreateResourceIdentifier" /> to create a <see cref="JobDefinitionResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="JobDefinitionResource" /> object. </returns>
        public static JobDefinitionResource GetJobDefinitionResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                JobDefinitionResource.ValidateResourceId(id);
                return new JobDefinitionResource(client, id);
            }
            );
        }
        #endregion

        #region QumuloJobRunResource
        /// <summary>
        /// Gets an object representing a <see cref="QumuloJobRunResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="QumuloJobRunResource.CreateResourceIdentifier" /> to create a <see cref="QumuloJobRunResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="QumuloJobRunResource" /> object. </returns>
        public static QumuloJobRunResource GetQumuloJobRunResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                QumuloJobRunResource.ValidateResourceId(id);
                return new QumuloJobRunResource(client, id);
            }
            );
        }
        #endregion
    }
}
