// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Elastic.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// User Information to be passed to partners.
    /// </summary>
    public partial class UserInfo
    {
        /// <summary>
        /// Initializes a new instance of the UserInfo class.
        /// </summary>
        public UserInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UserInfo class.
        /// </summary>
        /// <param name="firstName">First name of the user</param>
        /// <param name="lastName">Last name of the user</param>
        /// <param name="companyName">Company name of the user</param>
        /// <param name="emailAddress">Email of the user used by Elastic for
        /// contacting them if needed</param>
        /// <param name="companyInfo">Company information of the user to be
        /// passed to partners.</param>
        public UserInfo(string firstName = default(string), string lastName = default(string), string companyName = default(string), string emailAddress = default(string), CompanyInfo companyInfo = default(CompanyInfo))
        {
            FirstName = firstName;
            LastName = lastName;
            CompanyName = companyName;
            EmailAddress = emailAddress;
            CompanyInfo = companyInfo;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets first name of the user
        /// </summary>
        [JsonProperty(PropertyName = "firstName")]
        public string FirstName { get; set; }

        /// <summary>
        /// Gets or sets last name of the user
        /// </summary>
        [JsonProperty(PropertyName = "lastName")]
        public string LastName { get; set; }

        /// <summary>
        /// Gets or sets company name of the user
        /// </summary>
        [JsonProperty(PropertyName = "companyName")]
        public string CompanyName { get; set; }

        /// <summary>
        /// Gets or sets email of the user used by Elastic for contacting them
        /// if needed
        /// </summary>
        [JsonProperty(PropertyName = "emailAddress")]
        public string EmailAddress { get; set; }

        /// <summary>
        /// Gets or sets company information of the user to be passed to
        /// partners.
        /// </summary>
        [JsonProperty(PropertyName = "companyInfo")]
        public CompanyInfo CompanyInfo { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (FirstName != null)
            {
                if (FirstName.Length > 50)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "FirstName", 50);
                }
            }
            if (LastName != null)
            {
                if (LastName.Length > 50)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "LastName", 50);
                }
            }
            if (CompanyName != null)
            {
                if (CompanyName.Length > 50)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "CompanyName", 50);
                }
            }
            if (EmailAddress != null)
            {
                if (!System.Text.RegularExpressions.Regex.IsMatch(EmailAddress, "^([^<>()\\[\\]\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\"]+)*)@(([a-zA-Z-_0-9]+\\.)+[a-zA-Z]{2,})$"))
                {
                    throw new ValidationException(ValidationRules.Pattern, "EmailAddress", "^([^<>()\\[\\]\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\"]+)*)@(([a-zA-Z-_0-9]+\\.)+[a-zA-Z]{2,})$");
                }
            }
            if (CompanyInfo != null)
            {
                CompanyInfo.Validate();
            }
        }
    }
}
