// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Elastic;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Elastic.Models
{
    /// <summary> Model factory for models. </summary>
    public static partial class ArmElasticModelFactory
    {
        /// <summary> Initializes a new instance of <see cref="Elastic.ElasticMonitorResourceData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="skuName"> SKU of the monitor resource. </param>
        /// <param name="properties"> Properties of the monitor resource. </param>
        /// <param name="identity"> Identity properties of the monitor resource. Current supported identity types: SystemAssigned. </param>
        /// <returns> A new <see cref="Elastic.ElasticMonitorResourceData"/> instance for mocking. </returns>
        public static ElasticMonitorResourceData ElasticMonitorResourceData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IDictionary<string, string> tags = null, AzureLocation location = default, string skuName = null, MonitorProperties properties = null, ManagedServiceIdentity identity = null)
        {
            tags ??= new Dictionary<string, string>();

            return new ElasticMonitorResourceData(id, name, resourceType, systemData, tags, location, skuName != null ? new ResourceSku(skuName) : null, properties, identity);
        }

        /// <summary> Initializes a new instance of <see cref="Models.MonitorProperties"/>. </summary>
        /// <param name="provisioningState"> Provisioning state of the monitor resource. </param>
        /// <param name="monitoringStatus"> Flag specifying if the resource monitoring is enabled or disabled. </param>
        /// <param name="elasticProperties"> Elastic cloud properties. </param>
        /// <param name="userInfo"> User information. </param>
        /// <param name="liftrResourceCategory"></param>
        /// <param name="liftrResourcePreference"> The priority of the resource. </param>
        /// <returns> A new <see cref="Models.MonitorProperties"/> instance for mocking. </returns>
        public static MonitorProperties MonitorProperties(ProvisioningState? provisioningState = null, MonitoringStatus? monitoringStatus = null, ElasticProperties elasticProperties = null, UserInfo userInfo = null, LiftrResourceCategory? liftrResourceCategory = null, int? liftrResourcePreference = null)
        {
            return new MonitorProperties(provisioningState, monitoringStatus, elasticProperties, userInfo, liftrResourceCategory, liftrResourcePreference);
        }

        /// <summary> Initializes a new instance of <see cref="Models.ElasticCloudUser"/>. </summary>
        /// <param name="emailAddress"> Email of the Elastic User Account. </param>
        /// <param name="id"> User Id of the elastic account of the User. </param>
        /// <param name="elasticCloudSsoDefaultUri"> Elastic cloud default dashboard sso URL of the Elastic user account. </param>
        /// <returns> A new <see cref="Models.ElasticCloudUser"/> instance for mocking. </returns>
        public static ElasticCloudUser ElasticCloudUser(string emailAddress = null, string id = null, Uri elasticCloudSsoDefaultUri = null)
        {
            return new ElasticCloudUser(emailAddress, id, elasticCloudSsoDefaultUri);
        }

        /// <summary> Initializes a new instance of <see cref="Models.ElasticCloudDeployment"/>. </summary>
        /// <param name="name"> Elastic deployment name. </param>
        /// <param name="deploymentId"> Elastic deployment Id. </param>
        /// <param name="azureSubscriptionId"> Associated Azure subscription Id for the elastic deployment. </param>
        /// <param name="elasticsearchRegion"> Region where Deployment at Elastic side took place. </param>
        /// <param name="elasticsearchServiceUri"> Elasticsearch ingestion endpoint of the Elastic deployment. </param>
        /// <param name="kibanaServiceUri"> Kibana endpoint of the Elastic deployment. </param>
        /// <param name="kibanaSsoUri"> Kibana dashboard sso URL of the Elastic deployment. </param>
        /// <returns> A new <see cref="Models.ElasticCloudDeployment"/> instance for mocking. </returns>
        public static ElasticCloudDeployment ElasticCloudDeployment(string name = null, string deploymentId = null, string azureSubscriptionId = null, string elasticsearchRegion = null, Uri elasticsearchServiceUri = null, Uri kibanaServiceUri = null, Uri kibanaSsoUri = null)
        {
            return new ElasticCloudDeployment(name, deploymentId, azureSubscriptionId, elasticsearchRegion, elasticsearchServiceUri, kibanaServiceUri, kibanaSsoUri);
        }

        /// <summary> Initializes a new instance of <see cref="Models.MonitoredResourceContent"/>. </summary>
        /// <param name="id"> The ARM id of the resource. </param>
        /// <param name="sendingLogs"> Flag indicating the status of the resource for sending logs operation to Elastic. </param>
        /// <param name="reasonForLogsStatus"> Reason for why the resource is sending logs (or why it is not sending). </param>
        /// <returns> A new <see cref="Models.MonitoredResourceContent"/> instance for mocking. </returns>
        public static MonitoredResourceContent MonitoredResourceContent(string id = null, SendingLog? sendingLogs = null, string reasonForLogsStatus = null)
        {
            return new MonitoredResourceContent(id, sendingLogs, reasonForLogsStatus);
        }

        /// <summary> Initializes a new instance of <see cref="Models.DeploymentInfoResponse"/>. </summary>
        /// <param name="status"> The Elastic deployment status. </param>
        /// <param name="version"> Version of the elasticsearch in Elastic cloud deployment. </param>
        /// <param name="memoryCapacity"> RAM capacity of the elasticsearch in Elastic cloud deployment. </param>
        /// <param name="diskCapacity"> Disk capacity of the elasticsearch in Elastic cloud deployment. </param>
        /// <returns> A new <see cref="Models.DeploymentInfoResponse"/> instance for mocking. </returns>
        public static DeploymentInfoResponse DeploymentInfoResponse(ElasticDeploymentStatus? status = null, string version = null, string memoryCapacity = null, string diskCapacity = null)
        {
            return new DeploymentInfoResponse(status, version, memoryCapacity, diskCapacity);
        }

        /// <summary> Initializes a new instance of <see cref="Elastic.MonitoringTagRuleData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="properties"> Properties of the monitoring tag rules. </param>
        /// <returns> A new <see cref="Elastic.MonitoringTagRuleData"/> instance for mocking. </returns>
        public static MonitoringTagRuleData MonitoringTagRuleData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, MonitoringTagRulesProperties properties = null)
        {
            return new MonitoringTagRuleData(id, name, resourceType, systemData, properties);
        }

        /// <summary> Initializes a new instance of <see cref="Models.VmResources"/>. </summary>
        /// <param name="vmResourceId"> The ARM id of the VM resource. </param>
        /// <returns> A new <see cref="Models.VmResources"/> instance for mocking. </returns>
        public static VmResources VmResources(string vmResourceId = null)
        {
            return new VmResources(vmResourceId);
        }

        /// <summary> Initializes a new instance of <see cref="Models.VmIngestionDetailsResponse"/>. </summary>
        /// <param name="cloudId"> The cloudId of given Elastic monitor resource. </param>
        /// <param name="ingestionKey"> Ingestion details to install agent on given VM. </param>
        /// <returns> A new <see cref="Models.VmIngestionDetailsResponse"/> instance for mocking. </returns>
        public static VmIngestionDetailsResponse VmIngestionDetailsResponse(string cloudId = null, string ingestionKey = null)
        {
            return new VmIngestionDetailsResponse(cloudId, ingestionKey);
        }
    }
}
