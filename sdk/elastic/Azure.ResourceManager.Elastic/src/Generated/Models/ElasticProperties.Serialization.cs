// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.Elastic.Models
{
    public partial class ElasticProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(ElasticCloudUser))
            {
                writer.WritePropertyName("elasticCloudUser"u8);
                writer.WriteObjectValue(ElasticCloudUser);
            }
            if (Optional.IsDefined(ElasticCloudDeployment))
            {
                writer.WritePropertyName("elasticCloudDeployment"u8);
                writer.WriteObjectValue(ElasticCloudDeployment);
            }
            writer.WriteEndObject();
        }

        internal static ElasticProperties DeserializeElasticProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<ElasticCloudUser> elasticCloudUser = default;
            Optional<ElasticCloudDeployment> elasticCloudDeployment = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("elasticCloudUser"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    elasticCloudUser = ElasticCloudUser.DeserializeElasticCloudUser(property.Value);
                    continue;
                }
                if (property.NameEquals("elasticCloudDeployment"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    elasticCloudDeployment = ElasticCloudDeployment.DeserializeElasticCloudDeployment(property.Value);
                    continue;
                }
            }
            return new ElasticProperties(elasticCloudUser.Value, elasticCloudDeployment.Value);
        }
    }
}
