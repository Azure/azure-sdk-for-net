// <auto-generated/>

using Azure.ResourceManager.Models;
using Azure.ResourceManager.Nginx;
using Azure.ResourceManager.Nginx.Models;
using Azure.ResourceManager.Resources.Models;
using System;
using System.ClientModel.Primitives;
using System.Collections.Generic;

namespace Azure.ResourceManager.Nginx;

[ModelReaderWriterBuildable(typeof(NginxCertificateData))]
[ModelReaderWriterBuildable(typeof(NginxCertificateResource))]
[ModelReaderWriterBuildable(typeof(NginxConfigurationData))]
[ModelReaderWriterBuildable(typeof(NginxConfigurationResource))]
[ModelReaderWriterBuildable(typeof(NginxDeploymentApiKeyData))]
[ModelReaderWriterBuildable(typeof(NginxDeploymentApiKeyResource))]
[ModelReaderWriterBuildable(typeof(NginxDeploymentData))]
[ModelReaderWriterBuildable(typeof(NginxDeploymentResource))]
[ModelReaderWriterBuildable(typeof(AutoUpgradeProfile))]
[ModelReaderWriterBuildable(typeof(NginxAnalysisConfig))]
[ModelReaderWriterBuildable(typeof(NginxAnalysisContent))]
[ModelReaderWriterBuildable(typeof(NginxAnalysisDiagnostic))]
[ModelReaderWriterBuildable(typeof(NginxAnalysisResult))]
[ModelReaderWriterBuildable(typeof(NginxAnalysisResultDetails))]
[ModelReaderWriterBuildable(typeof(NginxCertificateError))]
[ModelReaderWriterBuildable(typeof(NginxCertificateListResponse))]
[ModelReaderWriterBuildable(typeof(NginxCertificateProperties))]
[ModelReaderWriterBuildable(typeof(NginxConfigurationCreateOrUpdateContent))]
[ModelReaderWriterBuildable(typeof(NginxConfigurationCreateOrUpdateProperties))]
[ModelReaderWriterBuildable(typeof(NginxConfigurationFile))]
[ModelReaderWriterBuildable(typeof(NginxConfigurationListResponse))]
[ModelReaderWriterBuildable(typeof(NginxConfigurationPackage))]
[ModelReaderWriterBuildable(typeof(NginxConfigurationProperties))]
[ModelReaderWriterBuildable(typeof(NginxConfigurationProtectedFileContent))]
[ModelReaderWriterBuildable(typeof(NginxConfigurationProtectedFileResult))]
[ModelReaderWriterBuildable(typeof(NginxDeploymentApiKeyCreateOrUpdateContent))]
[ModelReaderWriterBuildable(typeof(NginxDeploymentApiKeyListResponse))]
[ModelReaderWriterBuildable(typeof(NginxDeploymentApiKeyProperties))]
[ModelReaderWriterBuildable(typeof(NginxDeploymentApiKeyRequestProperties))]
[ModelReaderWriterBuildable(typeof(NginxDeploymentListResponse))]
[ModelReaderWriterBuildable(typeof(NginxDeploymentPatch))]
[ModelReaderWriterBuildable(typeof(NginxDeploymentProperties))]
[ModelReaderWriterBuildable(typeof(NginxDeploymentPropertiesNginxAppProtect))]
[ModelReaderWriterBuildable(typeof(NginxDeploymentScalingProperties))]
[ModelReaderWriterBuildable(typeof(NginxDeploymentUpdateProperties))]
[ModelReaderWriterBuildable(typeof(NginxDeploymentUpdatePropertiesNginxAppProtect))]
[ModelReaderWriterBuildable(typeof(NginxDeploymentUserProfile))]
[ModelReaderWriterBuildable(typeof(NginxDiagnosticItem))]
[ModelReaderWriterBuildable(typeof(NginxFrontendIPConfiguration))]
[ModelReaderWriterBuildable(typeof(NginxLogging))]
[ModelReaderWriterBuildable(typeof(NginxNetworkInterfaceConfiguration))]
[ModelReaderWriterBuildable(typeof(NginxNetworkProfile))]
[ModelReaderWriterBuildable(typeof(NginxPrivateIPAddress))]
[ModelReaderWriterBuildable(typeof(NginxResourceSku))]
[ModelReaderWriterBuildable(typeof(NginxScaleProfile))]
[ModelReaderWriterBuildable(typeof(NginxScaleProfileCapacity))]
[ModelReaderWriterBuildable(typeof(NginxStorageAccount))]
[ModelReaderWriterBuildable(typeof(WebApplicationFirewallComponentVersions))]
[ModelReaderWriterBuildable(typeof(WebApplicationFirewallPackage))]
[ModelReaderWriterBuildable(typeof(WebApplicationFirewallSettings))]
[ModelReaderWriterBuildable(typeof(WebApplicationFirewallStatus))]
public partial class AzureResourceManagerNginxContext
{
    // TODO: This is workaround to get AzureResourceManagerContext, we will remove this when we fix the dependency context generation issue in System.ClientModel.
    private static AzureResourceManagerContext s_managerContext;
    private AzureResourceManagerContext ArmContext => s_managerContext ??= AzureResourceManagerContext.Default;

    partial void AddAdditionalFactories(Dictionary<Type, Func<ModelReaderWriterTypeBuilder>> factories)
    {
        factories.Add(typeof(ManagedServiceIdentity), () => ArmContext.GetTypeBuilder(typeof(ManagedServiceIdentity)));
        factories.Add(typeof(SystemData), () => ArmContext.GetTypeBuilder(typeof(SystemData)));
        factories.Add(typeof(WritableSubResource), () => ArmContext.GetTypeBuilder(typeof(WritableSubResource)));
    }
}
