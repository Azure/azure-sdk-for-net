// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.Nginx.Models
{
    /// <summary> The NginxDeploymentProperties. </summary>
    public partial class NginxDeploymentProperties
    {
        /// <summary> Initializes a new instance of <see cref="NginxDeploymentProperties"/>. </summary>
        public NginxDeploymentProperties()
        {
        }

        /// <summary> Initializes a new instance of <see cref="NginxDeploymentProperties"/>. </summary>
        /// <param name="provisioningState"></param>
        /// <param name="nginxVersion"></param>
        /// <param name="managedResourceGroup"> The managed resource group to deploy VNet injection related network resources. </param>
        /// <param name="networkProfile"></param>
        /// <param name="ipAddress"> The IP address of the deployment. </param>
        /// <param name="enableDiagnosticsSupport"></param>
        /// <param name="logging"></param>
        internal NginxDeploymentProperties(ProvisioningState? provisioningState, string nginxVersion, string managedResourceGroup, NginxNetworkProfile networkProfile, string ipAddress, bool? enableDiagnosticsSupport, NginxLogging logging)
        {
            ProvisioningState = provisioningState;
            NginxVersion = nginxVersion;
            ManagedResourceGroup = managedResourceGroup;
            NetworkProfile = networkProfile;
            IPAddress = ipAddress;
            EnableDiagnosticsSupport = enableDiagnosticsSupport;
            Logging = logging;
        }

        /// <summary> Gets the provisioning state. </summary>
        public ProvisioningState? ProvisioningState { get; }
        /// <summary> Gets the nginx version. </summary>
        public string NginxVersion { get; }
        /// <summary> The managed resource group to deploy VNet injection related network resources. </summary>
        public string ManagedResourceGroup { get; set; }
        /// <summary> Gets or sets the network profile. </summary>
        public NginxNetworkProfile NetworkProfile { get; set; }
        /// <summary> The IP address of the deployment. </summary>
        public string IPAddress { get; }
        /// <summary> Gets or sets the enable diagnostics support. </summary>
        public bool? EnableDiagnosticsSupport { get; set; }
        /// <summary> Gets or sets the logging. </summary>
        internal NginxLogging Logging { get; set; }
        /// <summary> Gets or sets the logging storage account. </summary>
        public NginxStorageAccount LoggingStorageAccount
        {
            get => Logging is null ? default : Logging.StorageAccount;
            set
            {
                if (Logging is null)
                    Logging = new NginxLogging();
                Logging.StorageAccount = value;
            }
        }
    }
}
