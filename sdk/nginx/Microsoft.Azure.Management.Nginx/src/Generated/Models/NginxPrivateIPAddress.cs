// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Nginx.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class NginxPrivateIPAddress
    {
        /// <summary>
        /// Initializes a new instance of the NginxPrivateIPAddress class.
        /// </summary>
        public NginxPrivateIPAddress()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NginxPrivateIPAddress class.
        /// </summary>
        /// <param name="privateIPAllocationMethod">Possible values include:
        /// 'Static', 'Dynamic'</param>
        public NginxPrivateIPAddress(string privateIPAddress = default(string), string privateIPAllocationMethod = default(string), string subnetId = default(string))
        {
            PrivateIPAddress = privateIPAddress;
            PrivateIPAllocationMethod = privateIPAllocationMethod;
            SubnetId = subnetId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "privateIPAddress")]
        public string PrivateIPAddress { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Static', 'Dynamic'
        /// </summary>
        [JsonProperty(PropertyName = "privateIPAllocationMethod")]
        public string PrivateIPAllocationMethod { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "subnetId")]
        public string SubnetId { get; set; }

    }
}
