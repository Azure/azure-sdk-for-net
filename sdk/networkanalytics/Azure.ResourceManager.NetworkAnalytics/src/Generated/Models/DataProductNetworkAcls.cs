// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.ResourceManager.NetworkAnalytics.Models
{
    /// <summary> Data Product Network rule set. </summary>
    public partial class DataProductNetworkAcls
    {
        /// <summary> Initializes a new instance of <see cref="DataProductNetworkAcls"/>. </summary>
        /// <param name="virtualNetworkRule"> Virtual Network Rule. </param>
        /// <param name="ipRules"> IP rule with specific IP or IP range in CIDR format. </param>
        /// <param name="allowedQueryIPRangeList"> The list of query ips in the format of CIDR allowed to connect to query/visualization endpoint. </param>
        /// <param name="defaultAction"> Default Action. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="virtualNetworkRule"/>, <paramref name="ipRules"/> or <paramref name="allowedQueryIPRangeList"/> is null. </exception>
        public DataProductNetworkAcls(IEnumerable<NetworkAnalyticsVirtualNetworkRule> virtualNetworkRule, IEnumerable<NetworkAnalyticsIPRules> ipRules, IEnumerable<string> allowedQueryIPRangeList, NetworkAclDefaultAction defaultAction)
        {
            Argument.AssertNotNull(virtualNetworkRule, nameof(virtualNetworkRule));
            Argument.AssertNotNull(ipRules, nameof(ipRules));
            Argument.AssertNotNull(allowedQueryIPRangeList, nameof(allowedQueryIPRangeList));

            VirtualNetworkRule = virtualNetworkRule.ToList();
            IPRules = ipRules.ToList();
            AllowedQueryIPRangeList = allowedQueryIPRangeList.ToList();
            DefaultAction = defaultAction;
        }

        /// <summary> Initializes a new instance of <see cref="DataProductNetworkAcls"/>. </summary>
        /// <param name="virtualNetworkRule"> Virtual Network Rule. </param>
        /// <param name="ipRules"> IP rule with specific IP or IP range in CIDR format. </param>
        /// <param name="allowedQueryIPRangeList"> The list of query ips in the format of CIDR allowed to connect to query/visualization endpoint. </param>
        /// <param name="defaultAction"> Default Action. </param>
        internal DataProductNetworkAcls(IList<NetworkAnalyticsVirtualNetworkRule> virtualNetworkRule, IList<NetworkAnalyticsIPRules> ipRules, IList<string> allowedQueryIPRangeList, NetworkAclDefaultAction defaultAction)
        {
            VirtualNetworkRule = virtualNetworkRule;
            IPRules = ipRules;
            AllowedQueryIPRangeList = allowedQueryIPRangeList;
            DefaultAction = defaultAction;
        }

        /// <summary> Virtual Network Rule. </summary>
        public IList<NetworkAnalyticsVirtualNetworkRule> VirtualNetworkRule { get; }
        /// <summary> IP rule with specific IP or IP range in CIDR format. </summary>
        public IList<NetworkAnalyticsIPRules> IPRules { get; }
        /// <summary> The list of query ips in the format of CIDR allowed to connect to query/visualization endpoint. </summary>
        public IList<string> AllowedQueryIPRangeList { get; }
        /// <summary> Default Action. </summary>
        public NetworkAclDefaultAction DefaultAction { get; set; }
    }
}
