// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.ResourceManager.NetworkAnalytics.Models
{
    /// <summary> list role assignments. </summary>
    public partial class RoleAssignmentListResult
    {
        /// <summary> Initializes a new instance of <see cref="RoleAssignmentListResult"/>. </summary>
        /// <param name="count"> Count of role assignments. </param>
        /// <param name="roleAssignmentResponse"> list of role assignments. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="roleAssignmentResponse"/> is null. </exception>
        internal RoleAssignmentListResult(int count, IEnumerable<RoleAssignmentDetail> roleAssignmentResponse)
        {
            Argument.AssertNotNull(roleAssignmentResponse, nameof(roleAssignmentResponse));

            Count = count;
            RoleAssignmentResponse = roleAssignmentResponse.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="RoleAssignmentListResult"/>. </summary>
        /// <param name="count"> Count of role assignments. </param>
        /// <param name="roleAssignmentResponse"> list of role assignments. </param>
        internal RoleAssignmentListResult(int count, IReadOnlyList<RoleAssignmentDetail> roleAssignmentResponse)
        {
            Count = count;
            RoleAssignmentResponse = roleAssignmentResponse;
        }

        /// <summary> Count of role assignments. </summary>
        public int Count { get; }
        /// <summary> list of role assignments. </summary>
        public IReadOnlyList<RoleAssignmentDetail> RoleAssignmentResponse { get; }
    }
}
