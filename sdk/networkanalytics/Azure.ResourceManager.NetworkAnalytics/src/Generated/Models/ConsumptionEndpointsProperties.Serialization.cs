// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.NetworkAnalytics.Models
{
    public partial class ConsumptionEndpointsProperties
    {
        internal static ConsumptionEndpointsProperties DeserializeConsumptionEndpointsProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<Uri> ingestionUrl = default;
            Optional<ResourceIdentifier> ingestionResourceId = default;
            Optional<Uri> fileAccessUrl = default;
            Optional<ResourceIdentifier> fileAccessResourceId = default;
            Optional<Uri> queryUrl = default;
            Optional<ResourceIdentifier> queryResourceId = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("ingestionUrl"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    ingestionUrl = new Uri(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("ingestionResourceId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    ingestionResourceId = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("fileAccessUrl"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    fileAccessUrl = new Uri(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("fileAccessResourceId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    fileAccessResourceId = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("queryUrl"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    queryUrl = new Uri(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("queryResourceId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    queryResourceId = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
            }
            return new ConsumptionEndpointsProperties(ingestionUrl.Value, ingestionResourceId.Value, fileAccessUrl.Value, fileAccessResourceId.Value, queryUrl.Value, queryResourceId.Value);
        }
    }
}
