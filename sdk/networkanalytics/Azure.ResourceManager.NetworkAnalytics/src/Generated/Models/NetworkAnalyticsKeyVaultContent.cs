// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.NetworkAnalytics.Models
{
    /// <summary> Details for KeyVault. </summary>
    public partial class NetworkAnalyticsKeyVaultContent
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="NetworkAnalyticsKeyVaultContent"/>. </summary>
        /// <param name="keyVaultUri"> key vault url. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="keyVaultUri"/> is null. </exception>
        public NetworkAnalyticsKeyVaultContent(Uri keyVaultUri)
        {
            Argument.AssertNotNull(keyVaultUri, nameof(keyVaultUri));

            KeyVaultUri = keyVaultUri;
        }

        /// <summary> Initializes a new instance of <see cref="NetworkAnalyticsKeyVaultContent"/>. </summary>
        /// <param name="keyVaultUri"> key vault url. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal NetworkAnalyticsKeyVaultContent(Uri keyVaultUri, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            KeyVaultUri = keyVaultUri;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="NetworkAnalyticsKeyVaultContent"/> for deserialization. </summary>
        internal NetworkAnalyticsKeyVaultContent()
        {
        }

        /// <summary> key vault url. </summary>
        public Uri KeyVaultUri { get; }
    }
}
