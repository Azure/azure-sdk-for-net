// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.SameBoundary.RoundTrip
{
    /// <summary> The RoundTripInheritanceModel. </summary>
    public partial class RoundTripInheritanceModel : RoundTripBaseModel
    {
        /// <summary> Initializes a new instance of <see cref="RoundTripInheritanceModel"/>. </summary>
        /// <param name="baseProperty2"></param>
        public RoundTripInheritanceModel(int baseProperty2) : base(baseProperty2)
        {
        }

        /// <summary> Initializes a new instance of <see cref="RoundTripInheritanceModel"/>. </summary>
        /// <param name="baseProperty1"></param>
        /// <param name="baseProperty2"></param>
        /// <param name="baseProperty3"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="extendedProperty"></param>
        internal RoundTripInheritanceModel(string baseProperty1, int baseProperty2, IDictionary<string, string> baseProperty3, IDictionary<string, BinaryData> serializedAdditionalRawData, string extendedProperty) : base(baseProperty1, baseProperty2, baseProperty3, serializedAdditionalRawData)
        {
            ExtendedProperty = extendedProperty;
        }

        /// <summary> Initializes a new instance of <see cref="RoundTripInheritanceModel"/> for deserialization. </summary>
        internal RoundTripInheritanceModel()
        {
        }

        /// <summary> Gets or sets the extended property. </summary>
        public string ExtendedProperty { get; set; }
    }
}
