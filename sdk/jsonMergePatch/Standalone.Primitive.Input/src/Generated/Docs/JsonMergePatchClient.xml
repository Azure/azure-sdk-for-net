<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="PatchAsync(PatchModel,CancellationToken)">
      <example>
This sample shows how to call PatchAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
JsonMergePatchClient client = new JsonMergePatchClient(endpoint);

PatchModel body = new PatchModel("<requiredString>", 1234);
Response response = await client.PatchAsync(body);
]]></code>
This sample shows how to call PatchAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
JsonMergePatchClient client = new JsonMergePatchClient(endpoint);

PatchModel body = new PatchModel("<requiredString>", 1234)
{
    OptionalString = "<optionalString>",
    OptionalInt = 1234,
};
Response response = await client.PatchAsync(body);
]]></code></example>
    </member>
    <member name="Patch(PatchModel,CancellationToken)">
      <example>
This sample shows how to call Patch.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
JsonMergePatchClient client = new JsonMergePatchClient(endpoint);

PatchModel body = new PatchModel("<requiredString>", 1234);
Response response = client.Patch(body);
]]></code>
This sample shows how to call Patch with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
JsonMergePatchClient client = new JsonMergePatchClient(endpoint);

PatchModel body = new PatchModel("<requiredString>", 1234)
{
    OptionalString = "<optionalString>",
    OptionalInt = 1234,
};
Response response = client.Patch(body);
]]></code></example>
    </member>
    <member name="PatchAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PatchAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
JsonMergePatchClient client = new JsonMergePatchClient(endpoint);

using RequestContent content = RequestContent.Create(new
{
    requiredString = "<requiredString>",
    requiredInt = 1234,
});
Response response = await client.PatchAsync(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call PatchAsync with all request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
JsonMergePatchClient client = new JsonMergePatchClient(endpoint);

using RequestContent content = RequestContent.Create(new
{
    requiredString = "<requiredString>",
    optionalString = "<optionalString>",
    requiredInt = 1234,
    optionalInt = 1234,
});
Response response = await client.PatchAsync(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Patch(RequestContent,RequestContext)">
      <example>
This sample shows how to call Patch.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
JsonMergePatchClient client = new JsonMergePatchClient(endpoint);

using RequestContent content = RequestContent.Create(new
{
    requiredString = "<requiredString>",
    requiredInt = 1234,
});
Response response = client.Patch(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call Patch with all request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
JsonMergePatchClient client = new JsonMergePatchClient(endpoint);

using RequestContent content = RequestContent.Create(new
{
    requiredString = "<requiredString>",
    optionalString = "<optionalString>",
    requiredInt = 1234,
    optionalInt = 1234,
});
Response response = client.Patch(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
  </members>
</doc>