{
 "$id": "1",
 "Name": "Face",
 "ApiVersions": [
  "v1.1-preview.1"
 ],
 "Enums": [
  {
   "$id": "2",
   "kind": "enum",
   "name": "FaceDetectionModel",
   "crossLanguageDefinitionId": "Face.DetectionModel",
   "valueType": {
    "$id": "3",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "4",
     "kind": "enumvalue",
     "name": "detection_01",
     "value": "detection_01",
     "valueType": {
      "$id": "5",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "2"
     },
     "description": "The default detection model. Recommend for near frontal face detection. For scenarios with exceptionally large angle (head-pose) faces, occluded faces or wrong image orientation, the faces in such cases may not be detected.",
     "decorators": []
    },
    {
     "$id": "6",
     "kind": "enumvalue",
     "name": "detection_02",
     "value": "detection_02",
     "valueType": {
      "$id": "7",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "2"
     },
     "description": "Detection model released in 2019 May with improved accuracy especially on small, side and blurry faces.",
     "decorators": []
    },
    {
     "$id": "8",
     "kind": "enumvalue",
     "name": "detection_03",
     "value": "detection_03",
     "valueType": {
      "$id": "9",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "2"
     },
     "description": "Detection model released in 2021 February with improved accuracy especially on small faces.",
     "decorators": []
    }
   ],
   "access": "public",
   "description": "The detection model for the face.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input",
   "decorators": []
  },
  {
   "$id": "10",
   "kind": "enum",
   "name": "FaceRecognitionModel",
   "crossLanguageDefinitionId": "Face.RecognitionModel",
   "valueType": {
    "$id": "11",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "12",
     "kind": "enumvalue",
     "name": "recognition_01",
     "value": "recognition_01",
     "valueType": {
      "$id": "13",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "10"
     },
     "description": "The default recognition model for \"Detect\". All those faceIds created before 2019 March are bonded with this recognition model.",
     "decorators": []
    },
    {
     "$id": "14",
     "kind": "enumvalue",
     "name": "recognition_02",
     "value": "recognition_02",
     "valueType": {
      "$id": "15",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "10"
     },
     "description": "Recognition model released in 2019 March.",
     "decorators": []
    },
    {
     "$id": "16",
     "kind": "enumvalue",
     "name": "recognition_03",
     "value": "recognition_03",
     "valueType": {
      "$id": "17",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "10"
     },
     "description": "Recognition model released in 2020 May.",
     "decorators": []
    },
    {
     "$id": "18",
     "kind": "enumvalue",
     "name": "recognition_04",
     "value": "recognition_04",
     "valueType": {
      "$id": "19",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "10"
     },
     "description": "Recognition model released in 2021 February. It's recommended to use this recognition model for better recognition accuracy.",
     "decorators": []
    }
   ],
   "access": "public",
   "description": "The recognition model for the face.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json",
   "decorators": []
  },
  {
   "$id": "20",
   "kind": "enum",
   "name": "FaceAttributeType",
   "crossLanguageDefinitionId": "Face.FaceAttributeType",
   "valueType": {
    "$id": "21",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "22",
     "kind": "enumvalue",
     "name": "headPose",
     "value": "headPose",
     "valueType": {
      "$id": "23",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "20"
     },
     "description": "3-D roll/yaw/pitch angles for face direction.",
     "decorators": []
    },
    {
     "$id": "24",
     "kind": "enumvalue",
     "name": "glasses",
     "value": "glasses",
     "valueType": {
      "$id": "25",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "20"
     },
     "description": "Glasses type. Values include 'NoGlasses', 'ReadingGlasses', 'Sunglasses', 'SwimmingGoggles'.",
     "decorators": []
    },
    {
     "$id": "26",
     "kind": "enumvalue",
     "name": "occlusion",
     "value": "occlusion",
     "valueType": {
      "$id": "27",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "20"
     },
     "description": "Whether each facial area is occluded, including forehead, eyes and mouth.",
     "decorators": []
    },
    {
     "$id": "28",
     "kind": "enumvalue",
     "name": "accessories",
     "value": "accessories",
     "valueType": {
      "$id": "29",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "20"
     },
     "description": "Accessories around face, including 'headwear', 'glasses' and 'mask'. Empty array means no accessories detected. Note this is after a face is detected. Large mask could result in no face to be detected.",
     "decorators": []
    },
    {
     "$id": "30",
     "kind": "enumvalue",
     "name": "blur",
     "value": "blur",
     "valueType": {
      "$id": "31",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "20"
     },
     "description": "Face is blurry or not. Level returns 'Low', 'Medium' or 'High'. Value returns a number between [0,1], the larger the blurrier.",
     "decorators": []
    },
    {
     "$id": "32",
     "kind": "enumvalue",
     "name": "exposure",
     "value": "exposure",
     "valueType": {
      "$id": "33",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "20"
     },
     "description": "Face exposure level. Level returns 'GoodExposure', 'OverExposure' or 'UnderExposure'.",
     "decorators": []
    },
    {
     "$id": "34",
     "kind": "enumvalue",
     "name": "noise",
     "value": "noise",
     "valueType": {
      "$id": "35",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "20"
     },
     "description": "Noise level of face pixels. Level returns 'Low', 'Medium' and 'High'. Value returns a number between [0,1], the larger the noisier",
     "decorators": []
    },
    {
     "$id": "36",
     "kind": "enumvalue",
     "name": "mask",
     "value": "mask",
     "valueType": {
      "$id": "37",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "20"
     },
     "description": "Whether each face is wearing a mask. Mask type returns 'noMask', 'faceMask', 'otherMaskOrOcclusion', or 'uncertain'. Value returns a boolean 'noseAndMouthCovered' indicating whether nose and mouth are covered.",
     "decorators": []
    },
    {
     "$id": "38",
     "kind": "enumvalue",
     "name": "qualityForRecognition",
     "value": "qualityForRecognition",
     "valueType": {
      "$id": "39",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "20"
     },
     "description": "The overall image quality regarding whether the image being used in the detection is of sufficient quality to attempt face recognition on. The value is an informal rating of low, medium, or high. Only 'high' quality images are recommended for person enrollment and quality at or above 'medium' is recommended for identification scenarios. The attribute is only available when using recognition models recognition_03 or recognition_04.",
     "decorators": []
    },
    {
     "$id": "40",
     "kind": "enumvalue",
     "name": "age",
     "value": "age",
     "valueType": {
      "$id": "41",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "20"
     },
     "description": "Age in years.",
     "decorators": []
    },
    {
     "$id": "42",
     "kind": "enumvalue",
     "name": "smile",
     "value": "smile",
     "valueType": {
      "$id": "43",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "20"
     },
     "description": "Smile intensity, a number between [0,1].",
     "decorators": []
    },
    {
     "$id": "44",
     "kind": "enumvalue",
     "name": "facialHair",
     "value": "facialHair",
     "valueType": {
      "$id": "45",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "20"
     },
     "description": "Properties describing facial hair attributes.",
     "decorators": []
    },
    {
     "$id": "46",
     "kind": "enumvalue",
     "name": "hair",
     "value": "hair",
     "valueType": {
      "$id": "47",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "20"
     },
     "description": "Properties describing hair attributes.",
     "decorators": []
    }
   ],
   "access": "public",
   "description": "Available options for detect face with attribute.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input",
   "decorators": []
  },
  {
   "$id": "48",
   "kind": "enum",
   "name": "GlassesType",
   "crossLanguageDefinitionId": "Face.GlassesType",
   "valueType": {
    "$id": "49",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "50",
     "kind": "enumvalue",
     "name": "noGlasses",
     "value": "noGlasses",
     "valueType": {
      "$id": "51",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "48"
     },
     "description": "No glasses on the face.",
     "decorators": []
    },
    {
     "$id": "52",
     "kind": "enumvalue",
     "name": "readingGlasses",
     "value": "readingGlasses",
     "valueType": {
      "$id": "53",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "48"
     },
     "description": "Normal glasses on the face.",
     "decorators": []
    },
    {
     "$id": "54",
     "kind": "enumvalue",
     "name": "sunglasses",
     "value": "sunglasses",
     "valueType": {
      "$id": "55",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "48"
     },
     "description": "Sunglasses on the face.",
     "decorators": []
    },
    {
     "$id": "56",
     "kind": "enumvalue",
     "name": "swimmingGoggles",
     "value": "swimmingGoggles",
     "valueType": {
      "$id": "57",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "48"
     },
     "description": "Swimming goggles on the face.",
     "decorators": []
    }
   ],
   "access": "public",
   "description": "Glasses type of the face.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Output,Json",
   "decorators": []
  },
  {
   "$id": "58",
   "kind": "enum",
   "name": "HairColorType",
   "crossLanguageDefinitionId": "Face.HairColorType",
   "valueType": {
    "$id": "59",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "60",
     "kind": "enumvalue",
     "name": "unknownHairColor",
     "value": "unknown",
     "valueType": {
      "$id": "61",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "58"
     },
     "description": "Unknown.",
     "decorators": []
    },
    {
     "$id": "62",
     "kind": "enumvalue",
     "name": "white",
     "value": "white",
     "valueType": {
      "$id": "63",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "58"
     },
     "description": "White.",
     "decorators": []
    },
    {
     "$id": "64",
     "kind": "enumvalue",
     "name": "gray",
     "value": "gray",
     "valueType": {
      "$id": "65",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "58"
     },
     "description": "Gray.",
     "decorators": []
    },
    {
     "$id": "66",
     "kind": "enumvalue",
     "name": "blond",
     "value": "blond",
     "valueType": {
      "$id": "67",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "58"
     },
     "description": "Blond.",
     "decorators": []
    },
    {
     "$id": "68",
     "kind": "enumvalue",
     "name": "brown",
     "value": "brown",
     "valueType": {
      "$id": "69",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "58"
     },
     "description": "Brown.",
     "decorators": []
    },
    {
     "$id": "70",
     "kind": "enumvalue",
     "name": "red",
     "value": "red",
     "valueType": {
      "$id": "71",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "58"
     },
     "description": "Red.",
     "decorators": []
    },
    {
     "$id": "72",
     "kind": "enumvalue",
     "name": "black",
     "value": "black",
     "valueType": {
      "$id": "73",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "58"
     },
     "description": "Black.",
     "decorators": []
    },
    {
     "$id": "74",
     "kind": "enumvalue",
     "name": "other",
     "value": "other",
     "valueType": {
      "$id": "75",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "58"
     },
     "description": "Other.",
     "decorators": []
    }
   ],
   "access": "public",
   "description": "Name of the hair color.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Output,Json",
   "decorators": []
  },
  {
   "$id": "76",
   "kind": "enum",
   "name": "AccessoryType",
   "crossLanguageDefinitionId": "Face.AccessoryType",
   "valueType": {
    "$id": "77",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "78",
     "kind": "enumvalue",
     "name": "headwear",
     "value": "headwear",
     "valueType": {
      "$id": "79",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "76"
     },
     "description": "Head wear.",
     "decorators": []
    },
    {
     "$id": "80",
     "kind": "enumvalue",
     "name": "glasses",
     "value": "glasses",
     "valueType": {
      "$id": "81",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "76"
     },
     "description": "Glasses.",
     "decorators": []
    },
    {
     "$id": "82",
     "kind": "enumvalue",
     "name": "mask",
     "value": "mask",
     "valueType": {
      "$id": "83",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "76"
     },
     "description": "Mask.",
     "decorators": []
    }
   ],
   "access": "public",
   "description": "Type of the accessory.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Output,Json",
   "decorators": []
  },
  {
   "$id": "84",
   "kind": "enum",
   "name": "BlurLevel",
   "crossLanguageDefinitionId": "Face.BlurLevel",
   "valueType": {
    "$id": "85",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "86",
     "kind": "enumvalue",
     "name": "low",
     "value": "low",
     "valueType": {
      "$id": "87",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "84"
     },
     "description": "Low blur level.",
     "decorators": []
    },
    {
     "$id": "88",
     "kind": "enumvalue",
     "name": "medium",
     "value": "medium",
     "valueType": {
      "$id": "89",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "84"
     },
     "description": "Medium blur level.",
     "decorators": []
    },
    {
     "$id": "90",
     "kind": "enumvalue",
     "name": "high",
     "value": "high",
     "valueType": {
      "$id": "91",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "84"
     },
     "description": "High blur level.",
     "decorators": []
    }
   ],
   "access": "public",
   "description": "Indicates level of blurriness.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Output,Json",
   "decorators": []
  },
  {
   "$id": "92",
   "kind": "enum",
   "name": "ExposureLevel",
   "crossLanguageDefinitionId": "Face.ExposureLevel",
   "valueType": {
    "$id": "93",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "94",
     "kind": "enumvalue",
     "name": "underExposure",
     "value": "underExposure",
     "valueType": {
      "$id": "95",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "92"
     },
     "description": "Low exposure level.",
     "decorators": []
    },
    {
     "$id": "96",
     "kind": "enumvalue",
     "name": "goodExposure",
     "value": "goodExposure",
     "valueType": {
      "$id": "97",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "92"
     },
     "description": "Good exposure level.",
     "decorators": []
    },
    {
     "$id": "98",
     "kind": "enumvalue",
     "name": "overExposure",
     "value": "overExposure",
     "valueType": {
      "$id": "99",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "92"
     },
     "description": "High exposure level.",
     "decorators": []
    }
   ],
   "access": "public",
   "description": "Indicates level of exposure.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Output,Json",
   "decorators": []
  },
  {
   "$id": "100",
   "kind": "enum",
   "name": "NoiseLevel",
   "crossLanguageDefinitionId": "Face.NoiseLevel",
   "valueType": {
    "$id": "101",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "102",
     "kind": "enumvalue",
     "name": "low",
     "value": "low",
     "valueType": {
      "$id": "103",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "100"
     },
     "description": "Low noise level.",
     "decorators": []
    },
    {
     "$id": "104",
     "kind": "enumvalue",
     "name": "medium",
     "value": "medium",
     "valueType": {
      "$id": "105",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "100"
     },
     "description": "Medium noise level.",
     "decorators": []
    },
    {
     "$id": "106",
     "kind": "enumvalue",
     "name": "high",
     "value": "high",
     "valueType": {
      "$id": "107",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "100"
     },
     "description": "High noise level.",
     "decorators": []
    }
   ],
   "access": "public",
   "description": "Indicates level of noise.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Output,Json",
   "decorators": []
  },
  {
   "$id": "108",
   "kind": "enum",
   "name": "MaskType",
   "crossLanguageDefinitionId": "Face.MaskType",
   "valueType": {
    "$id": "109",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "110",
     "kind": "enumvalue",
     "name": "faceMask",
     "value": "faceMask",
     "valueType": {
      "$id": "111",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "108"
     },
     "description": "Face mask.",
     "decorators": []
    },
    {
     "$id": "112",
     "kind": "enumvalue",
     "name": "noMask",
     "value": "noMask",
     "valueType": {
      "$id": "113",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "108"
     },
     "description": "No mask.",
     "decorators": []
    },
    {
     "$id": "114",
     "kind": "enumvalue",
     "name": "otherMaskOrOcclusion",
     "value": "otherMaskOrOcclusion",
     "valueType": {
      "$id": "115",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "108"
     },
     "description": "Other types of mask or occlusion.",
     "decorators": []
    },
    {
     "$id": "116",
     "kind": "enumvalue",
     "name": "uncertain",
     "value": "uncertain",
     "valueType": {
      "$id": "117",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "108"
     },
     "description": "Uncertain.",
     "decorators": []
    }
   ],
   "access": "public",
   "description": "Type of the mask.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Output,Json",
   "decorators": []
  },
  {
   "$id": "118",
   "kind": "enum",
   "name": "QualityForRecognition",
   "crossLanguageDefinitionId": "Face.QualityForRecognition",
   "valueType": {
    "$id": "119",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "120",
     "kind": "enumvalue",
     "name": "low",
     "value": "low",
     "valueType": {
      "$id": "121",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "118"
     },
     "description": "Low quality.",
     "decorators": []
    },
    {
     "$id": "122",
     "kind": "enumvalue",
     "name": "medium",
     "value": "medium",
     "valueType": {
      "$id": "123",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "118"
     },
     "description": "Medium quality.",
     "decorators": []
    },
    {
     "$id": "124",
     "kind": "enumvalue",
     "name": "high",
     "value": "high",
     "valueType": {
      "$id": "125",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "118"
     },
     "description": "High quality.",
     "decorators": []
    }
   ],
   "access": "public",
   "description": "Indicates quality of image for recognition.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Output,Json",
   "decorators": []
  },
  {
   "$id": "126",
   "kind": "enum",
   "name": "FindSimilarMatchMode",
   "crossLanguageDefinitionId": "Face.FindSimilarMatchMode",
   "valueType": {
    "$id": "127",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "128",
     "kind": "enumvalue",
     "name": "matchPerson",
     "value": "matchPerson",
     "valueType": {
      "$id": "129",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "126"
     },
     "description": "Match person.",
     "decorators": []
    },
    {
     "$id": "130",
     "kind": "enumvalue",
     "name": "matchFace",
     "value": "matchFace",
     "valueType": {
      "$id": "131",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "126"
     },
     "description": "Match face.",
     "decorators": []
    }
   ],
   "description": "Similar face searching mode.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Json",
   "decorators": []
  },
  {
   "$id": "132",
   "kind": "enum",
   "name": "Versions",
   "crossLanguageDefinitionId": "Face.Versions",
   "valueType": {
    "$id": "133",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "134",
     "kind": "enumvalue",
     "name": "v1_1_preview_1",
     "value": "v1.1-preview.1",
     "valueType": {
      "$id": "135",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "132"
     },
     "description": "v1.1-preview.1",
     "decorators": []
    }
   ],
   "description": "API versions for Azure AI Face API.",
   "isFixed": true,
   "isFlags": false,
   "usage": "Input,ApiVersionEnum",
   "decorators": []
  },
  {
   "$id": "136",
   "kind": "enum",
   "name": "LivenessOperationMode",
   "crossLanguageDefinitionId": "Face.LivenessOperationMode",
   "valueType": {
    "$id": "137",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "138",
     "kind": "enumvalue",
     "name": "Passive",
     "value": "Passive",
     "valueType": {
      "$id": "139",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "136"
     },
     "description": "Utilizes a passive liveness technique that requires no additional actions from the user. Requires normal indoor lighting and high screen brightness for optimal performance. And thus, this mode has a narrow operational envelope and will not be suitable for scenarios that requires the end-user’s to be in bright lighting conditions. Note: this is the only supported mode for the Mobile (iOS and Android) solution.",
     "decorators": []
    },
    {
     "$id": "140",
     "kind": "enumvalue",
     "name": "PassiveActive",
     "value": "PassiveActive",
     "valueType": {
      "$id": "141",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "136"
     },
     "description": "This mode utilizes a hybrid passive or active liveness technique that necessitates user cooperation. It is optimized to require active motion only under suboptimal lighting conditions. Unlike the passive mode, this mode has no lighting restrictions, and thus offering a broader operational envelope. This mode is preferable on Web based solutions due to the lack of automatic screen brightness control available on browsers which hinders the Passive mode’s operational envelope on Web based solutions.",
     "decorators": []
    }
   ],
   "description": "The liveness operation mode to drive the client’s end-user experience.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Json",
   "decorators": []
  },
  {
   "$id": "142",
   "kind": "enum",
   "name": "FaceSessionStatus",
   "crossLanguageDefinitionId": "Face.FaceSessionStatus",
   "valueType": {
    "$id": "143",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "144",
     "kind": "enumvalue",
     "name": "NotStarted",
     "value": "NotStarted",
     "valueType": {
      "$id": "145",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "142"
     },
     "description": "Session has not started.",
     "decorators": []
    },
    {
     "$id": "146",
     "kind": "enumvalue",
     "name": "Started",
     "value": "Started",
     "valueType": {
      "$id": "147",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "142"
     },
     "description": "Session has started.",
     "decorators": []
    },
    {
     "$id": "148",
     "kind": "enumvalue",
     "name": "ResultAvailable",
     "value": "ResultAvailable",
     "valueType": {
      "$id": "149",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "142"
     },
     "description": "Session has available result.",
     "decorators": []
    }
   ],
   "description": "The current status of the session.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Output,Json",
   "decorators": []
  },
  {
   "$id": "150",
   "kind": "enum",
   "name": "FaceLivenessDecision",
   "crossLanguageDefinitionId": "Face.LivenessDecision",
   "valueType": {
    "$id": "151",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "152",
     "kind": "enumvalue",
     "name": "uncertain",
     "value": "uncertain",
     "valueType": {
      "$id": "153",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "150"
     },
     "description": "The algorithm could not classify the target face as either real or spoof.",
     "decorators": []
    },
    {
     "$id": "154",
     "kind": "enumvalue",
     "name": "realFace",
     "value": "realface",
     "valueType": {
      "$id": "155",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "150"
     },
     "description": "The algorithm has classified the target face as real.",
     "decorators": []
    },
    {
     "$id": "156",
     "kind": "enumvalue",
     "name": "spoofFace",
     "value": "spoofface",
     "valueType": {
      "$id": "157",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "150"
     },
     "description": "The algorithm has classified the target face as a spoof.",
     "decorators": []
    }
   ],
   "description": "The outcome of the liveness classification.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Output,Json",
   "decorators": []
  },
  {
   "$id": "158",
   "kind": "enum",
   "name": "FaceImageType",
   "crossLanguageDefinitionId": "Face.ImageType",
   "valueType": {
    "$id": "159",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "160",
     "kind": "enumvalue",
     "name": "Color",
     "value": "Color",
     "valueType": {
      "$id": "161",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "158"
     },
     "description": "Color image.",
     "decorators": []
    },
    {
     "$id": "162",
     "kind": "enumvalue",
     "name": "Infrared",
     "value": "Infrared",
     "valueType": {
      "$id": "163",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "158"
     },
     "description": "Infrared image.",
     "decorators": []
    },
    {
     "$id": "164",
     "kind": "enumvalue",
     "name": "Depth",
     "value": "Depth",
     "valueType": {
      "$id": "165",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "158"
     },
     "description": "Depth image.",
     "decorators": []
    }
   ],
   "description": "The type of image.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Output,Json",
   "decorators": []
  },
  {
   "$id": "166",
   "kind": "enum",
   "name": "LivenessModel",
   "crossLanguageDefinitionId": "Face.LivenessModel",
   "valueType": {
    "$id": "167",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "168",
     "kind": "enumvalue",
     "name": "v2020_02_15_preview_01",
     "value": "2020-02-15-preview.01",
     "valueType": {
      "$id": "169",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "166"
     },
     "decorators": []
    },
    {
     "$id": "170",
     "kind": "enumvalue",
     "name": "v2021_11_12_preview_03",
     "value": "2021-11-12-preview.03",
     "valueType": {
      "$id": "171",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "166"
     },
     "decorators": []
    },
    {
     "$id": "172",
     "kind": "enumvalue",
     "name": "v2022_10_15_preview_04",
     "value": "2022-10-15-preview.04",
     "valueType": {
      "$id": "173",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "166"
     },
     "decorators": []
    },
    {
     "$id": "174",
     "kind": "enumvalue",
     "name": "v2023_03_02_preview_05",
     "value": "2023-03-02-preview.05",
     "valueType": {
      "$id": "175",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "166"
     },
     "decorators": []
    }
   ],
   "description": "The model version used for liveness classification.",
   "isFixed": false,
   "isFlags": false,
   "usage": "Output,Json",
   "decorators": []
  }
 ],
 "Models": [
  {
   "$id": "176",
   "kind": "model",
   "name": "DetectFromUrlRequest",
   "crossLanguageDefinitionId": "detectFromUrl.Request.anonymous",
   "usage": "Spread,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "177",
     "kind": "property",
     "name": "uri",
     "serializedName": "url",
     "description": "URL of input image.",
     "type": {
      "$id": "178",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "detectFromUrl.Request.anonymous.url"
    }
   ]
  },
  {
   "$id": "179",
   "kind": "model",
   "name": "FaceDetectionResult",
   "crossLanguageDefinitionId": "Face.FaceDetectionResult",
   "access": "public",
   "usage": "Output,Json",
   "description": "Response for detect API.",
   "decorators": [],
   "properties": [
    {
     "$id": "180",
     "kind": "property",
     "name": "faceId",
     "serializedName": "faceId",
     "description": "Unique faceId of the detected face, created by detection API and it will expire 24 hours after the detection call. To return this, it requires 'returnFaceId' parameter to be true.",
     "type": {
      "$id": "181",
      "kind": "string",
      "name": "uuid",
      "crossLanguageDefinitionId": "Azure.Core.uuid",
      "baseType": {
       "$id": "182",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.FaceDetectionResult.faceId"
    },
    {
     "$id": "183",
     "kind": "property",
     "name": "recognitionModel",
     "serializedName": "recognitionModel",
     "description": "The 'recognitionModel' associated with this faceId. This is only returned when 'returnRecognitionModel' is explicitly set as true.",
     "type": {
      "$ref": "10"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.FaceDetectionResult.recognitionModel"
    },
    {
     "$id": "184",
     "kind": "property",
     "name": "faceRectangle",
     "serializedName": "faceRectangle",
     "description": "A rectangle area for the face location on image.",
     "type": {
      "$id": "185",
      "kind": "model",
      "name": "FaceRectangle",
      "crossLanguageDefinitionId": "Face.FaceRectangle",
      "usage": "Output,Json",
      "description": "A rectangle within which a face can be found.",
      "decorators": [],
      "properties": [
       {
        "$id": "186",
        "kind": "property",
        "name": "top",
        "serializedName": "top",
        "description": "The distance from the top edge if the image to the top edge of the rectangle, in pixels.",
        "type": {
         "$id": "187",
         "kind": "int32",
         "name": "int32",
         "crossLanguageDefinitionId": "TypeSpec.int32",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceRectangle.top"
       },
       {
        "$id": "188",
        "kind": "property",
        "name": "left",
        "serializedName": "left",
        "description": "The distance from the left edge if the image to the left edge of the rectangle, in pixels.",
        "type": {
         "$id": "189",
         "kind": "int32",
         "name": "int32",
         "crossLanguageDefinitionId": "TypeSpec.int32",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceRectangle.left"
       },
       {
        "$id": "190",
        "kind": "property",
        "name": "width",
        "serializedName": "width",
        "description": "The width of the rectangle, in pixels.",
        "type": {
         "$id": "191",
         "kind": "int32",
         "name": "int32",
         "crossLanguageDefinitionId": "TypeSpec.int32",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceRectangle.width"
       },
       {
        "$id": "192",
        "kind": "property",
        "name": "height",
        "serializedName": "height",
        "description": "The height of the rectangle, in pixels.",
        "type": {
         "$id": "193",
         "kind": "int32",
         "name": "int32",
         "crossLanguageDefinitionId": "TypeSpec.int32",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceRectangle.height"
       }
      ]
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.FaceDetectionResult.faceRectangle"
    },
    {
     "$id": "194",
     "kind": "property",
     "name": "faceLandmarks",
     "serializedName": "faceLandmarks",
     "description": "An array of 27-point face landmarks pointing to the important positions of face components. To return this, it requires 'returnFaceLandmarks' parameter to be true.",
     "type": {
      "$id": "195",
      "kind": "model",
      "name": "FaceLandmarks",
      "crossLanguageDefinitionId": "Face.FaceLandmarks",
      "access": "public",
      "usage": "Output,Json",
      "description": "A collection of 27-point face landmarks pointing to the important positions of face components.",
      "decorators": [],
      "properties": [
       {
        "$id": "196",
        "kind": "property",
        "name": "pupilLeft",
        "serializedName": "pupilLeft",
        "description": "The coordinates of the left eye pupil.",
        "type": {
         "$id": "197",
         "kind": "model",
         "name": "LandmarkCoordinate",
         "crossLanguageDefinitionId": "Face.LandmarkCoordinate",
         "access": "public",
         "usage": "Output,Json",
         "description": "Landmark coordinates within an image.",
         "decorators": [],
         "properties": [
          {
           "$id": "198",
           "kind": "property",
           "name": "x",
           "serializedName": "x",
           "description": "The horizontal component, in pixels.",
           "type": {
            "$id": "199",
            "kind": "float32",
            "name": "float32",
            "crossLanguageDefinitionId": "TypeSpec.float32",
            "decorators": []
           },
           "optional": false,
           "readOnly": false,
           "discriminator": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Face.LandmarkCoordinate.x"
          },
          {
           "$id": "200",
           "kind": "property",
           "name": "y",
           "serializedName": "y",
           "description": "The vertical component, in pixels.",
           "type": {
            "$id": "201",
            "kind": "float32",
            "name": "float32",
            "crossLanguageDefinitionId": "TypeSpec.float32",
            "decorators": []
           },
           "optional": false,
           "readOnly": false,
           "discriminator": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Face.LandmarkCoordinate.y"
          }
         ]
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceLandmarks.pupilLeft"
       },
       {
        "$id": "202",
        "kind": "property",
        "name": "pupilRight",
        "serializedName": "pupilRight",
        "description": "The coordinates of the right eye pupil.",
        "type": {
         "$ref": "197"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceLandmarks.pupilRight"
       },
       {
        "$id": "203",
        "kind": "property",
        "name": "noseTip",
        "serializedName": "noseTip",
        "description": "The coordinates of the nose tip.",
        "type": {
         "$ref": "197"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceLandmarks.noseTip"
       },
       {
        "$id": "204",
        "kind": "property",
        "name": "mouthLeft",
        "serializedName": "mouthLeft",
        "description": "The coordinates of the mouth left.",
        "type": {
         "$ref": "197"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceLandmarks.mouthLeft"
       },
       {
        "$id": "205",
        "kind": "property",
        "name": "mouthRight",
        "serializedName": "mouthRight",
        "description": "The coordinates of the mouth right.",
        "type": {
         "$ref": "197"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceLandmarks.mouthRight"
       },
       {
        "$id": "206",
        "kind": "property",
        "name": "eyebrowLeftOuter",
        "serializedName": "eyebrowLeftOuter",
        "description": "The coordinates of the left eyebrow outer.",
        "type": {
         "$ref": "197"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceLandmarks.eyebrowLeftOuter"
       },
       {
        "$id": "207",
        "kind": "property",
        "name": "eyebrowLeftInner",
        "serializedName": "eyebrowLeftInner",
        "description": "The coordinates of the left eyebrow inner.",
        "type": {
         "$ref": "197"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceLandmarks.eyebrowLeftInner"
       },
       {
        "$id": "208",
        "kind": "property",
        "name": "eyeLeftOuter",
        "serializedName": "eyeLeftOuter",
        "description": "The coordinates of the left eye outer.",
        "type": {
         "$ref": "197"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceLandmarks.eyeLeftOuter"
       },
       {
        "$id": "209",
        "kind": "property",
        "name": "eyeLeftTop",
        "serializedName": "eyeLeftTop",
        "description": "The coordinates of the left eye top.",
        "type": {
         "$ref": "197"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceLandmarks.eyeLeftTop"
       },
       {
        "$id": "210",
        "kind": "property",
        "name": "eyeLeftBottom",
        "serializedName": "eyeLeftBottom",
        "description": "The coordinates of the left eye bottom.",
        "type": {
         "$ref": "197"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceLandmarks.eyeLeftBottom"
       },
       {
        "$id": "211",
        "kind": "property",
        "name": "eyeLeftInner",
        "serializedName": "eyeLeftInner",
        "description": "The coordinates of the left eye inner.",
        "type": {
         "$ref": "197"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceLandmarks.eyeLeftInner"
       },
       {
        "$id": "212",
        "kind": "property",
        "name": "eyebrowRightInner",
        "serializedName": "eyebrowRightInner",
        "description": "The coordinates of the right eyebrow inner.",
        "type": {
         "$ref": "197"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceLandmarks.eyebrowRightInner"
       },
       {
        "$id": "213",
        "kind": "property",
        "name": "eyebrowRightOuter",
        "serializedName": "eyebrowRightOuter",
        "description": "The coordinates of the right eyebrow outer.",
        "type": {
         "$ref": "197"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceLandmarks.eyebrowRightOuter"
       },
       {
        "$id": "214",
        "kind": "property",
        "name": "eyeRightInner",
        "serializedName": "eyeRightInner",
        "description": "The coordinates of the right eye inner.",
        "type": {
         "$ref": "197"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceLandmarks.eyeRightInner"
       },
       {
        "$id": "215",
        "kind": "property",
        "name": "eyeRightTop",
        "serializedName": "eyeRightTop",
        "description": "The coordinates of the right eye top.",
        "type": {
         "$ref": "197"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceLandmarks.eyeRightTop"
       },
       {
        "$id": "216",
        "kind": "property",
        "name": "eyeRightBottom",
        "serializedName": "eyeRightBottom",
        "description": "The coordinates of the right eye bottom.",
        "type": {
         "$ref": "197"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceLandmarks.eyeRightBottom"
       },
       {
        "$id": "217",
        "kind": "property",
        "name": "eyeRightOuter",
        "serializedName": "eyeRightOuter",
        "description": "The coordinates of the right eye outer.",
        "type": {
         "$ref": "197"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceLandmarks.eyeRightOuter"
       },
       {
        "$id": "218",
        "kind": "property",
        "name": "noseRootLeft",
        "serializedName": "noseRootLeft",
        "description": "The coordinates of the nose root left.",
        "type": {
         "$ref": "197"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceLandmarks.noseRootLeft"
       },
       {
        "$id": "219",
        "kind": "property",
        "name": "noseRootRight",
        "serializedName": "noseRootRight",
        "description": "The coordinates of the nose root right.",
        "type": {
         "$ref": "197"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceLandmarks.noseRootRight"
       },
       {
        "$id": "220",
        "kind": "property",
        "name": "noseLeftAlarTop",
        "serializedName": "noseLeftAlarTop",
        "description": "The coordinates of the nose left alar top.",
        "type": {
         "$ref": "197"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceLandmarks.noseLeftAlarTop"
       },
       {
        "$id": "221",
        "kind": "property",
        "name": "noseRightAlarTop",
        "serializedName": "noseRightAlarTop",
        "description": "The coordinates of the nose right alar top.",
        "type": {
         "$ref": "197"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceLandmarks.noseRightAlarTop"
       },
       {
        "$id": "222",
        "kind": "property",
        "name": "noseLeftAlarOutTip",
        "serializedName": "noseLeftAlarOutTip",
        "description": "The coordinates of the nose left alar out tip.",
        "type": {
         "$ref": "197"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceLandmarks.noseLeftAlarOutTip"
       },
       {
        "$id": "223",
        "kind": "property",
        "name": "noseRightAlarOutTip",
        "serializedName": "noseRightAlarOutTip",
        "description": "The coordinates of the nose right alar out tip.",
        "type": {
         "$ref": "197"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceLandmarks.noseRightAlarOutTip"
       },
       {
        "$id": "224",
        "kind": "property",
        "name": "upperLipTop",
        "serializedName": "upperLipTop",
        "description": "The coordinates of the upper lip top.",
        "type": {
         "$ref": "197"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceLandmarks.upperLipTop"
       },
       {
        "$id": "225",
        "kind": "property",
        "name": "upperLipBottom",
        "serializedName": "upperLipBottom",
        "description": "The coordinates of the upper lip bottom.",
        "type": {
         "$ref": "197"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceLandmarks.upperLipBottom"
       },
       {
        "$id": "226",
        "kind": "property",
        "name": "underLipTop",
        "serializedName": "underLipTop",
        "description": "The coordinates of the under lip top.",
        "type": {
         "$ref": "197"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceLandmarks.underLipTop"
       },
       {
        "$id": "227",
        "kind": "property",
        "name": "underLipBottom",
        "serializedName": "underLipBottom",
        "description": "The coordinates of the under lip bottom.",
        "type": {
         "$ref": "197"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceLandmarks.underLipBottom"
       }
      ]
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.FaceDetectionResult.faceLandmarks"
    },
    {
     "$id": "228",
     "kind": "property",
     "name": "faceAttributes",
     "serializedName": "faceAttributes",
     "description": "Face attributes for detected face.",
     "type": {
      "$id": "229",
      "kind": "model",
      "name": "FaceAttributes",
      "crossLanguageDefinitionId": "Face.FaceAttributes",
      "access": "public",
      "usage": "Output,Json",
      "description": "Face attributes for the detected face.",
      "decorators": [],
      "properties": [
       {
        "$id": "230",
        "kind": "property",
        "name": "age",
        "serializedName": "age",
        "description": "Age in years.",
        "type": {
         "$id": "231",
         "kind": "float32",
         "name": "float32",
         "crossLanguageDefinitionId": "TypeSpec.float32",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceAttributes.age"
       },
       {
        "$id": "232",
        "kind": "property",
        "name": "smile",
        "serializedName": "smile",
        "description": "Smile intensity, a number between [0,1].",
        "type": {
         "$id": "233",
         "kind": "float32",
         "name": "float32",
         "crossLanguageDefinitionId": "TypeSpec.float32",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceAttributes.smile"
       },
       {
        "$id": "234",
        "kind": "property",
        "name": "facialHair",
        "serializedName": "facialHair",
        "description": "Properties describing facial hair attributes.",
        "type": {
         "$id": "235",
         "kind": "model",
         "name": "FacialHair",
         "crossLanguageDefinitionId": "Face.FacialHair",
         "access": "public",
         "usage": "Output,Json",
         "description": "Properties describing facial hair attributes.",
         "decorators": [],
         "properties": [
          {
           "$id": "236",
           "kind": "property",
           "name": "moustache",
           "serializedName": "moustache",
           "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
           "type": {
            "$id": "237",
            "kind": "float32",
            "name": "float32",
            "crossLanguageDefinitionId": "TypeSpec.float32",
            "decorators": []
           },
           "optional": false,
           "readOnly": false,
           "discriminator": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Face.FacialHair.moustache"
          },
          {
           "$id": "238",
           "kind": "property",
           "name": "beard",
           "serializedName": "beard",
           "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
           "type": {
            "$id": "239",
            "kind": "float32",
            "name": "float32",
            "crossLanguageDefinitionId": "TypeSpec.float32",
            "decorators": []
           },
           "optional": false,
           "readOnly": false,
           "discriminator": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Face.FacialHair.beard"
          },
          {
           "$id": "240",
           "kind": "property",
           "name": "sideburns",
           "serializedName": "sideburns",
           "description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
           "type": {
            "$id": "241",
            "kind": "float32",
            "name": "float32",
            "crossLanguageDefinitionId": "TypeSpec.float32",
            "decorators": []
           },
           "optional": false,
           "readOnly": false,
           "discriminator": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Face.FacialHair.sideburns"
          }
         ]
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceAttributes.facialHair"
       },
       {
        "$id": "242",
        "kind": "property",
        "name": "glasses",
        "serializedName": "glasses",
        "description": "Glasses type if any of the face.",
        "type": {
         "$ref": "48"
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceAttributes.glasses"
       },
       {
        "$id": "243",
        "kind": "property",
        "name": "headPose",
        "serializedName": "headPose",
        "description": "3-D roll/yaw/pitch angles for face direction.",
        "type": {
         "$id": "244",
         "kind": "model",
         "name": "HeadPose",
         "crossLanguageDefinitionId": "Face.HeadPose",
         "access": "public",
         "usage": "Output,Json",
         "description": "3-D roll/yaw/pitch angles for face direction.",
         "decorators": [],
         "properties": [
          {
           "$id": "245",
           "kind": "property",
           "name": "pitch",
           "serializedName": "pitch",
           "description": "Value of angles.",
           "type": {
            "$id": "246",
            "kind": "float32",
            "name": "float32",
            "crossLanguageDefinitionId": "TypeSpec.float32",
            "decorators": []
           },
           "optional": false,
           "readOnly": false,
           "discriminator": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Face.HeadPose.pitch"
          },
          {
           "$id": "247",
           "kind": "property",
           "name": "roll",
           "serializedName": "roll",
           "description": "Value of angles.",
           "type": {
            "$id": "248",
            "kind": "float32",
            "name": "float32",
            "crossLanguageDefinitionId": "TypeSpec.float32",
            "decorators": []
           },
           "optional": false,
           "readOnly": false,
           "discriminator": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Face.HeadPose.roll"
          },
          {
           "$id": "249",
           "kind": "property",
           "name": "yaw",
           "serializedName": "yaw",
           "description": "Value of angles.",
           "type": {
            "$id": "250",
            "kind": "float32",
            "name": "float32",
            "crossLanguageDefinitionId": "TypeSpec.float32",
            "decorators": []
           },
           "optional": false,
           "readOnly": false,
           "discriminator": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Face.HeadPose.yaw"
          }
         ]
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceAttributes.headPose"
       },
       {
        "$id": "251",
        "kind": "property",
        "name": "hair",
        "serializedName": "hair",
        "description": "Properties describing hair attributes.",
        "type": {
         "$id": "252",
         "kind": "model",
         "name": "HairProperties",
         "crossLanguageDefinitionId": "Face.HairProperties",
         "access": "public",
         "usage": "Output,Json",
         "description": "Properties describing hair attributes.",
         "decorators": [],
         "properties": [
          {
           "$id": "253",
           "kind": "property",
           "name": "bald",
           "serializedName": "bald",
           "description": "A number describing confidence level of whether the person is bald.",
           "type": {
            "$id": "254",
            "kind": "float32",
            "name": "float32",
            "crossLanguageDefinitionId": "TypeSpec.float32",
            "decorators": []
           },
           "optional": false,
           "readOnly": false,
           "discriminator": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Face.HairProperties.bald"
          },
          {
           "$id": "255",
           "kind": "property",
           "name": "invisible",
           "serializedName": "invisible",
           "description": "A boolean value describing whether the hair is visible in the image.",
           "type": {
            "$id": "256",
            "kind": "boolean",
            "name": "boolean",
            "crossLanguageDefinitionId": "TypeSpec.boolean",
            "decorators": []
           },
           "optional": false,
           "readOnly": false,
           "discriminator": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Face.HairProperties.invisible"
          },
          {
           "$id": "257",
           "kind": "property",
           "name": "hairColor",
           "serializedName": "hairColor",
           "description": "An array of candidate colors and confidence level in the presence of each.",
           "type": {
            "$id": "258",
            "kind": "array",
            "name": "ArrayHairColor",
            "valueType": {
             "$id": "259",
             "kind": "model",
             "name": "HairColor",
             "crossLanguageDefinitionId": "Face.HairColor",
             "access": "public",
             "usage": "Output,Json",
             "description": "An array of candidate colors and confidence level in the presence of each.",
             "decorators": [],
             "properties": [
              {
               "$id": "260",
               "kind": "property",
               "name": "color",
               "serializedName": "color",
               "description": "Name of the hair color.",
               "type": {
                "$ref": "58"
               },
               "optional": false,
               "readOnly": false,
               "discriminator": false,
               "decorators": [],
               "crossLanguageDefinitionId": "Face.HairColor.color"
              },
              {
               "$id": "261",
               "kind": "property",
               "name": "confidence",
               "serializedName": "confidence",
               "description": "Confidence level of the color. Range between [0,1].",
               "type": {
                "$id": "262",
                "kind": "float32",
                "name": "float32",
                "crossLanguageDefinitionId": "TypeSpec.float32",
                "decorators": []
               },
               "optional": false,
               "readOnly": false,
               "discriminator": false,
               "decorators": [],
               "crossLanguageDefinitionId": "Face.HairColor.confidence"
              }
             ]
            },
            "crossLanguageDefinitionId": "TypeSpec.Array",
            "decorators": []
           },
           "optional": false,
           "readOnly": false,
           "discriminator": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Face.HairProperties.hairColor"
          }
         ]
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceAttributes.hair"
       },
       {
        "$id": "263",
        "kind": "property",
        "name": "occlusion",
        "serializedName": "occlusion",
        "description": "Properties describing occlusions on a given face.",
        "type": {
         "$id": "264",
         "kind": "model",
         "name": "OcclusionProperties",
         "crossLanguageDefinitionId": "Face.OcclusionProperties",
         "access": "public",
         "usage": "Output,Json",
         "description": "Properties describing occlusions on a given face.",
         "decorators": [],
         "properties": [
          {
           "$id": "265",
           "kind": "property",
           "name": "foreheadOccluded",
           "serializedName": "foreheadOccluded",
           "description": "A boolean value indicating whether forehead is occluded.",
           "type": {
            "$id": "266",
            "kind": "boolean",
            "name": "boolean",
            "crossLanguageDefinitionId": "TypeSpec.boolean",
            "decorators": []
           },
           "optional": false,
           "readOnly": false,
           "discriminator": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Face.OcclusionProperties.foreheadOccluded"
          },
          {
           "$id": "267",
           "kind": "property",
           "name": "eyeOccluded",
           "serializedName": "eyeOccluded",
           "description": "A boolean value indicating whether eyes are occluded.",
           "type": {
            "$id": "268",
            "kind": "boolean",
            "name": "boolean",
            "crossLanguageDefinitionId": "TypeSpec.boolean",
            "decorators": []
           },
           "optional": false,
           "readOnly": false,
           "discriminator": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Face.OcclusionProperties.eyeOccluded"
          },
          {
           "$id": "269",
           "kind": "property",
           "name": "mouthOccluded",
           "serializedName": "mouthOccluded",
           "description": "A boolean value indicating whether the mouth is occluded.",
           "type": {
            "$id": "270",
            "kind": "boolean",
            "name": "boolean",
            "crossLanguageDefinitionId": "TypeSpec.boolean",
            "decorators": []
           },
           "optional": false,
           "readOnly": false,
           "discriminator": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Face.OcclusionProperties.mouthOccluded"
          }
         ]
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceAttributes.occlusion"
       },
       {
        "$id": "271",
        "kind": "property",
        "name": "accessories",
        "serializedName": "accessories",
        "description": "Properties describing any accessories on a given face.",
        "type": {
         "$id": "272",
         "kind": "array",
         "name": "ArrayAccessoryItem",
         "valueType": {
          "$id": "273",
          "kind": "model",
          "name": "AccessoryItem",
          "crossLanguageDefinitionId": "Face.AccessoryItem",
          "access": "public",
          "usage": "Output,Json",
          "description": "Accessory item and corresponding confidence level.",
          "decorators": [],
          "properties": [
           {
            "$id": "274",
            "kind": "property",
            "name": "type",
            "serializedName": "type",
            "description": "Type of the accessory.",
            "type": {
             "$ref": "76"
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Face.AccessoryItem.type"
           },
           {
            "$id": "275",
            "kind": "property",
            "name": "confidence",
            "serializedName": "confidence",
            "description": "Confidence level of the accessory type. Range between [0,1].",
            "type": {
             "$id": "276",
             "kind": "float32",
             "name": "float32",
             "crossLanguageDefinitionId": "TypeSpec.float32",
             "decorators": []
            },
            "optional": false,
            "readOnly": false,
            "discriminator": false,
            "decorators": [],
            "crossLanguageDefinitionId": "Face.AccessoryItem.confidence"
           }
          ]
         },
         "crossLanguageDefinitionId": "TypeSpec.Array",
         "decorators": []
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceAttributes.accessories"
       },
       {
        "$id": "277",
        "kind": "property",
        "name": "blur",
        "serializedName": "blur",
        "description": "Properties describing any presence of blur within the image.",
        "type": {
         "$id": "278",
         "kind": "model",
         "name": "BlurProperties",
         "crossLanguageDefinitionId": "Face.BlurProperties",
         "access": "public",
         "usage": "Output,Json",
         "description": "Properties describing any presence of blur within the image.",
         "decorators": [],
         "properties": [
          {
           "$id": "279",
           "kind": "property",
           "name": "blurLevel",
           "serializedName": "blurLevel",
           "description": "An enum value indicating level of blurriness.",
           "type": {
            "$ref": "84"
           },
           "optional": false,
           "readOnly": false,
           "discriminator": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Face.BlurProperties.blurLevel"
          },
          {
           "$id": "280",
           "kind": "property",
           "name": "value",
           "serializedName": "value",
           "description": "A number indicating level of blurriness ranging from 0 to 1.",
           "type": {
            "$id": "281",
            "kind": "float32",
            "name": "float32",
            "crossLanguageDefinitionId": "TypeSpec.float32",
            "decorators": []
           },
           "optional": false,
           "readOnly": false,
           "discriminator": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Face.BlurProperties.value"
          }
         ]
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceAttributes.blur"
       },
       {
        "$id": "282",
        "kind": "property",
        "name": "exposure",
        "serializedName": "exposure",
        "description": "Properties describing exposure level of the image.",
        "type": {
         "$id": "283",
         "kind": "model",
         "name": "ExposureProperties",
         "crossLanguageDefinitionId": "Face.ExposureProperties",
         "access": "public",
         "usage": "Output,Json",
         "description": "Properties describing exposure level of the image.",
         "decorators": [],
         "properties": [
          {
           "$id": "284",
           "kind": "property",
           "name": "exposureLevel",
           "serializedName": "exposureLevel",
           "description": "An enum value indicating level of exposure.",
           "type": {
            "$ref": "92"
           },
           "optional": false,
           "readOnly": false,
           "discriminator": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Face.ExposureProperties.exposureLevel"
          },
          {
           "$id": "285",
           "kind": "property",
           "name": "value",
           "serializedName": "value",
           "description": "A number indicating level of exposure level ranging from 0 to 1. [0, 0.25) is under exposure. [0.25, 0.75) is good exposure. [0.75, 1] is over exposure.",
           "type": {
            "$id": "286",
            "kind": "float32",
            "name": "float32",
            "crossLanguageDefinitionId": "TypeSpec.float32",
            "decorators": []
           },
           "optional": false,
           "readOnly": false,
           "discriminator": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Face.ExposureProperties.value"
          }
         ]
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceAttributes.exposure"
       },
       {
        "$id": "287",
        "kind": "property",
        "name": "noise",
        "serializedName": "noise",
        "description": "Properties describing noise level of the image.",
        "type": {
         "$id": "288",
         "kind": "model",
         "name": "NoiseProperties",
         "crossLanguageDefinitionId": "Face.NoiseProperties",
         "access": "public",
         "usage": "Output,Json",
         "description": "Properties describing noise level of the image.",
         "decorators": [],
         "properties": [
          {
           "$id": "289",
           "kind": "property",
           "name": "noiseLevel",
           "serializedName": "noiseLevel",
           "description": "An enum value indicating level of noise.",
           "type": {
            "$ref": "100"
           },
           "optional": false,
           "readOnly": false,
           "discriminator": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Face.NoiseProperties.noiseLevel"
          },
          {
           "$id": "290",
           "kind": "property",
           "name": "value",
           "serializedName": "value",
           "description": "A number indicating level of noise level ranging from 0 to 1. [0, 0.25) is under exposure. [0.25, 0.75) is good exposure. [0.75, 1] is over exposure. [0, 0.3) is low noise level. [0.3, 0.7) is medium noise level. [0.7, 1] is high noise level.",
           "type": {
            "$id": "291",
            "kind": "float32",
            "name": "float32",
            "crossLanguageDefinitionId": "TypeSpec.float32",
            "decorators": []
           },
           "optional": false,
           "readOnly": false,
           "discriminator": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Face.NoiseProperties.value"
          }
         ]
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceAttributes.noise"
       },
       {
        "$id": "292",
        "kind": "property",
        "name": "mask",
        "serializedName": "mask",
        "description": "Properties describing the presence of a mask on a given face.",
        "type": {
         "$id": "293",
         "kind": "model",
         "name": "MaskProperties",
         "crossLanguageDefinitionId": "Face.MaskProperties",
         "access": "public",
         "usage": "Output,Json",
         "description": "Properties describing the presence of a mask on a given face.",
         "decorators": [],
         "properties": [
          {
           "$id": "294",
           "kind": "property",
           "name": "noseAndMouthCovered",
           "serializedName": "noseAndMouthCovered",
           "description": "A boolean value indicating whether nose and mouth are covered.",
           "type": {
            "$id": "295",
            "kind": "boolean",
            "name": "boolean",
            "crossLanguageDefinitionId": "TypeSpec.boolean",
            "decorators": []
           },
           "optional": false,
           "readOnly": false,
           "discriminator": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Face.MaskProperties.noseAndMouthCovered"
          },
          {
           "$id": "296",
           "kind": "property",
           "name": "type",
           "serializedName": "type",
           "description": "Type of the mask.",
           "type": {
            "$ref": "108"
           },
           "optional": false,
           "readOnly": false,
           "discriminator": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Face.MaskProperties.type"
          }
         ]
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceAttributes.mask"
       },
       {
        "$id": "297",
        "kind": "property",
        "name": "qualityForRecognition",
        "serializedName": "qualityForRecognition",
        "description": "Properties describing the overall image quality regarding whether the image being used in the detection is of sufficient quality to attempt face recognition on.",
        "type": {
         "$ref": "118"
        },
        "optional": true,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceAttributes.qualityForRecognition"
       }
      ]
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.FaceDetectionResult.faceAttributes"
    }
   ]
  },
  {
   "$ref": "185"
  },
  {
   "$ref": "195"
  },
  {
   "$ref": "197"
  },
  {
   "$ref": "229"
  },
  {
   "$ref": "235"
  },
  {
   "$ref": "244"
  },
  {
   "$ref": "252"
  },
  {
   "$ref": "259"
  },
  {
   "$ref": "264"
  },
  {
   "$ref": "273"
  },
  {
   "$ref": "278"
  },
  {
   "$ref": "283"
  },
  {
   "$ref": "288"
  },
  {
   "$ref": "293"
  },
  {
   "$id": "298",
   "kind": "model",
   "name": "FaceErrorResponse",
   "crossLanguageDefinitionId": "Face.FaceErrorResponse",
   "usage": "Output,Error,Json",
   "description": "A response containing error details.",
   "decorators": [],
   "properties": [
    {
     "$id": "299",
     "kind": "property",
     "name": "error",
     "serializedName": "error",
     "description": "The error object.",
     "type": {
      "$id": "300",
      "kind": "model",
      "name": "FaceError",
      "crossLanguageDefinitionId": "Face.FaceError",
      "usage": "Output,Json",
      "description": "The error object. For comprehensive details on error codes and messages returned by the Face Service, please refer to the following link: https://aka.ms/face-error-codes-and-messages.",
      "decorators": [],
      "properties": [
       {
        "$id": "301",
        "kind": "property",
        "name": "code",
        "serializedName": "code",
        "description": "One of a server-defined set of error codes.",
        "type": {
         "$id": "302",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceError.code"
       },
       {
        "$id": "303",
        "kind": "property",
        "name": "message",
        "serializedName": "message",
        "description": "A human-readable representation of the error.",
        "type": {
         "$id": "304",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.FaceError.message"
       }
      ]
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.FaceErrorResponse.error"
    }
   ]
  },
  {
   "$ref": "300"
  },
  {
   "$id": "305",
   "kind": "model",
   "name": "FindSimilarRequest",
   "crossLanguageDefinitionId": "ClientCustomizations.findSimilar.Request.anonymous",
   "usage": "Spread,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "306",
     "kind": "property",
     "name": "faceId",
     "serializedName": "faceId",
     "description": "faceId of the query face. User needs to call \"Detect\" first to get a valid faceId. Note that this faceId is not persisted and will expire 24 hours after the detection call.",
     "type": {
      "$id": "307",
      "kind": "string",
      "name": "uuid",
      "crossLanguageDefinitionId": "Azure.Core.uuid",
      "baseType": {
       "$id": "308",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "ClientCustomizations.findSimilar.Request.anonymous.faceId"
    },
    {
     "$id": "309",
     "kind": "property",
     "name": "maxNumOfCandidatesReturned",
     "serializedName": "maxNumOfCandidatesReturned",
     "description": "The number of top similar faces returned. The valid range is [1, 1000]. Default value is 20.",
     "type": {
      "$id": "310",
      "kind": "int32",
      "name": "int32",
      "crossLanguageDefinitionId": "TypeSpec.int32",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "ClientCustomizations.findSimilar.Request.anonymous.maxNumOfCandidatesReturned"
    },
    {
     "$id": "311",
     "kind": "property",
     "name": "mode",
     "serializedName": "mode",
     "description": "Similar face searching mode. It can be 'matchPerson' or 'matchFace'. Default value is 'matchPerson'.",
     "type": {
      "$ref": "126"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "ClientCustomizations.findSimilar.Request.anonymous.mode"
    },
    {
     "$id": "312",
     "kind": "property",
     "name": "faceIds",
     "serializedName": "faceIds",
     "description": "An array of candidate faceIds. All of them are created by \"Detect\" and the faceIds will expire 24 hours after the detection call. The number of faceIds is limited to 1000.",
     "type": {
      "$id": "313",
      "kind": "array",
      "name": "Array",
      "valueType": {
       "$id": "314",
       "kind": "string",
       "name": "uuid",
       "crossLanguageDefinitionId": "Azure.Core.uuid",
       "baseType": {
        "$id": "315",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "decorators": []
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "ClientCustomizations.findSimilar.Request.anonymous.faceIds"
    }
   ]
  },
  {
   "$id": "316",
   "kind": "model",
   "name": "FaceFindSimilarResult",
   "crossLanguageDefinitionId": "Face.FindSimilarResult",
   "usage": "Output,Json",
   "description": "Response body for find similar face operation.",
   "decorators": [],
   "properties": [
    {
     "$id": "317",
     "kind": "property",
     "name": "confidence",
     "serializedName": "confidence",
     "description": "Confidence value of the candidate. The higher confidence, the more similar. Range between [0,1].",
     "type": {
      "$id": "318",
      "kind": "float32",
      "name": "float32",
      "crossLanguageDefinitionId": "TypeSpec.float32",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.FindSimilarResult.confidence"
    },
    {
     "$id": "319",
     "kind": "property",
     "name": "faceId",
     "serializedName": "faceId",
     "description": "faceId of candidate face when find by faceIds. faceId is created by \"Detect\" and will expire 24 hours after the detection call.",
     "type": {
      "$id": "320",
      "kind": "string",
      "name": "uuid",
      "crossLanguageDefinitionId": "Azure.Core.uuid",
      "baseType": {
       "$id": "321",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.FindSimilarResult.faceId"
    },
    {
     "$id": "322",
     "kind": "property",
     "name": "persistedFaceId",
     "serializedName": "persistedFaceId",
     "description": "persistedFaceId of candidate face when find by faceListId or largeFaceListId. persistedFaceId in face list/large face list is persisted and will not expire.",
     "type": {
      "$id": "323",
      "kind": "string",
      "name": "uuid",
      "crossLanguageDefinitionId": "Azure.Core.uuid",
      "baseType": {
       "$id": "324",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.FindSimilarResult.persistedFaceId"
    }
   ]
  },
  {
   "$id": "325",
   "kind": "model",
   "name": "VerifyFaceToFaceRequest",
   "crossLanguageDefinitionId": "ClientCustomizations.verifyFaceToFace.Request.anonymous",
   "usage": "Spread,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "326",
     "kind": "property",
     "name": "faceId1",
     "serializedName": "faceId1",
     "description": "The faceId of one face, come from \"Detect\".",
     "type": {
      "$id": "327",
      "kind": "string",
      "name": "uuid",
      "crossLanguageDefinitionId": "Azure.Core.uuid",
      "baseType": {
       "$id": "328",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "ClientCustomizations.verifyFaceToFace.Request.anonymous.faceId1"
    },
    {
     "$id": "329",
     "kind": "property",
     "name": "faceId2",
     "serializedName": "faceId2",
     "description": "The faceId of another face, come from \"Detect\".",
     "type": {
      "$id": "330",
      "kind": "string",
      "name": "uuid",
      "crossLanguageDefinitionId": "Azure.Core.uuid",
      "baseType": {
       "$id": "331",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "ClientCustomizations.verifyFaceToFace.Request.anonymous.faceId2"
    }
   ]
  },
  {
   "$id": "332",
   "kind": "model",
   "name": "FaceVerificationResult",
   "crossLanguageDefinitionId": "Face.VerificationResult",
   "usage": "Output,Json",
   "description": "Verify result.",
   "decorators": [],
   "properties": [
    {
     "$id": "333",
     "kind": "property",
     "name": "isIdentical",
     "serializedName": "isIdentical",
     "description": "True if the two faces belong to the same person or the face belongs to the person, otherwise false.",
     "type": {
      "$id": "334",
      "kind": "boolean",
      "name": "boolean",
      "crossLanguageDefinitionId": "TypeSpec.boolean",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.VerificationResult.isIdentical"
    },
    {
     "$id": "335",
     "kind": "property",
     "name": "confidence",
     "serializedName": "confidence",
     "description": "A number indicates the similarity confidence of whether two faces belong to the same person, or whether the face belongs to the person. By default, isIdentical is set to True if similarity confidence is greater than or equal to 0.5. This is useful for advanced users to override 'isIdentical' and fine-tune the result on their own data.",
     "type": {
      "$id": "336",
      "kind": "float32",
      "name": "float32",
      "crossLanguageDefinitionId": "TypeSpec.float32",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.VerificationResult.confidence"
    }
   ]
  },
  {
   "$id": "337",
   "kind": "model",
   "name": "GroupRequest",
   "crossLanguageDefinitionId": "ClientCustomizations.group.Request.anonymous",
   "usage": "Spread,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "338",
     "kind": "property",
     "name": "faceIds",
     "serializedName": "faceIds",
     "description": "Array of candidate faceIds created by \"Detect\". The maximum is 1000 faces.",
     "type": {
      "$id": "339",
      "kind": "array",
      "name": "Array",
      "valueType": {
       "$id": "340",
       "kind": "string",
       "name": "uuid",
       "crossLanguageDefinitionId": "Azure.Core.uuid",
       "baseType": {
        "$id": "341",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "decorators": []
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "ClientCustomizations.group.Request.anonymous.faceIds"
    }
   ]
  },
  {
   "$id": "342",
   "kind": "model",
   "name": "FaceGroupingResult",
   "crossLanguageDefinitionId": "Face.GroupingResult",
   "usage": "Output,Json",
   "description": "Response body for group face operation.",
   "decorators": [],
   "properties": [
    {
     "$id": "343",
     "kind": "property",
     "name": "groups",
     "serializedName": "groups",
     "description": "A partition of the original faces based on face similarity. Groups are ranked by number of faces.",
     "type": {
      "$id": "344",
      "kind": "array",
      "name": "ArrayArray",
      "valueType": {
       "$id": "345",
       "kind": "array",
       "name": "Array",
       "valueType": {
        "$id": "346",
        "kind": "string",
        "name": "uuid",
        "crossLanguageDefinitionId": "Azure.Core.uuid",
        "baseType": {
         "$id": "347",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "decorators": []
       },
       "crossLanguageDefinitionId": "TypeSpec.Array",
       "decorators": []
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.GroupingResult.groups"
    },
    {
     "$id": "348",
     "kind": "property",
     "name": "messyGroup",
     "serializedName": "messyGroup",
     "description": "Face ids array of faces that cannot find any similar faces from original faces.",
     "type": {
      "$id": "349",
      "kind": "array",
      "name": "Array",
      "valueType": {
       "$id": "350",
       "kind": "string",
       "name": "uuid",
       "crossLanguageDefinitionId": "Azure.Core.uuid",
       "baseType": {
        "$id": "351",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "decorators": []
      },
      "crossLanguageDefinitionId": "TypeSpec.Array",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.GroupingResult.messyGroup"
    }
   ]
  },
  {
   "$id": "352",
   "kind": "model",
   "name": "CreateLivenessSessionContent",
   "crossLanguageDefinitionId": "Face.CreateLivenessSessionContent",
   "usage": "Input,Json",
   "description": "Request for creating liveness session.",
   "decorators": [],
   "properties": [
    {
     "$id": "353",
     "kind": "property",
     "name": "livenessOperationMode",
     "serializedName": "livenessOperationMode",
     "description": "Type of liveness mode the client should follow.",
     "type": {
      "$ref": "136"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.CreateLivenessSessionContent.livenessOperationMode"
    },
    {
     "$id": "354",
     "kind": "property",
     "name": "sendResultsToClient",
     "serializedName": "sendResultsToClient",
     "description": "Whether or not to allow a '200 - Success' response body to be sent to the client, which may be undesirable for security reasons. Default is false, clients will receive a '204 - NoContent' empty body response. Regardless of selection, calling Session GetResult will always contain a response body enabling business logic to be implemented.",
     "type": {
      "$id": "355",
      "kind": "boolean",
      "name": "boolean",
      "crossLanguageDefinitionId": "TypeSpec.boolean",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.CreateLivenessSessionContent.sendResultsToClient"
    },
    {
     "$id": "356",
     "kind": "property",
     "name": "deviceCorrelationIdSetInClient",
     "serializedName": "deviceCorrelationIdSetInClient",
     "description": "Whether or not to allow client to set their own 'deviceCorrelationId' via the Vision SDK. Default is false, and 'deviceCorrelationId' must be set in this request body.",
     "type": {
      "$id": "357",
      "kind": "boolean",
      "name": "boolean",
      "crossLanguageDefinitionId": "TypeSpec.boolean",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.CreateLivenessSessionContent.deviceCorrelationIdSetInClient"
    },
    {
     "$id": "358",
     "kind": "property",
     "name": "deviceCorrelationId",
     "serializedName": "deviceCorrelationId",
     "description": "Unique Guid per each end-user device. This is to provide rate limiting and anti-hammering. If 'deviceCorrelationIdSetInClient' is true in this request, this 'deviceCorrelationId' must be null.",
     "type": {
      "$id": "359",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.CreateLivenessSessionContent.deviceCorrelationId"
    },
    {
     "$id": "360",
     "kind": "property",
     "name": "authTokenTimeToLiveInSeconds",
     "serializedName": "authTokenTimeToLiveInSeconds",
     "description": "Seconds the session should last for. Range is 60 to 86400 seconds. Default value is 600.",
     "type": {
      "$id": "361",
      "kind": "int32",
      "name": "int32",
      "crossLanguageDefinitionId": "TypeSpec.int32",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.CreateLivenessSessionContent.authTokenTimeToLiveInSeconds"
    }
   ]
  },
  {
   "$id": "362",
   "kind": "model",
   "name": "CreateLivenessSessionResult",
   "crossLanguageDefinitionId": "Face.CreateLivenessSessionResult",
   "usage": "Output,Json",
   "description": "Response of liveness session creation.",
   "decorators": [],
   "properties": [
    {
     "$id": "363",
     "kind": "property",
     "name": "sessionId",
     "serializedName": "sessionId",
     "description": "The unique session ID of the created session. It will expire 48 hours after it was created or may be deleted sooner using the corresponding Session DELETE operation.",
     "type": {
      "$id": "364",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.CreateLivenessSessionResult.sessionId"
    },
    {
     "$id": "365",
     "kind": "property",
     "name": "authToken",
     "serializedName": "authToken",
     "description": "Bearer token to provide authentication for the Vision SDK running on a client application. This Bearer token has limited permissions to perform only the required action and expires after the TTL time. It is also auditable.",
     "type": {
      "$id": "366",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.CreateLivenessSessionResult.authToken"
    }
   ]
  },
  {
   "$id": "367",
   "kind": "model",
   "name": "LivenessSession",
   "crossLanguageDefinitionId": "Face.LivenessSession",
   "usage": "Output,Json",
   "description": "Session result of detect liveness.",
   "decorators": [],
   "properties": [
    {
     "$id": "368",
     "kind": "property",
     "name": "id",
     "serializedName": "id",
     "description": "The unique ID to reference this session.",
     "type": {
      "$id": "369",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": true,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.LivenessSession.id"
    },
    {
     "$id": "370",
     "kind": "property",
     "name": "createdDateTime",
     "serializedName": "createdDateTime",
     "description": "DateTime when this session was created.",
     "type": {
      "$id": "371",
      "kind": "utcDateTime",
      "name": "utcDateTime",
      "encode": "rfc3339",
      "wireType": {
       "$id": "372",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.LivenessSession.createdDateTime"
    },
    {
     "$id": "373",
     "kind": "property",
     "name": "sessionStartDateTime",
     "serializedName": "sessionStartDateTime",
     "description": "DateTime when this session was started by the client.",
     "type": {
      "$id": "374",
      "kind": "utcDateTime",
      "name": "utcDateTime",
      "encode": "rfc3339",
      "wireType": {
       "$id": "375",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.LivenessSession.sessionStartDateTime"
    },
    {
     "$id": "376",
     "kind": "property",
     "name": "sessionExpired",
     "serializedName": "sessionExpired",
     "description": "Whether or not the session is expired.",
     "type": {
      "$id": "377",
      "kind": "boolean",
      "name": "boolean",
      "crossLanguageDefinitionId": "TypeSpec.boolean",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.LivenessSession.sessionExpired"
    },
    {
     "$id": "378",
     "kind": "property",
     "name": "deviceCorrelationId",
     "serializedName": "deviceCorrelationId",
     "description": "Unique Guid per each end-user device. This is to provide rate limiting and anti-hammering. If 'deviceCorrelationIdSetInClient' is true in this request, this 'deviceCorrelationId' must be null.",
     "type": {
      "$id": "379",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.LivenessSession.deviceCorrelationId"
    },
    {
     "$id": "380",
     "kind": "property",
     "name": "authTokenTimeToLiveInSeconds",
     "serializedName": "authTokenTimeToLiveInSeconds",
     "description": "Seconds the session should last for. Range is 60 to 86400 seconds. Default value is 600.",
     "type": {
      "$id": "381",
      "kind": "int32",
      "name": "int32",
      "crossLanguageDefinitionId": "TypeSpec.int32",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.LivenessSession.authTokenTimeToLiveInSeconds"
    },
    {
     "$id": "382",
     "kind": "property",
     "name": "status",
     "serializedName": "status",
     "description": "The current status of the session.",
     "type": {
      "$ref": "142"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.LivenessSession.status"
    },
    {
     "$id": "383",
     "kind": "property",
     "name": "result",
     "serializedName": "result",
     "description": "The latest session audit result only populated if status == 'ResultAvailable'.",
     "type": {
      "$id": "384",
      "kind": "model",
      "name": "LivenessSessionAuditEntry",
      "crossLanguageDefinitionId": "Face.LivenessSessionAuditEntry",
      "usage": "Output,Json",
      "description": "Audit entry for a request in session.",
      "decorators": [],
      "properties": [
       {
        "$id": "385",
        "kind": "property",
        "name": "id",
        "serializedName": "id",
        "description": "The unique id to refer to this audit request. Use this id with the 'start' query parameter to continue on to the next page of audit results.",
        "type": {
         "$id": "386",
         "kind": "int64",
         "name": "int64",
         "crossLanguageDefinitionId": "TypeSpec.int64",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.LivenessSessionAuditEntry.id"
       },
       {
        "$id": "387",
        "kind": "property",
        "name": "sessionId",
        "serializedName": "sessionId",
        "description": "The unique sessionId of the created session. It will expire 48 hours after it was created or may be deleted sooner using the corresponding session DELETE operation.",
        "type": {
         "$id": "388",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.LivenessSessionAuditEntry.sessionId"
       },
       {
        "$id": "389",
        "kind": "property",
        "name": "requestId",
        "serializedName": "requestId",
        "description": "The unique requestId that is returned by the service to the client in the 'apim-request-id' header.",
        "type": {
         "$id": "390",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.LivenessSessionAuditEntry.requestId"
       },
       {
        "$id": "391",
        "kind": "property",
        "name": "clientRequestId",
        "serializedName": "clientRequestId",
        "description": "The unique clientRequestId that is sent by the client in the 'client-request-id' header.",
        "type": {
         "$id": "392",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.LivenessSessionAuditEntry.clientRequestId"
       },
       {
        "$id": "393",
        "kind": "property",
        "name": "receivedDateTime",
        "serializedName": "receivedDateTime",
        "description": "The UTC DateTime that the request was received.",
        "type": {
         "$id": "394",
         "kind": "utcDateTime",
         "name": "utcDateTime",
         "encode": "rfc3339",
         "wireType": {
          "$id": "395",
          "kind": "string",
          "name": "string",
          "crossLanguageDefinitionId": "TypeSpec.string",
          "decorators": []
         },
         "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.LivenessSessionAuditEntry.receivedDateTime"
       },
       {
        "$id": "396",
        "kind": "property",
        "name": "request",
        "serializedName": "request",
        "description": "The request of this entry.",
        "type": {
         "$id": "397",
         "kind": "model",
         "name": "AuditRequestInfo",
         "crossLanguageDefinitionId": "Face.AuditRequestInfo",
         "usage": "Output,Json",
         "description": "Audit entry for a request in the session.",
         "decorators": [],
         "properties": [
          {
           "$id": "398",
           "kind": "property",
           "name": "url",
           "serializedName": "url",
           "description": "The relative URL and query of the liveness request.",
           "type": {
            "$id": "399",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           },
           "optional": false,
           "readOnly": false,
           "discriminator": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Face.AuditRequestInfo.url"
          },
          {
           "$id": "400",
           "kind": "property",
           "name": "method",
           "serializedName": "method",
           "description": "The HTTP method of the request (i.e., GET, POST, DELETE).",
           "type": {
            "$id": "401",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           },
           "optional": false,
           "readOnly": false,
           "discriminator": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Face.AuditRequestInfo.method"
          },
          {
           "$id": "402",
           "kind": "property",
           "name": "contentLength",
           "serializedName": "contentLength",
           "description": "The length of the request body in bytes.",
           "type": {
            "$id": "403",
            "kind": "int64",
            "name": "int64",
            "crossLanguageDefinitionId": "TypeSpec.int64",
            "decorators": []
           },
           "optional": true,
           "readOnly": false,
           "discriminator": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Face.AuditRequestInfo.contentLength"
          },
          {
           "$id": "404",
           "kind": "property",
           "name": "contentType",
           "serializedName": "contentType",
           "description": "The content type of the request.",
           "type": {
            "$id": "405",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           },
           "optional": false,
           "readOnly": false,
           "discriminator": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Face.AuditRequestInfo.contentType"
          },
          {
           "$id": "406",
           "kind": "property",
           "name": "userAgent",
           "serializedName": "userAgent",
           "description": "The user agent used to submit the request.",
           "type": {
            "$id": "407",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           },
           "optional": true,
           "readOnly": false,
           "discriminator": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Face.AuditRequestInfo.userAgent"
          }
         ]
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.LivenessSessionAuditEntry.request"
       },
       {
        "$id": "408",
        "kind": "property",
        "name": "response",
        "serializedName": "response",
        "description": "The response of this entry.",
        "type": {
         "$id": "409",
         "kind": "model",
         "name": "AuditLivenessResponseInfo",
         "crossLanguageDefinitionId": "Face.AuditLivenessResponseInfo",
         "usage": "Output,Json",
         "description": "Audit entry for a response in the session.",
         "decorators": [],
         "properties": [
          {
           "$id": "410",
           "kind": "property",
           "name": "body",
           "serializedName": "body",
           "description": "The response body. The schema of this field will depend on the request.url and request.method used by the client.",
           "type": {
            "$id": "411",
            "kind": "model",
            "name": "LivenessResponseBody",
            "crossLanguageDefinitionId": "Face.LivenessResponseBody",
            "usage": "Output,Json",
            "description": "The response body of detect liveness API call.",
            "decorators": [],
            "additionalProperties": {
             "$id": "412",
             "kind": "unknown",
             "name": "unknown",
             "crossLanguageDefinitionId": "",
             "decorators": []
            },
            "properties": [
             {
              "$id": "413",
              "kind": "property",
              "name": "livenessDecision",
              "serializedName": "livenessDecision",
              "description": "The liveness classification for the target face.",
              "type": {
               "$ref": "150"
              },
              "optional": true,
              "readOnly": false,
              "discriminator": false,
              "decorators": [],
              "crossLanguageDefinitionId": "Face.LivenessResponseBody.livenessDecision"
             },
             {
              "$id": "414",
              "kind": "property",
              "name": "target",
              "serializedName": "target",
              "description": "Specific targets used for liveness classification.",
              "type": {
               "$id": "415",
               "kind": "model",
               "name": "LivenessOutputsTarget",
               "crossLanguageDefinitionId": "Face.LivenessOutputsTarget",
               "usage": "Output,Json",
               "description": "The liveness classification for target face.",
               "decorators": [],
               "properties": [
                {
                 "$id": "416",
                 "kind": "property",
                 "name": "faceRectangle",
                 "serializedName": "faceRectangle",
                 "description": "The face region where the liveness classification was made on.",
                 "type": {
                  "$ref": "185"
                 },
                 "optional": false,
                 "readOnly": false,
                 "discriminator": false,
                 "decorators": [],
                 "crossLanguageDefinitionId": "Face.LivenessOutputsTarget.faceRectangle"
                },
                {
                 "$id": "417",
                 "kind": "property",
                 "name": "fileName",
                 "serializedName": "fileName",
                 "description": "The file name which contains the face rectangle where the liveness classification was made on.",
                 "type": {
                  "$id": "418",
                  "kind": "string",
                  "name": "string",
                  "crossLanguageDefinitionId": "TypeSpec.string",
                  "decorators": []
                 },
                 "optional": false,
                 "readOnly": false,
                 "discriminator": false,
                 "decorators": [],
                 "crossLanguageDefinitionId": "Face.LivenessOutputsTarget.fileName"
                },
                {
                 "$id": "419",
                 "kind": "property",
                 "name": "timeOffsetWithinFile",
                 "serializedName": "timeOffsetWithinFile",
                 "description": "The time offset within the file of the frame which contains the face rectangle where the liveness classification was made on.",
                 "type": {
                  "$id": "420",
                  "kind": "int32",
                  "name": "int32",
                  "crossLanguageDefinitionId": "TypeSpec.int32",
                  "decorators": []
                 },
                 "optional": false,
                 "readOnly": false,
                 "discriminator": false,
                 "decorators": [],
                 "crossLanguageDefinitionId": "Face.LivenessOutputsTarget.timeOffsetWithinFile"
                },
                {
                 "$id": "421",
                 "kind": "property",
                 "name": "imageType",
                 "serializedName": "imageType",
                 "description": "The image type which contains the face rectangle where the liveness classification was made on.",
                 "type": {
                  "$ref": "158"
                 },
                 "optional": false,
                 "readOnly": false,
                 "discriminator": false,
                 "decorators": [],
                 "crossLanguageDefinitionId": "Face.LivenessOutputsTarget.imageType"
                }
               ]
              },
              "optional": true,
              "readOnly": false,
              "discriminator": false,
              "decorators": [],
              "crossLanguageDefinitionId": "Face.LivenessResponseBody.target"
             },
             {
              "$id": "422",
              "kind": "property",
              "name": "modelVersionUsed",
              "serializedName": "modelVersionUsed",
              "description": "The model version used for liveness classification.",
              "type": {
               "$ref": "166"
              },
              "optional": true,
              "readOnly": false,
              "discriminator": false,
              "decorators": [],
              "crossLanguageDefinitionId": "Face.LivenessResponseBody.modelVersionUsed"
             },
             {
              "$id": "423",
              "kind": "property",
              "name": "verifyResult",
              "serializedName": "verifyResult",
              "description": "The face verification output. Only available when the request is liveness with verify.",
              "type": {
               "$id": "424",
               "kind": "model",
               "name": "LivenessWithVerifyOutputs",
               "crossLanguageDefinitionId": "Face.LivenessWithVerifyOutputs",
               "usage": "Output,Json",
               "description": "The face verification output.",
               "decorators": [],
               "properties": [
                {
                 "$id": "425",
                 "kind": "property",
                 "name": "verifyImage",
                 "serializedName": "verifyImage",
                 "description": "The detail of face for verification.",
                 "type": {
                  "$id": "426",
                  "kind": "model",
                  "name": "LivenessWithVerifyImage",
                  "crossLanguageDefinitionId": "Face.LivenessWithVerifyImage",
                  "usage": "Output,Json",
                  "description": "The detail of face for verification.",
                  "decorators": [],
                  "properties": [
                   {
                    "$id": "427",
                    "kind": "property",
                    "name": "faceRectangle",
                    "serializedName": "faceRectangle",
                    "description": "The face region where the comparison image's classification was made.",
                    "type": {
                     "$ref": "185"
                    },
                    "optional": false,
                    "readOnly": false,
                    "discriminator": false,
                    "decorators": [],
                    "crossLanguageDefinitionId": "Face.LivenessWithVerifyImage.faceRectangle"
                   },
                   {
                    "$id": "428",
                    "kind": "property",
                    "name": "qualityForRecognition",
                    "serializedName": "qualityForRecognition",
                    "description": "Quality of face image for recognition.",
                    "type": {
                     "$ref": "118"
                    },
                    "optional": false,
                    "readOnly": false,
                    "discriminator": false,
                    "decorators": [],
                    "crossLanguageDefinitionId": "Face.LivenessWithVerifyImage.qualityForRecognition"
                   }
                  ]
                 },
                 "optional": false,
                 "readOnly": false,
                 "discriminator": false,
                 "decorators": [],
                 "crossLanguageDefinitionId": "Face.LivenessWithVerifyOutputs.verifyImage"
                },
                {
                 "$id": "429",
                 "kind": "property",
                 "name": "matchConfidence",
                 "serializedName": "matchConfidence",
                 "description": "The target face liveness face and comparison image face verification confidence.",
                 "type": {
                  "$id": "430",
                  "kind": "float32",
                  "name": "float32",
                  "crossLanguageDefinitionId": "TypeSpec.float32",
                  "decorators": []
                 },
                 "optional": false,
                 "readOnly": false,
                 "discriminator": false,
                 "decorators": [],
                 "crossLanguageDefinitionId": "Face.LivenessWithVerifyOutputs.matchConfidence"
                },
                {
                 "$id": "431",
                 "kind": "property",
                 "name": "isIdentical",
                 "serializedName": "isIdentical",
                 "description": "Whether the target liveness face and comparison image face match.",
                 "type": {
                  "$id": "432",
                  "kind": "boolean",
                  "name": "boolean",
                  "crossLanguageDefinitionId": "TypeSpec.boolean",
                  "decorators": []
                 },
                 "optional": false,
                 "readOnly": false,
                 "discriminator": false,
                 "decorators": [],
                 "crossLanguageDefinitionId": "Face.LivenessWithVerifyOutputs.isIdentical"
                }
               ]
              },
              "optional": true,
              "readOnly": false,
              "discriminator": false,
              "decorators": [],
              "crossLanguageDefinitionId": "Face.LivenessResponseBody.verifyResult"
             }
            ]
           },
           "optional": false,
           "readOnly": false,
           "discriminator": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Face.AuditLivenessResponseInfo.body"
          },
          {
           "$id": "433",
           "kind": "property",
           "name": "statusCode",
           "serializedName": "statusCode",
           "description": "The HTTP status code returned to the client.",
           "type": {
            "$id": "434",
            "kind": "int32",
            "name": "int32",
            "crossLanguageDefinitionId": "TypeSpec.int32",
            "decorators": []
           },
           "optional": false,
           "readOnly": false,
           "discriminator": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Face.AuditLivenessResponseInfo.statusCode"
          },
          {
           "$id": "435",
           "kind": "property",
           "name": "latencyInMilliseconds",
           "serializedName": "latencyInMilliseconds",
           "description": "The server measured latency for this request in milliseconds.",
           "type": {
            "$id": "436",
            "kind": "int64",
            "name": "int64",
            "crossLanguageDefinitionId": "TypeSpec.int64",
            "decorators": []
           },
           "optional": false,
           "readOnly": false,
           "discriminator": false,
           "decorators": [],
           "crossLanguageDefinitionId": "Face.AuditLivenessResponseInfo.latencyInMilliseconds"
          }
         ]
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.LivenessSessionAuditEntry.response"
       },
       {
        "$id": "437",
        "kind": "property",
        "name": "digest",
        "serializedName": "digest",
        "description": "The server calculated digest for this request. If the client reported digest differs from the server calculated digest, then the message integrity between the client and service has been compromised and the result should not be trusted. For more information, see how to guides on how to leverage this value to secure your end-to-end solution.",
        "type": {
         "$id": "438",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Face.LivenessSessionAuditEntry.digest"
       }
      ]
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.LivenessSession.result"
    }
   ]
  },
  {
   "$ref": "384"
  },
  {
   "$ref": "397"
  },
  {
   "$ref": "409"
  },
  {
   "$ref": "411"
  },
  {
   "$ref": "415"
  },
  {
   "$ref": "424"
  },
  {
   "$ref": "426"
  },
  {
   "$id": "439",
   "kind": "model",
   "name": "LivenessSessionItem",
   "crossLanguageDefinitionId": "Face.LivenessSessionItem",
   "usage": "Output,Json",
   "description": "Session data returned for enumeration.",
   "decorators": [],
   "properties": [
    {
     "$id": "440",
     "kind": "property",
     "name": "id",
     "serializedName": "id",
     "description": "The unique ID to reference this session.",
     "type": {
      "$id": "441",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": true,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.LivenessSessionItem.id"
    },
    {
     "$id": "442",
     "kind": "property",
     "name": "createdDateTime",
     "serializedName": "createdDateTime",
     "description": "DateTime when this session was created.",
     "type": {
      "$id": "443",
      "kind": "utcDateTime",
      "name": "utcDateTime",
      "encode": "rfc3339",
      "wireType": {
       "$id": "444",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.LivenessSessionItem.createdDateTime"
    },
    {
     "$id": "445",
     "kind": "property",
     "name": "sessionStartDateTime",
     "serializedName": "sessionStartDateTime",
     "description": "DateTime when this session was started by the client.",
     "type": {
      "$id": "446",
      "kind": "utcDateTime",
      "name": "utcDateTime",
      "encode": "rfc3339",
      "wireType": {
       "$id": "447",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.LivenessSessionItem.sessionStartDateTime"
    },
    {
     "$id": "448",
     "kind": "property",
     "name": "sessionExpired",
     "serializedName": "sessionExpired",
     "description": "Whether or not the session is expired.",
     "type": {
      "$id": "449",
      "kind": "boolean",
      "name": "boolean",
      "crossLanguageDefinitionId": "TypeSpec.boolean",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.LivenessSessionItem.sessionExpired"
    },
    {
     "$id": "450",
     "kind": "property",
     "name": "deviceCorrelationId",
     "serializedName": "deviceCorrelationId",
     "description": "Unique Guid per each end-user device. This is to provide rate limiting and anti-hammering. If 'deviceCorrelationIdSetInClient' is true in this request, this 'deviceCorrelationId' must be null.",
     "type": {
      "$id": "451",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.LivenessSessionItem.deviceCorrelationId"
    },
    {
     "$id": "452",
     "kind": "property",
     "name": "authTokenTimeToLiveInSeconds",
     "serializedName": "authTokenTimeToLiveInSeconds",
     "description": "Seconds the session should last for. Range is 60 to 86400 seconds. Default value is 600.",
     "type": {
      "$id": "453",
      "kind": "int32",
      "name": "int32",
      "crossLanguageDefinitionId": "TypeSpec.int32",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.LivenessSessionItem.authTokenTimeToLiveInSeconds"
    }
   ]
  },
  {
   "$id": "454",
   "kind": "model",
   "name": "CreateLivenessWithVerifySessionResult",
   "crossLanguageDefinitionId": "Face.CreateLivenessWithVerifySessionResult",
   "access": "public",
   "usage": "Output,Json",
   "description": "Response of liveness session with verify creation with verify image provided.",
   "decorators": [],
   "properties": [
    {
     "$id": "455",
     "kind": "property",
     "name": "sessionId",
     "serializedName": "sessionId",
     "description": "The unique session ID of the created session. It will expire 48 hours after it was created or may be deleted sooner using the corresponding Session DELETE operation.",
     "type": {
      "$id": "456",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.CreateLivenessWithVerifySessionResult.sessionId"
    },
    {
     "$id": "457",
     "kind": "property",
     "name": "authToken",
     "serializedName": "authToken",
     "description": "Bearer token to provide authentication for the Vision SDK running on a client application. This Bearer token has limited permissions to perform only the required action and expires after the TTL time. It is also auditable.",
     "type": {
      "$id": "458",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.CreateLivenessWithVerifySessionResult.authToken"
    },
    {
     "$id": "459",
     "kind": "property",
     "name": "verifyImage",
     "serializedName": "verifyImage",
     "description": "The detail of face for verification.",
     "type": {
      "$ref": "426"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.CreateLivenessWithVerifySessionResult.verifyImage"
    }
   ]
  },
  {
   "$id": "460",
   "kind": "model",
   "name": "CreateLivenessWithVerifySessionContent",
   "crossLanguageDefinitionId": "Face.CreateLivenessWithVerifySessionContent",
   "usage": "Input,MultipartFormData",
   "description": "Request of liveness with verify session creation.",
   "decorators": [],
   "properties": [
    {
     "$id": "461",
     "kind": "property",
     "name": "Parameters",
     "serializedName": "Parameters",
     "description": "The parameters for creating session.",
     "type": {
      "$ref": "352"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.CreateLivenessWithVerifySessionContent.Parameters"
    },
    {
     "$id": "462",
     "kind": "property",
     "name": "VerifyImage",
     "serializedName": "VerifyImage",
     "description": "The image stream for verify. Content-Disposition header field for this part must have filename.",
     "type": {
      "$id": "463",
      "kind": "bytes",
      "name": "bytes",
      "encode": "base64",
      "crossLanguageDefinitionId": "TypeSpec.bytes",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.CreateLivenessWithVerifySessionContent.VerifyImage"
    }
   ]
  },
  {
   "$id": "464",
   "kind": "model",
   "name": "LivenessWithVerifySession",
   "crossLanguageDefinitionId": "Face.LivenessWithVerifySession",
   "usage": "Output,Json",
   "description": "Session result of detect liveness with verify.",
   "decorators": [],
   "properties": [
    {
     "$id": "465",
     "kind": "property",
     "name": "id",
     "serializedName": "id",
     "description": "The unique ID to reference this session.",
     "type": {
      "$id": "466",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": false,
     "readOnly": true,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.LivenessWithVerifySession.id"
    },
    {
     "$id": "467",
     "kind": "property",
     "name": "createdDateTime",
     "serializedName": "createdDateTime",
     "description": "DateTime when this session was created.",
     "type": {
      "$id": "468",
      "kind": "utcDateTime",
      "name": "utcDateTime",
      "encode": "rfc3339",
      "wireType": {
       "$id": "469",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.LivenessWithVerifySession.createdDateTime"
    },
    {
     "$id": "470",
     "kind": "property",
     "name": "sessionStartDateTime",
     "serializedName": "sessionStartDateTime",
     "description": "DateTime when this session was started by the client.",
     "type": {
      "$id": "471",
      "kind": "utcDateTime",
      "name": "utcDateTime",
      "encode": "rfc3339",
      "wireType": {
       "$id": "472",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string",
       "decorators": []
      },
      "crossLanguageDefinitionId": "TypeSpec.utcDateTime",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.LivenessWithVerifySession.sessionStartDateTime"
    },
    {
     "$id": "473",
     "kind": "property",
     "name": "sessionExpired",
     "serializedName": "sessionExpired",
     "description": "Whether or not the session is expired.",
     "type": {
      "$id": "474",
      "kind": "boolean",
      "name": "boolean",
      "crossLanguageDefinitionId": "TypeSpec.boolean",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.LivenessWithVerifySession.sessionExpired"
    },
    {
     "$id": "475",
     "kind": "property",
     "name": "deviceCorrelationId",
     "serializedName": "deviceCorrelationId",
     "description": "Unique Guid per each end-user device. This is to provide rate limiting and anti-hammering. If 'deviceCorrelationIdSetInClient' is true in this request, this 'deviceCorrelationId' must be null.",
     "type": {
      "$id": "476",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.LivenessWithVerifySession.deviceCorrelationId"
    },
    {
     "$id": "477",
     "kind": "property",
     "name": "authTokenTimeToLiveInSeconds",
     "serializedName": "authTokenTimeToLiveInSeconds",
     "description": "Seconds the session should last for. Range is 60 to 86400 seconds. Default value is 600.",
     "type": {
      "$id": "478",
      "kind": "int32",
      "name": "int32",
      "crossLanguageDefinitionId": "TypeSpec.int32",
      "decorators": []
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.LivenessWithVerifySession.authTokenTimeToLiveInSeconds"
    },
    {
     "$id": "479",
     "kind": "property",
     "name": "status",
     "serializedName": "status",
     "description": "The current status of the session.",
     "type": {
      "$ref": "142"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.LivenessWithVerifySession.status"
    },
    {
     "$id": "480",
     "kind": "property",
     "name": "result",
     "serializedName": "result",
     "description": "The latest session audit result only populated if status == 'ResultAvailable'.",
     "type": {
      "$ref": "384"
     },
     "optional": true,
     "readOnly": false,
     "discriminator": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Face.LivenessWithVerifySession.result"
    }
   ]
  }
 ],
 "Clients": [
  {
   "$id": "481",
   "Name": "FaceClient",
   "Operations": [
    {
     "$id": "482",
     "Name": "detectFromUrlImpl",
     "ResourceName": "FaceClient",
     "Summary": "Detect human faces in an image, return face rectangles, and optionally with faceIds, landmarks, and attributes.",
     "Description": "> [!IMPORTANT]\n> To mitigate potential misuse that can subject people to stereotyping, discrimination, or unfair denial of services, we are retiring Face API attributes that predict emotion, gender, age, smile, facial hair, hair, and makeup. Read more about this decision https://azure.microsoft.com/blog/responsible-ai-investments-and-safeguards-for-facial-recognition/.\n\n*\n  * No image will be stored. Only the extracted face feature(s) will be stored on server. The faceId is an identifier of the face feature and will be used in \"Identify\", \"Verify\", and \"Find Similar\". The stored face features will expire and be deleted at the time specified by faceIdTimeToLive after the original detection call.\n  * Optional parameters include faceId, landmarks, and attributes. Attributes include headPose, glasses, occlusion, accessories, blur, exposure, noise, mask, and qualityForRecognition. Some of the results returned for specific attributes may not be highly accurate.\n  * JPEG, PNG, GIF (the first frame), and BMP format are supported. The allowed image file size is from 1KB to 6MB.\n  * The minimum detectable face size is 36x36 pixels in an image no larger than 1920x1080 pixels. Images with dimensions higher than 1920x1080 pixels will need a proportionally larger minimum face size.\n  * Up to 100 faces can be returned for an image. Faces are ranked by face rectangle size from large to small.\n  * For optimal results when querying \"Identify\", \"Verify\", and \"Find Similar\" ('returnFaceId' is true), please use faces that are: frontal, clear, and with a minimum size of 200x200 pixels (100 pixels between eyes).\n  * Different 'detectionModel' values can be provided. To use and compare different detection models, please refer to https://learn.microsoft.com/azure/ai-services/computer-vision/how-to/specify-detection-model\n    * 'detection_02': Face attributes and landmarks are disabled if you choose this detection model.\n    * 'detection_03': Face attributes (mask, blur, and headPose) and landmarks are supported if you choose this detection model.\n  * Different 'recognitionModel' values are provided. If follow-up operations like \"Verify\", \"Identify\", \"Find Similar\" are needed, please specify the recognition model with 'recognitionModel' parameter. The default value for 'recognitionModel' is 'recognition_01', if latest model needed, please explicitly specify the model you need in this parameter. Once specified, the detected faceIds will be associated with the specified recognition model. More details, please refer to https://learn.microsoft.com/azure/ai-services/computer-vision/how-to/specify-recognition-model.",
     "Accessibility": "internal",
     "Parameters": [
      {
       "$id": "483",
       "Name": "endpoint",
       "NameInRequest": "endpoint",
       "Description": "Supported Cognitive Services endpoints (protocol and hostname, for example:\nhttps://{resource-name}.cognitiveservices.azure.com).",
       "Type": {
        "$id": "484",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "Location": "Uri",
       "IsApiVersion": false,
       "IsResourceParameter": false,
       "IsContentType": false,
       "IsRequired": true,
       "IsEndpoint": true,
       "SkipUrlEncoding": false,
       "Explode": false,
       "Kind": "Client"
      },
      {
       "$id": "485",
       "Name": "apiVersion",
       "NameInRequest": "apiVersion",
       "Description": "API Version",
       "Type": {
        "$ref": "132"
       },
       "Location": "Uri",
       "IsApiVersion": true,
       "IsResourceParameter": false,
       "IsContentType": false,
       "IsRequired": true,
       "IsEndpoint": false,
       "SkipUrlEncoding": false,
       "Explode": false,
       "Kind": "Client",
       "DefaultValue": {
        "$id": "486",
        "Type": {
         "$id": "487",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "v1.1-preview.1"
       }
      },
      {
       "$id": "488",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Description": "The format of the HTTP payload.",
       "Type": {
        "$id": "489",
        "kind": "constant",
        "valueType": {
         "$id": "490",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "491",
       "Name": "detectionModel",
       "NameInRequest": "detectionModel",
       "Description": "The 'detectionModel' associated with the detected faceIds. Supported 'detectionModel' values include 'detection_01', 'detection_02' and 'detection_03'. The default value is 'detection_01'.",
       "Type": {
        "$ref": "2"
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "492",
       "Name": "recognitionModel",
       "NameInRequest": "recognitionModel",
       "Description": "The 'recognitionModel' associated with the detected faceIds. Supported 'recognitionModel' values include 'recognition_01', 'recognition_02', 'recognition_03' or 'recognition_04'. The default value is 'recognition_01'. 'recognition_04' is recommended since its accuracy is improved on faces wearing masks compared with 'recognition_03', and its overall accuracy is improved compared with 'recognition_01' and 'recognition_02'.",
       "Type": {
        "$ref": "10"
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "493",
       "Name": "returnFaceId",
       "NameInRequest": "returnFaceId",
       "Description": "Return faceIds of the detected faces or not. The default value is true.",
       "Type": {
        "$id": "494",
        "kind": "boolean",
        "name": "boolean",
        "crossLanguageDefinitionId": "TypeSpec.boolean",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "495",
       "Name": "returnFaceAttributes",
       "NameInRequest": "returnFaceAttributes",
       "Description": "Analyze and return the one or more specified face attributes in the comma-separated string like 'returnFaceAttributes=headPose,glasses'. Face attribute analysis has additional computational and time cost.",
       "Type": {
        "$id": "496",
        "kind": "array",
        "name": "ArrayFaceAttributeType",
        "valueType": {
         "$ref": "20"
        },
        "crossLanguageDefinitionId": "TypeSpec.Array",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "ArraySerializationDelimiter": ",",
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "497",
       "Name": "returnFaceLandmarks",
       "NameInRequest": "returnFaceLandmarks",
       "Description": "Return face landmarks of the detected faces or not. The default value is false.",
       "Type": {
        "$id": "498",
        "kind": "boolean",
        "name": "boolean",
        "crossLanguageDefinitionId": "TypeSpec.boolean",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "499",
       "Name": "returnRecognitionModel",
       "NameInRequest": "returnRecognitionModel",
       "Description": "Return 'recognitionModel' or not. The default value is false. This is only applicable when returnFaceId = true.",
       "Type": {
        "$id": "500",
        "kind": "boolean",
        "name": "boolean",
        "crossLanguageDefinitionId": "TypeSpec.boolean",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "501",
       "Name": "faceIdTimeToLive",
       "NameInRequest": "faceIdTimeToLive",
       "Description": "The number of seconds for the face ID being cached. Supported range from 60 seconds up to 86400 seconds. The default value is 86400 (24 hours).",
       "Type": {
        "$id": "502",
        "kind": "int32",
        "name": "int32",
        "crossLanguageDefinitionId": "TypeSpec.int32",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "503",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "504",
        "kind": "constant",
        "valueType": {
         "$id": "505",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "506",
       "Name": "detectFromUrlRequest",
       "NameInRequest": "detectFromUrlRequest",
       "Type": {
        "$ref": "176"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Spread",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "507",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$id": "508",
        "kind": "array",
        "name": "ArrayFaceDetectionResult",
        "valueType": {
         "$ref": "179"
        },
        "crossLanguageDefinitionId": "TypeSpec.Array",
        "decorators": []
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{endpoint}/face/{apiVersion}",
     "Path": "/detect",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "ClientCustomizations.FaceClient.detectFromUrl",
     "Decorators": [],
     "Examples": [
      {
       "$id": "509",
       "kind": "http",
       "name": "Detect with Image URL",
       "description": "Detect with Image URL",
       "filePath": "v1.1-preview.1/DetectFromUrl.json",
       "parameters": [
        {
         "$id": "510",
         "parameter": {
          "$ref": "493"
         },
         "value": {
          "$id": "511",
          "kind": "boolean",
          "type": {
           "$ref": "494"
          },
          "value": true
         }
        },
        {
         "$id": "512",
         "parameter": {
          "$ref": "497"
         },
         "value": {
          "$id": "513",
          "kind": "boolean",
          "type": {
           "$ref": "498"
          },
          "value": true
         }
        },
        {
         "$id": "514",
         "parameter": {
          "$ref": "492"
         },
         "value": {
          "$id": "515",
          "kind": "string",
          "type": {
           "$ref": "10"
          },
          "value": "recognition_03"
         }
        },
        {
         "$id": "516",
         "parameter": {
          "$ref": "499"
         },
         "value": {
          "$id": "517",
          "kind": "boolean",
          "type": {
           "$ref": "500"
          },
          "value": true
         }
        },
        {
         "$id": "518",
         "parameter": {
          "$ref": "491"
         },
         "value": {
          "$id": "519",
          "kind": "string",
          "type": {
           "$ref": "2"
          },
          "value": "detection_01"
         }
        },
        {
         "$id": "520",
         "parameter": {
          "$ref": "501"
         },
         "value": {
          "$id": "521",
          "kind": "number",
          "type": {
           "$ref": "502"
          },
          "value": 60
         }
        },
        {
         "$id": "522",
         "parameter": {
          "$ref": "506"
         },
         "value": {
          "$id": "523",
          "kind": "model",
          "type": {
           "$ref": "176"
          },
          "value": {
           "$id": "524",
           "url": {
            "$id": "525",
            "kind": "string",
            "type": {
             "$ref": "178"
            },
            "value": "https://microsoft.com/example.jpg"
           }
          }
         }
        }
       ],
       "responses": [
        {
         "$id": "526",
         "response": {
          "$ref": "507"
         },
         "statusCode": 200,
         "bodyValue": {
          "$id": "527",
          "kind": "array",
          "type": {
           "$ref": "508"
          },
          "value": [
           {
            "$id": "528",
            "kind": "model",
            "type": {
             "$ref": "179"
            },
            "value": {
             "$id": "529",
             "faceId": {
              "$id": "530",
              "kind": "string",
              "type": {
               "$ref": "181"
              },
              "value": "c5c24a82-6845-4031-9d5d-978df9175426"
             },
             "recognitionModel": {
              "$id": "531",
              "kind": "string",
              "type": {
               "$ref": "10"
              },
              "value": "recognition_03"
             },
             "faceRectangle": {
              "$id": "532",
              "kind": "model",
              "type": {
               "$ref": "185"
              },
              "value": {
               "$id": "533",
               "width": {
                "$id": "534",
                "kind": "number",
                "type": {
                 "$ref": "191"
                },
                "value": 78
               },
               "height": {
                "$id": "535",
                "kind": "number",
                "type": {
                 "$ref": "193"
                },
                "value": 78
               },
               "left": {
                "$id": "536",
                "kind": "number",
                "type": {
                 "$ref": "189"
                },
                "value": 394
               },
               "top": {
                "$id": "537",
                "kind": "number",
                "type": {
                 "$ref": "187"
                },
                "value": 54
               }
              }
             },
             "faceLandmarks": {
              "$id": "538",
              "kind": "model",
              "type": {
               "$ref": "195"
              },
              "value": {
               "$id": "539",
               "pupilLeft": {
                "$id": "540",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "541",
                 "x": {
                  "$id": "542",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 412.7
                 },
                 "y": {
                  "$id": "543",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 78.4
                 }
                }
               },
               "pupilRight": {
                "$id": "544",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "545",
                 "x": {
                  "$id": "546",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 446.8
                 },
                 "y": {
                  "$id": "547",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 74.2
                 }
                }
               },
               "noseTip": {
                "$id": "548",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "549",
                 "x": {
                  "$id": "550",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 437.7
                 },
                 "y": {
                  "$id": "551",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 92.4
                 }
                }
               },
               "mouthLeft": {
                "$id": "552",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "553",
                 "x": {
                  "$id": "554",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 417.8
                 },
                 "y": {
                  "$id": "555",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 114.4
                 }
                }
               },
               "mouthRight": {
                "$id": "556",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "557",
                 "x": {
                  "$id": "558",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 451.3
                 },
                 "y": {
                  "$id": "559",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 109.3
                 }
                }
               },
               "eyebrowLeftOuter": {
                "$id": "560",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "561",
                 "x": {
                  "$id": "562",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 397.9
                 },
                 "y": {
                  "$id": "563",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 78.5
                 }
                }
               },
               "eyebrowLeftInner": {
                "$id": "564",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "565",
                 "x": {
                  "$id": "566",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 425.4
                 },
                 "y": {
                  "$id": "567",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 70.5
                 }
                }
               },
               "eyeLeftOuter": {
                "$id": "568",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "569",
                 "x": {
                  "$id": "570",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 406.7
                 },
                 "y": {
                  "$id": "571",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 80.6
                 }
                }
               },
               "eyeLeftTop": {
                "$id": "572",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "573",
                 "x": {
                  "$id": "574",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 412.2
                 },
                 "y": {
                  "$id": "575",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 76.2
                 }
                }
               },
               "eyeLeftBottom": {
                "$id": "576",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "577",
                 "x": {
                  "$id": "578",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 413
                 },
                 "y": {
                  "$id": "579",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 80.1
                 }
                }
               },
               "eyeLeftInner": {
                "$id": "580",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "581",
                 "x": {
                  "$id": "582",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 418.9
                 },
                 "y": {
                  "$id": "583",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 78
                 }
                }
               },
               "eyebrowRightInner": {
                "$id": "584",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "585",
                 "x": {
                  "$id": "586",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 4.8
                 },
                 "y": {
                  "$id": "587",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 69.7
                 }
                }
               },
               "eyebrowRightOuter": {
                "$id": "588",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "589",
                 "x": {
                  "$id": "590",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 5.5
                 },
                 "y": {
                  "$id": "591",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 68.5
                 }
                }
               },
               "eyeRightInner": {
                "$id": "592",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "593",
                 "x": {
                  "$id": "594",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 441.5
                 },
                 "y": {
                  "$id": "595",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 75
                 }
                }
               },
               "eyeRightTop": {
                "$id": "596",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "597",
                 "x": {
                  "$id": "598",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 446.4
                 },
                 "y": {
                  "$id": "599",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 71.7
                 }
                }
               },
               "eyeRightBottom": {
                "$id": "600",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "601",
                 "x": {
                  "$id": "602",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 447
                 },
                 "y": {
                  "$id": "603",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 75.3
                 }
                }
               },
               "eyeRightOuter": {
                "$id": "604",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "605",
                 "x": {
                  "$id": "606",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 451.7
                 },
                 "y": {
                  "$id": "607",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 73.4
                 }
                }
               },
               "noseRootLeft": {
                "$id": "608",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "609",
                 "x": {
                  "$id": "610",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 428
                 },
                 "y": {
                  "$id": "611",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 77.1
                 }
                }
               },
               "noseRootRight": {
                "$id": "612",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "613",
                 "x": {
                  "$id": "614",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 435.8
                 },
                 "y": {
                  "$id": "615",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 75.6
                 }
                }
               },
               "noseLeftAlarTop": {
                "$id": "616",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "617",
                 "x": {
                  "$id": "618",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 428.3
                 },
                 "y": {
                  "$id": "619",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 89.7
                 }
                }
               },
               "noseRightAlarTop": {
                "$id": "620",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "621",
                 "x": {
                  "$id": "622",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 442.2
                 },
                 "y": {
                  "$id": "623",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 87
                 }
                }
               },
               "noseLeftAlarOutTip": {
                "$id": "624",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "625",
                 "x": {
                  "$id": "626",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 424.3
                 },
                 "y": {
                  "$id": "627",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 96.4
                 }
                }
               },
               "noseRightAlarOutTip": {
                "$id": "628",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "629",
                 "x": {
                  "$id": "630",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 446.6
                 },
                 "y": {
                  "$id": "631",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 92.5
                 }
                }
               },
               "upperLipTop": {
                "$id": "632",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "633",
                 "x": {
                  "$id": "634",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 437.6
                 },
                 "y": {
                  "$id": "635",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 105.9
                 }
                }
               },
               "upperLipBottom": {
                "$id": "636",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "637",
                 "x": {
                  "$id": "638",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 437.6
                 },
                 "y": {
                  "$id": "639",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 108.2
                 }
                }
               },
               "underLipTop": {
                "$id": "640",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "641",
                 "x": {
                  "$id": "642",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 436.8
                 },
                 "y": {
                  "$id": "643",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 111.4
                 }
                }
               },
               "underLipBottom": {
                "$id": "644",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "645",
                 "x": {
                  "$id": "646",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 437.3
                 },
                 "y": {
                  "$id": "647",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 114.5
                 }
                }
               }
              }
             },
             "faceAttributes": {
              "$id": "648",
              "kind": "model",
              "type": {
               "$ref": "229"
              },
              "value": {
               "$id": "649",
               "glasses": {
                "$id": "650",
                "kind": "string",
                "type": {
                 "$ref": "48"
                },
                "value": "sunglasses"
               },
               "headPose": {
                "$id": "651",
                "kind": "model",
                "type": {
                 "$ref": "244"
                },
                "value": {
                 "$id": "652",
                 "roll": {
                  "$id": "653",
                  "kind": "number",
                  "type": {
                   "$ref": "248"
                  },
                  "value": 2.1
                 },
                 "yaw": {
                  "$id": "654",
                  "kind": "number",
                  "type": {
                   "$ref": "250"
                  },
                  "value": 3
                 },
                 "pitch": {
                  "$id": "655",
                  "kind": "number",
                  "type": {
                   "$ref": "246"
                  },
                  "value": 1.6
                 }
                }
               },
               "occlusion": {
                "$id": "656",
                "kind": "model",
                "type": {
                 "$ref": "264"
                },
                "value": {
                 "$id": "657",
                 "foreheadOccluded": {
                  "$id": "658",
                  "kind": "boolean",
                  "type": {
                   "$ref": "266"
                  },
                  "value": false
                 },
                 "eyeOccluded": {
                  "$id": "659",
                  "kind": "boolean",
                  "type": {
                   "$ref": "268"
                  },
                  "value": false
                 },
                 "mouthOccluded": {
                  "$id": "660",
                  "kind": "boolean",
                  "type": {
                   "$ref": "270"
                  },
                  "value": false
                 }
                }
               },
               "accessories": {
                "$id": "661",
                "kind": "array",
                "type": {
                 "$ref": "272"
                },
                "value": [
                 {
                  "$id": "662",
                  "kind": "model",
                  "type": {
                   "$ref": "273"
                  },
                  "value": {
                   "$id": "663",
                   "type": {
                    "$id": "664",
                    "kind": "string",
                    "type": {
                     "$ref": "76"
                    },
                    "value": "headwear"
                   },
                   "confidence": {
                    "$id": "665",
                    "kind": "number",
                    "type": {
                     "$ref": "276"
                    },
                    "value": 0.99
                   }
                  }
                 },
                 {
                  "$id": "666",
                  "kind": "model",
                  "type": {
                   "$ref": "273"
                  },
                  "value": {
                   "$id": "667",
                   "type": {
                    "$id": "668",
                    "kind": "string",
                    "type": {
                     "$ref": "76"
                    },
                    "value": "glasses"
                   },
                   "confidence": {
                    "$id": "669",
                    "kind": "number",
                    "type": {
                     "$ref": "276"
                    },
                    "value": 1
                   }
                  }
                 },
                 {
                  "$id": "670",
                  "kind": "model",
                  "type": {
                   "$ref": "273"
                  },
                  "value": {
                   "$id": "671",
                   "type": {
                    "$id": "672",
                    "kind": "string",
                    "type": {
                     "$ref": "76"
                    },
                    "value": "mask"
                   },
                   "confidence": {
                    "$id": "673",
                    "kind": "number",
                    "type": {
                     "$ref": "276"
                    },
                    "value": 0.87
                   }
                  }
                 }
                ]
               },
               "blur": {
                "$id": "674",
                "kind": "model",
                "type": {
                 "$ref": "278"
                },
                "value": {
                 "$id": "675",
                 "blurLevel": {
                  "$id": "676",
                  "kind": "string",
                  "type": {
                   "$ref": "84"
                  },
                  "value": "medium"
                 },
                 "value": {
                  "$id": "677",
                  "kind": "number",
                  "type": {
                   "$ref": "281"
                  },
                  "value": 0.51
                 }
                }
               },
               "exposure": {
                "$id": "678",
                "kind": "model",
                "type": {
                 "$ref": "283"
                },
                "value": {
                 "$id": "679",
                 "exposureLevel": {
                  "$id": "680",
                  "kind": "string",
                  "type": {
                   "$ref": "92"
                  },
                  "value": "goodExposure"
                 },
                 "value": {
                  "$id": "681",
                  "kind": "number",
                  "type": {
                   "$ref": "286"
                  },
                  "value": 0.55
                 }
                }
               },
               "noise": {
                "$id": "682",
                "kind": "model",
                "type": {
                 "$ref": "288"
                },
                "value": {
                 "$id": "683",
                 "noiseLevel": {
                  "$id": "684",
                  "kind": "string",
                  "type": {
                   "$ref": "100"
                  },
                  "value": "low"
                 },
                 "value": {
                  "$id": "685",
                  "kind": "number",
                  "type": {
                   "$ref": "291"
                  },
                  "value": 0.12
                 }
                }
               },
               "qualityForRecognition": {
                "$id": "686",
                "kind": "string",
                "type": {
                 "$ref": "118"
                },
                "value": "high"
               }
              }
             }
            }
           }
          ]
         }
        }
       ]
      }
     ]
    },
    {
     "$id": "687",
     "Name": "detectImpl",
     "ResourceName": "FaceClient",
     "Summary": "Detect human faces in an image, return face rectangles, and optionally with faceIds, landmarks, and attributes.",
     "Description": "> [!IMPORTANT]\n> To mitigate potential misuse that can subject people to stereotyping, discrimination, or unfair denial of services, we are retiring Face API attributes that predict emotion, gender, age, smile, facial hair, hair, and makeup. Read more about this decision https://azure.microsoft.com/blog/responsible-ai-investments-and-safeguards-for-facial-recognition/.\n\n*\n  * No image will be stored. Only the extracted face feature(s) will be stored on server. The faceId is an identifier of the face feature and will be used in \"Identify\", \"Verify\", and \"Find Similar\". The stored face features will expire and be deleted at the time specified by faceIdTimeToLive after the original detection call.\n  * Optional parameters include faceId, landmarks, and attributes. Attributes include headPose, glasses, occlusion, accessories, blur, exposure, noise, mask, and qualityForRecognition. Some of the results returned for specific attributes may not be highly accurate.\n  * JPEG, PNG, GIF (the first frame), and BMP format are supported. The allowed image file size is from 1KB to 6MB.\n  * The minimum detectable face size is 36x36 pixels in an image no larger than 1920x1080 pixels. Images with dimensions higher than 1920x1080 pixels will need a proportionally larger minimum face size.\n  * Up to 100 faces can be returned for an image. Faces are ranked by face rectangle size from large to small.\n  * For optimal results when querying \"Identify\", \"Verify\", and \"Find Similar\" ('returnFaceId' is true), please use faces that are: frontal, clear, and with a minimum size of 200x200 pixels (100 pixels between eyes).\n  * Different 'detectionModel' values can be provided. To use and compare different detection models, please refer to https://learn.microsoft.com/azure/ai-services/computer-vision/how-to/specify-detection-model\n    * 'detection_02': Face attributes and landmarks are disabled if you choose this detection model.\n    * 'detection_03': Face attributes (mask, blur, and headPose) and landmarks are supported if you choose this detection model.\n  * Different 'recognitionModel' values are provided. If follow-up operations like \"Verify\", \"Identify\", \"Find Similar\" are needed, please specify the recognition model with 'recognitionModel' parameter. The default value for 'recognitionModel' is 'recognition_01', if latest model needed, please explicitly specify the model you need in this parameter. Once specified, the detected faceIds will be associated with the specified recognition model. More details, please refer to https://learn.microsoft.com/azure/ai-services/computer-vision/how-to/specify-recognition-model.",
     "Accessibility": "internal",
     "Parameters": [
      {
       "$ref": "483"
      },
      {
       "$ref": "485"
      },
      {
       "$id": "688",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Description": "The format of the HTTP payload.",
       "Type": {
        "$id": "689",
        "kind": "constant",
        "valueType": {
         "$id": "690",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/octet-stream",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "691",
       "Name": "detectionModel",
       "NameInRequest": "detectionModel",
       "Description": "The 'detectionModel' associated with the detected faceIds. Supported 'detectionModel' values include 'detection_01', 'detection_02' and 'detection_03'. The default value is 'detection_01'.",
       "Type": {
        "$ref": "2"
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "692",
       "Name": "recognitionModel",
       "NameInRequest": "recognitionModel",
       "Description": "The 'recognitionModel' associated with the detected faceIds. Supported 'recognitionModel' values include 'recognition_01', 'recognition_02', 'recognition_03' or 'recognition_04'. The default value is 'recognition_01'. 'recognition_04' is recommended since its accuracy is improved on faces wearing masks compared with 'recognition_03', and its overall accuracy is improved compared with 'recognition_01' and 'recognition_02'.",
       "Type": {
        "$ref": "10"
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "693",
       "Name": "returnFaceId",
       "NameInRequest": "returnFaceId",
       "Description": "Return faceIds of the detected faces or not. The default value is true.",
       "Type": {
        "$id": "694",
        "kind": "boolean",
        "name": "boolean",
        "crossLanguageDefinitionId": "TypeSpec.boolean",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "695",
       "Name": "returnFaceAttributes",
       "NameInRequest": "returnFaceAttributes",
       "Description": "Analyze and return the one or more specified face attributes in the comma-separated string like 'returnFaceAttributes=headPose,glasses'. Face attribute analysis has additional computational and time cost.",
       "Type": {
        "$id": "696",
        "kind": "array",
        "name": "ArrayFaceAttributeType",
        "valueType": {
         "$ref": "20"
        },
        "crossLanguageDefinitionId": "TypeSpec.Array",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "ArraySerializationDelimiter": ",",
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "697",
       "Name": "returnFaceLandmarks",
       "NameInRequest": "returnFaceLandmarks",
       "Description": "Return face landmarks of the detected faces or not. The default value is false.",
       "Type": {
        "$id": "698",
        "kind": "boolean",
        "name": "boolean",
        "crossLanguageDefinitionId": "TypeSpec.boolean",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "699",
       "Name": "returnRecognitionModel",
       "NameInRequest": "returnRecognitionModel",
       "Description": "Return 'recognitionModel' or not. The default value is false. This is only applicable when returnFaceId = true.",
       "Type": {
        "$id": "700",
        "kind": "boolean",
        "name": "boolean",
        "crossLanguageDefinitionId": "TypeSpec.boolean",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "701",
       "Name": "faceIdTimeToLive",
       "NameInRequest": "faceIdTimeToLive",
       "Description": "The number of seconds for the face ID being cached. Supported range from 60 seconds up to 86400 seconds. The default value is 86400 (24 hours).",
       "Type": {
        "$id": "702",
        "kind": "int32",
        "name": "int32",
        "crossLanguageDefinitionId": "TypeSpec.int32",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "703",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "704",
        "kind": "constant",
        "valueType": {
         "$id": "705",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "706",
       "Name": "imageContent",
       "NameInRequest": "imageContent",
       "Description": "The input image binary.",
       "Type": {
        "$id": "707",
        "kind": "bytes",
        "name": "bytes",
        "crossLanguageDefinitionId": "TypeSpec.bytes",
        "decorators": []
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "708",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$id": "709",
        "kind": "array",
        "name": "ArrayFaceDetectionResult",
        "valueType": {
         "$ref": "179"
        },
        "crossLanguageDefinitionId": "TypeSpec.Array",
        "decorators": []
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Binary",
     "Uri": "{endpoint}/face/{apiVersion}",
     "Path": "/detect",
     "RequestMediaTypes": [
      "application/octet-stream"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "ClientCustomizations.FaceClient.detect",
     "Decorators": [],
     "Examples": [
      {
       "$id": "710",
       "kind": "http",
       "name": "Detect with Image",
       "description": "Detect with Image",
       "filePath": "v1.1-preview.1/Detect.json",
       "parameters": [
        {
         "$id": "711",
         "parameter": {
          "$ref": "693"
         },
         "value": {
          "$id": "712",
          "kind": "boolean",
          "type": {
           "$ref": "694"
          },
          "value": true
         }
        },
        {
         "$id": "713",
         "parameter": {
          "$ref": "697"
         },
         "value": {
          "$id": "714",
          "kind": "boolean",
          "type": {
           "$ref": "698"
          },
          "value": true
         }
        },
        {
         "$id": "715",
         "parameter": {
          "$ref": "692"
         },
         "value": {
          "$id": "716",
          "kind": "string",
          "type": {
           "$ref": "10"
          },
          "value": "recognition_03"
         }
        },
        {
         "$id": "717",
         "parameter": {
          "$ref": "699"
         },
         "value": {
          "$id": "718",
          "kind": "boolean",
          "type": {
           "$ref": "700"
          },
          "value": true
         }
        },
        {
         "$id": "719",
         "parameter": {
          "$ref": "691"
         },
         "value": {
          "$id": "720",
          "kind": "string",
          "type": {
           "$ref": "2"
          },
          "value": "detection_01"
         }
        },
        {
         "$id": "721",
         "parameter": {
          "$ref": "701"
         },
         "value": {
          "$id": "722",
          "kind": "number",
          "type": {
           "$ref": "702"
          },
          "value": 60
         }
        },
        {
         "$id": "723",
         "parameter": {
          "$ref": "706"
         },
         "value": {
          "$id": "724",
          "kind": "string",
          "type": {
           "$ref": "707"
          },
          "value": "<your-image-bytes-here>"
         }
        }
       ],
       "responses": [
        {
         "$id": "725",
         "response": {
          "$ref": "708"
         },
         "statusCode": 200,
         "bodyValue": {
          "$id": "726",
          "kind": "array",
          "type": {
           "$ref": "709"
          },
          "value": [
           {
            "$id": "727",
            "kind": "model",
            "type": {
             "$ref": "179"
            },
            "value": {
             "$id": "728",
             "faceId": {
              "$id": "729",
              "kind": "string",
              "type": {
               "$ref": "181"
              },
              "value": "c5c24a82-6845-4031-9d5d-978df9175426"
             },
             "recognitionModel": {
              "$id": "730",
              "kind": "string",
              "type": {
               "$ref": "10"
              },
              "value": "recognition_03"
             },
             "faceRectangle": {
              "$id": "731",
              "kind": "model",
              "type": {
               "$ref": "185"
              },
              "value": {
               "$id": "732",
               "width": {
                "$id": "733",
                "kind": "number",
                "type": {
                 "$ref": "191"
                },
                "value": 78
               },
               "height": {
                "$id": "734",
                "kind": "number",
                "type": {
                 "$ref": "193"
                },
                "value": 78
               },
               "left": {
                "$id": "735",
                "kind": "number",
                "type": {
                 "$ref": "189"
                },
                "value": 394
               },
               "top": {
                "$id": "736",
                "kind": "number",
                "type": {
                 "$ref": "187"
                },
                "value": 54
               }
              }
             },
             "faceLandmarks": {
              "$id": "737",
              "kind": "model",
              "type": {
               "$ref": "195"
              },
              "value": {
               "$id": "738",
               "pupilLeft": {
                "$id": "739",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "740",
                 "x": {
                  "$id": "741",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 412.7
                 },
                 "y": {
                  "$id": "742",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 78.4
                 }
                }
               },
               "pupilRight": {
                "$id": "743",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "744",
                 "x": {
                  "$id": "745",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 446.8
                 },
                 "y": {
                  "$id": "746",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 74.2
                 }
                }
               },
               "noseTip": {
                "$id": "747",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "748",
                 "x": {
                  "$id": "749",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 437.7
                 },
                 "y": {
                  "$id": "750",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 92.4
                 }
                }
               },
               "mouthLeft": {
                "$id": "751",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "752",
                 "x": {
                  "$id": "753",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 417.8
                 },
                 "y": {
                  "$id": "754",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 114.4
                 }
                }
               },
               "mouthRight": {
                "$id": "755",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "756",
                 "x": {
                  "$id": "757",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 451.3
                 },
                 "y": {
                  "$id": "758",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 109.3
                 }
                }
               },
               "eyebrowLeftOuter": {
                "$id": "759",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "760",
                 "x": {
                  "$id": "761",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 397.9
                 },
                 "y": {
                  "$id": "762",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 78.5
                 }
                }
               },
               "eyebrowLeftInner": {
                "$id": "763",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "764",
                 "x": {
                  "$id": "765",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 425.4
                 },
                 "y": {
                  "$id": "766",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 70.5
                 }
                }
               },
               "eyeLeftOuter": {
                "$id": "767",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "768",
                 "x": {
                  "$id": "769",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 406.7
                 },
                 "y": {
                  "$id": "770",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 80.6
                 }
                }
               },
               "eyeLeftTop": {
                "$id": "771",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "772",
                 "x": {
                  "$id": "773",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 412.2
                 },
                 "y": {
                  "$id": "774",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 76.2
                 }
                }
               },
               "eyeLeftBottom": {
                "$id": "775",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "776",
                 "x": {
                  "$id": "777",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 413
                 },
                 "y": {
                  "$id": "778",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 80.1
                 }
                }
               },
               "eyeLeftInner": {
                "$id": "779",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "780",
                 "x": {
                  "$id": "781",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 418.9
                 },
                 "y": {
                  "$id": "782",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 78
                 }
                }
               },
               "eyebrowRightInner": {
                "$id": "783",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "784",
                 "x": {
                  "$id": "785",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 4.8
                 },
                 "y": {
                  "$id": "786",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 69.7
                 }
                }
               },
               "eyebrowRightOuter": {
                "$id": "787",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "788",
                 "x": {
                  "$id": "789",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 5.5
                 },
                 "y": {
                  "$id": "790",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 68.5
                 }
                }
               },
               "eyeRightInner": {
                "$id": "791",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "792",
                 "x": {
                  "$id": "793",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 441.5
                 },
                 "y": {
                  "$id": "794",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 75
                 }
                }
               },
               "eyeRightTop": {
                "$id": "795",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "796",
                 "x": {
                  "$id": "797",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 446.4
                 },
                 "y": {
                  "$id": "798",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 71.7
                 }
                }
               },
               "eyeRightBottom": {
                "$id": "799",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "800",
                 "x": {
                  "$id": "801",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 447
                 },
                 "y": {
                  "$id": "802",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 75.3
                 }
                }
               },
               "eyeRightOuter": {
                "$id": "803",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "804",
                 "x": {
                  "$id": "805",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 451.7
                 },
                 "y": {
                  "$id": "806",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 73.4
                 }
                }
               },
               "noseRootLeft": {
                "$id": "807",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "808",
                 "x": {
                  "$id": "809",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 428
                 },
                 "y": {
                  "$id": "810",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 77.1
                 }
                }
               },
               "noseRootRight": {
                "$id": "811",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "812",
                 "x": {
                  "$id": "813",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 435.8
                 },
                 "y": {
                  "$id": "814",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 75.6
                 }
                }
               },
               "noseLeftAlarTop": {
                "$id": "815",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "816",
                 "x": {
                  "$id": "817",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 428.3
                 },
                 "y": {
                  "$id": "818",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 89.7
                 }
                }
               },
               "noseRightAlarTop": {
                "$id": "819",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "820",
                 "x": {
                  "$id": "821",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 442.2
                 },
                 "y": {
                  "$id": "822",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 87
                 }
                }
               },
               "noseLeftAlarOutTip": {
                "$id": "823",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "824",
                 "x": {
                  "$id": "825",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 424.3
                 },
                 "y": {
                  "$id": "826",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 96.4
                 }
                }
               },
               "noseRightAlarOutTip": {
                "$id": "827",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "828",
                 "x": {
                  "$id": "829",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 446.6
                 },
                 "y": {
                  "$id": "830",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 92.5
                 }
                }
               },
               "upperLipTop": {
                "$id": "831",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "832",
                 "x": {
                  "$id": "833",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 437.6
                 },
                 "y": {
                  "$id": "834",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 105.9
                 }
                }
               },
               "upperLipBottom": {
                "$id": "835",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "836",
                 "x": {
                  "$id": "837",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 437.6
                 },
                 "y": {
                  "$id": "838",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 108.2
                 }
                }
               },
               "underLipTop": {
                "$id": "839",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "840",
                 "x": {
                  "$id": "841",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 436.8
                 },
                 "y": {
                  "$id": "842",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 111.4
                 }
                }
               },
               "underLipBottom": {
                "$id": "843",
                "kind": "model",
                "type": {
                 "$ref": "197"
                },
                "value": {
                 "$id": "844",
                 "x": {
                  "$id": "845",
                  "kind": "number",
                  "type": {
                   "$ref": "199"
                  },
                  "value": 437.3
                 },
                 "y": {
                  "$id": "846",
                  "kind": "number",
                  "type": {
                   "$ref": "201"
                  },
                  "value": 114.5
                 }
                }
               }
              }
             },
             "faceAttributes": {
              "$id": "847",
              "kind": "model",
              "type": {
               "$ref": "229"
              },
              "value": {
               "$id": "848",
               "glasses": {
                "$id": "849",
                "kind": "string",
                "type": {
                 "$ref": "48"
                },
                "value": "sunglasses"
               },
               "headPose": {
                "$id": "850",
                "kind": "model",
                "type": {
                 "$ref": "244"
                },
                "value": {
                 "$id": "851",
                 "roll": {
                  "$id": "852",
                  "kind": "number",
                  "type": {
                   "$ref": "248"
                  },
                  "value": 2.1
                 },
                 "yaw": {
                  "$id": "853",
                  "kind": "number",
                  "type": {
                   "$ref": "250"
                  },
                  "value": 3
                 },
                 "pitch": {
                  "$id": "854",
                  "kind": "number",
                  "type": {
                   "$ref": "246"
                  },
                  "value": 1.6
                 }
                }
               },
               "occlusion": {
                "$id": "855",
                "kind": "model",
                "type": {
                 "$ref": "264"
                },
                "value": {
                 "$id": "856",
                 "foreheadOccluded": {
                  "$id": "857",
                  "kind": "boolean",
                  "type": {
                   "$ref": "266"
                  },
                  "value": false
                 },
                 "eyeOccluded": {
                  "$id": "858",
                  "kind": "boolean",
                  "type": {
                   "$ref": "268"
                  },
                  "value": false
                 },
                 "mouthOccluded": {
                  "$id": "859",
                  "kind": "boolean",
                  "type": {
                   "$ref": "270"
                  },
                  "value": false
                 }
                }
               },
               "accessories": {
                "$id": "860",
                "kind": "array",
                "type": {
                 "$ref": "272"
                },
                "value": [
                 {
                  "$id": "861",
                  "kind": "model",
                  "type": {
                   "$ref": "273"
                  },
                  "value": {
                   "$id": "862",
                   "type": {
                    "$id": "863",
                    "kind": "string",
                    "type": {
                     "$ref": "76"
                    },
                    "value": "headwear"
                   },
                   "confidence": {
                    "$id": "864",
                    "kind": "number",
                    "type": {
                     "$ref": "276"
                    },
                    "value": 0.99
                   }
                  }
                 },
                 {
                  "$id": "865",
                  "kind": "model",
                  "type": {
                   "$ref": "273"
                  },
                  "value": {
                   "$id": "866",
                   "type": {
                    "$id": "867",
                    "kind": "string",
                    "type": {
                     "$ref": "76"
                    },
                    "value": "glasses"
                   },
                   "confidence": {
                    "$id": "868",
                    "kind": "number",
                    "type": {
                     "$ref": "276"
                    },
                    "value": 1
                   }
                  }
                 },
                 {
                  "$id": "869",
                  "kind": "model",
                  "type": {
                   "$ref": "273"
                  },
                  "value": {
                   "$id": "870",
                   "type": {
                    "$id": "871",
                    "kind": "string",
                    "type": {
                     "$ref": "76"
                    },
                    "value": "mask"
                   },
                   "confidence": {
                    "$id": "872",
                    "kind": "number",
                    "type": {
                     "$ref": "276"
                    },
                    "value": 0.87
                   }
                  }
                 }
                ]
               },
               "blur": {
                "$id": "873",
                "kind": "model",
                "type": {
                 "$ref": "278"
                },
                "value": {
                 "$id": "874",
                 "blurLevel": {
                  "$id": "875",
                  "kind": "string",
                  "type": {
                   "$ref": "84"
                  },
                  "value": "medium"
                 },
                 "value": {
                  "$id": "876",
                  "kind": "number",
                  "type": {
                   "$ref": "281"
                  },
                  "value": 0.51
                 }
                }
               },
               "exposure": {
                "$id": "877",
                "kind": "model",
                "type": {
                 "$ref": "283"
                },
                "value": {
                 "$id": "878",
                 "exposureLevel": {
                  "$id": "879",
                  "kind": "string",
                  "type": {
                   "$ref": "92"
                  },
                  "value": "goodExposure"
                 },
                 "value": {
                  "$id": "880",
                  "kind": "number",
                  "type": {
                   "$ref": "286"
                  },
                  "value": 0.55
                 }
                }
               },
               "noise": {
                "$id": "881",
                "kind": "model",
                "type": {
                 "$ref": "288"
                },
                "value": {
                 "$id": "882",
                 "noiseLevel": {
                  "$id": "883",
                  "kind": "string",
                  "type": {
                   "$ref": "100"
                  },
                  "value": "low"
                 },
                 "value": {
                  "$id": "884",
                  "kind": "number",
                  "type": {
                   "$ref": "291"
                  },
                  "value": 0.12
                 }
                }
               },
               "qualityForRecognition": {
                "$id": "885",
                "kind": "string",
                "type": {
                 "$ref": "118"
                },
                "value": "high"
               }
              }
             }
            }
           }
          ]
         }
        }
       ]
      }
     ]
    },
    {
     "$id": "886",
     "Name": "findSimilar",
     "ResourceName": "FaceClient",
     "Summary": "Given query face's faceId, to search the similar-looking faces from a faceId array. A faceId array contains the faces created by Detect.",
     "Description": "Depending on the input the returned similar faces list contains faceIds or persistedFaceIds ranked by similarity.\n\nFind similar has two working modes, \"matchPerson\" and \"matchFace\". \"matchPerson\" is the default mode that it tries to find faces of the same person as possible by using internal same-person thresholds. It is useful to find a known person's other photos. Note that an empty list will be returned if no faces pass the internal thresholds. \"matchFace\" mode ignores same-person thresholds and returns ranked similar faces anyway, even the similarity is low. It can be used in the cases like searching celebrity-looking faces.\n\nThe 'recognitionModel' associated with the query faceId should be the same as the 'recognitionModel' used by the target faceId array.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$ref": "483"
      },
      {
       "$ref": "485"
      },
      {
       "$id": "887",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Description": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "888",
        "kind": "constant",
        "valueType": {
         "$id": "889",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "890",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "891",
        "kind": "constant",
        "valueType": {
         "$id": "892",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "893",
       "Name": "findSimilarRequest",
       "NameInRequest": "findSimilarRequest",
       "Type": {
        "$ref": "305"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Spread",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "894",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$id": "895",
        "kind": "array",
        "name": "ArrayFindSimilarResult",
        "valueType": {
         "$ref": "316"
        },
        "crossLanguageDefinitionId": "TypeSpec.Array",
        "decorators": []
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{endpoint}/face/{apiVersion}",
     "Path": "/findsimilars",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "ClientCustomizations.FaceClient.findSimilar",
     "Decorators": [],
     "Examples": [
      {
       "$id": "896",
       "kind": "http",
       "name": "Find Similar among Face IDs",
       "description": "Find Similar among Face IDs",
       "filePath": "v1.1-preview.1/FaceRecognitionOperations_FindSimilar.json",
       "parameters": [
        {
         "$id": "897",
         "parameter": {
          "$ref": "893"
         },
         "value": {
          "$id": "898",
          "kind": "model",
          "type": {
           "$ref": "305"
          },
          "value": {
           "$id": "899",
           "faceId": {
            "$id": "900",
            "kind": "string",
            "type": {
             "$ref": "307"
            },
            "value": "c5c24a82-6845-4031-9d5d-978df9175426"
           },
           "maxNumOfCandidatesReturned": {
            "$id": "901",
            "kind": "number",
            "type": {
             "$ref": "310"
            },
            "value": 3
           },
           "mode": {
            "$id": "902",
            "kind": "string",
            "type": {
             "$ref": "126"
            },
            "value": "matchPerson"
           },
           "faceIds": {
            "$id": "903",
            "kind": "array",
            "type": {
             "$ref": "313"
            },
            "value": [
             {
              "$id": "904",
              "kind": "string",
              "type": {
               "$ref": "314"
              },
              "value": "015839fb-fbd9-4f79-ace9-7675fc2f1dd9"
             },
             {
              "$id": "905",
              "kind": "string",
              "type": {
               "$ref": "314"
              },
              "value": "be386ab3-af91-4104-9e6d-4dae4c9fddb7"
             }
            ]
           }
          }
         }
        }
       ],
       "responses": [
        {
         "$id": "906",
         "response": {
          "$ref": "894"
         },
         "statusCode": 200,
         "bodyValue": {
          "$id": "907",
          "kind": "array",
          "type": {
           "$ref": "895"
          },
          "value": [
           {
            "$id": "908",
            "kind": "model",
            "type": {
             "$ref": "316"
            },
            "value": {
             "$id": "909",
             "confidence": {
              "$id": "910",
              "kind": "number",
              "type": {
               "$ref": "318"
              },
              "value": 0.9
             },
             "persistedFaceId": {
              "$id": "911",
              "kind": "string",
              "type": {
               "$ref": "323"
              },
              "value": "015839fb-fbd9-4f79-ace9-7675fc2f1dd9"
             }
            }
           }
          ]
         }
        }
       ]
      }
     ]
    },
    {
     "$id": "912",
     "Name": "verifyFaceToFace",
     "ResourceName": "FaceClient",
     "Summary": "Verify whether two faces belong to a same person.",
     "Description": "> [!NOTE]\n>\n> *\n>   * Higher face image quality means better identification precision. Please consider high-quality faces: frontal, clear, and face size is 200x200 pixels (100 pixels between eyes) or bigger.\n>   * For the scenarios that are sensitive to accuracy please make your own judgment.\n>   * The 'recognitionModel' associated with the both faces should be the same.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$ref": "483"
      },
      {
       "$ref": "485"
      },
      {
       "$id": "913",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Description": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "914",
        "kind": "constant",
        "valueType": {
         "$id": "915",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "916",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "917",
        "kind": "constant",
        "valueType": {
         "$id": "918",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "919",
       "Name": "verifyFaceToFaceRequest",
       "NameInRequest": "verifyFaceToFaceRequest",
       "Type": {
        "$ref": "325"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Spread",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "920",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "332"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{endpoint}/face/{apiVersion}",
     "Path": "/verify",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "ClientCustomizations.FaceClient.verifyFaceToFace",
     "Decorators": [],
     "Examples": [
      {
       "$id": "921",
       "kind": "http",
       "name": "Verify Face to Face",
       "description": "Verify Face to Face",
       "filePath": "v1.1-preview.1/FaceRecognitionOperations_VerifyFaceToFace.json",
       "parameters": [
        {
         "$id": "922",
         "parameter": {
          "$ref": "919"
         },
         "value": {
          "$id": "923",
          "kind": "model",
          "type": {
           "$ref": "325"
          },
          "value": {
           "$id": "924",
           "faceId1": {
            "$id": "925",
            "kind": "string",
            "type": {
             "$ref": "327"
            },
            "value": "c5c24a82-6845-4031-9d5d-978df9175426"
           },
           "faceId2": {
            "$id": "926",
            "kind": "string",
            "type": {
             "$ref": "330"
            },
            "value": "3aa87e30-b380-48eb-ad9e-1aa54fc52bd3"
           }
          }
         }
        }
       ],
       "responses": [
        {
         "$id": "927",
         "response": {
          "$ref": "920"
         },
         "statusCode": 200,
         "bodyValue": {
          "$id": "928",
          "kind": "model",
          "type": {
           "$ref": "332"
          },
          "value": {
           "$id": "929",
           "isIdentical": {
            "$id": "930",
            "kind": "boolean",
            "type": {
             "$ref": "334"
            },
            "value": true
           },
           "confidence": {
            "$id": "931",
            "kind": "number",
            "type": {
             "$ref": "336"
            },
            "value": 0.8
           }
          }
         }
        }
       ]
      }
     ]
    },
    {
     "$id": "932",
     "Name": "group",
     "ResourceName": "FaceClient",
     "Summary": "Divide candidate faces into groups based on face similarity.",
     "Description": ">\n*\n  * The output is one or more disjointed face groups and a messyGroup. A face group contains faces that have similar looking, often of the same person. Face groups are ranked by group size, i.e. number of faces. Notice that faces belonging to a same person might be split into several groups in the result.\n  * MessyGroup is a special face group containing faces that cannot find any similar counterpart face from original faces. The messyGroup will not appear in the result if all faces found their counterparts.\n  * Group API needs at least 2 candidate faces and 1000 at most. We suggest to try \"Verify Face To Face\" when you only have 2 candidate faces.\n  * The 'recognitionModel' associated with the query faces' faceIds should be the same.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$ref": "483"
      },
      {
       "$ref": "485"
      },
      {
       "$id": "933",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Description": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "934",
        "kind": "constant",
        "valueType": {
         "$id": "935",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "936",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "937",
        "kind": "constant",
        "valueType": {
         "$id": "938",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "939",
       "Name": "groupRequest",
       "NameInRequest": "groupRequest",
       "Type": {
        "$ref": "337"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Spread",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "940",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "342"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{endpoint}/face/{apiVersion}",
     "Path": "/group",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "ClientCustomizations.FaceClient.group",
     "Decorators": [],
     "Examples": [
      {
       "$id": "941",
       "kind": "http",
       "name": "Group Face IDs",
       "description": "Group Face IDs",
       "filePath": "v1.1-preview.1/FaceRecognitionOperations_Group.json",
       "parameters": [
        {
         "$id": "942",
         "parameter": {
          "$ref": "939"
         },
         "value": {
          "$id": "943",
          "kind": "model",
          "type": {
           "$ref": "337"
          },
          "value": {
           "$id": "944",
           "faceIds": {
            "$id": "945",
            "kind": "array",
            "type": {
             "$ref": "339"
            },
            "value": [
             {
              "$id": "946",
              "kind": "string",
              "type": {
               "$ref": "340"
              },
              "value": "c5c24a82-6845-4031-9d5d-978df9175426"
             },
             {
              "$id": "947",
              "kind": "string",
              "type": {
               "$ref": "340"
              },
              "value": "015839fb-fbd9-4f79-ace9-7675fc2f1dd9"
             },
             {
              "$id": "948",
              "kind": "string",
              "type": {
               "$ref": "340"
              },
              "value": "65d083d4-9447-47d1-af30-b626144bf0fb"
             },
             {
              "$id": "949",
              "kind": "string",
              "type": {
               "$ref": "340"
              },
              "value": "fce92aed-d578-4d2e-8114-068f8af4492e"
             },
             {
              "$id": "950",
              "kind": "string",
              "type": {
               "$ref": "340"
              },
              "value": "30ea1073-cc9e-4652-b1e3-d08fb7b95315"
             },
             {
              "$id": "951",
              "kind": "string",
              "type": {
               "$ref": "340"
              },
              "value": "be386ab3-af91-4104-9e6d-4dae4c9fddb7"
             },
             {
              "$id": "952",
              "kind": "string",
              "type": {
               "$ref": "340"
              },
              "value": "fbd2a038-dbff-452c-8e79-2ee81b1aa84e"
             },
             {
              "$id": "953",
              "kind": "string",
              "type": {
               "$ref": "340"
              },
              "value": "b64d5e15-8257-4af2-b20a-5a750f8940e7"
             }
            ]
           }
          }
         }
        }
       ],
       "responses": [
        {
         "$id": "954",
         "response": {
          "$ref": "940"
         },
         "statusCode": 200,
         "bodyValue": {
          "$id": "955",
          "kind": "model",
          "type": {
           "$ref": "342"
          },
          "value": {
           "$id": "956",
           "groups": {
            "$id": "957",
            "kind": "array",
            "type": {
             "$ref": "344"
            },
            "value": [
             {
              "$id": "958",
              "kind": "array",
              "type": {
               "$ref": "345"
              },
              "value": [
               {
                "$id": "959",
                "kind": "string",
                "type": {
                 "$ref": "346"
                },
                "value": "c5c24a82-6845-4031-9d5d-978df9175426"
               },
               {
                "$id": "960",
                "kind": "string",
                "type": {
                 "$ref": "346"
                },
                "value": "015839fb-fbd9-4f79-ace9-7675fc2f1dd9"
               },
               {
                "$id": "961",
                "kind": "string",
                "type": {
                 "$ref": "346"
                },
                "value": "fce92aed-d578-4d2e-8114-068f8af4492e"
               },
               {
                "$id": "962",
                "kind": "string",
                "type": {
                 "$ref": "346"
                },
                "value": "b64d5e15-8257-4af2-b20a-5a750f8940e7"
               }
              ]
             },
             {
              "$id": "963",
              "kind": "array",
              "type": {
               "$ref": "345"
              },
              "value": [
               {
                "$id": "964",
                "kind": "string",
                "type": {
                 "$ref": "346"
                },
                "value": "65d083d4-9447-47d1-af30-b626144bf0fb"
               },
               {
                "$id": "965",
                "kind": "string",
                "type": {
                 "$ref": "346"
                },
                "value": "30ea1073-cc9e-4652-b1e3-d08fb7b95315"
               }
              ]
             }
            ]
           },
           "messyGroup": {
            "$id": "966",
            "kind": "array",
            "type": {
             "$ref": "349"
            },
            "value": [
             {
              "$id": "967",
              "kind": "string",
              "type": {
               "$ref": "350"
              },
              "value": "be386ab3-af91-4104-9e6d-4dae4c9fddb7"
             },
             {
              "$id": "968",
              "kind": "string",
              "type": {
               "$ref": "350"
              },
              "value": "fbd2a038-dbff-452c-8e79-2ee81b1aa84e"
             }
            ]
           }
          }
         }
        }
       ]
      }
     ]
    }
   ],
   "Protocol": {
    "$id": "969"
   },
   "Parameters": [
    {
     "$ref": "483"
    },
    {
     "$ref": "485"
    }
   ],
   "Decorators": []
  },
  {
   "$id": "970",
   "Name": "FaceSessionClient",
   "Operations": [
    {
     "$id": "971",
     "Name": "createLivenessSession",
     "ResourceName": "LivenessSession",
     "Summary": "Create a new detect liveness session.",
     "Description": "A session is best for client device scenarios where developers want to authorize a client device to perform only a liveness detection without granting full access to their resource. Created sessions have a limited life span and only authorize clients to perform the desired action before access is expired.\n\nPermissions includes...\n>\n*\n  * Ability to call /detectLiveness/singleModal for up to 3 retries.\n  * A token lifetime of 10 minutes.\n\n> [!NOTE]\n> Client access can be revoked by deleting the session using the Delete Liveness Session operation. To retrieve a result, use the Get Liveness Session. To audit the individual requests that a client has made to your resource, use the List Liveness Session Audit Entries.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "972",
       "Name": "endpoint",
       "NameInRequest": "endpoint",
       "Description": "Supported Cognitive Services endpoints (protocol and hostname, for example:\nhttps://{resource-name}.cognitiveservices.azure.com).",
       "Type": {
        "$id": "973",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "Location": "Uri",
       "IsApiVersion": false,
       "IsResourceParameter": false,
       "IsContentType": false,
       "IsRequired": true,
       "IsEndpoint": true,
       "SkipUrlEncoding": false,
       "Explode": false,
       "Kind": "Client"
      },
      {
       "$id": "974",
       "Name": "apiVersion",
       "NameInRequest": "apiVersion",
       "Description": "API Version",
       "Type": {
        "$ref": "132"
       },
       "Location": "Uri",
       "IsApiVersion": true,
       "IsResourceParameter": false,
       "IsContentType": false,
       "IsRequired": true,
       "IsEndpoint": false,
       "SkipUrlEncoding": false,
       "Explode": false,
       "Kind": "Client",
       "DefaultValue": {
        "$id": "975",
        "Type": {
         "$id": "976",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "v1.1-preview.1"
       }
      },
      {
       "$id": "977",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Description": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "978",
        "kind": "constant",
        "valueType": {
         "$id": "979",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "980",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "981",
        "kind": "constant",
        "valueType": {
         "$id": "982",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "983",
       "Name": "body",
       "NameInRequest": "body",
       "Description": "Body parameter.",
       "Type": {
        "$ref": "352"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "984",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "362"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{endpoint}/face/{apiVersion}",
     "Path": "/detectLiveness/singleModal/sessions",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "ClientCustomizations.FaceSessionClient.createLivenessSession",
     "Decorators": [],
     "Examples": [
      {
       "$id": "985",
       "kind": "http",
       "name": "Create Liveness Session",
       "description": "Create Liveness Session",
       "filePath": "v1.1-preview.1/LivenessSessionOperations_CreateLivenessSession.json",
       "parameters": [
        {
         "$id": "986",
         "parameter": {
          "$ref": "983"
         },
         "value": {
          "$id": "987",
          "kind": "model",
          "type": {
           "$ref": "352"
          },
          "value": {
           "$id": "988",
           "livenessOperationMode": {
            "$id": "989",
            "kind": "string",
            "type": {
             "$ref": "136"
            },
            "value": "Passive"
           },
           "sendResultsToClient": {
            "$id": "990",
            "kind": "boolean",
            "type": {
             "$ref": "355"
            },
            "value": true
           },
           "deviceCorrelationIdSetInClient": {
            "$id": "991",
            "kind": "boolean",
            "type": {
             "$ref": "357"
            },
            "value": true
           },
           "deviceCorrelationId": {
            "$id": "992",
            "kind": "string",
            "type": {
             "$ref": "359"
            },
            "value": "your_device_correlation_id"
           },
           "authTokenTimeToLiveInSeconds": {
            "$id": "993",
            "kind": "number",
            "type": {
             "$ref": "361"
            },
            "value": 60
           }
          }
         }
        }
       ],
       "responses": [
        {
         "$id": "994",
         "response": {
          "$ref": "984"
         },
         "statusCode": 200,
         "bodyValue": {
          "$id": "995",
          "kind": "model",
          "type": {
           "$ref": "362"
          },
          "value": {
           "$id": "996",
           "sessionId": {
            "$id": "997",
            "kind": "string",
            "type": {
             "$ref": "364"
            },
            "value": "b12e033e-bda7-4b83-a211-e721c661f30e"
           },
           "authToken": {
            "$id": "998",
            "kind": "string",
            "type": {
             "$ref": "366"
            },
            "value": "eyJhbGciOiJFUzI1NiIsIm"
           }
          }
         }
        }
       ]
      }
     ]
    },
    {
     "$id": "999",
     "Name": "deleteLivenessSession",
     "ResourceName": "LivenessSession",
     "Summary": "Delete all session related information for matching the specified session id.",
     "Description": "> [!NOTE]\n> Deleting a session deactivates the Session Auth Token by blocking future API calls made with that Auth Token. While this can be used to remove any access for that token, those requests will still count towards overall resource rate limits. It's best to leverage TokenTTL to limit length of tokens in the case that it is misused.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$ref": "972"
      },
      {
       "$ref": "974"
      },
      {
       "$id": "1000",
       "Name": "sessionId",
       "NameInRequest": "sessionId",
       "Description": "The unique ID to reference this session.",
       "Type": {
        "$id": "1001",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1002",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1003",
        "kind": "constant",
        "valueType": {
         "$id": "1004",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1005",
       "StatusCodes": [
        200
       ],
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false
      }
     ],
     "HttpMethod": "DELETE",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}/face/{apiVersion}",
     "Path": "/detectLiveness/singleModal/sessions/{sessionId}",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "ClientCustomizations.FaceSessionClient.deleteLivenessSession",
     "Decorators": [],
     "Examples": [
      {
       "$id": "1006",
       "kind": "http",
       "name": "Delete Liveness Session",
       "description": "Delete Liveness Session",
       "filePath": "v1.1-preview.1/LivenessSessionOperations_DeleteLivenessSession.json",
       "parameters": [
        {
         "$id": "1007",
         "parameter": {
          "$ref": "1000"
         },
         "value": {
          "$id": "1008",
          "kind": "string",
          "type": {
           "$ref": "1001"
          },
          "value": "b12e033e-bda7-4b83-a211-e721c661f30e"
         }
        }
       ],
       "responses": [
        {
         "$id": "1009",
         "response": {
          "$ref": "1005"
         },
         "statusCode": 200
        }
       ]
      }
     ]
    },
    {
     "$id": "1010",
     "Name": "getLivenessSessionResult",
     "ResourceName": "LivenessSession",
     "Description": "Get session result of detectLiveness/singleModal call.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$ref": "972"
      },
      {
       "$ref": "974"
      },
      {
       "$id": "1011",
       "Name": "sessionId",
       "NameInRequest": "sessionId",
       "Description": "The unique ID to reference this session.",
       "Type": {
        "$id": "1012",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1013",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1014",
        "kind": "constant",
        "valueType": {
         "$id": "1015",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1016",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "367"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}/face/{apiVersion}",
     "Path": "/detectLiveness/singleModal/sessions/{sessionId}",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "ClientCustomizations.FaceSessionClient.getLivenessSessionResult",
     "Decorators": [],
     "Examples": [
      {
       "$id": "1017",
       "kind": "http",
       "name": "Get LivenessSession Result",
       "description": "Get LivenessSession Result",
       "filePath": "v1.1-preview.1/LivenessSessionOperations_GetLivenessSessionResult.json",
       "parameters": [
        {
         "$id": "1018",
         "parameter": {
          "$ref": "1011"
         },
         "value": {
          "$id": "1019",
          "kind": "string",
          "type": {
           "$ref": "1012"
          },
          "value": "b12e033e-bda7-4b83-a211-e721c661f30e"
         }
        }
       ],
       "responses": [
        {
         "$id": "1020",
         "response": {
          "$ref": "1016"
         },
         "statusCode": 200,
         "bodyValue": {
          "$id": "1021",
          "kind": "model",
          "type": {
           "$ref": "367"
          },
          "value": {
           "$id": "1022",
           "id": {
            "$id": "1023",
            "kind": "string",
            "type": {
             "$ref": "369"
            },
            "value": "b12e033e-bda7-4b83-a211-e721c661f30e"
           },
           "createdDateTime": {
            "$id": "1024",
            "kind": "string",
            "type": {
             "$ref": "371"
            },
            "value": "2024-03-05T11:07:29.698Z"
           },
           "sessionStartDateTime": {
            "$id": "1025",
            "kind": "string",
            "type": {
             "$ref": "374"
            },
            "value": "2024-03-05T11:07:29.698Z"
           },
           "sessionExpired": {
            "$id": "1026",
            "kind": "boolean",
            "type": {
             "$ref": "377"
            },
            "value": true
           },
           "deviceCorrelationId": {
            "$id": "1027",
            "kind": "string",
            "type": {
             "$ref": "379"
            },
            "value": "your_device_correlation_id"
           },
           "authTokenTimeToLiveInSeconds": {
            "$id": "1028",
            "kind": "number",
            "type": {
             "$ref": "381"
            },
            "value": 600
           },
           "status": {
            "$id": "1029",
            "kind": "string",
            "type": {
             "$ref": "142"
            },
            "value": "NotStarted"
           },
           "result": {
            "$id": "1030",
            "kind": "model",
            "type": {
             "$ref": "384"
            },
            "value": {
             "$id": "1031",
             "id": {
              "$id": "1032",
              "kind": "number",
              "type": {
               "$ref": "386"
              },
              "value": 4
             },
             "sessionId": {
              "$id": "1033",
              "kind": "string",
              "type": {
               "$ref": "388"
              },
              "value": "b12e033e-bda7-4b83-a211-e721c661f30e"
             },
             "requestId": {
              "$id": "1034",
              "kind": "string",
              "type": {
               "$ref": "390"
              },
              "value": "4af681e9-0e25-43e9-9922-a7adebf13b2f"
             },
             "clientRequestId": {
              "$id": "1035",
              "kind": "string",
              "type": {
               "$ref": "392"
              },
              "value": "4af681e9-0e25-43e9-9922-a7adebf13b2f"
             },
             "receivedDateTime": {
              "$id": "1036",
              "kind": "string",
              "type": {
               "$ref": "394"
              },
              "value": "2024-03-05T11:07:29.698Z"
             },
             "request": {
              "$id": "1037",
              "kind": "model",
              "type": {
               "$ref": "397"
              },
              "value": {
               "$id": "1038",
               "url": {
                "$id": "1039",
                "kind": "string",
                "type": {
                 "$ref": "399"
                },
                "value": "/face/v1.1-preview.1/detectliveness/singlemodal"
               },
               "method": {
                "$id": "1040",
                "kind": "string",
                "type": {
                 "$ref": "401"
                },
                "value": "POST"
               },
               "contentLength": {
                "$id": "1041",
                "kind": "number",
                "type": {
                 "$ref": "403"
                },
                "value": 18
               },
               "contentType": {
                "$id": "1042",
                "kind": "string",
                "type": {
                 "$ref": "405"
                },
                "value": "multipart/form-data"
               },
               "userAgent": {
                "$id": "1043",
                "kind": "string",
                "type": {
                 "$ref": "407"
                },
                "value": "Mozilla/5.0 (Linux) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Mobile Safari/537.36"
               }
              }
             },
             "response": {
              "$id": "1044",
              "kind": "model",
              "type": {
               "$ref": "409"
              },
              "value": {
               "$id": "1045",
               "body": {
                "$id": "1046",
                "kind": "model",
                "type": {
                 "$ref": "411"
                },
                "value": {
                 "$id": "1047"
                }
               },
               "statusCode": {
                "$id": "1048",
                "kind": "number",
                "type": {
                 "$ref": "434"
                },
                "value": 200
               },
               "latencyInMilliseconds": {
                "$id": "1049",
                "kind": "number",
                "type": {
                 "$ref": "436"
                },
                "value": 1200
               }
              }
             },
             "digest": {
              "$id": "1050",
              "kind": "string",
              "type": {
               "$ref": "438"
              },
              "value": "1CC98BA83EAF1D0FF7F566FAEFCCCC787819FFA01251E2D9299143F7AD6651DB"
             }
            }
           }
          }
         }
        }
       ]
      }
     ]
    },
    {
     "$id": "1051",
     "Name": "getLivenessSessions",
     "ResourceName": "LivenessSession",
     "Summary": "Lists sessions for /detectLiveness/SingleModal.",
     "Description": "List sessions from the last sessionId greater than the 'start'.\n\nThe result should be ordered by sessionId in ascending order.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$ref": "972"
      },
      {
       "$ref": "974"
      },
      {
       "$id": "1052",
       "Name": "start",
       "NameInRequest": "start",
       "Description": "List resources greater than the \"start\". It contains no more than 64 characters. Default is empty.",
       "Type": {
        "$id": "1053",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1054",
       "Name": "top",
       "NameInRequest": "top",
       "Description": "The number of items to list, ranging in [1, 1000]. Default is 1000.",
       "Type": {
        "$id": "1055",
        "kind": "int32",
        "name": "int32",
        "crossLanguageDefinitionId": "TypeSpec.int32",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1056",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1057",
        "kind": "constant",
        "valueType": {
         "$id": "1058",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1059",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$id": "1060",
        "kind": "array",
        "name": "ArrayLivenessSessionItem",
        "valueType": {
         "$ref": "439"
        },
        "crossLanguageDefinitionId": "TypeSpec.Array",
        "decorators": []
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}/face/{apiVersion}",
     "Path": "/detectLiveness/singleModal/sessions",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "ClientCustomizations.FaceSessionClient.getLivenessSessions",
     "Decorators": [],
     "Examples": [
      {
       "$id": "1061",
       "kind": "http",
       "name": "Get LivenessSessions",
       "description": "Get LivenessSessions",
       "filePath": "v1.1-preview.1/LivenessSessionOperations_GetLivenessSessions.json",
       "parameters": [
        {
         "$id": "1062",
         "parameter": {
          "$ref": "1052"
         },
         "value": {
          "$id": "1063",
          "kind": "string",
          "type": {
           "$ref": "1053"
          },
          "value": "00000000-0000-0000-0000-000000000000"
         }
        },
        {
         "$id": "1064",
         "parameter": {
          "$ref": "1054"
         },
         "value": {
          "$id": "1065",
          "kind": "number",
          "type": {
           "$ref": "1055"
          },
          "value": 20
         }
        }
       ],
       "responses": [
        {
         "$id": "1066",
         "response": {
          "$ref": "1059"
         },
         "statusCode": 200,
         "bodyValue": {
          "$id": "1067",
          "kind": "array",
          "type": {
           "$ref": "1060"
          },
          "value": [
           {
            "$id": "1068",
            "kind": "model",
            "type": {
             "$ref": "439"
            },
            "value": {
             "$id": "1069",
             "id": {
              "$id": "1070",
              "kind": "string",
              "type": {
               "$ref": "441"
              },
              "value": "b12e033e-bda7-4b83-a211-e721c661f30e"
             },
             "createdDateTime": {
              "$id": "1071",
              "kind": "string",
              "type": {
               "$ref": "443"
              },
              "value": "2024-03-05T11:07:28.540Z"
             },
             "sessionStartDateTime": {
              "$id": "1072",
              "kind": "string",
              "type": {
               "$ref": "446"
              },
              "value": "2024-03-05T11:07:28.540Z"
             },
             "sessionExpired": {
              "$id": "1073",
              "kind": "boolean",
              "type": {
               "$ref": "449"
              },
              "value": true
             },
             "deviceCorrelationId": {
              "$id": "1074",
              "kind": "string",
              "type": {
               "$ref": "451"
              },
              "value": "your_device_correlation_id"
             },
             "authTokenTimeToLiveInSeconds": {
              "$id": "1075",
              "kind": "number",
              "type": {
               "$ref": "453"
              },
              "value": 60
             }
            }
           }
          ]
         }
        }
       ]
      }
     ]
    },
    {
     "$id": "1076",
     "Name": "getLivenessSessionAuditEntries",
     "ResourceName": "FaceSessionClient",
     "Description": "Gets session requests and response body for the session.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$ref": "972"
      },
      {
       "$ref": "974"
      },
      {
       "$id": "1077",
       "Name": "sessionId",
       "NameInRequest": "sessionId",
       "Description": "The unique ID to reference this session.",
       "Type": {
        "$id": "1078",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1079",
       "Name": "start",
       "NameInRequest": "start",
       "Description": "List resources greater than the \"start\". It contains no more than 64 characters. Default is empty.",
       "Type": {
        "$id": "1080",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1081",
       "Name": "top",
       "NameInRequest": "top",
       "Description": "The number of items to list, ranging in [1, 1000]. Default is 1000.",
       "Type": {
        "$id": "1082",
        "kind": "int32",
        "name": "int32",
        "crossLanguageDefinitionId": "TypeSpec.int32",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1083",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1084",
        "kind": "constant",
        "valueType": {
         "$id": "1085",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1086",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$id": "1087",
        "kind": "array",
        "name": "ArrayLivenessSessionAuditEntry",
        "valueType": {
         "$ref": "384"
        },
        "crossLanguageDefinitionId": "TypeSpec.Array",
        "decorators": []
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}/face/{apiVersion}",
     "Path": "/detectLiveness/singleModal/sessions/{sessionId}/audit",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "ClientCustomizations.FaceSessionClient.getLivenessSessionAuditEntries",
     "Decorators": [],
     "Examples": [
      {
       "$id": "1088",
       "kind": "http",
       "name": "Get LivenessSession Audit Entries",
       "description": "Get LivenessSession Audit Entries",
       "filePath": "v1.1-preview.1/LivenessSessionOperations_GetLivenessSessionAuditEntries.json",
       "parameters": [
        {
         "$id": "1089",
         "parameter": {
          "$ref": "1077"
         },
         "value": {
          "$id": "1090",
          "kind": "string",
          "type": {
           "$ref": "1078"
          },
          "value": "b12e033e-bda7-4b83-a211-e721c661f30e"
         }
        },
        {
         "$id": "1091",
         "parameter": {
          "$ref": "1079"
         },
         "value": {
          "$id": "1092",
          "kind": "string",
          "type": {
           "$ref": "1080"
          },
          "value": "0"
         }
        },
        {
         "$id": "1093",
         "parameter": {
          "$ref": "1081"
         },
         "value": {
          "$id": "1094",
          "kind": "number",
          "type": {
           "$ref": "1082"
          },
          "value": 20
         }
        }
       ],
       "responses": [
        {
         "$id": "1095",
         "response": {
          "$ref": "1086"
         },
         "statusCode": 200,
         "bodyValue": {
          "$id": "1096",
          "kind": "array",
          "type": {
           "$ref": "1087"
          },
          "value": [
           {
            "$id": "1097",
            "kind": "model",
            "type": {
             "$ref": "384"
            },
            "value": {
             "$id": "1098",
             "id": {
              "$id": "1099",
              "kind": "number",
              "type": {
               "$ref": "386"
              },
              "value": 4
             },
             "sessionId": {
              "$id": "1100",
              "kind": "string",
              "type": {
               "$ref": "388"
              },
              "value": "b12e033e-bda7-4b83-a211-e721c661f30e"
             },
             "requestId": {
              "$id": "1101",
              "kind": "string",
              "type": {
               "$ref": "390"
              },
              "value": "4af681e9-0e25-43e9-9922-a7adebf13b2f"
             },
             "clientRequestId": {
              "$id": "1102",
              "kind": "string",
              "type": {
               "$ref": "392"
              },
              "value": "4af681e9-0e25-43e9-9922-a7adebf13b2f"
             },
             "receivedDateTime": {
              "$id": "1103",
              "kind": "string",
              "type": {
               "$ref": "394"
              },
              "value": "2024-03-05T11:07:29.698Z"
             },
             "request": {
              "$id": "1104",
              "kind": "model",
              "type": {
               "$ref": "397"
              },
              "value": {
               "$id": "1105",
               "url": {
                "$id": "1106",
                "kind": "string",
                "type": {
                 "$ref": "399"
                },
                "value": "/face/v1.1-preview.1/detectliveness/singlemodal"
               },
               "method": {
                "$id": "1107",
                "kind": "string",
                "type": {
                 "$ref": "401"
                },
                "value": "POST"
               },
               "contentLength": {
                "$id": "1108",
                "kind": "number",
                "type": {
                 "$ref": "403"
                },
                "value": 18
               },
               "contentType": {
                "$id": "1109",
                "kind": "string",
                "type": {
                 "$ref": "405"
                },
                "value": "multipart/form-data"
               },
               "userAgent": {
                "$id": "1110",
                "kind": "string",
                "type": {
                 "$ref": "407"
                },
                "value": "Mozilla/5.0 (Linux) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Mobile Safari/537.36"
               }
              }
             },
             "response": {
              "$id": "1111",
              "kind": "model",
              "type": {
               "$ref": "409"
              },
              "value": {
               "$id": "1112",
               "body": {
                "$id": "1113",
                "kind": "model",
                "type": {
                 "$ref": "411"
                },
                "value": {
                 "$id": "1114"
                }
               },
               "statusCode": {
                "$id": "1115",
                "kind": "number",
                "type": {
                 "$ref": "434"
                },
                "value": 200
               },
               "latencyInMilliseconds": {
                "$id": "1116",
                "kind": "number",
                "type": {
                 "$ref": "436"
                },
                "value": 1200
               }
              }
             },
             "digest": {
              "$id": "1117",
              "kind": "string",
              "type": {
               "$ref": "438"
              },
              "value": "1CC98BA83EAF1D0FF7F566FAEFCCCC787819FFA01251E2D9299143F7AD6651DB"
             }
            }
           }
          ]
         }
        }
       ]
      }
     ]
    },
    {
     "$id": "1118",
     "Name": "createLivenessWithVerifySession",
     "ResourceName": "LivenessWithVerifySession",
     "Summary": "Create a new liveness session with verify. Client device submits VerifyImage during the /detectLivenessWithVerify/singleModal call.",
     "Description": "A session is best for client device scenarios where developers want to authorize a client device to perform only a liveness detection without granting full access to their resource. Created sessions have a limited life span and only authorize clients to perform the desired action before access is expired.\n\nPermissions includes...\n>\n*\n  * Ability to call /detectLivenessWithVerify/singleModal for up to 3 retries.\n  * A token lifetime of 10 minutes.\n\n> [!NOTE]\n>\n> *\n>   * Client access can be revoked by deleting the session using the Delete Liveness With Verify Session operation.\n>   * To retrieve a result, use the Get Liveness With Verify Session.\n>   * To audit the individual requests that a client has made to your resource, use the List Liveness With Verify Session Audit Entries.\n\nAlternative Option: Client device submits VerifyImage during the /detectLivenessWithVerify/singleModal call.\n> [!NOTE]\n> Extra measures should be taken to validate that the client is sending the expected VerifyImage.",
     "Accessibility": "internal",
     "Parameters": [
      {
       "$ref": "972"
      },
      {
       "$ref": "974"
      },
      {
       "$id": "1119",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Description": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "1120",
        "kind": "constant",
        "valueType": {
         "$id": "1121",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1122",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1123",
        "kind": "constant",
        "valueType": {
         "$id": "1124",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1125",
       "Name": "body",
       "NameInRequest": "body",
       "Description": "Body parameter.",
       "Type": {
        "$ref": "352"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1126",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "454"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{endpoint}/face/{apiVersion}",
     "Path": "/detectLivenessWithVerify/singleModal/sessions",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "ClientCustomizations.FaceSessionClient.createLivenessWithVerifySession",
     "Decorators": [],
     "Examples": [
      {
       "$id": "1127",
       "kind": "http",
       "name": "Create LivenessWithVerify Session",
       "description": "Create LivenessWithVerify Session",
       "filePath": "v1.1-preview.1/LivenessSessionOperations_CreateLivenessWithVerifySession.json",
       "parameters": [
        {
         "$id": "1128",
         "parameter": {
          "$ref": "1125"
         },
         "value": {
          "$id": "1129",
          "kind": "model",
          "type": {
           "$ref": "352"
          },
          "value": {
           "$id": "1130",
           "livenessOperationMode": {
            "$id": "1131",
            "kind": "string",
            "type": {
             "$ref": "136"
            },
            "value": "Passive"
           },
           "sendResultsToClient": {
            "$id": "1132",
            "kind": "boolean",
            "type": {
             "$ref": "355"
            },
            "value": true
           },
           "deviceCorrelationIdSetInClient": {
            "$id": "1133",
            "kind": "boolean",
            "type": {
             "$ref": "357"
            },
            "value": true
           },
           "deviceCorrelationId": {
            "$id": "1134",
            "kind": "string",
            "type": {
             "$ref": "359"
            },
            "value": "your_device_correlation_id"
           },
           "authTokenTimeToLiveInSeconds": {
            "$id": "1135",
            "kind": "number",
            "type": {
             "$ref": "361"
            },
            "value": 60
           }
          }
         }
        }
       ],
       "responses": [
        {
         "$id": "1136",
         "response": {
          "$ref": "1126"
         },
         "statusCode": 200,
         "bodyValue": {
          "$id": "1137",
          "kind": "model",
          "type": {
           "$ref": "454"
          },
          "value": {
           "$id": "1138",
           "sessionId": {
            "$id": "1139",
            "kind": "string",
            "type": {
             "$ref": "456"
            },
            "value": "b12e033e-bda7-4b83-a211-e721c661f30e"
           },
           "authToken": {
            "$id": "1140",
            "kind": "string",
            "type": {
             "$ref": "458"
            },
            "value": "eyJhbGciOiJFUzI1NiIsIm"
           }
          }
         }
        }
       ]
      }
     ]
    },
    {
     "$id": "1141",
     "Name": "createLivenessWithVerifySessionWithVerifyImage",
     "ResourceName": "LivenessWithVerifySession",
     "Summary": "Create a new liveness session with verify. Provide the verify image during session creation.",
     "Description": "A session is best for client device scenarios where developers want to authorize a client device to perform only a liveness detection without granting full access to their resource. Created sessions have a limited life span and only authorize clients to perform the desired action before access is expired.\n\nPermissions includes...\n>\n*\n  * Ability to call /detectLivenessWithVerify/singleModal for up to 3 retries.\n  * A token lifetime of 10 minutes.\n\n> [!NOTE]\n>\n> *\n>   * Client access can be revoked by deleting the session using the Delete Liveness With Verify Session operation.\n>   * To retrieve a result, use the Get Liveness With Verify Session.\n>   * To audit the individual requests that a client has made to your resource, use the List Liveness With Verify Session Audit Entries.\n\nRecommended Option: VerifyImage is provided during session creation.",
     "Accessibility": "internal",
     "Parameters": [
      {
       "$ref": "972"
      },
      {
       "$ref": "974"
      },
      {
       "$id": "1142",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Description": "The content type for the operation. Always multipart/form-data for this operation.",
       "Type": {
        "$id": "1143",
        "kind": "constant",
        "valueType": {
         "$id": "1144",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "multipart/form-data",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1145",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1146",
        "kind": "constant",
        "valueType": {
         "$id": "1147",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1148",
       "Name": "body",
       "NameInRequest": "body",
       "Description": "Request content of liveness with verify session creation.",
       "Type": {
        "$ref": "460"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1149",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "454"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{endpoint}/face/{apiVersion}",
     "Path": "/detectLivenessWithVerify/singleModal/sessions",
     "RequestMediaTypes": [
      "multipart/form-data"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "ClientCustomizations.FaceSessionClient.createLivenessWithVerifySessionWithVerifyImage",
     "Decorators": [],
     "Examples": [
      {
       "$id": "1150",
       "kind": "http",
       "name": "Create LivenessWithVerify Session with VerifyImage",
       "description": "Create LivenessWithVerify Session with VerifyImage",
       "filePath": "v1.1-preview.1/LivenessSessionOperations_CreateLivenessWithVerifySessionWithVerifyImage.json",
       "parameters": [],
       "responses": [
        {
         "$id": "1151",
         "response": {
          "$ref": "1149"
         },
         "statusCode": 200,
         "bodyValue": {
          "$id": "1152",
          "kind": "model",
          "type": {
           "$ref": "454"
          },
          "value": {
           "$id": "1153",
           "sessionId": {
            "$id": "1154",
            "kind": "string",
            "type": {
             "$ref": "456"
            },
            "value": "b12e033e-bda7-4b83-a211-e721c661f30e"
           },
           "authToken": {
            "$id": "1155",
            "kind": "string",
            "type": {
             "$ref": "458"
            },
            "value": "eyJhbGciOiJFUzI1NiIsIm"
           },
           "verifyImage": {
            "$id": "1156",
            "kind": "model",
            "type": {
             "$ref": "426"
            },
            "value": {
             "$id": "1157",
             "faceRectangle": {
              "$id": "1158",
              "kind": "model",
              "type": {
               "$ref": "185"
              },
              "value": {
               "$id": "1159",
               "width": {
                "$id": "1160",
                "kind": "number",
                "type": {
                 "$ref": "191"
                },
                "value": 78
               },
               "height": {
                "$id": "1161",
                "kind": "number",
                "type": {
                 "$ref": "193"
                },
                "value": 78
               },
               "left": {
                "$id": "1162",
                "kind": "number",
                "type": {
                 "$ref": "189"
                },
                "value": 394
               },
               "top": {
                "$id": "1163",
                "kind": "number",
                "type": {
                 "$ref": "187"
                },
                "value": 54
               }
              }
             },
             "qualityForRecognition": {
              "$id": "1164",
              "kind": "string",
              "type": {
               "$ref": "118"
              },
              "value": "high"
             }
            }
           }
          }
         }
        }
       ]
      }
     ]
    },
    {
     "$id": "1165",
     "Name": "deleteLivenessWithVerifySession",
     "ResourceName": "LivenessWithVerifySession",
     "Summary": "Delete all session related information for matching the specified session id.",
     "Description": "> [!NOTE]\n> Deleting a session deactivates the Session Auth Token by blocking future API calls made with that Auth Token. While this can be used to remove any access for that token, those requests will still count towards overall resource rate limits. It's best to leverage TokenTTL to limit length of tokens in the case that it is misused.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$ref": "972"
      },
      {
       "$ref": "974"
      },
      {
       "$id": "1166",
       "Name": "sessionId",
       "NameInRequest": "sessionId",
       "Description": "The unique ID to reference this session.",
       "Type": {
        "$id": "1167",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1168",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1169",
        "kind": "constant",
        "valueType": {
         "$id": "1170",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1171",
       "StatusCodes": [
        200
       ],
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false
      }
     ],
     "HttpMethod": "DELETE",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}/face/{apiVersion}",
     "Path": "/detectLivenessWithVerify/singleModal/sessions/{sessionId}",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "ClientCustomizations.FaceSessionClient.deleteLivenessWithVerifySession",
     "Decorators": [],
     "Examples": [
      {
       "$id": "1172",
       "kind": "http",
       "name": "Delete LivenessWithVerify Session",
       "description": "Delete LivenessWithVerify Session",
       "filePath": "v1.1-preview.1/LivenessSessionOperations_DeleteLivenessWithVerifySession.json",
       "parameters": [
        {
         "$id": "1173",
         "parameter": {
          "$ref": "1166"
         },
         "value": {
          "$id": "1174",
          "kind": "string",
          "type": {
           "$ref": "1167"
          },
          "value": "b12e033e-bda7-4b83-a211-e721c661f30e"
         }
        }
       ],
       "responses": [
        {
         "$id": "1175",
         "response": {
          "$ref": "1171"
         },
         "statusCode": 200
        }
       ]
      }
     ]
    },
    {
     "$id": "1176",
     "Name": "getLivenessWithVerifySessionResult",
     "ResourceName": "LivenessWithVerifySession",
     "Description": "Get session result of detectLivenessWithVerify/singleModal call.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$ref": "972"
      },
      {
       "$ref": "974"
      },
      {
       "$id": "1177",
       "Name": "sessionId",
       "NameInRequest": "sessionId",
       "Description": "The unique ID to reference this session.",
       "Type": {
        "$id": "1178",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1179",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1180",
        "kind": "constant",
        "valueType": {
         "$id": "1181",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1182",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "464"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}/face/{apiVersion}",
     "Path": "/detectLivenessWithVerify/singleModal/sessions/{sessionId}",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "ClientCustomizations.FaceSessionClient.getLivenessWithVerifySessionResult",
     "Decorators": [],
     "Examples": [
      {
       "$id": "1183",
       "kind": "http",
       "name": "Get LivenessWithVerify Session Result",
       "description": "Get LivenessWithVerify Session Result",
       "filePath": "v1.1-preview.1/LivenessSessionOperations_GetLivenessWithVerifySessionResult.json",
       "parameters": [
        {
         "$id": "1184",
         "parameter": {
          "$ref": "1177"
         },
         "value": {
          "$id": "1185",
          "kind": "string",
          "type": {
           "$ref": "1178"
          },
          "value": "b12e033e-bda7-4b83-a211-e721c661f30e"
         }
        }
       ],
       "responses": [
        {
         "$id": "1186",
         "response": {
          "$ref": "1182"
         },
         "statusCode": 200,
         "bodyValue": {
          "$id": "1187",
          "kind": "model",
          "type": {
           "$ref": "464"
          },
          "value": {
           "$id": "1188",
           "id": {
            "$id": "1189",
            "kind": "string",
            "type": {
             "$ref": "466"
            },
            "value": "b12e033e-bda7-4b83-a211-e721c661f30e"
           },
           "createdDateTime": {
            "$id": "1190",
            "kind": "string",
            "type": {
             "$ref": "468"
            },
            "value": "2024-03-05T11:07:29.698Z"
           },
           "sessionStartDateTime": {
            "$id": "1191",
            "kind": "string",
            "type": {
             "$ref": "471"
            },
            "value": "2024-03-05T11:07:29.698Z"
           },
           "sessionExpired": {
            "$id": "1192",
            "kind": "boolean",
            "type": {
             "$ref": "474"
            },
            "value": true
           },
           "deviceCorrelationId": {
            "$id": "1193",
            "kind": "string",
            "type": {
             "$ref": "476"
            },
            "value": "your_device_correlation_id"
           },
           "authTokenTimeToLiveInSeconds": {
            "$id": "1194",
            "kind": "number",
            "type": {
             "$ref": "478"
            },
            "value": 600
           },
           "status": {
            "$id": "1195",
            "kind": "string",
            "type": {
             "$ref": "142"
            },
            "value": "NotStarted"
           },
           "result": {
            "$id": "1196",
            "kind": "model",
            "type": {
             "$ref": "384"
            },
            "value": {
             "$id": "1197",
             "id": {
              "$id": "1198",
              "kind": "number",
              "type": {
               "$ref": "386"
              },
              "value": 4
             },
             "sessionId": {
              "$id": "1199",
              "kind": "string",
              "type": {
               "$ref": "388"
              },
              "value": "b12e033e-bda7-4b83-a211-e721c661f30e"
             },
             "requestId": {
              "$id": "1200",
              "kind": "string",
              "type": {
               "$ref": "390"
              },
              "value": "4af681e9-0e25-43e9-9922-a7adebf13b2f"
             },
             "clientRequestId": {
              "$id": "1201",
              "kind": "string",
              "type": {
               "$ref": "392"
              },
              "value": "4af681e9-0e25-43e9-9922-a7adebf13b2f"
             },
             "receivedDateTime": {
              "$id": "1202",
              "kind": "string",
              "type": {
               "$ref": "394"
              },
              "value": "2024-03-05T11:07:29.698Z"
             },
             "request": {
              "$id": "1203",
              "kind": "model",
              "type": {
               "$ref": "397"
              },
              "value": {
               "$id": "1204",
               "url": {
                "$id": "1205",
                "kind": "string",
                "type": {
                 "$ref": "399"
                },
                "value": "/face/v1.1-preview.1/detectliveness/singlemodal"
               },
               "method": {
                "$id": "1206",
                "kind": "string",
                "type": {
                 "$ref": "401"
                },
                "value": "POST"
               },
               "contentLength": {
                "$id": "1207",
                "kind": "number",
                "type": {
                 "$ref": "403"
                },
                "value": 18
               },
               "contentType": {
                "$id": "1208",
                "kind": "string",
                "type": {
                 "$ref": "405"
                },
                "value": "multipart/form-data"
               },
               "userAgent": {
                "$id": "1209",
                "kind": "string",
                "type": {
                 "$ref": "407"
                },
                "value": "Mozilla/5.0 (Linux) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Mobile Safari/537.36"
               }
              }
             },
             "response": {
              "$id": "1210",
              "kind": "model",
              "type": {
               "$ref": "409"
              },
              "value": {
               "$id": "1211",
               "body": {
                "$id": "1212",
                "kind": "model",
                "type": {
                 "$ref": "411"
                },
                "value": {
                 "$id": "1213"
                }
               },
               "statusCode": {
                "$id": "1214",
                "kind": "number",
                "type": {
                 "$ref": "434"
                },
                "value": 200
               },
               "latencyInMilliseconds": {
                "$id": "1215",
                "kind": "number",
                "type": {
                 "$ref": "436"
                },
                "value": 1200
               }
              }
             },
             "digest": {
              "$id": "1216",
              "kind": "string",
              "type": {
               "$ref": "438"
              },
              "value": "1CC98BA83EAF1D0FF7F566FAEFCCCC787819FFA01251E2D9299143F7AD6651DB"
             }
            }
           }
          }
         }
        }
       ]
      }
     ]
    },
    {
     "$id": "1217",
     "Name": "getLivenessWithVerifySessions",
     "ResourceName": "LivenessWithVerifySession",
     "Summary": "Lists sessions for /detectLivenessWithVerify/SingleModal.",
     "Description": "List sessions from the last sessionId greater than the \"start\".\n\nThe result should be ordered by sessionId in ascending order.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$ref": "972"
      },
      {
       "$ref": "974"
      },
      {
       "$id": "1218",
       "Name": "start",
       "NameInRequest": "start",
       "Description": "List resources greater than the \"start\". It contains no more than 64 characters. Default is empty.",
       "Type": {
        "$id": "1219",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1220",
       "Name": "top",
       "NameInRequest": "top",
       "Description": "The number of items to list, ranging in [1, 1000]. Default is 1000.",
       "Type": {
        "$id": "1221",
        "kind": "int32",
        "name": "int32",
        "crossLanguageDefinitionId": "TypeSpec.int32",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1222",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1223",
        "kind": "constant",
        "valueType": {
         "$id": "1224",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1225",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$id": "1226",
        "kind": "array",
        "name": "ArrayLivenessSessionItem",
        "valueType": {
         "$ref": "439"
        },
        "crossLanguageDefinitionId": "TypeSpec.Array",
        "decorators": []
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}/face/{apiVersion}",
     "Path": "/detectLivenessWithVerify/singleModal/sessions",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "ClientCustomizations.FaceSessionClient.getLivenessWithVerifySessions",
     "Decorators": [],
     "Examples": [
      {
       "$id": "1227",
       "kind": "http",
       "name": "Get LivenessWithVerify Sessions",
       "description": "Get LivenessWithVerify Sessions",
       "filePath": "v1.1-preview.1/LivenessSessionOperations_GetLivenessWithVerifySessions.json",
       "parameters": [
        {
         "$id": "1228",
         "parameter": {
          "$ref": "1218"
         },
         "value": {
          "$id": "1229",
          "kind": "string",
          "type": {
           "$ref": "1219"
          },
          "value": "00000000-0000-0000-0000-000000000000"
         }
        },
        {
         "$id": "1230",
         "parameter": {
          "$ref": "1220"
         },
         "value": {
          "$id": "1231",
          "kind": "number",
          "type": {
           "$ref": "1221"
          },
          "value": 20
         }
        }
       ],
       "responses": [
        {
         "$id": "1232",
         "response": {
          "$ref": "1225"
         },
         "statusCode": 200,
         "bodyValue": {
          "$id": "1233",
          "kind": "array",
          "type": {
           "$ref": "1226"
          },
          "value": [
           {
            "$id": "1234",
            "kind": "model",
            "type": {
             "$ref": "439"
            },
            "value": {
             "$id": "1235",
             "id": {
              "$id": "1236",
              "kind": "string",
              "type": {
               "$ref": "441"
              },
              "value": "b12e033e-bda7-4b83-a211-e721c661f30e"
             },
             "createdDateTime": {
              "$id": "1237",
              "kind": "string",
              "type": {
               "$ref": "443"
              },
              "value": "2024-03-05T11:07:28.540Z"
             },
             "sessionStartDateTime": {
              "$id": "1238",
              "kind": "string",
              "type": {
               "$ref": "446"
              },
              "value": "2024-03-05T11:07:28.540Z"
             },
             "sessionExpired": {
              "$id": "1239",
              "kind": "boolean",
              "type": {
               "$ref": "449"
              },
              "value": true
             },
             "deviceCorrelationId": {
              "$id": "1240",
              "kind": "string",
              "type": {
               "$ref": "451"
              },
              "value": "your_device_correlation_id"
             },
             "authTokenTimeToLiveInSeconds": {
              "$id": "1241",
              "kind": "number",
              "type": {
               "$ref": "453"
              },
              "value": 60
             }
            }
           }
          ]
         }
        }
       ]
      }
     ]
    },
    {
     "$id": "1242",
     "Name": "getLivenessWithVerifySessionAuditEntries",
     "ResourceName": "FaceSessionClient",
     "Description": "Gets session requests and response body for the session.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$ref": "972"
      },
      {
       "$ref": "974"
      },
      {
       "$id": "1243",
       "Name": "sessionId",
       "NameInRequest": "sessionId",
       "Description": "The unique ID to reference this session.",
       "Type": {
        "$id": "1244",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1245",
       "Name": "start",
       "NameInRequest": "start",
       "Description": "List resources greater than the \"start\". It contains no more than 64 characters. Default is empty.",
       "Type": {
        "$id": "1246",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1247",
       "Name": "top",
       "NameInRequest": "top",
       "Description": "The number of items to list, ranging in [1, 1000]. Default is 1000.",
       "Type": {
        "$id": "1248",
        "kind": "int32",
        "name": "int32",
        "crossLanguageDefinitionId": "TypeSpec.int32",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "1249",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "1250",
        "kind": "constant",
        "valueType": {
         "$id": "1251",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "value": "application/json",
        "decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "1252",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$id": "1253",
        "kind": "array",
        "name": "ArrayLivenessSessionAuditEntry",
        "valueType": {
         "$ref": "384"
        },
        "crossLanguageDefinitionId": "TypeSpec.Array",
        "decorators": []
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}/face/{apiVersion}",
     "Path": "/detectLivenessWithVerify/singleModal/sessions/{sessionId}/audit",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "ClientCustomizations.FaceSessionClient.getLivenessWithVerifySessionAuditEntries",
     "Decorators": [],
     "Examples": [
      {
       "$id": "1254",
       "kind": "http",
       "name": "Get LivenessWithVerify Session Audit Entries",
       "description": "Get LivenessWithVerify Session Audit Entries",
       "filePath": "v1.1-preview.1/LivenessSessionOperations_GetLivenessWithVerifySessionAuditEntries.json",
       "parameters": [
        {
         "$id": "1255",
         "parameter": {
          "$ref": "1243"
         },
         "value": {
          "$id": "1256",
          "kind": "string",
          "type": {
           "$ref": "1244"
          },
          "value": "b12e033e-bda7-4b83-a211-e721c661f30e"
         }
        },
        {
         "$id": "1257",
         "parameter": {
          "$ref": "1245"
         },
         "value": {
          "$id": "1258",
          "kind": "string",
          "type": {
           "$ref": "1246"
          },
          "value": "0"
         }
        },
        {
         "$id": "1259",
         "parameter": {
          "$ref": "1247"
         },
         "value": {
          "$id": "1260",
          "kind": "number",
          "type": {
           "$ref": "1248"
          },
          "value": 20
         }
        }
       ],
       "responses": [
        {
         "$id": "1261",
         "response": {
          "$ref": "1252"
         },
         "statusCode": 200,
         "bodyValue": {
          "$id": "1262",
          "kind": "array",
          "type": {
           "$ref": "1253"
          },
          "value": [
           {
            "$id": "1263",
            "kind": "model",
            "type": {
             "$ref": "384"
            },
            "value": {
             "$id": "1264",
             "id": {
              "$id": "1265",
              "kind": "number",
              "type": {
               "$ref": "386"
              },
              "value": 4
             },
             "sessionId": {
              "$id": "1266",
              "kind": "string",
              "type": {
               "$ref": "388"
              },
              "value": "b12e033e-bda7-4b83-a211-e721c661f30e"
             },
             "requestId": {
              "$id": "1267",
              "kind": "string",
              "type": {
               "$ref": "390"
              },
              "value": "4af681e9-0e25-43e9-9922-a7adebf13b2f"
             },
             "clientRequestId": {
              "$id": "1268",
              "kind": "string",
              "type": {
               "$ref": "392"
              },
              "value": "4af681e9-0e25-43e9-9922-a7adebf13b2f"
             },
             "receivedDateTime": {
              "$id": "1269",
              "kind": "string",
              "type": {
               "$ref": "394"
              },
              "value": "2024-03-05T11:07:29.698Z"
             },
             "request": {
              "$id": "1270",
              "kind": "model",
              "type": {
               "$ref": "397"
              },
              "value": {
               "$id": "1271",
               "url": {
                "$id": "1272",
                "kind": "string",
                "type": {
                 "$ref": "399"
                },
                "value": "/face/v1.1-preview.1/detectliveness/singlemodal"
               },
               "method": {
                "$id": "1273",
                "kind": "string",
                "type": {
                 "$ref": "401"
                },
                "value": "POST"
               },
               "contentLength": {
                "$id": "1274",
                "kind": "number",
                "type": {
                 "$ref": "403"
                },
                "value": 18
               },
               "contentType": {
                "$id": "1275",
                "kind": "string",
                "type": {
                 "$ref": "405"
                },
                "value": "multipart/form-data"
               },
               "userAgent": {
                "$id": "1276",
                "kind": "string",
                "type": {
                 "$ref": "407"
                },
                "value": "Mozilla/5.0 (Linux) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Mobile Safari/537.36"
               }
              }
             },
             "response": {
              "$id": "1277",
              "kind": "model",
              "type": {
               "$ref": "409"
              },
              "value": {
               "$id": "1278",
               "body": {
                "$id": "1279",
                "kind": "model",
                "type": {
                 "$ref": "411"
                },
                "value": {
                 "$id": "1280"
                }
               },
               "statusCode": {
                "$id": "1281",
                "kind": "number",
                "type": {
                 "$ref": "434"
                },
                "value": 200
               },
               "latencyInMilliseconds": {
                "$id": "1282",
                "kind": "number",
                "type": {
                 "$ref": "436"
                },
                "value": 1200
               }
              }
             },
             "digest": {
              "$id": "1283",
              "kind": "string",
              "type": {
               "$ref": "438"
              },
              "value": "1CC98BA83EAF1D0FF7F566FAEFCCCC787819FFA01251E2D9299143F7AD6651DB"
             }
            }
           }
          ]
         }
        }
       ]
      }
     ]
    }
   ],
   "Protocol": {
    "$id": "1284"
   },
   "Parameters": [
    {
     "$ref": "972"
    },
    {
     "$ref": "974"
    }
   ],
   "Decorators": []
  }
 ],
 "Auth": {
  "$id": "1285",
  "ApiKey": {
   "$id": "1286",
   "Name": "Ocp-Apim-Subscription-Key"
  },
  "OAuth2": {
   "$id": "1287",
   "Scopes": [
    "https://cognitiveservices.azure.com/.default"
   ]
  }
 }
}
