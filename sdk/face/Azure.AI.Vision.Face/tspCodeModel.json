{
 "$id": "1",
 "Name": "Face",
 "ApiVersions": [
  "v1.1-preview.1"
 ],
 "Enums": [
  {
   "$id": "2",
   "Kind": "enum",
   "Name": "FaceDetectionModel",
   "CrossLanguageDefinitionId": "Face.DetectionModel",
   "ValueType": {
    "$id": "3",
    "Kind": "string",
    "Name": "string",
    "CrossLanguageDefinitionId": "TypeSpec.string",
    "Decorators": []
   },
   "Values": [
    {
     "$id": "4",
     "Name": "detection_01",
     "Value": "detection_01",
     "Description": "The default detection model. Recommend for near frontal face detection. For scenarios with exceptionally large angle (head-pose) faces, occluded faces or wrong image orientation, the faces in such cases may not be detected.",
     "Decorators": []
    },
    {
     "$id": "5",
     "Name": "detection_02",
     "Value": "detection_02",
     "Description": "Detection model released in 2019 May with improved accuracy especially on small, side and blurry faces.",
     "Decorators": []
    },
    {
     "$id": "6",
     "Name": "detection_03",
     "Value": "detection_03",
     "Description": "Detection model released in 2021 February with improved accuracy especially on small faces.",
     "Decorators": []
    }
   ],
   "Accessibility": "public",
   "Description": "The detection model for the face.",
   "IsExtensible": true,
   "Usage": "Input",
   "Decorators": []
  },
  {
   "$id": "7",
   "Kind": "enum",
   "Name": "FaceRecognitionModel",
   "CrossLanguageDefinitionId": "Face.RecognitionModel",
   "ValueType": {
    "$id": "8",
    "Kind": "string",
    "Name": "string",
    "CrossLanguageDefinitionId": "TypeSpec.string",
    "Decorators": []
   },
   "Values": [
    {
     "$id": "9",
     "Name": "recognition_01",
     "Value": "recognition_01",
     "Description": "The default recognition model for \"Detect\". All those faceIds created before 2019 March are bonded with this recognition model.",
     "Decorators": []
    },
    {
     "$id": "10",
     "Name": "recognition_02",
     "Value": "recognition_02",
     "Description": "Recognition model released in 2019 March.",
     "Decorators": []
    },
    {
     "$id": "11",
     "Name": "recognition_03",
     "Value": "recognition_03",
     "Description": "Recognition model released in 2020 May.",
     "Decorators": []
    },
    {
     "$id": "12",
     "Name": "recognition_04",
     "Value": "recognition_04",
     "Description": "Recognition model released in 2021 February. It's recommended to use this recognition model for better recognition accuracy.",
     "Decorators": []
    }
   ],
   "Accessibility": "public",
   "Description": "The recognition model for the face.",
   "IsExtensible": true,
   "Usage": "Input,Output,Json",
   "Decorators": []
  },
  {
   "$id": "13",
   "Kind": "enum",
   "Name": "FaceAttributeType",
   "CrossLanguageDefinitionId": "Face.FaceAttributeType",
   "ValueType": {
    "$id": "14",
    "Kind": "string",
    "Name": "string",
    "CrossLanguageDefinitionId": "TypeSpec.string",
    "Decorators": []
   },
   "Values": [
    {
     "$id": "15",
     "Name": "headPose",
     "Value": "headPose",
     "Description": "3-D roll/yaw/pitch angles for face direction.",
     "Decorators": []
    },
    {
     "$id": "16",
     "Name": "glasses",
     "Value": "glasses",
     "Description": "Glasses type. Values include 'NoGlasses', 'ReadingGlasses', 'Sunglasses', 'SwimmingGoggles'.",
     "Decorators": []
    },
    {
     "$id": "17",
     "Name": "occlusion",
     "Value": "occlusion",
     "Description": "Whether each facial area is occluded, including forehead, eyes and mouth.",
     "Decorators": []
    },
    {
     "$id": "18",
     "Name": "accessories",
     "Value": "accessories",
     "Description": "Accessories around face, including 'headwear', 'glasses' and 'mask'. Empty array means no accessories detected. Note this is after a face is detected. Large mask could result in no face to be detected.",
     "Decorators": []
    },
    {
     "$id": "19",
     "Name": "blur",
     "Value": "blur",
     "Description": "Face is blurry or not. Level returns 'Low', 'Medium' or 'High'. Value returns a number between [0,1], the larger the blurrier.",
     "Decorators": []
    },
    {
     "$id": "20",
     "Name": "exposure",
     "Value": "exposure",
     "Description": "Face exposure level. Level returns 'GoodExposure', 'OverExposure' or 'UnderExposure'.",
     "Decorators": []
    },
    {
     "$id": "21",
     "Name": "noise",
     "Value": "noise",
     "Description": "Noise level of face pixels. Level returns 'Low', 'Medium' and 'High'. Value returns a number between [0,1], the larger the noisier",
     "Decorators": []
    },
    {
     "$id": "22",
     "Name": "mask",
     "Value": "mask",
     "Description": "Whether each face is wearing a mask. Mask type returns 'noMask', 'faceMask', 'otherMaskOrOcclusion', or 'uncertain'. Value returns a boolean 'noseAndMouthCovered' indicating whether nose and mouth are covered.",
     "Decorators": []
    },
    {
     "$id": "23",
     "Name": "qualityForRecognition",
     "Value": "qualityForRecognition",
     "Description": "The overall image quality regarding whether the image being used in the detection is of sufficient quality to attempt face recognition on. The value is an informal rating of low, medium, or high. Only 'high' quality images are recommended for person enrollment and quality at or above 'medium' is recommended for identification scenarios. The attribute is only available when using recognition models recognition_03 or recognition_04.",
     "Decorators": []
    },
    {
     "$id": "24",
     "Name": "age",
     "Value": "age",
     "Description": "Age in years.",
     "Decorators": []
    },
    {
     "$id": "25",
     "Name": "smile",
     "Value": "smile",
     "Description": "Smile intensity, a number between [0,1].",
     "Decorators": []
    },
    {
     "$id": "26",
     "Name": "facialHair",
     "Value": "facialHair",
     "Description": "Properties describing facial hair attributes.",
     "Decorators": []
    },
    {
     "$id": "27",
     "Name": "hair",
     "Value": "hair",
     "Description": "Properties describing hair attributes.",
     "Decorators": []
    }
   ],
   "Accessibility": "public",
   "Description": "Available options for detect face with attribute.",
   "IsExtensible": true,
   "Usage": "Input",
   "Decorators": []
  },
  {
   "$id": "28",
   "Kind": "enum",
   "Name": "GlassesType",
   "CrossLanguageDefinitionId": "Face.GlassesType",
   "ValueType": {
    "$id": "29",
    "Kind": "string",
    "Name": "string",
    "CrossLanguageDefinitionId": "TypeSpec.string",
    "Decorators": []
   },
   "Values": [
    {
     "$id": "30",
     "Name": "noGlasses",
     "Value": "noGlasses",
     "Description": "No glasses on the face.",
     "Decorators": []
    },
    {
     "$id": "31",
     "Name": "readingGlasses",
     "Value": "readingGlasses",
     "Description": "Normal glasses on the face.",
     "Decorators": []
    },
    {
     "$id": "32",
     "Name": "sunglasses",
     "Value": "sunglasses",
     "Description": "Sunglasses on the face.",
     "Decorators": []
    },
    {
     "$id": "33",
     "Name": "swimmingGoggles",
     "Value": "swimmingGoggles",
     "Description": "Swimming goggles on the face.",
     "Decorators": []
    }
   ],
   "Accessibility": "public",
   "Description": "Glasses type of the face.",
   "IsExtensible": true,
   "Usage": "Output,Json",
   "Decorators": []
  },
  {
   "$id": "34",
   "Kind": "enum",
   "Name": "HairColorType",
   "CrossLanguageDefinitionId": "Face.HairColorType",
   "ValueType": {
    "$id": "35",
    "Kind": "string",
    "Name": "string",
    "CrossLanguageDefinitionId": "TypeSpec.string",
    "Decorators": []
   },
   "Values": [
    {
     "$id": "36",
     "Name": "unknownHairColor",
     "Value": "unknown",
     "Description": "Unknown.",
     "Decorators": []
    },
    {
     "$id": "37",
     "Name": "white",
     "Value": "white",
     "Description": "White.",
     "Decorators": []
    },
    {
     "$id": "38",
     "Name": "gray",
     "Value": "gray",
     "Description": "Gray.",
     "Decorators": []
    },
    {
     "$id": "39",
     "Name": "blond",
     "Value": "blond",
     "Description": "Blond.",
     "Decorators": []
    },
    {
     "$id": "40",
     "Name": "brown",
     "Value": "brown",
     "Description": "Brown.",
     "Decorators": []
    },
    {
     "$id": "41",
     "Name": "red",
     "Value": "red",
     "Description": "Red.",
     "Decorators": []
    },
    {
     "$id": "42",
     "Name": "black",
     "Value": "black",
     "Description": "Black.",
     "Decorators": []
    },
    {
     "$id": "43",
     "Name": "other",
     "Value": "other",
     "Description": "Other.",
     "Decorators": []
    }
   ],
   "Accessibility": "public",
   "Description": "Name of the hair color.",
   "IsExtensible": true,
   "Usage": "Output,Json",
   "Decorators": []
  },
  {
   "$id": "44",
   "Kind": "enum",
   "Name": "AccessoryType",
   "CrossLanguageDefinitionId": "Face.AccessoryType",
   "ValueType": {
    "$id": "45",
    "Kind": "string",
    "Name": "string",
    "CrossLanguageDefinitionId": "TypeSpec.string",
    "Decorators": []
   },
   "Values": [
    {
     "$id": "46",
     "Name": "headwear",
     "Value": "headwear",
     "Description": "Head wear.",
     "Decorators": []
    },
    {
     "$id": "47",
     "Name": "glasses",
     "Value": "glasses",
     "Description": "Glasses.",
     "Decorators": []
    },
    {
     "$id": "48",
     "Name": "mask",
     "Value": "mask",
     "Description": "Mask.",
     "Decorators": []
    }
   ],
   "Accessibility": "public",
   "Description": "Type of the accessory.",
   "IsExtensible": true,
   "Usage": "Output,Json",
   "Decorators": []
  },
  {
   "$id": "49",
   "Kind": "enum",
   "Name": "BlurLevel",
   "CrossLanguageDefinitionId": "Face.BlurLevel",
   "ValueType": {
    "$id": "50",
    "Kind": "string",
    "Name": "string",
    "CrossLanguageDefinitionId": "TypeSpec.string",
    "Decorators": []
   },
   "Values": [
    {
     "$id": "51",
     "Name": "low",
     "Value": "low",
     "Description": "Low blur level.",
     "Decorators": []
    },
    {
     "$id": "52",
     "Name": "medium",
     "Value": "medium",
     "Description": "Medium blur level.",
     "Decorators": []
    },
    {
     "$id": "53",
     "Name": "high",
     "Value": "high",
     "Description": "High blur level.",
     "Decorators": []
    }
   ],
   "Accessibility": "public",
   "Description": "Indicates level of blurriness.",
   "IsExtensible": true,
   "Usage": "Output,Json",
   "Decorators": []
  },
  {
   "$id": "54",
   "Kind": "enum",
   "Name": "ExposureLevel",
   "CrossLanguageDefinitionId": "Face.ExposureLevel",
   "ValueType": {
    "$id": "55",
    "Kind": "string",
    "Name": "string",
    "CrossLanguageDefinitionId": "TypeSpec.string",
    "Decorators": []
   },
   "Values": [
    {
     "$id": "56",
     "Name": "underExposure",
     "Value": "underExposure",
     "Description": "Low exposure level.",
     "Decorators": []
    },
    {
     "$id": "57",
     "Name": "goodExposure",
     "Value": "goodExposure",
     "Description": "Good exposure level.",
     "Decorators": []
    },
    {
     "$id": "58",
     "Name": "overExposure",
     "Value": "overExposure",
     "Description": "High exposure level.",
     "Decorators": []
    }
   ],
   "Accessibility": "public",
   "Description": "Indicates level of exposure.",
   "IsExtensible": true,
   "Usage": "Output,Json",
   "Decorators": []
  },
  {
   "$id": "59",
   "Kind": "enum",
   "Name": "NoiseLevel",
   "CrossLanguageDefinitionId": "Face.NoiseLevel",
   "ValueType": {
    "$id": "60",
    "Kind": "string",
    "Name": "string",
    "CrossLanguageDefinitionId": "TypeSpec.string",
    "Decorators": []
   },
   "Values": [
    {
     "$id": "61",
     "Name": "low",
     "Value": "low",
     "Description": "Low noise level.",
     "Decorators": []
    },
    {
     "$id": "62",
     "Name": "medium",
     "Value": "medium",
     "Description": "Medium noise level.",
     "Decorators": []
    },
    {
     "$id": "63",
     "Name": "high",
     "Value": "high",
     "Description": "High noise level.",
     "Decorators": []
    }
   ],
   "Accessibility": "public",
   "Description": "Indicates level of noise.",
   "IsExtensible": true,
   "Usage": "Output,Json",
   "Decorators": []
  },
  {
   "$id": "64",
   "Kind": "enum",
   "Name": "MaskType",
   "CrossLanguageDefinitionId": "Face.MaskType",
   "ValueType": {
    "$id": "65",
    "Kind": "string",
    "Name": "string",
    "CrossLanguageDefinitionId": "TypeSpec.string",
    "Decorators": []
   },
   "Values": [
    {
     "$id": "66",
     "Name": "faceMask",
     "Value": "faceMask",
     "Description": "Face mask.",
     "Decorators": []
    },
    {
     "$id": "67",
     "Name": "noMask",
     "Value": "noMask",
     "Description": "No mask.",
     "Decorators": []
    },
    {
     "$id": "68",
     "Name": "otherMaskOrOcclusion",
     "Value": "otherMaskOrOcclusion",
     "Description": "Other types of mask or occlusion.",
     "Decorators": []
    },
    {
     "$id": "69",
     "Name": "uncertain",
     "Value": "uncertain",
     "Description": "Uncertain.",
     "Decorators": []
    }
   ],
   "Accessibility": "public",
   "Description": "Type of the mask.",
   "IsExtensible": true,
   "Usage": "Output,Json",
   "Decorators": []
  },
  {
   "$id": "70",
   "Kind": "enum",
   "Name": "QualityForRecognition",
   "CrossLanguageDefinitionId": "Face.QualityForRecognition",
   "ValueType": {
    "$id": "71",
    "Kind": "string",
    "Name": "string",
    "CrossLanguageDefinitionId": "TypeSpec.string",
    "Decorators": []
   },
   "Values": [
    {
     "$id": "72",
     "Name": "low",
     "Value": "low",
     "Description": "Low quality.",
     "Decorators": []
    },
    {
     "$id": "73",
     "Name": "medium",
     "Value": "medium",
     "Description": "Medium quality.",
     "Decorators": []
    },
    {
     "$id": "74",
     "Name": "high",
     "Value": "high",
     "Description": "High quality.",
     "Decorators": []
    }
   ],
   "Accessibility": "public",
   "Description": "Indicates quality of image for recognition.",
   "IsExtensible": true,
   "Usage": "Output,Json",
   "Decorators": []
  },
  {
   "$id": "75",
   "Kind": "enum",
   "Name": "FindSimilarMatchMode",
   "CrossLanguageDefinitionId": "Face.FindSimilarMatchMode",
   "ValueType": {
    "$id": "76",
    "Kind": "string",
    "Name": "string",
    "CrossLanguageDefinitionId": "TypeSpec.string",
    "Decorators": []
   },
   "Values": [
    {
     "$id": "77",
     "Name": "matchPerson",
     "Value": "matchPerson",
     "Description": "Match person.",
     "Decorators": []
    },
    {
     "$id": "78",
     "Name": "matchFace",
     "Value": "matchFace",
     "Description": "Match face.",
     "Decorators": []
    }
   ],
   "Description": "Similar face searching mode.",
   "IsExtensible": true,
   "Usage": "Input,Json",
   "Decorators": []
  },
  {
   "$id": "79",
   "Kind": "enum",
   "Name": "Versions",
   "CrossLanguageDefinitionId": "Face.Versions",
   "ValueType": {
    "$id": "80",
    "Kind": "string",
    "Name": "string",
    "CrossLanguageDefinitionId": "TypeSpec.string",
    "Decorators": []
   },
   "Values": [
    {
     "$id": "81",
     "Name": "v1_1_preview_1",
     "Value": "v1.1-preview.1",
     "Description": "v1.1-preview.1",
     "Decorators": []
    }
   ],
   "Description": "API versions for Azure AI Face API.",
   "IsExtensible": false,
   "Usage": "Input,ApiVersionEnum",
   "Decorators": []
  },
  {
   "$id": "82",
   "Kind": "enum",
   "Name": "LivenessOperationMode",
   "CrossLanguageDefinitionId": "Face.LivenessOperationMode",
   "ValueType": {
    "$id": "83",
    "Kind": "string",
    "Name": "string",
    "CrossLanguageDefinitionId": "TypeSpec.string",
    "Decorators": []
   },
   "Values": [
    {
     "$id": "84",
     "Name": "Passive",
     "Value": "Passive",
     "Description": "Utilizes a passive liveness technique that requires no additional actions from the user. Requires normal indoor lighting and high screen brightness for optimal performance. And thus, this mode has a narrow operational envelope and will not be suitable for scenarios that requires the end-user’s to be in bright lighting conditions. Note: this is the only supported mode for the Mobile (iOS and Android) solution.",
     "Decorators": []
    },
    {
     "$id": "85",
     "Name": "PassiveActive",
     "Value": "PassiveActive",
     "Description": "This mode utilizes a hybrid passive or active liveness technique that necessitates user cooperation. It is optimized to require active motion only under suboptimal lighting conditions. Unlike the passive mode, this mode has no lighting restrictions, and thus offering a broader operational envelope. This mode is preferable on Web based solutions due to the lack of automatic screen brightness control available on browsers which hinders the Passive mode’s operational envelope on Web based solutions.",
     "Decorators": []
    }
   ],
   "Description": "The liveness operation mode to drive the client’s end-user experience.",
   "IsExtensible": true,
   "Usage": "Input,Json",
   "Decorators": []
  },
  {
   "$id": "86",
   "Kind": "enum",
   "Name": "FaceSessionStatus",
   "CrossLanguageDefinitionId": "Face.FaceSessionStatus",
   "ValueType": {
    "$id": "87",
    "Kind": "string",
    "Name": "string",
    "CrossLanguageDefinitionId": "TypeSpec.string",
    "Decorators": []
   },
   "Values": [
    {
     "$id": "88",
     "Name": "NotStarted",
     "Value": "NotStarted",
     "Description": "Session has not started.",
     "Decorators": []
    },
    {
     "$id": "89",
     "Name": "Started",
     "Value": "Started",
     "Description": "Session has started.",
     "Decorators": []
    },
    {
     "$id": "90",
     "Name": "ResultAvailable",
     "Value": "ResultAvailable",
     "Description": "Session has available result.",
     "Decorators": []
    }
   ],
   "Description": "The current status of the session.",
   "IsExtensible": true,
   "Usage": "Output,Json",
   "Decorators": []
  },
  {
   "$id": "91",
   "Kind": "enum",
   "Name": "FaceLivenessDecision",
   "CrossLanguageDefinitionId": "Face.LivenessDecision",
   "ValueType": {
    "$id": "92",
    "Kind": "string",
    "Name": "string",
    "CrossLanguageDefinitionId": "TypeSpec.string",
    "Decorators": []
   },
   "Values": [
    {
     "$id": "93",
     "Name": "uncertain",
     "Value": "uncertain",
     "Description": "The algorithm could not classify the target face as either real or spoof.",
     "Decorators": []
    },
    {
     "$id": "94",
     "Name": "realFace",
     "Value": "realface",
     "Description": "The algorithm has classified the target face as real.",
     "Decorators": []
    },
    {
     "$id": "95",
     "Name": "spoofFace",
     "Value": "spoofface",
     "Description": "The algorithm has classified the target face as a spoof.",
     "Decorators": []
    }
   ],
   "Description": "The outcome of the liveness classification.",
   "IsExtensible": true,
   "Usage": "Output,Json",
   "Decorators": []
  },
  {
   "$id": "96",
   "Kind": "enum",
   "Name": "FaceImageType",
   "CrossLanguageDefinitionId": "Face.ImageType",
   "ValueType": {
    "$id": "97",
    "Kind": "string",
    "Name": "string",
    "CrossLanguageDefinitionId": "TypeSpec.string",
    "Decorators": []
   },
   "Values": [
    {
     "$id": "98",
     "Name": "Color",
     "Value": "Color",
     "Description": "Color image.",
     "Decorators": []
    },
    {
     "$id": "99",
     "Name": "Infrared",
     "Value": "Infrared",
     "Description": "Infrared image.",
     "Decorators": []
    },
    {
     "$id": "100",
     "Name": "Depth",
     "Value": "Depth",
     "Description": "Depth image.",
     "Decorators": []
    }
   ],
   "Description": "The type of image.",
   "IsExtensible": true,
   "Usage": "Output,Json",
   "Decorators": []
  },
  {
   "$id": "101",
   "Kind": "enum",
   "Name": "LivenessModel",
   "CrossLanguageDefinitionId": "Face.LivenessModel",
   "ValueType": {
    "$id": "102",
    "Kind": "string",
    "Name": "string",
    "CrossLanguageDefinitionId": "TypeSpec.string",
    "Decorators": []
   },
   "Values": [
    {
     "$id": "103",
     "Name": "v2020_02_15_preview_01",
     "Value": "2020-02-15-preview.01",
     "Decorators": []
    },
    {
     "$id": "104",
     "Name": "v2021_11_12_preview_03",
     "Value": "2021-11-12-preview.03",
     "Decorators": []
    },
    {
     "$id": "105",
     "Name": "v2022_10_15_preview_04",
     "Value": "2022-10-15-preview.04",
     "Decorators": []
    },
    {
     "$id": "106",
     "Name": "v2023_03_02_preview_05",
     "Value": "2023-03-02-preview.05",
     "Decorators": []
    }
   ],
   "Description": "The model version used for liveness classification.",
   "IsExtensible": true,
   "Usage": "Output,Json",
   "Decorators": []
  }
 ],
 "Models": [
  {
   "$id": "107",
   "Kind": "model",
   "Name": "DetectFromUrlRequest",
   "CrossLanguageDefinitionId": "detectFromUrl.Request.anonymous",
   "Usage": "Spread,Json",
   "Decorators": [],
   "Properties": [
    {
     "$id": "108",
     "Name": "uri",
     "SerializedName": "url",
     "Description": "URL of input image.",
     "Type": {
      "$id": "109",
      "Kind": "url",
      "Name": "url",
      "CrossLanguageDefinitionId": "TypeSpec.url",
      "Decorators": []
     },
     "IsRequired": true,
     "IsReadOnly": false,
     "Decorators": []
    }
   ]
  },
  {
   "$id": "110",
   "Kind": "model",
   "Name": "FaceDetectionResult",
   "CrossLanguageDefinitionId": "Face.FaceDetectionResult",
   "Access": "public",
   "Usage": "Output,Json",
   "Description": "Response for detect API.",
   "Decorators": [],
   "Properties": [
    {
     "$id": "111",
     "Name": "faceId",
     "SerializedName": "faceId",
     "Description": "Unique faceId of the detected face, created by detection API and it will expire 24 hours after the detection call. To return this, it requires 'returnFaceId' parameter to be true.",
     "Type": {
      "$id": "112",
      "Kind": "string",
      "Name": "uuid",
      "CrossLanguageDefinitionId": "Azure.Core.uuid",
      "BaseType": {
       "$id": "113",
       "Kind": "string",
       "Name": "string",
       "CrossLanguageDefinitionId": "TypeSpec.string",
       "Decorators": []
      },
      "Decorators": []
     },
     "IsRequired": false,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "114",
     "Name": "recognitionModel",
     "SerializedName": "recognitionModel",
     "Description": "The 'recognitionModel' associated with this faceId. This is only returned when 'returnRecognitionModel' is explicitly set as true.",
     "Type": {
      "$ref": "7"
     },
     "IsRequired": false,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "115",
     "Name": "faceRectangle",
     "SerializedName": "faceRectangle",
     "Description": "A rectangle area for the face location on image.",
     "Type": {
      "$id": "116",
      "Kind": "model",
      "Name": "FaceRectangle",
      "CrossLanguageDefinitionId": "Face.FaceRectangle",
      "Usage": "Output,Json",
      "Description": "A rectangle within which a face can be found.",
      "Decorators": [],
      "Properties": [
       {
        "$id": "117",
        "Name": "top",
        "SerializedName": "top",
        "Description": "The distance from the top edge if the image to the top edge of the rectangle, in pixels.",
        "Type": {
         "$id": "118",
         "Kind": "int32",
         "Name": "int32",
         "CrossLanguageDefinitionId": "TypeSpec.int32",
         "Decorators": []
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "119",
        "Name": "left",
        "SerializedName": "left",
        "Description": "The distance from the left edge if the image to the left edge of the rectangle, in pixels.",
        "Type": {
         "$id": "120",
         "Kind": "int32",
         "Name": "int32",
         "CrossLanguageDefinitionId": "TypeSpec.int32",
         "Decorators": []
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "121",
        "Name": "width",
        "SerializedName": "width",
        "Description": "The width of the rectangle, in pixels.",
        "Type": {
         "$id": "122",
         "Kind": "int32",
         "Name": "int32",
         "CrossLanguageDefinitionId": "TypeSpec.int32",
         "Decorators": []
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "123",
        "Name": "height",
        "SerializedName": "height",
        "Description": "The height of the rectangle, in pixels.",
        "Type": {
         "$id": "124",
         "Kind": "int32",
         "Name": "int32",
         "CrossLanguageDefinitionId": "TypeSpec.int32",
         "Decorators": []
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       }
      ]
     },
     "IsRequired": true,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "125",
     "Name": "faceLandmarks",
     "SerializedName": "faceLandmarks",
     "Description": "An array of 27-point face landmarks pointing to the important positions of face components. To return this, it requires 'returnFaceLandmarks' parameter to be true.",
     "Type": {
      "$id": "126",
      "Kind": "model",
      "Name": "FaceLandmarks",
      "CrossLanguageDefinitionId": "Face.FaceLandmarks",
      "Access": "public",
      "Usage": "Output,Json",
      "Description": "A collection of 27-point face landmarks pointing to the important positions of face components.",
      "Decorators": [],
      "Properties": [
       {
        "$id": "127",
        "Name": "pupilLeft",
        "SerializedName": "pupilLeft",
        "Description": "The coordinates of the left eye pupil.",
        "Type": {
         "$id": "128",
         "Kind": "model",
         "Name": "LandmarkCoordinate",
         "CrossLanguageDefinitionId": "Face.LandmarkCoordinate",
         "Access": "public",
         "Usage": "Output,Json",
         "Description": "Landmark coordinates within an image.",
         "Decorators": [],
         "Properties": [
          {
           "$id": "129",
           "Name": "x",
           "SerializedName": "x",
           "Description": "The horizontal component, in pixels.",
           "Type": {
            "$id": "130",
            "Kind": "float32",
            "Name": "float32",
            "CrossLanguageDefinitionId": "TypeSpec.float32",
            "Decorators": []
           },
           "IsRequired": true,
           "IsReadOnly": false,
           "Decorators": []
          },
          {
           "$id": "131",
           "Name": "y",
           "SerializedName": "y",
           "Description": "The vertical component, in pixels.",
           "Type": {
            "$id": "132",
            "Kind": "float32",
            "Name": "float32",
            "CrossLanguageDefinitionId": "TypeSpec.float32",
            "Decorators": []
           },
           "IsRequired": true,
           "IsReadOnly": false,
           "Decorators": []
          }
         ]
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "133",
        "Name": "pupilRight",
        "SerializedName": "pupilRight",
        "Description": "The coordinates of the right eye pupil.",
        "Type": {
         "$ref": "128"
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "134",
        "Name": "noseTip",
        "SerializedName": "noseTip",
        "Description": "The coordinates of the nose tip.",
        "Type": {
         "$ref": "128"
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "135",
        "Name": "mouthLeft",
        "SerializedName": "mouthLeft",
        "Description": "The coordinates of the mouth left.",
        "Type": {
         "$ref": "128"
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "136",
        "Name": "mouthRight",
        "SerializedName": "mouthRight",
        "Description": "The coordinates of the mouth right.",
        "Type": {
         "$ref": "128"
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "137",
        "Name": "eyebrowLeftOuter",
        "SerializedName": "eyebrowLeftOuter",
        "Description": "The coordinates of the left eyebrow outer.",
        "Type": {
         "$ref": "128"
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "138",
        "Name": "eyebrowLeftInner",
        "SerializedName": "eyebrowLeftInner",
        "Description": "The coordinates of the left eyebrow inner.",
        "Type": {
         "$ref": "128"
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "139",
        "Name": "eyeLeftOuter",
        "SerializedName": "eyeLeftOuter",
        "Description": "The coordinates of the left eye outer.",
        "Type": {
         "$ref": "128"
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "140",
        "Name": "eyeLeftTop",
        "SerializedName": "eyeLeftTop",
        "Description": "The coordinates of the left eye top.",
        "Type": {
         "$ref": "128"
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "141",
        "Name": "eyeLeftBottom",
        "SerializedName": "eyeLeftBottom",
        "Description": "The coordinates of the left eye bottom.",
        "Type": {
         "$ref": "128"
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "142",
        "Name": "eyeLeftInner",
        "SerializedName": "eyeLeftInner",
        "Description": "The coordinates of the left eye inner.",
        "Type": {
         "$ref": "128"
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "143",
        "Name": "eyebrowRightInner",
        "SerializedName": "eyebrowRightInner",
        "Description": "The coordinates of the right eyebrow inner.",
        "Type": {
         "$ref": "128"
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "144",
        "Name": "eyebrowRightOuter",
        "SerializedName": "eyebrowRightOuter",
        "Description": "The coordinates of the right eyebrow outer.",
        "Type": {
         "$ref": "128"
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "145",
        "Name": "eyeRightInner",
        "SerializedName": "eyeRightInner",
        "Description": "The coordinates of the right eye inner.",
        "Type": {
         "$ref": "128"
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "146",
        "Name": "eyeRightTop",
        "SerializedName": "eyeRightTop",
        "Description": "The coordinates of the right eye top.",
        "Type": {
         "$ref": "128"
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "147",
        "Name": "eyeRightBottom",
        "SerializedName": "eyeRightBottom",
        "Description": "The coordinates of the right eye bottom.",
        "Type": {
         "$ref": "128"
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "148",
        "Name": "eyeRightOuter",
        "SerializedName": "eyeRightOuter",
        "Description": "The coordinates of the right eye outer.",
        "Type": {
         "$ref": "128"
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "149",
        "Name": "noseRootLeft",
        "SerializedName": "noseRootLeft",
        "Description": "The coordinates of the nose root left.",
        "Type": {
         "$ref": "128"
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "150",
        "Name": "noseRootRight",
        "SerializedName": "noseRootRight",
        "Description": "The coordinates of the nose root right.",
        "Type": {
         "$ref": "128"
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "151",
        "Name": "noseLeftAlarTop",
        "SerializedName": "noseLeftAlarTop",
        "Description": "The coordinates of the nose left alar top.",
        "Type": {
         "$ref": "128"
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "152",
        "Name": "noseRightAlarTop",
        "SerializedName": "noseRightAlarTop",
        "Description": "The coordinates of the nose right alar top.",
        "Type": {
         "$ref": "128"
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "153",
        "Name": "noseLeftAlarOutTip",
        "SerializedName": "noseLeftAlarOutTip",
        "Description": "The coordinates of the nose left alar out tip.",
        "Type": {
         "$ref": "128"
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "154",
        "Name": "noseRightAlarOutTip",
        "SerializedName": "noseRightAlarOutTip",
        "Description": "The coordinates of the nose right alar out tip.",
        "Type": {
         "$ref": "128"
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "155",
        "Name": "upperLipTop",
        "SerializedName": "upperLipTop",
        "Description": "The coordinates of the upper lip top.",
        "Type": {
         "$ref": "128"
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "156",
        "Name": "upperLipBottom",
        "SerializedName": "upperLipBottom",
        "Description": "The coordinates of the upper lip bottom.",
        "Type": {
         "$ref": "128"
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "157",
        "Name": "underLipTop",
        "SerializedName": "underLipTop",
        "Description": "The coordinates of the under lip top.",
        "Type": {
         "$ref": "128"
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "158",
        "Name": "underLipBottom",
        "SerializedName": "underLipBottom",
        "Description": "The coordinates of the under lip bottom.",
        "Type": {
         "$ref": "128"
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       }
      ]
     },
     "IsRequired": false,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "159",
     "Name": "faceAttributes",
     "SerializedName": "faceAttributes",
     "Description": "Face attributes for detected face.",
     "Type": {
      "$id": "160",
      "Kind": "model",
      "Name": "FaceAttributes",
      "CrossLanguageDefinitionId": "Face.FaceAttributes",
      "Access": "public",
      "Usage": "Output,Json",
      "Description": "Face attributes for the detected face.",
      "Decorators": [],
      "Properties": [
       {
        "$id": "161",
        "Name": "age",
        "SerializedName": "age",
        "Description": "Age in years.",
        "Type": {
         "$id": "162",
         "Kind": "float32",
         "Name": "float32",
         "CrossLanguageDefinitionId": "TypeSpec.float32",
         "Decorators": []
        },
        "IsRequired": false,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "163",
        "Name": "smile",
        "SerializedName": "smile",
        "Description": "Smile intensity, a number between [0,1].",
        "Type": {
         "$id": "164",
         "Kind": "float32",
         "Name": "float32",
         "CrossLanguageDefinitionId": "TypeSpec.float32",
         "Decorators": []
        },
        "IsRequired": false,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "165",
        "Name": "facialHair",
        "SerializedName": "facialHair",
        "Description": "Properties describing facial hair attributes.",
        "Type": {
         "$id": "166",
         "Kind": "model",
         "Name": "FacialHair",
         "CrossLanguageDefinitionId": "Face.FacialHair",
         "Access": "public",
         "Usage": "Output,Json",
         "Description": "Properties describing facial hair attributes.",
         "Decorators": [],
         "Properties": [
          {
           "$id": "167",
           "Name": "moustache",
           "SerializedName": "moustache",
           "Description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
           "Type": {
            "$id": "168",
            "Kind": "float32",
            "Name": "float32",
            "CrossLanguageDefinitionId": "TypeSpec.float32",
            "Decorators": []
           },
           "IsRequired": true,
           "IsReadOnly": false,
           "Decorators": []
          },
          {
           "$id": "169",
           "Name": "beard",
           "SerializedName": "beard",
           "Description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
           "Type": {
            "$id": "170",
            "Kind": "float32",
            "Name": "float32",
            "CrossLanguageDefinitionId": "TypeSpec.float32",
            "Decorators": []
           },
           "IsRequired": true,
           "IsReadOnly": false,
           "Decorators": []
          },
          {
           "$id": "171",
           "Name": "sideburns",
           "SerializedName": "sideburns",
           "Description": "A number ranging from 0 to 1 indicating a level of confidence associated with a property.",
           "Type": {
            "$id": "172",
            "Kind": "float32",
            "Name": "float32",
            "CrossLanguageDefinitionId": "TypeSpec.float32",
            "Decorators": []
           },
           "IsRequired": true,
           "IsReadOnly": false,
           "Decorators": []
          }
         ]
        },
        "IsRequired": false,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "173",
        "Name": "glasses",
        "SerializedName": "glasses",
        "Description": "Glasses type if any of the face.",
        "Type": {
         "$ref": "28"
        },
        "IsRequired": false,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "174",
        "Name": "headPose",
        "SerializedName": "headPose",
        "Description": "3-D roll/yaw/pitch angles for face direction.",
        "Type": {
         "$id": "175",
         "Kind": "model",
         "Name": "HeadPose",
         "CrossLanguageDefinitionId": "Face.HeadPose",
         "Access": "public",
         "Usage": "Output,Json",
         "Description": "3-D roll/yaw/pitch angles for face direction.",
         "Decorators": [],
         "Properties": [
          {
           "$id": "176",
           "Name": "pitch",
           "SerializedName": "pitch",
           "Description": "Value of angles.",
           "Type": {
            "$id": "177",
            "Kind": "float32",
            "Name": "float32",
            "CrossLanguageDefinitionId": "TypeSpec.float32",
            "Decorators": []
           },
           "IsRequired": true,
           "IsReadOnly": false,
           "Decorators": []
          },
          {
           "$id": "178",
           "Name": "roll",
           "SerializedName": "roll",
           "Description": "Value of angles.",
           "Type": {
            "$id": "179",
            "Kind": "float32",
            "Name": "float32",
            "CrossLanguageDefinitionId": "TypeSpec.float32",
            "Decorators": []
           },
           "IsRequired": true,
           "IsReadOnly": false,
           "Decorators": []
          },
          {
           "$id": "180",
           "Name": "yaw",
           "SerializedName": "yaw",
           "Description": "Value of angles.",
           "Type": {
            "$id": "181",
            "Kind": "float32",
            "Name": "float32",
            "CrossLanguageDefinitionId": "TypeSpec.float32",
            "Decorators": []
           },
           "IsRequired": true,
           "IsReadOnly": false,
           "Decorators": []
          }
         ]
        },
        "IsRequired": false,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "182",
        "Name": "hair",
        "SerializedName": "hair",
        "Description": "Properties describing hair attributes.",
        "Type": {
         "$id": "183",
         "Kind": "model",
         "Name": "HairProperties",
         "CrossLanguageDefinitionId": "Face.HairProperties",
         "Access": "public",
         "Usage": "Output,Json",
         "Description": "Properties describing hair attributes.",
         "Decorators": [],
         "Properties": [
          {
           "$id": "184",
           "Name": "bald",
           "SerializedName": "bald",
           "Description": "A number describing confidence level of whether the person is bald.",
           "Type": {
            "$id": "185",
            "Kind": "float32",
            "Name": "float32",
            "CrossLanguageDefinitionId": "TypeSpec.float32",
            "Decorators": []
           },
           "IsRequired": true,
           "IsReadOnly": false,
           "Decorators": []
          },
          {
           "$id": "186",
           "Name": "invisible",
           "SerializedName": "invisible",
           "Description": "A boolean value describing whether the hair is visible in the image.",
           "Type": {
            "$id": "187",
            "Kind": "boolean",
            "Name": "boolean",
            "CrossLanguageDefinitionId": "TypeSpec.boolean",
            "Decorators": []
           },
           "IsRequired": true,
           "IsReadOnly": false,
           "Decorators": []
          },
          {
           "$id": "188",
           "Name": "hairColor",
           "SerializedName": "hairColor",
           "Description": "An array of candidate colors and confidence level in the presence of each.",
           "Type": {
            "$id": "189",
            "Kind": "array",
            "Name": "ArrayHairColor",
            "ValueType": {
             "$id": "190",
             "Kind": "model",
             "Name": "HairColor",
             "CrossLanguageDefinitionId": "Face.HairColor",
             "Access": "public",
             "Usage": "Output,Json",
             "Description": "An array of candidate colors and confidence level in the presence of each.",
             "Decorators": [],
             "Properties": [
              {
               "$id": "191",
               "Name": "color",
               "SerializedName": "color",
               "Description": "Name of the hair color.",
               "Type": {
                "$ref": "34"
               },
               "IsRequired": true,
               "IsReadOnly": false,
               "Decorators": []
              },
              {
               "$id": "192",
               "Name": "confidence",
               "SerializedName": "confidence",
               "Description": "Confidence level of the color. Range between [0,1].",
               "Type": {
                "$id": "193",
                "Kind": "float32",
                "Name": "float32",
                "CrossLanguageDefinitionId": "TypeSpec.float32",
                "Decorators": []
               },
               "IsRequired": true,
               "IsReadOnly": false,
               "Decorators": []
              }
             ]
            },
            "CrossLanguageDefinitionId": "TypeSpec.Array",
            "Decorators": []
           },
           "IsRequired": true,
           "IsReadOnly": false,
           "Decorators": []
          }
         ]
        },
        "IsRequired": false,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "194",
        "Name": "occlusion",
        "SerializedName": "occlusion",
        "Description": "Properties describing occlusions on a given face.",
        "Type": {
         "$id": "195",
         "Kind": "model",
         "Name": "OcclusionProperties",
         "CrossLanguageDefinitionId": "Face.OcclusionProperties",
         "Access": "public",
         "Usage": "Output,Json",
         "Description": "Properties describing occlusions on a given face.",
         "Decorators": [],
         "Properties": [
          {
           "$id": "196",
           "Name": "foreheadOccluded",
           "SerializedName": "foreheadOccluded",
           "Description": "A boolean value indicating whether forehead is occluded.",
           "Type": {
            "$id": "197",
            "Kind": "boolean",
            "Name": "boolean",
            "CrossLanguageDefinitionId": "TypeSpec.boolean",
            "Decorators": []
           },
           "IsRequired": true,
           "IsReadOnly": false,
           "Decorators": []
          },
          {
           "$id": "198",
           "Name": "eyeOccluded",
           "SerializedName": "eyeOccluded",
           "Description": "A boolean value indicating whether eyes are occluded.",
           "Type": {
            "$id": "199",
            "Kind": "boolean",
            "Name": "boolean",
            "CrossLanguageDefinitionId": "TypeSpec.boolean",
            "Decorators": []
           },
           "IsRequired": true,
           "IsReadOnly": false,
           "Decorators": []
          },
          {
           "$id": "200",
           "Name": "mouthOccluded",
           "SerializedName": "mouthOccluded",
           "Description": "A boolean value indicating whether the mouth is occluded.",
           "Type": {
            "$id": "201",
            "Kind": "boolean",
            "Name": "boolean",
            "CrossLanguageDefinitionId": "TypeSpec.boolean",
            "Decorators": []
           },
           "IsRequired": true,
           "IsReadOnly": false,
           "Decorators": []
          }
         ]
        },
        "IsRequired": false,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "202",
        "Name": "accessories",
        "SerializedName": "accessories",
        "Description": "Properties describing any accessories on a given face.",
        "Type": {
         "$id": "203",
         "Kind": "array",
         "Name": "ArrayAccessoryItem",
         "ValueType": {
          "$id": "204",
          "Kind": "model",
          "Name": "AccessoryItem",
          "CrossLanguageDefinitionId": "Face.AccessoryItem",
          "Access": "public",
          "Usage": "Output,Json",
          "Description": "Accessory item and corresponding confidence level.",
          "Decorators": [],
          "Properties": [
           {
            "$id": "205",
            "Name": "type",
            "SerializedName": "type",
            "Description": "Type of the accessory.",
            "Type": {
             "$ref": "44"
            },
            "IsRequired": true,
            "IsReadOnly": false,
            "Decorators": []
           },
           {
            "$id": "206",
            "Name": "confidence",
            "SerializedName": "confidence",
            "Description": "Confidence level of the accessory type. Range between [0,1].",
            "Type": {
             "$id": "207",
             "Kind": "float32",
             "Name": "float32",
             "CrossLanguageDefinitionId": "TypeSpec.float32",
             "Decorators": []
            },
            "IsRequired": true,
            "IsReadOnly": false,
            "Decorators": []
           }
          ]
         },
         "CrossLanguageDefinitionId": "TypeSpec.Array",
         "Decorators": []
        },
        "IsRequired": false,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "208",
        "Name": "blur",
        "SerializedName": "blur",
        "Description": "Properties describing any presence of blur within the image.",
        "Type": {
         "$id": "209",
         "Kind": "model",
         "Name": "BlurProperties",
         "CrossLanguageDefinitionId": "Face.BlurProperties",
         "Access": "public",
         "Usage": "Output,Json",
         "Description": "Properties describing any presence of blur within the image.",
         "Decorators": [],
         "Properties": [
          {
           "$id": "210",
           "Name": "blurLevel",
           "SerializedName": "blurLevel",
           "Description": "An enum value indicating level of blurriness.",
           "Type": {
            "$ref": "49"
           },
           "IsRequired": true,
           "IsReadOnly": false,
           "Decorators": []
          },
          {
           "$id": "211",
           "Name": "value",
           "SerializedName": "value",
           "Description": "A number indicating level of blurriness ranging from 0 to 1.",
           "Type": {
            "$id": "212",
            "Kind": "float32",
            "Name": "float32",
            "CrossLanguageDefinitionId": "TypeSpec.float32",
            "Decorators": []
           },
           "IsRequired": true,
           "IsReadOnly": false,
           "Decorators": []
          }
         ]
        },
        "IsRequired": false,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "213",
        "Name": "exposure",
        "SerializedName": "exposure",
        "Description": "Properties describing exposure level of the image.",
        "Type": {
         "$id": "214",
         "Kind": "model",
         "Name": "ExposureProperties",
         "CrossLanguageDefinitionId": "Face.ExposureProperties",
         "Access": "public",
         "Usage": "Output,Json",
         "Description": "Properties describing exposure level of the image.",
         "Decorators": [],
         "Properties": [
          {
           "$id": "215",
           "Name": "exposureLevel",
           "SerializedName": "exposureLevel",
           "Description": "An enum value indicating level of exposure.",
           "Type": {
            "$ref": "54"
           },
           "IsRequired": true,
           "IsReadOnly": false,
           "Decorators": []
          },
          {
           "$id": "216",
           "Name": "value",
           "SerializedName": "value",
           "Description": "A number indicating level of exposure level ranging from 0 to 1. [0, 0.25) is under exposure. [0.25, 0.75) is good exposure. [0.75, 1] is over exposure.",
           "Type": {
            "$id": "217",
            "Kind": "float32",
            "Name": "float32",
            "CrossLanguageDefinitionId": "TypeSpec.float32",
            "Decorators": []
           },
           "IsRequired": true,
           "IsReadOnly": false,
           "Decorators": []
          }
         ]
        },
        "IsRequired": false,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "218",
        "Name": "noise",
        "SerializedName": "noise",
        "Description": "Properties describing noise level of the image.",
        "Type": {
         "$id": "219",
         "Kind": "model",
         "Name": "NoiseProperties",
         "CrossLanguageDefinitionId": "Face.NoiseProperties",
         "Access": "public",
         "Usage": "Output,Json",
         "Description": "Properties describing noise level of the image.",
         "Decorators": [],
         "Properties": [
          {
           "$id": "220",
           "Name": "noiseLevel",
           "SerializedName": "noiseLevel",
           "Description": "An enum value indicating level of noise.",
           "Type": {
            "$ref": "59"
           },
           "IsRequired": true,
           "IsReadOnly": false,
           "Decorators": []
          },
          {
           "$id": "221",
           "Name": "value",
           "SerializedName": "value",
           "Description": "A number indicating level of noise level ranging from 0 to 1. [0, 0.25) is under exposure. [0.25, 0.75) is good exposure. [0.75, 1] is over exposure. [0, 0.3) is low noise level. [0.3, 0.7) is medium noise level. [0.7, 1] is high noise level.",
           "Type": {
            "$id": "222",
            "Kind": "float32",
            "Name": "float32",
            "CrossLanguageDefinitionId": "TypeSpec.float32",
            "Decorators": []
           },
           "IsRequired": true,
           "IsReadOnly": false,
           "Decorators": []
          }
         ]
        },
        "IsRequired": false,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "223",
        "Name": "mask",
        "SerializedName": "mask",
        "Description": "Properties describing the presence of a mask on a given face.",
        "Type": {
         "$id": "224",
         "Kind": "model",
         "Name": "MaskProperties",
         "CrossLanguageDefinitionId": "Face.MaskProperties",
         "Access": "public",
         "Usage": "Output,Json",
         "Description": "Properties describing the presence of a mask on a given face.",
         "Decorators": [],
         "Properties": [
          {
           "$id": "225",
           "Name": "noseAndMouthCovered",
           "SerializedName": "noseAndMouthCovered",
           "Description": "A boolean value indicating whether nose and mouth are covered.",
           "Type": {
            "$id": "226",
            "Kind": "boolean",
            "Name": "boolean",
            "CrossLanguageDefinitionId": "TypeSpec.boolean",
            "Decorators": []
           },
           "IsRequired": true,
           "IsReadOnly": false,
           "Decorators": []
          },
          {
           "$id": "227",
           "Name": "type",
           "SerializedName": "type",
           "Description": "Type of the mask.",
           "Type": {
            "$ref": "64"
           },
           "IsRequired": true,
           "IsReadOnly": false,
           "Decorators": []
          }
         ]
        },
        "IsRequired": false,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "228",
        "Name": "qualityForRecognition",
        "SerializedName": "qualityForRecognition",
        "Description": "Properties describing the overall image quality regarding whether the image being used in the detection is of sufficient quality to attempt face recognition on.",
        "Type": {
         "$ref": "70"
        },
        "IsRequired": false,
        "IsReadOnly": false,
        "Decorators": []
       }
      ]
     },
     "IsRequired": false,
     "IsReadOnly": false,
     "Decorators": []
    }
   ]
  },
  {
   "$ref": "116"
  },
  {
   "$ref": "126"
  },
  {
   "$ref": "128"
  },
  {
   "$ref": "160"
  },
  {
   "$ref": "166"
  },
  {
   "$ref": "175"
  },
  {
   "$ref": "183"
  },
  {
   "$ref": "190"
  },
  {
   "$ref": "195"
  },
  {
   "$ref": "204"
  },
  {
   "$ref": "209"
  },
  {
   "$ref": "214"
  },
  {
   "$ref": "219"
  },
  {
   "$ref": "224"
  },
  {
   "$id": "229",
   "Kind": "model",
   "Name": "FaceErrorResponse",
   "CrossLanguageDefinitionId": "Face.FaceErrorResponse",
   "Usage": "Output,Error,Json",
   "Description": "A response containing error details.",
   "Decorators": [],
   "Properties": [
    {
     "$id": "230",
     "Name": "error",
     "SerializedName": "error",
     "Description": "The error object.",
     "Type": {
      "$id": "231",
      "Kind": "model",
      "Name": "FaceError",
      "CrossLanguageDefinitionId": "Face.FaceError",
      "Usage": "Output,Json",
      "Description": "The error object. For comprehensive details on error codes and messages returned by the Face Service, please refer to the following link: https://aka.ms/face-error-codes-and-messages.",
      "Decorators": [],
      "Properties": [
       {
        "$id": "232",
        "Name": "code",
        "SerializedName": "code",
        "Description": "One of a server-defined set of error codes.",
        "Type": {
         "$id": "233",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string",
         "Decorators": []
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "234",
        "Name": "message",
        "SerializedName": "message",
        "Description": "A human-readable representation of the error.",
        "Type": {
         "$id": "235",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string",
         "Decorators": []
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       }
      ]
     },
     "IsRequired": true,
     "IsReadOnly": false,
     "Decorators": []
    }
   ]
  },
  {
   "$ref": "231"
  },
  {
   "$id": "236",
   "Kind": "model",
   "Name": "FindSimilarRequest",
   "CrossLanguageDefinitionId": "ClientCustomizations.findSimilar.Request.anonymous",
   "Usage": "Spread,Json",
   "Decorators": [],
   "Properties": [
    {
     "$id": "237",
     "Name": "faceId",
     "SerializedName": "faceId",
     "Description": "faceId of the query face. User needs to call \"Detect\" first to get a valid faceId. Note that this faceId is not persisted and will expire 24 hours after the detection call.",
     "Type": {
      "$id": "238",
      "Kind": "string",
      "Name": "uuid",
      "CrossLanguageDefinitionId": "Azure.Core.uuid",
      "BaseType": {
       "$id": "239",
       "Kind": "string",
       "Name": "string",
       "CrossLanguageDefinitionId": "TypeSpec.string",
       "Decorators": []
      },
      "Decorators": []
     },
     "IsRequired": true,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "240",
     "Name": "maxNumOfCandidatesReturned",
     "SerializedName": "maxNumOfCandidatesReturned",
     "Description": "The number of top similar faces returned. The valid range is [1, 1000]. Default value is 20.",
     "Type": {
      "$id": "241",
      "Kind": "int32",
      "Name": "int32",
      "CrossLanguageDefinitionId": "TypeSpec.int32",
      "Decorators": []
     },
     "IsRequired": false,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "242",
     "Name": "mode",
     "SerializedName": "mode",
     "Description": "Similar face searching mode. It can be 'matchPerson' or 'matchFace'. Default value is 'matchPerson'.",
     "Type": {
      "$ref": "75"
     },
     "IsRequired": false,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "243",
     "Name": "faceIds",
     "SerializedName": "faceIds",
     "Description": "An array of candidate faceIds. All of them are created by \"Detect\" and the faceIds will expire 24 hours after the detection call. The number of faceIds is limited to 1000.",
     "Type": {
      "$id": "244",
      "Kind": "array",
      "Name": "Array",
      "ValueType": {
       "$id": "245",
       "Kind": "string",
       "Name": "uuid",
       "CrossLanguageDefinitionId": "Azure.Core.uuid",
       "BaseType": {
        "$id": "246",
        "Kind": "string",
        "Name": "string",
        "CrossLanguageDefinitionId": "TypeSpec.string",
        "Decorators": []
       },
       "Decorators": []
      },
      "CrossLanguageDefinitionId": "TypeSpec.Array",
      "Decorators": []
     },
     "IsRequired": true,
     "IsReadOnly": false,
     "Decorators": []
    }
   ]
  },
  {
   "$id": "247",
   "Kind": "model",
   "Name": "FaceFindSimilarResult",
   "CrossLanguageDefinitionId": "Face.FindSimilarResult",
   "Usage": "Output,Json",
   "Description": "Response body for find similar face operation.",
   "Decorators": [],
   "Properties": [
    {
     "$id": "248",
     "Name": "confidence",
     "SerializedName": "confidence",
     "Description": "Confidence value of the candidate. The higher confidence, the more similar. Range between [0,1].",
     "Type": {
      "$id": "249",
      "Kind": "float32",
      "Name": "float32",
      "CrossLanguageDefinitionId": "TypeSpec.float32",
      "Decorators": []
     },
     "IsRequired": true,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "250",
     "Name": "faceId",
     "SerializedName": "faceId",
     "Description": "faceId of candidate face when find by faceIds. faceId is created by \"Detect\" and will expire 24 hours after the detection call.",
     "Type": {
      "$id": "251",
      "Kind": "string",
      "Name": "uuid",
      "CrossLanguageDefinitionId": "Azure.Core.uuid",
      "BaseType": {
       "$id": "252",
       "Kind": "string",
       "Name": "string",
       "CrossLanguageDefinitionId": "TypeSpec.string",
       "Decorators": []
      },
      "Decorators": []
     },
     "IsRequired": false,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "253",
     "Name": "persistedFaceId",
     "SerializedName": "persistedFaceId",
     "Description": "persistedFaceId of candidate face when find by faceListId or largeFaceListId. persistedFaceId in face list/large face list is persisted and will not expire.",
     "Type": {
      "$id": "254",
      "Kind": "string",
      "Name": "uuid",
      "CrossLanguageDefinitionId": "Azure.Core.uuid",
      "BaseType": {
       "$id": "255",
       "Kind": "string",
       "Name": "string",
       "CrossLanguageDefinitionId": "TypeSpec.string",
       "Decorators": []
      },
      "Decorators": []
     },
     "IsRequired": false,
     "IsReadOnly": false,
     "Decorators": []
    }
   ]
  },
  {
   "$id": "256",
   "Kind": "model",
   "Name": "VerifyFaceToFaceRequest",
   "CrossLanguageDefinitionId": "ClientCustomizations.verifyFaceToFace.Request.anonymous",
   "Usage": "Spread,Json",
   "Decorators": [],
   "Properties": [
    {
     "$id": "257",
     "Name": "faceId1",
     "SerializedName": "faceId1",
     "Description": "The faceId of one face, come from \"Detect\".",
     "Type": {
      "$id": "258",
      "Kind": "string",
      "Name": "uuid",
      "CrossLanguageDefinitionId": "Azure.Core.uuid",
      "BaseType": {
       "$id": "259",
       "Kind": "string",
       "Name": "string",
       "CrossLanguageDefinitionId": "TypeSpec.string",
       "Decorators": []
      },
      "Decorators": []
     },
     "IsRequired": true,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "260",
     "Name": "faceId2",
     "SerializedName": "faceId2",
     "Description": "The faceId of another face, come from \"Detect\".",
     "Type": {
      "$id": "261",
      "Kind": "string",
      "Name": "uuid",
      "CrossLanguageDefinitionId": "Azure.Core.uuid",
      "BaseType": {
       "$id": "262",
       "Kind": "string",
       "Name": "string",
       "CrossLanguageDefinitionId": "TypeSpec.string",
       "Decorators": []
      },
      "Decorators": []
     },
     "IsRequired": true,
     "IsReadOnly": false,
     "Decorators": []
    }
   ]
  },
  {
   "$id": "263",
   "Kind": "model",
   "Name": "FaceVerificationResult",
   "CrossLanguageDefinitionId": "Face.VerificationResult",
   "Usage": "Output,Json",
   "Description": "Verify result.",
   "Decorators": [],
   "Properties": [
    {
     "$id": "264",
     "Name": "isIdentical",
     "SerializedName": "isIdentical",
     "Description": "True if the two faces belong to the same person or the face belongs to the person, otherwise false.",
     "Type": {
      "$id": "265",
      "Kind": "boolean",
      "Name": "boolean",
      "CrossLanguageDefinitionId": "TypeSpec.boolean",
      "Decorators": []
     },
     "IsRequired": true,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "266",
     "Name": "confidence",
     "SerializedName": "confidence",
     "Description": "A number indicates the similarity confidence of whether two faces belong to the same person, or whether the face belongs to the person. By default, isIdentical is set to True if similarity confidence is greater than or equal to 0.5. This is useful for advanced users to override 'isIdentical' and fine-tune the result on their own data.",
     "Type": {
      "$id": "267",
      "Kind": "float32",
      "Name": "float32",
      "CrossLanguageDefinitionId": "TypeSpec.float32",
      "Decorators": []
     },
     "IsRequired": true,
     "IsReadOnly": false,
     "Decorators": []
    }
   ]
  },
  {
   "$id": "268",
   "Kind": "model",
   "Name": "GroupRequest",
   "CrossLanguageDefinitionId": "ClientCustomizations.group.Request.anonymous",
   "Usage": "Spread,Json",
   "Decorators": [],
   "Properties": [
    {
     "$id": "269",
     "Name": "faceIds",
     "SerializedName": "faceIds",
     "Description": "Array of candidate faceIds created by \"Detect\". The maximum is 1000 faces.",
     "Type": {
      "$id": "270",
      "Kind": "array",
      "Name": "Array",
      "ValueType": {
       "$id": "271",
       "Kind": "string",
       "Name": "uuid",
       "CrossLanguageDefinitionId": "Azure.Core.uuid",
       "BaseType": {
        "$id": "272",
        "Kind": "string",
        "Name": "string",
        "CrossLanguageDefinitionId": "TypeSpec.string",
        "Decorators": []
       },
       "Decorators": []
      },
      "CrossLanguageDefinitionId": "TypeSpec.Array",
      "Decorators": []
     },
     "IsRequired": true,
     "IsReadOnly": false,
     "Decorators": []
    }
   ]
  },
  {
   "$id": "273",
   "Kind": "model",
   "Name": "FaceGroupingResult",
   "CrossLanguageDefinitionId": "Face.GroupingResult",
   "Usage": "Output,Json",
   "Description": "Response body for group face operation.",
   "Decorators": [],
   "Properties": [
    {
     "$id": "274",
     "Name": "groups",
     "SerializedName": "groups",
     "Description": "A partition of the original faces based on face similarity. Groups are ranked by number of faces.",
     "Type": {
      "$id": "275",
      "Kind": "array",
      "Name": "ArrayArray",
      "ValueType": {
       "$id": "276",
       "Kind": "array",
       "Name": "Array",
       "ValueType": {
        "$id": "277",
        "Kind": "string",
        "Name": "uuid",
        "CrossLanguageDefinitionId": "Azure.Core.uuid",
        "BaseType": {
         "$id": "278",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string",
         "Decorators": []
        },
        "Decorators": []
       },
       "CrossLanguageDefinitionId": "TypeSpec.Array",
       "Decorators": []
      },
      "CrossLanguageDefinitionId": "TypeSpec.Array",
      "Decorators": []
     },
     "IsRequired": true,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "279",
     "Name": "messyGroup",
     "SerializedName": "messyGroup",
     "Description": "Face ids array of faces that cannot find any similar faces from original faces.",
     "Type": {
      "$id": "280",
      "Kind": "array",
      "Name": "Array",
      "ValueType": {
       "$id": "281",
       "Kind": "string",
       "Name": "uuid",
       "CrossLanguageDefinitionId": "Azure.Core.uuid",
       "BaseType": {
        "$id": "282",
        "Kind": "string",
        "Name": "string",
        "CrossLanguageDefinitionId": "TypeSpec.string",
        "Decorators": []
       },
       "Decorators": []
      },
      "CrossLanguageDefinitionId": "TypeSpec.Array",
      "Decorators": []
     },
     "IsRequired": true,
     "IsReadOnly": false,
     "Decorators": []
    }
   ]
  },
  {
   "$id": "283",
   "Kind": "model",
   "Name": "CreateLivenessSessionContent",
   "CrossLanguageDefinitionId": "Face.CreateLivenessSessionContent",
   "Usage": "Input,Json",
   "Description": "Request for creating liveness session.",
   "Decorators": [],
   "Properties": [
    {
     "$id": "284",
     "Name": "livenessOperationMode",
     "SerializedName": "livenessOperationMode",
     "Description": "Type of liveness mode the client should follow.",
     "Type": {
      "$ref": "82"
     },
     "IsRequired": true,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "285",
     "Name": "sendResultsToClient",
     "SerializedName": "sendResultsToClient",
     "Description": "Whether or not to allow a '200 - Success' response body to be sent to the client, which may be undesirable for security reasons. Default is false, clients will receive a '204 - NoContent' empty body response. Regardless of selection, calling Session GetResult will always contain a response body enabling business logic to be implemented.",
     "Type": {
      "$id": "286",
      "Kind": "boolean",
      "Name": "boolean",
      "CrossLanguageDefinitionId": "TypeSpec.boolean",
      "Decorators": []
     },
     "IsRequired": false,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "287",
     "Name": "deviceCorrelationIdSetInClient",
     "SerializedName": "deviceCorrelationIdSetInClient",
     "Description": "Whether or not to allow client to set their own 'deviceCorrelationId' via the Vision SDK. Default is false, and 'deviceCorrelationId' must be set in this request body.",
     "Type": {
      "$id": "288",
      "Kind": "boolean",
      "Name": "boolean",
      "CrossLanguageDefinitionId": "TypeSpec.boolean",
      "Decorators": []
     },
     "IsRequired": false,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "289",
     "Name": "deviceCorrelationId",
     "SerializedName": "deviceCorrelationId",
     "Description": "Unique Guid per each end-user device. This is to provide rate limiting and anti-hammering. If 'deviceCorrelationIdSetInClient' is true in this request, this 'deviceCorrelationId' must be null.",
     "Type": {
      "$id": "290",
      "Kind": "string",
      "Name": "string",
      "CrossLanguageDefinitionId": "TypeSpec.string",
      "Decorators": []
     },
     "IsRequired": false,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "291",
     "Name": "authTokenTimeToLiveInSeconds",
     "SerializedName": "authTokenTimeToLiveInSeconds",
     "Description": "Seconds the session should last for. Range is 60 to 86400 seconds. Default value is 600.",
     "Type": {
      "$id": "292",
      "Kind": "int32",
      "Name": "int32",
      "CrossLanguageDefinitionId": "TypeSpec.int32",
      "Decorators": []
     },
     "IsRequired": false,
     "IsReadOnly": false,
     "Decorators": []
    }
   ]
  },
  {
   "$id": "293",
   "Kind": "model",
   "Name": "CreateLivenessSessionResult",
   "CrossLanguageDefinitionId": "Face.CreateLivenessSessionResult",
   "Usage": "Output,Json",
   "Description": "Response of liveness session creation.",
   "Decorators": [],
   "Properties": [
    {
     "$id": "294",
     "Name": "sessionId",
     "SerializedName": "sessionId",
     "Description": "The unique session ID of the created session. It will expire 48 hours after it was created or may be deleted sooner using the corresponding Session DELETE operation.",
     "Type": {
      "$id": "295",
      "Kind": "string",
      "Name": "string",
      "CrossLanguageDefinitionId": "TypeSpec.string",
      "Decorators": []
     },
     "IsRequired": true,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "296",
     "Name": "authToken",
     "SerializedName": "authToken",
     "Description": "Bearer token to provide authentication for the Vision SDK running on a client application. This Bearer token has limited permissions to perform only the required action and expires after the TTL time. It is also auditable.",
     "Type": {
      "$id": "297",
      "Kind": "string",
      "Name": "string",
      "CrossLanguageDefinitionId": "TypeSpec.string",
      "Decorators": []
     },
     "IsRequired": true,
     "IsReadOnly": false,
     "Decorators": []
    }
   ]
  },
  {
   "$id": "298",
   "Kind": "model",
   "Name": "LivenessSession",
   "CrossLanguageDefinitionId": "Face.LivenessSession",
   "Usage": "Output,Json",
   "Description": "Session result of detect liveness.",
   "Decorators": [],
   "Properties": [
    {
     "$id": "299",
     "Name": "id",
     "SerializedName": "id",
     "Description": "The unique ID to reference this session.",
     "Type": {
      "$id": "300",
      "Kind": "string",
      "Name": "string",
      "CrossLanguageDefinitionId": "TypeSpec.string",
      "Decorators": []
     },
     "IsRequired": true,
     "IsReadOnly": true,
     "Decorators": []
    },
    {
     "$id": "301",
     "Name": "createdDateTime",
     "SerializedName": "createdDateTime",
     "Description": "DateTime when this session was created.",
     "Type": {
      "$id": "302",
      "Kind": "utcDateTime",
      "Name": "utcDateTime",
      "Encode": "rfc3339",
      "WireType": {
       "$id": "303",
       "Kind": "string",
       "Name": "string",
       "CrossLanguageDefinitionId": "TypeSpec.string",
       "Decorators": []
      },
      "CrossLanguageDefinitionId": "TypeSpec.utcDateTime",
      "Decorators": []
     },
     "IsRequired": true,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "304",
     "Name": "sessionStartDateTime",
     "SerializedName": "sessionStartDateTime",
     "Description": "DateTime when this session was started by the client.",
     "Type": {
      "$id": "305",
      "Kind": "utcDateTime",
      "Name": "utcDateTime",
      "Encode": "rfc3339",
      "WireType": {
       "$id": "306",
       "Kind": "string",
       "Name": "string",
       "CrossLanguageDefinitionId": "TypeSpec.string",
       "Decorators": []
      },
      "CrossLanguageDefinitionId": "TypeSpec.utcDateTime",
      "Decorators": []
     },
     "IsRequired": false,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "307",
     "Name": "sessionExpired",
     "SerializedName": "sessionExpired",
     "Description": "Whether or not the session is expired.",
     "Type": {
      "$id": "308",
      "Kind": "boolean",
      "Name": "boolean",
      "CrossLanguageDefinitionId": "TypeSpec.boolean",
      "Decorators": []
     },
     "IsRequired": true,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "309",
     "Name": "deviceCorrelationId",
     "SerializedName": "deviceCorrelationId",
     "Description": "Unique Guid per each end-user device. This is to provide rate limiting and anti-hammering. If 'deviceCorrelationIdSetInClient' is true in this request, this 'deviceCorrelationId' must be null.",
     "Type": {
      "$id": "310",
      "Kind": "string",
      "Name": "string",
      "CrossLanguageDefinitionId": "TypeSpec.string",
      "Decorators": []
     },
     "IsRequired": false,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "311",
     "Name": "authTokenTimeToLiveInSeconds",
     "SerializedName": "authTokenTimeToLiveInSeconds",
     "Description": "Seconds the session should last for. Range is 60 to 86400 seconds. Default value is 600.",
     "Type": {
      "$id": "312",
      "Kind": "int32",
      "Name": "int32",
      "CrossLanguageDefinitionId": "TypeSpec.int32",
      "Decorators": []
     },
     "IsRequired": false,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "313",
     "Name": "status",
     "SerializedName": "status",
     "Description": "The current status of the session.",
     "Type": {
      "$ref": "86"
     },
     "IsRequired": true,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "314",
     "Name": "result",
     "SerializedName": "result",
     "Description": "The latest session audit result only populated if status == 'ResultAvailable'.",
     "Type": {
      "$id": "315",
      "Kind": "model",
      "Name": "LivenessSessionAuditEntry",
      "CrossLanguageDefinitionId": "Face.LivenessSessionAuditEntry",
      "Usage": "Output,Json",
      "Description": "Audit entry for a request in session.",
      "Decorators": [],
      "Properties": [
       {
        "$id": "316",
        "Name": "id",
        "SerializedName": "id",
        "Description": "The unique id to refer to this audit request. Use this id with the 'start' query parameter to continue on to the next page of audit results.",
        "Type": {
         "$id": "317",
         "Kind": "int64",
         "Name": "int64",
         "CrossLanguageDefinitionId": "TypeSpec.int64",
         "Decorators": []
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "318",
        "Name": "sessionId",
        "SerializedName": "sessionId",
        "Description": "The unique sessionId of the created session. It will expire 48 hours after it was created or may be deleted sooner using the corresponding session DELETE operation.",
        "Type": {
         "$id": "319",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string",
         "Decorators": []
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "320",
        "Name": "requestId",
        "SerializedName": "requestId",
        "Description": "The unique requestId that is returned by the service to the client in the 'apim-request-id' header.",
        "Type": {
         "$id": "321",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string",
         "Decorators": []
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "322",
        "Name": "clientRequestId",
        "SerializedName": "clientRequestId",
        "Description": "The unique clientRequestId that is sent by the client in the 'client-request-id' header.",
        "Type": {
         "$id": "323",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string",
         "Decorators": []
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "324",
        "Name": "receivedDateTime",
        "SerializedName": "receivedDateTime",
        "Description": "The UTC DateTime that the request was received.",
        "Type": {
         "$id": "325",
         "Kind": "utcDateTime",
         "Name": "utcDateTime",
         "Encode": "rfc3339",
         "WireType": {
          "$id": "326",
          "Kind": "string",
          "Name": "string",
          "CrossLanguageDefinitionId": "TypeSpec.string",
          "Decorators": []
         },
         "CrossLanguageDefinitionId": "TypeSpec.utcDateTime",
         "Decorators": []
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "327",
        "Name": "request",
        "SerializedName": "request",
        "Description": "The request of this entry.",
        "Type": {
         "$id": "328",
         "Kind": "model",
         "Name": "AuditRequestInfo",
         "CrossLanguageDefinitionId": "Face.AuditRequestInfo",
         "Usage": "Output,Json",
         "Description": "Audit entry for a request in the session.",
         "Decorators": [],
         "Properties": [
          {
           "$id": "329",
           "Name": "url",
           "SerializedName": "url",
           "Description": "The relative URL and query of the liveness request.",
           "Type": {
            "$id": "330",
            "Kind": "string",
            "Name": "string",
            "CrossLanguageDefinitionId": "TypeSpec.string",
            "Decorators": []
           },
           "IsRequired": true,
           "IsReadOnly": false,
           "Decorators": []
          },
          {
           "$id": "331",
           "Name": "method",
           "SerializedName": "method",
           "Description": "The HTTP method of the request (i.e., GET, POST, DELETE).",
           "Type": {
            "$id": "332",
            "Kind": "string",
            "Name": "string",
            "CrossLanguageDefinitionId": "TypeSpec.string",
            "Decorators": []
           },
           "IsRequired": true,
           "IsReadOnly": false,
           "Decorators": []
          },
          {
           "$id": "333",
           "Name": "contentLength",
           "SerializedName": "contentLength",
           "Description": "The length of the request body in bytes.",
           "Type": {
            "$id": "334",
            "Kind": "int64",
            "Name": "int64",
            "CrossLanguageDefinitionId": "TypeSpec.int64",
            "Decorators": []
           },
           "IsRequired": false,
           "IsReadOnly": false,
           "Decorators": []
          },
          {
           "$id": "335",
           "Name": "contentType",
           "SerializedName": "contentType",
           "Description": "The content type of the request.",
           "Type": {
            "$id": "336",
            "Kind": "string",
            "Name": "string",
            "CrossLanguageDefinitionId": "TypeSpec.string",
            "Decorators": []
           },
           "IsRequired": true,
           "IsReadOnly": false,
           "Decorators": []
          },
          {
           "$id": "337",
           "Name": "userAgent",
           "SerializedName": "userAgent",
           "Description": "The user agent used to submit the request.",
           "Type": {
            "$id": "338",
            "Kind": "string",
            "Name": "string",
            "CrossLanguageDefinitionId": "TypeSpec.string",
            "Decorators": []
           },
           "IsRequired": false,
           "IsReadOnly": false,
           "Decorators": []
          }
         ]
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "339",
        "Name": "response",
        "SerializedName": "response",
        "Description": "The response of this entry.",
        "Type": {
         "$id": "340",
         "Kind": "model",
         "Name": "AuditLivenessResponseInfo",
         "CrossLanguageDefinitionId": "Face.AuditLivenessResponseInfo",
         "Usage": "Output,Json",
         "Description": "Audit entry for a response in the session.",
         "Decorators": [],
         "Properties": [
          {
           "$id": "341",
           "Name": "body",
           "SerializedName": "body",
           "Description": "The response body. The schema of this field will depend on the request.url and request.method used by the client.",
           "Type": {
            "$id": "342",
            "Kind": "model",
            "Name": "LivenessResponseBody",
            "CrossLanguageDefinitionId": "Face.LivenessResponseBody",
            "Usage": "Output,Json",
            "Description": "The response body of detect liveness API call.",
            "Decorators": [],
            "AdditionalProperties": {
             "$id": "343",
             "Kind": "any",
             "Name": "unknown",
             "CrossLanguageDefinitionId": "",
             "Decorators": []
            },
            "Properties": [
             {
              "$id": "344",
              "Name": "livenessDecision",
              "SerializedName": "livenessDecision",
              "Description": "The liveness classification for the target face.",
              "Type": {
               "$ref": "91"
              },
              "IsRequired": false,
              "IsReadOnly": false,
              "Decorators": []
             },
             {
              "$id": "345",
              "Name": "target",
              "SerializedName": "target",
              "Description": "Specific targets used for liveness classification.",
              "Type": {
               "$id": "346",
               "Kind": "model",
               "Name": "LivenessOutputsTarget",
               "CrossLanguageDefinitionId": "Face.LivenessOutputsTarget",
               "Usage": "Output,Json",
               "Description": "The liveness classification for target face.",
               "Decorators": [],
               "Properties": [
                {
                 "$id": "347",
                 "Name": "faceRectangle",
                 "SerializedName": "faceRectangle",
                 "Description": "The face region where the liveness classification was made on.",
                 "Type": {
                  "$ref": "116"
                 },
                 "IsRequired": true,
                 "IsReadOnly": false,
                 "Decorators": []
                },
                {
                 "$id": "348",
                 "Name": "fileName",
                 "SerializedName": "fileName",
                 "Description": "The file name which contains the face rectangle where the liveness classification was made on.",
                 "Type": {
                  "$id": "349",
                  "Kind": "string",
                  "Name": "string",
                  "CrossLanguageDefinitionId": "TypeSpec.string",
                  "Decorators": []
                 },
                 "IsRequired": true,
                 "IsReadOnly": false,
                 "Decorators": []
                },
                {
                 "$id": "350",
                 "Name": "timeOffsetWithinFile",
                 "SerializedName": "timeOffsetWithinFile",
                 "Description": "The time offset within the file of the frame which contains the face rectangle where the liveness classification was made on.",
                 "Type": {
                  "$id": "351",
                  "Kind": "int32",
                  "Name": "int32",
                  "CrossLanguageDefinitionId": "TypeSpec.int32",
                  "Decorators": []
                 },
                 "IsRequired": true,
                 "IsReadOnly": false,
                 "Decorators": []
                },
                {
                 "$id": "352",
                 "Name": "imageType",
                 "SerializedName": "imageType",
                 "Description": "The image type which contains the face rectangle where the liveness classification was made on.",
                 "Type": {
                  "$ref": "96"
                 },
                 "IsRequired": true,
                 "IsReadOnly": false,
                 "Decorators": []
                }
               ]
              },
              "IsRequired": false,
              "IsReadOnly": false,
              "Decorators": []
             },
             {
              "$id": "353",
              "Name": "modelVersionUsed",
              "SerializedName": "modelVersionUsed",
              "Description": "The model version used for liveness classification.",
              "Type": {
               "$ref": "101"
              },
              "IsRequired": false,
              "IsReadOnly": false,
              "Decorators": []
             },
             {
              "$id": "354",
              "Name": "verifyResult",
              "SerializedName": "verifyResult",
              "Description": "The face verification output. Only available when the request is liveness with verify.",
              "Type": {
               "$id": "355",
               "Kind": "model",
               "Name": "LivenessWithVerifyOutputs",
               "CrossLanguageDefinitionId": "Face.LivenessWithVerifyOutputs",
               "Usage": "Output,Json",
               "Description": "The face verification output.",
               "Decorators": [],
               "Properties": [
                {
                 "$id": "356",
                 "Name": "verifyImage",
                 "SerializedName": "verifyImage",
                 "Description": "The detail of face for verification.",
                 "Type": {
                  "$id": "357",
                  "Kind": "model",
                  "Name": "LivenessWithVerifyImage",
                  "CrossLanguageDefinitionId": "Face.LivenessWithVerifyImage",
                  "Usage": "Output,Json",
                  "Description": "The detail of face for verification.",
                  "Decorators": [],
                  "Properties": [
                   {
                    "$id": "358",
                    "Name": "faceRectangle",
                    "SerializedName": "faceRectangle",
                    "Description": "The face region where the comparison image's classification was made.",
                    "Type": {
                     "$ref": "116"
                    },
                    "IsRequired": true,
                    "IsReadOnly": false,
                    "Decorators": []
                   },
                   {
                    "$id": "359",
                    "Name": "qualityForRecognition",
                    "SerializedName": "qualityForRecognition",
                    "Description": "Quality of face image for recognition.",
                    "Type": {
                     "$ref": "70"
                    },
                    "IsRequired": true,
                    "IsReadOnly": false,
                    "Decorators": []
                   }
                  ]
                 },
                 "IsRequired": true,
                 "IsReadOnly": false,
                 "Decorators": []
                },
                {
                 "$id": "360",
                 "Name": "matchConfidence",
                 "SerializedName": "matchConfidence",
                 "Description": "The target face liveness face and comparison image face verification confidence.",
                 "Type": {
                  "$id": "361",
                  "Kind": "float32",
                  "Name": "float32",
                  "CrossLanguageDefinitionId": "TypeSpec.float32",
                  "Decorators": []
                 },
                 "IsRequired": true,
                 "IsReadOnly": false,
                 "Decorators": []
                },
                {
                 "$id": "362",
                 "Name": "isIdentical",
                 "SerializedName": "isIdentical",
                 "Description": "Whether the target liveness face and comparison image face match.",
                 "Type": {
                  "$id": "363",
                  "Kind": "boolean",
                  "Name": "boolean",
                  "CrossLanguageDefinitionId": "TypeSpec.boolean",
                  "Decorators": []
                 },
                 "IsRequired": true,
                 "IsReadOnly": false,
                 "Decorators": []
                }
               ]
              },
              "IsRequired": false,
              "IsReadOnly": false,
              "Decorators": []
             }
            ]
           },
           "IsRequired": true,
           "IsReadOnly": false,
           "Decorators": []
          },
          {
           "$id": "364",
           "Name": "statusCode",
           "SerializedName": "statusCode",
           "Description": "The HTTP status code returned to the client.",
           "Type": {
            "$id": "365",
            "Kind": "int32",
            "Name": "int32",
            "CrossLanguageDefinitionId": "TypeSpec.int32",
            "Decorators": []
           },
           "IsRequired": true,
           "IsReadOnly": false,
           "Decorators": []
          },
          {
           "$id": "366",
           "Name": "latencyInMilliseconds",
           "SerializedName": "latencyInMilliseconds",
           "Description": "The server measured latency for this request in milliseconds.",
           "Type": {
            "$id": "367",
            "Kind": "int64",
            "Name": "int64",
            "CrossLanguageDefinitionId": "TypeSpec.int64",
            "Decorators": []
           },
           "IsRequired": true,
           "IsReadOnly": false,
           "Decorators": []
          }
         ]
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       },
       {
        "$id": "368",
        "Name": "digest",
        "SerializedName": "digest",
        "Description": "The server calculated digest for this request. If the client reported digest differs from the server calculated digest, then the message integrity between the client and service has been compromised and the result should not be trusted. For more information, see how to guides on how to leverage this value to secure your end-to-end solution.",
        "Type": {
         "$id": "369",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string",
         "Decorators": []
        },
        "IsRequired": true,
        "IsReadOnly": false,
        "Decorators": []
       }
      ]
     },
     "IsRequired": false,
     "IsReadOnly": false,
     "Decorators": []
    }
   ]
  },
  {
   "$ref": "315"
  },
  {
   "$ref": "328"
  },
  {
   "$ref": "340"
  },
  {
   "$ref": "342"
  },
  {
   "$ref": "346"
  },
  {
   "$ref": "355"
  },
  {
   "$ref": "357"
  },
  {
   "$id": "370",
   "Kind": "model",
   "Name": "LivenessSessionItem",
   "CrossLanguageDefinitionId": "Face.LivenessSessionItem",
   "Usage": "Output,Json",
   "Description": "Session data returned for enumeration.",
   "Decorators": [],
   "Properties": [
    {
     "$id": "371",
     "Name": "id",
     "SerializedName": "id",
     "Description": "The unique ID to reference this session.",
     "Type": {
      "$id": "372",
      "Kind": "string",
      "Name": "string",
      "CrossLanguageDefinitionId": "TypeSpec.string",
      "Decorators": []
     },
     "IsRequired": true,
     "IsReadOnly": true,
     "Decorators": []
    },
    {
     "$id": "373",
     "Name": "createdDateTime",
     "SerializedName": "createdDateTime",
     "Description": "DateTime when this session was created.",
     "Type": {
      "$id": "374",
      "Kind": "utcDateTime",
      "Name": "utcDateTime",
      "Encode": "rfc3339",
      "WireType": {
       "$id": "375",
       "Kind": "string",
       "Name": "string",
       "CrossLanguageDefinitionId": "TypeSpec.string",
       "Decorators": []
      },
      "CrossLanguageDefinitionId": "TypeSpec.utcDateTime",
      "Decorators": []
     },
     "IsRequired": true,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "376",
     "Name": "sessionStartDateTime",
     "SerializedName": "sessionStartDateTime",
     "Description": "DateTime when this session was started by the client.",
     "Type": {
      "$id": "377",
      "Kind": "utcDateTime",
      "Name": "utcDateTime",
      "Encode": "rfc3339",
      "WireType": {
       "$id": "378",
       "Kind": "string",
       "Name": "string",
       "CrossLanguageDefinitionId": "TypeSpec.string",
       "Decorators": []
      },
      "CrossLanguageDefinitionId": "TypeSpec.utcDateTime",
      "Decorators": []
     },
     "IsRequired": false,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "379",
     "Name": "sessionExpired",
     "SerializedName": "sessionExpired",
     "Description": "Whether or not the session is expired.",
     "Type": {
      "$id": "380",
      "Kind": "boolean",
      "Name": "boolean",
      "CrossLanguageDefinitionId": "TypeSpec.boolean",
      "Decorators": []
     },
     "IsRequired": true,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "381",
     "Name": "deviceCorrelationId",
     "SerializedName": "deviceCorrelationId",
     "Description": "Unique Guid per each end-user device. This is to provide rate limiting and anti-hammering. If 'deviceCorrelationIdSetInClient' is true in this request, this 'deviceCorrelationId' must be null.",
     "Type": {
      "$id": "382",
      "Kind": "string",
      "Name": "string",
      "CrossLanguageDefinitionId": "TypeSpec.string",
      "Decorators": []
     },
     "IsRequired": false,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "383",
     "Name": "authTokenTimeToLiveInSeconds",
     "SerializedName": "authTokenTimeToLiveInSeconds",
     "Description": "Seconds the session should last for. Range is 60 to 86400 seconds. Default value is 600.",
     "Type": {
      "$id": "384",
      "Kind": "int32",
      "Name": "int32",
      "CrossLanguageDefinitionId": "TypeSpec.int32",
      "Decorators": []
     },
     "IsRequired": false,
     "IsReadOnly": false,
     "Decorators": []
    }
   ]
  },
  {
   "$id": "385",
   "Kind": "model",
   "Name": "CreateLivenessWithVerifySessionResult",
   "CrossLanguageDefinitionId": "Face.CreateLivenessWithVerifySessionResult",
   "Access": "public",
   "Usage": "Output,Json",
   "Description": "Response of liveness session with verify creation with verify image provided.",
   "Decorators": [],
   "Properties": [
    {
     "$id": "386",
     "Name": "sessionId",
     "SerializedName": "sessionId",
     "Description": "The unique session ID of the created session. It will expire 48 hours after it was created or may be deleted sooner using the corresponding Session DELETE operation.",
     "Type": {
      "$id": "387",
      "Kind": "string",
      "Name": "string",
      "CrossLanguageDefinitionId": "TypeSpec.string",
      "Decorators": []
     },
     "IsRequired": true,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "388",
     "Name": "authToken",
     "SerializedName": "authToken",
     "Description": "Bearer token to provide authentication for the Vision SDK running on a client application. This Bearer token has limited permissions to perform only the required action and expires after the TTL time. It is also auditable.",
     "Type": {
      "$id": "389",
      "Kind": "string",
      "Name": "string",
      "CrossLanguageDefinitionId": "TypeSpec.string",
      "Decorators": []
     },
     "IsRequired": true,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "390",
     "Name": "verifyImage",
     "SerializedName": "verifyImage",
     "Description": "The detail of face for verification.",
     "Type": {
      "$ref": "357"
     },
     "IsRequired": false,
     "IsReadOnly": false,
     "Decorators": []
    }
   ]
  },
  {
   "$id": "391",
   "Kind": "model",
   "Name": "CreateLivenessWithVerifySessionContent",
   "CrossLanguageDefinitionId": "Face.CreateLivenessWithVerifySessionContent",
   "Usage": "Input,MultipartFormData",
   "Description": "Request of liveness with verify session creation.",
   "Decorators": [],
   "Properties": [
    {
     "$id": "392",
     "Name": "Parameters",
     "SerializedName": "Parameters",
     "Description": "The parameters for creating session.",
     "Type": {
      "$ref": "283"
     },
     "IsRequired": true,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "393",
     "Name": "VerifyImage",
     "SerializedName": "VerifyImage",
     "Description": "The image stream for verify. Content-Disposition header field for this part must have filename.",
     "Type": {
      "$id": "394",
      "Kind": "bytes",
      "Name": "bytes",
      "Encode": "base64",
      "CrossLanguageDefinitionId": "TypeSpec.bytes",
      "Decorators": []
     },
     "IsRequired": true,
     "IsReadOnly": false,
     "Decorators": []
    }
   ]
  },
  {
   "$id": "395",
   "Kind": "model",
   "Name": "LivenessWithVerifySession",
   "CrossLanguageDefinitionId": "Face.LivenessWithVerifySession",
   "Usage": "Output,Json",
   "Description": "Session result of detect liveness with verify.",
   "Decorators": [],
   "Properties": [
    {
     "$id": "396",
     "Name": "id",
     "SerializedName": "id",
     "Description": "The unique ID to reference this session.",
     "Type": {
      "$id": "397",
      "Kind": "string",
      "Name": "string",
      "CrossLanguageDefinitionId": "TypeSpec.string",
      "Decorators": []
     },
     "IsRequired": true,
     "IsReadOnly": true,
     "Decorators": []
    },
    {
     "$id": "398",
     "Name": "createdDateTime",
     "SerializedName": "createdDateTime",
     "Description": "DateTime when this session was created.",
     "Type": {
      "$id": "399",
      "Kind": "utcDateTime",
      "Name": "utcDateTime",
      "Encode": "rfc3339",
      "WireType": {
       "$id": "400",
       "Kind": "string",
       "Name": "string",
       "CrossLanguageDefinitionId": "TypeSpec.string",
       "Decorators": []
      },
      "CrossLanguageDefinitionId": "TypeSpec.utcDateTime",
      "Decorators": []
     },
     "IsRequired": true,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "401",
     "Name": "sessionStartDateTime",
     "SerializedName": "sessionStartDateTime",
     "Description": "DateTime when this session was started by the client.",
     "Type": {
      "$id": "402",
      "Kind": "utcDateTime",
      "Name": "utcDateTime",
      "Encode": "rfc3339",
      "WireType": {
       "$id": "403",
       "Kind": "string",
       "Name": "string",
       "CrossLanguageDefinitionId": "TypeSpec.string",
       "Decorators": []
      },
      "CrossLanguageDefinitionId": "TypeSpec.utcDateTime",
      "Decorators": []
     },
     "IsRequired": false,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "404",
     "Name": "sessionExpired",
     "SerializedName": "sessionExpired",
     "Description": "Whether or not the session is expired.",
     "Type": {
      "$id": "405",
      "Kind": "boolean",
      "Name": "boolean",
      "CrossLanguageDefinitionId": "TypeSpec.boolean",
      "Decorators": []
     },
     "IsRequired": true,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "406",
     "Name": "deviceCorrelationId",
     "SerializedName": "deviceCorrelationId",
     "Description": "Unique Guid per each end-user device. This is to provide rate limiting and anti-hammering. If 'deviceCorrelationIdSetInClient' is true in this request, this 'deviceCorrelationId' must be null.",
     "Type": {
      "$id": "407",
      "Kind": "string",
      "Name": "string",
      "CrossLanguageDefinitionId": "TypeSpec.string",
      "Decorators": []
     },
     "IsRequired": false,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "408",
     "Name": "authTokenTimeToLiveInSeconds",
     "SerializedName": "authTokenTimeToLiveInSeconds",
     "Description": "Seconds the session should last for. Range is 60 to 86400 seconds. Default value is 600.",
     "Type": {
      "$id": "409",
      "Kind": "int32",
      "Name": "int32",
      "CrossLanguageDefinitionId": "TypeSpec.int32",
      "Decorators": []
     },
     "IsRequired": false,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "410",
     "Name": "status",
     "SerializedName": "status",
     "Description": "The current status of the session.",
     "Type": {
      "$ref": "86"
     },
     "IsRequired": true,
     "IsReadOnly": false,
     "Decorators": []
    },
    {
     "$id": "411",
     "Name": "result",
     "SerializedName": "result",
     "Description": "The latest session audit result only populated if status == 'ResultAvailable'.",
     "Type": {
      "$ref": "315"
     },
     "IsRequired": false,
     "IsReadOnly": false,
     "Decorators": []
    }
   ]
  }
 ],
 "Clients": [
  {
   "$id": "412",
   "Name": "FaceClient",
   "Operations": [
    {
     "$id": "413",
     "Name": "detectFromUrlImpl",
     "ResourceName": "FaceClient",
     "Summary": "Detect human faces in an image, return face rectangles, and optionally with faceIds, landmarks, and attributes.",
     "Description": "> [!IMPORTANT]\n> To mitigate potential misuse that can subject people to stereotyping, discrimination, or unfair denial of services, we are retiring Face API attributes that predict emotion, gender, age, smile, facial hair, hair, and makeup. Read more about this decision https://azure.microsoft.com/blog/responsible-ai-investments-and-safeguards-for-facial-recognition/.\n\n*\n  * No image will be stored. Only the extracted face feature(s) will be stored on server. The faceId is an identifier of the face feature and will be used in \"Identify\", \"Verify\", and \"Find Similar\". The stored face features will expire and be deleted at the time specified by faceIdTimeToLive after the original detection call.\n  * Optional parameters include faceId, landmarks, and attributes. Attributes include headPose, glasses, occlusion, accessories, blur, exposure, noise, mask, and qualityForRecognition. Some of the results returned for specific attributes may not be highly accurate.\n  * JPEG, PNG, GIF (the first frame), and BMP format are supported. The allowed image file size is from 1KB to 6MB.\n  * The minimum detectable face size is 36x36 pixels in an image no larger than 1920x1080 pixels. Images with dimensions higher than 1920x1080 pixels will need a proportionally larger minimum face size.\n  * Up to 100 faces can be returned for an image. Faces are ranked by face rectangle size from large to small.\n  * For optimal results when querying \"Identify\", \"Verify\", and \"Find Similar\" ('returnFaceId' is true), please use faces that are: frontal, clear, and with a minimum size of 200x200 pixels (100 pixels between eyes).\n  * Different 'detectionModel' values can be provided. To use and compare different detection models, please refer to https://learn.microsoft.com/azure/ai-services/computer-vision/how-to/specify-detection-model\n    * 'detection_02': Face attributes and landmarks are disabled if you choose this detection model.\n    * 'detection_03': Face attributes (mask, blur, and headPose) and landmarks are supported if you choose this detection model.\n  * Different 'recognitionModel' values are provided. If follow-up operations like \"Verify\", \"Identify\", \"Find Similar\" are needed, please specify the recognition model with 'recognitionModel' parameter. The default value for 'recognitionModel' is 'recognition_01', if latest model needed, please explicitly specify the model you need in this parameter. Once specified, the detected faceIds will be associated with the specified recognition model. More details, please refer to https://learn.microsoft.com/azure/ai-services/computer-vision/how-to/specify-recognition-model.",
     "Accessibility": "internal",
     "Parameters": [
      {
       "$id": "414",
       "Name": "endpoint",
       "NameInRequest": "endpoint",
       "Description": "Supported Cognitive Services endpoints (protocol and hostname, for example:\nhttps://{resource-name}.cognitiveservices.azure.com).",
       "Type": {
        "$id": "415",
        "Kind": "url",
        "Name": "url",
        "CrossLanguageDefinitionId": "TypeSpec.url"
       },
       "Location": "Uri",
       "IsApiVersion": false,
       "IsResourceParameter": false,
       "IsContentType": false,
       "IsRequired": true,
       "IsEndpoint": true,
       "SkipUrlEncoding": false,
       "Explode": false,
       "Kind": "Client"
      },
      {
       "$id": "416",
       "Name": "apiVersion",
       "NameInRequest": "apiVersion",
       "Description": "API Version",
       "Type": {
        "$ref": "79"
       },
       "Location": "Uri",
       "IsApiVersion": true,
       "IsResourceParameter": false,
       "IsContentType": false,
       "IsRequired": true,
       "IsEndpoint": false,
       "SkipUrlEncoding": false,
       "Explode": false,
       "Kind": "Client",
       "DefaultValue": {
        "$id": "417",
        "Type": {
         "$id": "418",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "v1.1-preview.1"
       }
      },
      {
       "$id": "419",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Description": "The format of the HTTP payload.",
       "Type": {
        "$id": "420",
        "Kind": "constant",
        "ValueType": {
         "$id": "421",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string",
         "Decorators": []
        },
        "Value": "application/json",
        "Decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "422",
       "Name": "detectionModel",
       "NameInRequest": "detectionModel",
       "Description": "The 'detectionModel' associated with the detected faceIds. Supported 'detectionModel' values include 'detection_01', 'detection_02' and 'detection_03'. The default value is 'detection_01'.",
       "Type": {
        "$ref": "2"
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "423",
       "Name": "recognitionModel",
       "NameInRequest": "recognitionModel",
       "Description": "The 'recognitionModel' associated with the detected faceIds. Supported 'recognitionModel' values include 'recognition_01', 'recognition_02', 'recognition_03' or 'recognition_04'. The default value is 'recognition_01'. 'recognition_04' is recommended since its accuracy is improved on faces wearing masks compared with 'recognition_03', and its overall accuracy is improved compared with 'recognition_01' and 'recognition_02'.",
       "Type": {
        "$ref": "7"
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "424",
       "Name": "returnFaceId",
       "NameInRequest": "returnFaceId",
       "Description": "Return faceIds of the detected faces or not. The default value is true.",
       "Type": {
        "$id": "425",
        "Kind": "boolean",
        "Name": "boolean",
        "CrossLanguageDefinitionId": "TypeSpec.boolean",
        "Decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "426",
       "Name": "returnFaceAttributes",
       "NameInRequest": "returnFaceAttributes",
       "Description": "Analyze and return the one or more specified face attributes in the comma-separated string like 'returnFaceAttributes=headPose,glasses'. Face attribute analysis has additional computational and time cost.",
       "Type": {
        "$id": "427",
        "Kind": "array",
        "Name": "ArrayFaceAttributeType",
        "ValueType": {
         "$ref": "13"
        },
        "CrossLanguageDefinitionId": "TypeSpec.Array",
        "Decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "ArraySerializationDelimiter": ",",
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "428",
       "Name": "returnFaceLandmarks",
       "NameInRequest": "returnFaceLandmarks",
       "Description": "Return face landmarks of the detected faces or not. The default value is false.",
       "Type": {
        "$id": "429",
        "Kind": "boolean",
        "Name": "boolean",
        "CrossLanguageDefinitionId": "TypeSpec.boolean",
        "Decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "430",
       "Name": "returnRecognitionModel",
       "NameInRequest": "returnRecognitionModel",
       "Description": "Return 'recognitionModel' or not. The default value is false. This is only applicable when returnFaceId = true.",
       "Type": {
        "$id": "431",
        "Kind": "boolean",
        "Name": "boolean",
        "CrossLanguageDefinitionId": "TypeSpec.boolean",
        "Decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "432",
       "Name": "faceIdTimeToLive",
       "NameInRequest": "faceIdTimeToLive",
       "Description": "The number of seconds for the face ID being cached. Supported range from 60 seconds up to 86400 seconds. The default value is 86400 (24 hours).",
       "Type": {
        "$id": "433",
        "Kind": "int32",
        "Name": "int32",
        "CrossLanguageDefinitionId": "TypeSpec.int32",
        "Decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "434",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "435",
        "Kind": "constant",
        "ValueType": {
         "$id": "436",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string",
         "Decorators": []
        },
        "Value": "application/json",
        "Decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "437",
       "Name": "detectFromUrlRequest",
       "NameInRequest": "detectFromUrlRequest",
       "Type": {
        "$ref": "107"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Spread",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "438",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$id": "439",
        "Kind": "array",
        "Name": "ArrayFaceDetectionResult",
        "ValueType": {
         "$ref": "110"
        },
        "CrossLanguageDefinitionId": "TypeSpec.Array",
        "Decorators": []
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{endpoint}/face/{apiVersion}",
     "Path": "/detect",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "ClientCustomizations.FaceClient.detectFromUrl",
     "Decorators": [],
     "Examples": [
      {
       "$id": "440",
       "kind": "http",
       "name": "Detect with Image URL",
       "description": "Detect with Image URL",
       "filePath": "v1.1-preview.1/DetectFromUrl.json",
       "rawExample": {
        "$id": "441",
        "title": "Detect with Image URL",
        "operationId": "FaceDetectionOperations_DetectFromUrl",
        "parameters": {
         "$id": "442",
         "apiVersion": "v1.1-preview.1",
         "returnFaceId": true,
         "returnFaceLandmarks": true,
         "returnFaceAttributes": "glasses,headPose,occlusion,accessories,blur,exposure,noise,qualityForRecognition",
         "recognitionModel": "recognition_03",
         "returnRecognitionModel": true,
         "detectionModel": "detection_01",
         "faceIdTimeToLive": 60,
         "body": {
          "$id": "443",
          "url": "https://microsoft.com/example.jpg"
         }
        },
        "responses": {
         "200": {
          "$id": "445",
          "body": [
           {
            "$id": "446",
            "faceId": "c5c24a82-6845-4031-9d5d-978df9175426",
            "recognitionModel": "recognition_03",
            "faceRectangle": {
             "$id": "447",
             "width": 78,
             "height": 78,
             "left": 394,
             "top": 54
            },
            "faceLandmarks": {
             "$id": "448",
             "pupilLeft": {
              "$id": "449",
              "x": 412.7,
              "y": 78.4
             },
             "pupilRight": {
              "$id": "450",
              "x": 446.8,
              "y": 74.2
             },
             "noseTip": {
              "$id": "451",
              "x": 437.7,
              "y": 92.4
             },
             "mouthLeft": {
              "$id": "452",
              "x": 417.8,
              "y": 114.4
             },
             "mouthRight": {
              "$id": "453",
              "x": 451.3,
              "y": 109.3
             },
             "eyebrowLeftOuter": {
              "$id": "454",
              "x": 397.9,
              "y": 78.5
             },
             "eyebrowLeftInner": {
              "$id": "455",
              "x": 425.4,
              "y": 70.5
             },
             "eyeLeftOuter": {
              "$id": "456",
              "x": 406.7,
              "y": 80.6
             },
             "eyeLeftTop": {
              "$id": "457",
              "x": 412.2,
              "y": 76.2
             },
             "eyeLeftBottom": {
              "$id": "458",
              "x": 413,
              "y": 80.1
             },
             "eyeLeftInner": {
              "$id": "459",
              "x": 418.9,
              "y": 78
             },
             "eyebrowRightInner": {
              "$id": "460",
              "x": 4.8,
              "y": 69.7
             },
             "eyebrowRightOuter": {
              "$id": "461",
              "x": 5.5,
              "y": 68.5
             },
             "eyeRightInner": {
              "$id": "462",
              "x": 441.5,
              "y": 75
             },
             "eyeRightTop": {
              "$id": "463",
              "x": 446.4,
              "y": 71.7
             },
             "eyeRightBottom": {
              "$id": "464",
              "x": 447,
              "y": 75.3
             },
             "eyeRightOuter": {
              "$id": "465",
              "x": 451.7,
              "y": 73.4
             },
             "noseRootLeft": {
              "$id": "466",
              "x": 428,
              "y": 77.1
             },
             "noseRootRight": {
              "$id": "467",
              "x": 435.8,
              "y": 75.6
             },
             "noseLeftAlarTop": {
              "$id": "468",
              "x": 428.3,
              "y": 89.7
             },
             "noseRightAlarTop": {
              "$id": "469",
              "x": 442.2,
              "y": 87
             },
             "noseLeftAlarOutTip": {
              "$id": "470",
              "x": 424.3,
              "y": 96.4
             },
             "noseRightAlarOutTip": {
              "$id": "471",
              "x": 446.6,
              "y": 92.5
             },
             "upperLipTop": {
              "$id": "472",
              "x": 437.6,
              "y": 105.9
             },
             "upperLipBottom": {
              "$id": "473",
              "x": 437.6,
              "y": 108.2
             },
             "underLipTop": {
              "$id": "474",
              "x": 436.8,
              "y": 111.4
             },
             "underLipBottom": {
              "$id": "475",
              "x": 437.3,
              "y": 114.5
             }
            },
            "faceAttributes": {
             "$id": "476",
             "glasses": "sunglasses",
             "headPose": {
              "$id": "477",
              "roll": 2.1,
              "yaw": 3,
              "pitch": 1.6
             },
             "occlusion": {
              "$id": "478",
              "foreheadOccluded": false,
              "eyeOccluded": false,
              "mouthOccluded": false
             },
             "accessories": [
              {
               "$id": "479",
               "type": "headwear",
               "confidence": 0.99
              },
              {
               "$id": "480",
               "type": "glasses",
               "confidence": 1
              },
              {
               "$id": "481",
               "type": "mask",
               "confidence": 0.87
              }
             ],
             "blur": {
              "$id": "482",
              "blurLevel": "medium",
              "value": 0.51
             },
             "exposure": {
              "$id": "483",
              "exposureLevel": "goodExposure",
              "value": 0.55
             },
             "noise": {
              "$id": "484",
              "noiseLevel": "low",
              "value": 0.12
             },
             "qualityForRecognition": "high"
            }
           }
          ]
         },
         "$id": "444"
        }
       },
       "parameters": [
        {
         "$id": "485",
         "parameter": {
          "$ref": "424"
         },
         "value": {
          "$id": "486",
          "kind": "boolean",
          "type": {
           "$ref": "425"
          },
          "value": true
         }
        },
        {
         "$id": "487",
         "parameter": {
          "$ref": "428"
         },
         "value": {
          "$id": "488",
          "kind": "boolean",
          "type": {
           "$ref": "429"
          },
          "value": true
         }
        },
        {
         "$id": "489",
         "parameter": {
          "$ref": "423"
         },
         "value": {
          "$id": "490",
          "kind": "string",
          "type": {
           "$ref": "7"
          },
          "value": "recognition_03"
         }
        },
        {
         "$id": "491",
         "parameter": {
          "$ref": "430"
         },
         "value": {
          "$id": "492",
          "kind": "boolean",
          "type": {
           "$ref": "431"
          },
          "value": true
         }
        },
        {
         "$id": "493",
         "parameter": {
          "$ref": "422"
         },
         "value": {
          "$id": "494",
          "kind": "string",
          "type": {
           "$ref": "2"
          },
          "value": "detection_01"
         }
        },
        {
         "$id": "495",
         "parameter": {
          "$ref": "432"
         },
         "value": {
          "$id": "496",
          "kind": "number",
          "type": {
           "$ref": "433"
          },
          "value": 60
         }
        },
        {
         "$id": "497",
         "parameter": {
          "$ref": "437"
         },
         "value": {
          "$id": "498",
          "kind": "model",
          "type": {
           "$ref": "107"
          },
          "value": {
           "$id": "499",
           "url": {
            "$id": "500",
            "kind": "string",
            "type": {
             "$ref": "109"
            },
            "value": "https://microsoft.com/example.jpg"
           }
          }
         }
        }
       ],
       "responses": {
        "$id": "501"
       }
      }
     ]
    },
    {
     "$id": "502",
     "Name": "detectImpl",
     "ResourceName": "FaceClient",
     "Summary": "Detect human faces in an image, return face rectangles, and optionally with faceIds, landmarks, and attributes.",
     "Description": "> [!IMPORTANT]\n> To mitigate potential misuse that can subject people to stereotyping, discrimination, or unfair denial of services, we are retiring Face API attributes that predict emotion, gender, age, smile, facial hair, hair, and makeup. Read more about this decision https://azure.microsoft.com/blog/responsible-ai-investments-and-safeguards-for-facial-recognition/.\n\n*\n  * No image will be stored. Only the extracted face feature(s) will be stored on server. The faceId is an identifier of the face feature and will be used in \"Identify\", \"Verify\", and \"Find Similar\". The stored face features will expire and be deleted at the time specified by faceIdTimeToLive after the original detection call.\n  * Optional parameters include faceId, landmarks, and attributes. Attributes include headPose, glasses, occlusion, accessories, blur, exposure, noise, mask, and qualityForRecognition. Some of the results returned for specific attributes may not be highly accurate.\n  * JPEG, PNG, GIF (the first frame), and BMP format are supported. The allowed image file size is from 1KB to 6MB.\n  * The minimum detectable face size is 36x36 pixels in an image no larger than 1920x1080 pixels. Images with dimensions higher than 1920x1080 pixels will need a proportionally larger minimum face size.\n  * Up to 100 faces can be returned for an image. Faces are ranked by face rectangle size from large to small.\n  * For optimal results when querying \"Identify\", \"Verify\", and \"Find Similar\" ('returnFaceId' is true), please use faces that are: frontal, clear, and with a minimum size of 200x200 pixels (100 pixels between eyes).\n  * Different 'detectionModel' values can be provided. To use and compare different detection models, please refer to https://learn.microsoft.com/azure/ai-services/computer-vision/how-to/specify-detection-model\n    * 'detection_02': Face attributes and landmarks are disabled if you choose this detection model.\n    * 'detection_03': Face attributes (mask, blur, and headPose) and landmarks are supported if you choose this detection model.\n  * Different 'recognitionModel' values are provided. If follow-up operations like \"Verify\", \"Identify\", \"Find Similar\" are needed, please specify the recognition model with 'recognitionModel' parameter. The default value for 'recognitionModel' is 'recognition_01', if latest model needed, please explicitly specify the model you need in this parameter. Once specified, the detected faceIds will be associated with the specified recognition model. More details, please refer to https://learn.microsoft.com/azure/ai-services/computer-vision/how-to/specify-recognition-model.",
     "Accessibility": "internal",
     "Parameters": [
      {
       "$ref": "414"
      },
      {
       "$ref": "416"
      },
      {
       "$id": "503",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Description": "The format of the HTTP payload.",
       "Type": {
        "$id": "504",
        "Kind": "constant",
        "ValueType": {
         "$id": "505",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string",
         "Decorators": []
        },
        "Value": "application/octet-stream",
        "Decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "506",
       "Name": "detectionModel",
       "NameInRequest": "detectionModel",
       "Description": "The 'detectionModel' associated with the detected faceIds. Supported 'detectionModel' values include 'detection_01', 'detection_02' and 'detection_03'. The default value is 'detection_01'.",
       "Type": {
        "$ref": "2"
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "507",
       "Name": "recognitionModel",
       "NameInRequest": "recognitionModel",
       "Description": "The 'recognitionModel' associated with the detected faceIds. Supported 'recognitionModel' values include 'recognition_01', 'recognition_02', 'recognition_03' or 'recognition_04'. The default value is 'recognition_01'. 'recognition_04' is recommended since its accuracy is improved on faces wearing masks compared with 'recognition_03', and its overall accuracy is improved compared with 'recognition_01' and 'recognition_02'.",
       "Type": {
        "$ref": "7"
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "508",
       "Name": "returnFaceId",
       "NameInRequest": "returnFaceId",
       "Description": "Return faceIds of the detected faces or not. The default value is true.",
       "Type": {
        "$id": "509",
        "Kind": "boolean",
        "Name": "boolean",
        "CrossLanguageDefinitionId": "TypeSpec.boolean",
        "Decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "510",
       "Name": "returnFaceAttributes",
       "NameInRequest": "returnFaceAttributes",
       "Description": "Analyze and return the one or more specified face attributes in the comma-separated string like 'returnFaceAttributes=headPose,glasses'. Face attribute analysis has additional computational and time cost.",
       "Type": {
        "$id": "511",
        "Kind": "array",
        "Name": "ArrayFaceAttributeType",
        "ValueType": {
         "$ref": "13"
        },
        "CrossLanguageDefinitionId": "TypeSpec.Array",
        "Decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "ArraySerializationDelimiter": ",",
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "512",
       "Name": "returnFaceLandmarks",
       "NameInRequest": "returnFaceLandmarks",
       "Description": "Return face landmarks of the detected faces or not. The default value is false.",
       "Type": {
        "$id": "513",
        "Kind": "boolean",
        "Name": "boolean",
        "CrossLanguageDefinitionId": "TypeSpec.boolean",
        "Decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "514",
       "Name": "returnRecognitionModel",
       "NameInRequest": "returnRecognitionModel",
       "Description": "Return 'recognitionModel' or not. The default value is false. This is only applicable when returnFaceId = true.",
       "Type": {
        "$id": "515",
        "Kind": "boolean",
        "Name": "boolean",
        "CrossLanguageDefinitionId": "TypeSpec.boolean",
        "Decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "516",
       "Name": "faceIdTimeToLive",
       "NameInRequest": "faceIdTimeToLive",
       "Description": "The number of seconds for the face ID being cached. Supported range from 60 seconds up to 86400 seconds. The default value is 86400 (24 hours).",
       "Type": {
        "$id": "517",
        "Kind": "int32",
        "Name": "int32",
        "CrossLanguageDefinitionId": "TypeSpec.int32",
        "Decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "518",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "519",
        "Kind": "constant",
        "ValueType": {
         "$id": "520",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string",
         "Decorators": []
        },
        "Value": "application/json",
        "Decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "521",
       "Name": "imageContent",
       "NameInRequest": "imageContent",
       "Description": "The input image binary.",
       "Type": {
        "$id": "522",
        "Kind": "bytes",
        "Name": "bytes",
        "Encode": "bytes",
        "CrossLanguageDefinitionId": "TypeSpec.bytes",
        "Decorators": []
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "523",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$id": "524",
        "Kind": "array",
        "Name": "ArrayFaceDetectionResult",
        "ValueType": {
         "$ref": "110"
        },
        "CrossLanguageDefinitionId": "TypeSpec.Array",
        "Decorators": []
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Binary",
     "Uri": "{endpoint}/face/{apiVersion}",
     "Path": "/detect",
     "RequestMediaTypes": [
      "application/octet-stream"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "ClientCustomizations.FaceClient.detect",
     "Decorators": [],
     "Examples": [
      {
       "$id": "525",
       "kind": "http",
       "name": "Detect with Image",
       "description": "Detect with Image",
       "filePath": "v1.1-preview.1/Detect.json",
       "rawExample": {
        "$id": "526",
        "title": "Detect with Image",
        "operationId": "FaceDetectionOperations_Detect",
        "parameters": {
         "$id": "527",
         "apiVersion": "v1.1-preview.1",
         "returnFaceId": true,
         "returnFaceLandmarks": true,
         "returnFaceAttributes": "glasses,headPose,occlusion,accessories,blur,exposure,noise,qualityForRecognition",
         "recognitionModel": "recognition_03",
         "returnRecognitionModel": true,
         "detectionModel": "detection_01",
         "faceIdTimeToLive": 60,
         "imageContent": "<your-image-bytes-here>"
        },
        "responses": {
         "200": {
          "$id": "529",
          "body": [
           {
            "$id": "530",
            "faceId": "c5c24a82-6845-4031-9d5d-978df9175426",
            "recognitionModel": "recognition_03",
            "faceRectangle": {
             "$id": "531",
             "width": 78,
             "height": 78,
             "left": 394,
             "top": 54
            },
            "faceLandmarks": {
             "$id": "532",
             "pupilLeft": {
              "$id": "533",
              "x": 412.7,
              "y": 78.4
             },
             "pupilRight": {
              "$id": "534",
              "x": 446.8,
              "y": 74.2
             },
             "noseTip": {
              "$id": "535",
              "x": 437.7,
              "y": 92.4
             },
             "mouthLeft": {
              "$id": "536",
              "x": 417.8,
              "y": 114.4
             },
             "mouthRight": {
              "$id": "537",
              "x": 451.3,
              "y": 109.3
             },
             "eyebrowLeftOuter": {
              "$id": "538",
              "x": 397.9,
              "y": 78.5
             },
             "eyebrowLeftInner": {
              "$id": "539",
              "x": 425.4,
              "y": 70.5
             },
             "eyeLeftOuter": {
              "$id": "540",
              "x": 406.7,
              "y": 80.6
             },
             "eyeLeftTop": {
              "$id": "541",
              "x": 412.2,
              "y": 76.2
             },
             "eyeLeftBottom": {
              "$id": "542",
              "x": 413,
              "y": 80.1
             },
             "eyeLeftInner": {
              "$id": "543",
              "x": 418.9,
              "y": 78
             },
             "eyebrowRightInner": {
              "$id": "544",
              "x": 4.8,
              "y": 69.7
             },
             "eyebrowRightOuter": {
              "$id": "545",
              "x": 5.5,
              "y": 68.5
             },
             "eyeRightInner": {
              "$id": "546",
              "x": 441.5,
              "y": 75
             },
             "eyeRightTop": {
              "$id": "547",
              "x": 446.4,
              "y": 71.7
             },
             "eyeRightBottom": {
              "$id": "548",
              "x": 447,
              "y": 75.3
             },
             "eyeRightOuter": {
              "$id": "549",
              "x": 451.7,
              "y": 73.4
             },
             "noseRootLeft": {
              "$id": "550",
              "x": 428,
              "y": 77.1
             },
             "noseRootRight": {
              "$id": "551",
              "x": 435.8,
              "y": 75.6
             },
             "noseLeftAlarTop": {
              "$id": "552",
              "x": 428.3,
              "y": 89.7
             },
             "noseRightAlarTop": {
              "$id": "553",
              "x": 442.2,
              "y": 87
             },
             "noseLeftAlarOutTip": {
              "$id": "554",
              "x": 424.3,
              "y": 96.4
             },
             "noseRightAlarOutTip": {
              "$id": "555",
              "x": 446.6,
              "y": 92.5
             },
             "upperLipTop": {
              "$id": "556",
              "x": 437.6,
              "y": 105.9
             },
             "upperLipBottom": {
              "$id": "557",
              "x": 437.6,
              "y": 108.2
             },
             "underLipTop": {
              "$id": "558",
              "x": 436.8,
              "y": 111.4
             },
             "underLipBottom": {
              "$id": "559",
              "x": 437.3,
              "y": 114.5
             }
            },
            "faceAttributes": {
             "$id": "560",
             "glasses": "sunglasses",
             "headPose": {
              "$id": "561",
              "roll": 2.1,
              "yaw": 3,
              "pitch": 1.6
             },
             "occlusion": {
              "$id": "562",
              "foreheadOccluded": false,
              "eyeOccluded": false,
              "mouthOccluded": false
             },
             "accessories": [
              {
               "$id": "563",
               "type": "headwear",
               "confidence": 0.99
              },
              {
               "$id": "564",
               "type": "glasses",
               "confidence": 1
              },
              {
               "$id": "565",
               "type": "mask",
               "confidence": 0.87
              }
             ],
             "blur": {
              "$id": "566",
              "blurLevel": "medium",
              "value": 0.51
             },
             "exposure": {
              "$id": "567",
              "exposureLevel": "goodExposure",
              "value": 0.55
             },
             "noise": {
              "$id": "568",
              "noiseLevel": "low",
              "value": 0.12
             },
             "qualityForRecognition": "high"
            }
           }
          ]
         },
         "$id": "528"
        }
       },
       "parameters": [
        {
         "$id": "569",
         "parameter": {
          "$ref": "508"
         },
         "value": {
          "$id": "570",
          "kind": "boolean",
          "type": {
           "$ref": "509"
          },
          "value": true
         }
        },
        {
         "$id": "571",
         "parameter": {
          "$ref": "512"
         },
         "value": {
          "$id": "572",
          "kind": "boolean",
          "type": {
           "$ref": "513"
          },
          "value": true
         }
        },
        {
         "$id": "573",
         "parameter": {
          "$ref": "507"
         },
         "value": {
          "$id": "574",
          "kind": "string",
          "type": {
           "$ref": "7"
          },
          "value": "recognition_03"
         }
        },
        {
         "$id": "575",
         "parameter": {
          "$ref": "514"
         },
         "value": {
          "$id": "576",
          "kind": "boolean",
          "type": {
           "$ref": "515"
          },
          "value": true
         }
        },
        {
         "$id": "577",
         "parameter": {
          "$ref": "506"
         },
         "value": {
          "$id": "578",
          "kind": "string",
          "type": {
           "$ref": "2"
          },
          "value": "detection_01"
         }
        },
        {
         "$id": "579",
         "parameter": {
          "$ref": "516"
         },
         "value": {
          "$id": "580",
          "kind": "number",
          "type": {
           "$ref": "517"
          },
          "value": 60
         }
        },
        {
         "$id": "581",
         "parameter": {
          "$ref": "521"
         },
         "value": {
          "$id": "582",
          "kind": "string",
          "type": {
           "$ref": "522"
          },
          "value": "<your-image-bytes-here>"
         }
        }
       ],
       "responses": {
        "$id": "583"
       }
      }
     ]
    },
    {
     "$id": "584",
     "Name": "findSimilar",
     "ResourceName": "FaceClient",
     "Summary": "Given query face's faceId, to search the similar-looking faces from a faceId array. A faceId array contains the faces created by Detect.",
     "Description": "Depending on the input the returned similar faces list contains faceIds or persistedFaceIds ranked by similarity.\n\nFind similar has two working modes, \"matchPerson\" and \"matchFace\". \"matchPerson\" is the default mode that it tries to find faces of the same person as possible by using internal same-person thresholds. It is useful to find a known person's other photos. Note that an empty list will be returned if no faces pass the internal thresholds. \"matchFace\" mode ignores same-person thresholds and returns ranked similar faces anyway, even the similarity is low. It can be used in the cases like searching celebrity-looking faces.\n\nThe 'recognitionModel' associated with the query faceId should be the same as the 'recognitionModel' used by the target faceId array.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$ref": "414"
      },
      {
       "$ref": "416"
      },
      {
       "$id": "585",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Description": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "586",
        "Kind": "constant",
        "ValueType": {
         "$id": "587",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string",
         "Decorators": []
        },
        "Value": "application/json",
        "Decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "588",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "589",
        "Kind": "constant",
        "ValueType": {
         "$id": "590",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string",
         "Decorators": []
        },
        "Value": "application/json",
        "Decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "591",
       "Name": "findSimilarRequest",
       "NameInRequest": "findSimilarRequest",
       "Type": {
        "$ref": "236"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Spread",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "592",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$id": "593",
        "Kind": "array",
        "Name": "ArrayFindSimilarResult",
        "ValueType": {
         "$ref": "247"
        },
        "CrossLanguageDefinitionId": "TypeSpec.Array",
        "Decorators": []
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{endpoint}/face/{apiVersion}",
     "Path": "/findsimilars",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "ClientCustomizations.FaceClient.findSimilar",
     "Decorators": [],
     "Examples": [
      {
       "$id": "594",
       "kind": "http",
       "name": "Find Similar among Face IDs",
       "description": "Find Similar among Face IDs",
       "filePath": "v1.1-preview.1/FaceRecognitionOperations_FindSimilar.json",
       "rawExample": {
        "$id": "595",
        "title": "Find Similar among Face IDs",
        "operationId": "FaceRecognitionOperations_FindSimilar",
        "parameters": {
         "$id": "596",
         "apiVersion": "v1.1-preview.1",
         "body": {
          "$id": "597",
          "faceId": "c5c24a82-6845-4031-9d5d-978df9175426",
          "maxNumOfCandidatesReturned": 3,
          "mode": "matchPerson",
          "faceIds": [
           "015839fb-fbd9-4f79-ace9-7675fc2f1dd9",
           "be386ab3-af91-4104-9e6d-4dae4c9fddb7"
          ]
         }
        },
        "responses": {
         "200": {
          "$id": "599",
          "body": [
           {
            "$id": "600",
            "confidence": 0.9,
            "persistedFaceId": "015839fb-fbd9-4f79-ace9-7675fc2f1dd9"
           }
          ]
         },
         "$id": "598"
        }
       },
       "parameters": [
        {
         "$id": "601",
         "parameter": {
          "$ref": "591"
         },
         "value": {
          "$id": "602",
          "kind": "model",
          "type": {
           "$ref": "236"
          },
          "value": {
           "$id": "603",
           "faceId": {
            "$id": "604",
            "kind": "string",
            "type": {
             "$ref": "238"
            },
            "value": "c5c24a82-6845-4031-9d5d-978df9175426"
           },
           "maxNumOfCandidatesReturned": {
            "$id": "605",
            "kind": "number",
            "type": {
             "$ref": "241"
            },
            "value": 3
           },
           "mode": {
            "$id": "606",
            "kind": "string",
            "type": {
             "$ref": "75"
            },
            "value": "matchPerson"
           },
           "faceIds": {
            "$id": "607",
            "kind": "array",
            "type": {
             "$ref": "244"
            },
            "value": [
             {
              "$id": "608",
              "kind": "string",
              "type": {
               "$ref": "245"
              },
              "value": "015839fb-fbd9-4f79-ace9-7675fc2f1dd9"
             },
             {
              "$id": "609",
              "kind": "string",
              "type": {
               "$ref": "245"
              },
              "value": "be386ab3-af91-4104-9e6d-4dae4c9fddb7"
             }
            ]
           }
          }
         }
        }
       ],
       "responses": {
        "$id": "610"
       }
      }
     ]
    },
    {
     "$id": "611",
     "Name": "verifyFaceToFace",
     "ResourceName": "FaceClient",
     "Summary": "Verify whether two faces belong to a same person.",
     "Description": "> [!NOTE]\n>\n> *\n>   * Higher face image quality means better identification precision. Please consider high-quality faces: frontal, clear, and face size is 200x200 pixels (100 pixels between eyes) or bigger.\n>   * For the scenarios that are sensitive to accuracy please make your own judgment.\n>   * The 'recognitionModel' associated with the both faces should be the same.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$ref": "414"
      },
      {
       "$ref": "416"
      },
      {
       "$id": "612",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Description": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "613",
        "Kind": "constant",
        "ValueType": {
         "$id": "614",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string",
         "Decorators": []
        },
        "Value": "application/json",
        "Decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "615",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "616",
        "Kind": "constant",
        "ValueType": {
         "$id": "617",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string",
         "Decorators": []
        },
        "Value": "application/json",
        "Decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "618",
       "Name": "verifyFaceToFaceRequest",
       "NameInRequest": "verifyFaceToFaceRequest",
       "Type": {
        "$ref": "256"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Spread",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "619",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "263"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{endpoint}/face/{apiVersion}",
     "Path": "/verify",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "ClientCustomizations.FaceClient.verifyFaceToFace",
     "Decorators": [],
     "Examples": [
      {
       "$id": "620",
       "kind": "http",
       "name": "Verify Face to Face",
       "description": "Verify Face to Face",
       "filePath": "v1.1-preview.1/FaceRecognitionOperations_VerifyFaceToFace.json",
       "rawExample": {
        "$id": "621",
        "title": "Verify Face to Face",
        "operationId": "FaceRecognitionOperations_VerifyFaceToFace",
        "parameters": {
         "$id": "622",
         "apiVersion": "v1.1-preview.1",
         "body": {
          "$id": "623",
          "faceId1": "c5c24a82-6845-4031-9d5d-978df9175426",
          "faceId2": "3aa87e30-b380-48eb-ad9e-1aa54fc52bd3"
         }
        },
        "responses": {
         "200": {
          "$id": "625",
          "body": {
           "$id": "626",
           "isIdentical": true,
           "confidence": 0.8
          }
         },
         "$id": "624"
        }
       },
       "parameters": [
        {
         "$id": "627",
         "parameter": {
          "$ref": "618"
         },
         "value": {
          "$id": "628",
          "kind": "model",
          "type": {
           "$ref": "256"
          },
          "value": {
           "$id": "629",
           "faceId1": {
            "$id": "630",
            "kind": "string",
            "type": {
             "$ref": "258"
            },
            "value": "c5c24a82-6845-4031-9d5d-978df9175426"
           },
           "faceId2": {
            "$id": "631",
            "kind": "string",
            "type": {
             "$ref": "261"
            },
            "value": "3aa87e30-b380-48eb-ad9e-1aa54fc52bd3"
           }
          }
         }
        }
       ],
       "responses": {
        "$id": "632"
       }
      }
     ]
    },
    {
     "$id": "633",
     "Name": "group",
     "ResourceName": "FaceClient",
     "Summary": "Divide candidate faces into groups based on face similarity.",
     "Description": ">\n*\n  * The output is one or more disjointed face groups and a messyGroup. A face group contains faces that have similar looking, often of the same person. Face groups are ranked by group size, i.e. number of faces. Notice that faces belonging to a same person might be split into several groups in the result.\n  * MessyGroup is a special face group containing faces that cannot find any similar counterpart face from original faces. The messyGroup will not appear in the result if all faces found their counterparts.\n  * Group API needs at least 2 candidate faces and 1000 at most. We suggest to try \"Verify Face To Face\" when you only have 2 candidate faces.\n  * The 'recognitionModel' associated with the query faces' faceIds should be the same.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$ref": "414"
      },
      {
       "$ref": "416"
      },
      {
       "$id": "634",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Description": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "635",
        "Kind": "constant",
        "ValueType": {
         "$id": "636",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string",
         "Decorators": []
        },
        "Value": "application/json",
        "Decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "637",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "638",
        "Kind": "constant",
        "ValueType": {
         "$id": "639",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string",
         "Decorators": []
        },
        "Value": "application/json",
        "Decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "640",
       "Name": "groupRequest",
       "NameInRequest": "groupRequest",
       "Type": {
        "$ref": "268"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Spread",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "641",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "273"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{endpoint}/face/{apiVersion}",
     "Path": "/group",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "ClientCustomizations.FaceClient.group",
     "Decorators": [],
     "Examples": [
      {
       "$id": "642",
       "kind": "http",
       "name": "Group Face IDs",
       "description": "Group Face IDs",
       "filePath": "v1.1-preview.1/FaceRecognitionOperations_Group.json",
       "rawExample": {
        "$id": "643",
        "title": "Group Face IDs",
        "operationId": "FaceRecognitionOperations_Group",
        "parameters": {
         "$id": "644",
         "apiVersion": "v1.1-preview.1",
         "body": {
          "$id": "645",
          "faceIds": [
           "c5c24a82-6845-4031-9d5d-978df9175426",
           "015839fb-fbd9-4f79-ace9-7675fc2f1dd9",
           "65d083d4-9447-47d1-af30-b626144bf0fb",
           "fce92aed-d578-4d2e-8114-068f8af4492e",
           "30ea1073-cc9e-4652-b1e3-d08fb7b95315",
           "be386ab3-af91-4104-9e6d-4dae4c9fddb7",
           "fbd2a038-dbff-452c-8e79-2ee81b1aa84e",
           "b64d5e15-8257-4af2-b20a-5a750f8940e7"
          ]
         }
        },
        "responses": {
         "200": {
          "$id": "647",
          "body": {
           "$id": "648",
           "groups": [
            [
             "c5c24a82-6845-4031-9d5d-978df9175426",
             "015839fb-fbd9-4f79-ace9-7675fc2f1dd9",
             "fce92aed-d578-4d2e-8114-068f8af4492e",
             "b64d5e15-8257-4af2-b20a-5a750f8940e7"
            ],
            [
             "65d083d4-9447-47d1-af30-b626144bf0fb",
             "30ea1073-cc9e-4652-b1e3-d08fb7b95315"
            ]
           ],
           "messyGroup": [
            "be386ab3-af91-4104-9e6d-4dae4c9fddb7",
            "fbd2a038-dbff-452c-8e79-2ee81b1aa84e"
           ]
          }
         },
         "$id": "646"
        }
       },
       "parameters": [
        {
         "$id": "649",
         "parameter": {
          "$ref": "640"
         },
         "value": {
          "$id": "650",
          "kind": "model",
          "type": {
           "$ref": "268"
          },
          "value": {
           "$id": "651",
           "faceIds": {
            "$id": "652",
            "kind": "array",
            "type": {
             "$ref": "270"
            },
            "value": [
             {
              "$id": "653",
              "kind": "string",
              "type": {
               "$ref": "271"
              },
              "value": "c5c24a82-6845-4031-9d5d-978df9175426"
             },
             {
              "$id": "654",
              "kind": "string",
              "type": {
               "$ref": "271"
              },
              "value": "015839fb-fbd9-4f79-ace9-7675fc2f1dd9"
             },
             {
              "$id": "655",
              "kind": "string",
              "type": {
               "$ref": "271"
              },
              "value": "65d083d4-9447-47d1-af30-b626144bf0fb"
             },
             {
              "$id": "656",
              "kind": "string",
              "type": {
               "$ref": "271"
              },
              "value": "fce92aed-d578-4d2e-8114-068f8af4492e"
             },
             {
              "$id": "657",
              "kind": "string",
              "type": {
               "$ref": "271"
              },
              "value": "30ea1073-cc9e-4652-b1e3-d08fb7b95315"
             },
             {
              "$id": "658",
              "kind": "string",
              "type": {
               "$ref": "271"
              },
              "value": "be386ab3-af91-4104-9e6d-4dae4c9fddb7"
             },
             {
              "$id": "659",
              "kind": "string",
              "type": {
               "$ref": "271"
              },
              "value": "fbd2a038-dbff-452c-8e79-2ee81b1aa84e"
             },
             {
              "$id": "660",
              "kind": "string",
              "type": {
               "$ref": "271"
              },
              "value": "b64d5e15-8257-4af2-b20a-5a750f8940e7"
             }
            ]
           }
          }
         }
        }
       ],
       "responses": {
        "$id": "661"
       }
      }
     ]
    }
   ],
   "Protocol": {
    "$id": "662"
   },
   "Parameters": [
    {
     "$ref": "414"
    },
    {
     "$ref": "416"
    }
   ],
   "Decorators": []
  },
  {
   "$id": "663",
   "Name": "FaceSessionClient",
   "Operations": [
    {
     "$id": "664",
     "Name": "createLivenessSession",
     "ResourceName": "LivenessSession",
     "Summary": "Create a new detect liveness session.",
     "Description": "A session is best for client device scenarios where developers want to authorize a client device to perform only a liveness detection without granting full access to their resource. Created sessions have a limited life span and only authorize clients to perform the desired action before access is expired.\n\nPermissions includes...\n>\n*\n  * Ability to call /detectLiveness/singleModal for up to 3 retries.\n  * A token lifetime of 10 minutes.\n\n> [!NOTE]\n> Client access can be revoked by deleting the session using the Delete Liveness Session operation. To retrieve a result, use the Get Liveness Session. To audit the individual requests that a client has made to your resource, use the List Liveness Session Audit Entries.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "665",
       "Name": "endpoint",
       "NameInRequest": "endpoint",
       "Description": "Supported Cognitive Services endpoints (protocol and hostname, for example:\nhttps://{resource-name}.cognitiveservices.azure.com).",
       "Type": {
        "$id": "666",
        "Kind": "url",
        "Name": "url",
        "CrossLanguageDefinitionId": "TypeSpec.url"
       },
       "Location": "Uri",
       "IsApiVersion": false,
       "IsResourceParameter": false,
       "IsContentType": false,
       "IsRequired": true,
       "IsEndpoint": true,
       "SkipUrlEncoding": false,
       "Explode": false,
       "Kind": "Client"
      },
      {
       "$id": "667",
       "Name": "apiVersion",
       "NameInRequest": "apiVersion",
       "Description": "API Version",
       "Type": {
        "$ref": "79"
       },
       "Location": "Uri",
       "IsApiVersion": true,
       "IsResourceParameter": false,
       "IsContentType": false,
       "IsRequired": true,
       "IsEndpoint": false,
       "SkipUrlEncoding": false,
       "Explode": false,
       "Kind": "Client",
       "DefaultValue": {
        "$id": "668",
        "Type": {
         "$id": "669",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string"
        },
        "Value": "v1.1-preview.1"
       }
      },
      {
       "$id": "670",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Description": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "671",
        "Kind": "constant",
        "ValueType": {
         "$id": "672",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string",
         "Decorators": []
        },
        "Value": "application/json",
        "Decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "673",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "674",
        "Kind": "constant",
        "ValueType": {
         "$id": "675",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string",
         "Decorators": []
        },
        "Value": "application/json",
        "Decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "676",
       "Name": "body",
       "NameInRequest": "body",
       "Description": "Body parameter.",
       "Type": {
        "$ref": "283"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "677",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "293"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{endpoint}/face/{apiVersion}",
     "Path": "/detectLiveness/singleModal/sessions",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "ClientCustomizations.FaceSessionClient.createLivenessSession",
     "Decorators": [],
     "Examples": [
      {
       "$id": "678",
       "kind": "http",
       "name": "Create Liveness Session",
       "description": "Create Liveness Session",
       "filePath": "v1.1-preview.1/LivenessSessionOperations_CreateLivenessSession.json",
       "rawExample": {
        "$id": "679",
        "title": "Create Liveness Session",
        "operationId": "LivenessSessionOperations_CreateLivenessSession",
        "parameters": {
         "$id": "680",
         "apiVersion": "v1.1-preview.1",
         "body": {
          "$id": "681",
          "livenessOperationMode": "Passive",
          "sendResultsToClient": true,
          "deviceCorrelationIdSetInClient": true,
          "deviceCorrelationId": "your_device_correlation_id",
          "authTokenTimeToLiveInSeconds": 60
         }
        },
        "responses": {
         "200": {
          "$id": "683",
          "body": {
           "$id": "684",
           "sessionId": "b12e033e-bda7-4b83-a211-e721c661f30e",
           "authToken": "eyJhbGciOiJFUzI1NiIsIm"
          }
         },
         "$id": "682"
        }
       },
       "parameters": [
        {
         "$id": "685",
         "parameter": {
          "$ref": "676"
         },
         "value": {
          "$id": "686",
          "kind": "model",
          "type": {
           "$ref": "283"
          },
          "value": {
           "$id": "687",
           "livenessOperationMode": {
            "$id": "688",
            "kind": "string",
            "type": {
             "$ref": "82"
            },
            "value": "Passive"
           },
           "sendResultsToClient": {
            "$id": "689",
            "kind": "boolean",
            "type": {
             "$ref": "286"
            },
            "value": true
           },
           "deviceCorrelationIdSetInClient": {
            "$id": "690",
            "kind": "boolean",
            "type": {
             "$ref": "288"
            },
            "value": true
           },
           "deviceCorrelationId": {
            "$id": "691",
            "kind": "string",
            "type": {
             "$ref": "290"
            },
            "value": "your_device_correlation_id"
           },
           "authTokenTimeToLiveInSeconds": {
            "$id": "692",
            "kind": "number",
            "type": {
             "$ref": "292"
            },
            "value": 60
           }
          }
         }
        }
       ],
       "responses": {
        "$id": "693"
       }
      }
     ]
    },
    {
     "$id": "694",
     "Name": "deleteLivenessSession",
     "ResourceName": "LivenessSession",
     "Summary": "Delete all session related information for matching the specified session id.",
     "Description": "> [!NOTE]\n> Deleting a session deactivates the Session Auth Token by blocking future API calls made with that Auth Token. While this can be used to remove any access for that token, those requests will still count towards overall resource rate limits. It's best to leverage TokenTTL to limit length of tokens in the case that it is misused.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$ref": "665"
      },
      {
       "$ref": "667"
      },
      {
       "$id": "695",
       "Name": "sessionId",
       "NameInRequest": "sessionId",
       "Description": "The unique ID to reference this session.",
       "Type": {
        "$id": "696",
        "Kind": "string",
        "Name": "string",
        "CrossLanguageDefinitionId": "TypeSpec.string",
        "Decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "697",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "698",
        "Kind": "constant",
        "ValueType": {
         "$id": "699",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string",
         "Decorators": []
        },
        "Value": "application/json",
        "Decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "700",
       "StatusCodes": [
        200
       ],
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false
      }
     ],
     "HttpMethod": "DELETE",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}/face/{apiVersion}",
     "Path": "/detectLiveness/singleModal/sessions/{sessionId}",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "ClientCustomizations.FaceSessionClient.deleteLivenessSession",
     "Decorators": [],
     "Examples": [
      {
       "$id": "701",
       "kind": "http",
       "name": "Delete Liveness Session",
       "description": "Delete Liveness Session",
       "filePath": "v1.1-preview.1/LivenessSessionOperations_DeleteLivenessSession.json",
       "rawExample": {
        "$id": "702",
        "title": "Delete Liveness Session",
        "operationId": "LivenessSessionOperations_DeleteLivenessSession",
        "parameters": {
         "$id": "703",
         "apiVersion": "v1.1-preview.1",
         "sessionId": "b12e033e-bda7-4b83-a211-e721c661f30e"
        },
        "responses": {
         "200": {
          "$id": "705"
         },
         "$id": "704"
        }
       },
       "parameters": [
        {
         "$id": "706",
         "parameter": {
          "$ref": "695"
         },
         "value": {
          "$id": "707",
          "kind": "string",
          "type": {
           "$ref": "696"
          },
          "value": "b12e033e-bda7-4b83-a211-e721c661f30e"
         }
        }
       ],
       "responses": {
        "$id": "708"
       }
      }
     ]
    },
    {
     "$id": "709",
     "Name": "getLivenessSessionResult",
     "ResourceName": "LivenessSession",
     "Description": "Get session result of detectLiveness/singleModal call.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$ref": "665"
      },
      {
       "$ref": "667"
      },
      {
       "$id": "710",
       "Name": "sessionId",
       "NameInRequest": "sessionId",
       "Description": "The unique ID to reference this session.",
       "Type": {
        "$id": "711",
        "Kind": "string",
        "Name": "string",
        "CrossLanguageDefinitionId": "TypeSpec.string",
        "Decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "712",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "713",
        "Kind": "constant",
        "ValueType": {
         "$id": "714",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string",
         "Decorators": []
        },
        "Value": "application/json",
        "Decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "715",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "298"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}/face/{apiVersion}",
     "Path": "/detectLiveness/singleModal/sessions/{sessionId}",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "ClientCustomizations.FaceSessionClient.getLivenessSessionResult",
     "Decorators": [],
     "Examples": [
      {
       "$id": "716",
       "kind": "http",
       "name": "Get LivenessSession Result",
       "description": "Get LivenessSession Result",
       "filePath": "v1.1-preview.1/LivenessSessionOperations_GetLivenessSessionResult.json",
       "rawExample": {
        "$id": "717",
        "title": "Get LivenessSession Result",
        "operationId": "LivenessSessionOperations_GetLivenessSessionResult",
        "parameters": {
         "$id": "718",
         "apiVersion": "v1.1-preview.1",
         "sessionId": "b12e033e-bda7-4b83-a211-e721c661f30e"
        },
        "responses": {
         "200": {
          "$id": "720",
          "body": {
           "$id": "721",
           "id": "b12e033e-bda7-4b83-a211-e721c661f30e",
           "createdDateTime": "2024-03-05T11:07:29.698Z",
           "sessionStartDateTime": "2024-03-05T11:07:29.698Z",
           "sessionExpired": true,
           "deviceCorrelationId": "your_device_correlation_id",
           "authTokenTimeToLiveInSeconds": 600,
           "status": "NotStarted",
           "result": {
            "$id": "722",
            "id": 4,
            "sessionId": "b12e033e-bda7-4b83-a211-e721c661f30e",
            "requestId": "4af681e9-0e25-43e9-9922-a7adebf13b2f",
            "clientRequestId": "4af681e9-0e25-43e9-9922-a7adebf13b2f",
            "receivedDateTime": "2024-03-05T11:07:29.698Z",
            "request": {
             "$id": "723",
             "url": "/face/v1.1-preview.1/detectliveness/singlemodal",
             "method": "POST",
             "contentLength": 18,
             "contentType": "multipart/form-data",
             "userAgent": "Mozilla/5.0 (Linux) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Mobile Safari/537.36"
            },
            "response": {
             "$id": "724",
             "body": {
              "$id": "725"
             },
             "statusCode": 200,
             "latencyInMilliseconds": 1200
            },
            "digest": "1CC98BA83EAF1D0FF7F566FAEFCCCC787819FFA01251E2D9299143F7AD6651DB"
           }
          }
         },
         "$id": "719"
        }
       },
       "parameters": [
        {
         "$id": "726",
         "parameter": {
          "$ref": "710"
         },
         "value": {
          "$id": "727",
          "kind": "string",
          "type": {
           "$ref": "711"
          },
          "value": "b12e033e-bda7-4b83-a211-e721c661f30e"
         }
        }
       ],
       "responses": {
        "$id": "728"
       }
      }
     ]
    },
    {
     "$id": "729",
     "Name": "getLivenessSessions",
     "ResourceName": "LivenessSession",
     "Summary": "Lists sessions for /detectLiveness/SingleModal.",
     "Description": "List sessions from the last sessionId greater than the 'start'.\n\nThe result should be ordered by sessionId in ascending order.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$ref": "665"
      },
      {
       "$ref": "667"
      },
      {
       "$id": "730",
       "Name": "start",
       "NameInRequest": "start",
       "Description": "List resources greater than the \"start\". It contains no more than 64 characters. Default is empty.",
       "Type": {
        "$id": "731",
        "Kind": "string",
        "Name": "string",
        "CrossLanguageDefinitionId": "TypeSpec.string",
        "Decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "732",
       "Name": "top",
       "NameInRequest": "top",
       "Description": "The number of items to list, ranging in [1, 1000]. Default is 1000.",
       "Type": {
        "$id": "733",
        "Kind": "int32",
        "Name": "int32",
        "CrossLanguageDefinitionId": "TypeSpec.int32",
        "Decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "734",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "735",
        "Kind": "constant",
        "ValueType": {
         "$id": "736",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string",
         "Decorators": []
        },
        "Value": "application/json",
        "Decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "737",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$id": "738",
        "Kind": "array",
        "Name": "ArrayLivenessSessionItem",
        "ValueType": {
         "$ref": "370"
        },
        "CrossLanguageDefinitionId": "TypeSpec.Array",
        "Decorators": []
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}/face/{apiVersion}",
     "Path": "/detectLiveness/singleModal/sessions",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "ClientCustomizations.FaceSessionClient.getLivenessSessions",
     "Decorators": [],
     "Examples": [
      {
       "$id": "739",
       "kind": "http",
       "name": "Get LivenessSessions",
       "description": "Get LivenessSessions",
       "filePath": "v1.1-preview.1/LivenessSessionOperations_GetLivenessSessions.json",
       "rawExample": {
        "$id": "740",
        "title": "Get LivenessSessions",
        "operationId": "LivenessSessionOperations_GetLivenessSessions",
        "parameters": {
         "$id": "741",
         "apiVersion": "v1.1-preview.1",
         "start": "00000000-0000-0000-0000-000000000000",
         "top": 20
        },
        "responses": {
         "200": {
          "$id": "743",
          "body": [
           {
            "$id": "744",
            "id": "b12e033e-bda7-4b83-a211-e721c661f30e",
            "createdDateTime": "2024-03-05T11:07:28.540Z",
            "sessionStartDateTime": "2024-03-05T11:07:28.540Z",
            "sessionExpired": true,
            "deviceCorrelationId": "your_device_correlation_id",
            "authTokenTimeToLiveInSeconds": 60
           }
          ]
         },
         "$id": "742"
        }
       },
       "parameters": [
        {
         "$id": "745",
         "parameter": {
          "$ref": "730"
         },
         "value": {
          "$id": "746",
          "kind": "string",
          "type": {
           "$ref": "731"
          },
          "value": "00000000-0000-0000-0000-000000000000"
         }
        },
        {
         "$id": "747",
         "parameter": {
          "$ref": "732"
         },
         "value": {
          "$id": "748",
          "kind": "number",
          "type": {
           "$ref": "733"
          },
          "value": 20
         }
        }
       ],
       "responses": {
        "$id": "749"
       }
      }
     ]
    },
    {
     "$id": "750",
     "Name": "getLivenessSessionAuditEntries",
     "ResourceName": "FaceSessionClient",
     "Description": "Gets session requests and response body for the session.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$ref": "665"
      },
      {
       "$ref": "667"
      },
      {
       "$id": "751",
       "Name": "sessionId",
       "NameInRequest": "sessionId",
       "Description": "The unique ID to reference this session.",
       "Type": {
        "$id": "752",
        "Kind": "string",
        "Name": "string",
        "CrossLanguageDefinitionId": "TypeSpec.string",
        "Decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "753",
       "Name": "start",
       "NameInRequest": "start",
       "Description": "List resources greater than the \"start\". It contains no more than 64 characters. Default is empty.",
       "Type": {
        "$id": "754",
        "Kind": "string",
        "Name": "string",
        "CrossLanguageDefinitionId": "TypeSpec.string",
        "Decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "755",
       "Name": "top",
       "NameInRequest": "top",
       "Description": "The number of items to list, ranging in [1, 1000]. Default is 1000.",
       "Type": {
        "$id": "756",
        "Kind": "int32",
        "Name": "int32",
        "CrossLanguageDefinitionId": "TypeSpec.int32",
        "Decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "757",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "758",
        "Kind": "constant",
        "ValueType": {
         "$id": "759",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string",
         "Decorators": []
        },
        "Value": "application/json",
        "Decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "760",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$id": "761",
        "Kind": "array",
        "Name": "ArrayLivenessSessionAuditEntry",
        "ValueType": {
         "$ref": "315"
        },
        "CrossLanguageDefinitionId": "TypeSpec.Array",
        "Decorators": []
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}/face/{apiVersion}",
     "Path": "/detectLiveness/singleModal/sessions/{sessionId}/audit",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "ClientCustomizations.FaceSessionClient.getLivenessSessionAuditEntries",
     "Decorators": [],
     "Examples": [
      {
       "$id": "762",
       "kind": "http",
       "name": "Get LivenessSession Audit Entries",
       "description": "Get LivenessSession Audit Entries",
       "filePath": "v1.1-preview.1/LivenessSessionOperations_GetLivenessSessionAuditEntries.json",
       "rawExample": {
        "$id": "763",
        "title": "Get LivenessSession Audit Entries",
        "operationId": "LivenessSessionOperations_GetLivenessSessionAuditEntries",
        "parameters": {
         "$id": "764",
         "apiVersion": "v1.1-preview.1",
         "sessionId": "b12e033e-bda7-4b83-a211-e721c661f30e",
         "start": "0",
         "top": 20
        },
        "responses": {
         "200": {
          "$id": "766",
          "body": [
           {
            "$id": "767",
            "id": 4,
            "sessionId": "b12e033e-bda7-4b83-a211-e721c661f30e",
            "requestId": "4af681e9-0e25-43e9-9922-a7adebf13b2f",
            "clientRequestId": "4af681e9-0e25-43e9-9922-a7adebf13b2f",
            "receivedDateTime": "2024-03-05T11:07:29.698Z",
            "request": {
             "$id": "768",
             "url": "/face/v1.1-preview.1/detectliveness/singlemodal",
             "method": "POST",
             "contentLength": 18,
             "contentType": "multipart/form-data",
             "userAgent": "Mozilla/5.0 (Linux) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Mobile Safari/537.36"
            },
            "response": {
             "$id": "769",
             "body": {
              "$id": "770"
             },
             "statusCode": 200,
             "latencyInMilliseconds": 1200
            },
            "digest": "1CC98BA83EAF1D0FF7F566FAEFCCCC787819FFA01251E2D9299143F7AD6651DB"
           }
          ]
         },
         "$id": "765"
        }
       },
       "parameters": [
        {
         "$id": "771",
         "parameter": {
          "$ref": "751"
         },
         "value": {
          "$id": "772",
          "kind": "string",
          "type": {
           "$ref": "752"
          },
          "value": "b12e033e-bda7-4b83-a211-e721c661f30e"
         }
        },
        {
         "$id": "773",
         "parameter": {
          "$ref": "753"
         },
         "value": {
          "$id": "774",
          "kind": "string",
          "type": {
           "$ref": "754"
          },
          "value": "0"
         }
        },
        {
         "$id": "775",
         "parameter": {
          "$ref": "755"
         },
         "value": {
          "$id": "776",
          "kind": "number",
          "type": {
           "$ref": "756"
          },
          "value": 20
         }
        }
       ],
       "responses": {
        "$id": "777"
       }
      }
     ]
    },
    {
     "$id": "778",
     "Name": "createLivenessWithVerifySession",
     "ResourceName": "LivenessWithVerifySession",
     "Summary": "Create a new liveness session with verify. Client device submits VerifyImage during the /detectLivenessWithVerify/singleModal call.",
     "Description": "A session is best for client device scenarios where developers want to authorize a client device to perform only a liveness detection without granting full access to their resource. Created sessions have a limited life span and only authorize clients to perform the desired action before access is expired.\n\nPermissions includes...\n>\n*\n  * Ability to call /detectLivenessWithVerify/singleModal for up to 3 retries.\n  * A token lifetime of 10 minutes.\n\n> [!NOTE]\n>\n> *\n>   * Client access can be revoked by deleting the session using the Delete Liveness With Verify Session operation.\n>   * To retrieve a result, use the Get Liveness With Verify Session.\n>   * To audit the individual requests that a client has made to your resource, use the List Liveness With Verify Session Audit Entries.\n\nAlternative Option: Client device submits VerifyImage during the /detectLivenessWithVerify/singleModal call.\n> [!NOTE]\n> Extra measures should be taken to validate that the client is sending the expected VerifyImage.",
     "Accessibility": "internal",
     "Parameters": [
      {
       "$ref": "665"
      },
      {
       "$ref": "667"
      },
      {
       "$id": "779",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Description": "Body parameter's content type. Known values are application/json",
       "Type": {
        "$id": "780",
        "Kind": "constant",
        "ValueType": {
         "$id": "781",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string",
         "Decorators": []
        },
        "Value": "application/json",
        "Decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "782",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "783",
        "Kind": "constant",
        "ValueType": {
         "$id": "784",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string",
         "Decorators": []
        },
        "Value": "application/json",
        "Decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "785",
       "Name": "body",
       "NameInRequest": "body",
       "Description": "Body parameter.",
       "Type": {
        "$ref": "283"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "786",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "385"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{endpoint}/face/{apiVersion}",
     "Path": "/detectLivenessWithVerify/singleModal/sessions",
     "RequestMediaTypes": [
      "application/json"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "ClientCustomizations.FaceSessionClient.createLivenessWithVerifySession",
     "Decorators": [],
     "Examples": [
      {
       "$id": "787",
       "kind": "http",
       "name": "Create LivenessWithVerify Session",
       "description": "Create LivenessWithVerify Session",
       "filePath": "v1.1-preview.1/LivenessSessionOperations_CreateLivenessWithVerifySession.json",
       "rawExample": {
        "$id": "788",
        "title": "Create LivenessWithVerify Session",
        "operationId": "LivenessSessionOperations_CreateLivenessWithVerifySession",
        "parameters": {
         "$id": "789",
         "apiVersion": "v1.1-preview.1",
         "body": {
          "$id": "790",
          "livenessOperationMode": "Passive",
          "sendResultsToClient": true,
          "deviceCorrelationIdSetInClient": true,
          "deviceCorrelationId": "your_device_correlation_id",
          "authTokenTimeToLiveInSeconds": 60
         }
        },
        "responses": {
         "200": {
          "$id": "792",
          "body": {
           "$id": "793",
           "sessionId": "b12e033e-bda7-4b83-a211-e721c661f30e",
           "authToken": "eyJhbGciOiJFUzI1NiIsIm"
          }
         },
         "$id": "791"
        }
       },
       "parameters": [
        {
         "$id": "794",
         "parameter": {
          "$ref": "785"
         },
         "value": {
          "$id": "795",
          "kind": "model",
          "type": {
           "$ref": "283"
          },
          "value": {
           "$id": "796",
           "livenessOperationMode": {
            "$id": "797",
            "kind": "string",
            "type": {
             "$ref": "82"
            },
            "value": "Passive"
           },
           "sendResultsToClient": {
            "$id": "798",
            "kind": "boolean",
            "type": {
             "$ref": "286"
            },
            "value": true
           },
           "deviceCorrelationIdSetInClient": {
            "$id": "799",
            "kind": "boolean",
            "type": {
             "$ref": "288"
            },
            "value": true
           },
           "deviceCorrelationId": {
            "$id": "800",
            "kind": "string",
            "type": {
             "$ref": "290"
            },
            "value": "your_device_correlation_id"
           },
           "authTokenTimeToLiveInSeconds": {
            "$id": "801",
            "kind": "number",
            "type": {
             "$ref": "292"
            },
            "value": 60
           }
          }
         }
        }
       ],
       "responses": {
        "$id": "802"
       }
      }
     ]
    },
    {
     "$id": "803",
     "Name": "createLivenessWithVerifySessionWithVerifyImage",
     "ResourceName": "LivenessWithVerifySession",
     "Summary": "Create a new liveness session with verify. Provide the verify image during session creation.",
     "Description": "A session is best for client device scenarios where developers want to authorize a client device to perform only a liveness detection without granting full access to their resource. Created sessions have a limited life span and only authorize clients to perform the desired action before access is expired.\n\nPermissions includes...\n>\n*\n  * Ability to call /detectLivenessWithVerify/singleModal for up to 3 retries.\n  * A token lifetime of 10 minutes.\n\n> [!NOTE]\n>\n> *\n>   * Client access can be revoked by deleting the session using the Delete Liveness With Verify Session operation.\n>   * To retrieve a result, use the Get Liveness With Verify Session.\n>   * To audit the individual requests that a client has made to your resource, use the List Liveness With Verify Session Audit Entries.\n\nRecommended Option: VerifyImage is provided during session creation.",
     "Accessibility": "internal",
     "Parameters": [
      {
       "$ref": "665"
      },
      {
       "$ref": "667"
      },
      {
       "$id": "804",
       "Name": "contentType",
       "NameInRequest": "Content-Type",
       "Description": "The content type for the operation. Always multipart/form-data for this operation.",
       "Type": {
        "$id": "805",
        "Kind": "constant",
        "ValueType": {
         "$id": "806",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string",
         "Decorators": []
        },
        "Value": "multipart/form-data",
        "Decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": true,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "807",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "808",
        "Kind": "constant",
        "ValueType": {
         "$id": "809",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string",
         "Decorators": []
        },
        "Value": "application/json",
        "Decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "810",
       "Name": "body",
       "NameInRequest": "body",
       "Description": "Request content of liveness with verify session creation.",
       "Type": {
        "$ref": "391"
       },
       "Location": "Body",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "811",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "385"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "POST",
     "RequestBodyMediaType": "Json",
     "Uri": "{endpoint}/face/{apiVersion}",
     "Path": "/detectLivenessWithVerify/singleModal/sessions",
     "RequestMediaTypes": [
      "multipart/form-data"
     ],
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "ClientCustomizations.FaceSessionClient.createLivenessWithVerifySessionWithVerifyImage",
     "Decorators": [],
     "Examples": [
      {
       "$id": "812",
       "kind": "http",
       "name": "Create LivenessWithVerify Session with VerifyImage",
       "description": "Create LivenessWithVerify Session with VerifyImage",
       "filePath": "v1.1-preview.1/LivenessSessionOperations_CreateLivenessWithVerifySessionWithVerifyImage.json",
       "rawExample": {
        "$id": "813",
        "title": "Create LivenessWithVerify Session with VerifyImage",
        "operationId": "LivenessSessionOperations_CreateLivenessWithVerifySessionWithVerifyImage",
        "parameters": {
         "$id": "814",
         "apiVersion": "v1.1-preview.1",
         "Parameters": "{\"livenessOperationMode\": \"Passive\", \"sendResultsToClient\": true, \"deviceCorrelationIdSetInClient\": true, \"deviceCorrelationId\": \"your_device_correlation_id\", \"authTokenTimeToLiveInSeconds\": 60}",
         "VerifyImage": "<your-image-bytes-here>"
        },
        "responses": {
         "200": {
          "$id": "816",
          "body": {
           "$id": "817",
           "sessionId": "b12e033e-bda7-4b83-a211-e721c661f30e",
           "authToken": "eyJhbGciOiJFUzI1NiIsIm",
           "verifyImage": {
            "$id": "818",
            "faceRectangle": {
             "$id": "819",
             "width": 78,
             "height": 78,
             "left": 394,
             "top": 54
            },
            "qualityForRecognition": "high"
           }
          }
         },
         "$id": "815"
        }
       },
       "parameters": [],
       "responses": {
        "$id": "820"
       }
      }
     ]
    },
    {
     "$id": "821",
     "Name": "deleteLivenessWithVerifySession",
     "ResourceName": "LivenessWithVerifySession",
     "Summary": "Delete all session related information for matching the specified session id.",
     "Description": "> [!NOTE]\n> Deleting a session deactivates the Session Auth Token by blocking future API calls made with that Auth Token. While this can be used to remove any access for that token, those requests will still count towards overall resource rate limits. It's best to leverage TokenTTL to limit length of tokens in the case that it is misused.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$ref": "665"
      },
      {
       "$ref": "667"
      },
      {
       "$id": "822",
       "Name": "sessionId",
       "NameInRequest": "sessionId",
       "Description": "The unique ID to reference this session.",
       "Type": {
        "$id": "823",
        "Kind": "string",
        "Name": "string",
        "CrossLanguageDefinitionId": "TypeSpec.string",
        "Decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "824",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "825",
        "Kind": "constant",
        "ValueType": {
         "$id": "826",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string",
         "Decorators": []
        },
        "Value": "application/json",
        "Decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "827",
       "StatusCodes": [
        200
       ],
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false
      }
     ],
     "HttpMethod": "DELETE",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}/face/{apiVersion}",
     "Path": "/detectLivenessWithVerify/singleModal/sessions/{sessionId}",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "ClientCustomizations.FaceSessionClient.deleteLivenessWithVerifySession",
     "Decorators": [],
     "Examples": [
      {
       "$id": "828",
       "kind": "http",
       "name": "Delete LivenessWithVerify Session",
       "description": "Delete LivenessWithVerify Session",
       "filePath": "v1.1-preview.1/LivenessSessionOperations_DeleteLivenessWithVerifySession.json",
       "rawExample": {
        "$id": "829",
        "title": "Delete LivenessWithVerify Session",
        "operationId": "LivenessSessionOperations_DeleteLivenessWithVerifySession",
        "parameters": {
         "$id": "830",
         "apiVersion": "v1.1-preview.1",
         "sessionId": "b12e033e-bda7-4b83-a211-e721c661f30e"
        },
        "responses": {
         "200": {
          "$id": "832"
         },
         "$id": "831"
        }
       },
       "parameters": [
        {
         "$id": "833",
         "parameter": {
          "$ref": "822"
         },
         "value": {
          "$id": "834",
          "kind": "string",
          "type": {
           "$ref": "823"
          },
          "value": "b12e033e-bda7-4b83-a211-e721c661f30e"
         }
        }
       ],
       "responses": {
        "$id": "835"
       }
      }
     ]
    },
    {
     "$id": "836",
     "Name": "getLivenessWithVerifySessionResult",
     "ResourceName": "LivenessWithVerifySession",
     "Description": "Get session result of detectLivenessWithVerify/singleModal call.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$ref": "665"
      },
      {
       "$ref": "667"
      },
      {
       "$id": "837",
       "Name": "sessionId",
       "NameInRequest": "sessionId",
       "Description": "The unique ID to reference this session.",
       "Type": {
        "$id": "838",
        "Kind": "string",
        "Name": "string",
        "CrossLanguageDefinitionId": "TypeSpec.string",
        "Decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "839",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "840",
        "Kind": "constant",
        "ValueType": {
         "$id": "841",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string",
         "Decorators": []
        },
        "Value": "application/json",
        "Decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "842",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$ref": "395"
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}/face/{apiVersion}",
     "Path": "/detectLivenessWithVerify/singleModal/sessions/{sessionId}",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "ClientCustomizations.FaceSessionClient.getLivenessWithVerifySessionResult",
     "Decorators": [],
     "Examples": [
      {
       "$id": "843",
       "kind": "http",
       "name": "Get LivenessWithVerify Session Result",
       "description": "Get LivenessWithVerify Session Result",
       "filePath": "v1.1-preview.1/LivenessSessionOperations_GetLivenessWithVerifySessionResult.json",
       "rawExample": {
        "$id": "844",
        "title": "Get LivenessWithVerify Session Result",
        "operationId": "LivenessSessionOperations_GetLivenessWithVerifySessionResult",
        "parameters": {
         "$id": "845",
         "apiVersion": "v1.1-preview.1",
         "sessionId": "b12e033e-bda7-4b83-a211-e721c661f30e"
        },
        "responses": {
         "200": {
          "$id": "847",
          "body": {
           "$id": "848",
           "id": "b12e033e-bda7-4b83-a211-e721c661f30e",
           "createdDateTime": "2024-03-05T11:07:29.698Z",
           "sessionStartDateTime": "2024-03-05T11:07:29.698Z",
           "sessionExpired": true,
           "deviceCorrelationId": "your_device_correlation_id",
           "authTokenTimeToLiveInSeconds": 600,
           "status": "NotStarted",
           "result": {
            "$id": "849",
            "id": 4,
            "sessionId": "b12e033e-bda7-4b83-a211-e721c661f30e",
            "requestId": "4af681e9-0e25-43e9-9922-a7adebf13b2f",
            "clientRequestId": "4af681e9-0e25-43e9-9922-a7adebf13b2f",
            "receivedDateTime": "2024-03-05T11:07:29.698Z",
            "request": {
             "$id": "850",
             "url": "/face/v1.1-preview.1/detectliveness/singlemodal",
             "method": "POST",
             "contentLength": 18,
             "contentType": "multipart/form-data",
             "userAgent": "Mozilla/5.0 (Linux) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Mobile Safari/537.36"
            },
            "response": {
             "$id": "851",
             "body": {
              "$id": "852"
             },
             "statusCode": 200,
             "latencyInMilliseconds": 1200
            },
            "digest": "1CC98BA83EAF1D0FF7F566FAEFCCCC787819FFA01251E2D9299143F7AD6651DB"
           }
          }
         },
         "$id": "846"
        }
       },
       "parameters": [
        {
         "$id": "853",
         "parameter": {
          "$ref": "837"
         },
         "value": {
          "$id": "854",
          "kind": "string",
          "type": {
           "$ref": "838"
          },
          "value": "b12e033e-bda7-4b83-a211-e721c661f30e"
         }
        }
       ],
       "responses": {
        "$id": "855"
       }
      }
     ]
    },
    {
     "$id": "856",
     "Name": "getLivenessWithVerifySessions",
     "ResourceName": "LivenessWithVerifySession",
     "Summary": "Lists sessions for /detectLivenessWithVerify/SingleModal.",
     "Description": "List sessions from the last sessionId greater than the \"start\".\n\nThe result should be ordered by sessionId in ascending order.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$ref": "665"
      },
      {
       "$ref": "667"
      },
      {
       "$id": "857",
       "Name": "start",
       "NameInRequest": "start",
       "Description": "List resources greater than the \"start\". It contains no more than 64 characters. Default is empty.",
       "Type": {
        "$id": "858",
        "Kind": "string",
        "Name": "string",
        "CrossLanguageDefinitionId": "TypeSpec.string",
        "Decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "859",
       "Name": "top",
       "NameInRequest": "top",
       "Description": "The number of items to list, ranging in [1, 1000]. Default is 1000.",
       "Type": {
        "$id": "860",
        "Kind": "int32",
        "Name": "int32",
        "CrossLanguageDefinitionId": "TypeSpec.int32",
        "Decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "861",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "862",
        "Kind": "constant",
        "ValueType": {
         "$id": "863",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string",
         "Decorators": []
        },
        "Value": "application/json",
        "Decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "864",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$id": "865",
        "Kind": "array",
        "Name": "ArrayLivenessSessionItem",
        "ValueType": {
         "$ref": "370"
        },
        "CrossLanguageDefinitionId": "TypeSpec.Array",
        "Decorators": []
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}/face/{apiVersion}",
     "Path": "/detectLivenessWithVerify/singleModal/sessions",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "ClientCustomizations.FaceSessionClient.getLivenessWithVerifySessions",
     "Decorators": [],
     "Examples": [
      {
       "$id": "866",
       "kind": "http",
       "name": "Get LivenessWithVerify Sessions",
       "description": "Get LivenessWithVerify Sessions",
       "filePath": "v1.1-preview.1/LivenessSessionOperations_GetLivenessWithVerifySessions.json",
       "rawExample": {
        "$id": "867",
        "title": "Get LivenessWithVerify Sessions",
        "operationId": "LivenessSessionOperations_GetLivenessWithVerifySessions",
        "parameters": {
         "$id": "868",
         "apiVersion": "v1.1-preview.1",
         "start": "00000000-0000-0000-0000-000000000000",
         "top": 20
        },
        "responses": {
         "200": {
          "$id": "870",
          "body": [
           {
            "$id": "871",
            "id": "b12e033e-bda7-4b83-a211-e721c661f30e",
            "createdDateTime": "2024-03-05T11:07:28.540Z",
            "sessionStartDateTime": "2024-03-05T11:07:28.540Z",
            "sessionExpired": true,
            "deviceCorrelationId": "your_device_correlation_id",
            "authTokenTimeToLiveInSeconds": 60
           }
          ]
         },
         "$id": "869"
        }
       },
       "parameters": [
        {
         "$id": "872",
         "parameter": {
          "$ref": "857"
         },
         "value": {
          "$id": "873",
          "kind": "string",
          "type": {
           "$ref": "858"
          },
          "value": "00000000-0000-0000-0000-000000000000"
         }
        },
        {
         "$id": "874",
         "parameter": {
          "$ref": "859"
         },
         "value": {
          "$id": "875",
          "kind": "number",
          "type": {
           "$ref": "860"
          },
          "value": 20
         }
        }
       ],
       "responses": {
        "$id": "876"
       }
      }
     ]
    },
    {
     "$id": "877",
     "Name": "getLivenessWithVerifySessionAuditEntries",
     "ResourceName": "FaceSessionClient",
     "Description": "Gets session requests and response body for the session.",
     "Accessibility": "public",
     "Parameters": [
      {
       "$ref": "665"
      },
      {
       "$ref": "667"
      },
      {
       "$id": "878",
       "Name": "sessionId",
       "NameInRequest": "sessionId",
       "Description": "The unique ID to reference this session.",
       "Type": {
        "$id": "879",
        "Kind": "string",
        "Name": "string",
        "CrossLanguageDefinitionId": "TypeSpec.string",
        "Decorators": []
       },
       "Location": "Path",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "880",
       "Name": "start",
       "NameInRequest": "start",
       "Description": "List resources greater than the \"start\". It contains no more than 64 characters. Default is empty.",
       "Type": {
        "$id": "881",
        "Kind": "string",
        "Name": "string",
        "CrossLanguageDefinitionId": "TypeSpec.string",
        "Decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "882",
       "Name": "top",
       "NameInRequest": "top",
       "Description": "The number of items to list, ranging in [1, 1000]. Default is 1000.",
       "Type": {
        "$id": "883",
        "Kind": "int32",
        "Name": "int32",
        "CrossLanguageDefinitionId": "TypeSpec.int32",
        "Decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      },
      {
       "$id": "884",
       "Name": "accept",
       "NameInRequest": "Accept",
       "Type": {
        "$id": "885",
        "Kind": "constant",
        "ValueType": {
         "$id": "886",
         "Kind": "string",
         "Name": "string",
         "CrossLanguageDefinitionId": "TypeSpec.string",
         "Decorators": []
        },
        "Value": "application/json",
        "Decorators": []
       },
       "Location": "Header",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Constant",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "887",
       "StatusCodes": [
        200
       ],
       "BodyType": {
        "$id": "888",
        "Kind": "array",
        "Name": "ArrayLivenessSessionAuditEntry",
        "ValueType": {
         "$ref": "315"
        },
        "CrossLanguageDefinitionId": "TypeSpec.Array",
        "Decorators": []
       },
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false,
       "ContentTypes": [
        "application/json"
       ]
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}/face/{apiVersion}",
     "Path": "/detectLivenessWithVerify/singleModal/sessions/{sessionId}/audit",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "ClientCustomizations.FaceSessionClient.getLivenessWithVerifySessionAuditEntries",
     "Decorators": [],
     "Examples": [
      {
       "$id": "889",
       "kind": "http",
       "name": "Get LivenessWithVerify Session Audit Entries",
       "description": "Get LivenessWithVerify Session Audit Entries",
       "filePath": "v1.1-preview.1/LivenessSessionOperations_GetLivenessWithVerifySessionAuditEntries.json",
       "rawExample": {
        "$id": "890",
        "title": "Get LivenessWithVerify Session Audit Entries",
        "operationId": "LivenessSessionOperations_GetLivenessWithVerifySessionAuditEntries",
        "parameters": {
         "$id": "891",
         "apiVersion": "v1.1-preview.1",
         "sessionId": "b12e033e-bda7-4b83-a211-e721c661f30e",
         "start": "0",
         "top": 20
        },
        "responses": {
         "200": {
          "$id": "893",
          "body": [
           {
            "$id": "894",
            "id": 4,
            "sessionId": "b12e033e-bda7-4b83-a211-e721c661f30e",
            "requestId": "4af681e9-0e25-43e9-9922-a7adebf13b2f",
            "clientRequestId": "4af681e9-0e25-43e9-9922-a7adebf13b2f",
            "receivedDateTime": "2024-03-05T11:07:29.698Z",
            "request": {
             "$id": "895",
             "url": "/face/v1.1-preview.1/detectliveness/singlemodal",
             "method": "POST",
             "contentLength": 18,
             "contentType": "multipart/form-data",
             "userAgent": "Mozilla/5.0 (Linux) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Mobile Safari/537.36"
            },
            "response": {
             "$id": "896",
             "body": {
              "$id": "897"
             },
             "statusCode": 200,
             "latencyInMilliseconds": 1200
            },
            "digest": "1CC98BA83EAF1D0FF7F566FAEFCCCC787819FFA01251E2D9299143F7AD6651DB"
           }
          ]
         },
         "$id": "892"
        }
       },
       "parameters": [
        {
         "$id": "898",
         "parameter": {
          "$ref": "878"
         },
         "value": {
          "$id": "899",
          "kind": "string",
          "type": {
           "$ref": "879"
          },
          "value": "b12e033e-bda7-4b83-a211-e721c661f30e"
         }
        },
        {
         "$id": "900",
         "parameter": {
          "$ref": "880"
         },
         "value": {
          "$id": "901",
          "kind": "string",
          "type": {
           "$ref": "881"
          },
          "value": "0"
         }
        },
        {
         "$id": "902",
         "parameter": {
          "$ref": "882"
         },
         "value": {
          "$id": "903",
          "kind": "number",
          "type": {
           "$ref": "883"
          },
          "value": 20
         }
        }
       ],
       "responses": {
        "$id": "904"
       }
      }
     ]
    }
   ],
   "Protocol": {
    "$id": "905"
   },
   "Parameters": [
    {
     "$ref": "665"
    },
    {
     "$ref": "667"
    }
   ],
   "Decorators": []
  }
 ],
 "Auth": {
  "$id": "906",
  "ApiKey": {
   "$id": "907",
   "Name": "Ocp-Apim-Subscription-Key"
  },
  "OAuth2": {
   "$id": "908",
   "Scopes": [
    "https://cognitiveservices.azure.com/.default"
   ]
  }
 }
}
