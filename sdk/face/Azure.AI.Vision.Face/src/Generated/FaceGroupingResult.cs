// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.AI.Vision.Face
{
    /// <summary> Response body for group face operation. </summary>
    public partial class FaceGroupingResult
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="FaceGroupingResult"/>. </summary>
        /// <param name="groups"> A partition of the original faces based on face similarity. Groups are ranked by number of faces. </param>
        /// <param name="messyGroup"> Face ids array of faces that cannot find any similar faces from original faces. </param>
        internal FaceGroupingResult(IEnumerable<IList<Guid>> groups, IEnumerable<Guid> messyGroup)
        {
            Groups = groups.ToList();
            MessyGroup = messyGroup.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="FaceGroupingResult"/>. </summary>
        /// <param name="groups"> A partition of the original faces based on face similarity. Groups are ranked by number of faces. </param>
        /// <param name="messyGroup"> Face ids array of faces that cannot find any similar faces from original faces. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal FaceGroupingResult(IList<IList<Guid>> groups, IList<Guid> messyGroup, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Groups = groups;
            MessyGroup = messyGroup;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> A partition of the original faces based on face similarity. Groups are ranked by number of faces. </summary>
        public IList<IList<Guid>> Groups { get; }

        /// <summary> Face ids array of faces that cannot find any similar faces from original faces. </summary>
        public IList<Guid> MessyGroup { get; }
    }
}
