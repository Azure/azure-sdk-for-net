// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Vision.Face
{
    /// <summary> The liveness session attempt. </summary>
    public partial class LivenessSessionAttempt
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="LivenessSessionAttempt"/>. </summary>
        /// <param name="attemptId"> The attempt ID, start from 1. </param>
        /// <param name="attemptStatus"> The status of the attempt. </param>
        internal LivenessSessionAttempt(int attemptId, OperationState attemptStatus)
        {
            AttemptId = attemptId;
            AttemptStatus = attemptStatus;
        }

        /// <summary> Initializes a new instance of <see cref="LivenessSessionAttempt"/>. </summary>
        /// <param name="attemptId"> The attempt ID, start from 1. </param>
        /// <param name="attemptStatus"> The status of the attempt. </param>
        /// <param name="result"> The result of the liveness call, will be null if there is error. </param>
        /// <param name="error"> The error of the liveness call, will be null if there is result. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal LivenessSessionAttempt(int attemptId, OperationState attemptStatus, LivenessResult result, LivenessError error, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            AttemptId = attemptId;
            AttemptStatus = attemptStatus;
            Result = result;
            Error = error;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The attempt ID, start from 1. </summary>
        public int AttemptId { get; }

        /// <summary> The status of the attempt. </summary>
        public OperationState AttemptStatus { get; }

        /// <summary> The result of the liveness call, will be null if there is error. </summary>
        public LivenessResult Result { get; }

        /// <summary> The error of the liveness call, will be null if there is result. </summary>
        public LivenessError Error { get; }
    }
}
