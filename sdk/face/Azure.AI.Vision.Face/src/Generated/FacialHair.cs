// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Vision.Face
{
    /// <summary> Properties describing facial hair attributes. </summary>
    public partial class FacialHair
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="FacialHair"/>. </summary>
        /// <param name="moustache"> A number ranging from 0 to 1 indicating a level of confidence associated with a property. </param>
        /// <param name="beard"> A number ranging from 0 to 1 indicating a level of confidence associated with a property. </param>
        /// <param name="sideburns"> A number ranging from 0 to 1 indicating a level of confidence associated with a property. </param>
        internal FacialHair(float moustache, float beard, float sideburns)
        {
            Moustache = moustache;
            Beard = beard;
            Sideburns = sideburns;
        }

        /// <summary> Initializes a new instance of <see cref="FacialHair"/>. </summary>
        /// <param name="moustache"> A number ranging from 0 to 1 indicating a level of confidence associated with a property. </param>
        /// <param name="beard"> A number ranging from 0 to 1 indicating a level of confidence associated with a property. </param>
        /// <param name="sideburns"> A number ranging from 0 to 1 indicating a level of confidence associated with a property. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal FacialHair(float moustache, float beard, float sideburns, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Moustache = moustache;
            Beard = beard;
            Sideburns = sideburns;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> A number ranging from 0 to 1 indicating a level of confidence associated with a property. </summary>
        public float Moustache { get; }

        /// <summary> A number ranging from 0 to 1 indicating a level of confidence associated with a property. </summary>
        public float Beard { get; }

        /// <summary> A number ranging from 0 to 1 indicating a level of confidence associated with a property. </summary>
        public float Sideburns { get; }
    }
}
