// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Vision.Face
{
    /// <summary> Session result of detect liveness with verify. </summary>
    public partial class LivenessWithVerifySession
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="LivenessWithVerifySession"/>. </summary>
        /// <param name="authToken"> Bearer token to provide authentication for the Vision SDK running on a client application. This Bearer token has limited permissions to perform only the required action and expires after the TTL time. It is also auditable. </param>
        /// <param name="status"> The current status of the session. </param>
        /// <param name="results"> The results of the liveness with verify session. </param>
        internal LivenessWithVerifySession(string authToken, OperationState status, LivenessWithVerifySessionResults results)
        {
            AuthToken = authToken;
            Status = status;
            Results = results;
        }

        /// <summary> Initializes a new instance of <see cref="LivenessWithVerifySession"/>. </summary>
        /// <param name="sessionId"> The unique ID to reference this session. </param>
        /// <param name="authToken"> Bearer token to provide authentication for the Vision SDK running on a client application. This Bearer token has limited permissions to perform only the required action and expires after the TTL time. It is also auditable. </param>
        /// <param name="status"> The current status of the session. </param>
        /// <param name="modelVersion"> The model version used for liveness classification. This is an optional parameter, and if this is not specified, then the latest supported model version will be chosen. </param>
        /// <param name="results"> The results of the liveness with verify session. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal LivenessWithVerifySession(string sessionId, string authToken, OperationState status, LivenessModel? modelVersion, LivenessWithVerifySessionResults results, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            SessionId = sessionId;
            AuthToken = authToken;
            Status = status;
            ModelVersion = modelVersion;
            Results = results;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The unique ID to reference this session. </summary>
        public string SessionId { get; }

        /// <summary> Bearer token to provide authentication for the Vision SDK running on a client application. This Bearer token has limited permissions to perform only the required action and expires after the TTL time. It is also auditable. </summary>
        public string AuthToken { get; }

        /// <summary> The current status of the session. </summary>
        public OperationState Status { get; }

        /// <summary> The model version used for liveness classification. This is an optional parameter, and if this is not specified, then the latest supported model version will be chosen. </summary>
        public LivenessModel? ModelVersion { get; }

        /// <summary> The results of the liveness with verify session. </summary>
        public LivenessWithVerifySessionResults Results { get; }
    }
}
