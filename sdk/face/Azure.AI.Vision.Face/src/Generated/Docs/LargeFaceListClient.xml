<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="CreateAsync(string,string,string,FaceRecognitionModel?,CancellationToken)">
      <example>
This sample shows how to call CreateAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response response = await client.CreateAsync("<largeFaceListId>", "<name>");
]]></code>
This sample shows how to call CreateAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response response = await client.CreateAsync("<largeFaceListId>", "<name>", userData: "<userData>", recognitionModel: FaceRecognitionModel.Recognition01);
]]></code></example>
    </member>
    <member name="Create(string,string,string,FaceRecognitionModel?,CancellationToken)">
      <example>
This sample shows how to call Create.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response response = client.Create("<largeFaceListId>", "<name>");
]]></code>
This sample shows how to call Create with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response response = client.Create("<largeFaceListId>", "<name>", userData: "<userData>", recognitionModel: FaceRecognitionModel.Recognition01);
]]></code></example>
    </member>
    <member name="CreateAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

using RequestContent content = RequestContent.Create(new
{
    name = "<name>",
});
Response response = await client.CreateAsync("<largeFaceListId>", content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CreateAsync with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

using RequestContent content = RequestContent.Create(new
{
    name = "<name>",
    userData = "<userData>",
    recognitionModel = "recognition_01",
});
Response response = await client.CreateAsync("<largeFaceListId>", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Create(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call Create.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

using RequestContent content = RequestContent.Create(new
{
    name = "<name>",
});
Response response = client.Create("<largeFaceListId>", content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call Create with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

using RequestContent content = RequestContent.Create(new
{
    name = "<name>",
    userData = "<userData>",
    recognitionModel = "recognition_01",
});
Response response = client.Create("<largeFaceListId>", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteAsync(string,RequestContext)">
      <example>
This sample shows how to call DeleteAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response response = await client.DeleteAsync("<largeFaceListId>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response response = await client.DeleteAsync("<largeFaceListId>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Delete(string,RequestContext)">
      <example>
This sample shows how to call Delete.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response response = client.Delete("<largeFaceListId>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call Delete with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response response = client.Delete("<largeFaceListId>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetLargeFaceListAsync(string,bool?,CancellationToken)">
      <example>
This sample shows how to call GetLargeFaceListAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response<LargeFaceList> response = await client.GetLargeFaceListAsync("<largeFaceListId>");
]]></code>
This sample shows how to call GetLargeFaceListAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response<LargeFaceList> response = await client.GetLargeFaceListAsync("<largeFaceListId>", returnRecognitionModel: true);
]]></code></example>
    </member>
    <member name="GetLargeFaceList(string,bool?,CancellationToken)">
      <example>
This sample shows how to call GetLargeFaceList.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response<LargeFaceList> response = client.GetLargeFaceList("<largeFaceListId>");
]]></code>
This sample shows how to call GetLargeFaceList with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response<LargeFaceList> response = client.GetLargeFaceList("<largeFaceListId>", returnRecognitionModel: true);
]]></code></example>
    </member>
    <member name="GetLargeFaceListAsync(string,bool?,RequestContext)">
      <example>
This sample shows how to call GetLargeFaceListAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response response = await client.GetLargeFaceListAsync("<largeFaceListId>", null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("largeFaceListId").ToString());
]]></code>
This sample shows how to call GetLargeFaceListAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response response = await client.GetLargeFaceListAsync("<largeFaceListId>", true, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("userData").ToString());
Console.WriteLine(result.GetProperty("recognitionModel").ToString());
Console.WriteLine(result.GetProperty("largeFaceListId").ToString());
]]></code></example>
    </member>
    <member name="GetLargeFaceList(string,bool?,RequestContext)">
      <example>
This sample shows how to call GetLargeFaceList and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response response = client.GetLargeFaceList("<largeFaceListId>", null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("largeFaceListId").ToString());
]]></code>
This sample shows how to call GetLargeFaceList with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response response = client.GetLargeFaceList("<largeFaceListId>", true, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("userData").ToString());
Console.WriteLine(result.GetProperty("recognitionModel").ToString());
Console.WriteLine(result.GetProperty("largeFaceListId").ToString());
]]></code></example>
    </member>
    <member name="UpdateAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call UpdateAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

using RequestContent content = RequestContent.Create(new object());
Response response = await client.UpdateAsync("<largeFaceListId>", content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call UpdateAsync with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

using RequestContent content = RequestContent.Create(new
{
    name = "<name>",
    userData = "<userData>",
});
Response response = await client.UpdateAsync("<largeFaceListId>", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Update(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call Update.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

using RequestContent content = RequestContent.Create(new object());
Response response = client.Update("<largeFaceListId>", content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call Update with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

using RequestContent content = RequestContent.Create(new
{
    name = "<name>",
    userData = "<userData>",
});
Response response = client.Update("<largeFaceListId>", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetLargeFaceListsAsync(string,int?,bool?,CancellationToken)">
      <example>
This sample shows how to call GetLargeFaceListsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response<IReadOnlyList<LargeFaceList>> response = await client.GetLargeFaceListsAsync();
]]></code>
This sample shows how to call GetLargeFaceListsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response<IReadOnlyList<LargeFaceList>> response = await client.GetLargeFaceListsAsync(start: "<start>", top: 1234, returnRecognitionModel: true);
]]></code></example>
    </member>
    <member name="GetLargeFaceLists(string,int?,bool?,CancellationToken)">
      <example>
This sample shows how to call GetLargeFaceLists.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response<IReadOnlyList<LargeFaceList>> response = client.GetLargeFaceLists();
]]></code>
This sample shows how to call GetLargeFaceLists with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response<IReadOnlyList<LargeFaceList>> response = client.GetLargeFaceLists(start: "<start>", top: 1234, returnRecognitionModel: true);
]]></code></example>
    </member>
    <member name="GetLargeFaceListsAsync(string,int?,bool?,RequestContext)">
      <example>
This sample shows how to call GetLargeFaceListsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response response = await client.GetLargeFaceListsAsync(null, null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("name").ToString());
Console.WriteLine(result[0].GetProperty("largeFaceListId").ToString());
]]></code>
This sample shows how to call GetLargeFaceListsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response response = await client.GetLargeFaceListsAsync("<start>", 1234, true, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("name").ToString());
Console.WriteLine(result[0].GetProperty("userData").ToString());
Console.WriteLine(result[0].GetProperty("recognitionModel").ToString());
Console.WriteLine(result[0].GetProperty("largeFaceListId").ToString());
]]></code></example>
    </member>
    <member name="GetLargeFaceLists(string,int?,bool?,RequestContext)">
      <example>
This sample shows how to call GetLargeFaceLists and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response response = client.GetLargeFaceLists(null, null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("name").ToString());
Console.WriteLine(result[0].GetProperty("largeFaceListId").ToString());
]]></code>
This sample shows how to call GetLargeFaceLists with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response response = client.GetLargeFaceLists("<start>", 1234, true, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("name").ToString());
Console.WriteLine(result[0].GetProperty("userData").ToString());
Console.WriteLine(result[0].GetProperty("recognitionModel").ToString());
Console.WriteLine(result[0].GetProperty("largeFaceListId").ToString());
]]></code></example>
    </member>
    <member name="GetTrainingStatusAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetTrainingStatusAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response<TrainingResult> response = await client.GetTrainingStatusAsync("<largeFaceListId>");
]]></code>
This sample shows how to call GetTrainingStatusAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response<TrainingResult> response = await client.GetTrainingStatusAsync("<largeFaceListId>");
]]></code></example>
    </member>
    <member name="GetTrainingStatus(string,CancellationToken)">
      <example>
This sample shows how to call GetTrainingStatus.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response<TrainingResult> response = client.GetTrainingStatus("<largeFaceListId>");
]]></code>
This sample shows how to call GetTrainingStatus with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response<TrainingResult> response = client.GetTrainingStatus("<largeFaceListId>");
]]></code></example>
    </member>
    <member name="GetTrainingStatusAsync(string,RequestContext)">
      <example>
This sample shows how to call GetTrainingStatusAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response response = await client.GetTrainingStatusAsync("<largeFaceListId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("lastSuccessfulTrainingDateTime").ToString());
]]></code>
This sample shows how to call GetTrainingStatusAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response response = await client.GetTrainingStatusAsync("<largeFaceListId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("lastSuccessfulTrainingDateTime").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
]]></code></example>
    </member>
    <member name="GetTrainingStatus(string,RequestContext)">
      <example>
This sample shows how to call GetTrainingStatus and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response response = client.GetTrainingStatus("<largeFaceListId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("lastSuccessfulTrainingDateTime").ToString());
]]></code>
This sample shows how to call GetTrainingStatus with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response response = client.GetTrainingStatus("<largeFaceListId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("lastSuccessfulTrainingDateTime").ToString());
Console.WriteLine(result.GetProperty("message").ToString());
]]></code></example>
    </member>
    <member name="AddFaceFromUrlAsync(string,Uri,IEnumerable{int},FaceDetectionModel?,string,CancellationToken)">
      <example>
This sample shows how to call AddFaceFromUrlAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response<AddFaceResult> response = await client.AddFaceFromUrlAsync("<largeFaceListId>", new Uri("http://localhost:3000"));
]]></code>
This sample shows how to call AddFaceFromUrlAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response<AddFaceResult> response = await client.AddFaceFromUrlAsync("<largeFaceListId>", new Uri("http://localhost:3000"), targetFace: new int[] { 1234 }, detectionModel: FaceDetectionModel.Detection01, userData: "<userData>");
]]></code></example>
    </member>
    <member name="AddFaceFromUrl(string,Uri,IEnumerable{int},FaceDetectionModel?,string,CancellationToken)">
      <example>
This sample shows how to call AddFaceFromUrl.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response<AddFaceResult> response = client.AddFaceFromUrl("<largeFaceListId>", new Uri("http://localhost:3000"));
]]></code>
This sample shows how to call AddFaceFromUrl with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response<AddFaceResult> response = client.AddFaceFromUrl("<largeFaceListId>", new Uri("http://localhost:3000"), targetFace: new int[] { 1234 }, detectionModel: FaceDetectionModel.Detection01, userData: "<userData>");
]]></code></example>
    </member>
    <member name="AddFaceFromUrlAsync(string,RequestContent,IEnumerable{int},string,string,RequestContext)">
      <example>
This sample shows how to call AddFaceFromUrlAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

using RequestContent content = RequestContent.Create(new
{
    url = "http://localhost:3000",
});
Response response = await client.AddFaceFromUrlAsync("<largeFaceListId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("persistedFaceId").ToString());
]]></code>
This sample shows how to call AddFaceFromUrlAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

using RequestContent content = RequestContent.Create(new
{
    url = "http://localhost:3000",
});
Response response = await client.AddFaceFromUrlAsync("<largeFaceListId>", content, targetFace: new int[] { 1234 }, detectionModel: "detection_01", userData: "<userData>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("persistedFaceId").ToString());
]]></code></example>
    </member>
    <member name="AddFaceFromUrl(string,RequestContent,IEnumerable{int},string,string,RequestContext)">
      <example>
This sample shows how to call AddFaceFromUrl and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

using RequestContent content = RequestContent.Create(new
{
    url = "http://localhost:3000",
});
Response response = client.AddFaceFromUrl("<largeFaceListId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("persistedFaceId").ToString());
]]></code>
This sample shows how to call AddFaceFromUrl with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

using RequestContent content = RequestContent.Create(new
{
    url = "http://localhost:3000",
});
Response response = client.AddFaceFromUrl("<largeFaceListId>", content, targetFace: new int[] { 1234 }, detectionModel: "detection_01", userData: "<userData>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("persistedFaceId").ToString());
]]></code></example>
    </member>
    <member name="AddFaceAsync(string,BinaryData,IEnumerable{int},FaceDetectionModel?,string,CancellationToken)">
      <example>
This sample shows how to call AddFaceAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response<AddFaceResult> response = await client.AddFaceAsync("<largeFaceListId>", BinaryData.FromObjectAsJson(new object()));
]]></code>
This sample shows how to call AddFaceAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response<AddFaceResult> response = await client.AddFaceAsync("<largeFaceListId>", BinaryData.FromObjectAsJson(new object()), targetFace: new int[] { 1234 }, detectionModel: FaceDetectionModel.Detection01, userData: "<userData>");
]]></code></example>
    </member>
    <member name="AddFace(string,BinaryData,IEnumerable{int},FaceDetectionModel?,string,CancellationToken)">
      <example>
This sample shows how to call AddFace.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response<AddFaceResult> response = client.AddFace("<largeFaceListId>", BinaryData.FromObjectAsJson(new object()));
]]></code>
This sample shows how to call AddFace with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response<AddFaceResult> response = client.AddFace("<largeFaceListId>", BinaryData.FromObjectAsJson(new object()), targetFace: new int[] { 1234 }, detectionModel: FaceDetectionModel.Detection01, userData: "<userData>");
]]></code></example>
    </member>
    <member name="AddFaceAsync(string,RequestContent,IEnumerable{int},string,string,RequestContext)">
      <example>
This sample shows how to call AddFaceAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

using RequestContent content = RequestContent.Create(new object());
Response response = await client.AddFaceAsync("<largeFaceListId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("persistedFaceId").ToString());
]]></code>
This sample shows how to call AddFaceAsync with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

using RequestContent content = RequestContent.Create(new object());
Response response = await client.AddFaceAsync("<largeFaceListId>", content, targetFace: new int[] { 1234 }, detectionModel: "detection_01", userData: "<userData>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("persistedFaceId").ToString());
]]></code></example>
    </member>
    <member name="AddFace(string,RequestContent,IEnumerable{int},string,string,RequestContext)">
      <example>
This sample shows how to call AddFace and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

using RequestContent content = RequestContent.Create(new object());
Response response = client.AddFace("<largeFaceListId>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("persistedFaceId").ToString());
]]></code>
This sample shows how to call AddFace with all parameters and request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

using RequestContent content = RequestContent.Create(new object());
Response response = client.AddFace("<largeFaceListId>", content, targetFace: new int[] { 1234 }, detectionModel: "detection_01", userData: "<userData>");

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("persistedFaceId").ToString());
]]></code></example>
    </member>
    <member name="DeleteFaceAsync(string,Guid,RequestContext)">
      <example>
This sample shows how to call DeleteFaceAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response response = await client.DeleteFaceAsync("<largeFaceListId>", Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteFaceAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response response = await client.DeleteFaceAsync("<largeFaceListId>", Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteFace(string,Guid,RequestContext)">
      <example>
This sample shows how to call DeleteFace.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response response = client.DeleteFace("<largeFaceListId>", Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteFace with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response response = client.DeleteFace("<largeFaceListId>", Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetFaceAsync(string,Guid,CancellationToken)">
      <example>
This sample shows how to call GetFaceAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response<LargeFaceListFace> response = await client.GetFaceAsync("<largeFaceListId>", Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));
]]></code>
This sample shows how to call GetFaceAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response<LargeFaceListFace> response = await client.GetFaceAsync("<largeFaceListId>", Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));
]]></code></example>
    </member>
    <member name="GetFace(string,Guid,CancellationToken)">
      <example>
This sample shows how to call GetFace.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response<LargeFaceListFace> response = client.GetFace("<largeFaceListId>", Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));
]]></code>
This sample shows how to call GetFace with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response<LargeFaceListFace> response = client.GetFace("<largeFaceListId>", Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"));
]]></code></example>
    </member>
    <member name="GetFaceAsync(string,Guid,RequestContext)">
      <example>
This sample shows how to call GetFaceAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response response = await client.GetFaceAsync("<largeFaceListId>", Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("persistedFaceId").ToString());
]]></code>
This sample shows how to call GetFaceAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response response = await client.GetFaceAsync("<largeFaceListId>", Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("persistedFaceId").ToString());
Console.WriteLine(result.GetProperty("userData").ToString());
]]></code></example>
    </member>
    <member name="GetFace(string,Guid,RequestContext)">
      <example>
This sample shows how to call GetFace and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response response = client.GetFace("<largeFaceListId>", Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("persistedFaceId").ToString());
]]></code>
This sample shows how to call GetFace with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response response = client.GetFace("<largeFaceListId>", Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("persistedFaceId").ToString());
Console.WriteLine(result.GetProperty("userData").ToString());
]]></code></example>
    </member>
    <member name="UpdateFaceAsync(string,Guid,RequestContent,RequestContext)">
      <example>
This sample shows how to call UpdateFaceAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

using RequestContent content = RequestContent.Create(new object());
Response response = await client.UpdateFaceAsync("<largeFaceListId>", Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call UpdateFaceAsync with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

using RequestContent content = RequestContent.Create(new
{
    userData = "<userData>",
});
Response response = await client.UpdateFaceAsync("<largeFaceListId>", Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="UpdateFace(string,Guid,RequestContent,RequestContext)">
      <example>
This sample shows how to call UpdateFace.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

using RequestContent content = RequestContent.Create(new object());
Response response = client.UpdateFace("<largeFaceListId>", Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call UpdateFace with all parameters and request content.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

using RequestContent content = RequestContent.Create(new
{
    userData = "<userData>",
});
Response response = client.UpdateFace("<largeFaceListId>", Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetFacesAsync(string,string,int?,CancellationToken)">
      <example>
This sample shows how to call GetFacesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response<IReadOnlyList<LargeFaceListFace>> response = await client.GetFacesAsync("<largeFaceListId>");
]]></code>
This sample shows how to call GetFacesAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response<IReadOnlyList<LargeFaceListFace>> response = await client.GetFacesAsync("<largeFaceListId>", start: "<start>", top: 1234);
]]></code></example>
    </member>
    <member name="GetFaces(string,string,int?,CancellationToken)">
      <example>
This sample shows how to call GetFaces.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response<IReadOnlyList<LargeFaceListFace>> response = client.GetFaces("<largeFaceListId>");
]]></code>
This sample shows how to call GetFaces with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response<IReadOnlyList<LargeFaceListFace>> response = client.GetFaces("<largeFaceListId>", start: "<start>", top: 1234);
]]></code></example>
    </member>
    <member name="GetFacesAsync(string,string,int?,RequestContext)">
      <example>
This sample shows how to call GetFacesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response response = await client.GetFacesAsync("<largeFaceListId>", null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("persistedFaceId").ToString());
]]></code>
This sample shows how to call GetFacesAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response response = await client.GetFacesAsync("<largeFaceListId>", "<start>", 1234, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("persistedFaceId").ToString());
Console.WriteLine(result[0].GetProperty("userData").ToString());
]]></code></example>
    </member>
    <member name="GetFaces(string,string,int?,RequestContext)">
      <example>
This sample shows how to call GetFaces and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response response = client.GetFaces("<largeFaceListId>", null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("persistedFaceId").ToString());
]]></code>
This sample shows how to call GetFaces with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Response response = client.GetFaces("<largeFaceListId>", "<start>", 1234, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("persistedFaceId").ToString());
Console.WriteLine(result[0].GetProperty("userData").ToString());
]]></code></example>
    </member>
    <member name="TrainAsync(WaitUntil,string,RequestContext)">
      <example>
This sample shows how to call TrainAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Operation operation = await client.TrainAsync(WaitUntil.Completed, "<largeFaceListId>");
]]></code>
This sample shows how to call TrainAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Operation operation = await client.TrainAsync(WaitUntil.Completed, "<largeFaceListId>");
]]></code></example>
    </member>
    <member name="Train(WaitUntil,string,RequestContext)">
      <example>
This sample shows how to call Train.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Operation operation = client.Train(WaitUntil.Completed, "<largeFaceListId>");
]]></code>
This sample shows how to call Train with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceServiceClient(endpoint, credential).GetLargeFaceListClientClient();

Operation operation = client.Train(WaitUntil.Completed, "<largeFaceListId>");
]]></code></example>
    </member>
  </members>
</doc>