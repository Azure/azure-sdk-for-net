<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="CreateAsync(string,string,FaceRecognitionModel?,CancellationToken)">
      <example>
This sample shows how to call CreateAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient("your_large_face_list_id");

Response response = await client.CreateAsync("your_large_face_list_name");
]]></code></example>
    </member>
    <member name="Create(string,string,FaceRecognitionModel?,CancellationToken)">
      <example>
This sample shows how to call Create.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient("your_large_face_list_id");

Response response = client.Create("your_large_face_list_name");
]]></code></example>
    </member>
    <member name="CreateAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient("your_large_face_list_id");

using RequestContent content = RequestContent.Create(new
{
    name = "your_large_face_list_name",
    userData = "your_user_data",
    recognitionModel = "recognition_01",
});
Response response = await client.CreateAsync(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Create(RequestContent,RequestContext)">
      <example>
This sample shows how to call Create.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient("your_large_face_list_id");

using RequestContent content = RequestContent.Create(new
{
    name = "your_large_face_list_name",
    userData = "your_user_data",
    recognitionModel = "recognition_01",
});
Response response = client.Create(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteAsync(RequestContext)">
      <example>
This sample shows how to call DeleteAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient("your_large_face_list_id");

Response response = await client.DeleteAsync();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Delete(RequestContext)">
      <example>
This sample shows how to call Delete.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient("your_large_face_list_id");

Response response = client.Delete();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetLargeFaceListAsync(bool?,CancellationToken)">
      <example>
This sample shows how to call GetLargeFaceListAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient("your_large_face_list_id");

Response<LargeFaceList> response = await client.GetLargeFaceListAsync();
]]></code></example>
    </member>
    <member name="GetLargeFaceList(bool?,CancellationToken)">
      <example>
This sample shows how to call GetLargeFaceList.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient("your_large_face_list_id");

Response<LargeFaceList> response = client.GetLargeFaceList();
]]></code></example>
    </member>
    <member name="GetLargeFaceListAsync(bool?,RequestContext)">
      <example>
This sample shows how to call GetLargeFaceListAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient("your_large_face_list_id");

Response response = await client.GetLargeFaceListAsync(true, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("largeFaceListId").ToString());
]]></code></example>
    </member>
    <member name="GetLargeFaceList(bool?,RequestContext)">
      <example>
This sample shows how to call GetLargeFaceList and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient("your_large_face_list_id");

Response response = client.GetLargeFaceList(true, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("largeFaceListId").ToString());
]]></code></example>
    </member>
    <member name="UpdateAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call UpdateAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient("your_large_face_list_id");

using RequestContent content = RequestContent.Create(new
{
    name = "your_large_face_list_name",
    userData = "your_user_data",
});
Response response = await client.UpdateAsync(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Update(RequestContent,RequestContext)">
      <example>
This sample shows how to call Update.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient("your_large_face_list_id");

using RequestContent content = RequestContent.Create(new
{
    name = "your_large_face_list_name",
    userData = "your_user_data",
});
Response response = client.Update(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetLargeFaceListsAsync(string,int?,bool?,CancellationToken)">
      <example>
This sample shows how to call GetLargeFaceListsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient(null);

Response<IReadOnlyList<LargeFaceList>> response = await client.GetLargeFaceListsAsync();
]]></code></example>
    </member>
    <member name="GetLargeFaceLists(string,int?,bool?,CancellationToken)">
      <example>
This sample shows how to call GetLargeFaceLists.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient(null);

Response<IReadOnlyList<LargeFaceList>> response = client.GetLargeFaceLists();
]]></code></example>
    </member>
    <member name="GetLargeFaceListsAsync(string,int?,bool?,RequestContext)">
      <example>
This sample shows how to call GetLargeFaceListsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient(null);

Response response = await client.GetLargeFaceListsAsync("my_list_id", 20, true, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("name").ToString());
Console.WriteLine(result[0].GetProperty("largeFaceListId").ToString());
]]></code></example>
    </member>
    <member name="GetLargeFaceLists(string,int?,bool?,RequestContext)">
      <example>
This sample shows how to call GetLargeFaceLists and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient(null);

Response response = client.GetLargeFaceLists("my_list_id", 20, true, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("name").ToString());
Console.WriteLine(result[0].GetProperty("largeFaceListId").ToString());
]]></code></example>
    </member>
    <member name="GetTrainingStatusAsync(CancellationToken)">
      <example>
This sample shows how to call GetTrainingStatusAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient("your_large_face_list_id");

Response<FaceTrainingResult> response = await client.GetTrainingStatusAsync();
]]></code></example>
    </member>
    <member name="GetTrainingStatus(CancellationToken)">
      <example>
This sample shows how to call GetTrainingStatus.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient("your_large_face_list_id");

Response<FaceTrainingResult> response = client.GetTrainingStatus();
]]></code></example>
    </member>
    <member name="GetTrainingStatusAsync(RequestContext)">
      <example>
This sample shows how to call GetTrainingStatusAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient("your_large_face_list_id");

Response response = await client.GetTrainingStatusAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("lastSuccessfulTrainingDateTime").ToString());
]]></code></example>
    </member>
    <member name="GetTrainingStatus(RequestContext)">
      <example>
This sample shows how to call GetTrainingStatus and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient("your_large_face_list_id");

Response response = client.GetTrainingStatus(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("lastSuccessfulTrainingDateTime").ToString());
]]></code></example>
    </member>
    <member name="DeleteFaceAsync(Guid,RequestContext)">
      <example>
This sample shows how to call DeleteFaceAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient("your_large_face_list_id");

Response response = await client.DeleteFaceAsync(Guid.Parse("43897a75-8d6f-42cf-885e-74832febb055"));

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteFace(Guid,RequestContext)">
      <example>
This sample shows how to call DeleteFace.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient("your_large_face_list_id");

Response response = client.DeleteFace(Guid.Parse("43897a75-8d6f-42cf-885e-74832febb055"));

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetFaceAsync(Guid,CancellationToken)">
      <example>
This sample shows how to call GetFaceAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient("your_large_face_list_id");

Response<LargeFaceListFace> response = await client.GetFaceAsync(Guid.Parse("43897a75-8d6f-42cf-885e-74832febb055"));
]]></code></example>
    </member>
    <member name="GetFace(Guid,CancellationToken)">
      <example>
This sample shows how to call GetFace.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient("your_large_face_list_id");

Response<LargeFaceListFace> response = client.GetFace(Guid.Parse("43897a75-8d6f-42cf-885e-74832febb055"));
]]></code></example>
    </member>
    <member name="GetFaceAsync(Guid,RequestContext)">
      <example>
This sample shows how to call GetFaceAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient("your_large_face_list_id");

Response response = await client.GetFaceAsync(Guid.Parse("43897a75-8d6f-42cf-885e-74832febb055"), null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("persistedFaceId").ToString());
]]></code></example>
    </member>
    <member name="GetFace(Guid,RequestContext)">
      <example>
This sample shows how to call GetFace and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient("your_large_face_list_id");

Response response = client.GetFace(Guid.Parse("43897a75-8d6f-42cf-885e-74832febb055"), null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("persistedFaceId").ToString());
]]></code></example>
    </member>
    <member name="UpdateFaceAsync(Guid,RequestContent,RequestContext)">
      <example>
This sample shows how to call UpdateFaceAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient("your_large_face_list_id");

using RequestContent content = RequestContent.Create(new
{
    userData = "your_user_data",
});
Response response = await client.UpdateFaceAsync(Guid.Parse("43897a75-8d6f-42cf-885e-74832febb055"), content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="UpdateFace(Guid,RequestContent,RequestContext)">
      <example>
This sample shows how to call UpdateFace.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient("your_large_face_list_id");

using RequestContent content = RequestContent.Create(new
{
    userData = "your_user_data",
});
Response response = client.UpdateFace(Guid.Parse("43897a75-8d6f-42cf-885e-74832febb055"), content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetFacesAsync(string,int?,CancellationToken)">
      <example>
This sample shows how to call GetFacesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient("your_large_face_list_id");

Response<IReadOnlyList<LargeFaceListFace>> response = await client.GetFacesAsync();
]]></code></example>
    </member>
    <member name="GetFaces(string,int?,CancellationToken)">
      <example>
This sample shows how to call GetFaces.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient("your_large_face_list_id");

Response<IReadOnlyList<LargeFaceListFace>> response = client.GetFaces();
]]></code></example>
    </member>
    <member name="GetFacesAsync(string,int?,RequestContext)">
      <example>
This sample shows how to call GetFacesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient("your_large_face_list_id");

Response response = await client.GetFacesAsync("00000000-0000-0000-0000-000000000000", 20, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("persistedFaceId").ToString());
]]></code></example>
    </member>
    <member name="GetFaces(string,int?,RequestContext)">
      <example>
This sample shows how to call GetFaces and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient("your_large_face_list_id");

Response response = client.GetFaces("00000000-0000-0000-0000-000000000000", 20, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("persistedFaceId").ToString());
]]></code></example>
    </member>
    <member name="TrainAsync(WaitUntil,RequestContext)">
      <example>
This sample shows how to call TrainAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient("your_large_face_list_id");

Operation operation = await client.TrainAsync(WaitUntil.Completed);
]]></code></example>
    </member>
    <member name="Train(WaitUntil,RequestContext)">
      <example>
This sample shows how to call Train.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient("your_large_face_list_id");

Operation operation = client.Train(WaitUntil.Completed);
]]></code></example>
    </member>
  </members>
</doc>