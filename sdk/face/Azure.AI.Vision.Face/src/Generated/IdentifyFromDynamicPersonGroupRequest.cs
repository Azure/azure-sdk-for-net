// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.AI.Vision.Face
{
    /// <summary> The IdentifyFromDynamicPersonGroupRequest. </summary>
    internal partial class IdentifyFromDynamicPersonGroupRequest
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="IdentifyFromDynamicPersonGroupRequest"/>. </summary>
        /// <param name="faceIds"> Array of query faces faceIds, created by the "Detect". Each of the faces are identified independently. The valid number of faceIds is between [1, 10]. </param>
        /// <param name="dynamicPersonGroupId"> DynamicPersonGroupId of the target PersonDirectory DynamicPersonGroup to match against. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="faceIds"/> or <paramref name="dynamicPersonGroupId"/> is null. </exception>
        public IdentifyFromDynamicPersonGroupRequest(IEnumerable<Guid> faceIds, string dynamicPersonGroupId)
        {
            Argument.AssertNotNull(faceIds, nameof(faceIds));
            Argument.AssertNotNull(dynamicPersonGroupId, nameof(dynamicPersonGroupId));

            FaceIds = faceIds.ToList();
            DynamicPersonGroupId = dynamicPersonGroupId;
        }

        /// <summary> Initializes a new instance of <see cref="IdentifyFromDynamicPersonGroupRequest"/>. </summary>
        /// <param name="faceIds"> Array of query faces faceIds, created by the "Detect". Each of the faces are identified independently. The valid number of faceIds is between [1, 10]. </param>
        /// <param name="dynamicPersonGroupId"> DynamicPersonGroupId of the target PersonDirectory DynamicPersonGroup to match against. </param>
        /// <param name="maxNumOfCandidatesReturned"> The range of maxNumOfCandidatesReturned is between 1 and 100. Default value is 10. </param>
        /// <param name="confidenceThreshold"> Customized identification confidence threshold, in the range of [0, 1]. Advanced user can tweak this value to override default internal threshold for better precision on their scenario data. Note there is no guarantee of this threshold value working on other data and after algorithm updates. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal IdentifyFromDynamicPersonGroupRequest(IList<Guid> faceIds, string dynamicPersonGroupId, int? maxNumOfCandidatesReturned, float? confidenceThreshold, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            FaceIds = faceIds;
            DynamicPersonGroupId = dynamicPersonGroupId;
            MaxNumOfCandidatesReturned = maxNumOfCandidatesReturned;
            ConfidenceThreshold = confidenceThreshold;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="IdentifyFromDynamicPersonGroupRequest"/> for deserialization. </summary>
        internal IdentifyFromDynamicPersonGroupRequest()
        {
        }

        /// <summary> Array of query faces faceIds, created by the "Detect". Each of the faces are identified independently. The valid number of faceIds is between [1, 10]. </summary>
        public IList<Guid> FaceIds { get; }
        /// <summary> DynamicPersonGroupId of the target PersonDirectory DynamicPersonGroup to match against. </summary>
        public string DynamicPersonGroupId { get; }
        /// <summary> The range of maxNumOfCandidatesReturned is between 1 and 100. Default value is 10. </summary>
        public int? MaxNumOfCandidatesReturned { get; set; }
        /// <summary> Customized identification confidence threshold, in the range of [0, 1]. Advanced user can tweak this value to override default internal threshold for better precision on their scenario data. Note there is no guarantee of this threshold value working on other data and after algorithm updates. </summary>
        public float? ConfidenceThreshold { get; set; }
    }
}
