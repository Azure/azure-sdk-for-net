// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Vision.Face
{
    /// <summary> An array of candidate colors and confidence level in the presence of each. </summary>
    public partial class HairColor
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="HairColor"/>. </summary>
        /// <param name="color"> Name of the hair color. </param>
        /// <param name="confidence"> Confidence level of the color. Range between [0,1]. </param>
        internal HairColor(HairColorType color, float confidence)
        {
            Color = color;
            Confidence = confidence;
        }

        /// <summary> Initializes a new instance of <see cref="HairColor"/>. </summary>
        /// <param name="color"> Name of the hair color. </param>
        /// <param name="confidence"> Confidence level of the color. Range between [0,1]. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal HairColor(HairColorType color, float confidence, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Color = color;
            Confidence = confidence;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Name of the hair color. </summary>
        public HairColorType Color { get; }

        /// <summary> Confidence level of the color. Range between [0,1]. </summary>
        public float Confidence { get; }
    }
}
