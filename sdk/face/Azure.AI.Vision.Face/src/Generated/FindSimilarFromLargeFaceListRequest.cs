// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Vision.Face
{
    /// <summary> The FindSimilarFromLargeFaceListRequest. </summary>
    internal partial class FindSimilarFromLargeFaceListRequest
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="FindSimilarFromLargeFaceListRequest"/>. </summary>
        /// <param name="faceId"> faceId of the query face. User needs to call "Detect" first to get a valid faceId. Note that this faceId is not persisted and will expire 24 hours after the detection call. </param>
        /// <param name="largeFaceListId"> An existing user-specified unique candidate Large Face List, created in "Create Large Face List". Large Face List contains a set of persistedFaceIds which are persisted and will never expire. </param>
        internal FindSimilarFromLargeFaceListRequest(Guid faceId, string largeFaceListId)
        {
            FaceId = faceId;
            LargeFaceListId = largeFaceListId;
        }

        /// <summary> Initializes a new instance of <see cref="FindSimilarFromLargeFaceListRequest"/>. </summary>
        /// <param name="faceId"> faceId of the query face. User needs to call "Detect" first to get a valid faceId. Note that this faceId is not persisted and will expire 24 hours after the detection call. </param>
        /// <param name="maxNumOfCandidatesReturned"> The number of top similar faces returned. The valid range is [1, 1000]. Default value is 20. </param>
        /// <param name="mode"> Similar face searching mode. It can be 'matchPerson' or 'matchFace'. Default value is 'matchPerson'. </param>
        /// <param name="largeFaceListId"> An existing user-specified unique candidate Large Face List, created in "Create Large Face List". Large Face List contains a set of persistedFaceIds which are persisted and will never expire. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal FindSimilarFromLargeFaceListRequest(Guid faceId, int? maxNumOfCandidatesReturned, FindSimilarMatchMode? mode, string largeFaceListId, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            FaceId = faceId;
            MaxNumOfCandidatesReturned = maxNumOfCandidatesReturned;
            Mode = mode;
            LargeFaceListId = largeFaceListId;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> faceId of the query face. User needs to call "Detect" first to get a valid faceId. Note that this faceId is not persisted and will expire 24 hours after the detection call. </summary>
        public Guid FaceId { get; }

        /// <summary> The number of top similar faces returned. The valid range is [1, 1000]. Default value is 20. </summary>
        public int? MaxNumOfCandidatesReturned { get; }

        /// <summary> Similar face searching mode. It can be 'matchPerson' or 'matchFace'. Default value is 'matchPerson'. </summary>
        public FindSimilarMatchMode? Mode { get; }

        /// <summary> An existing user-specified unique candidate Large Face List, created in "Create Large Face List". Large Face List contains a set of persistedFaceIds which are persisted and will never expire. </summary>
        public string LargeFaceListId { get; }
    }
}
