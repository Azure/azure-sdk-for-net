// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.IotCentral.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The description of the IoT Central application.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class AppPatch
    {
        /// <summary>
        /// Initializes a new instance of the AppPatch class.
        /// </summary>
        public AppPatch()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AppPatch class.
        /// </summary>
        /// <param name="tags">Instance tags</param>
        /// <param name="sku">A valid instance SKU.</param>
        /// <param name="provisioningState">The provisioning state of the
        /// application. Possible values include: 'Creating', 'Deleting',
        /// 'Updating', 'Succeeded', 'Failed', 'Canceled'</param>
        /// <param name="applicationId">The ID of the application.</param>
        /// <param name="displayName">The display name of the
        /// application.</param>
        /// <param name="subdomain">The subdomain of the application.</param>
        /// <param name="template">The ID of the application template, which is
        /// a blueprint that defines the characteristics and behaviors of an
        /// application. Optional; if not specified, defaults to a blank
        /// blueprint and allows the application to be defined from
        /// scratch.</param>
        /// <param name="state">The current state of the application. Possible
        /// values include: 'created', 'suspended'</param>
        /// <param name="publicNetworkAccess">Whether requests from the public
        /// network are allowed. Possible values include: 'Enabled',
        /// 'Disabled'</param>
        /// <param name="networkRuleSets">Network Rule Set Properties of this
        /// IoT Central application.</param>
        /// <param name="privateEndpointConnections">Private endpoint
        /// connections created on this IoT Central application.</param>
        /// <param name="identity">The managed identities for the IoT Central
        /// application.</param>
        public AppPatch(IDictionary<string, string> tags = default(IDictionary<string, string>), AppSkuInfo sku = default(AppSkuInfo), string provisioningState = default(string), string applicationId = default(string), string displayName = default(string), string subdomain = default(string), string template = default(string), string state = default(string), string publicNetworkAccess = default(string), NetworkRuleSets networkRuleSets = default(NetworkRuleSets), IList<PrivateEndpointConnection> privateEndpointConnections = default(IList<PrivateEndpointConnection>), SystemAssignedServiceIdentity identity = default(SystemAssignedServiceIdentity))
        {
            Tags = tags;
            Sku = sku;
            ProvisioningState = provisioningState;
            ApplicationId = applicationId;
            DisplayName = displayName;
            Subdomain = subdomain;
            Template = template;
            State = state;
            PublicNetworkAccess = publicNetworkAccess;
            NetworkRuleSets = networkRuleSets;
            PrivateEndpointConnections = privateEndpointConnections;
            Identity = identity;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets instance tags
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

        /// <summary>
        /// Gets or sets a valid instance SKU.
        /// </summary>
        [JsonProperty(PropertyName = "sku")]
        public AppSkuInfo Sku { get; set; }

        /// <summary>
        /// Gets or sets the provisioning state of the application. Possible
        /// values include: 'Creating', 'Deleting', 'Updating', 'Succeeded',
        /// 'Failed', 'Canceled'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Gets the ID of the application.
        /// </summary>
        [JsonProperty(PropertyName = "properties.applicationId")]
        public string ApplicationId { get; private set; }

        /// <summary>
        /// Gets or sets the display name of the application.
        /// </summary>
        [JsonProperty(PropertyName = "properties.displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets the subdomain of the application.
        /// </summary>
        [JsonProperty(PropertyName = "properties.subdomain")]
        public string Subdomain { get; set; }

        /// <summary>
        /// Gets or sets the ID of the application template, which is a
        /// blueprint that defines the characteristics and behaviors of an
        /// application. Optional; if not specified, defaults to a blank
        /// blueprint and allows the application to be defined from scratch.
        /// </summary>
        [JsonProperty(PropertyName = "properties.template")]
        public string Template { get; set; }

        /// <summary>
        /// Gets or sets the current state of the application. Possible values
        /// include: 'created', 'suspended'
        /// </summary>
        [JsonProperty(PropertyName = "properties.state")]
        public string State { get; set; }

        /// <summary>
        /// Gets or sets whether requests from the public network are allowed.
        /// Possible values include: 'Enabled', 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "properties.publicNetworkAccess")]
        public string PublicNetworkAccess { get; set; }

        /// <summary>
        /// Gets or sets network Rule Set Properties of this IoT Central
        /// application.
        /// </summary>
        [JsonProperty(PropertyName = "properties.networkRuleSets")]
        public NetworkRuleSets NetworkRuleSets { get; set; }

        /// <summary>
        /// Gets private endpoint connections created on this IoT Central
        /// application.
        /// </summary>
        [JsonProperty(PropertyName = "properties.privateEndpointConnections")]
        public IList<PrivateEndpointConnection> PrivateEndpointConnections { get; private set; }

        /// <summary>
        /// Gets or sets the managed identities for the IoT Central
        /// application.
        /// </summary>
        [JsonProperty(PropertyName = "identity")]
        public SystemAssignedServiceIdentity Identity { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Sku != null)
            {
                Sku.Validate();
            }
            if (PrivateEndpointConnections != null)
            {
                foreach (var element in PrivateEndpointConnections)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (Identity != null)
            {
                Identity.Validate();
            }
        }
    }
}
