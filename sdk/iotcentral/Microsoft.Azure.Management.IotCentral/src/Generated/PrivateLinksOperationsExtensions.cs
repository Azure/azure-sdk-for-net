// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.IotCentral
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for PrivateLinksOperations.
    /// </summary>
    public static partial class PrivateLinksOperationsExtensions
    {
            /// <summary>
            /// Get a private link resource of a IoT Central Application.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the IoT Central application.
            /// </param>
            /// <param name='resourceName'>
            /// The ARM resource name of the IoT Central application.
            /// </param>
            /// <param name='groupId'>
            /// The private link resource name.
            /// </param>
            public static PrivateLinkResource Get(this IPrivateLinksOperations operations, string resourceGroupName, string resourceName, string groupId)
            {
                return operations.GetAsync(resourceGroupName, resourceName, groupId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get a private link resource of a IoT Central Application.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the IoT Central application.
            /// </param>
            /// <param name='resourceName'>
            /// The ARM resource name of the IoT Central application.
            /// </param>
            /// <param name='groupId'>
            /// The private link resource name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<PrivateLinkResource> GetAsync(this IPrivateLinksOperations operations, string resourceGroupName, string resourceName, string groupId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, resourceName, groupId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get all private link resources of a IoT Central Application.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the IoT Central application.
            /// </param>
            /// <param name='resourceName'>
            /// The ARM resource name of the IoT Central application.
            /// </param>
            public static IEnumerable<PrivateLinkResource> List(this IPrivateLinksOperations operations, string resourceGroupName, string resourceName)
            {
                return operations.ListAsync(resourceGroupName, resourceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get all private link resources of a IoT Central Application.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group that contains the IoT Central application.
            /// </param>
            /// <param name='resourceName'>
            /// The ARM resource name of the IoT Central application.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IEnumerable<PrivateLinkResource>> ListAsync(this IPrivateLinksOperations operations, string resourceGroupName, string resourceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, resourceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
