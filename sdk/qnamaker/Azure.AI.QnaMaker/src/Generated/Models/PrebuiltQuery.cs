// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.AI.QnaMaker.Models
{
    /// <summary> POST body schema to query the documents via Prebuilt Question Answering. </summary>
    internal partial class PrebuiltQuery
    {
        /// <summary> Initializes a new instance of PrebuiltQuery. </summary>
        /// <param name="question"> User question to query against the given documents. </param>
        /// <param name="documents"> Documents to be searched for given question. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="question"/> or <paramref name="documents"/> is null. </exception>
        public PrebuiltQuery(string question, IEnumerable<TextInput> documents)
        {
            if (question == null)
            {
                throw new ArgumentNullException(nameof(question));
            }
            if (documents == null)
            {
                throw new ArgumentNullException(nameof(documents));
            }

            Question = question;
            Documents = documents.ToList();
        }

        /// <summary> User question to query against the given documents. </summary>
        public string Question { get; }
        /// <summary> Documents to be searched for given question. </summary>
        public IList<TextInput> Documents { get; }
        /// <summary> (Optional) Language of the documents. This is ISO 639-1 representation of a language. For example, use &quot;en&quot; for English; &quot;es&quot; for Spanish etc. If not set, use &quot;en&quot; for English as default. </summary>
        public string Language { get; set; }
    }
}
