// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.ComputeSchedule.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.ComputeSchedule.Samples
{
    public partial class Sample_ScheduledActionOccurrenceResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_OccurrencesGetMaximumSet()
        {
            // Generated from example definition: 2025-04-15-preview/Occurrences_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "Occurrence_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ScheduledActionOccurrenceResource created on azure
            // for more information of creating ScheduledActionOccurrenceResource, please refer to the document of ScheduledActionOccurrenceResource
            string subscriptionId = "CB26D7CB-3E27-465F-99C8-EAF7A4118245";
            string resourceGroupName = "rgcomputeschedule";
            string scheduledActionName = "myScheduledAction";
            string occurrenceId = "67b5bada-4772-43fc-8dbb-402476d98a45";
            ResourceIdentifier scheduledActionOccurrenceResourceId = ScheduledActionOccurrenceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, scheduledActionName, occurrenceId);
            ScheduledActionOccurrenceResource scheduledActionOccurrence = client.GetScheduledActionOccurrenceResource(scheduledActionOccurrenceResourceId);

            // invoke the operation
            ScheduledActionOccurrenceResource result = await scheduledActionOccurrence.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            ScheduledActionOccurrenceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task GetAttachedResources_OccurrencesListResourcesMaximumSet()
        {
            // Generated from example definition: 2025-04-15-preview/Occurrences_ListResources_MaximumSet_Gen.json
            // this example is just showing the usage of "OccurrenceResource_GetAttachedResources" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ScheduledActionOccurrenceResource created on azure
            // for more information of creating ScheduledActionOccurrenceResource, please refer to the document of ScheduledActionOccurrenceResource
            string subscriptionId = "CB26D7CB-3E27-465F-99C8-EAF7A4118245";
            string resourceGroupName = "rgcomputeschedule";
            string scheduledActionName = "myScheduledAction";
            string occurrenceId = "CB26D7CB-3E27-465F-99C8-EAF7A4118245";
            ResourceIdentifier scheduledActionOccurrenceResourceId = ScheduledActionOccurrenceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, scheduledActionName, occurrenceId);
            ScheduledActionOccurrenceResource scheduledActionOccurrence = client.GetScheduledActionOccurrenceResource(scheduledActionOccurrenceResourceId);

            // invoke the operation and iterate over the result
            await foreach (OccurrenceResourceData item in scheduledActionOccurrence.GetAttachedResourcesAsync())
            {
                Console.WriteLine($"Succeeded: {item}");
            }

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Cancel_OccurrencesCancelMaximumSet()
        {
            // Generated from example definition: 2025-04-15-preview/Occurrences_Cancel_MaximumSet_Gen.json
            // this example is just showing the usage of "Occurrences_Cancel" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ScheduledActionOccurrenceResource created on azure
            // for more information of creating ScheduledActionOccurrenceResource, please refer to the document of ScheduledActionOccurrenceResource
            string subscriptionId = "CB26D7CB-3E27-465F-99C8-EAF7A4118245";
            string resourceGroupName = "rgcomputeschedule";
            string scheduledActionName = "myScheduledAction";
            string occurrenceId = "CB26D7CB-3E27-465F-99C8-EAF7A4118245";
            ResourceIdentifier scheduledActionOccurrenceResourceId = ScheduledActionOccurrenceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, scheduledActionName, occurrenceId);
            ScheduledActionOccurrenceResource scheduledActionOccurrence = client.GetScheduledActionOccurrenceResource(scheduledActionOccurrenceResourceId);

            // invoke the operation
            OccurrenceCancelContent content = new OccurrenceCancelContent(new ResourceIdentifier[] { new ResourceIdentifier("/subscriptions/CB26D7CB-3E27-465F-99C8-EAF7A4118245/resourceGroups/myRg/providers/Microsoft.Compute/virtualMachines/myVm") });
            ScheduledActionResourceOperationResult result = await scheduledActionOccurrence.CancelAsync(content);

            Console.WriteLine($"Succeeded: {result}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delay_OccurrencesDelayMaximumSet()
        {
            // Generated from example definition: 2025-04-15-preview/Occurrences_Delay_MaximumSet_Gen.json
            // this example is just showing the usage of "Occurrences_Delay" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ScheduledActionOccurrenceResource created on azure
            // for more information of creating ScheduledActionOccurrenceResource, please refer to the document of ScheduledActionOccurrenceResource
            string subscriptionId = "CB26D7CB-3E27-465F-99C8-EAF7A4118245";
            string resourceGroupName = "rgcomputeschedule";
            string scheduledActionName = "myScheduledAction";
            string occurrenceId = "CB26D7CB-3E27-465F-99C8-EAF7A4118245";
            ResourceIdentifier scheduledActionOccurrenceResourceId = ScheduledActionOccurrenceResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, scheduledActionName, occurrenceId);
            ScheduledActionOccurrenceResource scheduledActionOccurrence = client.GetScheduledActionOccurrenceResource(scheduledActionOccurrenceResourceId);

            // invoke the operation
            OccurrenceDelayContent content = new OccurrenceDelayContent(DateTimeOffset.Parse("2025-05-22T17:00:00.000-07:00"), new ResourceIdentifier[] { new ResourceIdentifier("/subscriptions/CB26D7CB-3E27-465F-99C8-EAF7A4118245/resourceGroups/myRg/providers/Microsoft.Compute/virtualMachines/myVm") });
            ArmOperation<ScheduledActionResourceOperationResult> lro = await scheduledActionOccurrence.DelayAsync(WaitUntil.Completed, content);
            ScheduledActionResourceOperationResult result = lro.Value;

            Console.WriteLine($"Succeeded: {result}");
        }
    }
}
