// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.ComputeSchedule.Models
{
    /// <summary> The properties of the occurrence extension. </summary>
    public partial class OccurrenceExtensionProperties
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="OccurrenceExtensionProperties"/>. </summary>
        /// <param name="resourceId">
        /// The ARM Id of the resource.
        /// "subscriptions/{subId}/resourceGroups/{rgName}/providers/Microsoft.Compute/virtualMachines/{vmName}"
        /// </param>
        /// <param name="scheduledOn"> The time the occurrence is scheduled for the resource. Specified in UTC. </param>
        /// <param name="scheduledActionId"> The arm identifier of the scheduled action the occurrence belongs to. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceId"/> or <paramref name="scheduledActionId"/> is null. </exception>
        internal OccurrenceExtensionProperties(ResourceIdentifier resourceId, DateTimeOffset scheduledOn, ResourceIdentifier scheduledActionId)
        {
            Argument.AssertNotNull(resourceId, nameof(resourceId));
            Argument.AssertNotNull(scheduledActionId, nameof(scheduledActionId));

            ResourceId = resourceId;
            NotificationSettings = new ChangeTrackingList<NotificationProperties>();
            ScheduledOn = scheduledOn;
            ScheduledActionId = scheduledActionId;
        }

        /// <summary> Initializes a new instance of <see cref="OccurrenceExtensionProperties"/>. </summary>
        /// <param name="resourceId">
        /// The ARM Id of the resource.
        /// "subscriptions/{subId}/resourceGroups/{rgName}/providers/Microsoft.Compute/virtualMachines/{vmName}"
        /// </param>
        /// <param name="notificationSettings"> The desired notification settings for the specified resource. </param>
        /// <param name="scheduledOn"> The time the occurrence is scheduled for the resource. Specified in UTC. </param>
        /// <param name="provisioningState"> The current state of the resource. </param>
        /// <param name="errorDetails"> Error details for the resource. Only populated if resource is in failed state. </param>
        /// <param name="scheduledActionId"> The arm identifier of the scheduled action the occurrence belongs to. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal OccurrenceExtensionProperties(ResourceIdentifier resourceId, IReadOnlyList<NotificationProperties> notificationSettings, DateTimeOffset scheduledOn, ResourceProvisioningState? provisioningState, ResponseError errorDetails, ResourceIdentifier scheduledActionId, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            ResourceId = resourceId;
            NotificationSettings = notificationSettings;
            ScheduledOn = scheduledOn;
            ProvisioningState = provisioningState;
            ErrorDetails = errorDetails;
            ScheduledActionId = scheduledActionId;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="OccurrenceExtensionProperties"/> for deserialization. </summary>
        internal OccurrenceExtensionProperties()
        {
        }

        /// <summary>
        /// The ARM Id of the resource.
        /// "subscriptions/{subId}/resourceGroups/{rgName}/providers/Microsoft.Compute/virtualMachines/{vmName}"
        /// </summary>
        public ResourceIdentifier ResourceId { get; }
        /// <summary> The desired notification settings for the specified resource. </summary>
        public IReadOnlyList<NotificationProperties> NotificationSettings { get; }
        /// <summary> The time the occurrence is scheduled for the resource. Specified in UTC. </summary>
        public DateTimeOffset ScheduledOn { get; }
        /// <summary> The current state of the resource. </summary>
        public ResourceProvisioningState? ProvisioningState { get; }
        /// <summary> Error details for the resource. Only populated if resource is in failed state. </summary>
        public ResponseError ErrorDetails { get; }
        /// <summary> The arm identifier of the scheduled action the occurrence belongs to. </summary>
        public ResourceIdentifier ScheduledActionId { get; }
    }
}
