// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.ComputeSchedule.Models
{
    /// <summary> The ExecuteCreateRequest request for create operations. </summary>
    public partial class ExecuteCreateContent
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ExecuteCreateContent"/>. </summary>
        /// <param name="resourceConfigParameters"> resource creation payload. </param>
        /// <param name="executionParameters"> The execution parameters for the request. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="resourceConfigParameters"/> or <paramref name="executionParameters"/> is null. </exception>
        public ExecuteCreateContent(ResourceProvisionPayload resourceConfigParameters, ScheduledActionExecutionParameterDetail executionParameters)
        {
            Argument.AssertNotNull(resourceConfigParameters, nameof(resourceConfigParameters));
            Argument.AssertNotNull(executionParameters, nameof(executionParameters));

            ResourceConfigParameters = resourceConfigParameters;
            ExecutionParameters = executionParameters;
        }

        /// <summary> Initializes a new instance of <see cref="ExecuteCreateContent"/>. </summary>
        /// <param name="resourceConfigParameters"> resource creation payload. </param>
        /// <param name="executionParameters"> The execution parameters for the request. </param>
        /// <param name="correlationid"> CorrelationId item. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ExecuteCreateContent(ResourceProvisionPayload resourceConfigParameters, ScheduledActionExecutionParameterDetail executionParameters, string correlationid, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            ResourceConfigParameters = resourceConfigParameters;
            ExecutionParameters = executionParameters;
            Correlationid = correlationid;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="ExecuteCreateContent"/> for deserialization. </summary>
        internal ExecuteCreateContent()
        {
        }

        /// <summary> resource creation payload. </summary>
        public ResourceProvisionPayload ResourceConfigParameters { get; }
        /// <summary> The execution parameters for the request. </summary>
        public ScheduledActionExecutionParameterDetail ExecutionParameters { get; }
        /// <summary> CorrelationId item. </summary>
        public string Correlationid { get; set; }
    }
}
