// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.ResourceManager.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// Tenant Ids information.
    /// </summary>
    public partial class TenantListResultInner
    {
        /// <summary>
        /// Initializes a new instance of the TenantListResultInner class.
        /// </summary>
        public TenantListResultInner() { }

        /// <summary>
        /// Initializes a new instance of the TenantListResultInner class.
        /// </summary>
        /// <param name="nextLink">Gets or sets the URL to get the next set of
        /// results.</param>
        /// <param name="value">Gets or sets tenant Ids.</param>
        public TenantListResultInner(string nextLink, IList<TenantIdDescription> value = default(IList<TenantIdDescription>))
        {
            Value = value;
            NextLink = nextLink;
        }

        /// <summary>
        /// Gets or sets tenant Ids.
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public IList<TenantIdDescription> Value { get; set; }

        /// <summary>
        /// Gets or sets the URL to get the next set of results.
        /// </summary>
        [JsonProperty(PropertyName = "nextLink")]
        public string NextLink { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (NextLink == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "NextLink");
            }
        }
    }
}
