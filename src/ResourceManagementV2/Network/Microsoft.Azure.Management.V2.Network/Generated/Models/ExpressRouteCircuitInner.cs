// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// ExpressRouteCircuit resource
    /// </summary>
    [JsonTransformation]
    public partial class ExpressRouteCircuitInner : Resource
    {
        /// <summary>
        /// Initializes a new instance of the ExpressRouteCircuitInner class.
        /// </summary>
        public ExpressRouteCircuitInner() { }

        /// <summary>
        /// Initializes a new instance of the ExpressRouteCircuitInner class.
        /// </summary>
        /// <param name="sku">Gets or sets sku</param>
        /// <param name="allowClassicOperations">allow classic
        /// operations</param>
        /// <param name="circuitProvisioningState">Gets or sets
        /// CircuitProvisioningState state of the resource </param>
        /// <param name="serviceProviderProvisioningState">Gets or sets
        /// ServiceProviderProvisioningState state of the resource . Possible
        /// values include: 'NotProvisioned', 'Provisioning', 'Provisioned',
        /// 'Deprovisioning'</param>
        /// <param name="authorizations">Gets or sets list of
        /// authorizations</param>
        /// <param name="peerings">Gets or sets list of peerings</param>
        /// <param name="serviceKey">Gets or sets ServiceKey</param>
        /// <param name="serviceProviderNotes">Gets or sets
        /// ServiceProviderNotes</param>
        /// <param name="serviceProviderProperties">Gets or sets
        /// ServiceProviderProperties</param>
        /// <param name="provisioningState">Gets provisioning state of the
        /// PublicIP resource Updating/Deleting/Failed</param>
        /// <param name="etag">Gets a unique read-only string that changes
        /// whenever the resource is updated</param>
        public ExpressRouteCircuitInner(String location = default(String), String id = default(String), String name = default(String), String type = default(String), IDictionary<string, String> tags = default(IDictionary<string, String>), ExpressRouteCircuitSku sku = default(ExpressRouteCircuitSku), bool? allowClassicOperations = default(bool?), string circuitProvisioningState = default(string), string serviceProviderProvisioningState = default(string), IList<ExpressRouteCircuitAuthorizationInner> authorizations = default(IList<ExpressRouteCircuitAuthorizationInner>), IList<ExpressRouteCircuitPeeringInner> peerings = default(IList<ExpressRouteCircuitPeeringInner>), string serviceKey = default(string), string serviceProviderNotes = default(string), ExpressRouteCircuitServiceProviderProperties serviceProviderProperties = default(ExpressRouteCircuitServiceProviderProperties), string provisioningState = default(string), string etag = default(string))
            : base(location, id, name, type, tags)
        {
            Sku = sku;
            AllowClassicOperations = allowClassicOperations;
            CircuitProvisioningState = circuitProvisioningState;
            ServiceProviderProvisioningState = serviceProviderProvisioningState;
            Authorizations = authorizations;
            Peerings = peerings;
            ServiceKey = serviceKey;
            ServiceProviderNotes = serviceProviderNotes;
            ServiceProviderProperties = serviceProviderProperties;
            ProvisioningState = provisioningState;
            Etag = etag;
        }

        /// <summary>
        /// Gets or sets sku
        /// </summary>
        [JsonProperty(PropertyName = "sku")]
        public ExpressRouteCircuitSku Sku { get; set; }

        /// <summary>
        /// Gets or sets allow classic operations
        /// </summary>
        [JsonProperty(PropertyName = "properties.allowClassicOperations")]
        public bool? AllowClassicOperations { get; set; }

        /// <summary>
        /// Gets or sets CircuitProvisioningState state of the resource
        /// </summary>
        [JsonProperty(PropertyName = "properties.circuitProvisioningState")]
        public string CircuitProvisioningState { get; set; }

        /// <summary>
        /// Gets or sets ServiceProviderProvisioningState state of the
        /// resource . Possible values include: 'NotProvisioned',
        /// 'Provisioning', 'Provisioned', 'Deprovisioning'
        /// </summary>
        [JsonProperty(PropertyName = "properties.serviceProviderProvisioningState")]
        public string ServiceProviderProvisioningState { get; set; }

        /// <summary>
        /// Gets or sets list of authorizations
        /// </summary>
        [JsonProperty(PropertyName = "properties.authorizations")]
        public IList<ExpressRouteCircuitAuthorizationInner> Authorizations { get; set; }

        /// <summary>
        /// Gets or sets list of peerings
        /// </summary>
        [JsonProperty(PropertyName = "properties.peerings")]
        public IList<ExpressRouteCircuitPeeringInner> Peerings { get; set; }

        /// <summary>
        /// Gets or sets ServiceKey
        /// </summary>
        [JsonProperty(PropertyName = "properties.serviceKey")]
        public string ServiceKey { get; set; }

        /// <summary>
        /// Gets or sets ServiceProviderNotes
        /// </summary>
        [JsonProperty(PropertyName = "properties.serviceProviderNotes")]
        public string ServiceProviderNotes { get; set; }

        /// <summary>
        /// Gets or sets ServiceProviderProperties
        /// </summary>
        [JsonProperty(PropertyName = "properties.serviceProviderProperties")]
        public ExpressRouteCircuitServiceProviderProperties ServiceProviderProperties { get; set; }

        /// <summary>
        /// Gets provisioning state of the PublicIP resource
        /// Updating/Deleting/Failed
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource
        /// is updated
        /// </summary>
        [JsonProperty(PropertyName = "etag")]
        public string Etag { get; set; }

    }
}
