// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// ExpressRouteResourceProvider object
    /// </summary>
    [JsonTransformation]
    public partial class ExpressRouteServiceProvider : Resource
    {
        /// <summary>
        /// Initializes a new instance of the ExpressRouteServiceProvider
        /// class.
        /// </summary>
        public ExpressRouteServiceProvider() { }

        /// <summary>
        /// Initializes a new instance of the ExpressRouteServiceProvider
        /// class.
        /// </summary>
        /// <param name="peeringLocations">Gets or list of peering
        /// locations</param>
        /// <param name="bandwidthsOffered">Gets or bandwidths offered</param>
        /// <param name="provisioningState">Gets provisioning state of the
        /// resource </param>
        public ExpressRouteServiceProvider(String location = default(String), String id = default(String), String name = default(String), String type = default(String), IDictionary<string, String> tags = default(IDictionary<string, String>), IList<string> peeringLocations = default(IList<string>), IList<ExpressRouteServiceProviderBandwidthsOffered> bandwidthsOffered = default(IList<ExpressRouteServiceProviderBandwidthsOffered>), string provisioningState = default(string))
            : base(location, id, name, type, tags)
        {
            PeeringLocations = peeringLocations;
            BandwidthsOffered = bandwidthsOffered;
            ProvisioningState = provisioningState;
        }

        /// <summary>
        /// Gets or list of peering locations
        /// </summary>
        [JsonProperty(PropertyName = "properties.peeringLocations")]
        public IList<string> PeeringLocations { get; set; }

        /// <summary>
        /// Gets or bandwidths offered
        /// </summary>
        [JsonProperty(PropertyName = "properties.bandwidthsOffered")]
        public IList<ExpressRouteServiceProviderBandwidthsOffered> BandwidthsOffered { get; set; }

        /// <summary>
        /// Gets provisioning state of the resource
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; set; }

    }
}
