// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using Microsoft.Azure;
using Microsoft.Azure.Management.Storage.Models;

namespace Microsoft.Azure.Management.Storage.Models
{
    /// <summary>
    /// The storage account.
    /// </summary>
    public partial class StorageAccount : ResourceBaseExtended
    {
        private Microsoft.Azure.Management.Storage.Models.AccountType? _accountType;
        
        /// <summary>
        /// Optional. Gets the type of the storage account.
        /// </summary>
        public Microsoft.Azure.Management.Storage.Models.AccountType? AccountType
        {
            get { return this._accountType; }
            set { this._accountType = value; }
        }
        
        private System.DateTime? _creationTime;
        
        /// <summary>
        /// Optional. Gets the creation date and time of the storage account in
        /// UTC.
        /// </summary>
        public System.DateTime? CreationTime
        {
            get { return this._creationTime; }
            set { this._creationTime = value; }
        }
        
        private CustomDomain _customDomain;
        
        /// <summary>
        /// Optional. Gets the user assigned custom domain assigned to this
        /// storage account.
        /// </summary>
        public CustomDomain CustomDomain
        {
            get { return this._customDomain; }
            set { this._customDomain = value; }
        }
        
        private System.DateTime? _lastGeoFailoverTime;
        
        /// <summary>
        /// Optional. Gets the timestamp of the most recent instance of a
        /// failover to the secondary location. Only the most recent timestamp
        /// is retained. This element is not returned if there has never been
        /// a failover instance. Only available if the accountType is
        /// StandardGRS or StandardRAGRS.
        /// </summary>
        public System.DateTime? LastGeoFailoverTime
        {
            get { return this._lastGeoFailoverTime; }
            set { this._lastGeoFailoverTime = value; }
        }
        
        private Endpoints _primaryEndpoints;
        
        /// <summary>
        /// Optional. Gets the URLs that are used to perform a retrieval of a
        /// public blob, queue or table object.Note that StandardZRS and
        /// PremiumLRS accounts only return the blob endpoint.
        /// </summary>
        public Endpoints PrimaryEndpoints
        {
            get { return this._primaryEndpoints; }
            set { this._primaryEndpoints = value; }
        }
        
        private string _primaryLocation;
        
        /// <summary>
        /// Optional. Gets the location of the primary for the storage account.
        /// </summary>
        public string PrimaryLocation
        {
            get { return this._primaryLocation; }
            set { this._primaryLocation = value; }
        }
        
        private Microsoft.Azure.Management.Storage.Models.ProvisioningState? _provisioningState;
        
        /// <summary>
        /// Optional. Gets the status of the storage account at the time the
        /// operation was called.
        /// </summary>
        public Microsoft.Azure.Management.Storage.Models.ProvisioningState? ProvisioningState
        {
            get { return this._provisioningState; }
            set { this._provisioningState = value; }
        }
        
        private Endpoints _secondaryEndpoints;
        
        /// <summary>
        /// Optional. Gets the URLs that are used to perform a retrieval of a
        /// public blob, queue or table object from the secondary location of
        /// the storage account. Only available if the accountType is
        /// StandardRAGRS.
        /// </summary>
        public Endpoints SecondaryEndpoints
        {
            get { return this._secondaryEndpoints; }
            set { this._secondaryEndpoints = value; }
        }
        
        private string _secondaryLocation;
        
        /// <summary>
        /// Optional. Gets the location of the geo replicated secondary for the
        /// storage account. Only available if the accountType is StandardGRS
        /// or StandardRAGRS.
        /// </summary>
        public string SecondaryLocation
        {
            get { return this._secondaryLocation; }
            set { this._secondaryLocation = value; }
        }
        
        private Microsoft.Azure.Management.Storage.Models.AccountStatus? _statusOfPrimary;
        
        /// <summary>
        /// Optional. Gets the status indicating whether the primary location
        /// of the storage account is available or unavailable.
        /// </summary>
        public Microsoft.Azure.Management.Storage.Models.AccountStatus? StatusOfPrimary
        {
            get { return this._statusOfPrimary; }
            set { this._statusOfPrimary = value; }
        }
        
        private Microsoft.Azure.Management.Storage.Models.AccountStatus? _statusOfSecondary;
        
        /// <summary>
        /// Optional. Gets the status indicating whether the secondary location
        /// of the storage account is available or unavailable. Only available
        /// if the accountType is StandardGRS or StandardRAGRS.
        /// </summary>
        public Microsoft.Azure.Management.Storage.Models.AccountStatus? StatusOfSecondary
        {
            get { return this._statusOfSecondary; }
            set { this._statusOfSecondary = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the StorageAccount class.
        /// </summary>
        public StorageAccount()
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the StorageAccount class with
        /// required arguments.
        /// </summary>
        public StorageAccount(string location)
            : this()
        {
            if (location == null)
            {
                throw new ArgumentNullException("location");
            }
            this.Location = location;
        }
    }
}
