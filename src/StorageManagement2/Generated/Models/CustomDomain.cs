// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;

namespace Microsoft.Azure.Management.Storage.Models
{
    /// <summary>
    /// The custom domain assigned to this storage account. This can be set via
    /// Update.
    /// </summary>
    public partial class CustomDomain
    {
        private string _name;
        
        /// <summary>
        /// Required. Gets or sets the custom domain name. Name is the CNAME
        /// source.
        /// </summary>
        public string Name
        {
            get { return this._name; }
            set { this._name = value; }
        }
        
        private bool? _useSubDomain;
        
        /// <summary>
        /// Optional. Indicates whether indirect CName validation is enabled.
        /// Default value is false. This should only be set on updates
        /// </summary>
        public bool? UseSubDomain
        {
            get { return this._useSubDomain; }
            set { this._useSubDomain = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the CustomDomain class.
        /// </summary>
        public CustomDomain()
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the CustomDomain class with required
        /// arguments.
        /// </summary>
        public CustomDomain(string name)
            : this()
        {
            if (name == null)
            {
                throw new ArgumentNullException("name");
            }
            this.Name = name;
        }
    }
}
