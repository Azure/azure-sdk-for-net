//
// Copyright (c) Microsoft.  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

using Microsoft.WindowsAzure;
using Microsoft.WindowsAzure.Common.Internals;
using System;
using System.Collections.Generic;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Threading;
using System.Threading.Tasks;

namespace Microsoft.Azure.Graph.RBAC
{
    public partial class GraphRbacManagementClient
    {
        public static GraphRbacManagementClient Create(string clientId, string graphServiceRoot, string aadAuthEndpoint)
        {
            Uri RedirectUri = new Uri("urn:ietf:wg:oauth:2.0:oob");
            const string CommonTenant = "common";

            string authority = aadAuthEndpoint + CommonTenant;
            AuthenticationContext authContext = new AuthenticationContext(authority);

            AuthenticationResult result =
                authContext.AcquireToken(graphServiceRoot, clientId, RedirectUri, PromptBehavior.Always);

            var cred = new TenantCloudCredentials();
            cred.TenantID = result.TenantId;
            cred.Token = result.AccessToken;
            var retBalue = new GraphRbacManagementClient(cred, new Uri(graphServiceRoot));
            retBalue.TenantID = cred.TenantID;
            return retBalue;
        }
	}
}