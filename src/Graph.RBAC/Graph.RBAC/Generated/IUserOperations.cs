// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure;
using Microsoft.Azure.Graph.RBAC.Models;

namespace Microsoft.Azure.Graph.RBAC
{
    /// <summary>
    /// Operations for working with Users in Azure Active Directory Graph API.
    /// (see http://msdn.microsoft.com/en-us/library/azure/hh974476.aspx for
    /// more information)
    /// </summary>
    public partial interface IUserOperations
    {
        /// <summary>
        /// Create a new user.  (see
        /// http://msdn.microsoft.com/en-us/library/azure/dn130117.aspx for
        /// more information)
        /// </summary>
        /// <param name='parameters'>
        /// Parameters to create a user.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// Server response for Get user information API call
        /// </returns>
        Task<UserGetResult> CreateAsync(UserCreateParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// Delete a user.  (see
        /// http://msdn.microsoft.com/en-us/library/azure/dn151676.aspx for
        /// more information)
        /// </summary>
        /// <param name='user'>
        /// user object id or user principal name
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<AzureOperationResponse> DeleteAsync(string user, CancellationToken cancellationToken);
        
        /// <summary>
        /// Gets user information from the directory.  (see
        /// http://msdn.microsoft.com/en-us/library/azure/dn151678.aspx for
        /// more information)
        /// </summary>
        /// <param name='upnOrObjectId'>
        /// User object Id or user principal name to get user information.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// Server response for Get user information API call
        /// </returns>
        Task<UserGetResult> GetAsync(string upnOrObjectId, CancellationToken cancellationToken);
        
        /// <summary>
        /// Gets user information from the directory.
        /// </summary>
        /// <param name='userPrincipalName'>
        /// Filter based on userPrincipalName. This works well with guest users
        /// upn.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// Server response for Get tenant users API call
        /// </returns>
        Task<UserListResult> GetByUserPrincipalNameAsync(string userPrincipalName, CancellationToken cancellationToken);
        
        /// <summary>
        /// Gets a collection that contains the Object IDs of the groups of
        /// which the user is a member.
        /// </summary>
        /// <param name='parameters'>
        /// User filtering parameters.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// Server response for GetMemberGroups API call
        /// </returns>
        Task<UserGetMemberGroupsResult> GetMemberGroupsAsync(UserGetMemberGroupsParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// Gets list of users for the current tenant.
        /// </summary>
        /// <param name='mail'>
        /// Email to filter results.
        /// </param>
        /// <param name='displayNameStartsWith'>
        /// Display name to filter results.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// Server response for Get tenant users API call
        /// </returns>
        Task<UserListResult> ListAsync(string mail, string displayNameStartsWith, CancellationToken cancellationToken);
        
        /// <summary>
        /// Gets list of users for the current tenant.
        /// </summary>
        /// <param name='nextLink'>
        /// NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// Server response for Get tenant users API call
        /// </returns>
        Task<UserListResult> ListNextAsync(string nextLink, CancellationToken cancellationToken);
    }
}
