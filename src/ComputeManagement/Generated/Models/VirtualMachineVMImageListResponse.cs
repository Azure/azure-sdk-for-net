// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.WindowsAzure;
using Microsoft.WindowsAzure.Management.Compute.Models;

namespace Microsoft.WindowsAzure.Management.Compute.Models
{
    /// <summary>
    /// The List VM Images operation response.
    /// </summary>
    public partial class VirtualMachineVMImageListResponse : OperationResponse, IEnumerable<VirtualMachineVMImageListResponse.VirtualMachineVMImage>
    {
        private IList<VirtualMachineVMImageListResponse.VirtualMachineVMImage> _vMImages;
        
        /// <summary>
        /// The virtual machine VM images associated with your subscription.
        /// </summary>
        public IList<VirtualMachineVMImageListResponse.VirtualMachineVMImage> VMImages
        {
            get { return this._vMImages; }
            set { this._vMImages = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the VirtualMachineVMImageListResponse
        /// class.
        /// </summary>
        public VirtualMachineVMImageListResponse()
        {
            this._vMImages = new List<VirtualMachineVMImageListResponse.VirtualMachineVMImage>();
        }
        
        /// <summary>
        /// Gets the sequence of VMImages.
        /// </summary>
        public IEnumerator<VirtualMachineVMImageListResponse.VirtualMachineVMImage> GetEnumerator()
        {
            return this.VMImages.GetEnumerator();
        }
        
        /// <summary>
        /// Gets the sequence of VMImages.
        /// </summary>
        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return this.GetEnumerator();
        }
        
        /// <summary>
        /// The data disk configuration.
        /// </summary>
        public partial class DataDiskConfiguration
        {
            private Microsoft.WindowsAzure.Management.Compute.Models.VirtualHardDiskHostCaching? _hostCaching;
            
            /// <summary>
            /// Specifies the platform caching behavior of the data disk blob
            /// for read/write efficiency. The default vault is ReadOnly.
            /// </summary>
            public Microsoft.WindowsAzure.Management.Compute.Models.VirtualHardDiskHostCaching? HostCaching
            {
                get { return this._hostCaching; }
                set { this._hostCaching = value; }
            }
            
            private int _logicalDiskSizeInGB;
            
            /// <summary>
            /// Specifies the size, in GB, of an empty VHD to be attached to
            /// the virtual machine. The VHD can be created as part of disk
            /// attach or create virtual machine call by specifying the value
            /// for this property.  Windows Azure creates the empty VHD based
            /// on size preference and attaches the newly created VHD to the
            /// virtual machine.
            /// </summary>
            public int LogicalDiskSizeInGB
            {
                get { return this._logicalDiskSizeInGB; }
                set { this._logicalDiskSizeInGB = value; }
            }
            
            private int? _logicalUnitNumber;
            
            /// <summary>
            /// Specifies the Logical Unit Number (LUN) for the data disk. The
            /// LUN specifies the slot in which the data drive appears when
            /// mounted for usage by the virtual machine. This element is only
            /// listed when more than one data disk is attached to a virtual
            /// machine.
            /// </summary>
            public int? LogicalUnitNumber
            {
                get { return this._logicalUnitNumber; }
                set { this._logicalUnitNumber = value; }
            }
            
            private Uri _mediaLink;
            
            /// <summary>
            /// Specifies the location of the disk in Windows Azure storage.
            /// </summary>
            public Uri MediaLink
            {
                get { return this._mediaLink; }
                set { this._mediaLink = value; }
            }
            
            private string _name;
            
            /// <summary>
            /// Specifies the name of the VHD to use to create thedata disk for
            /// the virtual machine.
            /// </summary>
            public string Name
            {
                get { return this._name; }
                set { this._name = value; }
            }
            
            /// <summary>
            /// Initializes a new instance of the DataDiskConfiguration class.
            /// </summary>
            public DataDiskConfiguration()
            {
            }
        }
        
        /// <summary>
        /// The OS disk configuration.
        /// </summary>
        public partial class OSDiskConfiguration
        {
            private Microsoft.WindowsAzure.Management.Compute.Models.VirtualHardDiskHostCaching? _hostCaching;
            
            /// <summary>
            /// Specifies the platform caching behavior of the operating system
            /// disk blob for read/write efficiency.
            /// </summary>
            public Microsoft.WindowsAzure.Management.Compute.Models.VirtualHardDiskHostCaching? HostCaching
            {
                get { return this._hostCaching; }
                set { this._hostCaching = value; }
            }
            
            private int _logicalDiskSizeInGB;
            
            /// <summary>
            /// Specifies the size, in GB, of an empty VHD to be attached to
            /// the virtual machine. The VHD can be created as part of disk
            /// attach or create virtual machine call by specifying the value
            /// for this property.  Windows Azure creates the empty VHD based
            /// on size preference and attaches the newly created VHD to the
            /// virtual machine.
            /// </summary>
            public int LogicalDiskSizeInGB
            {
                get { return this._logicalDiskSizeInGB; }
                set { this._logicalDiskSizeInGB = value; }
            }
            
            private Uri _mediaLink;
            
            /// <summary>
            /// Specifies the location of the disk in Windows Azure storage.
            /// </summary>
            public Uri MediaLink
            {
                get { return this._mediaLink; }
                set { this._mediaLink = value; }
            }
            
            private string _name;
            
            /// <summary>
            /// Specifies the name an operating system image in the image
            /// repository.
            /// </summary>
            public string Name
            {
                get { return this._name; }
                set { this._name = value; }
            }
            
            private string _operatingSystem;
            
            /// <summary>
            /// The operating system running in the virtual machine.
            /// </summary>
            public string OperatingSystem
            {
                get { return this._operatingSystem; }
                set { this._operatingSystem = value; }
            }
            
            private string _oSState;
            
            /// <summary>
            /// The operating system state in the virtual machine.
            /// </summary>
            public string OSState
            {
                get { return this._oSState; }
                set { this._oSState = value; }
            }
            
            /// <summary>
            /// Initializes a new instance of the OSDiskConfiguration class.
            /// </summary>
            public OSDiskConfiguration()
            {
            }
        }
        
        /// <summary>
        /// A virtual machine image associated with your subscription.
        /// </summary>
        public partial class VirtualMachineVMImage
        {
            private string _affinityGroup;
            
            /// <summary>
            /// The affinity group name of the VM image.
            /// </summary>
            public string AffinityGroup
            {
                get { return this._affinityGroup; }
                set { this._affinityGroup = value; }
            }
            
            private string _category;
            
            /// <summary>
            /// The classification of the VM image.
            /// </summary>
            public string Category
            {
                get { return this._category; }
                set { this._category = value; }
            }
            
            private System.DateTime? _createdTime;
            
            /// <summary>
            /// The date when the VM image was created.
            /// </summary>
            public System.DateTime? CreatedTime
            {
                get { return this._createdTime; }
                set { this._createdTime = value; }
            }
            
            private IList<VirtualMachineVMImageListResponse.DataDiskConfiguration> _dataDiskConfigurations;
            
            /// <summary>
            /// The data disk configurations.
            /// </summary>
            public IList<VirtualMachineVMImageListResponse.DataDiskConfiguration> DataDiskConfigurations
            {
                get { return this._dataDiskConfigurations; }
                set { this._dataDiskConfigurations = value; }
            }
            
            private string _deploymentName;
            
            /// <summary>
            /// The deployment name of the VM image.
            /// </summary>
            public string DeploymentName
            {
                get { return this._deploymentName; }
                set { this._deploymentName = value; }
            }
            
            private string _label;
            
            /// <summary>
            /// An identifier for the VM image.
            /// </summary>
            public string Label
            {
                get { return this._label; }
                set { this._label = value; }
            }
            
            private string _name;
            
            /// <summary>
            /// The name of the VM image.
            /// </summary>
            public string Name
            {
                get { return this._name; }
                set { this._name = value; }
            }
            
            private VirtualMachineVMImageListResponse.OSDiskConfiguration _oSDiskConfiguration;
            
            /// <summary>
            /// The OS disk configuration.
            /// </summary>
            public VirtualMachineVMImageListResponse.OSDiskConfiguration OSDiskConfiguration
            {
                get { return this._oSDiskConfiguration; }
                set { this._oSDiskConfiguration = value; }
            }
            
            private string _roleName;
            
            /// <summary>
            /// The role name of the VM image.
            /// </summary>
            public string RoleName
            {
                get { return this._roleName; }
                set { this._roleName = value; }
            }
            
            private string _serviceName;
            
            /// <summary>
            /// The service name of the VM image.
            /// </summary>
            public string ServiceName
            {
                get { return this._serviceName; }
                set { this._serviceName = value; }
            }
            
            /// <summary>
            /// Initializes a new instance of the VirtualMachineVMImage class.
            /// </summary>
            public VirtualMachineVMImage()
            {
                this._dataDiskConfigurations = new List<VirtualMachineVMImageListResponse.DataDiskConfiguration>();
            }
        }
    }
}
