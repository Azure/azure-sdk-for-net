// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure.Management.DataFactories;
using Microsoft.Azure.Management.DataFactories.Models;
using Microsoft.Azure.Management.DataFactories.Registration.Models;

namespace Microsoft.Azure.Management.DataFactories
{
    public static partial class InternalComputeTypeOperationsExtensions
    {
        /// <summary>
        /// Delete a ComputeType instance.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.DataFactories.IInternalComputeTypeOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the data factory.
        /// </param>
        /// <param name='dataFactoryName'>
        /// Required. The name of the data factory.
        /// </param>
        /// <param name='computeTypeName'>
        /// Required. The name of the computeType.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public static LongRunningOperationResponse BeginDelete(this IInternalComputeTypeOperations operations, string resourceGroupName, string dataFactoryName, string computeTypeName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IInternalComputeTypeOperations)s).BeginDeleteAsync(resourceGroupName, dataFactoryName, computeTypeName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Delete a ComputeType instance.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.DataFactories.IInternalComputeTypeOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the data factory.
        /// </param>
        /// <param name='dataFactoryName'>
        /// Required. The name of the data factory.
        /// </param>
        /// <param name='computeTypeName'>
        /// Required. The name of the computeType.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public static Task<LongRunningOperationResponse> BeginDeleteAsync(this IInternalComputeTypeOperations operations, string resourceGroupName, string dataFactoryName, string computeTypeName)
        {
            return operations.BeginDeleteAsync(resourceGroupName, dataFactoryName, computeTypeName, CancellationToken.None);
        }
        
        /// <summary>
        /// Create or update a ComputeType.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.DataFactories.IInternalComputeTypeOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the data factory.
        /// </param>
        /// <param name='dataFactoryName'>
        /// Required. The name of the data factory.
        /// </param>
        /// <param name='parameters'>
        /// Required. The parameters required to create or update a ComputeType
        /// definition.
        /// </param>
        /// <returns>
        /// The create or update ComputeType operation response.
        /// </returns>
        public static InternalComputeTypeCreateOrUpdateResponse CreateOrUpdate(this IInternalComputeTypeOperations operations, string resourceGroupName, string dataFactoryName, InternalComputeTypeCreateOrUpdateParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IInternalComputeTypeOperations)s).CreateOrUpdateAsync(resourceGroupName, dataFactoryName, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Create or update a ComputeType.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.DataFactories.IInternalComputeTypeOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the data factory.
        /// </param>
        /// <param name='dataFactoryName'>
        /// Required. The name of the data factory.
        /// </param>
        /// <param name='parameters'>
        /// Required. The parameters required to create or update a ComputeType
        /// definition.
        /// </param>
        /// <returns>
        /// The create or update ComputeType operation response.
        /// </returns>
        public static Task<InternalComputeTypeCreateOrUpdateResponse> CreateOrUpdateAsync(this IInternalComputeTypeOperations operations, string resourceGroupName, string dataFactoryName, InternalComputeTypeCreateOrUpdateParameters parameters)
        {
            return operations.CreateOrUpdateAsync(resourceGroupName, dataFactoryName, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Create or update a ComputeType.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.DataFactories.IInternalComputeTypeOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the data factory.
        /// </param>
        /// <param name='dataFactoryName'>
        /// Required. The name of the data factory.
        /// </param>
        /// <param name='computeTypeName'>
        /// Required. A ComputeType name.
        /// </param>
        /// <param name='parameters'>
        /// Required. The parameters required to create or update a ComputeType
        /// definition.
        /// </param>
        /// <returns>
        /// The create or update ComputeType operation response.
        /// </returns>
        public static InternalComputeTypeCreateOrUpdateResponse CreateOrUpdateWithRawJsonContent(this IInternalComputeTypeOperations operations, string resourceGroupName, string dataFactoryName, string computeTypeName, ComputeTypeCreateOrUpdateWithRawJsonContentParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IInternalComputeTypeOperations)s).CreateOrUpdateWithRawJsonContentAsync(resourceGroupName, dataFactoryName, computeTypeName, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Create or update a ComputeType.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.DataFactories.IInternalComputeTypeOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the data factory.
        /// </param>
        /// <param name='dataFactoryName'>
        /// Required. The name of the data factory.
        /// </param>
        /// <param name='computeTypeName'>
        /// Required. A ComputeType name.
        /// </param>
        /// <param name='parameters'>
        /// Required. The parameters required to create or update a ComputeType
        /// definition.
        /// </param>
        /// <returns>
        /// The create or update ComputeType operation response.
        /// </returns>
        public static Task<InternalComputeTypeCreateOrUpdateResponse> CreateOrUpdateWithRawJsonContentAsync(this IInternalComputeTypeOperations operations, string resourceGroupName, string dataFactoryName, string computeTypeName, ComputeTypeCreateOrUpdateWithRawJsonContentParameters parameters)
        {
            return operations.CreateOrUpdateWithRawJsonContentAsync(resourceGroupName, dataFactoryName, computeTypeName, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Delete a ComputeType instance.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.DataFactories.IInternalComputeTypeOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the data factory.
        /// </param>
        /// <param name='dataFactoryName'>
        /// Required. The name of the data factory.
        /// </param>
        /// <param name='computeTypeName'>
        /// Required. The name of the computeType.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public static LongRunningOperationResponse Delete(this IInternalComputeTypeOperations operations, string resourceGroupName, string dataFactoryName, string computeTypeName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IInternalComputeTypeOperations)s).DeleteAsync(resourceGroupName, dataFactoryName, computeTypeName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Delete a ComputeType instance.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.DataFactories.IInternalComputeTypeOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the data factory.
        /// </param>
        /// <param name='dataFactoryName'>
        /// Required. The name of the data factory.
        /// </param>
        /// <param name='computeTypeName'>
        /// Required. The name of the computeType.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public static Task<LongRunningOperationResponse> DeleteAsync(this IInternalComputeTypeOperations operations, string resourceGroupName, string dataFactoryName, string computeTypeName)
        {
            return operations.DeleteAsync(resourceGroupName, dataFactoryName, computeTypeName, CancellationToken.None);
        }
        
        /// <summary>
        /// Gets a ComputeType instance.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.DataFactories.IInternalComputeTypeOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the data factory.
        /// </param>
        /// <param name='dataFactoryName'>
        /// Required. The name of the data factory.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters specifying how to get a ComputeType definition.
        /// </param>
        /// <returns>
        /// The Get ComputeType operation response.
        /// </returns>
        public static InternalComputeTypeGetResponse Get(this IInternalComputeTypeOperations operations, string resourceGroupName, string dataFactoryName, ComputeTypeGetParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IInternalComputeTypeOperations)s).GetAsync(resourceGroupName, dataFactoryName, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Gets a ComputeType instance.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.DataFactories.IInternalComputeTypeOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the data factory.
        /// </param>
        /// <param name='dataFactoryName'>
        /// Required. The name of the data factory.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters specifying how to get a ComputeType definition.
        /// </param>
        /// <returns>
        /// The Get ComputeType operation response.
        /// </returns>
        public static Task<InternalComputeTypeGetResponse> GetAsync(this IInternalComputeTypeOperations operations, string resourceGroupName, string dataFactoryName, ComputeTypeGetParameters parameters)
        {
            return operations.GetAsync(resourceGroupName, dataFactoryName, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Gets a ComputeType instance.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.DataFactories.IInternalComputeTypeOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the data factory.
        /// </param>
        /// <param name='dataFactoryName'>
        /// Required. The name of the data factory.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters specifying how to return a list of ComputeType
        /// definitions for a List operation.
        /// </param>
        /// <returns>
        /// The List ComputeType operation response.
        /// </returns>
        public static InternalComputeTypeListResponse List(this IInternalComputeTypeOperations operations, string resourceGroupName, string dataFactoryName, ComputeTypeListParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IInternalComputeTypeOperations)s).ListAsync(resourceGroupName, dataFactoryName, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Gets a ComputeType instance.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.DataFactories.IInternalComputeTypeOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the data factory.
        /// </param>
        /// <param name='dataFactoryName'>
        /// Required. The name of the data factory.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters specifying how to return a list of ComputeType
        /// definitions for a List operation.
        /// </param>
        /// <returns>
        /// The List ComputeType operation response.
        /// </returns>
        public static Task<InternalComputeTypeListResponse> ListAsync(this IInternalComputeTypeOperations operations, string resourceGroupName, string dataFactoryName, ComputeTypeListParameters parameters)
        {
            return operations.ListAsync(resourceGroupName, dataFactoryName, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Gets the next page of ComputeType instances with the link to the
        /// next page.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.DataFactories.IInternalComputeTypeOperations.
        /// </param>
        /// <param name='nextLink'>
        /// Required. The url to the next ComputeTypes page.
        /// </param>
        /// <returns>
        /// The List ComputeType operation response.
        /// </returns>
        public static InternalComputeTypeListResponse ListNext(this IInternalComputeTypeOperations operations, string nextLink)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IInternalComputeTypeOperations)s).ListNextAsync(nextLink);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Gets the next page of ComputeType instances with the link to the
        /// next page.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.DataFactories.IInternalComputeTypeOperations.
        /// </param>
        /// <param name='nextLink'>
        /// Required. The url to the next ComputeTypes page.
        /// </param>
        /// <returns>
        /// The List ComputeType operation response.
        /// </returns>
        public static Task<InternalComputeTypeListResponse> ListNextAsync(this IInternalComputeTypeOperations operations, string nextLink)
        {
            return operations.ListNextAsync(nextLink, CancellationToken.None);
        }
    }
}
