// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;

namespace Microsoft.Azure.Management.DataFactories.Models
{
    /// <summary>
    /// Basic information about a gateway.
    /// </summary>
    public partial class GatewayProperties
    {
        private System.DateTime? _createTime;
        
        /// <summary>
        /// Optional. Create time of the data factory gateway is set by the
        /// service side and read-only on the client side.
        /// </summary>
        public System.DateTime? CreateTime
        {
            get { return this._createTime; }
            set { this._createTime = value; }
        }
        
        private string _description;
        
        /// <summary>
        /// Optional. Description of the data factory gateway.
        /// </summary>
        public string Description
        {
            get { return this._description; }
            set { this._description = value; }
        }
        
        private System.DateTime? _expiryTime;
        
        /// <summary>
        /// Optional. Expiry time of the data factory gateway is set by the
        /// service side and read-only on the client side.
        /// </summary>
        public System.DateTime? ExpiryTime
        {
            get { return this._expiryTime; }
            set { this._expiryTime = value; }
        }
        
        private string _key;
        
        /// <summary>
        /// Optional. Gateway key is set by the service side when creating a
        /// new gateway and read-only on the client side. Its value will be
        /// null in all other scenarios.
        /// </summary>
        public string Key
        {
            get { return this._key; }
            set { this._key = value; }
        }
        
        private System.DateTime? _lastConnectTime;
        
        /// <summary>
        /// Optional. Last connect time of the data factory gateway is set by
        /// the service side and read-only on the client side.
        /// </summary>
        public System.DateTime? LastConnectTime
        {
            get { return this._lastConnectTime; }
            set { this._lastConnectTime = value; }
        }
        
        private string _provisioningState;
        
        /// <summary>
        /// Optional. The provisioning state of the data factory gateway.
        /// </summary>
        public string ProvisioningState
        {
            get { return this._provisioningState; }
            set { this._provisioningState = value; }
        }
        
        private System.DateTime? _registerTime;
        
        /// <summary>
        /// Optional. Register time of the data factory gateway is set by the
        /// service side and read-only on the client side.
        /// </summary>
        public System.DateTime? RegisterTime
        {
            get { return this._registerTime; }
            set { this._registerTime = value; }
        }
        
        private string _status;
        
        /// <summary>
        /// Optional. Gateway status is set by the service side and read-only
        /// on the client side. It can be NeedRegistration, Online or Offline.
        /// </summary>
        public string Status
        {
            get { return this._status; }
            set { this._status = value; }
        }
        
        private string _version;
        
        /// <summary>
        /// Optional. Gateway version is set by the service side and read-only
        /// on the client side.
        /// </summary>
        public string Version
        {
            get { return this._version; }
            set { this._version = value; }
        }
        
        private string _versionStatus;
        
        /// <summary>
        /// Optional. Gateway version status is set by the service side and
        /// read-only on the client side. It can be None, UpToDate, Expiring
        /// or Expired.
        /// </summary>
        public string VersionStatus
        {
            get { return this._versionStatus; }
            set { this._versionStatus = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the GatewayProperties class.
        /// </summary>
        public GatewayProperties()
        {
        }
    }
}
