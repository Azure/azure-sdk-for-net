// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.PrivateDns
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// RecordSetsOperations operations.
    /// </summary>
    public partial interface IRecordSetsOperations
    {
        /// <summary>
        /// Creates or updates a record set within a Private DNS zone.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='privateZoneName'>
        /// The name of the Private DNS zone (without a terminating dot).
        /// </param>
        /// <param name='recordType'>
        /// The type of DNS record in this record set. Record sets of type SOA
        /// can be updated but not created (they are created when the Private
        /// DNS zone is created). Possible values include: 'A', 'AAAA',
        /// 'CNAME', 'MX', 'PTR', 'SOA', 'SRV', 'TXT'
        /// </param>
        /// <param name='relativeRecordSetName'>
        /// The name of the record set, relative to the name of the zone.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the CreateOrUpdate operation.
        /// </param>
        /// <param name='ifMatch'>
        /// The ETag of the record set. Omit this value to always overwrite the
        /// current record set. Specify the last-seen ETag value to prevent
        /// accidentally overwriting any concurrent changes.
        /// </param>
        /// <param name='ifNoneMatch'>
        /// Set to '*' to allow a new record set to be created, but to prevent
        /// updating an existing record set. Other values will be ignored.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<RecordSet>> CreateOrUpdateWithHttpMessagesAsync(string resourceGroupName, string privateZoneName, RecordType recordType, string relativeRecordSetName, RecordSet parameters, string ifMatch = default(string), string ifNoneMatch = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates a record set within a Private DNS zone.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='privateZoneName'>
        /// The name of the Private DNS zone (without a terminating dot).
        /// </param>
        /// <param name='recordType'>
        /// The type of DNS record in this record set. Possible values include:
        /// 'A', 'AAAA', 'CNAME', 'MX', 'PTR', 'SOA', 'SRV', 'TXT'
        /// </param>
        /// <param name='relativeRecordSetName'>
        /// The name of the record set, relative to the name of the zone.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Update operation.
        /// </param>
        /// <param name='ifMatch'>
        /// The ETag of the record set. Omit this value to always overwrite the
        /// current record set. Specify the last-seen ETag value to prevent
        /// accidentally overwriting concurrent changes.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<RecordSet>> UpdateWithHttpMessagesAsync(string resourceGroupName, string privateZoneName, RecordType recordType, string relativeRecordSetName, RecordSet parameters, string ifMatch = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Deletes a record set from a Private DNS zone. This operation cannot
        /// be undone.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='privateZoneName'>
        /// The name of the Private DNS zone (without a terminating dot).
        /// </param>
        /// <param name='recordType'>
        /// The type of DNS record in this record set. Record sets of type SOA
        /// cannot be deleted (they are deleted when the Private DNS zone is
        /// deleted). Possible values include: 'A', 'AAAA', 'CNAME', 'MX',
        /// 'PTR', 'SOA', 'SRV', 'TXT'
        /// </param>
        /// <param name='relativeRecordSetName'>
        /// The name of the record set, relative to the name of the zone.
        /// </param>
        /// <param name='ifMatch'>
        /// The ETag of the record set. Omit this value to always delete the
        /// current record set. Specify the last-seen ETag value to prevent
        /// accidentally deleting any concurrent changes.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse> DeleteWithHttpMessagesAsync(string resourceGroupName, string privateZoneName, RecordType recordType, string relativeRecordSetName, string ifMatch = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets a record set.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='privateZoneName'>
        /// The name of the Private DNS zone (without a terminating dot).
        /// </param>
        /// <param name='recordType'>
        /// The type of DNS record in this record set. Possible values include:
        /// 'A', 'AAAA', 'CNAME', 'MX', 'PTR', 'SOA', 'SRV', 'TXT'
        /// </param>
        /// <param name='relativeRecordSetName'>
        /// The name of the record set, relative to the name of the zone.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<RecordSet>> GetWithHttpMessagesAsync(string resourceGroupName, string privateZoneName, RecordType recordType, string relativeRecordSetName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Lists the record sets of a specified type in a Private DNS zone.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='privateZoneName'>
        /// The name of the Private DNS zone (without a terminating dot).
        /// </param>
        /// <param name='recordType'>
        /// The type of record sets to enumerate. Possible values include: 'A',
        /// 'AAAA', 'CNAME', 'MX', 'PTR', 'SOA', 'SRV', 'TXT'
        /// </param>
        /// <param name='top'>
        /// The maximum number of record sets to return. If not specified,
        /// returns up to 100 record sets.
        /// </param>
        /// <param name='recordsetnamesuffix'>
        /// The suffix label of the record set name to be used to filter the
        /// record set enumeration. If this parameter is specified, the
        /// returned enumeration will only contain records that end with
        /// ".&lt;recordsetnamesuffix&gt;".
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<RecordSet>>> ListByTypeWithHttpMessagesAsync(string resourceGroupName, string privateZoneName, RecordType recordType, int? top = default(int?), string recordsetnamesuffix = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Lists all record sets in a Private DNS zone.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='privateZoneName'>
        /// The name of the Private DNS zone (without a terminating dot).
        /// </param>
        /// <param name='top'>
        /// The maximum number of record sets to return. If not specified,
        /// returns up to 100 record sets.
        /// </param>
        /// <param name='recordsetnamesuffix'>
        /// The suffix label of the record set name to be used to filter the
        /// record set enumeration. If this parameter is specified, the
        /// returned enumeration will only contain records that end with
        /// ".&lt;recordsetnamesuffix&gt;".
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<RecordSet>>> ListWithHttpMessagesAsync(string resourceGroupName, string privateZoneName, int? top = default(int?), string recordsetnamesuffix = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Lists the record sets of a specified type in a Private DNS zone.
        /// </summary>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<RecordSet>>> ListByTypeNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Lists all record sets in a Private DNS zone.
        /// </summary>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<IPage<RecordSet>>> ListNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
