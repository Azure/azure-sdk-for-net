// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// The properties of a monitoring event.
    /// </summary>
    public partial class EventProperties
    {
        /// <summary>
        /// Initializes a new instance of the EventProperties class.
        /// </summary>
        public EventProperties() { }

        /// <summary>
        /// Initializes a new instance of the EventProperties class.
        /// </summary>
        public EventProperties(string eventCode = default(string), string description = default(string), string eventType = default(string), string affectedObjectFriendlyName = default(string), string severity = default(string), DateTime? timeOfOccurrence = default(DateTime?), string fabricId = default(string), EventProviderSpecificDetails providerSpecificDetails = default(EventProviderSpecificDetails), EventSpecificDetails eventSpecificDetails = default(EventSpecificDetails), IList<HealthError> healthErrors = default(IList<HealthError>))
        {
            EventCode = eventCode;
            Description = description;
            EventType = eventType;
            AffectedObjectFriendlyName = affectedObjectFriendlyName;
            Severity = severity;
            TimeOfOccurrence = timeOfOccurrence;
            FabricId = fabricId;
            ProviderSpecificDetails = providerSpecificDetails;
            EventSpecificDetails = eventSpecificDetails;
            HealthErrors = healthErrors;
        }

        /// <summary>
        /// The Id of the monitoring event.
        /// </summary>
        [JsonProperty(PropertyName = "eventCode")]
        public string EventCode { get; set; }

        /// <summary>
        /// The event name.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// The type of the event.
        /// for example: VM Health, Server Health, Job Failure etc.
        /// </summary>
        [JsonProperty(PropertyName = "eventType")]
        public string EventType { get; set; }

        /// <summary>
        /// The friendly name of the source of the event on which it
        /// is raised (for example, VM, VMM etc).
        /// </summary>
        [JsonProperty(PropertyName = "affectedObjectFriendlyName")]
        public string AffectedObjectFriendlyName { get; set; }

        /// <summary>
        /// The severity of the event.
        /// </summary>
        [JsonProperty(PropertyName = "severity")]
        public string Severity { get; set; }

        /// <summary>
        /// The time of occurence of the event.
        /// </summary>
        [JsonProperty(PropertyName = "timeOfOccurrence")]
        public DateTime? TimeOfOccurrence { get; set; }

        /// <summary>
        /// The ARM ID of the fabric.
        /// </summary>
        [JsonProperty(PropertyName = "fabricId")]
        public string FabricId { get; set; }

        /// <summary>
        /// The provider specific settings.
        /// </summary>
        [JsonProperty(PropertyName = "providerSpecificDetails")]
        public EventProviderSpecificDetails ProviderSpecificDetails { get; set; }

        /// <summary>
        /// The event specific settings.
        /// </summary>
        [JsonProperty(PropertyName = "eventSpecificDetails")]
        public EventSpecificDetails EventSpecificDetails { get; set; }

        /// <summary>
        /// The list of errors / warnings capturing details associated with
        /// the
        /// issue(s).
        /// </summary>
        [JsonProperty(PropertyName = "healthErrors")]
        public IList<HealthError> HealthErrors { get; set; }

    }
}
