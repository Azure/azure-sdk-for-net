// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// RCM based Azure migration specific policy details.
    /// </summary>
    [Newtonsoft.Json.JsonObject("RcmAzureMigration")]
    public partial class RcmAzureMigrationPolicyDetails : PolicyProviderSpecificDetails
    {
        /// <summary>
        /// Initializes a new instance of the RcmAzureMigrationPolicyDetails
        /// class.
        /// </summary>
        public RcmAzureMigrationPolicyDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RcmAzureMigrationPolicyDetails
        /// class.
        /// </summary>
        /// <param name="recoveryPointThresholdInMinutes">The recovery point
        /// threshold in minutes.</param>
        /// <param name="recoveryPointHistory">The duration in minutes until
        /// which the recovery points need to be stored.</param>
        /// <param name="appConsistentFrequencyInMinutes">The app consistent
        /// snapshot frequency in minutes.</param>
        /// <param name="multiVmSyncStatus">A value indicating whether multi-VM
        /// sync has to be enabled. Possible values include: 'Enabled',
        /// 'Disabled'</param>
        /// <param name="crashConsistentFrequencyInMinutes">The crash
        /// consistent snapshot frequency in minutes.</param>
        public RcmAzureMigrationPolicyDetails(int? recoveryPointThresholdInMinutes = default(int?), int? recoveryPointHistory = default(int?), int? appConsistentFrequencyInMinutes = default(int?), MultiVmSyncStatus? multiVmSyncStatus = default(MultiVmSyncStatus?), int? crashConsistentFrequencyInMinutes = default(int?))
        {
            RecoveryPointThresholdInMinutes = recoveryPointThresholdInMinutes;
            RecoveryPointHistory = recoveryPointHistory;
            AppConsistentFrequencyInMinutes = appConsistentFrequencyInMinutes;
            MultiVmSyncStatus = multiVmSyncStatus;
            CrashConsistentFrequencyInMinutes = crashConsistentFrequencyInMinutes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the recovery point threshold in minutes.
        /// </summary>
        [JsonProperty(PropertyName = "recoveryPointThresholdInMinutes")]
        public int? RecoveryPointThresholdInMinutes { get; set; }

        /// <summary>
        /// Gets or sets the duration in minutes until which the recovery
        /// points need to be stored.
        /// </summary>
        [JsonProperty(PropertyName = "recoveryPointHistory")]
        public int? RecoveryPointHistory { get; set; }

        /// <summary>
        /// Gets or sets the app consistent snapshot frequency in minutes.
        /// </summary>
        [JsonProperty(PropertyName = "appConsistentFrequencyInMinutes")]
        public int? AppConsistentFrequencyInMinutes { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether multi-VM sync has to be
        /// enabled. Possible values include: 'Enabled', 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "multiVmSyncStatus")]
        public MultiVmSyncStatus? MultiVmSyncStatus { get; set; }

        /// <summary>
        /// Gets or sets the crash consistent snapshot frequency in minutes.
        /// </summary>
        [JsonProperty(PropertyName = "crashConsistentFrequencyInMinutes")]
        public int? CrashConsistentFrequencyInMinutes { get; set; }

    }
}
