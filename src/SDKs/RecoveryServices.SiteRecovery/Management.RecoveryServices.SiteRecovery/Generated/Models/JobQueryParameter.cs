// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// Query parameter to enumerate jobs.
    /// </summary>
    public partial class JobQueryParameter
    {
        /// <summary>
        /// Initializes a new instance of the JobQueryParameter class.
        /// </summary>
        public JobQueryParameter() { }

        /// <summary>
        /// Initializes a new instance of the JobQueryParameter class.
        /// </summary>
        public JobQueryParameter(string startTime = default(string), string endTime = default(string), string fabricId = default(string), IList<string> affectedObjectTypes = default(IList<string>), IList<string> jobStatus = default(IList<string>))
        {
            StartTime = startTime;
            EndTime = endTime;
            FabricId = fabricId;
            AffectedObjectTypes = affectedObjectTypes;
            JobStatus = jobStatus;
        }

        /// <summary>
        /// Date time to get jobs from.
        /// </summary>
        [JsonProperty(PropertyName = "startTime")]
        public string StartTime { get; set; }

        /// <summary>
        /// Date time to get jobs upto.
        /// </summary>
        [JsonProperty(PropertyName = "endTime")]
        public string EndTime { get; set; }

        /// <summary>
        /// The Id of the fabric to search jobs under.
        /// </summary>
        [JsonProperty(PropertyName = "fabricId")]
        public string FabricId { get; set; }

        /// <summary>
        /// The type of objects.
        /// </summary>
        [JsonProperty(PropertyName = "affectedObjectTypes")]
        public IList<string> AffectedObjectTypes { get; set; }

        /// <summary>
        /// The states of the job to be filtered can be in.
        /// </summary>
        [JsonProperty(PropertyName = "jobStatus")]
        public IList<string> JobStatus { get; set; }

    }
}
