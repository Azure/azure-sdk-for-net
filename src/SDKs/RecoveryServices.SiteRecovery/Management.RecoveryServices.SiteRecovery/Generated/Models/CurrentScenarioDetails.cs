// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.RecoveryServices;
    using Microsoft.Azure.Management.RecoveryServices.SiteRecovery;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Current scenario details of the protected entity.
    /// </summary>
    public partial class CurrentScenarioDetails
    {
        /// <summary>
        /// Initializes a new instance of the CurrentScenarioDetails class.
        /// </summary>
        public CurrentScenarioDetails()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CurrentScenarioDetails class.
        /// </summary>
        /// <param name="scenarioName">Scenario name.</param>
        /// <param name="jobId">ARM Id of the job being executed.</param>
        /// <param name="startTime">Start time of the workflow.</param>
        public CurrentScenarioDetails(string scenarioName = default(string), string jobId = default(string), System.DateTime? startTime = default(System.DateTime?))
        {
            ScenarioName = scenarioName;
            JobId = jobId;
            StartTime = startTime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets scenario name.
        /// </summary>
        [JsonProperty(PropertyName = "scenarioName")]
        public string ScenarioName { get; set; }

        /// <summary>
        /// Gets or sets ARM Id of the job being executed.
        /// </summary>
        [JsonProperty(PropertyName = "jobId")]
        public string JobId { get; set; }

        /// <summary>
        /// Gets or sets start time of the workflow.
        /// </summary>
        [JsonProperty(PropertyName = "startTime")]
        public System.DateTime? StartTime { get; set; }

    }
}
