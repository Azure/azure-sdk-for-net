// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// Recovery plan HVR Azure failback input.
    /// </summary>
    [JsonObject("HyperVReplicaAzureFailback")]
    public partial class RecoveryPlanHyperVReplicaAzureFailbackInput : RecoveryPlanProviderSpecificFailoverInput
    {
        /// <summary>
        /// Initializes a new instance of the
        /// RecoveryPlanHyperVReplicaAzureFailbackInput class.
        /// </summary>
        public RecoveryPlanHyperVReplicaAzureFailbackInput() { }

        /// <summary>
        /// Initializes a new instance of the
        /// RecoveryPlanHyperVReplicaAzureFailbackInput class.
        /// </summary>
        public RecoveryPlanHyperVReplicaAzureFailbackInput(DataSyncStatus dataSyncOption, AlternateLocationRecoveryOption recoveryVmCreationOption)
        {
            DataSyncOption = dataSyncOption;
            RecoveryVmCreationOption = recoveryVmCreationOption;
        }

        /// <summary>
        /// The data sync option. Possible values include: 'ForDownTime',
        /// 'ForSynchronization'
        /// </summary>
        [JsonProperty(PropertyName = "dataSyncOption")]
        public DataSyncStatus DataSyncOption { get; set; }

        /// <summary>
        /// The ALR option. Possible values include: 'CreateVmIfNotFound',
        /// 'NoAction'
        /// </summary>
        [JsonProperty(PropertyName = "recoveryVmCreationOption")]
        public AlternateLocationRecoveryOption RecoveryVmCreationOption { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
        }
    }
}
