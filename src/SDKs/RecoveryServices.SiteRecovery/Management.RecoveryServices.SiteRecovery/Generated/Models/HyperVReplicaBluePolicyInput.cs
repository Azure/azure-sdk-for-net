// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.RecoveryServices;
    using Microsoft.Azure.Management.RecoveryServices.SiteRecovery;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// HyperV Replica Blue policy input.
    /// </summary>
    [Newtonsoft.Json.JsonObject("HyperVReplica2012R2")]
    public partial class HyperVReplicaBluePolicyInput : PolicyProviderSpecificInput
    {
        /// <summary>
        /// Initializes a new instance of the HyperVReplicaBluePolicyInput
        /// class.
        /// </summary>
        public HyperVReplicaBluePolicyInput()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the HyperVReplicaBluePolicyInput
        /// class.
        /// </summary>
        /// <param name="replicationFrequencyInSeconds">A value indicating the
        /// replication interval.</param>
        /// <param name="recoveryPoints">A value indicating the number of
        /// recovery points.</param>
        /// <param name="applicationConsistentSnapshotFrequencyInHours">A value
        /// indicating the application consistent frequency.</param>
        /// <param name="compression">A value indicating whether compression
        /// has to be enabled.</param>
        /// <param name="initialReplicationMethod">A value indicating whether
        /// IR is online.</param>
        /// <param name="onlineReplicationStartTime">A value indicating the
        /// online IR start time.</param>
        /// <param name="offlineReplicationImportPath">A value indicating the
        /// offline IR import path.</param>
        /// <param name="offlineReplicationExportPath">A value indicating the
        /// offline IR export path.</param>
        /// <param name="replicationPort">A value indicating the recovery HTTPS
        /// port.</param>
        /// <param name="allowedAuthenticationType">A value indicating the
        /// authentication type.</param>
        /// <param name="replicaDeletion">A value indicating whether the VM has
        /// to be auto deleted.</param>
        public HyperVReplicaBluePolicyInput(int? replicationFrequencyInSeconds = default(int?), int? recoveryPoints = default(int?), int? applicationConsistentSnapshotFrequencyInHours = default(int?), string compression = default(string), string initialReplicationMethod = default(string), string onlineReplicationStartTime = default(string), string offlineReplicationImportPath = default(string), string offlineReplicationExportPath = default(string), int? replicationPort = default(int?), int? allowedAuthenticationType = default(int?), string replicaDeletion = default(string))
        {
            ReplicationFrequencyInSeconds = replicationFrequencyInSeconds;
            RecoveryPoints = recoveryPoints;
            ApplicationConsistentSnapshotFrequencyInHours = applicationConsistentSnapshotFrequencyInHours;
            Compression = compression;
            InitialReplicationMethod = initialReplicationMethod;
            OnlineReplicationStartTime = onlineReplicationStartTime;
            OfflineReplicationImportPath = offlineReplicationImportPath;
            OfflineReplicationExportPath = offlineReplicationExportPath;
            ReplicationPort = replicationPort;
            AllowedAuthenticationType = allowedAuthenticationType;
            ReplicaDeletion = replicaDeletion;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets a value indicating the replication interval.
        /// </summary>
        [JsonProperty(PropertyName = "replicationFrequencyInSeconds")]
        public int? ReplicationFrequencyInSeconds { get; set; }

        /// <summary>
        /// Gets or sets a value indicating the number of recovery points.
        /// </summary>
        [JsonProperty(PropertyName = "recoveryPoints")]
        public int? RecoveryPoints { get; set; }

        /// <summary>
        /// Gets or sets a value indicating the application consistent
        /// frequency.
        /// </summary>
        [JsonProperty(PropertyName = "applicationConsistentSnapshotFrequencyInHours")]
        public int? ApplicationConsistentSnapshotFrequencyInHours { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether compression has to be
        /// enabled.
        /// </summary>
        [JsonProperty(PropertyName = "compression")]
        public string Compression { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether IR is online.
        /// </summary>
        [JsonProperty(PropertyName = "initialReplicationMethod")]
        public string InitialReplicationMethod { get; set; }

        /// <summary>
        /// Gets or sets a value indicating the online IR start time.
        /// </summary>
        [JsonProperty(PropertyName = "onlineReplicationStartTime")]
        public string OnlineReplicationStartTime { get; set; }

        /// <summary>
        /// Gets or sets a value indicating the offline IR import path.
        /// </summary>
        [JsonProperty(PropertyName = "offlineReplicationImportPath")]
        public string OfflineReplicationImportPath { get; set; }

        /// <summary>
        /// Gets or sets a value indicating the offline IR export path.
        /// </summary>
        [JsonProperty(PropertyName = "offlineReplicationExportPath")]
        public string OfflineReplicationExportPath { get; set; }

        /// <summary>
        /// Gets or sets a value indicating the recovery HTTPS port.
        /// </summary>
        [JsonProperty(PropertyName = "replicationPort")]
        public int? ReplicationPort { get; set; }

        /// <summary>
        /// Gets or sets a value indicating the authentication type.
        /// </summary>
        [JsonProperty(PropertyName = "allowedAuthenticationType")]
        public int? AllowedAuthenticationType { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether the VM has to be auto
        /// deleted.
        /// </summary>
        [JsonProperty(PropertyName = "replicaDeletion")]
        public string ReplicaDeletion { get; set; }

    }
}
