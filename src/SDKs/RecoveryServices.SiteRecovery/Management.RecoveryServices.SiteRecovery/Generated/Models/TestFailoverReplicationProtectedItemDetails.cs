// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.RecoveryServices;
    using Microsoft.Azure.Management.RecoveryServices.SiteRecovery;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Test failover details for a replication protected item.
    /// </summary>
    public partial class TestFailoverReplicationProtectedItemDetails
    {
        /// <summary>
        /// Initializes a new instance of the
        /// TestFailoverReplicationProtectedItemDetails class.
        /// </summary>
        public TestFailoverReplicationProtectedItemDetails()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// TestFailoverReplicationProtectedItemDetails class.
        /// </summary>
        /// <param name="name">The name.</param>
        /// <param name="friendlyName">The friendly name.</param>
        /// <param name="testVmName">The test Vm name.</param>
        /// <param name="testVmFriendlyName">The test Vm friendly name.</param>
        /// <param name="networkConnectionStatus">The network connection
        /// status.</param>
        /// <param name="networkFriendlyName">The network friendly
        /// name.</param>
        /// <param name="subnet">The network subnet.</param>
        public TestFailoverReplicationProtectedItemDetails(string name = default(string), string friendlyName = default(string), string testVmName = default(string), string testVmFriendlyName = default(string), string networkConnectionStatus = default(string), string networkFriendlyName = default(string), string subnet = default(string))
        {
            Name = name;
            FriendlyName = friendlyName;
            TestVmName = testVmName;
            TestVmFriendlyName = testVmFriendlyName;
            NetworkConnectionStatus = networkConnectionStatus;
            NetworkFriendlyName = networkFriendlyName;
            Subnet = subnet;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the friendly name.
        /// </summary>
        [JsonProperty(PropertyName = "friendlyName")]
        public string FriendlyName { get; set; }

        /// <summary>
        /// Gets or sets the test Vm name.
        /// </summary>
        [JsonProperty(PropertyName = "testVmName")]
        public string TestVmName { get; set; }

        /// <summary>
        /// Gets or sets the test Vm friendly name.
        /// </summary>
        [JsonProperty(PropertyName = "testVmFriendlyName")]
        public string TestVmFriendlyName { get; set; }

        /// <summary>
        /// Gets or sets the network connection status.
        /// </summary>
        [JsonProperty(PropertyName = "networkConnectionStatus")]
        public string NetworkConnectionStatus { get; set; }

        /// <summary>
        /// Gets or sets the network friendly name.
        /// </summary>
        [JsonProperty(PropertyName = "networkFriendlyName")]
        public string NetworkFriendlyName { get; set; }

        /// <summary>
        /// Gets or sets the network subnet.
        /// </summary>
        [JsonProperty(PropertyName = "subnet")]
        public string Subnet { get; set; }

    }
}
