// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for LicenseType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum LicenseType
    {
        [EnumMember(Value = "NotSpecified")]
        NotSpecified,
        [EnumMember(Value = "NoLicenseType")]
        NoLicenseType,
        [EnumMember(Value = "WindowsServer")]
        WindowsServer
    }
    internal static class LicenseTypeEnumExtension
    {
        internal static string ToSerializedValue(this LicenseType? value)
        {
            return value == null ? null : ((LicenseType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this LicenseType value)
        {
            switch( value )
            {
                case LicenseType.NotSpecified:
                    return "NotSpecified";
                case LicenseType.NoLicenseType:
                    return "NoLicenseType";
                case LicenseType.WindowsServer:
                    return "WindowsServer";
            }
            return null;
        }

        internal static LicenseType? ParseLicenseType(this string value)
        {
            switch( value )
            {
                case "NotSpecified":
                    return LicenseType.NotSpecified;
                case "NoLicenseType":
                    return LicenseType.NoLicenseType;
                case "WindowsServer":
                    return LicenseType.WindowsServer;
            }
            return null;
        }
    }
}
