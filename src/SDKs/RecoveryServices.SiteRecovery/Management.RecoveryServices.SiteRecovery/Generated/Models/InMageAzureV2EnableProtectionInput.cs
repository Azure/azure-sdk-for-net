// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.RecoveryServices;
    using Microsoft.Azure.Management.RecoveryServices.SiteRecovery;
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// VMware Azure specific enable protection input.
    /// </summary>
    [Newtonsoft.Json.JsonObject("InMageAzureV2")]
    public partial class InMageAzureV2EnableProtectionInput : EnableProtectionProviderSpecificInput
    {
        /// <summary>
        /// Initializes a new instance of the
        /// InMageAzureV2EnableProtectionInput class.
        /// </summary>
        public InMageAzureV2EnableProtectionInput()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// InMageAzureV2EnableProtectionInput class.
        /// </summary>
        /// <param name="storageAccountId">The storage account name.</param>
        /// <param name="masterTargetId">The Master target Id.</param>
        /// <param name="processServerId">The Process Server Id.</param>
        /// <param name="runAsAccountId">The CS account Id.</param>
        /// <param name="multiVmGroupId">The multi vm group Id.</param>
        /// <param name="multiVmGroupName">The multi vm group name.</param>
        /// <param name="disksToInclude">The disks to include list.</param>
        /// <param name="targetAzureNetworkId">The selected target Azure
        /// network Id.</param>
        /// <param name="targetAzureSubnetId">The selected target Azure subnet
        /// Id.</param>
        /// <param name="enableRDPOnTargetOption">The selected option to enable
        /// RDP\SSH on target vm after failover.
        /// String value of {SrsDataContract.EnableRDPOnTargetOption}
        /// enum.</param>
        /// <param name="targetAzureVmName">The target azure Vm Name.</param>
        /// <param name="logStorageAccountId">The storage account to be used
        /// for logging
        /// during replication.</param>
        /// <param name="targetAzureV1ResourceGroupId">The Id of the target
        /// resource group (for classic deployment) in which the
        /// failover VM is to be created.</param>
        /// <param name="targetAzureV2ResourceGroupId">The Id of the target
        /// resource group (for resource manager deployment) in
        /// which the failover VM is to be created.</param>
        /// <param name="useManagedDisks">A value indicating whether managed
        /// disks should be used during failover.</param>
        public InMageAzureV2EnableProtectionInput(string storageAccountId, string masterTargetId = default(string), string processServerId = default(string), string runAsAccountId = default(string), string multiVmGroupId = default(string), string multiVmGroupName = default(string), IList<string> disksToInclude = default(IList<string>), string targetAzureNetworkId = default(string), string targetAzureSubnetId = default(string), string enableRDPOnTargetOption = default(string), string targetAzureVmName = default(string), string logStorageAccountId = default(string), string targetAzureV1ResourceGroupId = default(string), string targetAzureV2ResourceGroupId = default(string), string useManagedDisks = default(string))
        {
            MasterTargetId = masterTargetId;
            ProcessServerId = processServerId;
            StorageAccountId = storageAccountId;
            RunAsAccountId = runAsAccountId;
            MultiVmGroupId = multiVmGroupId;
            MultiVmGroupName = multiVmGroupName;
            DisksToInclude = disksToInclude;
            TargetAzureNetworkId = targetAzureNetworkId;
            TargetAzureSubnetId = targetAzureSubnetId;
            EnableRDPOnTargetOption = enableRDPOnTargetOption;
            TargetAzureVmName = targetAzureVmName;
            LogStorageAccountId = logStorageAccountId;
            TargetAzureV1ResourceGroupId = targetAzureV1ResourceGroupId;
            TargetAzureV2ResourceGroupId = targetAzureV2ResourceGroupId;
            UseManagedDisks = useManagedDisks;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the Master target Id.
        /// </summary>
        [JsonProperty(PropertyName = "masterTargetId")]
        public string MasterTargetId { get; set; }

        /// <summary>
        /// Gets or sets the Process Server Id.
        /// </summary>
        [JsonProperty(PropertyName = "processServerId")]
        public string ProcessServerId { get; set; }

        /// <summary>
        /// Gets or sets the storage account name.
        /// </summary>
        [JsonProperty(PropertyName = "storageAccountId")]
        public string StorageAccountId { get; set; }

        /// <summary>
        /// Gets or sets the CS account Id.
        /// </summary>
        [JsonProperty(PropertyName = "runAsAccountId")]
        public string RunAsAccountId { get; set; }

        /// <summary>
        /// Gets or sets the multi vm group Id.
        /// </summary>
        [JsonProperty(PropertyName = "multiVmGroupId")]
        public string MultiVmGroupId { get; set; }

        /// <summary>
        /// Gets or sets the multi vm group name.
        /// </summary>
        [JsonProperty(PropertyName = "multiVmGroupName")]
        public string MultiVmGroupName { get; set; }

        /// <summary>
        /// Gets or sets the disks to include list.
        /// </summary>
        [JsonProperty(PropertyName = "disksToInclude")]
        public IList<string> DisksToInclude { get; set; }

        /// <summary>
        /// Gets or sets the selected target Azure network Id.
        /// </summary>
        [JsonProperty(PropertyName = "targetAzureNetworkId")]
        public string TargetAzureNetworkId { get; set; }

        /// <summary>
        /// Gets or sets the selected target Azure subnet Id.
        /// </summary>
        [JsonProperty(PropertyName = "targetAzureSubnetId")]
        public string TargetAzureSubnetId { get; set; }

        /// <summary>
        /// Gets or sets the selected option to enable RDP\SSH on target vm
        /// after failover.
        /// String value of {SrsDataContract.EnableRDPOnTargetOption} enum.
        /// </summary>
        [JsonProperty(PropertyName = "enableRDPOnTargetOption")]
        public string EnableRDPOnTargetOption { get; set; }

        /// <summary>
        /// Gets or sets the target azure Vm Name.
        /// </summary>
        [JsonProperty(PropertyName = "targetAzureVmName")]
        public string TargetAzureVmName { get; set; }

        /// <summary>
        /// Gets or sets the storage account to be used for logging
        /// during replication.
        /// </summary>
        [JsonProperty(PropertyName = "logStorageAccountId")]
        public string LogStorageAccountId { get; set; }

        /// <summary>
        /// Gets or sets the Id of the target resource group (for classic
        /// deployment) in which the
        /// failover VM is to be created.
        /// </summary>
        [JsonProperty(PropertyName = "targetAzureV1ResourceGroupId")]
        public string TargetAzureV1ResourceGroupId { get; set; }

        /// <summary>
        /// Gets or sets the Id of the target resource group (for resource
        /// manager deployment) in
        /// which the failover VM is to be created.
        /// </summary>
        [JsonProperty(PropertyName = "targetAzureV2ResourceGroupId")]
        public string TargetAzureV2ResourceGroupId { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether managed disks should be
        /// used during failover.
        /// </summary>
        [JsonProperty(PropertyName = "useManagedDisks")]
        public string UseManagedDisks { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (StorageAccountId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "StorageAccountId");
            }
        }
    }
}
