// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.RecoveryServices;
    using Microsoft.Azure.Management.RecoveryServices.SiteRecovery;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Protection profile custom data details.
    /// </summary>
    public partial class ProtectionContainerProperties
    {
        /// <summary>
        /// Initializes a new instance of the ProtectionContainerProperties
        /// class.
        /// </summary>
        public ProtectionContainerProperties()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ProtectionContainerProperties
        /// class.
        /// </summary>
        /// <param name="fabricFriendlyName">Fabric friendly name.</param>
        /// <param name="friendlyName">The name.</param>
        /// <param name="fabricType">The fabric type.</param>
        /// <param name="protectedItemCount">Number of protected PEs</param>
        /// <param name="pairingStatus">The pairing status of this
        /// cloud.</param>
        /// <param name="role">The role of this cloud.</param>
        /// <param name="fabricSpecificDetails">Fabric specific
        /// details.</param>
        public ProtectionContainerProperties(string fabricFriendlyName = default(string), string friendlyName = default(string), string fabricType = default(string), int? protectedItemCount = default(int?), string pairingStatus = default(string), string role = default(string), ProtectionContainerFabricSpecificDetails fabricSpecificDetails = default(ProtectionContainerFabricSpecificDetails))
        {
            FabricFriendlyName = fabricFriendlyName;
            FriendlyName = friendlyName;
            FabricType = fabricType;
            ProtectedItemCount = protectedItemCount;
            PairingStatus = pairingStatus;
            Role = role;
            FabricSpecificDetails = fabricSpecificDetails;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets fabric friendly name.
        /// </summary>
        [JsonProperty(PropertyName = "fabricFriendlyName")]
        public string FabricFriendlyName { get; set; }

        /// <summary>
        /// Gets or sets the name.
        /// </summary>
        [JsonProperty(PropertyName = "friendlyName")]
        public string FriendlyName { get; set; }

        /// <summary>
        /// Gets or sets the fabric type.
        /// </summary>
        [JsonProperty(PropertyName = "fabricType")]
        public string FabricType { get; set; }

        /// <summary>
        /// Gets or sets number of protected PEs
        /// </summary>
        [JsonProperty(PropertyName = "protectedItemCount")]
        public int? ProtectedItemCount { get; set; }

        /// <summary>
        /// Gets or sets the pairing status of this cloud.
        /// </summary>
        [JsonProperty(PropertyName = "pairingStatus")]
        public string PairingStatus { get; set; }

        /// <summary>
        /// Gets or sets the role of this cloud.
        /// </summary>
        [JsonProperty(PropertyName = "role")]
        public string Role { get; set; }

        /// <summary>
        /// Gets or sets fabric specific details.
        /// </summary>
        [JsonProperty(PropertyName = "fabricSpecificDetails")]
        public ProtectionContainerFabricSpecificDetails FabricSpecificDetails { get; set; }

    }
}
