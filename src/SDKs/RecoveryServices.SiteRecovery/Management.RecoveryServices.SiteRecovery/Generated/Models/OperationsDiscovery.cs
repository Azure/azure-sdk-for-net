// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// Operations discovery class.
    /// </summary>
    public partial class OperationsDiscovery
    {
        /// <summary>
        /// Initializes a new instance of the OperationsDiscovery class.
        /// </summary>
        public OperationsDiscovery() { }

        /// <summary>
        /// Initializes a new instance of the OperationsDiscovery class.
        /// </summary>
        public OperationsDiscovery(string name = default(string), Display display = default(Display), string origin = default(string), object properties = default(object))
        {
            Name = name;
            Display = display;
            Origin = origin;
            Properties = properties;
        }

        /// <summary>
        /// Name of the API.
        /// The name of the operation being performed on this
        /// particular object. It should match the action name that appears
        /// in RBAC / the event service.
        /// Examples of operations include:
        /// * Microsoft.Compute/virtualMachine/capture/action
        /// * Microsoft.Compute/virtualMachine/restart/action
        /// * Microsoft.Compute/virtualMachine/write
        /// * Microsoft.Compute/virtualMachine/read
        /// * Microsoft.Compute/virtualMachine/delete
        /// Each action should include, in order:
        /// (1) Resource Provider Namespace
        /// (2) Type hierarchy for which the action applies (e.g.
        /// server/databases for a SQL Azure database)
        /// (3) Read, Write, Action or Delete indicating which
        /// type applies. If it is a PUT/PATCH on a collection or named
        /// value, Write should be used.
        /// If it is a GET, Read should be used. If it is a
        /// DELETE, Delete should be used. If it is a POST, Action should be
        /// used.
        /// As a note: all resource providers would need to
        /// include the "{Resource Provider Namespace}/register/action"
        /// operation in their response.
        /// This API is used to register for their service, and
        /// should include details about the operation (e.g. a localized name
        /// for the resource provider + any special considerations like PII
        /// release)
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Object type
        /// </summary>
        [JsonProperty(PropertyName = "display")]
        public Display Display { get; set; }

        /// <summary>
        /// Origin.
        /// The intended executor of the operation; governs the
        /// display of the operation in the RBAC UX and the audit logs UX.
        /// Default value is "user,system"
        /// </summary>
        [JsonProperty(PropertyName = "origin")]
        public string Origin { get; set; }

        /// <summary>
        /// Properties. Reserved for future use.
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public object Properties { get; set; }

    }
}
