// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// Hyper V Replica Azure provider specific settings.
    /// </summary>
    [JsonObject("HyperVReplicaAzure")]
    public partial class HyperVReplicaAzureReplicationDetails : ReplicationProviderSpecificSettings
    {
        /// <summary>
        /// Initializes a new instance of the
        /// HyperVReplicaAzureReplicationDetails class.
        /// </summary>
        public HyperVReplicaAzureReplicationDetails() { }

        /// <summary>
        /// Initializes a new instance of the
        /// HyperVReplicaAzureReplicationDetails class.
        /// </summary>
        public HyperVReplicaAzureReplicationDetails(IList<AzureVmDiskDetails> azureVMDiskDetails = default(IList<AzureVmDiskDetails>), string recoveryAzureVMName = default(string), string recoveryAzureVMSize = default(string), string recoveryAzureStorageAccount = default(string), string recoveryAzureLogStorageAccountId = default(string), DateTime? lastReplicatedTime = default(DateTime?), string vmId = default(string), string vmProtectionState = default(string), string vmProtectionStateDescription = default(string), InitialReplicationDetails initialReplicationDetails = default(InitialReplicationDetails), IList<VMNicDetails> vmNics = default(IList<VMNicDetails>), string selectedRecoveryAzureNetworkId = default(string), string encryption = default(string), OSDetails oSDetails = default(OSDetails), int? sourceVmRAMSizeInMB = default(int?), int? sourceVmCPUCount = default(int?), string enableRDPOnTargetOption = default(string), string recoveryAzureResourceGroupId = default(string), string recoveryAvailabilitySetId = default(string), string useManagedDisks = default(string), string licenseType = default(string))
        {
            AzureVMDiskDetails = azureVMDiskDetails;
            RecoveryAzureVMName = recoveryAzureVMName;
            RecoveryAzureVMSize = recoveryAzureVMSize;
            RecoveryAzureStorageAccount = recoveryAzureStorageAccount;
            RecoveryAzureLogStorageAccountId = recoveryAzureLogStorageAccountId;
            LastReplicatedTime = lastReplicatedTime;
            VmId = vmId;
            VmProtectionState = vmProtectionState;
            VmProtectionStateDescription = vmProtectionStateDescription;
            InitialReplicationDetails = initialReplicationDetails;
            VmNics = vmNics;
            SelectedRecoveryAzureNetworkId = selectedRecoveryAzureNetworkId;
            Encryption = encryption;
            OSDetails = oSDetails;
            SourceVmRAMSizeInMB = sourceVmRAMSizeInMB;
            SourceVmCPUCount = sourceVmCPUCount;
            EnableRDPOnTargetOption = enableRDPOnTargetOption;
            RecoveryAzureResourceGroupId = recoveryAzureResourceGroupId;
            RecoveryAvailabilitySetId = recoveryAvailabilitySetId;
            UseManagedDisks = useManagedDisks;
            LicenseType = licenseType;
        }

        /// <summary>
        /// Azure VM Disk details.
        /// </summary>
        [JsonProperty(PropertyName = "azureVMDiskDetails")]
        public IList<AzureVmDiskDetails> AzureVMDiskDetails { get; set; }

        /// <summary>
        /// Recovery Azure given name.
        /// </summary>
        [JsonProperty(PropertyName = "recoveryAzureVMName")]
        public string RecoveryAzureVMName { get; set; }

        /// <summary>
        /// The Recovery Azure VM size.
        /// </summary>
        [JsonProperty(PropertyName = "recoveryAzureVMSize")]
        public string RecoveryAzureVMSize { get; set; }

        /// <summary>
        /// The recovery Azure storage account.
        /// </summary>
        [JsonProperty(PropertyName = "recoveryAzureStorageAccount")]
        public string RecoveryAzureStorageAccount { get; set; }

        /// <summary>
        /// The ARM id of the log storage acount used for replication.
        /// This will be set to null if no log storage account was
        /// provided during enable
        /// protection.
        /// </summary>
        [JsonProperty(PropertyName = "recoveryAzureLogStorageAccountId")]
        public string RecoveryAzureLogStorageAccountId { get; set; }

        /// <summary>
        /// The Last replication time.
        /// </summary>
        [JsonProperty(PropertyName = "lastReplicatedTime")]
        public DateTime? LastReplicatedTime { get; set; }

        /// <summary>
        /// The virtual machine Id.
        /// </summary>
        [JsonProperty(PropertyName = "vmId")]
        public string VmId { get; set; }

        /// <summary>
        /// The protection state for the vm.
        /// </summary>
        [JsonProperty(PropertyName = "vmProtectionState")]
        public string VmProtectionState { get; set; }

        /// <summary>
        /// The protection state description for the vm.
        /// </summary>
        [JsonProperty(PropertyName = "vmProtectionStateDescription")]
        public string VmProtectionStateDescription { get; set; }

        /// <summary>
        /// Initial replication details.
        /// </summary>
        [JsonProperty(PropertyName = "initialReplicationDetails")]
        public InitialReplicationDetails InitialReplicationDetails { get; set; }

        /// <summary>
        /// The PE Network details.
        /// </summary>
        [JsonProperty(PropertyName = "vmNics")]
        public IList<VMNicDetails> VmNics { get; set; }

        /// <summary>
        /// The selected recovery azure network Id.
        /// </summary>
        [JsonProperty(PropertyName = "selectedRecoveryAzureNetworkId")]
        public string SelectedRecoveryAzureNetworkId { get; set; }

        /// <summary>
        /// The encryption info.
        /// </summary>
        [JsonProperty(PropertyName = "encryption")]
        public string Encryption { get; set; }

        /// <summary>
        /// The operating system info.
        /// </summary>
        [JsonProperty(PropertyName = "oSDetails")]
        public OSDetails OSDetails { get; set; }

        /// <summary>
        /// The RAM size of the VM on the primary side.
        /// </summary>
        [JsonProperty(PropertyName = "sourceVmRAMSizeInMB")]
        public int? SourceVmRAMSizeInMB { get; set; }

        /// <summary>
        /// The CPU count of the VM on the primary side.
        /// </summary>
        [JsonProperty(PropertyName = "sourceVmCPUCount")]
        public int? SourceVmCPUCount { get; set; }

        /// <summary>
        /// The selected option to enable RDP\\\\SSH on target vm after
        /// failover.
        /// String value of
        /// {SrsDataContract.EnableRDPOnTargetOption} enum.
        /// </summary>
        [JsonProperty(PropertyName = "enableRDPOnTargetOption")]
        public string EnableRDPOnTargetOption { get; set; }

        /// <summary>
        /// The target resource group Id.
        /// </summary>
        [JsonProperty(PropertyName = "recoveryAzureResourceGroupId")]
        public string RecoveryAzureResourceGroupId { get; set; }

        /// <summary>
        /// The recovery availability set Id.
        /// </summary>
        [JsonProperty(PropertyName = "recoveryAvailabilitySetId")]
        public string RecoveryAvailabilitySetId { get; set; }

        /// <summary>
        /// A value indicating whether managed disks should be used during
        /// failover.
        /// </summary>
        [JsonProperty(PropertyName = "useManagedDisks")]
        public string UseManagedDisks { get; set; }

        /// <summary>
        /// License Type of the VM to be used.
        /// </summary>
        [JsonProperty(PropertyName = "licenseType")]
        public string LicenseType { get; set; }

    }
}
