// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.RecoveryServices;
    using Microsoft.Azure.Management.RecoveryServices.SiteRecovery;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// InMageAzureV2 provider specific settings
    /// </summary>
    [Newtonsoft.Json.JsonObject("InMageAzureV2")]
    public partial class InMageAzureV2ReplicationDetails : ReplicationProviderSpecificSettings
    {
        /// <summary>
        /// Initializes a new instance of the InMageAzureV2ReplicationDetails
        /// class.
        /// </summary>
        public InMageAzureV2ReplicationDetails()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the InMageAzureV2ReplicationDetails
        /// class.
        /// </summary>
        /// <param name="infrastructureVmId">The infrastructure VM Id.</param>
        /// <param name="vCenterInfrastructureId">The vCenter infrastructure
        /// Id.</param>
        /// <param name="protectionStage">The protection stage.</param>
        /// <param name="vmId">The virtual machine Id.</param>
        /// <param name="vmProtectionState">The protection state for the
        /// vm.</param>
        /// <param name="vmProtectionStateDescription">The protection state
        /// description for the vm.</param>
        /// <param name="resyncProgressPercentage">The resync progress
        /// percentage.</param>
        /// <param name="rpoInSeconds">The RPO in seconds.</param>
        /// <param name="compressedDataRateInMB">The compressed data change
        /// rate in MB.</param>
        /// <param name="uncompressedDataRateInMB">The uncompressed data change
        /// rate in MB.</param>
        /// <param name="ipAddress">The source IP address.</param>
        /// <param name="agentVersion">The agent version.</param>
        /// <param name="isAgentUpdateRequired">A value indicating whether
        /// installed agent needs to be updated.</param>
        /// <param name="isRebootAfterUpdateRequired">A value indicating
        /// whether the source server requires a restart after
        /// update.</param>
        /// <param name="lastHeartbeat">The last heartbeat received from the
        /// source server.</param>
        /// <param name="processServerId">The process server Id.</param>
        /// <param name="multiVmGroupId">The multi vm group Id.</param>
        /// <param name="multiVmGroupName">The multi vm group name.</param>
        /// <param name="multiVmSyncStatus">A value indicating whether multi vm
        /// sync is enabled or disabled.</param>
        /// <param name="protectedDisks">The list of protected disks.</param>
        /// <param name="diskResized">A value indicating whether any disk is
        /// resized for this VM.</param>
        /// <param name="masterTargetId">The master target Id.</param>
        /// <param name="sourceVmCPUCount">The CPU count of the VM on the
        /// primary side.</param>
        /// <param name="sourceVmRAMSizeInMB">The RAM size of the VM on the
        /// primary side.</param>
        /// <param name="osType">The type of the OS on the VM.</param>
        /// <param name="vhdName">The OS disk VHD name.</param>
        /// <param name="osDiskId">The id of the disk containing the
        /// OS.</param>
        /// <param name="azureVMDiskDetails">Azure VM Disk details.</param>
        /// <param name="recoveryAzureVMName">Recovery Azure given
        /// name.</param>
        /// <param name="recoveryAzureVMSize">The Recovery Azure VM
        /// size.</param>
        /// <param name="recoveryAzureStorageAccount">The recovery Azure
        /// storage account.</param>
        /// <param name="recoveryAzureLogStorageAccountId">The ARM id of the
        /// log storage acount used for replication.
        /// This will be set to null if no log storage account was provided
        /// during enable
        /// protection.</param>
        /// <param name="vmNics">The PE Network details.</param>
        /// <param name="selectedRecoveryAzureNetworkId">The selected recovery
        /// azure network Id.</param>
        /// <param name="discoveryType">A value inidicating the discovery type
        /// of the machine.
        /// Value can be vCenter or physical.</param>
        /// <param name="enableRDPOnTargetOption">The selected option to enable
        /// RDP\SSH on target vm after failover.
        /// String value of {SrsDataContract.EnableRDPOnTargetOption}
        /// enum.</param>
        /// <param name="datastores">The datastores of the on-premise machine.
        /// Value can be list of strings that contain datastore names.</param>
        /// <param name="targetVmId">The ARM Id of the target Azure VM.
        /// This value will be null until the VM is failed over.
        /// Only after failure it will be populated with the ARM Id of the
        /// Azure VM.</param>
        /// <param name="recoveryAzureResourceGroupId">The target resource
        /// group Id.</param>
        /// <param name="recoveryAvailabilitySetId">The recovery availability
        /// set Id.</param>
        /// <param name="useManagedDisks">A value indicating whether managed
        /// disks should be used during failover.</param>
        /// <param name="licenseType">License Type of the VM to be
        /// used.</param>
        /// <param name="validationErrors">The validation errors of the
        /// on-premise machine
        /// Value can be list of validation errors.</param>
        public InMageAzureV2ReplicationDetails(string infrastructureVmId = default(string), string vCenterInfrastructureId = default(string), string protectionStage = default(string), string vmId = default(string), string vmProtectionState = default(string), string vmProtectionStateDescription = default(string), int? resyncProgressPercentage = default(int?), long? rpoInSeconds = default(long?), double? compressedDataRateInMB = default(double?), double? uncompressedDataRateInMB = default(double?), string ipAddress = default(string), string agentVersion = default(string), string isAgentUpdateRequired = default(string), string isRebootAfterUpdateRequired = default(string), System.DateTime? lastHeartbeat = default(System.DateTime?), string processServerId = default(string), string multiVmGroupId = default(string), string multiVmGroupName = default(string), string multiVmSyncStatus = default(string), IList<InMageAzureV2ProtectedDiskDetails> protectedDisks = default(IList<InMageAzureV2ProtectedDiskDetails>), string diskResized = default(string), string masterTargetId = default(string), int? sourceVmCPUCount = default(int?), int? sourceVmRAMSizeInMB = default(int?), string osType = default(string), string vhdName = default(string), string osDiskId = default(string), IList<AzureVmDiskDetails> azureVMDiskDetails = default(IList<AzureVmDiskDetails>), string recoveryAzureVMName = default(string), string recoveryAzureVMSize = default(string), string recoveryAzureStorageAccount = default(string), string recoveryAzureLogStorageAccountId = default(string), IList<VMNicDetails> vmNics = default(IList<VMNicDetails>), string selectedRecoveryAzureNetworkId = default(string), string discoveryType = default(string), string enableRDPOnTargetOption = default(string), IList<string> datastores = default(IList<string>), string targetVmId = default(string), string recoveryAzureResourceGroupId = default(string), string recoveryAvailabilitySetId = default(string), string useManagedDisks = default(string), string licenseType = default(string), IList<HealthError> validationErrors = default(IList<HealthError>))
        {
            InfrastructureVmId = infrastructureVmId;
            VCenterInfrastructureId = vCenterInfrastructureId;
            ProtectionStage = protectionStage;
            VmId = vmId;
            VmProtectionState = vmProtectionState;
            VmProtectionStateDescription = vmProtectionStateDescription;
            ResyncProgressPercentage = resyncProgressPercentage;
            RpoInSeconds = rpoInSeconds;
            CompressedDataRateInMB = compressedDataRateInMB;
            UncompressedDataRateInMB = uncompressedDataRateInMB;
            IpAddress = ipAddress;
            AgentVersion = agentVersion;
            IsAgentUpdateRequired = isAgentUpdateRequired;
            IsRebootAfterUpdateRequired = isRebootAfterUpdateRequired;
            LastHeartbeat = lastHeartbeat;
            ProcessServerId = processServerId;
            MultiVmGroupId = multiVmGroupId;
            MultiVmGroupName = multiVmGroupName;
            MultiVmSyncStatus = multiVmSyncStatus;
            ProtectedDisks = protectedDisks;
            DiskResized = diskResized;
            MasterTargetId = masterTargetId;
            SourceVmCPUCount = sourceVmCPUCount;
            SourceVmRAMSizeInMB = sourceVmRAMSizeInMB;
            OsType = osType;
            VhdName = vhdName;
            OsDiskId = osDiskId;
            AzureVMDiskDetails = azureVMDiskDetails;
            RecoveryAzureVMName = recoveryAzureVMName;
            RecoveryAzureVMSize = recoveryAzureVMSize;
            RecoveryAzureStorageAccount = recoveryAzureStorageAccount;
            RecoveryAzureLogStorageAccountId = recoveryAzureLogStorageAccountId;
            VmNics = vmNics;
            SelectedRecoveryAzureNetworkId = selectedRecoveryAzureNetworkId;
            DiscoveryType = discoveryType;
            EnableRDPOnTargetOption = enableRDPOnTargetOption;
            Datastores = datastores;
            TargetVmId = targetVmId;
            RecoveryAzureResourceGroupId = recoveryAzureResourceGroupId;
            RecoveryAvailabilitySetId = recoveryAvailabilitySetId;
            UseManagedDisks = useManagedDisks;
            LicenseType = licenseType;
            ValidationErrors = validationErrors;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the infrastructure VM Id.
        /// </summary>
        [JsonProperty(PropertyName = "infrastructureVmId")]
        public string InfrastructureVmId { get; set; }

        /// <summary>
        /// Gets or sets the vCenter infrastructure Id.
        /// </summary>
        [JsonProperty(PropertyName = "vCenterInfrastructureId")]
        public string VCenterInfrastructureId { get; set; }

        /// <summary>
        /// Gets or sets the protection stage.
        /// </summary>
        [JsonProperty(PropertyName = "protectionStage")]
        public string ProtectionStage { get; set; }

        /// <summary>
        /// Gets or sets the virtual machine Id.
        /// </summary>
        [JsonProperty(PropertyName = "vmId")]
        public string VmId { get; set; }

        /// <summary>
        /// Gets or sets the protection state for the vm.
        /// </summary>
        [JsonProperty(PropertyName = "vmProtectionState")]
        public string VmProtectionState { get; set; }

        /// <summary>
        /// Gets or sets the protection state description for the vm.
        /// </summary>
        [JsonProperty(PropertyName = "vmProtectionStateDescription")]
        public string VmProtectionStateDescription { get; set; }

        /// <summary>
        /// Gets or sets the resync progress percentage.
        /// </summary>
        [JsonProperty(PropertyName = "resyncProgressPercentage")]
        public int? ResyncProgressPercentage { get; set; }

        /// <summary>
        /// Gets or sets the RPO in seconds.
        /// </summary>
        [JsonProperty(PropertyName = "rpoInSeconds")]
        public long? RpoInSeconds { get; set; }

        /// <summary>
        /// Gets or sets the compressed data change rate in MB.
        /// </summary>
        [JsonProperty(PropertyName = "compressedDataRateInMB")]
        public double? CompressedDataRateInMB { get; set; }

        /// <summary>
        /// Gets or sets the uncompressed data change rate in MB.
        /// </summary>
        [JsonProperty(PropertyName = "uncompressedDataRateInMB")]
        public double? UncompressedDataRateInMB { get; set; }

        /// <summary>
        /// Gets or sets the source IP address.
        /// </summary>
        [JsonProperty(PropertyName = "ipAddress")]
        public string IpAddress { get; set; }

        /// <summary>
        /// Gets or sets the agent version.
        /// </summary>
        [JsonProperty(PropertyName = "agentVersion")]
        public string AgentVersion { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether installed agent needs to be
        /// updated.
        /// </summary>
        [JsonProperty(PropertyName = "isAgentUpdateRequired")]
        public string IsAgentUpdateRequired { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether the source server requires
        /// a restart after
        /// update.
        /// </summary>
        [JsonProperty(PropertyName = "isRebootAfterUpdateRequired")]
        public string IsRebootAfterUpdateRequired { get; set; }

        /// <summary>
        /// Gets or sets the last heartbeat received from the source server.
        /// </summary>
        [JsonProperty(PropertyName = "lastHeartbeat")]
        public System.DateTime? LastHeartbeat { get; set; }

        /// <summary>
        /// Gets or sets the process server Id.
        /// </summary>
        [JsonProperty(PropertyName = "processServerId")]
        public string ProcessServerId { get; set; }

        /// <summary>
        /// Gets or sets the multi vm group Id.
        /// </summary>
        [JsonProperty(PropertyName = "multiVmGroupId")]
        public string MultiVmGroupId { get; set; }

        /// <summary>
        /// Gets or sets the multi vm group name.
        /// </summary>
        [JsonProperty(PropertyName = "multiVmGroupName")]
        public string MultiVmGroupName { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether multi vm sync is enabled or
        /// disabled.
        /// </summary>
        [JsonProperty(PropertyName = "multiVmSyncStatus")]
        public string MultiVmSyncStatus { get; set; }

        /// <summary>
        /// Gets or sets the list of protected disks.
        /// </summary>
        [JsonProperty(PropertyName = "protectedDisks")]
        public IList<InMageAzureV2ProtectedDiskDetails> ProtectedDisks { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether any disk is resized for
        /// this VM.
        /// </summary>
        [JsonProperty(PropertyName = "diskResized")]
        public string DiskResized { get; set; }

        /// <summary>
        /// Gets or sets the master target Id.
        /// </summary>
        [JsonProperty(PropertyName = "masterTargetId")]
        public string MasterTargetId { get; set; }

        /// <summary>
        /// Gets or sets the CPU count of the VM on the primary side.
        /// </summary>
        [JsonProperty(PropertyName = "sourceVmCPUCount")]
        public int? SourceVmCPUCount { get; set; }

        /// <summary>
        /// Gets or sets the RAM size of the VM on the primary side.
        /// </summary>
        [JsonProperty(PropertyName = "sourceVmRAMSizeInMB")]
        public int? SourceVmRAMSizeInMB { get; set; }

        /// <summary>
        /// Gets or sets the type of the OS on the VM.
        /// </summary>
        [JsonProperty(PropertyName = "osType")]
        public string OsType { get; set; }

        /// <summary>
        /// Gets or sets the OS disk VHD name.
        /// </summary>
        [JsonProperty(PropertyName = "vhdName")]
        public string VhdName { get; set; }

        /// <summary>
        /// Gets or sets the id of the disk containing the OS.
        /// </summary>
        [JsonProperty(PropertyName = "osDiskId")]
        public string OsDiskId { get; set; }

        /// <summary>
        /// Gets or sets azure VM Disk details.
        /// </summary>
        [JsonProperty(PropertyName = "azureVMDiskDetails")]
        public IList<AzureVmDiskDetails> AzureVMDiskDetails { get; set; }

        /// <summary>
        /// Gets or sets recovery Azure given name.
        /// </summary>
        [JsonProperty(PropertyName = "recoveryAzureVMName")]
        public string RecoveryAzureVMName { get; set; }

        /// <summary>
        /// Gets or sets the Recovery Azure VM size.
        /// </summary>
        [JsonProperty(PropertyName = "recoveryAzureVMSize")]
        public string RecoveryAzureVMSize { get; set; }

        /// <summary>
        /// Gets or sets the recovery Azure storage account.
        /// </summary>
        [JsonProperty(PropertyName = "recoveryAzureStorageAccount")]
        public string RecoveryAzureStorageAccount { get; set; }

        /// <summary>
        /// Gets or sets the ARM id of the log storage acount used for
        /// replication.
        /// This will be set to null if no log storage account was provided
        /// during enable
        /// protection.
        /// </summary>
        [JsonProperty(PropertyName = "recoveryAzureLogStorageAccountId")]
        public string RecoveryAzureLogStorageAccountId { get; set; }

        /// <summary>
        /// Gets or sets the PE Network details.
        /// </summary>
        [JsonProperty(PropertyName = "vmNics")]
        public IList<VMNicDetails> VmNics { get; set; }

        /// <summary>
        /// Gets or sets the selected recovery azure network Id.
        /// </summary>
        [JsonProperty(PropertyName = "selectedRecoveryAzureNetworkId")]
        public string SelectedRecoveryAzureNetworkId { get; set; }

        /// <summary>
        /// Gets or sets a value inidicating the discovery type of the machine.
        /// Value can be vCenter or physical.
        /// </summary>
        [JsonProperty(PropertyName = "discoveryType")]
        public string DiscoveryType { get; set; }

        /// <summary>
        /// Gets or sets the selected option to enable RDP\SSH on target vm
        /// after failover.
        /// String value of {SrsDataContract.EnableRDPOnTargetOption} enum.
        /// </summary>
        [JsonProperty(PropertyName = "enableRDPOnTargetOption")]
        public string EnableRDPOnTargetOption { get; set; }

        /// <summary>
        /// Gets or sets the datastores of the on-premise machine.
        /// Value can be list of strings that contain datastore names.
        /// </summary>
        [JsonProperty(PropertyName = "datastores")]
        public IList<string> Datastores { get; set; }

        /// <summary>
        /// Gets or sets the ARM Id of the target Azure VM.
        /// This value will be null until the VM is failed over.
        /// Only after failure it will be populated with the ARM Id of the
        /// Azure VM.
        /// </summary>
        [JsonProperty(PropertyName = "targetVmId")]
        public string TargetVmId { get; set; }

        /// <summary>
        /// Gets or sets the target resource group Id.
        /// </summary>
        [JsonProperty(PropertyName = "recoveryAzureResourceGroupId")]
        public string RecoveryAzureResourceGroupId { get; set; }

        /// <summary>
        /// Gets or sets the recovery availability set Id.
        /// </summary>
        [JsonProperty(PropertyName = "recoveryAvailabilitySetId")]
        public string RecoveryAvailabilitySetId { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether managed disks should be
        /// used during failover.
        /// </summary>
        [JsonProperty(PropertyName = "useManagedDisks")]
        public string UseManagedDisks { get; set; }

        /// <summary>
        /// Gets or sets license Type of the VM to be used.
        /// </summary>
        [JsonProperty(PropertyName = "licenseType")]
        public string LicenseType { get; set; }

        /// <summary>
        /// Gets or sets the validation errors of the on-premise machine
        /// Value can be list of validation errors.
        /// </summary>
        [JsonProperty(PropertyName = "validationErrors")]
        public IList<HealthError> ValidationErrors { get; set; }

    }
}
