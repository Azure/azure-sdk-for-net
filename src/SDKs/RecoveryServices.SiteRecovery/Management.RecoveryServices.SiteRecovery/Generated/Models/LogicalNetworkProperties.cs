// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.SiteRecovery.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.RecoveryServices;
    using Microsoft.Azure.Management.RecoveryServices.SiteRecovery;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Logical Network Properties.
    /// </summary>
    public partial class LogicalNetworkProperties
    {
        /// <summary>
        /// Initializes a new instance of the LogicalNetworkProperties class.
        /// </summary>
        public LogicalNetworkProperties()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LogicalNetworkProperties class.
        /// </summary>
        /// <param name="friendlyName">The Friendly Name.</param>
        /// <param name="networkVirtualizationStatus">A value indicating
        /// whether Network Virtualization is enabled for the logical
        /// network.</param>
        /// <param name="logicalNetworkUsage">A value indicating whether
        /// logical network is used as private test network by test
        /// failover.</param>
        /// <param name="logicalNetworkDefinitionsStatus">A value indicating
        /// whether logical network definitions are isolated.</param>
        public LogicalNetworkProperties(string friendlyName = default(string), string networkVirtualizationStatus = default(string), string logicalNetworkUsage = default(string), string logicalNetworkDefinitionsStatus = default(string))
        {
            FriendlyName = friendlyName;
            NetworkVirtualizationStatus = networkVirtualizationStatus;
            LogicalNetworkUsage = logicalNetworkUsage;
            LogicalNetworkDefinitionsStatus = logicalNetworkDefinitionsStatus;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the Friendly Name.
        /// </summary>
        [JsonProperty(PropertyName = "friendlyName")]
        public string FriendlyName { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether Network Virtualization is
        /// enabled for the logical network.
        /// </summary>
        [JsonProperty(PropertyName = "networkVirtualizationStatus")]
        public string NetworkVirtualizationStatus { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether logical network is used as
        /// private test network by test failover.
        /// </summary>
        [JsonProperty(PropertyName = "logicalNetworkUsage")]
        public string LogicalNetworkUsage { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether logical network definitions
        /// are isolated.
        /// </summary>
        [JsonProperty(PropertyName = "logicalNetworkDefinitionsStatus")]
        public string LogicalNetworkDefinitionsStatus { get; set; }

    }
}
