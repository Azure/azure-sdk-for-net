// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.HybridData.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The pair of customer secret.
    /// </summary>
    public partial class CustomerSecret
    {
        /// <summary>
        /// Initializes a new instance of the CustomerSecret class.
        /// </summary>
        public CustomerSecret()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CustomerSecret class.
        /// </summary>
        /// <param name="keyIdentifier">The identifier to the data service
        /// input object which this secret corresponds to.</param>
        /// <param name="keyValue">It contains the encrypted customer
        /// secret.</param>
        /// <param name="algorithm">The encryption algorithm used to encrypt
        /// data. Possible values include: 'None', 'RSA1_5', 'RSA_OAEP',
        /// 'PlainText'</param>
        public CustomerSecret(string keyIdentifier, string keyValue, SupportedAlgorithm algorithm)
        {
            KeyIdentifier = keyIdentifier;
            KeyValue = keyValue;
            Algorithm = algorithm;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the identifier to the data service input object which
        /// this secret corresponds to.
        /// </summary>
        [JsonProperty(PropertyName = "keyIdentifier")]
        public string KeyIdentifier { get; set; }

        /// <summary>
        /// Gets or sets it contains the encrypted customer secret.
        /// </summary>
        [JsonProperty(PropertyName = "keyValue")]
        public string KeyValue { get; set; }

        /// <summary>
        /// Gets or sets the encryption algorithm used to encrypt data.
        /// Possible values include: 'None', 'RSA1_5', 'RSA_OAEP', 'PlainText'
        /// </summary>
        [JsonProperty(PropertyName = "algorithm")]
        public SupportedAlgorithm Algorithm { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (KeyIdentifier == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "KeyIdentifier");
            }
            if (KeyValue == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "KeyValue");
            }
        }
    }
}
