// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.HybridData.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Run parameters for a job.
    /// </summary>
    public partial class RunParameters
    {
        /// <summary>
        /// Initializes a new instance of the RunParameters class.
        /// </summary>
        public RunParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RunParameters class.
        /// </summary>
        /// <param name="userConfirmation">Enum to detect if user confirmation
        /// is required. If not passed will default to NotRequired. Possible
        /// values include: 'NotRequired', 'Required'</param>
        /// <param name="dataServiceInput">A generic json used differently by
        /// each data service type.</param>
        /// <param name="customerSecrets">List of customer secrets containing a
        /// key identifier and key value. The key identifier is a way for the
        /// specific data source to understand the key. Value contains customer
        /// secret encrypted by the encryptionKeys.</param>
        public RunParameters(UserConfirmation? userConfirmation = default(UserConfirmation?), object dataServiceInput = default(object), IList<CustomerSecret> customerSecrets = default(IList<CustomerSecret>))
        {
            UserConfirmation = userConfirmation;
            DataServiceInput = dataServiceInput;
            CustomerSecrets = customerSecrets;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets enum to detect if user confirmation is required. If
        /// not passed will default to NotRequired. Possible values include:
        /// 'NotRequired', 'Required'
        /// </summary>
        [JsonProperty(PropertyName = "userConfirmation")]
        public UserConfirmation? UserConfirmation { get; set; }

        /// <summary>
        /// Gets or sets a generic json used differently by each data service
        /// type.
        /// </summary>
        [JsonProperty(PropertyName = "dataServiceInput")]
        public object DataServiceInput { get; set; }

        /// <summary>
        /// Gets or sets list of customer secrets containing a key identifier
        /// and key value. The key identifier is a way for the specific data
        /// source to understand the key. Value contains customer secret
        /// encrypted by the encryptionKeys.
        /// </summary>
        [JsonProperty(PropertyName = "customerSecrets")]
        public IList<CustomerSecret> CustomerSecrets { get; set; }

    }
}
