// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.HybridData.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for SupportedAlgorithm.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum SupportedAlgorithm
    {
        [EnumMember(Value = "None")]
        None,
        [EnumMember(Value = "RSA1_5")]
        RSA15,
        [EnumMember(Value = "RSA_OAEP")]
        RSAOAEP,
        [EnumMember(Value = "PlainText")]
        PlainText
    }
    internal static class SupportedAlgorithmEnumExtension
    {
        internal static string ToSerializedValue(this SupportedAlgorithm? value)
        {
            return value == null ? null : ((SupportedAlgorithm)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this SupportedAlgorithm value)
        {
            switch( value )
            {
                case SupportedAlgorithm.None:
                    return "None";
                case SupportedAlgorithm.RSA15:
                    return "RSA1_5";
                case SupportedAlgorithm.RSAOAEP:
                    return "RSA_OAEP";
                case SupportedAlgorithm.PlainText:
                    return "PlainText";
            }
            return null;
        }

        internal static SupportedAlgorithm? ParseSupportedAlgorithm(this string value)
        {
            switch( value )
            {
                case "None":
                    return SupportedAlgorithm.None;
                case "RSA1_5":
                    return SupportedAlgorithm.RSA15;
                case "RSA_OAEP":
                    return SupportedAlgorithm.RSAOAEP;
                case "PlainText":
                    return SupportedAlgorithm.PlainText;
            }
            return null;
        }
    }
}
