// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.HybridData
{
    using Models;
    using Newtonsoft.Json;

    /// <summary>
    /// </summary>
    public partial interface IHybridDataManagementClient : System.IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        System.Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }

        /// <summary>
        /// The API Version
        /// </summary>
        string ApiVersion { get; set; }

        /// <summary>
        /// The Subscription Id
        /// </summary>
        string SubscriptionId { get; set; }


        /// <summary>
        /// Gets the IOperations.
        /// </summary>
        IOperations Operations { get; }

        /// <summary>
        /// Gets the IDataManagers.
        /// </summary>
        IDataManagers DataManagers { get; }

        /// <summary>
        /// Gets the IDataServices.
        /// </summary>
        IDataServices DataServices { get; }

        /// <summary>
        /// Gets the IJobDefinitions.
        /// </summary>
        IJobDefinitions JobDefinitions { get; }

        /// <summary>
        /// Gets the IJobs.
        /// </summary>
        IJobs Jobs { get; }

        /// <summary>
        /// Gets the IDataStores.
        /// </summary>
        IDataStores DataStores { get; }

        /// <summary>
        /// Gets the IDataStoreTypes.
        /// </summary>
        IDataStoreTypes DataStoreTypes { get; }

        /// <summary>
        /// Gets the IPublicKeys.
        /// </summary>
        IPublicKeys PublicKeys { get; }

    }
}
