// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Cdn.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Defines the parameters for the URL path condition.
    /// </summary>
    public partial class UrlPathConditionParameters
    {
        /// <summary>
        /// Initializes a new instance of the UrlPathConditionParameters class.
        /// </summary>
        public UrlPathConditionParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UrlPathConditionParameters class.
        /// </summary>
        /// <param name="path">A URL path for the condition of the delivery
        /// rule</param>
        /// <param name="matchType">The match type for the condition of the
        /// delivery rule. Possible values include: 'Literal',
        /// 'Wildcard'</param>
        public UrlPathConditionParameters(string path, string matchType)
        {
            Path = path;
            MatchType = matchType;
            CustomInit();
        }
        /// <summary>
        /// Static constructor for UrlPathConditionParameters class.
        /// </summary>
        static UrlPathConditionParameters()
        {
            Odatatype = "Microsoft.Azure.Cdn.Models.DeliveryRuleUrlPathConditionParameters";
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets a URL path for the condition of the delivery rule
        /// </summary>
        [JsonProperty(PropertyName = "path")]
        public string Path { get; set; }

        /// <summary>
        /// Gets or sets the match type for the condition of the delivery rule.
        /// Possible values include: 'Literal', 'Wildcard'
        /// </summary>
        [JsonProperty(PropertyName = "matchType")]
        public string MatchType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "@odata.type")]
        public static string Odatatype { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Path == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Path");
            }
            if (MatchType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "MatchType");
            }
        }
    }
}
