// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.BatchAI.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// CNTK (aka Microsoft Cognitive Toolkit) job settings.
    /// </summary>
    public partial class CNTKsettings
    {
        /// <summary>
        /// Initializes a new instance of the CNTKsettings class.
        /// </summary>
        public CNTKsettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CNTKsettings class.
        /// </summary>
        /// <param name="languageType">Language type.</param>
        /// <param name="configFilePath">Config file path.</param>
        /// <param name="pythonScriptFilePath">Python script file path.</param>
        /// <param name="pythonInterpreterPath">Python interpreter
        /// path.</param>
        /// <param name="commandLineArgs">Command line arguments.</param>
        /// <param name="processCount">Process count.</param>
        public CNTKsettings(string languageType = default(string), string configFilePath = default(string), string pythonScriptFilePath = default(string), string pythonInterpreterPath = default(string), string commandLineArgs = default(string), int? processCount = default(int?))
        {
            LanguageType = languageType;
            ConfigFilePath = configFilePath;
            PythonScriptFilePath = pythonScriptFilePath;
            PythonInterpreterPath = pythonInterpreterPath;
            CommandLineArgs = commandLineArgs;
            ProcessCount = processCount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets language type.
        /// </summary>
        /// <remarks>
        /// The language to use for launching CNTK (aka Microsoft Cognitive
        /// Toolkit) job. Valid values are 'BrainScript' or 'Python'.
        /// </remarks>
        [JsonProperty(PropertyName = "languageType")]
        public string LanguageType { get; set; }

        /// <summary>
        /// Gets or sets config file path.
        /// </summary>
        /// <remarks>
        /// Specifies the path of the BrainScript config file. This property
        /// can be specified only if the languageType is 'BrainScript'.
        /// </remarks>
        [JsonProperty(PropertyName = "configFilePath")]
        public string ConfigFilePath { get; set; }

        /// <summary>
        /// Gets or sets python script file path.
        /// </summary>
        /// <remarks>
        /// Python script to execute. This property can be specified only if
        /// the languageType is 'Python'.
        /// </remarks>
        [JsonProperty(PropertyName = "pythonScriptFilePath")]
        public string PythonScriptFilePath { get; set; }

        /// <summary>
        /// Gets or sets python interpreter path.
        /// </summary>
        /// <remarks>
        /// The path to the Python interpreter. This property can be specified
        /// only if the languageType is 'Python'.
        /// </remarks>
        [JsonProperty(PropertyName = "pythonInterpreterPath")]
        public string PythonInterpreterPath { get; set; }

        /// <summary>
        /// Gets or sets command line arguments.
        /// </summary>
        /// <remarks>
        /// Command line arguments that need to be passed to the python script
        /// or cntk executable.
        /// </remarks>
        [JsonProperty(PropertyName = "commandLineArgs")]
        public string CommandLineArgs { get; set; }

        /// <summary>
        /// Gets or sets process count.
        /// </summary>
        /// <remarks>
        /// Number of processes to launch for the job execution. The default
        /// value for this property is equal to nodeCount property
        /// </remarks>
        [JsonProperty(PropertyName = "processCount")]
        public int? ProcessCount { get; set; }

    }
}
