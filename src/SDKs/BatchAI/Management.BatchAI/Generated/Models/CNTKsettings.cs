// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.BatchAI.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Specifies the settings for CNTK (aka Microsoft Cognitive Toolkit) job.
    /// </summary>
    public partial class CNTKsettings
    {
        /// <summary>
        /// Initializes a new instance of the CNTKsettings class.
        /// </summary>
        public CNTKsettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CNTKsettings class.
        /// </summary>
        /// <param name="languageType">Specifies the language type to use for
        /// launching CNTK (aka Microsoft Cognitive Toolkit) job.</param>
        /// <param name="configFilePath">Specifies the path of the config
        /// file.</param>
        /// <param name="pythonScriptFilePath">The path and file name of the
        /// python script to execute the job.</param>
        /// <param name="pythonInterpreterPath">The path to python
        /// interpreter.</param>
        /// <param name="commandLineArgs">Command line arguments that needs to
        /// be passed to the python script or CNTK.exe.</param>
        /// <param name="processCount">Number of processes parameter that is
        /// passed to MPI runtime.</param>
        public CNTKsettings(string languageType = default(string), string configFilePath = default(string), string pythonScriptFilePath = default(string), string pythonInterpreterPath = default(string), string commandLineArgs = default(string), int? processCount = default(int?))
        {
            LanguageType = languageType;
            ConfigFilePath = configFilePath;
            PythonScriptFilePath = pythonScriptFilePath;
            PythonInterpreterPath = pythonInterpreterPath;
            CommandLineArgs = commandLineArgs;
            ProcessCount = processCount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets specifies the language type to use for launching CNTK
        /// (aka Microsoft Cognitive Toolkit) job.
        /// </summary>
        /// <remarks>
        /// Valid values are 'BrainScript' or 'Python'.
        /// </remarks>
        [JsonProperty(PropertyName = "languageType")]
        public string LanguageType { get; set; }

        /// <summary>
        /// Gets or sets specifies the path of the config file.
        /// </summary>
        /// <remarks>
        /// This property can be specified only if the languageType is
        /// 'BrainScript'.
        /// </remarks>
        [JsonProperty(PropertyName = "configFilePath")]
        public string ConfigFilePath { get; set; }

        /// <summary>
        /// Gets or sets the path and file name of the python script to execute
        /// the job.
        /// </summary>
        /// <remarks>
        /// This property can be specified only if the languageType is
        /// 'Python'.
        /// </remarks>
        [JsonProperty(PropertyName = "pythonScriptFilePath")]
        public string PythonScriptFilePath { get; set; }

        /// <summary>
        /// Gets or sets the path to python interpreter.
        /// </summary>
        /// <remarks>
        /// This property can be specified only if the languageType is
        /// 'Python'.
        /// </remarks>
        [JsonProperty(PropertyName = "pythonInterpreterPath")]
        public string PythonInterpreterPath { get; set; }

        /// <summary>
        /// Gets or sets command line arguments that needs to be passed to the
        /// python script or CNTK.exe.
        /// </summary>
        [JsonProperty(PropertyName = "commandLineArgs")]
        public string CommandLineArgs { get; set; }

        /// <summary>
        /// Gets or sets number of processes parameter that is passed to MPI
        /// runtime.
        /// </summary>
        /// <remarks>
        /// The default value for this property is equal to nodeCount property
        /// </remarks>
        [JsonProperty(PropertyName = "processCount")]
        public int? ProcessCount { get; set; }

    }
}
