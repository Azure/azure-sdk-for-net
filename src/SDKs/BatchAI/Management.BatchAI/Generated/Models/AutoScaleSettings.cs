// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.BatchAI.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Auto-scale settings for the cluster. The system automatically scales
    /// the cluster up and down (within minimumNodeCount and maximumNodeCount)
    /// based on the number of queued and running jobs assigned to the cluster.
    /// </summary>
    public partial class AutoScaleSettings
    {
        /// <summary>
        /// Initializes a new instance of the AutoScaleSettings class.
        /// </summary>
        public AutoScaleSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AutoScaleSettings class.
        /// </summary>
        /// <param name="minimumNodeCount">Minimum node count.</param>
        /// <param name="maximumNodeCount">Maximum node count.</param>
        /// <param name="initialNodeCount">Initial node count.</param>
        public AutoScaleSettings(int minimumNodeCount, int maximumNodeCount, int? initialNodeCount = default(int?))
        {
            MinimumNodeCount = minimumNodeCount;
            MaximumNodeCount = maximumNodeCount;
            InitialNodeCount = initialNodeCount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets minimum node count.
        /// </summary>
        /// <remarks>
        /// The minimum number of compute nodes the Batch AI service will try
        /// to allocate for the cluster. Note, the actual number of nodes can
        /// be less than the specified value if the subscription has not enough
        /// quota to fulfill the request.
        /// </remarks>
        [JsonProperty(PropertyName = "minimumNodeCount")]
        public int MinimumNodeCount { get; set; }

        /// <summary>
        /// Gets or sets maximum node count.
        /// </summary>
        /// <remarks>
        /// The maximum number of compute nodes the cluster can have.
        /// </remarks>
        [JsonProperty(PropertyName = "maximumNodeCount")]
        public int MaximumNodeCount { get; set; }

        /// <summary>
        /// Gets or sets initial node count.
        /// </summary>
        /// <remarks>
        /// The number of compute nodes to allocate on cluster creation. Note
        /// that this value is used only during cluster creation. Default: 0.
        /// </remarks>
        [JsonProperty(PropertyName = "initialNodeCount")]
        public int? InitialNodeCount { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
