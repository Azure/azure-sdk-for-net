// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.BatchAI.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The system automatically scales the cluster up and down (within
    /// minimumNodeCount and maximumNodeCount) based on the pending and running
    /// jobs on the cluster.
    /// </summary>
    public partial class AutoScaleSettings
    {
        /// <summary>
        /// Initializes a new instance of the AutoScaleSettings class.
        /// </summary>
        public AutoScaleSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AutoScaleSettings class.
        /// </summary>
        /// <param name="minimumNodeCount">Specifies the minimum number of
        /// compute nodes the cluster can have.</param>
        /// <param name="maximumNodeCount">Specifies the maximum number of
        /// compute nodes the cluster can have.</param>
        /// <param name="initialNodeCount">Specifies the number of compute
        /// nodes to allocate on cluster creation. Note that this value is used
        /// only during cluster creation.</param>
        public AutoScaleSettings(int minimumNodeCount, int maximumNodeCount, int? initialNodeCount = default(int?))
        {
            MinimumNodeCount = minimumNodeCount;
            MaximumNodeCount = maximumNodeCount;
            InitialNodeCount = initialNodeCount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets specifies the minimum number of compute nodes the
        /// cluster can have.
        /// </summary>
        [JsonProperty(PropertyName = "minimumNodeCount")]
        public int MinimumNodeCount { get; set; }

        /// <summary>
        /// Gets or sets specifies the maximum number of compute nodes the
        /// cluster can have.
        /// </summary>
        [JsonProperty(PropertyName = "maximumNodeCount")]
        public int MaximumNodeCount { get; set; }

        /// <summary>
        /// Gets or sets specifies the number of compute nodes to allocate on
        /// cluster creation. Note that this value is used only during cluster
        /// creation.
        /// </summary>
        [JsonProperty(PropertyName = "initialNodeCount")]
        public int? InitialNodeCount { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
