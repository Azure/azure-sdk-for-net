// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.BatchAI.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for RaidLevel.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum RaidLevel
    {
        [EnumMember(Value = "NoRaid")]
        NoRaid,
        [EnumMember(Value = "RAID0")]
        RAID0,
        [EnumMember(Value = "RAID1")]
        RAID1,
        [EnumMember(Value = "RAID2")]
        RAID2,
        [EnumMember(Value = "RAID3")]
        RAID3,
        [EnumMember(Value = "RAID4")]
        RAID4,
        [EnumMember(Value = "RAID5")]
        RAID5,
        [EnumMember(Value = "RAID6")]
        RAID6
    }
    internal static class RaidLevelEnumExtension
    {
        internal static string ToSerializedValue(this RaidLevel? value)
        {
            return value == null ? null : ((RaidLevel)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this RaidLevel value)
        {
            switch( value )
            {
                case RaidLevel.NoRaid:
                    return "NoRaid";
                case RaidLevel.RAID0:
                    return "RAID0";
                case RaidLevel.RAID1:
                    return "RAID1";
                case RaidLevel.RAID2:
                    return "RAID2";
                case RaidLevel.RAID3:
                    return "RAID3";
                case RaidLevel.RAID4:
                    return "RAID4";
                case RaidLevel.RAID5:
                    return "RAID5";
                case RaidLevel.RAID6:
                    return "RAID6";
            }
            return null;
        }

        internal static RaidLevel? ParseRaidLevel(this string value)
        {
            switch( value )
            {
                case "NoRaid":
                    return RaidLevel.NoRaid;
                case "RAID0":
                    return RaidLevel.RAID0;
                case "RAID1":
                    return RaidLevel.RAID1;
                case "RAID2":
                    return RaidLevel.RAID2;
                case "RAID3":
                    return RaidLevel.RAID3;
                case "RAID4":
                    return RaidLevel.RAID4;
                case "RAID5":
                    return RaidLevel.RAID5;
                case "RAID6":
                    return RaidLevel.RAID6;
            }
            return null;
        }
    }
}
