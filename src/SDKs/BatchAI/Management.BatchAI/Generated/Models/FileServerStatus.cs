// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.BatchAI.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Status of the file server.
    /// </summary>
    public partial class FileServerStatus
    {
        /// <summary>
        /// Initializes a new instance of the FileServerStatus class.
        /// </summary>
        public FileServerStatus()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FileServerStatus class.
        /// </summary>
        /// <param name="code">Status Type &amp; Status Code</param>
        /// <param name="transitionTime">State transition time for the status
        /// changed.</param>
        /// <param name="message">Detailed message about the status.</param>
        public FileServerStatus(string code = default(string), System.DateTime? transitionTime = default(System.DateTime?), string message = default(string))
        {
            Code = code;
            TransitionTime = transitionTime;
            Message = message;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets status Type &amp;amp; Status Code
        /// </summary>
        /// <remarks>
        /// Status Type & Status Code: PowerState/Creating - The fileServer is
        /// just getting created. PowerState/Running - The file server has been
        /// created and is available to be used. PowerState/Suspended - The
        /// file Server has been suspended. PowerState/Suspending. The user has
        /// requested that the file Server to be suspended, but the
        /// deallocation operation has not yet completed. PowerState/Deleting -
        /// The user has requested that the cluster be deleted, but the delete
        /// operation has not yet completed. PowerState/Failed/ErrorCode - The
        /// file server creation has failed with the specified errorCode.
        /// Details about the error code are specified in the message field.
        /// Possible values include: 'PowerState/Creating',
        /// 'PowerState/Running', 'PowerState/Suspended',
        /// 'PowerState/Suspending', 'PowerState/Deleting',
        /// 'PowerState/Failed/ErrorCode'
        /// </remarks>
        [JsonProperty(PropertyName = "code")]
        public string Code { get; private set; }

        /// <summary>
        /// Gets state transition time for the status changed.
        /// </summary>
        [JsonProperty(PropertyName = "transitionTime")]
        public System.DateTime? TransitionTime { get; private set; }

        /// <summary>
        /// Gets detailed message about the status.
        /// </summary>
        [JsonProperty(PropertyName = "message")]
        public string Message { get; private set; }

    }
}
