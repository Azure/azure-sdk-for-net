// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.BatchAI.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Node setup settings.
    /// </summary>
    public partial class NodeSetup
    {
        /// <summary>
        /// Initializes a new instance of the NodeSetup class.
        /// </summary>
        public NodeSetup()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NodeSetup class.
        /// </summary>
        /// <param name="setupTask">Setup task.</param>
        /// <param name="mountVolumes">Mount volumes.</param>
        /// <param name="performanceCountersSettings">Performance counters
        /// settings.</param>
        public NodeSetup(SetupTask setupTask = default(SetupTask), MountVolumes mountVolumes = default(MountVolumes), PerformanceCountersSettings performanceCountersSettings = default(PerformanceCountersSettings))
        {
            SetupTask = setupTask;
            MountVolumes = mountVolumes;
            PerformanceCountersSettings = performanceCountersSettings;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets setup task.
        /// </summary>
        /// <remarks>
        /// Setup task to run on cluster nodes when nodes got created or
        /// rebooted. The setup task code needs to be idempotent. Generally the
        /// setup task is used to download static data that is required for all
        /// jobs that run on the cluster VMs and/or to download/install
        /// software.
        /// </remarks>
        [JsonProperty(PropertyName = "setupTask")]
        public SetupTask SetupTask { get; set; }

        /// <summary>
        /// Gets or sets mount volumes.
        /// </summary>
        /// <remarks>
        /// Mount volumes to be available to setup task and all jobs executing
        /// on the cluster. The volumes will be mounted at location specified
        /// by $AZ_BATCHAI_MOUNT_ROOT environment variable.
        /// </remarks>
        [JsonProperty(PropertyName = "mountVolumes")]
        public MountVolumes MountVolumes { get; set; }

        /// <summary>
        /// Gets or sets performance counters settings.
        /// </summary>
        /// <remarks>
        /// Settings for performance counters collecting and uploading.
        /// </remarks>
        [JsonProperty(PropertyName = "performanceCountersSettings")]
        public PerformanceCountersSettings PerformanceCountersSettings { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (SetupTask != null)
            {
                SetupTask.Validate();
            }
            if (PerformanceCountersSettings != null)
            {
                PerformanceCountersSettings.Validate();
            }
        }
    }
}
