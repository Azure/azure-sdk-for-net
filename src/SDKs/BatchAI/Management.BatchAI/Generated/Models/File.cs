// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.BatchAI.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Properties of the file or directory.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class File
    {
        /// <summary>
        /// Initializes a new instance of the File class.
        /// </summary>
        public File()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the File class.
        /// </summary>
        /// <param name="name">Name of the file.</param>
        /// <param name="isDirectory">Indicates if the file is a
        /// directory.</param>
        /// <param name="downloadUrl">Will contain an URL to download the
        /// corresponding file. The downloadUrl is not returned for
        /// directories.</param>
        /// <param name="lastModified">The time at which the file was last
        /// modified.</param>
        /// <param name="contentLength">The file size.</param>
        public File(string name, bool isDirectory, string downloadUrl = default(string), System.DateTime? lastModified = default(System.DateTime?), long? contentLength = default(long?))
        {
            Name = name;
            IsDirectory = isDirectory;
            DownloadUrl = downloadUrl;
            LastModified = lastModified;
            ContentLength = contentLength;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the file.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets indicates if the file is a directory.
        /// </summary>
        [JsonProperty(PropertyName = "isDirectory")]
        public bool IsDirectory { get; set; }

        /// <summary>
        /// Gets or sets will contain an URL to download the corresponding
        /// file. The downloadUrl is not returned for directories.
        /// </summary>
        [JsonProperty(PropertyName = "downloadUrl")]
        public string DownloadUrl { get; set; }

        /// <summary>
        /// Gets or sets the time at which the file was last modified.
        /// </summary>
        /// <remarks>
        /// The time at which the file was last modified.
        /// </remarks>
        [JsonProperty(PropertyName = "properties.lastModified")]
        public System.DateTime? LastModified { get; set; }

        /// <summary>
        /// Gets or sets the file size.
        /// </summary>
        /// <remarks>
        /// The file size.
        /// </remarks>
        [JsonProperty(PropertyName = "properties.contentLength")]
        public long? ContentLength { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
        }
    }
}
