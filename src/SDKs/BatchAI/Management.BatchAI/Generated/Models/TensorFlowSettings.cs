// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.BatchAI.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Specifies the settings for TensorFlow job.
    /// </summary>
    public partial class TensorFlowSettings
    {
        /// <summary>
        /// Initializes a new instance of the TensorFlowSettings class.
        /// </summary>
        public TensorFlowSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TensorFlowSettings class.
        /// </summary>
        /// <param name="pythonScriptFilePath">The path and file name of the
        /// python script to execute the job.</param>
        /// <param name="masterCommandLineArgs">Specifies the command line
        /// arguments for the master task.</param>
        /// <param name="pythonInterpreterPath">The path to python
        /// interpreter.</param>
        /// <param name="workerCommandLineArgs">Specifies the command line
        /// arguments for the worker task.</param>
        /// <param name="parameterServerCommandLineArgs">Specifies the command
        /// line arguments for the parameter server task.</param>
        /// <param name="workerCount">The number of worker tasks.</param>
        /// <param name="parameterServerCount">The number of parmeter server
        /// tasks.</param>
        public TensorFlowSettings(string pythonScriptFilePath, string masterCommandLineArgs, string pythonInterpreterPath = default(string), string workerCommandLineArgs = default(string), string parameterServerCommandLineArgs = default(string), int? workerCount = default(int?), int? parameterServerCount = default(int?))
        {
            PythonScriptFilePath = pythonScriptFilePath;
            PythonInterpreterPath = pythonInterpreterPath;
            MasterCommandLineArgs = masterCommandLineArgs;
            WorkerCommandLineArgs = workerCommandLineArgs;
            ParameterServerCommandLineArgs = parameterServerCommandLineArgs;
            WorkerCount = workerCount;
            ParameterServerCount = parameterServerCount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the path and file name of the python script to execute
        /// the job.
        /// </summary>
        [JsonProperty(PropertyName = "pythonScriptFilePath")]
        public string PythonScriptFilePath { get; set; }

        /// <summary>
        /// Gets or sets the path to python interpreter.
        /// </summary>
        [JsonProperty(PropertyName = "pythonInterpreterPath")]
        public string PythonInterpreterPath { get; set; }

        /// <summary>
        /// Gets or sets specifies the command line arguments for the master
        /// task.
        /// </summary>
        [JsonProperty(PropertyName = "masterCommandLineArgs")]
        public string MasterCommandLineArgs { get; set; }

        /// <summary>
        /// Gets or sets specifies the command line arguments for the worker
        /// task.
        /// </summary>
        /// <remarks>
        /// This property is optional for single machine training.
        /// </remarks>
        [JsonProperty(PropertyName = "workerCommandLineArgs")]
        public string WorkerCommandLineArgs { get; set; }

        /// <summary>
        /// Gets or sets specifies the command line arguments for the parameter
        /// server task.
        /// </summary>
        /// <remarks>
        /// This property is optional for single machine training.
        /// </remarks>
        [JsonProperty(PropertyName = "parameterServerCommandLineArgs")]
        public string ParameterServerCommandLineArgs { get; set; }

        /// <summary>
        /// Gets or sets the number of worker tasks.
        /// </summary>
        /// <remarks>
        /// If specified, the value must be less than or equal to (nodeCount *
        /// numberOfGPUs per VM). If not specified, the default value is equal
        /// to nodeCount. This property can be specified only for distributed
        /// TensorFlow training
        /// </remarks>
        [JsonProperty(PropertyName = "workerCount")]
        public int? WorkerCount { get; set; }

        /// <summary>
        /// Gets or sets the number of parmeter server tasks.
        /// </summary>
        /// <remarks>
        /// If specified, the value must be less than or equal to nodeCount. If
        /// not specified, the default value is equal to 1 for distributed
        /// TensorFlow training (This property is not applicable for single
        /// machine training). This property can be specified only for
        /// distributed TensorFlow training.
        /// </remarks>
        [JsonProperty(PropertyName = "parameterServerCount")]
        public int? ParameterServerCount { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (PythonScriptFilePath == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PythonScriptFilePath");
            }
            if (MasterCommandLineArgs == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "MasterCommandLineArgs");
            }
        }
    }
}
