// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.BatchAI.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Specifies the settings for Caffe2 job.
    /// </summary>
    public partial class Caffe2Settings
    {
        /// <summary>
        /// Initializes a new instance of the Caffe2Settings class.
        /// </summary>
        public Caffe2Settings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Caffe2Settings class.
        /// </summary>
        /// <param name="pythonScriptFilePath">The path and file name of the
        /// python script to execute the job.</param>
        /// <param name="pythonInterpreterPath">The path to python
        /// interpreter.</param>
        /// <param name="commandLineArgs">Command line arguments that needs to
        /// be passed to the python script</param>
        public Caffe2Settings(string pythonScriptFilePath, string pythonInterpreterPath = default(string), string commandLineArgs = default(string))
        {
            PythonScriptFilePath = pythonScriptFilePath;
            PythonInterpreterPath = pythonInterpreterPath;
            CommandLineArgs = commandLineArgs;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the path and file name of the python script to execute
        /// the job.
        /// </summary>
        [JsonProperty(PropertyName = "pythonScriptFilePath")]
        public string PythonScriptFilePath { get; set; }

        /// <summary>
        /// Gets or sets the path to python interpreter.
        /// </summary>
        [JsonProperty(PropertyName = "pythonInterpreterPath")]
        public string PythonInterpreterPath { get; set; }

        /// <summary>
        /// Gets or sets command line arguments that needs to be passed to the
        /// python script
        /// </summary>
        [JsonProperty(PropertyName = "commandLineArgs")]
        public string CommandLineArgs { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (PythonScriptFilePath == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PythonScriptFilePath");
            }
        }
    }
}
