{
  "Name": "StartTask",
  "ProtocolName": "Models.StartTask",
  "SummaryComment": "A task which is run when a compute node joins a pool in the Azure Batch service, or when the compute node is rebooted or reimaged.",
  "RemarksComment": "Batch will retry tasks when a recovery operation is triggered on a compute node. Examples of recovery operations include (but are not limited to) when an unhealthy compute node is rebooted or a compute node disappeared due to host failure. Retries due to recovery operations are independent of and are not counted against the <see cref=\"TaskConstraints.MaxTaskRetryCount\" />. Even if the <see cref=\"TaskConstraints.MaxTaskRetryCount\" /> is 0, an internal retry due to a recovery operation may occur. Because of this, all tasks should be idempotent. This means tasks need to tolerate being interrupted and restarted without causing any corruption or duplicate data. The best practice for long running tasks is to use some form of checkpointing.",
  "Properties": [
    {
      "Key": {
        "Type": "string",
        "Name": "CommandLine",
        "SummaryComment": "The command line of the task.",
        "RemarksComment": "The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux. If the command line refers to file paths, it should use a relative path (relative to the task working directory), or use the Batch provided environment variables (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).",
        "BoundAccess": "read,write",
        "UnboundAccess": "read,write",
        "ConstructorArgumentType": "Required"
      },
      "Value": null
    },
    {
      "Key": {
        "Type": "IList<EnvironmentSetting>",
        "Name": "EnvironmentSettings",
        "SummaryComment": "A set of environment settings for the start task.",
        "RemarksComment": null,
        "BoundAccess": "read,write",
        "UnboundAccess": "read,write"
      },
      "Value": {
        "Type": "IList<Models.EnvironmentSetting>",
        "Name": "EnvironmentSettings"
      }
    },
    {
      "Key": {
        "Type": "int?",
        "Name": "MaxTaskRetryCount",
        "SummaryComment": "The maximum number of retries for the task.",
        "RemarksComment": null,
        "BoundAccess": "read,write",
        "UnboundAccess": "read,write"
      },
      "Value": null
    },
    {
      "Key": {
        "Type": "IList<ResourceFile>",
        "Name": "ResourceFiles",
        "SummaryComment": "A list of files that the Batch service will download to the compute node before running the command line.",
        "RemarksComment": "There is a maximum size for the list of resource files. When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of resource files must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers.",
        "BoundAccess": "read,write",
        "UnboundAccess": "read,write"
      },
      "Value": {
        "Type": "IList<Models.ResourceFile>",
        "Name": "ResourceFiles"
      }
    },
    {
      "Key": {
        "Type": "UserIdentity",
        "Name": "UserIdentity",
        "SummaryComment": "The user identity under which the task runs.",
        "RemarksComment": "If omitted, the task runs as a non-administrative user unique to the task.",
        "BoundAccess": "read,write",
        "UnboundAccess": "read,write"
      },
      "Value": null
    },
    {
      "Key": {
        "Type": "bool?",
        "Name": "WaitForSuccess",
        "SummaryComment": "A value indicating whether the Batch service should wait for the start task to complete before scheduling any tasks on the compute node.",
        "RemarksComment": "If this is not specified, the default is false.",
        "BoundAccess": "read,write",
        "UnboundAccess": "read,write"
      },
      "Value": null
    },
    {
      "Key": {
        "Type": "TaskContainerSettings",
        "Name": "ContainerSettings",
        "SummaryComment": "The settings for the container under which the task runs.",
        "RemarksComment": "When this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are mapped into the container, all task environment variables are mapped into the container, and the task command line is executed in the container.",
        "BoundAccess": "read",
        "UnboundAccess": "read,write"
      },
      "Value": null
    }
  ]
}
