// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Batch.Protocol.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Settings for the operating system disk of the virtual machine.
    /// </summary>
    public partial class OSDisk
    {
        /// <summary>
        /// Initializes a new instance of the OSDisk class.
        /// </summary>
        public OSDisk()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OSDisk class.
        /// </summary>
        /// <param name="caching">The type of caching to enable for the OS
        /// disk.</param>
        public OSDisk(CachingType? caching = default(CachingType?))
        {
            Caching = caching;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the type of caching to enable for the OS disk.
        /// </summary>
        /// <remarks>
        /// Values are:
        ///
        /// none - The caching mode for the disk is not enabled.
        /// readOnly - The caching mode for the disk is read only.
        /// readWrite - The caching mode for the disk is read and write.
        ///
        /// The default value for caching is none. For information about the
        /// caching options see:
        /// https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.
        /// Possible values include: 'none', 'readOnly', 'readWrite'
        /// </remarks>
        [JsonProperty(PropertyName = "caching")]
        public CachingType? Caching { get; set; }

    }
}
