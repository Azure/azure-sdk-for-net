// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Batch.Protocol.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for ComputeNodeReimageOption.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ComputeNodeReimageOption
    {
        [EnumMember(Value = "requeue")]
        Requeue,
        [EnumMember(Value = "terminate")]
        Terminate,
        [EnumMember(Value = "taskCompletion")]
        TaskCompletion,
        [EnumMember(Value = "retainedData")]
        RetainedData
    }
    internal static class ComputeNodeReimageOptionEnumExtension
    {
        internal static string ToSerializedValue(this ComputeNodeReimageOption? value)
        {
            return value == null ? null : ((ComputeNodeReimageOption)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this ComputeNodeReimageOption value)
        {
            switch( value )
            {
                case ComputeNodeReimageOption.Requeue:
                    return "requeue";
                case ComputeNodeReimageOption.Terminate:
                    return "terminate";
                case ComputeNodeReimageOption.TaskCompletion:
                    return "taskCompletion";
                case ComputeNodeReimageOption.RetainedData:
                    return "retainedData";
            }
            return null;
        }

        internal static ComputeNodeReimageOption? ParseComputeNodeReimageOption(this string value)
        {
            switch( value )
            {
                case "requeue":
                    return ComputeNodeReimageOption.Requeue;
                case "terminate":
                    return ComputeNodeReimageOption.Terminate;
                case "taskCompletion":
                    return ComputeNodeReimageOption.TaskCompletion;
                case "retainedData":
                    return ComputeNodeReimageOption.RetainedData;
            }
            return null;
        }
    }
}
