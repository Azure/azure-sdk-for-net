// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Batch.Protocol.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Additional parameters for ListUsageMetrics operation.
    /// </summary>
    public partial class PoolListUsageMetricsOptions
    {
        /// <summary>
        /// Initializes a new instance of the PoolListUsageMetricsOptions
        /// class.
        /// </summary>
        public PoolListUsageMetricsOptions()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PoolListUsageMetricsOptions
        /// class.
        /// </summary>
        /// <param name="startTime">The earliest time from which to include
        /// metrics. This must be at least two and a half hours before the
        /// current time. If not specified this defaults to the start time of
        /// the last aggregation interval currently available.</param>
        /// <param name="endTime">The latest time from which to include
        /// metrics. This must be at least two hours before the current time.
        /// If not specified this defaults to the end time of the last
        /// aggregation interval currently available.</param>
        /// <param name="filter">An OData $filter clause. For more information
        /// on constructing this filter, see
        /// https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-account-usage-metrics.</param>
        /// <param name="maxResults">The maximum number of items to return in
        /// the response. A maximum of 1000 results will be returned.</param>
        /// <param name="timeout">The maximum time that the server can spend
        /// processing the request, in seconds. The default is 30
        /// seconds.</param>
        /// <param name="clientRequestId">The caller-generated request
        /// identity, in the form of a GUID with no decoration such as curly
        /// braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.</param>
        /// <param name="returnClientRequestId">Whether the server should
        /// return the client-request-id in the response.</param>
        /// <param name="ocpDate">The time the request was issued. Client
        /// libraries typically set this to the current system clock time; set
        /// it explicitly if you are calling the REST API directly.</param>
        public PoolListUsageMetricsOptions(System.DateTime? startTime = default(System.DateTime?), System.DateTime? endTime = default(System.DateTime?), string filter = default(string), int? maxResults = default(int?), int? timeout = default(int?), System.Guid? clientRequestId = default(System.Guid?), bool? returnClientRequestId = default(bool?), System.DateTime? ocpDate = default(System.DateTime?))
        {
            StartTime = startTime;
            EndTime = endTime;
            Filter = filter;
            MaxResults = maxResults;
            Timeout = timeout;
            ClientRequestId = clientRequestId;
            ReturnClientRequestId = returnClientRequestId;
            OcpDate = ocpDate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the earliest time from which to include metrics. This
        /// must be at least two and a half hours before the current time. If
        /// not specified this defaults to the start time of the last
        /// aggregation interval currently available.
        /// </summary>
        [JsonProperty(PropertyName = "")]
        public System.DateTime? StartTime { get; set; }

        /// <summary>
        /// Gets or sets the latest time from which to include metrics. This
        /// must be at least two hours before the current time. If not
        /// specified this defaults to the end time of the last aggregation
        /// interval currently available.
        /// </summary>
        [JsonProperty(PropertyName = "")]
        public System.DateTime? EndTime { get; set; }

        /// <summary>
        /// Gets or sets an OData $filter clause. For more information on
        /// constructing this filter, see
        /// https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-account-usage-metrics.
        /// </summary>
        [JsonProperty(PropertyName = "")]
        public string Filter { get; set; }

        /// <summary>
        /// Gets or sets the maximum number of items to return in the response.
        /// A maximum of 1000 results will be returned.
        /// </summary>
        [JsonProperty(PropertyName = "")]
        public int? MaxResults { get; set; }

        /// <summary>
        /// Gets or sets the maximum time that the server can spend processing
        /// the request, in seconds. The default is 30 seconds.
        /// </summary>
        [JsonProperty(PropertyName = "")]
        public int? Timeout { get; set; }

        /// <summary>
        /// Gets or sets the caller-generated request identity, in the form of
        /// a GUID with no decoration such as curly braces, e.g.
        /// 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        /// </summary>
        [JsonProperty(PropertyName = "")]
        public System.Guid? ClientRequestId { get; set; }

        /// <summary>
        /// Gets or sets whether the server should return the client-request-id
        /// in the response.
        /// </summary>
        [JsonProperty(PropertyName = "")]
        public bool? ReturnClientRequestId { get; set; }

        /// <summary>
        /// Gets or sets the time the request was issued. Client libraries
        /// typically set this to the current system clock time; set it
        /// explicitly if you are calling the REST API directly.
        /// </summary>
        [JsonConverter(typeof(DateTimeRfc1123JsonConverter))]
        [JsonProperty(PropertyName = "")]
        public System.DateTime? OcpDate { get; set; }

    }
}
