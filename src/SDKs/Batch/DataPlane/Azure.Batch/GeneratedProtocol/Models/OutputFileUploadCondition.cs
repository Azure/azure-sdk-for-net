// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Batch.Protocol.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for OutputFileUploadCondition.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum OutputFileUploadCondition
    {
        [EnumMember(Value = "taskSuccess")]
        TaskSuccess,
        [EnumMember(Value = "taskFailure")]
        TaskFailure,
        [EnumMember(Value = "taskCompletion")]
        TaskCompletion
    }
    internal static class OutputFileUploadConditionEnumExtension
    {
        internal static string ToSerializedValue(this OutputFileUploadCondition? value)
        {
            return value == null ? null : ((OutputFileUploadCondition)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this OutputFileUploadCondition value)
        {
            switch( value )
            {
                case OutputFileUploadCondition.TaskSuccess:
                    return "taskSuccess";
                case OutputFileUploadCondition.TaskFailure:
                    return "taskFailure";
                case OutputFileUploadCondition.TaskCompletion:
                    return "taskCompletion";
            }
            return null;
        }

        internal static OutputFileUploadCondition? ParseOutputFileUploadCondition(this string value)
        {
            switch( value )
            {
                case "taskSuccess":
                    return OutputFileUploadCondition.TaskSuccess;
                case "taskFailure":
                    return OutputFileUploadCondition.TaskFailure;
                case "taskCompletion":
                    return OutputFileUploadCondition.TaskCompletion;
            }
            return null;
        }
    }
}
