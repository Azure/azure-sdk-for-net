// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

//
// This file was autogenerated by a tool.
// Do not modify it.
//

namespace Microsoft.Azure.Batch
{
    using Models = Microsoft.Azure.Batch.Protocol.Models;
    using System;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Specifies a file upload destination within an Azure blob storage container.
    /// </summary>
    public partial class OutputFileBlobContainerDestination : ITransportObjectProvider<Models.OutputFileBlobContainerDestination>, IPropertyMetadata
    {
        private readonly string containerUrl;
        private readonly string path;

        #region Constructors
        /// <summary>
        /// Initializes a new instance of the <see cref="OutputFileBlobContainerDestination"/> class.
        /// </summary>
        /// <param name='containerUrl'>The URL of the container within Azure Blob Storage to which to upload the file(s).</param>
        /// <param name='path'>The destination blob or virtual directory within the Azure Storage container to which to upload the file(s).</param>
        public OutputFileBlobContainerDestination(
            string containerUrl,
            string path = default(string))
        {
            this.containerUrl = containerUrl;
            this.path = path;
        }

        internal OutputFileBlobContainerDestination(Models.OutputFileBlobContainerDestination protocolObject)
        {
            this.containerUrl = protocolObject.ContainerUrl;
            this.path = protocolObject.Path;
        }

        #endregion Constructors

        #region OutputFileBlobContainerDestination

        /// <summary>
        /// Gets the URL of the container within Azure Blob Storage to which to upload the file(s).
        /// </summary>
        /// <remarks>
        /// The URL must include a Shared Access Signature (SAS) granting write permissions to the container.
        /// </remarks>
        public string ContainerUrl
        {
            get { return this.containerUrl; }
        }

        /// <summary>
        /// Gets the destination blob or virtual directory within the Azure Storage container to which to upload the file(s).
        /// </summary>
        /// <remarks>
        /// <para>If <see cref="OutputFile.FilePattern"/> refers to a specific file (i.e. it contains no wildcards), then 
        /// this is the name of the blob to which to upload that file.</para><para>If <see cref="OutputFile.FilePattern"/> 
        /// contains wildcards (and may therefore match multiple files), then this then this is the name of the blob virtual 
        /// directory (which is prepended to each blob name) to which to upload the file(s).</para><para>If omitted, file(s) 
        /// are uploaded to the root of the container with a blob name matching their file name.</para>
        /// </remarks>
        public string Path
        {
            get { return this.path; }
        }

        #endregion // OutputFileBlobContainerDestination

        #region IPropertyMetadata

        bool IModifiable.HasBeenModified
        {
            //This class is compile time readonly so it cannot have been modified
            get { return false; }
        }

        bool IReadOnly.IsReadOnly
        {
            get { return true; }
            set
            {
                // This class is compile time readonly already
            }
        }

        #endregion // IPropertyMetadata

        #region Internal/private methods

        /// <summary>
        /// Return a protocol object of the requested type.
        /// </summary>
        /// <returns>The protocol object of the requested type.</returns>
        Models.OutputFileBlobContainerDestination ITransportObjectProvider<Models.OutputFileBlobContainerDestination>.GetTransportObject()
        {
            Models.OutputFileBlobContainerDestination result = new Models.OutputFileBlobContainerDestination()
            {
                ContainerUrl = this.ContainerUrl,
                Path = this.Path,
            };

            return result;
        }


        #endregion // Internal/private methods
    }
}