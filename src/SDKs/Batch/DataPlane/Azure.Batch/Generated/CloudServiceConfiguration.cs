// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

//
// This file was autogenerated by a tool.
// Do not modify it.
//

namespace Microsoft.Azure.Batch
{
    using Models = Microsoft.Azure.Batch.Protocol.Models;
    using System;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The configuration for compute nodes in a pool based on the Azure Cloud Services platform.
    /// </summary>
    public partial class CloudServiceConfiguration : ITransportObjectProvider<Models.CloudServiceConfiguration>, IPropertyMetadata
    {
        private class PropertyContainer : PropertyCollection
        {
            public readonly PropertyAccessor<string> OSFamilyProperty;
            public readonly PropertyAccessor<string> OSVersionProperty;

            public PropertyContainer() : base(BindingState.Unbound)
            {
                this.OSFamilyProperty = this.CreatePropertyAccessor<string>(nameof(OSFamily), BindingAccess.Read | BindingAccess.Write);
                this.OSVersionProperty = this.CreatePropertyAccessor<string>(nameof(OSVersion), BindingAccess.Read | BindingAccess.Write);
            }

            public PropertyContainer(Models.CloudServiceConfiguration protocolObject) : base(BindingState.Bound)
            {
                this.OSFamilyProperty = this.CreatePropertyAccessor(
                    protocolObject.OsFamily,
                    nameof(OSFamily),
                    BindingAccess.Read | BindingAccess.Write);
                this.OSVersionProperty = this.CreatePropertyAccessor(
                    protocolObject.OsVersion,
                    nameof(OSVersion),
                    BindingAccess.Read | BindingAccess.Write);
            }
        }

        private readonly PropertyContainer propertyContainer;

        #region Constructors

        /// <summary>
        /// Initializes a new instance of the <see cref="CloudServiceConfiguration"/> class.
        /// </summary>
        /// <param name='osFamily'>The Azure Guest OS family to be installed on the virtual machines in the pool.</param>
        /// <param name='osVersion'>The Azure Guest OS version to be installed on the virtual machines in the pool. If no value is provided, the 
        /// Batch service will default to "'*", which specifies the latest operating system version for the <see cref="OSFamily"/>.</param>
        public CloudServiceConfiguration(
            string osFamily,
            string osVersion = default(string))
        {
            this.propertyContainer = new PropertyContainer();
            this.OSFamily = osFamily;
            this.OSVersion = osVersion;
        }

        internal CloudServiceConfiguration(Models.CloudServiceConfiguration protocolObject)
        {
            this.propertyContainer = new PropertyContainer(protocolObject);
        }

        #endregion Constructors

        #region CloudServiceConfiguration

        /// <summary>
        /// Gets or sets the Azure Guest OS family to be installed on the virtual machines in the pool.
        /// </summary>
        /// <remarks>
        /// For more information about Guest OS families, see https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/.
        /// </remarks>
        public string OSFamily
        {
            get { return this.propertyContainer.OSFamilyProperty.Value; }
            set { this.propertyContainer.OSFamilyProperty.Value = value; }
        }

        /// <summary>
        /// Gets or sets the Azure Guest OS version to be installed on the virtual machines in the pool. If no value is provided, 
        /// the Batch service will default to "'*", which specifies the latest operating system version for the <see cref="OSFamily"/>.
        /// </summary>
        public string OSVersion
        {
            get { return this.propertyContainer.OSVersionProperty.Value; }
            set { this.propertyContainer.OSVersionProperty.Value = value; }
        }

        #endregion // CloudServiceConfiguration

        #region IPropertyMetadata

        bool IModifiable.HasBeenModified
        {
            get { return this.propertyContainer.HasBeenModified; }
        }

        bool IReadOnly.IsReadOnly
        {
            get { return this.propertyContainer.IsReadOnly; }
            set { this.propertyContainer.IsReadOnly = value; }
        }

        #endregion //IPropertyMetadata

        #region Internal/private methods
        /// <summary>
        /// Return a protocol object of the requested type.
        /// </summary>
        /// <returns>The protocol object of the requested type.</returns>
        Models.CloudServiceConfiguration ITransportObjectProvider<Models.CloudServiceConfiguration>.GetTransportObject()
        {
            Models.CloudServiceConfiguration result = new Models.CloudServiceConfiguration()
            {
                OsFamily = this.OSFamily,
                OsVersion = this.OSVersion,
            };

            return result;
        }


        #endregion // Internal/private methods
    }
}