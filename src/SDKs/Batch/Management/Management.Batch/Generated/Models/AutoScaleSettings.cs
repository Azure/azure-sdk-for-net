// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Batch.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// AutoScale settings for the pool.
    /// </summary>
    public partial class AutoScaleSettings
    {
        /// <summary>
        /// Initializes a new instance of the AutoScaleSettings class.
        /// </summary>
        public AutoScaleSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AutoScaleSettings class.
        /// </summary>
        /// <param name="formula">A formula for the desired number of compute
        /// nodes in the pool.</param>
        /// <param name="evaluationInterval">The time interval at which to
        /// automatically adjust the pool size according to the autoscale
        /// formula.</param>
        public AutoScaleSettings(string formula, System.TimeSpan? evaluationInterval = default(System.TimeSpan?))
        {
            Formula = formula;
            EvaluationInterval = evaluationInterval;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets a formula for the desired number of compute nodes in
        /// the pool.
        /// </summary>
        [JsonProperty(PropertyName = "formula")]
        public string Formula { get; set; }

        /// <summary>
        /// Gets or sets the time interval at which to automatically adjust the
        /// pool size according to the autoscale formula.
        /// </summary>
        /// <remarks>
        /// If omitted, the default value is 15 minutes (PT15M).
        /// </remarks>
        [JsonProperty(PropertyName = "evaluationInterval")]
        public System.TimeSpan? EvaluationInterval { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Formula == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Formula");
            }
        }
    }
}
