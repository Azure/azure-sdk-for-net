// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Batch.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for ComputeNodeDeallocationOption.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ComputeNodeDeallocationOption
    {
        [EnumMember(Value = "Requeue")]
        Requeue,
        [EnumMember(Value = "Terminate")]
        Terminate,
        [EnumMember(Value = "TaskCompletion")]
        TaskCompletion,
        [EnumMember(Value = "RetainedData")]
        RetainedData
    }
    internal static class ComputeNodeDeallocationOptionEnumExtension
    {
        internal static string ToSerializedValue(this ComputeNodeDeallocationOption? value)
        {
            return value == null ? null : ((ComputeNodeDeallocationOption)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this ComputeNodeDeallocationOption value)
        {
            switch( value )
            {
                case ComputeNodeDeallocationOption.Requeue:
                    return "Requeue";
                case ComputeNodeDeallocationOption.Terminate:
                    return "Terminate";
                case ComputeNodeDeallocationOption.TaskCompletion:
                    return "TaskCompletion";
                case ComputeNodeDeallocationOption.RetainedData:
                    return "RetainedData";
            }
            return null;
        }

        internal static ComputeNodeDeallocationOption? ParseComputeNodeDeallocationOption(this string value)
        {
            switch( value )
            {
                case "Requeue":
                    return ComputeNodeDeallocationOption.Requeue;
                case "Terminate":
                    return ComputeNodeDeallocationOption.Terminate;
                case "TaskCompletion":
                    return ComputeNodeDeallocationOption.TaskCompletion;
                case "RetainedData":
                    return ComputeNodeDeallocationOption.RetainedData;
            }
            return null;
        }
    }
}
