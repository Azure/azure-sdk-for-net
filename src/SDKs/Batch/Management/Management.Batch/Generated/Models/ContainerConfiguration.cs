// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Batch.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The configuration for container-enabled pools.
    /// </summary>
    public partial class ContainerConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the ContainerConfiguration class.
        /// </summary>
        public ContainerConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ContainerConfiguration class.
        /// </summary>
        /// <param name="containerImageNames">The collection of container image
        /// names.</param>
        /// <param name="containerRegistries">Additional private registries
        /// from which containers can be pulled.</param>
        public ContainerConfiguration(IList<string> containerImageNames = default(IList<string>), IList<ContainerRegistry> containerRegistries = default(IList<ContainerRegistry>))
        {
            ContainerImageNames = containerImageNames;
            ContainerRegistries = containerRegistries;
            CustomInit();
        }
        /// <summary>
        /// Static constructor for ContainerConfiguration class.
        /// </summary>
        static ContainerConfiguration()
        {
            Type = "DockerCompatible";
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the collection of container image names.
        /// </summary>
        /// <remarks>
        /// This is the full image reference, as would be specified to "docker
        /// pull". An image will be sourced from the default Docker registry
        /// unless the image is fully qualified with an alternative registry.
        /// </remarks>
        [JsonProperty(PropertyName = "containerImageNames")]
        public IList<string> ContainerImageNames { get; set; }

        /// <summary>
        /// Gets or sets additional private registries from which containers
        /// can be pulled.
        /// </summary>
        /// <remarks>
        /// If any images must be downloaded from a private registry which
        /// requires credentials, then those credentials must be provided here.
        /// </remarks>
        [JsonProperty(PropertyName = "containerRegistries")]
        public IList<ContainerRegistry> ContainerRegistries { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public static string Type { get; private set; }

    }
}
