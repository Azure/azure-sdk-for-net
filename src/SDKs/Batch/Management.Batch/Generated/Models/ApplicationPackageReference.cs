// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Batch.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Link to an application package inside the batch account
    /// </summary>
    public partial class ApplicationPackageReference
    {
        /// <summary>
        /// Initializes a new instance of the ApplicationPackageReference
        /// class.
        /// </summary>
        public ApplicationPackageReference()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApplicationPackageReference
        /// class.
        /// </summary>
        /// <param name="id">The ID of the application package to install. This
        /// must be inside the same batch account as the pool. This can either
        /// be a reference to a specific version or the default version if one
        /// exists.</param>
        /// <param name="version">The version of the application to deploy. If
        /// omitted, the default version is deployed.</param>
        public ApplicationPackageReference(string id, string version = default(string))
        {
            Id = id;
            Version = version;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the ID of the application package to install. This
        /// must be inside the same batch account as the pool. This can either
        /// be a reference to a specific version or the default version if one
        /// exists.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets the version of the application to deploy. If omitted,
        /// the default version is deployed.
        /// </summary>
        /// <remarks>
        /// If this is omitted, and no default version is specified for this
        /// application, the request fails with the error code
        /// InvalidApplicationPackageReferences. If you are calling the REST
        /// API directly, the HTTP status code is 409.
        /// </remarks>
        [JsonProperty(PropertyName = "version")]
        public string Version { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Id == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Id");
            }
        }
    }
}
