// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.Vision.Face.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Properties describing hair attributes.
    /// </summary>
    public partial class HairProperties
    {
        /// <summary>
        /// Initializes a new instance of the HairProperties class.
        /// </summary>
        public HairProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the HairProperties class.
        /// </summary>
        /// <param name="bald">A number describing confidence level of whether
        /// the person is bald.</param>
        /// <param name="invisible">A boolean value describing whether the hair
        /// is visible in the image.</param>
        public HairProperties(double? bald = default(double?), bool? invisible = default(bool?), IList<ColorProperty> hairColor = default(IList<ColorProperty>))
        {
            Bald = bald;
            Invisible = invisible;
            HairColor = hairColor;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets a number describing confidence level of whether the
        /// person is bald.
        /// </summary>
        [JsonProperty(PropertyName = "bald")]
        public double? Bald { get; set; }

        /// <summary>
        /// Gets or sets a boolean value describing whether the hair is visible
        /// in the image.
        /// </summary>
        [JsonProperty(PropertyName = "invisible")]
        public bool? Invisible { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hairColor")]
        public IList<ColorProperty> HairColor { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Bald > 1)
            {
                throw new ValidationException(ValidationRules.InclusiveMaximum, "Bald", 1);
            }
            if (Bald < 0)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "Bald", 0);
            }
        }
    }
}
