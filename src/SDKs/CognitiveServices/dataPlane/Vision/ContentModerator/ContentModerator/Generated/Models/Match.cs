// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.ContentModerator.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The match details.
    /// </summary>
    public partial class Match
    {
        /// <summary>
        /// Initializes a new instance of the Match class.
        /// </summary>
        public Match()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Match class.
        /// </summary>
        /// <param name="score">Confidence score of the image match.</param>
        /// <param name="matchId">The match id.</param>
        /// <param name="source">The source.</param>
        /// <param name="tags">The tags for match details.</param>
        /// <param name="label">The label.</param>
        public Match(double? score = default(double?), int? matchId = default(int?), string source = default(string), IList<int?> tags = default(IList<int?>), string label = default(string))
        {
            Score = score;
            MatchId = matchId;
            Source = source;
            Tags = tags;
            Label = label;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets confidence score of the image match.
        /// </summary>
        [JsonProperty(PropertyName = "Score")]
        public double? Score { get; set; }

        /// <summary>
        /// Gets or sets the match id.
        /// </summary>
        [JsonProperty(PropertyName = "MatchId")]
        public int? MatchId { get; set; }

        /// <summary>
        /// Gets or sets the source.
        /// </summary>
        [JsonProperty(PropertyName = "Source")]
        public string Source { get; set; }

        /// <summary>
        /// Gets or sets the tags for match details.
        /// </summary>
        [JsonProperty(PropertyName = "Tags")]
        public IList<int?> Tags { get; set; }

        /// <summary>
        /// Gets or sets the label.
        /// </summary>
        [JsonProperty(PropertyName = "Label")]
        public string Label { get; set; }

    }
}
