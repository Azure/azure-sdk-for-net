// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.ContentModerator.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The response for a Screen text request.
    /// </summary>
    public partial class Screen
    {
        /// <summary>
        /// Initializes a new instance of the Screen class.
        /// </summary>
        public Screen()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Screen class.
        /// </summary>
        /// <param name="originalText">The original text.</param>
        /// <param name="normalizedText">The normalized text.</param>
        /// <param name="autoCorrectedText">The autocorrected text</param>
        /// <param name="misrepresentation">The misrepresentation text.</param>
        /// <param name="classification">The classification details of the
        /// text.</param>
        /// <param name="status">The evaluate status.</param>
        /// <param name="pII">Personal Identifier Information details.</param>
        /// <param name="language">Language of the input text content.</param>
        /// <param name="trackingId">Unique Content Moderator transaction
        /// Id.</param>
        public Screen(string originalText = default(string), string normalizedText = default(string), string autoCorrectedText = default(string), IList<string> misrepresentation = default(IList<string>), Classification classification = default(Classification), Status status = default(Status), PII pII = default(PII), string language = default(string), IList<DetectedTerms> terms = default(IList<DetectedTerms>), string trackingId = default(string))
        {
            OriginalText = originalText;
            NormalizedText = normalizedText;
            AutoCorrectedText = autoCorrectedText;
            Misrepresentation = misrepresentation;
            Classification = classification;
            Status = status;
            PII = pII;
            Language = language;
            Terms = terms;
            TrackingId = trackingId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the original text.
        /// </summary>
        [JsonProperty(PropertyName = "OriginalText")]
        public string OriginalText { get; set; }

        /// <summary>
        /// Gets or sets the normalized text.
        /// </summary>
        [JsonProperty(PropertyName = "NormalizedText")]
        public string NormalizedText { get; set; }

        /// <summary>
        /// Gets or sets the autocorrected text
        /// </summary>
        [JsonProperty(PropertyName = "AutoCorrectedText")]
        public string AutoCorrectedText { get; set; }

        /// <summary>
        /// Gets or sets the misrepresentation text.
        /// </summary>
        [JsonProperty(PropertyName = "Misrepresentation")]
        public IList<string> Misrepresentation { get; set; }

        /// <summary>
        /// Gets or sets the classification details of the text.
        /// </summary>
        [JsonProperty(PropertyName = "Classification")]
        public Classification Classification { get; set; }

        /// <summary>
        /// Gets or sets the evaluate status.
        /// </summary>
        [JsonProperty(PropertyName = "Status")]
        public Status Status { get; set; }

        /// <summary>
        /// Gets or sets personal Identifier Information details.
        /// </summary>
        [JsonProperty(PropertyName = "PII")]
        public PII PII { get; set; }

        /// <summary>
        /// Gets or sets language of the input text content.
        /// </summary>
        [JsonProperty(PropertyName = "Language")]
        public string Language { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Terms")]
        public IList<DetectedTerms> Terms { get; set; }

        /// <summary>
        /// Gets or sets unique Content Moderator transaction Id.
        /// </summary>
        [JsonProperty(PropertyName = "TrackingId")]
        public string TrackingId { get; set; }

    }
}
