// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.ContentModerator.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The Job object.
    /// </summary>
    public partial class Job
    {
        /// <summary>
        /// Initializes a new instance of the Job class.
        /// </summary>
        public Job()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Job class.
        /// </summary>
        /// <param name="id">The job id.</param>
        /// <param name="teamName">The team name associated with the
        /// job.</param>
        /// <param name="status">The status string (&lt;Pending, Failed,
        /// Completed&gt;).</param>
        /// <param name="workflowId">The Id of the workflow.</param>
        /// <param name="type">Type of the content.</param>
        /// <param name="callBackEndpoint">The callback endpoint.</param>
        /// <param name="reviewId">Review Id if one is created.</param>
        /// <param name="resultMetaData">Array of KeyValue pairs.</param>
        /// <param name="jobExecutionReport">Job execution report- Array of
        /// KeyValue pairs object.</param>
        public Job(string id = default(string), string teamName = default(string), string status = default(string), string workflowId = default(string), string type = default(string), string callBackEndpoint = default(string), string reviewId = default(string), IList<KeyValuePair> resultMetaData = default(IList<KeyValuePair>), IList<JobExecutionReportDetails> jobExecutionReport = default(IList<JobExecutionReportDetails>))
        {
            Id = id;
            TeamName = teamName;
            Status = status;
            WorkflowId = workflowId;
            Type = type;
            CallBackEndpoint = callBackEndpoint;
            ReviewId = reviewId;
            ResultMetaData = resultMetaData;
            JobExecutionReport = jobExecutionReport;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the job id.
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets the team name associated with the job.
        /// </summary>
        [JsonProperty(PropertyName = "TeamName")]
        public string TeamName { get; set; }

        /// <summary>
        /// Gets or sets the status string (&amp;lt;Pending, Failed,
        /// Completed&amp;gt;).
        /// </summary>
        [JsonProperty(PropertyName = "Status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets the Id of the workflow.
        /// </summary>
        [JsonProperty(PropertyName = "WorkflowId")]
        public string WorkflowId { get; set; }

        /// <summary>
        /// Gets or sets type of the content.
        /// </summary>
        [JsonProperty(PropertyName = "Type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets the callback endpoint.
        /// </summary>
        [JsonProperty(PropertyName = "CallBackEndpoint")]
        public string CallBackEndpoint { get; set; }

        /// <summary>
        /// Gets or sets review Id if one is created.
        /// </summary>
        [JsonProperty(PropertyName = "ReviewId")]
        public string ReviewId { get; set; }

        /// <summary>
        /// Gets or sets array of KeyValue pairs.
        /// </summary>
        [JsonProperty(PropertyName = "ResultMetaData")]
        public IList<KeyValuePair> ResultMetaData { get; set; }

        /// <summary>
        /// Gets or sets job execution report- Array of KeyValue pairs object.
        /// </summary>
        [JsonProperty(PropertyName = "JobExecutionReport")]
        public IList<JobExecutionReportDetails> JobExecutionReport { get; set; }

    }
}
