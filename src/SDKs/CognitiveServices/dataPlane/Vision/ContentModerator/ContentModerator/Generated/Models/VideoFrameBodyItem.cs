// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.ContentModerator.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Schema items of the body.
    /// </summary>
    public partial class VideoFrameBodyItem
    {
        /// <summary>
        /// Initializes a new instance of the VideoFrameBodyItem class.
        /// </summary>
        public VideoFrameBodyItem()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VideoFrameBodyItem class.
        /// </summary>
        /// <param name="timestamp">Timestamp of the frame.</param>
        /// <param name="frameImage">Content to review.</param>
        /// <param name="metadata">Optional metadata details.</param>
        public VideoFrameBodyItem(string timestamp, string frameImage, IList<VideoFrameBodyItemReviewerResultTagsItem> reviewerResultTags = default(IList<VideoFrameBodyItemReviewerResultTagsItem>), IList<VideoFrameBodyItemMetadataItem> metadata = default(IList<VideoFrameBodyItemMetadataItem>))
        {
            Timestamp = timestamp;
            FrameImage = frameImage;
            ReviewerResultTags = reviewerResultTags;
            Metadata = metadata;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets timestamp of the frame.
        /// </summary>
        [JsonProperty(PropertyName = "Timestamp")]
        public string Timestamp { get; set; }

        /// <summary>
        /// Gets or sets content to review.
        /// </summary>
        [JsonProperty(PropertyName = "FrameImage")]
        public string FrameImage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ReviewerResultTags")]
        public IList<VideoFrameBodyItemReviewerResultTagsItem> ReviewerResultTags { get; set; }

        /// <summary>
        /// Gets or sets optional metadata details.
        /// </summary>
        [JsonProperty(PropertyName = "Metadata")]
        public IList<VideoFrameBodyItemMetadataItem> Metadata { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Timestamp == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Timestamp");
            }
            if (FrameImage == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FrameImage");
            }
            if (ReviewerResultTags != null)
            {
                foreach (var element in ReviewerResultTags)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (Metadata != null)
            {
                foreach (var element1 in Metadata)
                {
                    if (element1 != null)
                    {
                        element1.Validate();
                    }
                }
            }
        }
    }
}
