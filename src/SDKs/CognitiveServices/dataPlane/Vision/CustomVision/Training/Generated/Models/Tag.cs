// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Represents a Tag.
    /// </summary>
    public partial class Tag
    {
        /// <summary>
        /// Initializes a new instance of the Tag class.
        /// </summary>
        public Tag()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Tag class.
        /// </summary>
        /// <param name="id">Gets the Tag ID.</param>
        /// <param name="name">Gets or sets the name of the tag.</param>
        /// <param name="description">Gets or sets the description of the
        /// tag.</param>
        /// <param name="type">Gets or sets the type of the tag. Possible
        /// values include: 'Regular', 'Negative'</param>
        /// <param name="imageCount">Gets the number of images with this
        /// tag.</param>
        public Tag(System.Guid id = default(System.Guid), string name = default(string), string description = default(string), string type = default(string), int imageCount = default(int))
        {
            Id = id;
            Name = name;
            Description = description;
            Type = type;
            ImageCount = imageCount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the Tag ID.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid Id { get; private set; }

        /// <summary>
        /// Gets or sets the name of the tag.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the description of the tag.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the type of the tag. Possible values include:
        /// 'Regular', 'Negative'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets the number of images with this tag.
        /// </summary>
        [JsonProperty(PropertyName = "imageCount")]
        public int ImageCount { get; private set; }

    }
}
