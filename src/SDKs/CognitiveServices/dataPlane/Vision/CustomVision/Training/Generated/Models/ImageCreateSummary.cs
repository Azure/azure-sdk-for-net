// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.Vision.CustomVision.Training.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class ImageCreateSummary
    {
        /// <summary>
        /// Initializes a new instance of the ImageCreateSummary class.
        /// </summary>
        public ImageCreateSummary()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ImageCreateSummary class.
        /// </summary>
        /// <param name="isBatchSuccessful">True if all of the images in the
        /// batch were created successfully, otherwise false.</param>
        /// <param name="images">List of the image creation results.</param>
        public ImageCreateSummary(bool isBatchSuccessful = default(bool), IList<ImageCreateResult> images = default(IList<ImageCreateResult>))
        {
            IsBatchSuccessful = isBatchSuccessful;
            Images = images;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets true if all of the images in the batch were created
        /// successfully, otherwise false.
        /// </summary>
        [JsonProperty(PropertyName = "isBatchSuccessful")]
        public bool IsBatchSuccessful { get; private set; }

        /// <summary>
        /// Gets list of the image creation results.
        /// </summary>
        [JsonProperty(PropertyName = "images")]
        public IList<ImageCreateResult> Images { get; private set; }

    }
}
