// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.Vision.Face.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for ExposureLevel.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ExposureLevel
    {
        [EnumMember(Value = "UnderExposure")]
        UnderExposure,
        [EnumMember(Value = "GoodExposure")]
        GoodExposure,
        [EnumMember(Value = "OverExposure")]
        OverExposure
    }
    internal static class ExposureLevelEnumExtension
    {
        internal static string ToSerializedValue(this ExposureLevel? value)
        {
            return value == null ? null : ((ExposureLevel)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this ExposureLevel value)
        {
            switch( value )
            {
                case ExposureLevel.UnderExposure:
                    return "UnderExposure";
                case ExposureLevel.GoodExposure:
                    return "GoodExposure";
                case ExposureLevel.OverExposure:
                    return "OverExposure";
            }
            return null;
        }

        internal static ExposureLevel? ParseExposureLevel(this string value)
        {
            switch( value )
            {
                case "UnderExposure":
                    return ExposureLevel.UnderExposure;
                case "GoodExposure":
                    return ExposureLevel.GoodExposure;
                case "OverExposure":
                    return ExposureLevel.OverExposure;
            }
            return null;
        }
    }
}
