// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.Vision.Face.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for AccessoryType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum AccessoryType
    {
        [EnumMember(Value = "headWear")]
        HeadWear,
        [EnumMember(Value = "glasses")]
        Glasses,
        [EnumMember(Value = "mask")]
        Mask
    }
    internal static class AccessoryTypeEnumExtension
    {
        internal static string ToSerializedValue(this AccessoryType? value)
        {
            return value == null ? null : ((AccessoryType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this AccessoryType value)
        {
            switch( value )
            {
                case AccessoryType.HeadWear:
                    return "headWear";
                case AccessoryType.Glasses:
                    return "glasses";
                case AccessoryType.Mask:
                    return "mask";
            }
            return null;
        }

        internal static AccessoryType? ParseAccessoryType(this string value)
        {
            switch( value )
            {
                case "headWear":
                    return AccessoryType.HeadWear;
                case "glasses":
                    return AccessoryType.Glasses;
                case "mask":
                    return AccessoryType.Mask;
            }
            return null;
        }
    }
}
