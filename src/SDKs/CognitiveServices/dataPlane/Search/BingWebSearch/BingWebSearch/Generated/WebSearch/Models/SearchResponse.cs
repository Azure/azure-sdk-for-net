// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.Search.WebSearch.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Defines the top-level object that the response includes when the
    /// request succeeds.
    /// </summary>
    public partial class SearchResponse : Response
    {
        /// <summary>
        /// Initializes a new instance of the SearchResponse class.
        /// </summary>
        public SearchResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SearchResponse class.
        /// </summary>
        /// <param name="id">A String identifier.</param>
        /// <param name="webSearchUrl">The URL To Bing's search result for this
        /// item.</param>
        /// <param name="queryContext">An object that contains the query string
        /// that Bing used for the request. This object contains the query
        /// string as entered by the user. It may also contain an altered query
        /// string that Bing used for the query if the query string contained a
        /// spelling mistake.</param>
        /// <param name="webPages">A list of webpages that are relevant to the
        /// search query.</param>
        /// <param name="images">A list of images that are relevant to the
        /// search query.</param>
        /// <param name="news">A list of news articles that are relevant to the
        /// search query.</param>
        /// <param name="relatedSearches">A list of related queries made by
        /// others.</param>
        /// <param name="spellSuggestions">The query string that likely
        /// represents the user's intent.</param>
        /// <param name="timeZone">The date and time of one or more geographic
        /// locations.</param>
        /// <param name="videos">A list of videos that are relevant to the
        /// search query.</param>
        /// <param name="computation">The answer to a math expression or units
        /// conversion expression.</param>
        /// <param name="rankingResponse">The order that Bing suggests that you
        /// display the search results in.</param>
        public SearchResponse(string id = default(string), string webSearchUrl = default(string), QueryContext queryContext = default(QueryContext), WebWebAnswer webPages = default(WebWebAnswer), Images images = default(Images), News news = default(News), RelatedSearchesRelatedSearchAnswer relatedSearches = default(RelatedSearchesRelatedSearchAnswer), SpellSuggestions spellSuggestions = default(SpellSuggestions), TimeZone timeZone = default(TimeZone), Videos videos = default(Videos), Computation computation = default(Computation), RankingRankingResponse rankingResponse = default(RankingRankingResponse))
            : base(id, webSearchUrl)
        {
            QueryContext = queryContext;
            WebPages = webPages;
            Images = images;
            News = news;
            RelatedSearches = relatedSearches;
            SpellSuggestions = spellSuggestions;
            TimeZone = timeZone;
            Videos = videos;
            Computation = computation;
            RankingResponse = rankingResponse;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets an object that contains the query string that Bing used for
        /// the request. This object contains the query string as entered by
        /// the user. It may also contain an altered query string that Bing
        /// used for the query if the query string contained a spelling
        /// mistake.
        /// </summary>
        [JsonProperty(PropertyName = "queryContext")]
        public QueryContext QueryContext { get; private set; }

        /// <summary>
        /// Gets a list of webpages that are relevant to the search query.
        /// </summary>
        [JsonProperty(PropertyName = "webPages")]
        public WebWebAnswer WebPages { get; private set; }

        /// <summary>
        /// Gets a list of images that are relevant to the search query.
        /// </summary>
        [JsonProperty(PropertyName = "images")]
        public Images Images { get; private set; }

        /// <summary>
        /// Gets a list of news articles that are relevant to the search query.
        /// </summary>
        [JsonProperty(PropertyName = "news")]
        public News News { get; private set; }

        /// <summary>
        /// Gets a list of related queries made by others.
        /// </summary>
        [JsonProperty(PropertyName = "relatedSearches")]
        public RelatedSearchesRelatedSearchAnswer RelatedSearches { get; private set; }

        /// <summary>
        /// Gets the query string that likely represents the user's intent.
        /// </summary>
        [JsonProperty(PropertyName = "spellSuggestions")]
        public SpellSuggestions SpellSuggestions { get; private set; }

        /// <summary>
        /// Gets the date and time of one or more geographic locations.
        /// </summary>
        [JsonProperty(PropertyName = "timeZone")]
        public TimeZone TimeZone { get; private set; }

        /// <summary>
        /// Gets a list of videos that are relevant to the search query.
        /// </summary>
        [JsonProperty(PropertyName = "videos")]
        public Videos Videos { get; private set; }

        /// <summary>
        /// Gets the answer to a math expression or units conversion
        /// expression.
        /// </summary>
        [JsonProperty(PropertyName = "computation")]
        public Computation Computation { get; private set; }

        /// <summary>
        /// Gets the order that Bing suggests that you display the search
        /// results in.
        /// </summary>
        [JsonProperty(PropertyName = "rankingResponse")]
        public RankingRankingResponse RankingResponse { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (QueryContext != null)
            {
                QueryContext.Validate();
            }
            if (WebPages != null)
            {
                WebPages.Validate();
            }
            if (Images != null)
            {
                Images.Validate();
            }
            if (News != null)
            {
                News.Validate();
            }
            if (RelatedSearches != null)
            {
                RelatedSearches.Validate();
            }
            if (SpellSuggestions != null)
            {
                SpellSuggestions.Validate();
            }
            if (TimeZone != null)
            {
                TimeZone.Validate();
            }
            if (Videos != null)
            {
                Videos.Validate();
            }
            if (Computation != null)
            {
                Computation.Validate();
            }
            if (RankingResponse != null)
            {
                RankingResponse.Validate();
            }
        }
    }
}
