// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.Search.ImageSearch.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Defines the category of trending images.
    /// </summary>
    public partial class TrendingImagesCategory
    {
        /// <summary>
        /// Initializes a new instance of the TrendingImagesCategory class.
        /// </summary>
        public TrendingImagesCategory()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TrendingImagesCategory class.
        /// </summary>
        /// <param name="title">The name of the image category. For example,
        /// Popular People Searches.</param>
        /// <param name="tiles">A list of images that are trending in the
        /// category. Each tile contains an image and a URL that returns more
        /// images of the subject. For example, if the category is Popular
        /// People Searches, the image is of a popular person and the URL would
        /// return more images of that person.</param>
        public TrendingImagesCategory(string title, IList<TrendingImagesTile> tiles)
        {
            Title = title;
            Tiles = tiles;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the image category. For example, Popular
        /// People Searches.
        /// </summary>
        [JsonProperty(PropertyName = "title")]
        public string Title { get; set; }

        /// <summary>
        /// Gets or sets a list of images that are trending in the category.
        /// Each tile contains an image and a URL that returns more images of
        /// the subject. For example, if the category is Popular People
        /// Searches, the image is of a popular person and the URL would return
        /// more images of that person.
        /// </summary>
        [JsonProperty(PropertyName = "tiles")]
        public IList<TrendingImagesTile> Tiles { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Title == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Title");
            }
            if (Tiles == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Tiles");
            }
            if (Tiles != null)
            {
                foreach (var element in Tiles)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
