// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.Search.WebSearch.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Defines a webpage that is relevant to the query.
    /// </summary>
    public partial class WebPage : CreativeWork
    {
        /// <summary>
        /// Initializes a new instance of the WebPage class.
        /// </summary>
        public WebPage()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WebPage class.
        /// </summary>
        /// <param name="id">A String identifier.</param>
        /// <param name="webSearchUrl">The URL To Bing's search result for this
        /// item.</param>
        /// <param name="name">The name of the thing represented by this
        /// object.</param>
        /// <param name="url">The URL to get more information about the thing
        /// represented by this object.</param>
        /// <param name="description">A short description of the item.</param>
        /// <param name="bingId">An ID that uniquely identifies this
        /// item.</param>
        /// <param name="thumbnailUrl">The URL to a thumbnail of the
        /// item.</param>
        /// <param name="provider">The source of the creative work.</param>
        /// <param name="displayUrl">The display URL of the webpage. The URL is
        /// meant for display purposes only and is not well formed.</param>
        /// <param name="snippet">A snippet of text from the webpage that
        /// describes its contents.</param>
        /// <param name="deepLinks">A list of links to related content that
        /// Bing found in the website that contains this webpage. The Webpage
        /// object in this context includes only the name, url, urlPingSuffix,
        /// and snippet fields.</param>
        /// <param name="dateLastCrawled">The last time that Bing crawled the
        /// webpage. The date is in the form, YYYY-MM-DDTHH:MM:SS. For example,
        /// 2015-04-13T05:23:39.</param>
        /// <param name="searchTags">A list of search tags that the webpage
        /// owner specified on the webpage. The API returns only indexed search
        /// tags. The name field of the MetaTag object contains the indexed
        /// search tag. Search tags begin with search.* (for example,
        /// search.assetId). The content field contains the tag's
        /// value.</param>
        public WebPage(string id = default(string), string webSearchUrl = default(string), string name = default(string), string url = default(string), ImageObject image = default(ImageObject), string description = default(string), string bingId = default(string), string thumbnailUrl = default(string), IList<Thing> provider = default(IList<Thing>), string text = default(string), string displayUrl = default(string), string snippet = default(string), IList<WebPage> deepLinks = default(IList<WebPage>), string dateLastCrawled = default(string), IList<WebMetaTag> searchTags = default(IList<WebMetaTag>), ImageObject primaryImageOfPage = default(ImageObject))
            : base(id, webSearchUrl, name, url, image, description, bingId, thumbnailUrl, provider, text)
        {
            DisplayUrl = displayUrl;
            Snippet = snippet;
            DeepLinks = deepLinks;
            DateLastCrawled = dateLastCrawled;
            SearchTags = searchTags;
            PrimaryImageOfPage = primaryImageOfPage;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the display URL of the webpage. The URL is meant for display
        /// purposes only and is not well formed.
        /// </summary>
        [JsonProperty(PropertyName = "displayUrl")]
        public string DisplayUrl { get; private set; }

        /// <summary>
        /// Gets a snippet of text from the webpage that describes its
        /// contents.
        /// </summary>
        [JsonProperty(PropertyName = "snippet")]
        public string Snippet { get; private set; }

        /// <summary>
        /// Gets a list of links to related content that Bing found in the
        /// website that contains this webpage. The Webpage object in this
        /// context includes only the name, url, urlPingSuffix, and snippet
        /// fields.
        /// </summary>
        [JsonProperty(PropertyName = "deepLinks")]
        public IList<WebPage> DeepLinks { get; private set; }

        /// <summary>
        /// Gets the last time that Bing crawled the webpage. The date is in
        /// the form, YYYY-MM-DDTHH:MM:SS. For example, 2015-04-13T05:23:39.
        /// </summary>
        [JsonProperty(PropertyName = "dateLastCrawled")]
        public string DateLastCrawled { get; private set; }

        /// <summary>
        /// Gets a list of search tags that the webpage owner specified on the
        /// webpage. The API returns only indexed search tags. The name field
        /// of the MetaTag object contains the indexed search tag. Search tags
        /// begin with search.* (for example, search.assetId). The content
        /// field contains the tag's value.
        /// </summary>
        [JsonProperty(PropertyName = "searchTags")]
        public IList<WebMetaTag> SearchTags { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "primaryImageOfPage")]
        public ImageObject PrimaryImageOfPage { get; private set; }

    }
}
