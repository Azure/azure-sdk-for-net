// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.Personalizer.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class PolicyResultSummary
    {
        /// <summary>
        /// Initializes a new instance of the PolicyResultSummary class.
        /// </summary>
        public PolicyResultSummary()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PolicyResultSummary class.
        /// </summary>
        public PolicyResultSummary(System.DateTime timeStamp, double ipsEstimatorNumerator, double ipsEstimatorDenominator, double snipsEstimatorDenominator, string aggregateTimeWindow, double? nonZeroProbability = default(double?), double? confidenceInterval = default(double?), double? sumOfSquares = default(double?))
        {
            TimeStamp = timeStamp;
            IpsEstimatorNumerator = ipsEstimatorNumerator;
            IpsEstimatorDenominator = ipsEstimatorDenominator;
            SnipsEstimatorDenominator = snipsEstimatorDenominator;
            AggregateTimeWindow = aggregateTimeWindow;
            NonZeroProbability = nonZeroProbability;
            ConfidenceInterval = confidenceInterval;
            SumOfSquares = sumOfSquares;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "timeStamp")]
        public System.DateTime TimeStamp { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ipsEstimatorNumerator")]
        public double IpsEstimatorNumerator { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ipsEstimatorDenominator")]
        public double IpsEstimatorDenominator { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "snipsEstimatorDenominator")]
        public double SnipsEstimatorDenominator { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "aggregateTimeWindow")]
        public string AggregateTimeWindow { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "nonZeroProbability")]
        public double? NonZeroProbability { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "confidenceInterval")]
        public double? ConfidenceInterval { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sumOfSquares")]
        public double? SumOfSquares { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (AggregateTimeWindow == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AggregateTimeWindow");
            }
        }
    }
}
