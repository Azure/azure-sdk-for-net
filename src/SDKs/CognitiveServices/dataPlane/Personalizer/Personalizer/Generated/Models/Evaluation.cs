// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.Personalizer.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class Evaluation
    {
        /// <summary>
        /// Initializes a new instance of the Evaluation class.
        /// </summary>
        public Evaluation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Evaluation class.
        /// </summary>
        /// <param name="status">Possible values include: 'completed',
        /// 'pending', 'failed', 'notSubmitted'</param>
        public Evaluation(string id, string name, System.DateTime startTime, System.DateTime endTime, string jobId = default(string), string status = default(string), IList<PolicyResult> policyResults = default(IList<PolicyResult>))
        {
            Id = id;
            Name = name;
            StartTime = startTime;
            EndTime = endTime;
            JobId = jobId;
            Status = status;
            PolicyResults = policyResults;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "startTime")]
        public System.DateTime StartTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "endTime")]
        public System.DateTime EndTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "jobId")]
        public string JobId { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'completed', 'pending',
        /// 'failed', 'notSubmitted'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "policyResults")]
        public IList<PolicyResult> PolicyResults { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Id == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Id");
            }
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (PolicyResults != null)
            {
                foreach (var element in PolicyResults)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
