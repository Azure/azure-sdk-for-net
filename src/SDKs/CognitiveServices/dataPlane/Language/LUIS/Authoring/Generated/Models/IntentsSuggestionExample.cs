// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.Language.LUIS.Authoring.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Predicted/suggested intent.
    /// </summary>
    public partial class IntentsSuggestionExample
    {
        /// <summary>
        /// Initializes a new instance of the IntentsSuggestionExample class.
        /// </summary>
        public IntentsSuggestionExample()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IntentsSuggestionExample class.
        /// </summary>
        /// <param name="text">The utterance. For example, "What's the weather
        /// like in seattle?"</param>
        /// <param name="tokenizedText">The tokenized utterance.</param>
        /// <param name="intentPredictions">Predicted/suggested
        /// intents.</param>
        /// <param name="entityPredictions">Predicted/suggested
        /// entities.</param>
        public IntentsSuggestionExample(string text = default(string), IList<string> tokenizedText = default(IList<string>), IList<IntentPrediction> intentPredictions = default(IList<IntentPrediction>), IList<EntityPrediction> entityPredictions = default(IList<EntityPrediction>))
        {
            Text = text;
            TokenizedText = tokenizedText;
            IntentPredictions = intentPredictions;
            EntityPredictions = entityPredictions;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the utterance. For example, "What's the weather like
        /// in seattle?"
        /// </summary>
        [JsonProperty(PropertyName = "text")]
        public string Text { get; set; }

        /// <summary>
        /// Gets or sets the tokenized utterance.
        /// </summary>
        [JsonProperty(PropertyName = "tokenizedText")]
        public IList<string> TokenizedText { get; set; }

        /// <summary>
        /// Gets or sets predicted/suggested intents.
        /// </summary>
        [JsonProperty(PropertyName = "intentPredictions")]
        public IList<IntentPrediction> IntentPredictions { get; set; }

        /// <summary>
        /// Gets or sets predicted/suggested entities.
        /// </summary>
        [JsonProperty(PropertyName = "entityPredictions")]
        public IList<EntityPrediction> EntityPredictions { get; set; }

    }
}
