// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.Language.LUIS.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// An entity extracted from the utterance.
    /// </summary>
    public partial class EntityModel
    {
        /// <summary>
        /// Initializes a new instance of the EntityModel class.
        /// </summary>
        public EntityModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EntityModel class.
        /// </summary>
        /// <param name="entity">Name of the entity, as defined in
        /// LUIS.</param>
        /// <param name="type">Type of the entity, as defined in LUIS.</param>
        /// <param name="startIndex">The position of the first character of the
        /// matched entity within the utterance.</param>
        /// <param name="endIndex">The position of the last character of the
        /// matched entity within the utterance.</param>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        public EntityModel(string entity, string type, double startIndex, double endIndex, IDictionary<string, object> additionalProperties = default(IDictionary<string, object>))
        {
            AdditionalProperties = additionalProperties;
            Entity = entity;
            Type = type;
            StartIndex = startIndex;
            EndIndex = endIndex;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets unmatched properties from the message are deserialized
        /// this collection
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties { get; set; }

        /// <summary>
        /// Gets or sets name of the entity, as defined in LUIS.
        /// </summary>
        [JsonProperty(PropertyName = "entity")]
        public string Entity { get; set; }

        /// <summary>
        /// Gets or sets type of the entity, as defined in LUIS.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets the position of the first character of the matched
        /// entity within the utterance.
        /// </summary>
        [JsonProperty(PropertyName = "startIndex")]
        public double StartIndex { get; set; }

        /// <summary>
        /// Gets or sets the position of the last character of the matched
        /// entity within the utterance.
        /// </summary>
        [JsonProperty(PropertyName = "endIndex")]
        public double EndIndex { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Entity == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Entity");
            }
            if (Type == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Type");
            }
        }
    }
}
