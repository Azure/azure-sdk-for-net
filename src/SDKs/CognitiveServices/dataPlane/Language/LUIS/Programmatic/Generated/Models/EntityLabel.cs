// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.Language.LUIS.Programmatic.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Defines the entity type and position of the extracted entity within the
    /// example.
    /// </summary>
    public partial class EntityLabel
    {
        /// <summary>
        /// Initializes a new instance of the EntityLabel class.
        /// </summary>
        public EntityLabel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EntityLabel class.
        /// </summary>
        /// <param name="entityName">The entity type.</param>
        /// <param name="startTokenIndex">The index within the utterance where
        /// the extracted entity starts.</param>
        /// <param name="endTokenIndex">The index within the utterance where
        /// the extracted entity ends.</param>
        public EntityLabel(string entityName, int startTokenIndex, int endTokenIndex)
        {
            EntityName = entityName;
            StartTokenIndex = startTokenIndex;
            EndTokenIndex = endTokenIndex;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the entity type.
        /// </summary>
        [JsonProperty(PropertyName = "entityName")]
        public string EntityName { get; set; }

        /// <summary>
        /// Gets or sets the index within the utterance where the extracted
        /// entity starts.
        /// </summary>
        [JsonProperty(PropertyName = "startTokenIndex")]
        public int StartTokenIndex { get; set; }

        /// <summary>
        /// Gets or sets the index within the utterance where the extracted
        /// entity ends.
        /// </summary>
        [JsonProperty(PropertyName = "endTokenIndex")]
        public int EndTokenIndex { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (EntityName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "EntityName");
            }
        }
    }
}
