// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.Language.TextAnalytics.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class SentimentBatchResultItem
    {
        /// <summary>
        /// Initializes a new instance of the SentimentBatchResultItem class.
        /// </summary>
        public SentimentBatchResultItem()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SentimentBatchResultItem class.
        /// </summary>
        /// <param name="score">A decimal number between 0 and 1 denoting the
        /// sentiment of the document. A score above 0.7 usually refers to a
        /// positive document while a score below 0.3 normally has a negative
        /// connotation. Mid values refer to neutral text.</param>
        /// <param name="id">Unique document identifier.</param>
        public SentimentBatchResultItem(double? score = default(double?), string id = default(string))
        {
            Score = score;
            Id = id;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets a decimal number between 0 and 1 denoting the sentiment of the
        /// document. A score above 0.7 usually refers to a positive document
        /// while a score below 0.3 normally has a negative connotation. Mid
        /// values refer to neutral text.
        /// </summary>
        [JsonProperty(PropertyName = "score")]
        public double? Score { get; private set; }

        /// <summary>
        /// Gets unique document identifier.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

    }
}
