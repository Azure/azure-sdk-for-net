// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.Language.TextAnalytics.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class KeyPhraseBatchResultItem
    {
        /// <summary>
        /// Initializes a new instance of the KeyPhraseBatchResultItem class.
        /// </summary>
        public KeyPhraseBatchResultItem()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the KeyPhraseBatchResultItem class.
        /// </summary>
        /// <param name="id">Unique, non-empty document identifier.</param>
        /// <param name="keyPhrases">A list of representative words or phrases.
        /// The number of key phrases returned is proportional to the number of
        /// words in the input document.</param>
        /// <param name="statistics">(Optional) if showStats=true was specified
        /// in the request this field will contain information about the
        /// document payload.</param>
        public KeyPhraseBatchResultItem(string id = default(string), IList<string> keyPhrases = default(IList<string>), DocumentStatistics statistics = default(DocumentStatistics))
        {
            Id = id;
            KeyPhrases = keyPhrases;
            Statistics = statistics;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets unique, non-empty document identifier.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets a list of representative words or phrases. The number of key
        /// phrases returned is proportional to the number of words in the
        /// input document.
        /// </summary>
        [JsonProperty(PropertyName = "keyPhrases")]
        public IList<string> KeyPhrases { get; private set; }

        /// <summary>
        /// Gets or sets (Optional) if showStats=true was specified in the
        /// request this field will contain information about the document
        /// payload.
        /// </summary>
        [JsonProperty(PropertyName = "statistics")]
        public DocumentStatistics Statistics { get; set; }

    }
}
