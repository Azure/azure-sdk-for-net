// Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.CognitiveServices.Language.TextAnalytics.Models
{
    using Microsoft.CognitiveServices;
    using Microsoft.CognitiveServices.Language;
    using Microsoft.CognitiveServices.Language.TextAnalytics;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class MultiLanguageInputV2
    {
        /// <summary>
        /// Initializes a new instance of the MultiLanguageInputV2 class.
        /// </summary>
        public MultiLanguageInputV2()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MultiLanguageInputV2 class.
        /// </summary>
        /// <param name="language">This is the 2 letter ISO 639-1
        /// representation of a language.
        /// For example, use "en" for English; "es" for Spanish etc.,</param>
        /// <param name="id">Unique, non-empty document identifier.</param>
        public MultiLanguageInputV2(string language = default(string), string id = default(string), string text = default(string))
        {
            Language = language;
            Id = id;
            Text = text;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets this is the 2 letter ISO 639-1 representation of a
        /// language.
        /// For example, use "en" for English; "es" for Spanish etc.,
        /// </summary>
        [JsonProperty(PropertyName = "language")]
        public string Language { get; set; }

        /// <summary>
        /// Gets or sets unique, non-empty document identifier.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "text")]
        public string Text { get; set; }

    }
}
