// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Peering
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for PeeringBgpCommunityListsOperations.
    /// </summary>
    public static partial class PeeringBgpCommunityListsOperationsExtensions
    {
            /// <summary>
            /// Gets the BGP community list.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='peeringName'>
            /// The peering name.
            /// </param>
            /// <param name='bgpCommunityListName'>
            /// The BGP community list name.
            /// </param>
            public static IPage<BgpCommunity> Get(this IPeeringBgpCommunityListsOperations operations, string resourceGroupName, string peeringName, string bgpCommunityListName)
            {
                return operations.GetAsync(resourceGroupName, peeringName, bgpCommunityListName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the BGP community list.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='peeringName'>
            /// The peering name.
            /// </param>
            /// <param name='bgpCommunityListName'>
            /// The BGP community list name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<BgpCommunity>> GetAsync(this IPeeringBgpCommunityListsOperations operations, string resourceGroupName, string peeringName, string bgpCommunityListName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, peeringName, bgpCommunityListName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates or updates the BGP community list.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='peeringName'>
            /// The peering name.
            /// </param>
            /// <param name='bgpCommunityListName'>
            /// The BGP community list name.
            /// </param>
            public static IPage<BgpCommunity> CreateOrUpdate(this IPeeringBgpCommunityListsOperations operations, string resourceGroupName, string peeringName, string bgpCommunityListName)
            {
                return operations.CreateOrUpdateAsync(resourceGroupName, peeringName, bgpCommunityListName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates or updates the BGP community list.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The resource group name.
            /// </param>
            /// <param name='peeringName'>
            /// The peering name.
            /// </param>
            /// <param name='bgpCommunityListName'>
            /// The BGP community list name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<BgpCommunity>> CreateOrUpdateAsync(this IPeeringBgpCommunityListsOperations operations, string resourceGroupName, string peeringName, string bgpCommunityListName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, peeringName, bgpCommunityListName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets the BGP community list.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<BgpCommunity> GetNext(this IPeeringBgpCommunityListsOperations operations, string nextPageLink)
            {
                return operations.GetNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the BGP community list.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<BgpCommunity>> GetNextAsync(this IPeeringBgpCommunityListsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates or updates the BGP community list.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<BgpCommunity> CreateOrUpdateNext(this IPeeringBgpCommunityListsOperations operations, string nextPageLink)
            {
                return operations.CreateOrUpdateNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates or updates the BGP community list.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<BgpCommunity>> CreateOrUpdateNextAsync(this IPeeringBgpCommunityListsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
