// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Peering.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The peering carrier class.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class PeeringPartner
    {
        /// <summary>
        /// Initializes a new instance of the PeeringPartner class.
        /// </summary>
        public PeeringPartner()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PeeringPartner class.
        /// </summary>
        /// <param name="partnerName">Gets or sets the carrier name.</param>
        /// <param name="peeringLocations">Gets or sets the peering
        /// locations.</param>
        /// <param name="name">Gets or sets the resource name.</param>
        /// <param name="id">Gets or sets the resource id.</param>
        /// <param name="type">Gets or sets the resource type.</param>
        public PeeringPartner(string partnerName = default(string), IList<string> peeringLocations = default(IList<string>), string name = default(string), string id = default(string), string type = default(string))
        {
            PartnerName = partnerName;
            PeeringLocations = peeringLocations;
            Name = name;
            Id = id;
            Type = type;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the carrier name.
        /// </summary>
        [JsonProperty(PropertyName = "properties.partnerName")]
        public string PartnerName { get; set; }

        /// <summary>
        /// Gets or sets the peering locations.
        /// </summary>
        [JsonProperty(PropertyName = "properties.peeringLocations")]
        public IList<string> PeeringLocations { get; set; }

        /// <summary>
        /// Gets or sets the resource name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets or sets the resource id.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets or sets the resource type.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

    }
}
