// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Peering.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The peering properties carrier class.
    /// </summary>
    public partial class PeeringPropertiesPartner
    {
        /// <summary>
        /// Initializes a new instance of the PeeringPropertiesPartner class.
        /// </summary>
        public PeeringPropertiesPartner()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PeeringPropertiesPartner class.
        /// </summary>
        /// <param name="partnerName">Gets or sets the carrier name.</param>
        /// <param name="serviceTag">Gets or sets the service tag. Not set by
        /// frontend (readonly to user)</param>
        /// <param name="prefixes">Gets or sets the list of prefixes. Set not
        /// by AddOrUpdate (hidden to user in AddOrUpdate)</param>
        public PeeringPropertiesPartner(string partnerName = default(string), string serviceTag = default(string), IDictionary<string, PeeringPrefix> prefixes = default(IDictionary<string, PeeringPrefix>))
        {
            PartnerName = partnerName;
            ServiceTag = serviceTag;
            Prefixes = prefixes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the carrier name.
        /// </summary>
        [JsonProperty(PropertyName = "partnerName")]
        public string PartnerName { get; set; }

        /// <summary>
        /// Gets or sets the service tag. Not set by frontend (readonly to
        /// user)
        /// </summary>
        [JsonProperty(PropertyName = "serviceTag")]
        public string ServiceTag { get; set; }

        /// <summary>
        /// Gets or sets the list of prefixes. Set not by AddOrUpdate (hidden
        /// to user in AddOrUpdate)
        /// </summary>
        [JsonProperty(PropertyName = "prefixes")]
        public IDictionary<string, PeeringPrefix> Prefixes { get; set; }

    }
}
