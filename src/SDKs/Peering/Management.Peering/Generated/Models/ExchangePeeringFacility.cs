// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Peering.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The properties that define an exchange peering facility.
    /// </summary>
    public partial class ExchangePeeringFacility
    {
        /// <summary>
        /// Initializes a new instance of the ExchangePeeringFacility class.
        /// </summary>
        public ExchangePeeringFacility()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ExchangePeeringFacility class.
        /// </summary>
        /// <param name="exchangeName">The name of the exchange peering
        /// facility.</param>
        /// <param name="bandwidthInMbps">The bandwidth of the connection
        /// between Microsoft and the exchange peering facility.</param>
        /// <param name="microsoftIPv4Address">The IPv4 address of Microsoft at
        /// the exchange peering facility.</param>
        /// <param name="microsoftIPv6Address">The IPv6 address of Microsoft at
        /// the exchange peering facility.</param>
        /// <param name="facilityIPv4Prefix">The IPv4 prefixes associated with
        /// the exchange peering facility.</param>
        /// <param name="facilityIPv6Prefix">The IPv6 prefixes associated with
        /// the exchange peering facility.</param>
        /// <param name="peeringDBFacilityId">The PeeringDB.com ID of the
        /// facility.</param>
        /// <param name="peeringDBFacilityLink">The PeeringDB.com URL of the
        /// facility.</param>
        public ExchangePeeringFacility(string exchangeName = default(string), int? bandwidthInMbps = default(int?), string microsoftIPv4Address = default(string), string microsoftIPv6Address = default(string), string facilityIPv4Prefix = default(string), string facilityIPv6Prefix = default(string), int? peeringDBFacilityId = default(int?), string peeringDBFacilityLink = default(string))
        {
            ExchangeName = exchangeName;
            BandwidthInMbps = bandwidthInMbps;
            MicrosoftIPv4Address = microsoftIPv4Address;
            MicrosoftIPv6Address = microsoftIPv6Address;
            FacilityIPv4Prefix = facilityIPv4Prefix;
            FacilityIPv6Prefix = facilityIPv6Prefix;
            PeeringDBFacilityId = peeringDBFacilityId;
            PeeringDBFacilityLink = peeringDBFacilityLink;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the exchange peering facility.
        /// </summary>
        [JsonProperty(PropertyName = "exchangeName")]
        public string ExchangeName { get; set; }

        /// <summary>
        /// Gets or sets the bandwidth of the connection between Microsoft and
        /// the exchange peering facility.
        /// </summary>
        [JsonProperty(PropertyName = "bandwidthInMbps")]
        public int? BandwidthInMbps { get; set; }

        /// <summary>
        /// Gets or sets the IPv4 address of Microsoft at the exchange peering
        /// facility.
        /// </summary>
        [JsonProperty(PropertyName = "microsoftIPv4Address")]
        public string MicrosoftIPv4Address { get; set; }

        /// <summary>
        /// Gets or sets the IPv6 address of Microsoft at the exchange peering
        /// facility.
        /// </summary>
        [JsonProperty(PropertyName = "microsoftIPv6Address")]
        public string MicrosoftIPv6Address { get; set; }

        /// <summary>
        /// Gets or sets the IPv4 prefixes associated with the exchange peering
        /// facility.
        /// </summary>
        [JsonProperty(PropertyName = "facilityIPv4Prefix")]
        public string FacilityIPv4Prefix { get; set; }

        /// <summary>
        /// Gets or sets the IPv6 prefixes associated with the exchange peering
        /// facility.
        /// </summary>
        [JsonProperty(PropertyName = "facilityIPv6Prefix")]
        public string FacilityIPv6Prefix { get; set; }

        /// <summary>
        /// Gets or sets the PeeringDB.com ID of the facility.
        /// </summary>
        [JsonProperty(PropertyName = "peeringDBFacilityId")]
        public int? PeeringDBFacilityId { get; set; }

        /// <summary>
        /// Gets or sets the PeeringDB.com URL of the facility.
        /// </summary>
        [JsonProperty(PropertyName = "peeringDBFacilityLink")]
        public string PeeringDBFacilityLink { get; set; }

    }
}
