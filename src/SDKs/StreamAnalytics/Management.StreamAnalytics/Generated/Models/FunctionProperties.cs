// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.StreamAnalytics.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.StreamAnalytics;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The properties that are associated with a function.
    /// </summary>
    public partial class FunctionProperties
    {
        /// <summary>
        /// Initializes a new instance of the FunctionProperties class.
        /// </summary>
        public FunctionProperties()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FunctionProperties class.
        /// </summary>
        /// <param name="etag">The current entity tag for the function. This is
        /// an opaque string. You can use it to detect whether the resource has
        /// changed between requests. You can also use it in the If-Match or
        /// If-None-Match headers for write operations for optimistic
        /// concurrency.</param>
        public FunctionProperties(string etag = default(string))
        {
            Etag = etag;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the current entity tag for the function. This is an opaque
        /// string. You can use it to detect whether the resource has changed
        /// between requests. You can also use it in the If-Match or
        /// If-None-Match headers for write operations for optimistic
        /// concurrency.
        /// </summary>
        [JsonProperty(PropertyName = "etag")]
        public string Etag { get; private set; }

    }
}
