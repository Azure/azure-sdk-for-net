// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Consumption
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for UsageDetailsOperations.
    /// </summary>
    public static partial class UsageDetailsOperationsExtensions
    {
            /// <summary>
            /// Lists the usage details for a scope by billing period. Usage details are
            /// available via this API only for May 1, 2014 or later.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/consumption/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='expand'>
            /// May be used to expand the properties/additionalProperties or
            /// properties/meterDetails within a list of usage details. By default, these
            /// fields are not included when listing usage details.
            /// </param>
            /// <param name='filter'>
            /// May be used to filter usageDetails by properties/usageEnd (Utc time),
            /// properties/usageStart (Utc time), properties/resourceGroup,
            /// properties/instanceName or properties/instanceId. The filter supports 'eq',
            /// 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne',
            /// 'or', or 'not'.
            /// </param>
            /// <param name='skiptoken'>
            /// Skiptoken is only used if a previous operation returned a partial result.
            /// If a previous response contains a nextLink element, the value of the
            /// nextLink element will include a skiptoken parameter that specifies a
            /// starting point to use for subsequent calls.
            /// </param>
            /// <param name='top'>
            /// May be used to limit the number of results to the most recent N
            /// usageDetails.
            /// </param>
            public static IPage<UsageDetail> List(this IUsageDetailsOperations operations, string expand = default(string), string filter = default(string), string skiptoken = default(string), int? top = default(int?))
            {
                return operations.ListAsync(expand, filter, skiptoken, top).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists the usage details for a scope by billing period. Usage details are
            /// available via this API only for May 1, 2014 or later.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/consumption/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='expand'>
            /// May be used to expand the properties/additionalProperties or
            /// properties/meterDetails within a list of usage details. By default, these
            /// fields are not included when listing usage details.
            /// </param>
            /// <param name='filter'>
            /// May be used to filter usageDetails by properties/usageEnd (Utc time),
            /// properties/usageStart (Utc time), properties/resourceGroup,
            /// properties/instanceName or properties/instanceId. The filter supports 'eq',
            /// 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne',
            /// 'or', or 'not'.
            /// </param>
            /// <param name='skiptoken'>
            /// Skiptoken is only used if a previous operation returned a partial result.
            /// If a previous response contains a nextLink element, the value of the
            /// nextLink element will include a skiptoken parameter that specifies a
            /// starting point to use for subsequent calls.
            /// </param>
            /// <param name='top'>
            /// May be used to limit the number of results to the most recent N
            /// usageDetails.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<UsageDetail>> ListAsync(this IUsageDetailsOperations operations, string expand = default(string), string filter = default(string), string skiptoken = default(string), int? top = default(int?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(expand, filter, skiptoken, top, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists the usage details for a scope by billing period. Usage details are
            /// available via this API only for May 1, 2014 or later.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/consumption/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='billingPeriodName'>
            /// Billing Period Name.
            /// </param>
            /// <param name='expand'>
            /// May be used to expand the properties/additionalProperties or
            /// properties/meterDetails within a list of usage details. By default, these
            /// fields are not included when listing usage details.
            /// </param>
            /// <param name='filter'>
            /// May be used to filter usageDetails by properties/usageEnd (Utc time),
            /// properties/usageStart (Utc time), properties/resourceGroup,
            /// properties/instanceName or properties/instanceId. The filter supports 'eq',
            /// 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne',
            /// 'or', or 'not'.
            /// </param>
            /// <param name='skiptoken'>
            /// Skiptoken is only used if a previous operation returned a partial result.
            /// If a previous response contains a nextLink element, the value of the
            /// nextLink element will include a skiptoken parameter that specifies a
            /// starting point to use for subsequent calls.
            /// </param>
            /// <param name='top'>
            /// May be used to limit the number of results to the most recent N
            /// usageDetails.
            /// </param>
            public static IPage<UsageDetail> ListByBillingPeriod(this IUsageDetailsOperations operations, string billingPeriodName, string expand = default(string), string filter = default(string), string skiptoken = default(string), int? top = default(int?))
            {
                return operations.ListByBillingPeriodAsync(billingPeriodName, expand, filter, skiptoken, top).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists the usage details for a scope by billing period. Usage details are
            /// available via this API only for May 1, 2014 or later.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/consumption/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='billingPeriodName'>
            /// Billing Period Name.
            /// </param>
            /// <param name='expand'>
            /// May be used to expand the properties/additionalProperties or
            /// properties/meterDetails within a list of usage details. By default, these
            /// fields are not included when listing usage details.
            /// </param>
            /// <param name='filter'>
            /// May be used to filter usageDetails by properties/usageEnd (Utc time),
            /// properties/usageStart (Utc time), properties/resourceGroup,
            /// properties/instanceName or properties/instanceId. The filter supports 'eq',
            /// 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne',
            /// 'or', or 'not'.
            /// </param>
            /// <param name='skiptoken'>
            /// Skiptoken is only used if a previous operation returned a partial result.
            /// If a previous response contains a nextLink element, the value of the
            /// nextLink element will include a skiptoken parameter that specifies a
            /// starting point to use for subsequent calls.
            /// </param>
            /// <param name='top'>
            /// May be used to limit the number of results to the most recent N
            /// usageDetails.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<UsageDetail>> ListByBillingPeriodAsync(this IUsageDetailsOperations operations, string billingPeriodName, string expand = default(string), string filter = default(string), string skiptoken = default(string), int? top = default(int?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByBillingPeriodWithHttpMessagesAsync(billingPeriodName, expand, filter, skiptoken, top, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists the usage details for a scope by billing period. Usage details are
            /// available via this API only for May 1, 2014 or later.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/consumption/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<UsageDetail> ListNext(this IUsageDetailsOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists the usage details for a scope by billing period. Usage details are
            /// available via this API only for May 1, 2014 or later.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/consumption/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<UsageDetail>> ListNextAsync(this IUsageDetailsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists the usage details for a scope by billing period. Usage details are
            /// available via this API only for May 1, 2014 or later.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/consumption/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<UsageDetail> ListByBillingPeriodNext(this IUsageDetailsOperations operations, string nextPageLink)
            {
                return operations.ListByBillingPeriodNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists the usage details for a scope by billing period. Usage details are
            /// available via this API only for May 1, 2014 or later.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/consumption/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<UsageDetail>> ListByBillingPeriodNextAsync(this IUsageDetailsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByBillingPeriodNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
