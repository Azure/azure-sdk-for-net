// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Consumption.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ForecastPropertiesConfidenceLevelsItem
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ForecastPropertiesConfidenceLevelsItem class.
        /// </summary>
        public ForecastPropertiesConfidenceLevelsItem()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ForecastPropertiesConfidenceLevelsItem class.
        /// </summary>
        /// <param name="percentage">The percentage level of the
        /// confidence</param>
        /// <param name="bound">The boundary of the percentage, values could be
        /// 'Upper' or 'Lower'. Possible values include: 'Upper',
        /// 'Lower'</param>
        /// <param name="value">The amount of forecast within the percentage
        /// level</param>
        public ForecastPropertiesConfidenceLevelsItem(decimal? percentage = default(decimal?), string bound = default(string), decimal? value = default(decimal?))
        {
            Percentage = percentage;
            Bound = bound;
            Value = value;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the percentage level of the confidence
        /// </summary>
        [JsonProperty(PropertyName = "percentage")]
        public decimal? Percentage { get; private set; }

        /// <summary>
        /// Gets or sets the boundary of the percentage, values could be
        /// 'Upper' or 'Lower'. Possible values include: 'Upper', 'Lower'
        /// </summary>
        [JsonProperty(PropertyName = "bound")]
        public string Bound { get; set; }

        /// <summary>
        /// Gets the amount of forecast within the percentage level
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public decimal? Value { get; private set; }

    }
}
