// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Consumption
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for BalancesOperations.
    /// </summary>
    public static partial class BalancesOperationsExtensions
    {
            /// <summary>
            /// Gets the balances for a scope by billingAccountId. Balances are available
            /// via this API only for May 1, 2014 or later.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/consumption/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='billingAccountId'>
            /// BillingAccount ID
            /// </param>
            public static Balance GetByBillingAccount(this IBalancesOperations operations, string billingAccountId)
            {
                return operations.GetByBillingAccountAsync(billingAccountId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the balances for a scope by billingAccountId. Balances are available
            /// via this API only for May 1, 2014 or later.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/consumption/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='billingAccountId'>
            /// BillingAccount ID
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Balance> GetByBillingAccountAsync(this IBalancesOperations operations, string billingAccountId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetByBillingAccountWithHttpMessagesAsync(billingAccountId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets the balances for a scope by billing period and billingAccountId.
            /// Balances are available via this API only for May 1, 2014 or later.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/consumption/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='billingAccountId'>
            /// BillingAccount ID
            /// </param>
            /// <param name='billingPeriodName'>
            /// Billing Period Name.
            /// </param>
            public static Balance GetForBillingPeriodByBillingAccount(this IBalancesOperations operations, string billingAccountId, string billingPeriodName)
            {
                return operations.GetForBillingPeriodByBillingAccountAsync(billingAccountId, billingPeriodName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the balances for a scope by billing period and billingAccountId.
            /// Balances are available via this API only for May 1, 2014 or later.
            /// <see href="https://docs.microsoft.com/en-us/rest/api/consumption/" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='billingAccountId'>
            /// BillingAccount ID
            /// </param>
            /// <param name='billingPeriodName'>
            /// Billing Period Name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Balance> GetForBillingPeriodByBillingAccountAsync(this IBalancesOperations operations, string billingAccountId, string billingPeriodName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetForBillingPeriodByBillingAccountWithHttpMessagesAsync(billingAccountId, billingPeriodName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
