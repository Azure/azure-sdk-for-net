// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Server role migration result
    /// </summary>
    public partial class StartMigrationScenarioServerRoleResult
    {
        /// <summary>
        /// Initializes a new instance of the
        /// StartMigrationScenarioServerRoleResult class.
        /// </summary>
        public StartMigrationScenarioServerRoleResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// StartMigrationScenarioServerRoleResult class.
        /// </summary>
        /// <param name="name">Name of server role.</param>
        /// <param name="state">Current state of migration. Possible values
        /// include: 'None', 'InProgress', 'Failed', 'Warning', 'Completed',
        /// 'Skipped', 'Stopped'</param>
        /// <param name="exceptionsAndWarnings">Migration exceptions and
        /// warnings.</param>
        public StartMigrationScenarioServerRoleResult(string name = default(string), string state = default(string), IList<ReportableException> exceptionsAndWarnings = default(IList<ReportableException>))
        {
            Name = name;
            State = state;
            ExceptionsAndWarnings = exceptionsAndWarnings;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets name of server role.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets current state of migration. Possible values include: 'None',
        /// 'InProgress', 'Failed', 'Warning', 'Completed', 'Skipped',
        /// 'Stopped'
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public string State { get; private set; }

        /// <summary>
        /// Gets migration exceptions and warnings.
        /// </summary>
        [JsonProperty(PropertyName = "exceptionsAndWarnings")]
        public IList<ReportableException> ExceptionsAndWarnings { get; private set; }

    }
}
