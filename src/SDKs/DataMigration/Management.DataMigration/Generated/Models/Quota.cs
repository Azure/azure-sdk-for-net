// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Describes a quota for or usage details about a resource
    /// </summary>
    public partial class Quota
    {
        /// <summary>
        /// Initializes a new instance of the Quota class.
        /// </summary>
        public Quota()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Quota class.
        /// </summary>
        /// <param name="currentValue">The current value of the quota. If null
        /// or missing, the current value cannot be determined in the context
        /// of the request.</param>
        /// <param name="id">The resource ID of the quota object</param>
        /// <param name="limit">The maximum value of the quota. If null or
        /// missing, the quota has no maximum, in which case it merely tracks
        /// usage.</param>
        /// <param name="name">The name of the quota</param>
        /// <param name="unit">The unit for the quota, such as Count, Bytes,
        /// BytesPerSecond, etc.</param>
        public Quota(double? currentValue = default(double?), string id = default(string), double? limit = default(double?), QuotaName name = default(QuotaName), string unit = default(string))
        {
            CurrentValue = currentValue;
            Id = id;
            Limit = limit;
            Name = name;
            Unit = unit;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the current value of the quota. If null or missing,
        /// the current value cannot be determined in the context of the
        /// request.
        /// </summary>
        [JsonProperty(PropertyName = "currentValue")]
        public double? CurrentValue { get; set; }

        /// <summary>
        /// Gets or sets the resource ID of the quota object
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets the maximum value of the quota. If null or missing,
        /// the quota has no maximum, in which case it merely tracks usage.
        /// </summary>
        [JsonProperty(PropertyName = "limit")]
        public double? Limit { get; set; }

        /// <summary>
        /// Gets or sets the name of the quota
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public QuotaName Name { get; set; }

        /// <summary>
        /// Gets or sets the unit for the quota, such as Count, Bytes,
        /// BytesPerSecond, etc.
        /// </summary>
        [JsonProperty(PropertyName = "unit")]
        public string Unit { get; set; }

    }
}
