// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Input for task that migrates SQL Server databases to Azure SQL Database
    /// Managed Instance online scenario.
    /// </summary>
    public partial class MigrateSqlServerSqlMISyncTaskInput : SqlServerSqlMISyncTaskInput
    {
        /// <summary>
        /// Initializes a new instance of the
        /// MigrateSqlServerSqlMISyncTaskInput class.
        /// </summary>
        public MigrateSqlServerSqlMISyncTaskInput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// MigrateSqlServerSqlMISyncTaskInput class.
        /// </summary>
        /// <param name="selectedDatabases">Databases to migrate</param>
        /// <param name="storageResourceId">Fully qualified resourceId of
        /// storage</param>
        /// <param name="sourceConnectionInfo">Connection information for
        /// source SQL Server</param>
        /// <param name="targetConnectionInfo">Connection information for Azure
        /// SQL Database Managed Instance</param>
        /// <param name="azureApp">Azure Active Directory Application the DMS
        /// instance will use to connect to the target instance of Azure SQL
        /// Database Managed Instance and the Azure Storage Account</param>
        /// <param name="backupFileShare">Backup file share information for all
        /// selected databases.</param>
        public MigrateSqlServerSqlMISyncTaskInput(IList<MigrateSqlServerSqlMIDatabaseInput> selectedDatabases, string storageResourceId, SqlConnectionInfo sourceConnectionInfo, MiSqlConnectionInfo targetConnectionInfo, AzureActiveDirectoryApp azureApp, FileShare backupFileShare = default(FileShare))
            : base(selectedDatabases, storageResourceId, sourceConnectionInfo, targetConnectionInfo, azureApp, backupFileShare)
        {
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
