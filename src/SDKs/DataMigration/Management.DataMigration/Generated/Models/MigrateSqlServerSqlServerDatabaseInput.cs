// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Database specific information for SQL to SQL migration task inputs
    /// </summary>
    public partial class MigrateSqlServerSqlServerDatabaseInput
    {
        /// <summary>
        /// Initializes a new instance of the
        /// MigrateSqlServerSqlServerDatabaseInput class.
        /// </summary>
        public MigrateSqlServerSqlServerDatabaseInput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// MigrateSqlServerSqlServerDatabaseInput class.
        /// </summary>
        /// <param name="name">Name of the database</param>
        /// <param name="restoreDatabaseName">Name of the database at
        /// destination</param>
        /// <param name="backupAndRestoreFolder">The backup and restore
        /// folder</param>
        /// <param name="databaseFiles">The list of database files</param>
        public MigrateSqlServerSqlServerDatabaseInput(string name = default(string), string restoreDatabaseName = default(string), string backupAndRestoreFolder = default(string), IList<DatabaseFileInput> databaseFiles = default(IList<DatabaseFileInput>))
        {
            Name = name;
            RestoreDatabaseName = restoreDatabaseName;
            BackupAndRestoreFolder = backupAndRestoreFolder;
            DatabaseFiles = databaseFiles;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the database
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets name of the database at destination
        /// </summary>
        [JsonProperty(PropertyName = "restoreDatabaseName")]
        public string RestoreDatabaseName { get; set; }

        /// <summary>
        /// Gets or sets the backup and restore folder
        /// </summary>
        [JsonProperty(PropertyName = "backupAndRestoreFolder")]
        public string BackupAndRestoreFolder { get; set; }

        /// <summary>
        /// Gets or sets the list of database files
        /// </summary>
        [JsonProperty(PropertyName = "databaseFiles")]
        public IList<DatabaseFileInput> DatabaseFiles { get; set; }

    }
}
