// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Database input for migrate schema Sql Server to Azure SQL Server
    /// scenario
    /// </summary>
    public partial class MigrateSchemaSqlServerSqlDbDatabaseInput
    {
        /// <summary>
        /// Initializes a new instance of the
        /// MigrateSchemaSqlServerSqlDbDatabaseInput class.
        /// </summary>
        public MigrateSchemaSqlServerSqlDbDatabaseInput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// MigrateSchemaSqlServerSqlDbDatabaseInput class.
        /// </summary>
        /// <param name="name">Name of source database</param>
        /// <param name="targetDatabaseName">Name of target database</param>
        /// <param name="schemaSetting">Database schema migration
        /// settings</param>
        public MigrateSchemaSqlServerSqlDbDatabaseInput(string name = default(string), string targetDatabaseName = default(string), SchemaMigrationSetting schemaSetting = default(SchemaMigrationSetting))
        {
            Name = name;
            TargetDatabaseName = targetDatabaseName;
            SchemaSetting = schemaSetting;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of source database
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets name of target database
        /// </summary>
        [JsonProperty(PropertyName = "targetDatabaseName")]
        public string TargetDatabaseName { get; set; }

        /// <summary>
        /// Gets or sets database schema migration settings
        /// </summary>
        [JsonProperty(PropertyName = "schemaSetting")]
        public SchemaMigrationSetting SchemaSetting { get; set; }

    }
}
