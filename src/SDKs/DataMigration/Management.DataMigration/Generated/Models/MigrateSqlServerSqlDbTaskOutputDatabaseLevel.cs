// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    [Newtonsoft.Json.JsonObject("DatabaseLevelOutput")]
    public partial class MigrateSqlServerSqlDbTaskOutputDatabaseLevel : MigrateSqlServerSqlDbTaskOutput
    {
        /// <summary>
        /// Initializes a new instance of the
        /// MigrateSqlServerSqlDbTaskOutputDatabaseLevel class.
        /// </summary>
        public MigrateSqlServerSqlDbTaskOutputDatabaseLevel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// MigrateSqlServerSqlDbTaskOutputDatabaseLevel class.
        /// </summary>
        /// <param name="id">Result identifier</param>
        /// <param name="databaseName">Name of the item</param>
        /// <param name="startedOn">Migration start time</param>
        /// <param name="endedOn">Migration end time</param>
        /// <param name="state">Current state of migration. Possible values
        /// include: 'None', 'InProgress', 'Failed', 'Warning', 'Completed',
        /// 'Skipped', 'Stopped'</param>
        /// <param name="stage">Migration stage that this database is in.
        /// Possible values include: 'None', 'Initialize', 'Backup',
        /// 'FileCopy', 'Restore', 'Completed'</param>
        /// <param name="statusMessage">Status message</param>
        /// <param name="message">Migration progress message</param>
        /// <param name="numberOfObjects">Number of objects</param>
        /// <param name="numberOfObjectsCompleted">Number of successfully
        /// completed objects</param>
        /// <param name="errorCount">Number of database/object errors.</param>
        /// <param name="errorPrefix">Wildcard string prefix to use for
        /// querying all errors of the item</param>
        /// <param name="resultPrefix">Wildcard string prefix to use for
        /// querying all sub-tem results of the item</param>
        /// <param name="exceptionsAndWarnings">Migration exceptions and
        /// warnings.</param>
        /// <param name="objectSummary">Summary of object results in the
        /// migration</param>
        public MigrateSqlServerSqlDbTaskOutputDatabaseLevel(string id = default(string), string databaseName = default(string), System.DateTimeOffset? startedOn = default(System.DateTimeOffset?), System.DateTimeOffset? endedOn = default(System.DateTimeOffset?), string state = default(string), string stage = default(string), string statusMessage = default(string), string message = default(string), long? numberOfObjects = default(long?), long? numberOfObjectsCompleted = default(long?), long? errorCount = default(long?), string errorPrefix = default(string), string resultPrefix = default(string), IList<ReportableException> exceptionsAndWarnings = default(IList<ReportableException>), IDictionary<string, DataItemMigrationSummaryResult> objectSummary = default(IDictionary<string, DataItemMigrationSummaryResult>))
            : base(id)
        {
            DatabaseName = databaseName;
            StartedOn = startedOn;
            EndedOn = endedOn;
            State = state;
            Stage = stage;
            StatusMessage = statusMessage;
            Message = message;
            NumberOfObjects = numberOfObjects;
            NumberOfObjectsCompleted = numberOfObjectsCompleted;
            ErrorCount = errorCount;
            ErrorPrefix = errorPrefix;
            ResultPrefix = resultPrefix;
            ExceptionsAndWarnings = exceptionsAndWarnings;
            ObjectSummary = objectSummary;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets name of the item
        /// </summary>
        [JsonProperty(PropertyName = "databaseName")]
        public string DatabaseName { get; private set; }

        /// <summary>
        /// Gets migration start time
        /// </summary>
        [JsonProperty(PropertyName = "startedOn")]
        public System.DateTimeOffset? StartedOn { get; private set; }

        /// <summary>
        /// Gets migration end time
        /// </summary>
        [JsonProperty(PropertyName = "endedOn")]
        public System.DateTimeOffset? EndedOn { get; private set; }

        /// <summary>
        /// Gets current state of migration. Possible values include: 'None',
        /// 'InProgress', 'Failed', 'Warning', 'Completed', 'Skipped',
        /// 'Stopped'
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public string State { get; private set; }

        /// <summary>
        /// Gets migration stage that this database is in. Possible values
        /// include: 'None', 'Initialize', 'Backup', 'FileCopy', 'Restore',
        /// 'Completed'
        /// </summary>
        [JsonProperty(PropertyName = "stage")]
        public string Stage { get; private set; }

        /// <summary>
        /// Gets status message
        /// </summary>
        [JsonProperty(PropertyName = "statusMessage")]
        public string StatusMessage { get; private set; }

        /// <summary>
        /// Gets migration progress message
        /// </summary>
        [JsonProperty(PropertyName = "message")]
        public string Message { get; private set; }

        /// <summary>
        /// Gets number of objects
        /// </summary>
        [JsonProperty(PropertyName = "numberOfObjects")]
        public long? NumberOfObjects { get; private set; }

        /// <summary>
        /// Gets number of successfully completed objects
        /// </summary>
        [JsonProperty(PropertyName = "numberOfObjectsCompleted")]
        public long? NumberOfObjectsCompleted { get; private set; }

        /// <summary>
        /// Gets number of database/object errors.
        /// </summary>
        [JsonProperty(PropertyName = "errorCount")]
        public long? ErrorCount { get; private set; }

        /// <summary>
        /// Gets wildcard string prefix to use for querying all errors of the
        /// item
        /// </summary>
        [JsonProperty(PropertyName = "errorPrefix")]
        public string ErrorPrefix { get; private set; }

        /// <summary>
        /// Gets wildcard string prefix to use for querying all sub-tem results
        /// of the item
        /// </summary>
        [JsonProperty(PropertyName = "resultPrefix")]
        public string ResultPrefix { get; private set; }

        /// <summary>
        /// Gets migration exceptions and warnings.
        /// </summary>
        [JsonProperty(PropertyName = "exceptionsAndWarnings")]
        public IList<ReportableException> ExceptionsAndWarnings { get; private set; }

        /// <summary>
        /// Gets summary of object results in the migration
        /// </summary>
        [JsonProperty(PropertyName = "objectSummary")]
        public IDictionary<string, DataItemMigrationSummaryResult> ObjectSummary { get; private set; }

    }
}
