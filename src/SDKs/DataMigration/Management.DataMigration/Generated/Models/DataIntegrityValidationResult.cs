// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Results for checksum based Data Integrity validation results
    /// </summary>
    public partial class DataIntegrityValidationResult
    {
        /// <summary>
        /// Initializes a new instance of the DataIntegrityValidationResult
        /// class.
        /// </summary>
        public DataIntegrityValidationResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DataIntegrityValidationResult
        /// class.
        /// </summary>
        /// <param name="failedObjects">List of failed table names of source
        /// and target pair</param>
        /// <param name="validationErrors">List of errors that happened while
        /// performing data integrity validation</param>
        public DataIntegrityValidationResult(IDictionary<string, string> failedObjects = default(IDictionary<string, string>), ValidationError validationErrors = default(ValidationError))
        {
            FailedObjects = failedObjects;
            ValidationErrors = validationErrors;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets list of failed table names of source and target pair
        /// </summary>
        [JsonProperty(PropertyName = "failedObjects")]
        public IDictionary<string, string> FailedObjects { get; set; }

        /// <summary>
        /// Gets or sets list of errors that happened while performing data
        /// integrity validation
        /// </summary>
        [JsonProperty(PropertyName = "validationErrors")]
        public ValidationError ValidationErrors { get; set; }

    }
}
