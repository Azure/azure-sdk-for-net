// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Description about the errors happen while performing migration
    /// validation
    /// </summary>
    public partial class ExecutionStatistics
    {
        /// <summary>
        /// Initializes a new instance of the ExecutionStatistics class.
        /// </summary>
        public ExecutionStatistics()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ExecutionStatistics class.
        /// </summary>
        /// <param name="executionCount">No. of query executions</param>
        /// <param name="cpuTimeMs">CPU Time in millisecond(s) for the query
        /// execution</param>
        /// <param name="elapsedTimeMs">Time taken in millisecond(s) for
        /// executing the query</param>
        /// <param name="waitStats">Dictionary of sql query execution wait
        /// types and the respective statistics</param>
        /// <param name="hasErrors">Indicates whether the query resulted in an
        /// error</param>
        /// <param name="sqlErrors">List of sql Errors</param>
        public ExecutionStatistics(long? executionCount = default(long?), double? cpuTimeMs = default(double?), double? elapsedTimeMs = default(double?), IDictionary<string, WaitStatistics> waitStats = default(IDictionary<string, WaitStatistics>), bool? hasErrors = default(bool?), IList<string> sqlErrors = default(IList<string>))
        {
            ExecutionCount = executionCount;
            CpuTimeMs = cpuTimeMs;
            ElapsedTimeMs = elapsedTimeMs;
            WaitStats = waitStats;
            HasErrors = hasErrors;
            SqlErrors = sqlErrors;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets no. of query executions
        /// </summary>
        [JsonProperty(PropertyName = "executionCount")]
        public long? ExecutionCount { get; set; }

        /// <summary>
        /// Gets or sets CPU Time in millisecond(s) for the query execution
        /// </summary>
        [JsonProperty(PropertyName = "cpuTimeMs")]
        public double? CpuTimeMs { get; set; }

        /// <summary>
        /// Gets or sets time taken in millisecond(s) for executing the query
        /// </summary>
        [JsonProperty(PropertyName = "elapsedTimeMs")]
        public double? ElapsedTimeMs { get; set; }

        /// <summary>
        /// Gets or sets dictionary of sql query execution wait types and the
        /// respective statistics
        /// </summary>
        [JsonProperty(PropertyName = "waitStats")]
        public IDictionary<string, WaitStatistics> WaitStats { get; set; }

        /// <summary>
        /// Gets or sets indicates whether the query resulted in an error
        /// </summary>
        [JsonProperty(PropertyName = "hasErrors")]
        public bool? HasErrors { get; set; }

        /// <summary>
        /// Gets or sets list of sql Errors
        /// </summary>
        [JsonProperty(PropertyName = "sqlErrors")]
        public IList<string> SqlErrors { get; set; }

    }
}
