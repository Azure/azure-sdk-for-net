// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Describes the input to the 'finish' MongoDB migration command
    /// </summary>
    public partial class MongoDbFinishCommandInput : MongoDbCommandInput
    {
        /// <summary>
        /// Initializes a new instance of the MongoDbFinishCommandInput class.
        /// </summary>
        public MongoDbFinishCommandInput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MongoDbFinishCommandInput class.
        /// </summary>
        /// <param name="immediate">If true, replication for the affected
        /// objects will be stopped immediately. If false, the migrator will
        /// finish replaying queued events before finishing the
        /// replication.</param>
        /// <param name="objectName">The qualified name of a database or
        /// collection to act upon, or null to act upon the entire
        /// migration</param>
        public MongoDbFinishCommandInput(bool immediate, string objectName = default(string))
            : base(objectName)
        {
            Immediate = immediate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets if true, replication for the affected objects will be
        /// stopped immediately. If false, the migrator will finish replaying
        /// queued events before finishing the replication.
        /// </summary>
        [JsonProperty(PropertyName = "immediate")]
        public bool Immediate { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
