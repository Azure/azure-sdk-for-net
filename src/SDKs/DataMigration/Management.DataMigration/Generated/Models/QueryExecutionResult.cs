// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Describes query analysis results for execution in source and target
    /// </summary>
    public partial class QueryExecutionResult
    {
        /// <summary>
        /// Initializes a new instance of the QueryExecutionResult class.
        /// </summary>
        public QueryExecutionResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the QueryExecutionResult class.
        /// </summary>
        /// <param name="queryText">Query text retrieved from the source
        /// server</param>
        /// <param name="statementsInBatch">Total no. of statements in the
        /// batch</param>
        /// <param name="sourceResult">Query analysis result from the
        /// source</param>
        /// <param name="targetResult">Query analysis result from the
        /// target</param>
        public QueryExecutionResult(string queryText = default(string), long? statementsInBatch = default(long?), ExecutionStatistics sourceResult = default(ExecutionStatistics), ExecutionStatistics targetResult = default(ExecutionStatistics))
        {
            QueryText = queryText;
            StatementsInBatch = statementsInBatch;
            SourceResult = sourceResult;
            TargetResult = targetResult;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets query text retrieved from the source server
        /// </summary>
        [JsonProperty(PropertyName = "queryText")]
        public string QueryText { get; set; }

        /// <summary>
        /// Gets or sets total no. of statements in the batch
        /// </summary>
        [JsonProperty(PropertyName = "statementsInBatch")]
        public long? StatementsInBatch { get; set; }

        /// <summary>
        /// Gets or sets query analysis result from the source
        /// </summary>
        [JsonProperty(PropertyName = "sourceResult")]
        public ExecutionStatistics SourceResult { get; set; }

        /// <summary>
        /// Gets or sets query analysis result from the target
        /// </summary>
        [JsonProperty(PropertyName = "targetResult")]
        public ExecutionStatistics TargetResult { get; set; }

    }
}
