// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    [Newtonsoft.Json.JsonObject("TableLevelOutput")]
    public partial class MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevel : MigrateMySqlAzureDbForMySqlSyncTaskOutput
    {
        /// <summary>
        /// Initializes a new instance of the
        /// MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevel class.
        /// </summary>
        public MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevel class.
        /// </summary>
        /// <param name="id">Result identifier</param>
        /// <param name="tableName">Name of the table</param>
        /// <param name="databaseName">Name of the database</param>
        /// <param name="cdcInsertCounter">Number of applied inserts</param>
        /// <param name="cdcUpdateCounter">Number of applied updates</param>
        /// <param name="cdcDeleteCounter">Number of applied deletes</param>
        /// <param name="fullLoadEstFinishTime">Estimate to finish full
        /// load</param>
        /// <param name="fullLoadStartedOn">Full load start time</param>
        /// <param name="fullLoadEndedOn">Full load end time</param>
        /// <param name="fullLoadTotalRows">Number of rows applied in full
        /// load</param>
        /// <param name="state">Current state of the table migration. Possible
        /// values include: 'BEFORE_LOAD', 'FULL_LOAD', 'COMPLETED',
        /// 'CANCELED', 'ERROR', 'FAILED'</param>
        /// <param name="totalChangesApplied">Total number of applied
        /// changes</param>
        /// <param name="dataErrorsCounter">Number of data errors
        /// occurred</param>
        /// <param name="lastModifiedTime">Last modified time on target</param>
        public MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevel(string id = default(string), string tableName = default(string), string databaseName = default(string), string cdcInsertCounter = default(string), string cdcUpdateCounter = default(string), string cdcDeleteCounter = default(string), System.DateTimeOffset? fullLoadEstFinishTime = default(System.DateTimeOffset?), System.DateTimeOffset? fullLoadStartedOn = default(System.DateTimeOffset?), System.DateTimeOffset? fullLoadEndedOn = default(System.DateTimeOffset?), long? fullLoadTotalRows = default(long?), string state = default(string), long? totalChangesApplied = default(long?), long? dataErrorsCounter = default(long?), System.DateTimeOffset? lastModifiedTime = default(System.DateTimeOffset?))
            : base(id)
        {
            TableName = tableName;
            DatabaseName = databaseName;
            CdcInsertCounter = cdcInsertCounter;
            CdcUpdateCounter = cdcUpdateCounter;
            CdcDeleteCounter = cdcDeleteCounter;
            FullLoadEstFinishTime = fullLoadEstFinishTime;
            FullLoadStartedOn = fullLoadStartedOn;
            FullLoadEndedOn = fullLoadEndedOn;
            FullLoadTotalRows = fullLoadTotalRows;
            State = state;
            TotalChangesApplied = totalChangesApplied;
            DataErrorsCounter = dataErrorsCounter;
            LastModifiedTime = lastModifiedTime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets name of the table
        /// </summary>
        [JsonProperty(PropertyName = "tableName")]
        public string TableName { get; private set; }

        /// <summary>
        /// Gets name of the database
        /// </summary>
        [JsonProperty(PropertyName = "databaseName")]
        public string DatabaseName { get; private set; }

        /// <summary>
        /// Gets number of applied inserts
        /// </summary>
        [JsonProperty(PropertyName = "cdcInsertCounter")]
        public string CdcInsertCounter { get; private set; }

        /// <summary>
        /// Gets number of applied updates
        /// </summary>
        [JsonProperty(PropertyName = "cdcUpdateCounter")]
        public string CdcUpdateCounter { get; private set; }

        /// <summary>
        /// Gets number of applied deletes
        /// </summary>
        [JsonProperty(PropertyName = "cdcDeleteCounter")]
        public string CdcDeleteCounter { get; private set; }

        /// <summary>
        /// Gets estimate to finish full load
        /// </summary>
        [JsonProperty(PropertyName = "fullLoadEstFinishTime")]
        public System.DateTimeOffset? FullLoadEstFinishTime { get; private set; }

        /// <summary>
        /// Gets full load start time
        /// </summary>
        [JsonProperty(PropertyName = "fullLoadStartedOn")]
        public System.DateTimeOffset? FullLoadStartedOn { get; private set; }

        /// <summary>
        /// Gets full load end time
        /// </summary>
        [JsonProperty(PropertyName = "fullLoadEndedOn")]
        public System.DateTimeOffset? FullLoadEndedOn { get; private set; }

        /// <summary>
        /// Gets number of rows applied in full load
        /// </summary>
        [JsonProperty(PropertyName = "fullLoadTotalRows")]
        public long? FullLoadTotalRows { get; private set; }

        /// <summary>
        /// Gets current state of the table migration. Possible values include:
        /// 'BEFORE_LOAD', 'FULL_LOAD', 'COMPLETED', 'CANCELED', 'ERROR',
        /// 'FAILED'
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public string State { get; private set; }

        /// <summary>
        /// Gets total number of applied changes
        /// </summary>
        [JsonProperty(PropertyName = "totalChangesApplied")]
        public long? TotalChangesApplied { get; private set; }

        /// <summary>
        /// Gets number of data errors occurred
        /// </summary>
        [JsonProperty(PropertyName = "dataErrorsCounter")]
        public long? DataErrorsCounter { get; private set; }

        /// <summary>
        /// Gets last modified time on target
        /// </summary>
        [JsonProperty(PropertyName = "lastModifiedTime")]
        public System.DateTimeOffset? LastModifiedTime { get; private set; }

    }
}
