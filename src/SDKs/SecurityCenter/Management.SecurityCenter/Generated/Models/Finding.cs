// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Security.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Describes a vulnerability assessment finding found on a resource
    /// </summary>
    public partial class Finding
    {
        /// <summary>
        /// Initializes a new instance of the Finding class.
        /// </summary>
        public Finding()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Finding class.
        /// </summary>
        /// <param name="id">The identifier of a finding</param>
        /// <param name="title">Finding's title</param>
        /// <param name="findingType">Finding's type</param>
        /// <param name="category">Finding's category</param>
        /// <param name="severity">Finding's severity</param>
        /// <param name="publishedTimestamp">Time where the vulnerability was
        /// first published</param>
        /// <param name="cvss">List of CVSS relevant for this finding</param>
        /// <param name="patchable">Is patchable</param>
        /// <param name="cve">The list of CVE relevant for this finding</param>
        /// <param name="threat">The threat that this finding poses to the
        /// resource</param>
        /// <param name="solution">Recommended Solution to Fix this
        /// Vulnerability</param>
        /// <param name="vendorReference">Reference for the vendor</param>
        /// <param name="detectionType">The type of detection</param>
        /// <param name="result">A descriptive text of the result regarding
        /// this specific finding</param>
        public Finding(string id = default(string), string title = default(string), string findingType = default(string), string category = default(string), string severity = default(string), string publishedTimestamp = default(string), IList<string> cvss = default(IList<string>), string patchable = default(string), IList<LinkItem> cve = default(IList<LinkItem>), string threat = default(string), LinkItem solution = default(LinkItem), IList<LinkItem> vendorReference = default(IList<LinkItem>), string detectionType = default(string), string result = default(string))
        {
            Id = id;
            Title = title;
            FindingType = findingType;
            Category = category;
            Severity = severity;
            PublishedTimestamp = publishedTimestamp;
            Cvss = cvss;
            Patchable = patchable;
            Cve = cve;
            Threat = threat;
            Solution = solution;
            VendorReference = vendorReference;
            DetectionType = detectionType;
            Result = result;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the identifier of a finding
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets finding's title
        /// </summary>
        [JsonProperty(PropertyName = "title")]
        public string Title { get; set; }

        /// <summary>
        /// Gets or sets finding's type
        /// </summary>
        [JsonProperty(PropertyName = "finding_type")]
        public string FindingType { get; set; }

        /// <summary>
        /// Gets or sets finding's category
        /// </summary>
        [JsonProperty(PropertyName = "category")]
        public string Category { get; set; }

        /// <summary>
        /// Gets or sets finding's severity
        /// </summary>
        [JsonProperty(PropertyName = "severity")]
        public string Severity { get; set; }

        /// <summary>
        /// Gets or sets time where the vulnerability was first published
        /// </summary>
        [JsonProperty(PropertyName = "published_timestamp")]
        public string PublishedTimestamp { get; set; }

        /// <summary>
        /// Gets or sets list of CVSS relevant for this finding
        /// </summary>
        [JsonProperty(PropertyName = "cvss")]
        public IList<string> Cvss { get; set; }

        /// <summary>
        /// Gets or sets is patchable
        /// </summary>
        [JsonProperty(PropertyName = "patchable")]
        public string Patchable { get; set; }

        /// <summary>
        /// Gets or sets the list of CVE relevant for this finding
        /// </summary>
        [JsonProperty(PropertyName = "cve")]
        public IList<LinkItem> Cve { get; set; }

        /// <summary>
        /// Gets or sets the threat that this finding poses to the resource
        /// </summary>
        [JsonProperty(PropertyName = "threat")]
        public string Threat { get; set; }

        /// <summary>
        /// Gets or sets recommended Solution to Fix this Vulnerability
        /// </summary>
        [JsonProperty(PropertyName = "solution")]
        public LinkItem Solution { get; set; }

        /// <summary>
        /// Gets or sets reference for the vendor
        /// </summary>
        [JsonProperty(PropertyName = "vendor_reference")]
        public IList<LinkItem> VendorReference { get; set; }

        /// <summary>
        /// Gets or sets the type of detection
        /// </summary>
        [JsonProperty(PropertyName = "detection_type")]
        public string DetectionType { get; set; }

        /// <summary>
        /// Gets or sets a descriptive text of the result regarding this
        /// specific finding
        /// </summary>
        [JsonProperty(PropertyName = "result")]
        public string Result { get; set; }

    }
}
