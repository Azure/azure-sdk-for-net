// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Search.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for SearchMode.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum SearchMode
    {
        [EnumMember(Value = "any")]
        Any,
        [EnumMember(Value = "all")]
        All
    }
    internal static class SearchModeEnumExtension
    {
        internal static string ToSerializedValue(this SearchMode? value)
        {
            return value == null ? null : ((SearchMode)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this SearchMode value)
        {
            switch( value )
            {
                case SearchMode.Any:
                    return "any";
                case SearchMode.All:
                    return "all";
            }
            return null;
        }

        internal static SearchMode? ParseSearchMode(this string value)
        {
            switch( value )
            {
                case "any":
                    return SearchMode.Any;
                case "all":
                    return SearchMode.All;
            }
            return null;
        }
    }
}
