// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Search.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for IndexActionType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum IndexActionType
    {
        [EnumMember(Value = "upload")]
        Upload,
        [EnumMember(Value = "merge")]
        Merge,
        [EnumMember(Value = "mergeOrUpload")]
        MergeOrUpload,
        [EnumMember(Value = "delete")]
        Delete
    }
    internal static class IndexActionTypeEnumExtension
    {
        internal static string ToSerializedValue(this IndexActionType? value)
        {
            return value == null ? null : ((IndexActionType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this IndexActionType value)
        {
            switch( value )
            {
                case IndexActionType.Upload:
                    return "upload";
                case IndexActionType.Merge:
                    return "merge";
                case IndexActionType.MergeOrUpload:
                    return "mergeOrUpload";
                case IndexActionType.Delete:
                    return "delete";
            }
            return null;
        }

        internal static IndexActionType? ParseIndexActionType(this string value)
        {
            switch( value )
            {
                case "upload":
                    return IndexActionType.Upload;
                case "merge":
                    return IndexActionType.Merge;
                case "mergeOrUpload":
                    return IndexActionType.MergeOrUpload;
                case "delete":
                    return IndexActionType.Delete;
            }
            return null;
        }
    }
}
