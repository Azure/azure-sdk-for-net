// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Search.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Limits the number of tokens while indexing. This token filter is
    /// implemented using Apache Lucene.
    /// <see
    /// href="http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilter.html"
    /// />
    /// </summary>
    [Newtonsoft.Json.JsonObject("#Microsoft.Azure.Search.LimitTokenFilter")]
    public partial class LimitTokenFilter : TokenFilter
    {
        /// <summary>
        /// Initializes a new instance of the LimitTokenFilter class.
        /// </summary>
        public LimitTokenFilter()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LimitTokenFilter class.
        /// </summary>
        /// <param name="name">The name of the token filter. It must only
        /// contain letters, digits, spaces, dashes or underscores, can only
        /// start and end with alphanumeric characters, and is limited to 128
        /// characters.</param>
        /// <param name="maxTokenCount">The maximum number of tokens to
        /// produce. Default is 1.</param>
        /// <param name="consumeAllTokens">A value indicating whether all
        /// tokens from the input must be consumed even if maxTokenCount is
        /// reached. Default is false.</param>
        public LimitTokenFilter(string name, int? maxTokenCount = default(int?), bool? consumeAllTokens = default(bool?))
            : base(name)
        {
            MaxTokenCount = maxTokenCount;
            ConsumeAllTokens = consumeAllTokens;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the maximum number of tokens to produce. Default is 1.
        /// </summary>
        [JsonProperty(PropertyName = "maxTokenCount")]
        public int? MaxTokenCount { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether all tokens from the input
        /// must be consumed even if maxTokenCount is reached. Default is
        /// false.
        /// </summary>
        [JsonProperty(PropertyName = "consumeAllTokens")]
        public bool? ConsumeAllTokens { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
