// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Search.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for TextExtractionAlgorithm.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum TextExtractionAlgorithm
    {
        [EnumMember(Value = "printed")]
        Printed,
        [EnumMember(Value = "handwritten")]
        Handwritten
    }
    internal static class TextExtractionAlgorithmEnumExtension
    {
        internal static string ToSerializedValue(this TextExtractionAlgorithm? value)
        {
            return value == null ? null : ((TextExtractionAlgorithm)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this TextExtractionAlgorithm value)
        {
            switch( value )
            {
                case TextExtractionAlgorithm.Printed:
                    return "printed";
                case TextExtractionAlgorithm.Handwritten:
                    return "handwritten";
            }
            return null;
        }

        internal static TextExtractionAlgorithm? ParseTextExtractionAlgorithm(this string value)
        {
            switch( value )
            {
                case "printed":
                    return TextExtractionAlgorithm.Printed;
                case "handwritten":
                    return TextExtractionAlgorithm.Handwritten;
            }
            return null;
        }
    }
}
