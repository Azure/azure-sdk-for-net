// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Search.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for VisualFeatures.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum VisualFeatures
    {
        [EnumMember(Value = "categories")]
        Categories,
        [EnumMember(Value = "tags")]
        Tags,
        [EnumMember(Value = "description")]
        Description,
        [EnumMember(Value = "faces")]
        Faces,
        [EnumMember(Value = "imageType")]
        ImageType,
        [EnumMember(Value = "color")]
        Color
    }
    internal static class VisualFeaturesEnumExtension
    {
        internal static string ToSerializedValue(this VisualFeatures? value)
        {
            return value == null ? null : ((VisualFeatures)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this VisualFeatures value)
        {
            switch( value )
            {
                case VisualFeatures.Categories:
                    return "categories";
                case VisualFeatures.Tags:
                    return "tags";
                case VisualFeatures.Description:
                    return "description";
                case VisualFeatures.Faces:
                    return "faces";
                case VisualFeatures.ImageType:
                    return "imageType";
                case VisualFeatures.Color:
                    return "color";
            }
            return null;
        }

        internal static VisualFeatures? ParseVisualFeatures(this string value)
        {
            switch( value )
            {
                case "categories":
                    return VisualFeatures.Categories;
                case "tags":
                    return VisualFeatures.Tags;
                case "description":
                    return VisualFeatures.Description;
                case "faces":
                    return VisualFeatures.Faces;
                case "imageType":
                    return VisualFeatures.ImageType;
                case "color":
                    return VisualFeatures.Color;
            }
            return null;
        }
    }
}
