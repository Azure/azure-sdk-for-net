// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Search.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Provides parameter values to a magnitude scoring function.
    /// </summary>
    public partial class MagnitudeScoringParameters
    {
        /// <summary>
        /// Initializes a new instance of the MagnitudeScoringParameters class.
        /// </summary>
        public MagnitudeScoringParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MagnitudeScoringParameters class.
        /// </summary>
        /// <param name="boostingRangeStart">The field value at which boosting
        /// starts.</param>
        /// <param name="boostingRangeEnd">The field value at which boosting
        /// ends.</param>
        /// <param name="shouldBoostBeyondRangeByConstant">A value indicating
        /// whether to apply a constant boost for field values beyond the range
        /// end value; default is false.</param>
        public MagnitudeScoringParameters(double boostingRangeStart, double boostingRangeEnd, bool? shouldBoostBeyondRangeByConstant = default(bool?))
        {
            BoostingRangeStart = boostingRangeStart;
            BoostingRangeEnd = boostingRangeEnd;
            ShouldBoostBeyondRangeByConstant = shouldBoostBeyondRangeByConstant;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the field value at which boosting starts.
        /// </summary>
        [JsonProperty(PropertyName = "boostingRangeStart")]
        public double BoostingRangeStart { get; set; }

        /// <summary>
        /// Gets or sets the field value at which boosting ends.
        /// </summary>
        [JsonProperty(PropertyName = "boostingRangeEnd")]
        public double BoostingRangeEnd { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether to apply a constant boost
        /// for field values beyond the range end value; default is false.
        /// </summary>
        [JsonProperty(PropertyName = "constantBoostBeyondRange")]
        public bool? ShouldBoostBeyondRangeByConstant { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
