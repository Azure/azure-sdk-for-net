// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Search.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for CjkBigramTokenFilterScripts.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum CjkBigramTokenFilterScripts
    {
        [EnumMember(Value = "han")]
        Han,
        [EnumMember(Value = "hiragana")]
        Hiragana,
        [EnumMember(Value = "katakana")]
        Katakana,
        [EnumMember(Value = "hangul")]
        Hangul
    }
    internal static class CjkBigramTokenFilterScriptsEnumExtension
    {
        internal static string ToSerializedValue(this CjkBigramTokenFilterScripts? value)
        {
            return value == null ? null : ((CjkBigramTokenFilterScripts)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this CjkBigramTokenFilterScripts value)
        {
            switch( value )
            {
                case CjkBigramTokenFilterScripts.Han:
                    return "han";
                case CjkBigramTokenFilterScripts.Hiragana:
                    return "hiragana";
                case CjkBigramTokenFilterScripts.Katakana:
                    return "katakana";
                case CjkBigramTokenFilterScripts.Hangul:
                    return "hangul";
            }
            return null;
        }

        internal static CjkBigramTokenFilterScripts? ParseCjkBigramTokenFilterScripts(this string value)
        {
            switch( value )
            {
                case "han":
                    return CjkBigramTokenFilterScripts.Han;
                case "hiragana":
                    return CjkBigramTokenFilterScripts.Hiragana;
                case "katakana":
                    return CjkBigramTokenFilterScripts.Katakana;
                case "hangul":
                    return CjkBigramTokenFilterScripts.Hangul;
            }
            return null;
        }
    }
}
