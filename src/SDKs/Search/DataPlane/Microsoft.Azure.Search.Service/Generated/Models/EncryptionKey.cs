// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Search.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Represents an encryption key in Azure Search.
    /// </summary>
    public partial class EncryptionKey
    {
        /// <summary>
        /// Initializes a new instance of the EncryptionKey class.
        /// </summary>
        public EncryptionKey()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EncryptionKey class.
        /// </summary>
        /// <param name="keyVaultKeyName">The name of the key vault
        /// key.</param>
        /// <param name="keyVaultKeyVersion">The version of the key vault
        /// key.</param>
        /// <param name="keyVaultUri">The URI of the key vault.</param>
        /// <param name="accessCredentials">The credentials to use to
        /// authenticate to the provided key vault. Can be left null if MSI
        /// (Managed Service Identity) is to be used instead.</param>
        public EncryptionKey(string keyVaultKeyName, string keyVaultKeyVersion, string keyVaultUri, AzureActiveDirectoryApplicationCredentials accessCredentials = default(AzureActiveDirectoryApplicationCredentials))
        {
            KeyVaultKeyName = keyVaultKeyName;
            KeyVaultKeyVersion = keyVaultKeyVersion;
            KeyVaultUri = keyVaultUri;
            AccessCredentials = accessCredentials;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the key vault key.
        /// </summary>
        [JsonProperty(PropertyName = "keyVaultKeyName")]
        public string KeyVaultKeyName { get; set; }

        /// <summary>
        /// Gets or sets the version of the key vault key.
        /// </summary>
        [JsonProperty(PropertyName = "keyVaultKeyVersion")]
        public string KeyVaultKeyVersion { get; set; }

        /// <summary>
        /// Gets or sets the URI of the key vault.
        /// </summary>
        [JsonProperty(PropertyName = "keyVaultUri")]
        public string KeyVaultUri { get; set; }

        /// <summary>
        /// Gets or sets the credentials to use to authenticate to the provided
        /// key vault. Can be left null if MSI (Managed Service Identity) is to
        /// be used instead.
        /// </summary>
        [JsonProperty(PropertyName = "accessCredentials")]
        public AzureActiveDirectoryApplicationCredentials AccessCredentials { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (KeyVaultKeyName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "KeyVaultKeyName");
            }
            if (KeyVaultKeyVersion == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "KeyVaultKeyVersion");
            }
            if (KeyVaultUri == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "KeyVaultUri");
            }
        }
    }
}
