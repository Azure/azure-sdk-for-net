// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Search.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for StopwordsList.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum StopwordsList
    {
        [EnumMember(Value = "arabic")]
        Arabic,
        [EnumMember(Value = "armenian")]
        Armenian,
        [EnumMember(Value = "basque")]
        Basque,
        [EnumMember(Value = "brazilian")]
        Brazilian,
        [EnumMember(Value = "bulgarian")]
        Bulgarian,
        [EnumMember(Value = "catalan")]
        Catalan,
        [EnumMember(Value = "czech")]
        Czech,
        [EnumMember(Value = "danish")]
        Danish,
        [EnumMember(Value = "dutch")]
        Dutch,
        [EnumMember(Value = "english")]
        English,
        [EnumMember(Value = "finnish")]
        Finnish,
        [EnumMember(Value = "french")]
        French,
        [EnumMember(Value = "galician")]
        Galician,
        [EnumMember(Value = "german")]
        German,
        [EnumMember(Value = "greek")]
        Greek,
        [EnumMember(Value = "hindi")]
        Hindi,
        [EnumMember(Value = "hungarian")]
        Hungarian,
        [EnumMember(Value = "indonesian")]
        Indonesian,
        [EnumMember(Value = "irish")]
        Irish,
        [EnumMember(Value = "italian")]
        Italian,
        [EnumMember(Value = "latvian")]
        Latvian,
        [EnumMember(Value = "norwegian")]
        Norwegian,
        [EnumMember(Value = "persian")]
        Persian,
        [EnumMember(Value = "portuguese")]
        Portuguese,
        [EnumMember(Value = "romanian")]
        Romanian,
        [EnumMember(Value = "russian")]
        Russian,
        [EnumMember(Value = "sorani")]
        Sorani,
        [EnumMember(Value = "spanish")]
        Spanish,
        [EnumMember(Value = "swedish")]
        Swedish,
        [EnumMember(Value = "thai")]
        Thai,
        [EnumMember(Value = "turkish")]
        Turkish
    }
    internal static class StopwordsListEnumExtension
    {
        internal static string ToSerializedValue(this StopwordsList? value)
        {
            return value == null ? null : ((StopwordsList)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this StopwordsList value)
        {
            switch( value )
            {
                case StopwordsList.Arabic:
                    return "arabic";
                case StopwordsList.Armenian:
                    return "armenian";
                case StopwordsList.Basque:
                    return "basque";
                case StopwordsList.Brazilian:
                    return "brazilian";
                case StopwordsList.Bulgarian:
                    return "bulgarian";
                case StopwordsList.Catalan:
                    return "catalan";
                case StopwordsList.Czech:
                    return "czech";
                case StopwordsList.Danish:
                    return "danish";
                case StopwordsList.Dutch:
                    return "dutch";
                case StopwordsList.English:
                    return "english";
                case StopwordsList.Finnish:
                    return "finnish";
                case StopwordsList.French:
                    return "french";
                case StopwordsList.Galician:
                    return "galician";
                case StopwordsList.German:
                    return "german";
                case StopwordsList.Greek:
                    return "greek";
                case StopwordsList.Hindi:
                    return "hindi";
                case StopwordsList.Hungarian:
                    return "hungarian";
                case StopwordsList.Indonesian:
                    return "indonesian";
                case StopwordsList.Irish:
                    return "irish";
                case StopwordsList.Italian:
                    return "italian";
                case StopwordsList.Latvian:
                    return "latvian";
                case StopwordsList.Norwegian:
                    return "norwegian";
                case StopwordsList.Persian:
                    return "persian";
                case StopwordsList.Portuguese:
                    return "portuguese";
                case StopwordsList.Romanian:
                    return "romanian";
                case StopwordsList.Russian:
                    return "russian";
                case StopwordsList.Sorani:
                    return "sorani";
                case StopwordsList.Spanish:
                    return "spanish";
                case StopwordsList.Swedish:
                    return "swedish";
                case StopwordsList.Thai:
                    return "thai";
                case StopwordsList.Turkish:
                    return "turkish";
            }
            return null;
        }

        internal static StopwordsList? ParseStopwordsList(this string value)
        {
            switch( value )
            {
                case "arabic":
                    return StopwordsList.Arabic;
                case "armenian":
                    return StopwordsList.Armenian;
                case "basque":
                    return StopwordsList.Basque;
                case "brazilian":
                    return StopwordsList.Brazilian;
                case "bulgarian":
                    return StopwordsList.Bulgarian;
                case "catalan":
                    return StopwordsList.Catalan;
                case "czech":
                    return StopwordsList.Czech;
                case "danish":
                    return StopwordsList.Danish;
                case "dutch":
                    return StopwordsList.Dutch;
                case "english":
                    return StopwordsList.English;
                case "finnish":
                    return StopwordsList.Finnish;
                case "french":
                    return StopwordsList.French;
                case "galician":
                    return StopwordsList.Galician;
                case "german":
                    return StopwordsList.German;
                case "greek":
                    return StopwordsList.Greek;
                case "hindi":
                    return StopwordsList.Hindi;
                case "hungarian":
                    return StopwordsList.Hungarian;
                case "indonesian":
                    return StopwordsList.Indonesian;
                case "irish":
                    return StopwordsList.Irish;
                case "italian":
                    return StopwordsList.Italian;
                case "latvian":
                    return StopwordsList.Latvian;
                case "norwegian":
                    return StopwordsList.Norwegian;
                case "persian":
                    return StopwordsList.Persian;
                case "portuguese":
                    return StopwordsList.Portuguese;
                case "romanian":
                    return StopwordsList.Romanian;
                case "russian":
                    return StopwordsList.Russian;
                case "sorani":
                    return StopwordsList.Sorani;
                case "spanish":
                    return StopwordsList.Spanish;
                case "swedish":
                    return StopwordsList.Swedish;
                case "thai":
                    return StopwordsList.Thai;
                case "turkish":
                    return StopwordsList.Turkish;
            }
            return null;
        }
    }
}
