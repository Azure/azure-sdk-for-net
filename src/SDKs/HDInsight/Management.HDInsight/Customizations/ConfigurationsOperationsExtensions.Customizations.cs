// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.HDInsight
{
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for ConfigurationsOperations.
    /// </summary>
    public static partial class ConfigurationsOperationsExtensions
    {
        /// <summary>
        /// Enables HTTP on the specified cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='clusterName'>
        /// Required. The name of the cluster.
        /// </param>
        /// <param name='username'>
        /// Required. The http username.
        /// </param>
        /// <param name='password'>
        /// Required. The http password.
        /// </param>
        /// <returns>
        /// The cluster long running operation response.
        /// </returns>
        public static void EnableHttp(this IConfigurationsOperations operations,string resourceGroupName, string clusterName, string username, string password)
        {
            operations.EnableHttpAsync(resourceGroupName, clusterName, username, password).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Enables HTTP on the specified cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='clusterName'>
        /// Required. The name of the cluster.
        /// </param>
        /// <param name='username'>
        /// Required. The http username.
        /// </param>
        /// <param name='password'>
        /// Required. The http password.
        /// </param>
        /// <returns>
        /// The cluster long running operation response.
        /// </returns>
        public static async Task EnableHttpAsync(this IConfigurationsOperations operations, string resourceGroupName, string clusterName, string username, string password,
            CancellationToken cancellationToken = default(CancellationToken))
        {
            (await operations.EnableHttpAsync(resourceGroupName, clusterName, username, password, cancellationToken).ConfigureAwait(false)).Dispose();
        }

        /// <summary>
        /// Begins enabling HTTP on the specified cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='clusterName'>
        /// Required. The name of the cluster.
        /// </param>
        /// <param name='username'>
        /// Required. The http username.
        /// </param>
        /// <param name='password'>
        /// Required. The http password.
        /// </param>
        /// <returns>
        /// The cluster long running operation response.
        /// </returns>
        public static void BeginEnablingHttp(this IConfigurationsOperations operations, string resourceGroupName, string clusterName, string username, string password)
        {
            operations.BeginEnablingHttpAsync(resourceGroupName, clusterName, username, password).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Begins enabling HTTP on the specified cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='clusterName'>
        /// Required. The name of the cluster.
        /// </param>
        /// <param name='username'>
        /// Required. The http username.
        /// </param>
        /// <param name='password'>
        /// Required. The http password.
        /// </param>
        /// <returns>
        /// The cluster long running operation response.
        /// </returns>
        public static async Task BeginEnablingHttpAsync(this IConfigurationsOperations operations, string resourceGroupName, string clusterName, string username, string password,
            CancellationToken cancellationToken = default(CancellationToken))
        {
            (await operations.BeginEnablingHttpAsync(resourceGroupName, clusterName, username, password, cancellationToken).ConfigureAwait(false)).Dispose();
        }

        /// <summary>
        /// Disables HTTP on the specified cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='clusterName'>
        /// Required. The name of the cluster.
        /// </param>
        /// <returns>
        /// The cluster long running operation response.
        /// </returns>
        public static void DisableHttp(this IConfigurationsOperations operations, string resourceGroupName, string clusterName)
        {
            operations.DisableHttpAsync(resourceGroupName, clusterName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Disables HTTP on the specified cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='clusterName'>
        /// Required. The name of the cluster.
        /// </param>
        /// <returns>
        /// The cluster long running operation response.
        /// </returns>
        public static async Task DisableHttpAsync(this IConfigurationsOperations operations, string resourceGroupName, string clusterName,
            CancellationToken cancellationToken = default(CancellationToken))
        {
            (await operations.DisableHttpAsync(resourceGroupName, clusterName, cancellationToken).ConfigureAwait(false)).Dispose();
        }

        /// <summary>
        /// Begins disabling HTTP on the specified cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='clusterName'>
        /// Required. The name of the cluster.
        /// </param>
        /// <returns>
        /// The cluster long running operation response.
        /// </returns>
        public static void BeginDisablingHttp(this IConfigurationsOperations operations, string resourceGroupName, string clusterName)
        {
            operations.BeginDisablingHttpAsync(resourceGroupName, clusterName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Begins disabling HTTP on the specified cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='clusterName'>
        /// Required. The name of the cluster.
        /// </param>
        /// <returns>
        /// The cluster long running operation response.
        /// </returns>
        public static async Task BeginDisablingHttpAsync(this IConfigurationsOperations operations, string resourceGroupName, string clusterName,
            CancellationToken cancellationToken = default(CancellationToken))
        {
            (await operations.BeginDisablingHttpAsync(resourceGroupName, clusterName, cancellationToken).ConfigureAwait(false)).Dispose();
        }
    }
}
