// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.HDInsight.Models
{
    using Microsoft.Azure.Management.HDInsight.Models;
    using System;
    using System.Collections.Generic;

    public partial class ClusterCreateParameters
    {
        /// <summary>
        /// Gets or sets the datacenter location for the cluster.
        /// </summary>
        public string Location { get; set; }

        /// <summary>
        /// Gets or sets the login for the cluster's user.
        /// </summary>
        public string UserName { get; set; }

        /// <summary>
        /// Gets or sets the password for the cluster's user.
        /// </summary>
        public string Password { get; set; }

        /// <summary>
        /// Gets or sets the username for RDP access to the cluster.
        /// </summary>
        public string RdpUsername { get; set; }

        /// <summary>
        /// Gets or sets the password for RDP access to the cluster.
        /// </summary>
        public string RdpPassword { get; set; }

        /// <summary>
        /// Gets or sets the expiry DateTime for RDP access on the cluster.
        /// </summary>
        public DateTime RdpAccessExpiry { get; set; }

        /// <summary>
        /// Gets or sets the number of workernodes for the cluster.
        /// </summary>
        public int ClusterSizeInNodes { get; set; }

        /// <summary>
        /// Gets or sets the version of the HDInsight cluster.
        /// </summary>
        public string Version { get; set; }

        /// <summary>
        /// Gets or sets the size of the Head Node.
        /// </summary>
        /// <value>
        /// The size of the head node.
        /// </value>
        public string HeadNodeSize { get; set; }

        /// <summary>
        /// Gets or sets the size of the Data Node.
        /// </summary>
        /// <value>
        /// The size of the data node.
        /// </value>
        public string WorkerNodeSize { get; set; }

        /// <summary>
        /// Gets or sets the size of the Zookeeper Node.
        /// </summary>
        /// <value>
        /// The size of the zookeeper node.
        /// </value>
        public string ZookeeperNodeSize { get; set; }

        /// <summary>
        /// Gets or sets the size of the Edge Node.
        /// </summary>
        /// <value>
        /// The size of the edge node.
        /// </value>
        public string EdgeNodeSize { get; set; }

        /// <summary>
        /// Gets additional Azure Blob Storage Account that you want to enable access to.
        /// </summary>
        public Dictionary<string, string> AdditionalStorageAccounts { get; private set; }

        /// <summary>
        /// Gets config actions for the cluster.
        /// </summary>
        public Dictionary<ClusterNodeType, List<ScriptAction>> ScriptActions { get; private set; }

        /// <summary>
        /// Gets or sets the database to store the metadata for Oozie.
        /// </summary>
        public Metastore OozieMetastore { get; set; }

        /// <summary>
        /// Gets or sets the database to store the metadata for Hive.
        /// </summary>
        public Metastore HiveMetastore { get; set; }

        /// <summary>
        /// Gets the configurations of this HDInsight cluster.
        /// </summary>
        public Dictionary<string, Dictionary<string, string>> Configurations { get; private set; }
        
        /// <summary>
        /// Gets or sets the flavor for a cluster.
        /// </summary>
        public string ClusterType { get; set; }
        
        /// <summary>
        /// Gets or sets the virtual network guid for this HDInsight cluster.
        /// </summary>
        public string VirtualNetworkId { get; set; }
        
        /// <summary>
        /// Gets or sets the subnet name for this HDInsight cluster.
        /// </summary>
        public string SubnetName { get; set; }
        
        /// <summary>
        /// Gets or sets the cluster tier.
        /// </summary>
        public Tier ClusterTier { get; set; }

        /// <summary>
        /// Gets or sets SSH user name.
        /// </summary>
        public string SshUserName { get; set; }
        
        /// <summary>
        /// Gets or sets SSH password.
        /// </summary>
        public string SshPassword { get; set; }
        
        /// <summary>
        /// Gets or sets the public key to be used for SSH.
        /// </summary>
        public string SshPublicKey { get; set; }

        /// <summary>
        /// Gets or sets the prinicipal to be used for getting OAuth2 token to access Azure DataLake (ADL)
        /// </summary>
        public Principal Principal { get; set; }

        /// <summary>
        /// Gets or sets the security profile to be used for creating secure clusters.
        /// </summary>
        public SecurityProfile SecurityProfile { get; set; }

        /// <summary>
        /// Gets or sets the worker node datadisksgroupproperties for worker nodes. Required For Kafka clusters only
        /// </summary>
        public List<DataDisksGroups> WorkerNodeDataDisksGroups { get; set; }
       
        /// <summary>
        /// Gets or sets the component versions for each service in this HDInsight cluster.
        /// </summary>
        public Dictionary<string, string> ComponentVersion { get; private set; }
        
        /// <summary>
        /// The information for default storage account for the cluster.
        /// This account will be used for schemaless paths and the cluster will 
        /// leverage to store some cluster level files.
        /// </summary>
        public StorageInfo DefaultStorageInfo { get; set; }

        /// <summary>
        /// Gets or sets the tags.
        /// </summary>
        public Dictionary<string, string> Tags { get; private set; }

        /// <summary>
        /// Gets or sets the managed identity of the cluster.
        /// </summary>
        public ClusterIdentity ClusterIdentity { get; set; }

         /// <summary>
         /// Gets or sets the disk encryption properties.
         /// </summary>
         public DiskEncryptionProperties DiskEncryptionProperties { get; set; }

        /// <summary>
        /// Initializes a new instance of the ClusterCreateParameters class.
        /// </summary>
        public ClusterCreateParameters()
        {
            this.AdditionalStorageAccounts = new Dictionary<string, string>();
            this.Configurations = new Dictionary<string, Dictionary<string, string>>();
            this.ScriptActions =  new Dictionary<ClusterNodeType, List<ScriptAction>>();
            this.ComponentVersion = new Dictionary<string, string>();
            this.Tags = new Dictionary<string, string>();

            //set defaults
            this.Version = "default";
            this.ClusterType = "Hadoop";
        }

        public ClusterCreateParameters(ClusterCreateParameters parameters)
        {
            this.Location = parameters.Location;
            this.UserName = parameters.UserName;
            this.Password = parameters.Password;
            this.RdpUsername = parameters.RdpUsername;
            this.RdpPassword = parameters.RdpPassword;
            this.RdpAccessExpiry = parameters.RdpAccessExpiry;
            this.ClusterSizeInNodes = parameters.ClusterSizeInNodes;
            this.Version = parameters.Version;
            this.HeadNodeSize = parameters.HeadNodeSize;
            this.WorkerNodeSize = parameters.WorkerNodeSize;
            this.ZookeeperNodeSize = parameters.ZookeeperNodeSize;
            this.EdgeNodeSize = parameters.EdgeNodeSize;
            this.AdditionalStorageAccounts = parameters.AdditionalStorageAccounts;
            this.ScriptActions = parameters.ScriptActions;
            this.OozieMetastore = parameters.OozieMetastore;
            this.HiveMetastore = parameters.HiveMetastore;
            this.Configurations = parameters.Configurations;
            this.ClusterType = parameters.ClusterType;
            this.VirtualNetworkId = parameters.VirtualNetworkId;
            this.SubnetName = parameters.SubnetName;
            this.ClusterTier = parameters.ClusterTier;
            this.SshUserName = parameters.SshUserName;
            this.SshPassword = parameters.SshPassword;
            this.SshPublicKey = parameters.SshPublicKey;
            this.Principal = parameters.Principal;
            this.SecurityProfile = parameters.SecurityProfile;
            this.WorkerNodeDataDisksGroups = parameters.WorkerNodeDataDisksGroups;
            this.ComponentVersion = parameters.ComponentVersion;
            this.DefaultStorageInfo = parameters.DefaultStorageInfo;
            this.Tags = parameters.Tags;
            this.ClusterIdentity = parameters.ClusterIdentity;
            this.DiskEncryptionProperties = parameters.DiskEncryptionProperties;
        }
    }
}
