// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.HDInsight.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The version properties.
    /// </summary>
    public partial class VersionSpec
    {
        /// <summary>
        /// Initializes a new instance of the VersionSpec class.
        /// </summary>
        public VersionSpec()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VersionSpec class.
        /// </summary>
        /// <param name="friendlyName">The friendly name</param>
        /// <param name="displayName">The display name</param>
        /// <param name="isDefault">Whether or not the version is the default
        /// version.</param>
        /// <param name="componentVersions">The component version
        /// property.</param>
        public VersionSpec(string friendlyName = default(string), string displayName = default(string), string isDefault = default(string), IDictionary<string, string> componentVersions = default(IDictionary<string, string>))
        {
            FriendlyName = friendlyName;
            DisplayName = displayName;
            IsDefault = isDefault;
            ComponentVersions = componentVersions;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the friendly name
        /// </summary>
        [JsonProperty(PropertyName = "friendlyName")]
        public string FriendlyName { get; set; }

        /// <summary>
        /// Gets or sets the display name
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets whether or not the version is the default version.
        /// </summary>
        [JsonProperty(PropertyName = "isDefault")]
        public string IsDefault { get; set; }

        /// <summary>
        /// Gets or sets the component version property.
        /// </summary>
        [JsonProperty(PropertyName = "componentVersions")]
        public IDictionary<string, string> ComponentVersions { get; set; }

    }
}
