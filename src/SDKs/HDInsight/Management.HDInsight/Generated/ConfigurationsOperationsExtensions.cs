// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.HDInsight
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for ConfigurationsOperations.
    /// </summary>
    public static partial class ConfigurationsOperationsExtensions
    {
            /// <summary>
            /// Configures the HTTP settings on the specified cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the cluster.
            /// </param>
            /// <param name='parameters'>
            /// The name of the resource group.
            /// </param>
            public static void UpdateHTTPSettings(this IConfigurationsOperations operations, string resourceGroupName, string clusterName, HttpConnectivitySettings parameters)
            {
                operations.UpdateHTTPSettingsAsync(resourceGroupName, clusterName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Configures the HTTP settings on the specified cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the cluster.
            /// </param>
            /// <param name='parameters'>
            /// The name of the resource group.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task UpdateHTTPSettingsAsync(this IConfigurationsOperations operations, string resourceGroupName, string clusterName, HttpConnectivitySettings parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.UpdateHTTPSettingsWithHttpMessagesAsync(resourceGroupName, clusterName, parameters, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// The configuration object for the specified cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the cluster.
            /// </param>
            /// <param name='configurationName'>
            /// The constant for configuration type of gateway. Possible values include:
            /// 'gateway', 'core-site'
            /// </param>
            public static HttpConnectivitySettings Get(this IConfigurationsOperations operations, string resourceGroupName, string clusterName, Configurationname configurationName)
            {
                return operations.GetAsync(resourceGroupName, clusterName, configurationName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// The configuration object for the specified cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the cluster.
            /// </param>
            /// <param name='configurationName'>
            /// The constant for configuration type of gateway. Possible values include:
            /// 'gateway', 'core-site'
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<HttpConnectivitySettings> GetAsync(this IConfigurationsOperations operations, string resourceGroupName, string clusterName, Configurationname configurationName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, clusterName, configurationName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Configures the HTTP settings on the specified cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the cluster.
            /// </param>
            /// <param name='parameters'>
            /// The name of the resource group.
            /// </param>
            public static void BeginUpdateHTTPSettings(this IConfigurationsOperations operations, string resourceGroupName, string clusterName, HttpConnectivitySettings parameters)
            {
                operations.BeginUpdateHTTPSettingsAsync(resourceGroupName, clusterName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Configures the HTTP settings on the specified cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the cluster.
            /// </param>
            /// <param name='parameters'>
            /// The name of the resource group.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginUpdateHTTPSettingsAsync(this IConfigurationsOperations operations, string resourceGroupName, string clusterName, HttpConnectivitySettings parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginUpdateHTTPSettingsWithHttpMessagesAsync(resourceGroupName, clusterName, parameters, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
