// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.HDInsight.Job
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.IO;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for JobOperations.
    /// </summary>
    public static partial class JobOperationsExtensions
    {
            /// <summary>
            /// Gets job details from the specified HDInsight cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='jobId'>
            /// The id of the job.
            /// </param>
            public static JobDetailRootJsonObject Get(this IJobOperations operations, string jobId)
            {
                return operations.GetAsync(jobId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets job details from the specified HDInsight cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='jobId'>
            /// The id of the job.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<JobDetailRootJsonObject> GetAsync(this IJobOperations operations, string jobId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(jobId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Initiates cancel on given running job in the specified HDInsight.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='jobId'>
            /// The id of the job.
            /// </param>
            public static JobDetailRootJsonObject Kill(this IJobOperations operations, string jobId)
            {
                return operations.KillAsync(jobId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Initiates cancel on given running job in the specified HDInsight.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='jobId'>
            /// The id of the job.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<JobDetailRootJsonObject> KillAsync(this IJobOperations operations, string jobId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.KillWithHttpMessagesAsync(jobId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets the list of jobs from the specified HDInsight cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IList<JobListJsonObject> List(this IJobOperations operations)
            {
                return operations.ListAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the list of jobs from the specified HDInsight cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<JobListJsonObject>> ListAsync(this IJobOperations operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets numrecords Of Jobs after jobid from the specified HDInsight cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='jobid'>
            /// JobId from where to list jobs.
            /// </param>
            /// <param name='numrecords'>
            /// Number of jobs to fetch.
            /// </param>
            public static IList<JobListJsonObject> ListAfterJobId(this IJobOperations operations, string jobid = default(string), int? numrecords = default(int?))
            {
                return operations.ListAfterJobIdAsync(jobid, numrecords).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets numrecords Of Jobs after jobid from the specified HDInsight cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='jobid'>
            /// JobId from where to list jobs.
            /// </param>
            /// <param name='numrecords'>
            /// Number of jobs to fetch.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<JobListJsonObject>> ListAfterJobIdAsync(this IJobOperations operations, string jobid = default(string), int? numrecords = default(int?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListAfterJobIdWithHttpMessagesAsync(jobid, numrecords, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Submits a Hive job to an HDInsight cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='content'>
            /// The content of the Hive job request.
            /// </param>
            public static JobSubmissionJsonResponse SubmitHiveJob(this IJobOperations operations, Stream content)
            {
                return operations.SubmitHiveJobAsync(content).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Submits a Hive job to an HDInsight cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='content'>
            /// The content of the Hive job request.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<JobSubmissionJsonResponse> SubmitHiveJobAsync(this IJobOperations operations, Stream content, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.SubmitHiveJobWithHttpMessagesAsync(content, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Submits a MapReduce job to an HDInsight cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='content'>
            /// The content of the MapReduce job request.
            /// </param>
            public static JobSubmissionJsonResponse SubmitMapReduceJob(this IJobOperations operations, Stream content)
            {
                return operations.SubmitMapReduceJobAsync(content).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Submits a MapReduce job to an HDInsight cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='content'>
            /// The content of the MapReduce job request.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<JobSubmissionJsonResponse> SubmitMapReduceJobAsync(this IJobOperations operations, Stream content, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.SubmitMapReduceJobWithHttpMessagesAsync(content, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Submits a MapReduce streaming job to an HDInsight cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='content'>
            /// The content of the MapReduce job request.
            /// </param>
            public static JobSubmissionJsonResponse SubmitMapReduceStreamingJob(this IJobOperations operations, Stream content)
            {
                return operations.SubmitMapReduceStreamingJobAsync(content).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Submits a MapReduce streaming job to an HDInsight cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='content'>
            /// The content of the MapReduce job request.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<JobSubmissionJsonResponse> SubmitMapReduceStreamingJobAsync(this IJobOperations operations, Stream content, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.SubmitMapReduceStreamingJobWithHttpMessagesAsync(content, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Submits a Pig job to an HDInsight cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='content'>
            /// The content of the Pig job request.
            /// </param>
            public static JobSubmissionJsonResponse SubmitPigJob(this IJobOperations operations, Stream content)
            {
                return operations.SubmitPigJobAsync(content).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Submits a Pig job to an HDInsight cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='content'>
            /// The content of the Pig job request.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<JobSubmissionJsonResponse> SubmitPigJobAsync(this IJobOperations operations, Stream content, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.SubmitPigJobWithHttpMessagesAsync(content, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Submits a Sqoop job to an HDInsight cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='content'>
            /// The content of the Sqoop job request.
            /// </param>
            public static JobSubmissionJsonResponse SubmitSqoopJob(this IJobOperations operations, Stream content)
            {
                return operations.SubmitSqoopJobAsync(content).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Submits a Sqoop job to an HDInsight cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='content'>
            /// The content of the Sqoop job request.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<JobSubmissionJsonResponse> SubmitSqoopJobAsync(this IJobOperations operations, Stream content, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.SubmitSqoopJobWithHttpMessagesAsync(content, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets application state from the specified HDInsight cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='appId'>
            /// The id of the job.
            /// </param>
            public static AppState GetAppState(this IJobOperations operations, string appId)
            {
                return operations.GetAppStateAsync(appId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets application state from the specified HDInsight cluster.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='appId'>
            /// The id of the job.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<AppState> GetAppStateAsync(this IJobOperations operations, string appId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetAppStateWithHttpMessagesAsync(appId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
