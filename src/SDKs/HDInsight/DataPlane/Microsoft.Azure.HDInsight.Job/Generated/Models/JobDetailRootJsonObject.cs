// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.HDInsight.Job.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The object containing the job details.
    /// </summary>
    public partial class JobDetailRootJsonObject
    {
        /// <summary>
        /// Initializes a new instance of the JobDetailRootJsonObject class.
        /// </summary>
        public JobDetailRootJsonObject()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JobDetailRootJsonObject class.
        /// </summary>
        /// <param name="callback">The callback URL, if any.</param>
        /// <param name="completed">The string representing completed status,
        /// for example 'done'.</param>
        /// <param name="exitValue">The job's exit value.</param>
        /// <param name="id">The job ID.</param>
        /// <param name="msg">The message returned.</param>
        /// <param name="parentId">The parent job ID.</param>
        /// <param name="percentComplete">The job completion percentage, for
        /// example '75% complete'.</param>
        /// <param name="profile">The object containing the job profile
        /// information.</param>
        /// <param name="status">The object containing the job status
        /// information.</param>
        /// <param name="user">The user name of the job creator.</param>
        /// <param name="userargs">The arguments passed in by the user.</param>
        public JobDetailRootJsonObject(object callback = default(object), string completed = default(string), int? exitValue = default(int?), string id = default(string), object msg = default(object), string parentId = default(string), string percentComplete = default(string), Profile profile = default(Profile), Status status = default(Status), string user = default(string), Userargs userargs = default(Userargs))
        {
            Callback = callback;
            Completed = completed;
            ExitValue = exitValue;
            Id = id;
            Msg = msg;
            ParentId = parentId;
            PercentComplete = percentComplete;
            Profile = profile;
            Status = status;
            User = user;
            Userargs = userargs;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the callback URL, if any.
        /// </summary>
        [JsonProperty(PropertyName = "callback")]
        public object Callback { get; set; }

        /// <summary>
        /// Gets or sets the string representing completed status, for example
        /// 'done'.
        /// </summary>
        [JsonProperty(PropertyName = "completed")]
        public string Completed { get; set; }

        /// <summary>
        /// Gets or sets the job's exit value.
        /// </summary>
        [JsonProperty(PropertyName = "exitValue")]
        public int? ExitValue { get; set; }

        /// <summary>
        /// Gets or sets the job ID.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets the message returned.
        /// </summary>
        [JsonProperty(PropertyName = "msg")]
        public object Msg { get; set; }

        /// <summary>
        /// Gets or sets the parent job ID.
        /// </summary>
        [JsonProperty(PropertyName = "parentId")]
        public string ParentId { get; set; }

        /// <summary>
        /// Gets or sets the job completion percentage, for example '75%
        /// complete'.
        /// </summary>
        [JsonProperty(PropertyName = "percentComplete")]
        public string PercentComplete { get; set; }

        /// <summary>
        /// Gets or sets the object containing the job profile information.
        /// </summary>
        [JsonProperty(PropertyName = "profile")]
        public Profile Profile { get; set; }

        /// <summary>
        /// Gets or sets the object containing the job status information.
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public Status Status { get; set; }

        /// <summary>
        /// Gets or sets the user name of the job creator.
        /// </summary>
        [JsonProperty(PropertyName = "user")]
        public string User { get; set; }

        /// <summary>
        /// Gets or sets the arguments passed in by the user.
        /// </summary>
        [JsonProperty(PropertyName = "userargs")]
        public Userargs Userargs { get; set; }

    }
}
