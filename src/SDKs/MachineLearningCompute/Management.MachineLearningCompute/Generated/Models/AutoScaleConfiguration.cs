// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.MachineLearningCompute.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.MachineLearningCompute;
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// AutoScale configuration properties.
    /// </summary>
    public partial class AutoScaleConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the AutoScaleConfiguration class.
        /// </summary>
        public AutoScaleConfiguration()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AutoScaleConfiguration class.
        /// </summary>
        /// <param name="status">If auto-scale is enabled for all services.
        /// Each service can turn it off individually. Possible values include:
        /// 'Enabled', 'Disabled'</param>
        /// <param name="minReplicas">The minimum number of replicas for each
        /// service.</param>
        /// <param name="maxReplicas">The maximum number of replicas for each
        /// service.</param>
        /// <param name="targetUtilization">The target utilization.</param>
        /// <param name="refreshPeriodInSeconds">Refresh period in
        /// seconds.</param>
        public AutoScaleConfiguration(string status = default(string), int? minReplicas = default(int?), int? maxReplicas = default(int?), double? targetUtilization = default(double?), int? refreshPeriodInSeconds = default(int?))
        {
            Status = status;
            MinReplicas = minReplicas;
            MaxReplicas = maxReplicas;
            TargetUtilization = targetUtilization;
            RefreshPeriodInSeconds = refreshPeriodInSeconds;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets if auto-scale is enabled for all services. Each
        /// service can turn it off individually. Possible values include:
        /// 'Enabled', 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets the minimum number of replicas for each service.
        /// </summary>
        [JsonProperty(PropertyName = "minReplicas")]
        public int? MinReplicas { get; set; }

        /// <summary>
        /// Gets or sets the maximum number of replicas for each service.
        /// </summary>
        [JsonProperty(PropertyName = "maxReplicas")]
        public int? MaxReplicas { get; set; }

        /// <summary>
        /// Gets or sets the target utilization.
        /// </summary>
        [JsonProperty(PropertyName = "targetUtilization")]
        public double? TargetUtilization { get; set; }

        /// <summary>
        /// Gets or sets refresh period in seconds.
        /// </summary>
        [JsonProperty(PropertyName = "refreshPeriodInSeconds")]
        public int? RefreshPeriodInSeconds { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (MinReplicas < 1)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "MinReplicas", 1);
            }
            if (MaxReplicas < 1)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "MaxReplicas", 1);
            }
        }
    }
}
