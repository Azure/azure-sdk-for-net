// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.LabServices.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Represents a lab.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class Lab : Resource
    {
        /// <summary>
        /// Initializes a new instance of the Lab class.
        /// </summary>
        public Lab()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Lab class.
        /// </summary>
        /// <param name="id">The identifier of the resource.</param>
        /// <param name="name">The name of the resource.</param>
        /// <param name="type">The type of the resource.</param>
        /// <param name="location">The location of the resource.</param>
        /// <param name="tags">The tags of the resource.</param>
        /// <param name="maxUsersInLab">Maximum number of users allowed in the
        /// lab.</param>
        /// <param name="userQuota">Maximum value MaxUsersInLab can be set to,
        /// as specified by the service</param>
        /// <param name="invitationCode">Invitation code that users can use to
        /// join a lab.</param>
        /// <param name="createdByObjectId">Object id of the user that created
        /// the lab.</param>
        /// <param name="usageQuota">Maximum duration a user can use an
        /// environment for in the lab.</param>
        /// <param name="userAccessMode">Lab user access mode (open to all vs.
        /// restricted to those listed on the lab). Possible values include:
        /// 'Restricted', 'Open'</param>
        /// <param name="createdByUserPrincipalName">Lab creator name</param>
        /// <param name="createdDate">Creation date for the lab</param>
        /// <param name="provisioningState">The provisioning status of the
        /// resource.</param>
        /// <param name="uniqueIdentifier">The unique immutable identifier of a
        /// resource (Guid).</param>
        /// <param name="latestOperationResult">The details of the latest
        /// operation. ex: status, error</param>
        public Lab(string id = default(string), string name = default(string), string type = default(string), string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), int? maxUsersInLab = default(int?), int? userQuota = default(int?), string invitationCode = default(string), string createdByObjectId = default(string), System.TimeSpan? usageQuota = default(System.TimeSpan?), string userAccessMode = default(string), string createdByUserPrincipalName = default(string), System.DateTime? createdDate = default(System.DateTime?), string provisioningState = default(string), string uniqueIdentifier = default(string), LatestOperationResult latestOperationResult = default(LatestOperationResult))
            : base(id, name, type, location, tags)
        {
            MaxUsersInLab = maxUsersInLab;
            UserQuota = userQuota;
            InvitationCode = invitationCode;
            CreatedByObjectId = createdByObjectId;
            UsageQuota = usageQuota;
            UserAccessMode = userAccessMode;
            CreatedByUserPrincipalName = createdByUserPrincipalName;
            CreatedDate = createdDate;
            ProvisioningState = provisioningState;
            UniqueIdentifier = uniqueIdentifier;
            LatestOperationResult = latestOperationResult;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets maximum number of users allowed in the lab.
        /// </summary>
        [JsonProperty(PropertyName = "properties.maxUsersInLab")]
        public int? MaxUsersInLab { get; set; }

        /// <summary>
        /// Gets maximum value MaxUsersInLab can be set to, as specified by the
        /// service
        /// </summary>
        [JsonProperty(PropertyName = "properties.userQuota")]
        public int? UserQuota { get; private set; }

        /// <summary>
        /// Gets invitation code that users can use to join a lab.
        /// </summary>
        [JsonProperty(PropertyName = "properties.invitationCode")]
        public string InvitationCode { get; private set; }

        /// <summary>
        /// Gets object id of the user that created the lab.
        /// </summary>
        [JsonProperty(PropertyName = "properties.createdByObjectId")]
        public string CreatedByObjectId { get; private set; }

        /// <summary>
        /// Gets or sets maximum duration a user can use an environment for in
        /// the lab.
        /// </summary>
        [JsonProperty(PropertyName = "properties.usageQuota")]
        public System.TimeSpan? UsageQuota { get; set; }

        /// <summary>
        /// Gets or sets lab user access mode (open to all vs. restricted to
        /// those listed on the lab). Possible values include: 'Restricted',
        /// 'Open'
        /// </summary>
        [JsonProperty(PropertyName = "properties.userAccessMode")]
        public string UserAccessMode { get; set; }

        /// <summary>
        /// Gets lab creator name
        /// </summary>
        [JsonProperty(PropertyName = "properties.createdByUserPrincipalName")]
        public string CreatedByUserPrincipalName { get; private set; }

        /// <summary>
        /// Gets creation date for the lab
        /// </summary>
        [JsonProperty(PropertyName = "properties.createdDate")]
        public System.DateTime? CreatedDate { get; private set; }

        /// <summary>
        /// Gets or sets the provisioning status of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Gets or sets the unique immutable identifier of a resource (Guid).
        /// </summary>
        [JsonProperty(PropertyName = "properties.uniqueIdentifier")]
        public string UniqueIdentifier { get; set; }

        /// <summary>
        /// Gets the details of the latest operation. ex: status, error
        /// </summary>
        [JsonProperty(PropertyName = "properties.latestOperationResult")]
        public LatestOperationResult LatestOperationResult { get; private set; }

    }
}
