// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.LabServices.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Details of a Reference Vm
    /// </summary>
    public partial class ReferenceVm
    {
        /// <summary>
        /// Initializes a new instance of the ReferenceVm class.
        /// </summary>
        public ReferenceVm()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ReferenceVm class.
        /// </summary>
        /// <param name="userName">The username of the virtual machine</param>
        /// <param name="password">The password of the virtual machine. This
        /// will be set to null in GET resource API</param>
        /// <param name="vmStateDetails">The state details for the reference
        /// virtual machine.</param>
        /// <param name="vmResourceId">VM resource Id for the
        /// environment</param>
        public ReferenceVm(string userName, string password = default(string), VmStateDetails vmStateDetails = default(VmStateDetails), string vmResourceId = default(string))
        {
            UserName = userName;
            Password = password;
            VmStateDetails = vmStateDetails;
            VmResourceId = vmResourceId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the username of the virtual machine
        /// </summary>
        [JsonProperty(PropertyName = "userName")]
        public string UserName { get; set; }

        /// <summary>
        /// Gets or sets the password of the virtual machine. This will be set
        /// to null in GET resource API
        /// </summary>
        [JsonProperty(PropertyName = "password")]
        public string Password { get; set; }

        /// <summary>
        /// Gets the state details for the reference virtual machine.
        /// </summary>
        [JsonProperty(PropertyName = "vmStateDetails")]
        public VmStateDetails VmStateDetails { get; private set; }

        /// <summary>
        /// Gets VM resource Id for the environment
        /// </summary>
        [JsonProperty(PropertyName = "vmResourceId")]
        public string VmResourceId { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (UserName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "UserName");
            }
        }
    }
}
