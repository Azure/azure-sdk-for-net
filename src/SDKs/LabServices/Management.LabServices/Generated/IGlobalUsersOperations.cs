// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.LabServices
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// GlobalUsersOperations operations.
    /// </summary>
    public partial interface IGlobalUsersOperations
    {
        /// <summary>
        /// Gets the virtual machine details
        /// </summary>
        /// <param name='userName'>
        /// The name of the user.
        /// </param>
        /// <param name='environmentOperationsPayload'>
        /// Represents payload for any Environment operations like get, start,
        /// stop, connect
        /// </param>
        /// <param name='expand'>
        /// Specify the $expand query. Example:
        /// 'properties($expand=environment)'
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<GetEnvironmentResponse>> GetEnvironmentWithHttpMessagesAsync(string userName, EnvironmentOperationsPayload environmentOperationsPayload, string expand = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get batch operation status
        /// </summary>
        /// <param name='userName'>
        /// The name of the user.
        /// </param>
        /// <param name='operationBatchStatusPayload'>
        /// Payload to get the status of an operation
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<OperationBatchStatusResponse>> GetOperationBatchStatusWithHttpMessagesAsync(string userName, OperationBatchStatusPayload operationBatchStatusPayload, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the status of long running operation
        /// </summary>
        /// <param name='userName'>
        /// The name of the user.
        /// </param>
        /// <param name='operationStatusPayload'>
        /// Payload to get the status of an operation
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<OperationStatusResponse>> GetOperationStatusWithHttpMessagesAsync(string userName, OperationStatusPayload operationStatusPayload, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get personal preferences for a user
        /// </summary>
        /// <param name='userName'>
        /// The name of the user.
        /// </param>
        /// <param name='personalPerferencesOperationsPayload'>
        /// Represents payload for any Environment operations like get, start,
        /// stop, connect
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<GetPersonalPreferencesResponse>> GetPersonalPreferencesWithHttpMessagesAsync(string userName, PersonalPerferencesOperationsPayload personalPerferencesOperationsPayload, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// List Environments for the user
        /// </summary>
        /// <param name='userName'>
        /// The name of the user.
        /// </param>
        /// <param name='listEnvironmentsPayload'>
        /// Represents the payload to list environments owned by a user
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<ListEnvironmentsResponse>> ListEnvironmentsWithHttpMessagesAsync(string userName, ListEnvironmentsPayload listEnvironmentsPayload, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// List labs for the user.
        /// </summary>
        /// <param name='userName'>
        /// The name of the user.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse<ListLabsResponse>> ListLabsWithHttpMessagesAsync(string userName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Register a user to a managed lab
        /// </summary>
        /// <param name='userName'>
        /// The name of the user.
        /// </param>
        /// <param name='registerPayload'>
        /// Represents payload for Register action.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse> RegisterWithHttpMessagesAsync(string userName, RegisterPayload registerPayload, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Resets the user password on an environment This operation can take
        /// a while to complete
        /// </summary>
        /// <param name='userName'>
        /// The name of the user.
        /// </param>
        /// <param name='resetPasswordPayload'>
        /// Represents the payload for resetting passwords.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse> ResetPasswordWithHttpMessagesAsync(string userName, ResetPasswordPayload resetPasswordPayload, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Starts an environment by starting all resources inside the
        /// environment. This operation can take a while to complete
        /// </summary>
        /// <param name='userName'>
        /// The name of the user.
        /// </param>
        /// <param name='environmentOperationsPayload'>
        /// Represents payload for any Environment operations like get, start,
        /// stop, connect
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse> StartEnvironmentWithHttpMessagesAsync(string userName, EnvironmentOperationsPayload environmentOperationsPayload, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Stops an environment by stopping all resources inside the
        /// environment This operation can take a while to complete
        /// </summary>
        /// <param name='userName'>
        /// The name of the user.
        /// </param>
        /// <param name='environmentOperationsPayload'>
        /// Represents payload for any Environment operations like get, start,
        /// stop, connect
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse> StopEnvironmentWithHttpMessagesAsync(string userName, EnvironmentOperationsPayload environmentOperationsPayload, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Resets the user password on an environment This operation can take
        /// a while to complete
        /// </summary>
        /// <param name='userName'>
        /// The name of the user.
        /// </param>
        /// <param name='resetPasswordPayload'>
        /// Represents the payload for resetting passwords.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse> BeginResetPasswordWithHttpMessagesAsync(string userName, ResetPasswordPayload resetPasswordPayload, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Starts an environment by starting all resources inside the
        /// environment. This operation can take a while to complete
        /// </summary>
        /// <param name='userName'>
        /// The name of the user.
        /// </param>
        /// <param name='environmentOperationsPayload'>
        /// Represents payload for any Environment operations like get, start,
        /// stop, connect
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse> BeginStartEnvironmentWithHttpMessagesAsync(string userName, EnvironmentOperationsPayload environmentOperationsPayload, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Stops an environment by stopping all resources inside the
        /// environment This operation can take a while to complete
        /// </summary>
        /// <param name='userName'>
        /// The name of the user.
        /// </param>
        /// <param name='environmentOperationsPayload'>
        /// Represents payload for any Environment operations like get, start,
        /// stop, connect
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<AzureOperationResponse> BeginStopEnvironmentWithHttpMessagesAsync(string userName, EnvironmentOperationsPayload environmentOperationsPayload, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
