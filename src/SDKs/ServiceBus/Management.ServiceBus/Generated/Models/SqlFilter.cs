// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ServiceBus.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Represents a filter which is a composition of an expression and an
    /// action that is executed in the pub/sub pipeline.
    /// </summary>
    public partial class SqlFilter
    {
        /// <summary>
        /// Initializes a new instance of the SqlFilter class.
        /// </summary>
        public SqlFilter()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SqlFilter class.
        /// </summary>
        /// <param name="sqlExpression">The SQL expression. e.g.
        /// MyProperty='ABC'</param>
        /// <param name="compatibilityLevel">This property is reserved for
        /// future use. An integer value showing the compatibility level,
        /// currently hard-coded to 20.</param>
        /// <param name="requiresPreprocessing">Value that indicates whether
        /// the rule action requires preprocessing.</param>
        public SqlFilter(string sqlExpression = default(string), int? compatibilityLevel = default(int?), bool? requiresPreprocessing = default(bool?))
        {
            SqlExpression = sqlExpression;
            CompatibilityLevel = compatibilityLevel;
            RequiresPreprocessing = requiresPreprocessing;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the SQL expression. e.g. MyProperty='ABC'
        /// </summary>
        [JsonProperty(PropertyName = "sqlExpression")]
        public string SqlExpression { get; set; }

        /// <summary>
        /// Gets this property is reserved for future use. An integer value
        /// showing the compatibility level, currently hard-coded to 20.
        /// </summary>
        [JsonProperty(PropertyName = "compatibilityLevel")]
        public int? CompatibilityLevel { get; private set; }

        /// <summary>
        /// Gets or sets value that indicates whether the rule action requires
        /// preprocessing.
        /// </summary>
        [JsonProperty(PropertyName = "requiresPreprocessing")]
        public bool? RequiresPreprocessing { get; set; }

    }
}
