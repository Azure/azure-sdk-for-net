// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.ServiceBus.Models
{
    using Azure;
    using Management;
    using ServiceBus;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Represents set of actions written in SQL language-based syntax that is
    /// performed against a ServiceBus.Messaging.BrokeredMessage
    /// </summary>
    public partial class SqlRuleAction : Action
    {
        /// <summary>
        /// Initializes a new instance of the SqlRuleAction class.
        /// </summary>
        public SqlRuleAction() { }

        /// <summary>
        /// Initializes a new instance of the SqlRuleAction class.
        /// </summary>
        /// <param name="requiresPreprocessing">Value that indicates whether
        /// the rule action requires preprocessing.</param>
        /// <param name="sqlExpression">SQL expression. e.g.
        /// MyProperty='ABC'</param>
        /// <param name="compatibilityLevel">This property is reserved for
        /// future use. An integer value showing the compatibility level,
        /// currently hard-coded to 20.</param>
        public SqlRuleAction(bool? requiresPreprocessing = default(bool?), string sqlExpression = default(string), int? compatibilityLevel = default(int?))
            : base(requiresPreprocessing)
        {
            SqlExpression = sqlExpression;
            CompatibilityLevel = compatibilityLevel;
        }

        /// <summary>
        /// Gets or sets SQL expression. e.g. MyProperty='ABC'
        /// </summary>
        [JsonProperty(PropertyName = "sqlExpression")]
        public string SqlExpression { get; set; }

        /// <summary>
        /// Gets or sets this property is reserved for future use. An integer
        /// value showing the compatibility level, currently hard-coded to 20.
        /// </summary>
        [JsonProperty(PropertyName = "compatibilityLevel")]
        public int? CompatibilityLevel { get; set; }

    }
}

