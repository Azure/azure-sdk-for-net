// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Subscription
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for SubscriptionDefinitionsOperations.
    /// </summary>
    public static partial class SubscriptionDefinitionsOperationsExtensions
    {
            /// <summary>
            /// Create an Azure subscription definition.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionDefinitionName'>
            /// The name of the Azure subscription definition.
            /// </param>
            /// <param name='body'>
            /// The subscription definition creation.
            /// </param>
            public static SubscriptionDefinition Create(this ISubscriptionDefinitionsOperations operations, string subscriptionDefinitionName, SubscriptionDefinition body)
            {
                return operations.CreateAsync(subscriptionDefinitionName, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create an Azure subscription definition.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionDefinitionName'>
            /// The name of the Azure subscription definition.
            /// </param>
            /// <param name='body'>
            /// The subscription definition creation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SubscriptionDefinition> CreateAsync(this ISubscriptionDefinitionsOperations operations, string subscriptionDefinitionName, SubscriptionDefinition body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(subscriptionDefinitionName, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get an Azure subscription definition.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionDefinitionName'>
            /// The name of the Azure subscription definition.
            /// </param>
            public static SubscriptionDefinition Get(this ISubscriptionDefinitionsOperations operations, string subscriptionDefinitionName)
            {
                return operations.GetAsync(subscriptionDefinitionName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get an Azure subscription definition.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionDefinitionName'>
            /// The name of the Azure subscription definition.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SubscriptionDefinition> GetAsync(this ISubscriptionDefinitionsOperations operations, string subscriptionDefinitionName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(subscriptionDefinitionName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// List an Azure subscription definition by subscriptionId.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IPage<SubscriptionDefinition> List(this ISubscriptionDefinitionsOperations operations)
            {
                return operations.ListAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// List an Azure subscription definition by subscriptionId.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<SubscriptionDefinition>> ListAsync(this ISubscriptionDefinitionsOperations operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieves the status of the subscription definition PUT operation. The URI
            /// of this API is returned in the Location field of the response header.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='operationId'>
            /// The operation ID, which can be found from the Location field in the
            /// generate recommendation response header.
            /// </param>
            public static SubscriptionDefinition GetOperationStatus(this ISubscriptionDefinitionsOperations operations, System.Guid operationId)
            {
                return operations.GetOperationStatusAsync(operationId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieves the status of the subscription definition PUT operation. The URI
            /// of this API is returned in the Location field of the response header.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='operationId'>
            /// The operation ID, which can be found from the Location field in the
            /// generate recommendation response header.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SubscriptionDefinition> GetOperationStatusAsync(this ISubscriptionDefinitionsOperations operations, System.Guid operationId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetOperationStatusWithHttpMessagesAsync(operationId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create an Azure subscription definition.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionDefinitionName'>
            /// The name of the Azure subscription definition.
            /// </param>
            /// <param name='body'>
            /// The subscription definition creation.
            /// </param>
            public static SubscriptionDefinition BeginCreate(this ISubscriptionDefinitionsOperations operations, string subscriptionDefinitionName, SubscriptionDefinition body)
            {
                return operations.BeginCreateAsync(subscriptionDefinitionName, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create an Azure subscription definition.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionDefinitionName'>
            /// The name of the Azure subscription definition.
            /// </param>
            /// <param name='body'>
            /// The subscription definition creation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SubscriptionDefinition> BeginCreateAsync(this ISubscriptionDefinitionsOperations operations, string subscriptionDefinitionName, SubscriptionDefinition body, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateWithHttpMessagesAsync(subscriptionDefinitionName, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// List an Azure subscription definition by subscriptionId.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<SubscriptionDefinition> ListNext(this ISubscriptionDefinitionsOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List an Azure subscription definition by subscriptionId.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<SubscriptionDefinition>> ListNextAsync(this ISubscriptionDefinitionsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
