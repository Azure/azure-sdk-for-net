// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.StorSimple1200Series.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The iscsi server.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ISCSIServer : BaseModel
    {
        /// <summary>
        /// Initializes a new instance of the ISCSIServer class.
        /// </summary>
        public ISCSIServer()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ISCSIServer class.
        /// </summary>
        /// <param name="storageDomainId">The storage domain id.</param>
        /// <param name="backupScheduleGroupId">The backup policy id.</param>
        /// <param name="id">The identifier.</param>
        /// <param name="name">The name.</param>
        /// <param name="type">The type.</param>
        /// <param name="description">The description.</param>
        /// <param name="chapId">The chap id.</param>
        /// <param name="reverseChapId">The reverse chap id.</param>
        public ISCSIServer(string storageDomainId, string backupScheduleGroupId, string id = default(string), string name = default(string), string type = default(string), string description = default(string), string chapId = default(string), string reverseChapId = default(string))
            : base(id, name, type)
        {
            StorageDomainId = storageDomainId;
            BackupScheduleGroupId = backupScheduleGroupId;
            Description = description;
            ChapId = chapId;
            ReverseChapId = reverseChapId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the storage domain id.
        /// </summary>
        [JsonProperty(PropertyName = "properties.storageDomainId")]
        public string StorageDomainId { get; set; }

        /// <summary>
        /// Gets or sets the backup policy id.
        /// </summary>
        [JsonProperty(PropertyName = "properties.backupScheduleGroupId")]
        public string BackupScheduleGroupId { get; set; }

        /// <summary>
        /// Gets or sets the description.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the chap id.
        /// </summary>
        [JsonProperty(PropertyName = "properties.chapId")]
        public string ChapId { get; set; }

        /// <summary>
        /// Gets or sets the reverse chap id.
        /// </summary>
        [JsonProperty(PropertyName = "properties.reverseChapId")]
        public string ReverseChapId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (StorageDomainId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "StorageDomainId");
            }
            if (BackupScheduleGroupId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "BackupScheduleGroupId");
            }
        }
    }
}
