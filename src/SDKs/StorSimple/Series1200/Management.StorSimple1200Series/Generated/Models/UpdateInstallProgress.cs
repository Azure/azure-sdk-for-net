// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.StorSimple1200Series.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Class representing the progress during installation of updates
    /// </summary>
    public partial class UpdateInstallProgress
    {
        /// <summary>
        /// Initializes a new instance of the UpdateInstallProgress class.
        /// </summary>
        public UpdateInstallProgress()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UpdateInstallProgress class.
        /// </summary>
        /// <param name="percentComplete">Percentage of completion.</param>
        /// <param name="numberOfUpdatesToInstall">Number of updates to
        /// install.</param>
        /// <param name="numberOfUpdatesInstalled">Number of updates
        /// installed.</param>
        public UpdateInstallProgress(int? percentComplete = default(int?), int? numberOfUpdatesToInstall = default(int?), int? numberOfUpdatesInstalled = default(int?))
        {
            PercentComplete = percentComplete;
            NumberOfUpdatesToInstall = numberOfUpdatesToInstall;
            NumberOfUpdatesInstalled = numberOfUpdatesInstalled;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets percentage of completion.
        /// </summary>
        [JsonProperty(PropertyName = "percentComplete")]
        public int? PercentComplete { get; set; }

        /// <summary>
        /// Gets or sets number of updates to install.
        /// </summary>
        [JsonProperty(PropertyName = "numberOfUpdatesToInstall")]
        public int? NumberOfUpdatesToInstall { get; set; }

        /// <summary>
        /// Gets or sets number of updates installed.
        /// </summary>
        [JsonProperty(PropertyName = "numberOfUpdatesInstalled")]
        public int? NumberOfUpdatesInstalled { get; set; }

    }
}
