// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.StorSimple1200Series.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for DeviceType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum DeviceType
    {
        [EnumMember(Value = "Invalid")]
        Invalid,
        [EnumMember(Value = "Appliance")]
        Appliance,
        [EnumMember(Value = "VirtualAppliance")]
        VirtualAppliance,
        [EnumMember(Value = "Series9000OnPremVirtualAppliance")]
        Series9000OnPremVirtualAppliance,
        [EnumMember(Value = "Series9000VirtualAppliance")]
        Series9000VirtualAppliance,
        [EnumMember(Value = "Series9000PhysicalAppliance")]
        Series9000PhysicalAppliance
    }
    internal static class DeviceTypeEnumExtension
    {
        internal static string ToSerializedValue(this DeviceType? value)
        {
            return value == null ? null : ((DeviceType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this DeviceType value)
        {
            switch( value )
            {
                case DeviceType.Invalid:
                    return "Invalid";
                case DeviceType.Appliance:
                    return "Appliance";
                case DeviceType.VirtualAppliance:
                    return "VirtualAppliance";
                case DeviceType.Series9000OnPremVirtualAppliance:
                    return "Series9000OnPremVirtualAppliance";
                case DeviceType.Series9000VirtualAppliance:
                    return "Series9000VirtualAppliance";
                case DeviceType.Series9000PhysicalAppliance:
                    return "Series9000PhysicalAppliance";
            }
            return null;
        }

        internal static DeviceType? ParseDeviceType(this string value)
        {
            switch( value )
            {
                case "Invalid":
                    return DeviceType.Invalid;
                case "Appliance":
                    return DeviceType.Appliance;
                case "VirtualAppliance":
                    return DeviceType.VirtualAppliance;
                case "Series9000OnPremVirtualAppliance":
                    return DeviceType.Series9000OnPremVirtualAppliance;
                case "Series9000VirtualAppliance":
                    return DeviceType.Series9000VirtualAppliance;
                case "Series9000PhysicalAppliance":
                    return DeviceType.Series9000PhysicalAppliance;
            }
            return null;
        }
    }
}
