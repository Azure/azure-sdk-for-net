// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.StorSimple1200Series.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The EncryptionSettings
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class EncryptionSettings : BaseModel
    {
        /// <summary>
        /// Initializes a new instance of the EncryptionSettings class.
        /// </summary>
        public EncryptionSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EncryptionSettings class.
        /// </summary>
        /// <param name="encryptionStatus">The encryption status which
        /// indicates if encryption is enabled or not. Possible values include:
        /// 'Enabled', 'Disabled'</param>
        /// <param name="keyRolloverStatus">The key rollover status which
        /// indicates if key rollover is required or not. If secrets encryption
        /// has been upgraded, then it requires key rollover. Possible values
        /// include: 'Required', 'NotRequired'</param>
        /// <param name="id">The identifier.</param>
        /// <param name="name">The name.</param>
        /// <param name="type">The type.</param>
        public EncryptionSettings(EncryptionStatus encryptionStatus, KeyRolloverStatus keyRolloverStatus, string id = default(string), string name = default(string), string type = default(string))
            : base(id, name, type)
        {
            EncryptionStatus = encryptionStatus;
            KeyRolloverStatus = keyRolloverStatus;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the encryption status which indicates if encryption is
        /// enabled or not. Possible values include: 'Enabled', 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "properties.encryptionStatus")]
        public EncryptionStatus EncryptionStatus { get; set; }

        /// <summary>
        /// Gets or sets the key rollover status which indicates if key
        /// rollover is required or not. If secrets encryption has been
        /// upgraded, then it requires key rollover. Possible values include:
        /// 'Required', 'NotRequired'
        /// </summary>
        [JsonProperty(PropertyName = "properties.keyRolloverStatus")]
        public KeyRolloverStatus KeyRolloverStatus { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
