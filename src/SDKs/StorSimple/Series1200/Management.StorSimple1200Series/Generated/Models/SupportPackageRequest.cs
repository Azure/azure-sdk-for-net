// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.StorSimple1200Series.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    [Rest.Serialization.JsonTransformation]
    public partial class SupportPackageRequest
    {
        /// <summary>
        /// Initializes a new instance of the SupportPackageRequest class.
        /// </summary>
        public SupportPackageRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SupportPackageRequest class.
        /// </summary>
        /// <param name="packageType">Possible values include: 'None',
        /// 'IncludeDefault', 'IncludeAll', 'Mini', 'Custom'</param>
        /// <param name="sourceType">Possible values include: 'None',
        /// 'OpsTriggered', 'ClientTriggered'</param>
        public SupportPackageRequest(string sdpPassKey, SupportPackageType? packageType = default(SupportPackageType?), System.DateTime? endTime = default(System.DateTime?), System.DateTime? startTime = default(System.DateTime?), bool? includeArchived = default(bool?), SupportPackageSourceType? sourceType = default(SupportPackageSourceType?), IList<string> customIncludeList = default(IList<string>))
        {
            SdpPassKey = sdpPassKey;
            PackageType = packageType;
            EndTime = endTime;
            StartTime = startTime;
            IncludeArchived = includeArchived;
            SourceType = sourceType;
            CustomIncludeList = customIncludeList;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.sdpPassKey")]
        public string SdpPassKey { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'None', 'IncludeDefault',
        /// 'IncludeAll', 'Mini', 'Custom'
        /// </summary>
        [JsonProperty(PropertyName = "properties.packageType")]
        public SupportPackageType? PackageType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.endTime")]
        public System.DateTime? EndTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.startTime")]
        public System.DateTime? StartTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.includeArchived")]
        public bool? IncludeArchived { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'None', 'OpsTriggered',
        /// 'ClientTriggered'
        /// </summary>
        [JsonProperty(PropertyName = "properties.sourceType")]
        public SupportPackageSourceType? SourceType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.customIncludeList")]
        public IList<string> CustomIncludeList { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (SdpPassKey == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SdpPassKey");
            }
        }
    }
}
