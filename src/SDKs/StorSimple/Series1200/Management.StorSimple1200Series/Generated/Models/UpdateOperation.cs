// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.StorSimple1200Series.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for UpdateOperation.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum UpdateOperation
    {
        [EnumMember(Value = "Idle")]
        Idle,
        [EnumMember(Value = "Scanning")]
        Scanning,
        [EnumMember(Value = "Downloading")]
        Downloading,
        [EnumMember(Value = "Installing")]
        Installing
    }
    internal static class UpdateOperationEnumExtension
    {
        internal static string ToSerializedValue(this UpdateOperation? value)
        {
            return value == null ? null : ((UpdateOperation)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this UpdateOperation value)
        {
            switch( value )
            {
                case UpdateOperation.Idle:
                    return "Idle";
                case UpdateOperation.Scanning:
                    return "Scanning";
                case UpdateOperation.Downloading:
                    return "Downloading";
                case UpdateOperation.Installing:
                    return "Installing";
            }
            return null;
        }

        internal static UpdateOperation? ParseUpdateOperation(this string value)
        {
            switch( value )
            {
                case "Idle":
                    return UpdateOperation.Idle;
                case "Scanning":
                    return UpdateOperation.Scanning;
                case "Downloading":
                    return UpdateOperation.Downloading;
                case "Installing":
                    return UpdateOperation.Installing;
            }
            return null;
        }
    }
}
