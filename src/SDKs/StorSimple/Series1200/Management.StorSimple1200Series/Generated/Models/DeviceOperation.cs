// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.StorSimple1200Series.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for DeviceOperation.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum DeviceOperation
    {
        [EnumMember(Value = "None")]
        None,
        [EnumMember(Value = "Delete")]
        Delete,
        [EnumMember(Value = "DeleteWithWarning")]
        DeleteWithWarning,
        [EnumMember(Value = "DRSource")]
        DRSource,
        [EnumMember(Value = "DRTarget")]
        DRTarget,
        [EnumMember(Value = "Browsable")]
        Browsable,
        [EnumMember(Value = "ReadOnlyForDR")]
        ReadOnlyForDR,
        [EnumMember(Value = "Deactivate")]
        Deactivate
    }
    internal static class DeviceOperationEnumExtension
    {
        internal static string ToSerializedValue(this DeviceOperation? value)
        {
            return value == null ? null : ((DeviceOperation)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this DeviceOperation value)
        {
            switch( value )
            {
                case DeviceOperation.None:
                    return "None";
                case DeviceOperation.Delete:
                    return "Delete";
                case DeviceOperation.DeleteWithWarning:
                    return "DeleteWithWarning";
                case DeviceOperation.DRSource:
                    return "DRSource";
                case DeviceOperation.DRTarget:
                    return "DRTarget";
                case DeviceOperation.Browsable:
                    return "Browsable";
                case DeviceOperation.ReadOnlyForDR:
                    return "ReadOnlyForDR";
                case DeviceOperation.Deactivate:
                    return "Deactivate";
            }
            return null;
        }

        internal static DeviceOperation? ParseDeviceOperation(this string value)
        {
            switch( value )
            {
                case "None":
                    return DeviceOperation.None;
                case "Delete":
                    return DeviceOperation.Delete;
                case "DeleteWithWarning":
                    return DeviceOperation.DeleteWithWarning;
                case "DRSource":
                    return DeviceOperation.DRSource;
                case "DRTarget":
                    return DeviceOperation.DRTarget;
                case "Browsable":
                    return DeviceOperation.Browsable;
                case "ReadOnlyForDR":
                    return DeviceOperation.ReadOnlyForDR;
                case "Deactivate":
                    return DeviceOperation.Deactivate;
            }
            return null;
        }
    }
}
