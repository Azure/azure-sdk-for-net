// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Sql.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Per database settings of an elastic pool.
    /// </summary>
    public partial class ElasticPoolPerDatabaseSettings
    {
        /// <summary>
        /// Initializes a new instance of the ElasticPoolPerDatabaseSettings
        /// class.
        /// </summary>
        public ElasticPoolPerDatabaseSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ElasticPoolPerDatabaseSettings
        /// class.
        /// </summary>
        /// <param name="minCapacity">The minimum capacity all databases are
        /// guaranteed.</param>
        /// <param name="maxCapacity">The maximum capacity any one database can
        /// consume.</param>
        public ElasticPoolPerDatabaseSettings(double? minCapacity = default(double?), double? maxCapacity = default(double?))
        {
            MinCapacity = minCapacity;
            MaxCapacity = maxCapacity;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the minimum capacity all databases are guaranteed.
        /// </summary>
        [JsonProperty(PropertyName = "minCapacity")]
        public double? MinCapacity { get; set; }

        /// <summary>
        /// Gets or sets the maximum capacity any one database can consume.
        /// </summary>
        [JsonProperty(PropertyName = "maxCapacity")]
        public double? MaxCapacity { get; set; }

    }
}
