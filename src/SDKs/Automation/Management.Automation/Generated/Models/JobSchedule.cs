// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Automation.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Definition of the job schedule.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class JobSchedule
    {
        /// <summary>
        /// Initializes a new instance of the JobSchedule class.
        /// </summary>
        public JobSchedule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JobSchedule class.
        /// </summary>
        /// <param name="id">Gets or sets the id of the resource.</param>
        /// <param name="jobScheduleId">Gets or sets the id of job
        /// schedule.</param>
        /// <param name="schedule">Gets or sets the schedule.</param>
        /// <param name="runbook">Gets or sets the runbook.</param>
        /// <param name="runOn">Gets or sets the hybrid worker group that the
        /// scheduled job should run on.</param>
        /// <param name="parameters">Gets or sets the parameters of the job
        /// schedule.</param>
        public JobSchedule(string id = default(string), string jobScheduleId = default(string), ScheduleAssociationProperty schedule = default(ScheduleAssociationProperty), RunbookAssociationProperty runbook = default(RunbookAssociationProperty), string runOn = default(string), IDictionary<string, string> parameters = default(IDictionary<string, string>))
        {
            Id = id;
            JobScheduleId = jobScheduleId;
            Schedule = schedule;
            Runbook = runbook;
            RunOn = runOn;
            Parameters = parameters;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the id of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets the id of job schedule.
        /// </summary>
        [JsonProperty(PropertyName = "properties.jobScheduleId")]
        public string JobScheduleId { get; set; }

        /// <summary>
        /// Gets or sets the schedule.
        /// </summary>
        [JsonProperty(PropertyName = "properties.schedule")]
        public ScheduleAssociationProperty Schedule { get; set; }

        /// <summary>
        /// Gets or sets the runbook.
        /// </summary>
        [JsonProperty(PropertyName = "properties.runbook")]
        public RunbookAssociationProperty Runbook { get; set; }

        /// <summary>
        /// Gets or sets the hybrid worker group that the scheduled job should
        /// run on.
        /// </summary>
        [JsonProperty(PropertyName = "properties.runOn")]
        public string RunOn { get; set; }

        /// <summary>
        /// Gets or sets the parameters of the job schedule.
        /// </summary>
        [JsonProperty(PropertyName = "properties.parameters")]
        public IDictionary<string, string> Parameters { get; set; }

    }
}
