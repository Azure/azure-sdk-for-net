// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Automation.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Definition of the connection fields.
    /// </summary>
    public partial class FieldDefinition
    {
        /// <summary>
        /// Initializes a new instance of the FieldDefinition class.
        /// </summary>
        public FieldDefinition()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FieldDefinition class.
        /// </summary>
        /// <param name="type">Gets or sets the type of the connection field
        /// definition.</param>
        /// <param name="isEncrypted">Gets or sets the isEncrypted flag of the
        /// connection field definition.</param>
        /// <param name="isOptional">Gets or sets the isOptional flag of the
        /// connection field definition.</param>
        public FieldDefinition(string type, bool? isEncrypted = default(bool?), bool? isOptional = default(bool?))
        {
            IsEncrypted = isEncrypted;
            IsOptional = isOptional;
            Type = type;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the isEncrypted flag of the connection field
        /// definition.
        /// </summary>
        [JsonProperty(PropertyName = "isEncrypted")]
        public bool? IsEncrypted { get; set; }

        /// <summary>
        /// Gets or sets the isOptional flag of the connection field
        /// definition.
        /// </summary>
        [JsonProperty(PropertyName = "isOptional")]
        public bool? IsOptional { get; set; }

        /// <summary>
        /// Gets or sets the type of the connection field definition.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Type == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Type");
            }
        }
    }
}
