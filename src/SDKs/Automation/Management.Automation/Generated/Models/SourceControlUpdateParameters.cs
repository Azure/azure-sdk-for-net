// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Automation.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The parameters supplied to the update source control operation.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class SourceControlUpdateParameters
    {
        /// <summary>
        /// Initializes a new instance of the SourceControlUpdateParameters
        /// class.
        /// </summary>
        public SourceControlUpdateParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SourceControlUpdateParameters
        /// class.
        /// </summary>
        /// <param name="branch">Gets or sets the repo branch of the source
        /// control.</param>
        /// <param name="folderPath">Gets or sets the folder path of the source
        /// control. Path must be relative.</param>
        /// <param name="autoSync">Gets or sets auto async of the source
        /// control. Default is false.</param>
        /// <param name="publishRunbook">Gets or sets the auto publish of the
        /// source control. Default is true.</param>
        /// <param name="securityToken">Gets or sets the authorization token
        /// for the repo of the source control.</param>
        /// <param name="description">Gets or sets the user description of the
        /// source control.</param>
        public SourceControlUpdateParameters(string branch = default(string), string folderPath = default(string), bool? autoSync = default(bool?), bool? publishRunbook = default(bool?), string securityToken = default(string), string description = default(string))
        {
            Branch = branch;
            FolderPath = folderPath;
            AutoSync = autoSync;
            PublishRunbook = publishRunbook;
            SecurityToken = securityToken;
            Description = description;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the repo branch of the source control.
        /// </summary>
        [JsonProperty(PropertyName = "properties.branch")]
        public string Branch { get; set; }

        /// <summary>
        /// Gets or sets the folder path of the source control. Path must be
        /// relative.
        /// </summary>
        [JsonProperty(PropertyName = "properties.folderPath")]
        public string FolderPath { get; set; }

        /// <summary>
        /// Gets or sets auto async of the source control. Default is false.
        /// </summary>
        [JsonProperty(PropertyName = "properties.autoSync")]
        public bool? AutoSync { get; set; }

        /// <summary>
        /// Gets or sets the auto publish of the source control. Default is
        /// true.
        /// </summary>
        [JsonProperty(PropertyName = "properties.publishRunbook")]
        public bool? PublishRunbook { get; set; }

        /// <summary>
        /// Gets or sets the authorization token for the repo of the source
        /// control.
        /// </summary>
        [JsonProperty(PropertyName = "properties.securityToken")]
        public string SecurityToken { get; set; }

        /// <summary>
        /// Gets or sets the user description of the source control.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

    }
}
