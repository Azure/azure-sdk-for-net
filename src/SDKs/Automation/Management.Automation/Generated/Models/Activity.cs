// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Automation.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Definition of the activity.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class Activity
    {
        /// <summary>
        /// Initializes a new instance of the Activity class.
        /// </summary>
        public Activity()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Activity class.
        /// </summary>
        /// <param name="id">Gets or sets the id of the resource.</param>
        /// <param name="name">Gets the name of the activity.</param>
        /// <param name="definition">Gets or sets the user name of the
        /// activity.</param>
        /// <param name="parameterSets">Gets or sets the parameter sets of the
        /// activity.</param>
        /// <param name="outputTypes">Gets or sets the output types of the
        /// activity.</param>
        /// <param name="creationTime">Gets or sets the creation time.</param>
        /// <param name="lastModifiedTime">Gets or sets the last modified
        /// time.</param>
        /// <param name="description">Gets or sets the description.</param>
        public Activity(string id = default(string), string name = default(string), string definition = default(string), IList<ActivityParameterSet> parameterSets = default(IList<ActivityParameterSet>), IList<ActivityOutputType> outputTypes = default(IList<ActivityOutputType>), System.DateTime? creationTime = default(System.DateTime?), System.DateTime? lastModifiedTime = default(System.DateTime?), string description = default(string))
        {
            Id = id;
            Name = name;
            Definition = definition;
            ParameterSets = parameterSets;
            OutputTypes = outputTypes;
            CreationTime = creationTime;
            LastModifiedTime = lastModifiedTime;
            Description = description;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the id of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets the name of the activity.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets or sets the user name of the activity.
        /// </summary>
        [JsonProperty(PropertyName = "properties.definition")]
        public string Definition { get; set; }

        /// <summary>
        /// Gets or sets the parameter sets of the activity.
        /// </summary>
        [JsonProperty(PropertyName = "properties.parameterSets")]
        public IList<ActivityParameterSet> ParameterSets { get; set; }

        /// <summary>
        /// Gets or sets the output types of the activity.
        /// </summary>
        [JsonProperty(PropertyName = "properties.outputTypes")]
        public IList<ActivityOutputType> OutputTypes { get; set; }

        /// <summary>
        /// Gets or sets the creation time.
        /// </summary>
        [JsonProperty(PropertyName = "properties.creationTime")]
        public System.DateTime? CreationTime { get; set; }

        /// <summary>
        /// Gets or sets the last modified time.
        /// </summary>
        [JsonProperty(PropertyName = "properties.lastModifiedTime")]
        public System.DateTime? LastModifiedTime { get; set; }

        /// <summary>
        /// Gets or sets the description.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

    }
}
