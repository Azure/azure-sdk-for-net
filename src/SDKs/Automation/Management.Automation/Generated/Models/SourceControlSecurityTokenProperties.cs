// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Automation.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class SourceControlSecurityTokenProperties
    {
        /// <summary>
        /// Initializes a new instance of the
        /// SourceControlSecurityTokenProperties class.
        /// </summary>
        public SourceControlSecurityTokenProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// SourceControlSecurityTokenProperties class.
        /// </summary>
        /// <param name="accessToken">The access token.</param>
        /// <param name="refreshToken">The refresh token.</param>
        /// <param name="tokenType">The token type. Must be either
        /// PersonalAccessToken or Oauth. Possible values include:
        /// 'PersonalAccessToken', 'Oauth'</param>
        public SourceControlSecurityTokenProperties(string accessToken = default(string), string refreshToken = default(string), string tokenType = default(string))
        {
            AccessToken = accessToken;
            RefreshToken = refreshToken;
            TokenType = tokenType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the access token.
        /// </summary>
        [JsonProperty(PropertyName = "accessToken")]
        public string AccessToken { get; set; }

        /// <summary>
        /// Gets or sets the refresh token.
        /// </summary>
        [JsonProperty(PropertyName = "refreshToken")]
        public string RefreshToken { get; set; }

        /// <summary>
        /// Gets or sets the token type. Must be either PersonalAccessToken or
        /// Oauth. Possible values include: 'PersonalAccessToken', 'Oauth'
        /// </summary>
        [JsonProperty(PropertyName = "tokenType")]
        public string TokenType { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (AccessToken != null)
            {
                if (AccessToken.Length > 1024)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "AccessToken", 1024);
                }
            }
            if (RefreshToken != null)
            {
                if (RefreshToken.Length > 1024)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "RefreshToken", 1024);
                }
            }
        }
    }
}
