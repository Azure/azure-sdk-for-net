// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Automation.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Definition of the source control sync job.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class SourceControlSyncJobById
    {
        /// <summary>
        /// Initializes a new instance of the SourceControlSyncJobById class.
        /// </summary>
        public SourceControlSyncJobById()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SourceControlSyncJobById class.
        /// </summary>
        /// <param name="id">Gets the id of the job.</param>
        /// <param name="syncJobId">Gets the source control sync job
        /// id.</param>
        /// <param name="creationTime">Gets the creation time of the
        /// job.</param>
        /// <param name="provisioningState">Gets the provisioning state of the
        /// job. Possible values include: 'Completed', 'Failed',
        /// 'Running'</param>
        /// <param name="startTime">Gets the start time of the job.</param>
        /// <param name="endTime">Gets the end time of the job.</param>
        /// <param name="startType">Gets the type of start for the sync job.
        /// Possible values include: 'AutoSync', 'ManualSync'</param>
        /// <param name="exception">Gets the exceptions that occured while
        /// running the sync job.</param>
        public SourceControlSyncJobById(string id = default(string), string syncJobId = default(string), System.DateTimeOffset creationTime = default(System.DateTimeOffset), string provisioningState = default(string), System.DateTimeOffset? startTime = default(System.DateTimeOffset?), System.DateTimeOffset? endTime = default(System.DateTimeOffset?), string startType = default(string), string exception = default(string))
        {
            Id = id;
            SyncJobId = syncJobId;
            CreationTime = creationTime;
            ProvisioningState = provisioningState;
            StartTime = startTime;
            EndTime = endTime;
            StartType = startType;
            Exception = exception;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the id of the job.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets the source control sync job id.
        /// </summary>
        [JsonProperty(PropertyName = "properties.syncJobId")]
        public string SyncJobId { get; set; }

        /// <summary>
        /// Gets the creation time of the job.
        /// </summary>
        [JsonProperty(PropertyName = "properties.creationTime")]
        public System.DateTimeOffset CreationTime { get; private set; }

        /// <summary>
        /// Gets the provisioning state of the job. Possible values include:
        /// 'Completed', 'Failed', 'Running'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Gets the start time of the job.
        /// </summary>
        [JsonProperty(PropertyName = "properties.startTime")]
        public System.DateTimeOffset? StartTime { get; private set; }

        /// <summary>
        /// Gets the end time of the job.
        /// </summary>
        [JsonProperty(PropertyName = "properties.endTime")]
        public System.DateTimeOffset? EndTime { get; private set; }

        /// <summary>
        /// Gets the type of start for the sync job. Possible values include:
        /// 'AutoSync', 'ManualSync'
        /// </summary>
        [JsonProperty(PropertyName = "properties.startType")]
        public string StartType { get; set; }

        /// <summary>
        /// Gets the exceptions that occured while running the sync job.
        /// </summary>
        [JsonProperty(PropertyName = "properties.exception")]
        public string Exception { get; set; }

    }
}
