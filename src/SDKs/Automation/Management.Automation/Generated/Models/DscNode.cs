// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Automation.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Definition of a DscNode
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class DscNode : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the DscNode class.
        /// </summary>
        public DscNode()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DscNode class.
        /// </summary>
        /// <param name="id">Fully qualified resource Id for the
        /// resource</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource.</param>
        /// <param name="lastSeen">Gets or sets the last seen time of the
        /// node.</param>
        /// <param name="registrationTime">Gets or sets the registration time
        /// of the node.</param>
        /// <param name="ip">Gets or sets the ip of the node.</param>
        /// <param name="accountId">Gets or sets the account id of the
        /// node.</param>
        /// <param name="dscNodeName">Gets or sets the name of the dsc
        /// nodeconfiguration.</param>
        /// <param name="status">Gets or sets the status of the node.</param>
        /// <param name="nodeId">Gets or sets the node id.</param>
        /// <param name="etag">Gets or sets the etag of the resource.</param>
        /// <param name="totalCount">Gets the total number of records matching
        /// filter criteria.</param>
        /// <param name="extensionHandler">Gets or sets the list of
        /// extensionHandler properties for a Node.</param>
        public DscNode(string id = default(string), string name = default(string), string type = default(string), System.DateTimeOffset lastSeen = default(System.DateTimeOffset), System.DateTimeOffset registrationTime = default(System.DateTimeOffset), string ip = default(string), string accountId = default(string), string dscNodeName = default(string), string status = default(string), string nodeId = default(string), string etag = default(string), int? totalCount = default(int?), IList<DscNodeExtensionHandlerAssociationProperty> extensionHandler = default(IList<DscNodeExtensionHandlerAssociationProperty>))
            : base(id, name, type)
        {
            LastSeen = lastSeen;
            RegistrationTime = registrationTime;
            Ip = ip;
            AccountId = accountId;
            DscNodeName = dscNodeName;
            Status = status;
            NodeId = nodeId;
            Etag = etag;
            TotalCount = totalCount;
            ExtensionHandler = extensionHandler;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the last seen time of the node.
        /// </summary>
        [JsonProperty(PropertyName = "properties.lastSeen")]
        public System.DateTimeOffset LastSeen { get; set; }

        /// <summary>
        /// Gets or sets the registration time of the node.
        /// </summary>
        [JsonProperty(PropertyName = "properties.registrationTime")]
        public System.DateTimeOffset RegistrationTime { get; set; }

        /// <summary>
        /// Gets or sets the ip of the node.
        /// </summary>
        [JsonProperty(PropertyName = "properties.ip")]
        public string Ip { get; set; }

        /// <summary>
        /// Gets or sets the account id of the node.
        /// </summary>
        [JsonProperty(PropertyName = "properties.accountId")]
        public string AccountId { get; set; }

        /// <summary>
        /// Gets or sets the name of the dsc nodeconfiguration.
        /// </summary>
        [JsonProperty(PropertyName = "properties.nodeConfiguration.name")]
        public string DscNodeName { get; set; }

        /// <summary>
        /// Gets or sets the status of the node.
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets the node id.
        /// </summary>
        [JsonProperty(PropertyName = "properties.nodeId")]
        public string NodeId { get; set; }

        /// <summary>
        /// Gets or sets the etag of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.etag")]
        public string Etag { get; set; }

        /// <summary>
        /// Gets the total number of records matching filter criteria.
        /// </summary>
        [JsonProperty(PropertyName = "properties.totalCount")]
        public int? TotalCount { get; set; }

        /// <summary>
        /// Gets or sets the list of extensionHandler properties for a Node.
        /// </summary>
        [JsonProperty(PropertyName = "properties.extensionHandler")]
        public IList<DscNodeExtensionHandlerAssociationProperty> ExtensionHandler { get; set; }

    }
}
