// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DevSpaces
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for ControllersOperations.
    /// </summary>
    public static partial class ControllersOperationsExtensions
    {
            /// <summary>
            /// Gets an Azure Dev Spaces Controller.
            /// </summary>
            /// <remarks>
            /// Gets the properties for an Azure Dev Spaces Controller.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Resource group to which the resource belongs.
            /// </param>
            /// <param name='name'>
            /// Name of the resource.
            /// </param>
            public static Controller Get(this IControllersOperations operations, string resourceGroupName, string name)
            {
                return operations.GetAsync(resourceGroupName, name).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets an Azure Dev Spaces Controller.
            /// </summary>
            /// <remarks>
            /// Gets the properties for an Azure Dev Spaces Controller.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Resource group to which the resource belongs.
            /// </param>
            /// <param name='name'>
            /// Name of the resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Controller> GetAsync(this IControllersOperations operations, string resourceGroupName, string name, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, name, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates an Azure Dev Spaces Controller.
            /// </summary>
            /// <remarks>
            /// Creates an Azure Dev Spaces Controller with the specified create
            /// parameters.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Resource group to which the resource belongs.
            /// </param>
            /// <param name='name'>
            /// Name of the resource.
            /// </param>
            /// <param name='controller'>
            /// Controller create parameters.
            /// </param>
            public static Controller Create(this IControllersOperations operations, string resourceGroupName, string name, Controller controller)
            {
                return operations.CreateAsync(resourceGroupName, name, controller).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates an Azure Dev Spaces Controller.
            /// </summary>
            /// <remarks>
            /// Creates an Azure Dev Spaces Controller with the specified create
            /// parameters.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Resource group to which the resource belongs.
            /// </param>
            /// <param name='name'>
            /// Name of the resource.
            /// </param>
            /// <param name='controller'>
            /// Controller create parameters.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Controller> CreateAsync(this IControllersOperations operations, string resourceGroupName, string name, Controller controller, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(resourceGroupName, name, controller, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes an Azure Dev Spaces Controller.
            /// </summary>
            /// <remarks>
            /// Deletes an existing Azure Dev Spaces Controller.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Resource group to which the resource belongs.
            /// </param>
            /// <param name='name'>
            /// Name of the resource.
            /// </param>
            public static void Delete(this IControllersOperations operations, string resourceGroupName, string name)
            {
                operations.DeleteAsync(resourceGroupName, name).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes an Azure Dev Spaces Controller.
            /// </summary>
            /// <remarks>
            /// Deletes an existing Azure Dev Spaces Controller.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Resource group to which the resource belongs.
            /// </param>
            /// <param name='name'>
            /// Name of the resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IControllersOperations operations, string resourceGroupName, string name, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, name, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Updates an Azure Dev Spaces Controller.
            /// </summary>
            /// <remarks>
            /// Updates the properties of an existing Azure Dev Spaces Controller with the
            /// specified update parameters.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Resource group to which the resource belongs.
            /// </param>
            /// <param name='name'>
            /// Name of the resource.
            /// </param>
            /// <param name='tags'>
            /// Tags for the Azure Dev Spaces Controller.
            /// </param>
            /// <param name='targetContainerHostCredentialsBase64'>
            /// Credentials of the target container host (base64).
            /// </param>
            public static Controller Update(this IControllersOperations operations, string resourceGroupName, string name, IDictionary<string, string> tags = default(IDictionary<string, string>), string targetContainerHostCredentialsBase64 = default(string))
            {
                return operations.UpdateAsync(resourceGroupName, name, tags, targetContainerHostCredentialsBase64).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Updates an Azure Dev Spaces Controller.
            /// </summary>
            /// <remarks>
            /// Updates the properties of an existing Azure Dev Spaces Controller with the
            /// specified update parameters.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Resource group to which the resource belongs.
            /// </param>
            /// <param name='name'>
            /// Name of the resource.
            /// </param>
            /// <param name='tags'>
            /// Tags for the Azure Dev Spaces Controller.
            /// </param>
            /// <param name='targetContainerHostCredentialsBase64'>
            /// Credentials of the target container host (base64).
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Controller> UpdateAsync(this IControllersOperations operations, string resourceGroupName, string name, IDictionary<string, string> tags = default(IDictionary<string, string>), string targetContainerHostCredentialsBase64 = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(resourceGroupName, name, tags, targetContainerHostCredentialsBase64, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists the Azure Dev Spaces Controllers in a resource group.
            /// </summary>
            /// <remarks>
            /// Lists all the Azure Dev Spaces Controllers with their properties in the
            /// specified resource group and subscription.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Resource group to which the resource belongs.
            /// </param>
            public static IPage<Controller> ListByResourceGroup(this IControllersOperations operations, string resourceGroupName)
            {
                return operations.ListByResourceGroupAsync(resourceGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists the Azure Dev Spaces Controllers in a resource group.
            /// </summary>
            /// <remarks>
            /// Lists all the Azure Dev Spaces Controllers with their properties in the
            /// specified resource group and subscription.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Resource group to which the resource belongs.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<Controller>> ListByResourceGroupAsync(this IControllersOperations operations, string resourceGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByResourceGroupWithHttpMessagesAsync(resourceGroupName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists the Azure Dev Spaces Controllers in a subscription.
            /// </summary>
            /// <remarks>
            /// Lists all the Azure Dev Spaces Controllers with their properties in the
            /// subscription.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IPage<Controller> List(this IControllersOperations operations)
            {
                return operations.ListAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists the Azure Dev Spaces Controllers in a subscription.
            /// </summary>
            /// <remarks>
            /// Lists all the Azure Dev Spaces Controllers with their properties in the
            /// subscription.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<Controller>> ListAsync(this IControllersOperations operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists connection details for an Azure Dev Spaces Controller.
            /// </summary>
            /// <remarks>
            /// Lists connection details for the underlying container resources of an Azure
            /// Dev Spaces Controller.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Resource group to which the resource belongs.
            /// </param>
            /// <param name='name'>
            /// Name of the resource.
            /// </param>
            /// <param name='targetContainerHostResourceId'>
            /// Resource ID of the target container host mapped to the Azure Dev Spaces
            /// Controller.
            /// </param>
            public static ControllerConnectionDetailsList ListConnectionDetails(this IControllersOperations operations, string resourceGroupName, string name, string targetContainerHostResourceId)
            {
                return operations.ListConnectionDetailsAsync(resourceGroupName, name, targetContainerHostResourceId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists connection details for an Azure Dev Spaces Controller.
            /// </summary>
            /// <remarks>
            /// Lists connection details for the underlying container resources of an Azure
            /// Dev Spaces Controller.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Resource group to which the resource belongs.
            /// </param>
            /// <param name='name'>
            /// Name of the resource.
            /// </param>
            /// <param name='targetContainerHostResourceId'>
            /// Resource ID of the target container host mapped to the Azure Dev Spaces
            /// Controller.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ControllerConnectionDetailsList> ListConnectionDetailsAsync(this IControllersOperations operations, string resourceGroupName, string name, string targetContainerHostResourceId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListConnectionDetailsWithHttpMessagesAsync(resourceGroupName, name, targetContainerHostResourceId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates an Azure Dev Spaces Controller.
            /// </summary>
            /// <remarks>
            /// Creates an Azure Dev Spaces Controller with the specified create
            /// parameters.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Resource group to which the resource belongs.
            /// </param>
            /// <param name='name'>
            /// Name of the resource.
            /// </param>
            /// <param name='controller'>
            /// Controller create parameters.
            /// </param>
            public static Controller BeginCreate(this IControllersOperations operations, string resourceGroupName, string name, Controller controller)
            {
                return operations.BeginCreateAsync(resourceGroupName, name, controller).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates an Azure Dev Spaces Controller.
            /// </summary>
            /// <remarks>
            /// Creates an Azure Dev Spaces Controller with the specified create
            /// parameters.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Resource group to which the resource belongs.
            /// </param>
            /// <param name='name'>
            /// Name of the resource.
            /// </param>
            /// <param name='controller'>
            /// Controller create parameters.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Controller> BeginCreateAsync(this IControllersOperations operations, string resourceGroupName, string name, Controller controller, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateWithHttpMessagesAsync(resourceGroupName, name, controller, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes an Azure Dev Spaces Controller.
            /// </summary>
            /// <remarks>
            /// Deletes an existing Azure Dev Spaces Controller.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Resource group to which the resource belongs.
            /// </param>
            /// <param name='name'>
            /// Name of the resource.
            /// </param>
            public static void BeginDelete(this IControllersOperations operations, string resourceGroupName, string name)
            {
                operations.BeginDeleteAsync(resourceGroupName, name).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes an Azure Dev Spaces Controller.
            /// </summary>
            /// <remarks>
            /// Deletes an existing Azure Dev Spaces Controller.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Resource group to which the resource belongs.
            /// </param>
            /// <param name='name'>
            /// Name of the resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginDeleteAsync(this IControllersOperations operations, string resourceGroupName, string name, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginDeleteWithHttpMessagesAsync(resourceGroupName, name, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Lists the Azure Dev Spaces Controllers in a resource group.
            /// </summary>
            /// <remarks>
            /// Lists all the Azure Dev Spaces Controllers with their properties in the
            /// specified resource group and subscription.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<Controller> ListByResourceGroupNext(this IControllersOperations operations, string nextPageLink)
            {
                return operations.ListByResourceGroupNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists the Azure Dev Spaces Controllers in a resource group.
            /// </summary>
            /// <remarks>
            /// Lists all the Azure Dev Spaces Controllers with their properties in the
            /// specified resource group and subscription.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<Controller>> ListByResourceGroupNextAsync(this IControllersOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByResourceGroupNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists the Azure Dev Spaces Controllers in a subscription.
            /// </summary>
            /// <remarks>
            /// Lists all the Azure Dev Spaces Controllers with their properties in the
            /// subscription.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<Controller> ListNext(this IControllersOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists the Azure Dev Spaces Controllers in a subscription.
            /// </summary>
            /// <remarks>
            /// Lists all the Azure Dev Spaces Controllers with their properties in the
            /// subscription.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<Controller>> ListNextAsync(this IControllersOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
