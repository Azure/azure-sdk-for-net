// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerRegistry.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The properties for updating the source code repository configuration.
    /// </summary>
    public partial class SourceRepositoryUpdateParameters
    {
        /// <summary>
        /// Initializes a new instance of the SourceRepositoryUpdateParameters
        /// class.
        /// </summary>
        public SourceRepositoryUpdateParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SourceRepositoryUpdateParameters
        /// class.
        /// </summary>
        /// <param name="sourceControlAuthProperties">The authorization
        /// properties for accessing the source code repository.</param>
        /// <param name="isCommitTriggerEnabled">The value of this property
        /// indicates whether the source control commit trigger is enabled or
        /// not.</param>
        public SourceRepositoryUpdateParameters(SourceControlAuthInfo sourceControlAuthProperties = default(SourceControlAuthInfo), bool? isCommitTriggerEnabled = default(bool?))
        {
            SourceControlAuthProperties = sourceControlAuthProperties;
            IsCommitTriggerEnabled = isCommitTriggerEnabled;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the authorization properties for accessing the source
        /// code repository.
        /// </summary>
        [JsonProperty(PropertyName = "sourceControlAuthProperties")]
        public SourceControlAuthInfo SourceControlAuthProperties { get; set; }

        /// <summary>
        /// Gets or sets the value of this property indicates whether the
        /// source control commit trigger is enabled or not.
        /// </summary>
        [JsonProperty(PropertyName = "isCommitTriggerEnabled")]
        public bool? IsCommitTriggerEnabled { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (SourceControlAuthProperties != null)
            {
                SourceControlAuthProperties.Validate();
            }
        }
    }
}
