// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Graph.RBAC.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Graph;
    using Microsoft.Azure.Graph.RBAC;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Request parameters for updating an existing work or school account
    /// user.
    /// </summary>
    public partial class UserUpdateParameters
    {
        /// <summary>
        /// Initializes a new instance of the UserUpdateParameters class.
        /// </summary>
        public UserUpdateParameters()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UserUpdateParameters class.
        /// </summary>
        /// <param name="accountEnabled">Whether the account is
        /// enabled.</param>
        /// <param name="displayName">The display name of the user.</param>
        /// <param name="passwordProfile">The password profile of the
        /// user.</param>
        /// <param name="mailNickname">The mail alias for the user.</param>
        public UserUpdateParameters(bool? accountEnabled = default(bool?), string displayName = default(string), PasswordProfile passwordProfile = default(PasswordProfile), string mailNickname = default(string))
        {
            AccountEnabled = accountEnabled;
            DisplayName = displayName;
            PasswordProfile = passwordProfile;
            MailNickname = mailNickname;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets whether the account is enabled.
        /// </summary>
        [JsonProperty(PropertyName = "accountEnabled")]
        public bool? AccountEnabled { get; set; }

        /// <summary>
        /// Gets or sets the display name of the user.
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets the password profile of the user.
        /// </summary>
        [JsonProperty(PropertyName = "passwordProfile")]
        public PasswordProfile PasswordProfile { get; set; }

        /// <summary>
        /// Gets or sets the mail alias for the user.
        /// </summary>
        [JsonProperty(PropertyName = "mailNickname")]
        public string MailNickname { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (PasswordProfile != null)
            {
                PasswordProfile.Validate();
            }
        }
    }
}
