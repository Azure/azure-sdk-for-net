// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Graph.RBAC.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Graph;
    using Microsoft.Azure.Graph.RBAC;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The properties of an Active Directory object.
    /// </summary>
    public partial class AADObject
    {
        /// <summary>
        /// Initializes a new instance of the AADObject class.
        /// </summary>
        public AADObject()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AADObject class.
        /// </summary>
        /// <param name="objectId">The ID of the object.</param>
        /// <param name="objectType">The type of AAD object.</param>
        /// <param name="displayName">The display name of the object.</param>
        /// <param name="userPrincipalName">The principal name of the
        /// object.</param>
        /// <param name="mail">The primary email address of the object.</param>
        /// <param name="mailEnabled">Whether the AAD object is
        /// mail-enabled.</param>
        /// <param name="securityEnabled">Whether the AAD object is
        /// security-enabled.</param>
        /// <param name="signInName">The sign-in name of the object.</param>
        /// <param name="servicePrincipalNames">A collection of service
        /// principal names associated with the object.</param>
        /// <param name="userType">The user type of the object.</param>
        public AADObject(string objectId = default(string), string objectType = default(string), string displayName = default(string), string userPrincipalName = default(string), string mail = default(string), bool? mailEnabled = default(bool?), bool? securityEnabled = default(bool?), string signInName = default(string), IList<string> servicePrincipalNames = default(IList<string>), string userType = default(string))
        {
            ObjectId = objectId;
            ObjectType = objectType;
            DisplayName = displayName;
            UserPrincipalName = userPrincipalName;
            Mail = mail;
            MailEnabled = mailEnabled;
            SecurityEnabled = securityEnabled;
            SignInName = signInName;
            ServicePrincipalNames = servicePrincipalNames;
            UserType = userType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the ID of the object.
        /// </summary>
        [JsonProperty(PropertyName = "objectId")]
        public string ObjectId { get; set; }

        /// <summary>
        /// Gets or sets the type of AAD object.
        /// </summary>
        [JsonProperty(PropertyName = "objectType")]
        public string ObjectType { get; set; }

        /// <summary>
        /// Gets or sets the display name of the object.
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets the principal name of the object.
        /// </summary>
        [JsonProperty(PropertyName = "userPrincipalName")]
        public string UserPrincipalName { get; set; }

        /// <summary>
        /// Gets or sets the primary email address of the object.
        /// </summary>
        [JsonProperty(PropertyName = "mail")]
        public string Mail { get; set; }

        /// <summary>
        /// Gets or sets whether the AAD object is mail-enabled.
        /// </summary>
        [JsonProperty(PropertyName = "mailEnabled")]
        public bool? MailEnabled { get; set; }

        /// <summary>
        /// Gets or sets whether the AAD object is security-enabled.
        /// </summary>
        [JsonProperty(PropertyName = "securityEnabled")]
        public bool? SecurityEnabled { get; set; }

        /// <summary>
        /// Gets or sets the sign-in name of the object.
        /// </summary>
        [JsonProperty(PropertyName = "signInName")]
        public string SignInName { get; set; }

        /// <summary>
        /// Gets or sets a collection of service principal names associated
        /// with the object.
        /// </summary>
        [JsonProperty(PropertyName = "servicePrincipalNames")]
        public IList<string> ServicePrincipalNames { get; set; }

        /// <summary>
        /// Gets or sets the user type of the object.
        /// </summary>
        [JsonProperty(PropertyName = "userType")]
        public string UserType { get; set; }

    }
}
