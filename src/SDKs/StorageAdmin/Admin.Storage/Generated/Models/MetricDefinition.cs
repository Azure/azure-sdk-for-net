// Code generated by Microsoft (R) AutoRest Code Generator 1.1.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.AzureStack.Storage.Admin.Models
{
    using Microsoft.AzureStack;
    using Microsoft.AzureStack.Storage;
    using Microsoft.AzureStack.Storage.Admin;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class MetricDefinition
    {
        /// <summary>
        /// Initializes a new instance of the MetricDefinition class.
        /// </summary>
        public MetricDefinition()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MetricDefinition class.
        /// </summary>
        /// <param name="unit">Possible values include: 'Count', 'Bytes',
        /// 'Seconds', 'CountPerSecond', 'BytesPerSecond'</param>
        /// <param name="primaryAggregationType">Possible values include:
        /// 'None', 'Average', 'Total', 'Minimum', 'Maximum', 'Last'</param>
        /// <param name="metricAvailabilities">TODO</param>
        public MetricDefinition(object name = default(object), MetricUnit? unit = default(MetricUnit?), AggregateType? primaryAggregationType = default(AggregateType?), IList<MetricAvailability> metricAvailabilities = default(IList<MetricAvailability>))
        {
            Name = name;
            Unit = unit;
            PrimaryAggregationType = primaryAggregationType;
            MetricAvailabilities = metricAvailabilities;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public object Name { get; private set; }

        /// <summary>
        /// Gets possible values include: 'Count', 'Bytes', 'Seconds',
        /// 'CountPerSecond', 'BytesPerSecond'
        /// </summary>
        [JsonProperty(PropertyName = "unit")]
        public MetricUnit? Unit { get; private set; }

        /// <summary>
        /// Gets possible values include: 'None', 'Average', 'Total',
        /// 'Minimum', 'Maximum', 'Last'
        /// </summary>
        [JsonProperty(PropertyName = "primaryAggregationType")]
        public AggregateType? PrimaryAggregationType { get; private set; }

        /// <summary>
        /// Gets TODO
        /// </summary>
        [JsonProperty(PropertyName = "metricAvailabilities")]
        public IList<MetricAvailability> MetricAvailabilities { get; private set; }

    }
}
