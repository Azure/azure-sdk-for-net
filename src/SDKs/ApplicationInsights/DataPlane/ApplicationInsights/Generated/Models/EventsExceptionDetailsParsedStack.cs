// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.ApplicationInsights.Query.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// A parsed stack entry
    /// </summary>
    public partial class EventsExceptionDetailsParsedStack
    {
        /// <summary>
        /// Initializes a new instance of the EventsExceptionDetailsParsedStack
        /// class.
        /// </summary>
        public EventsExceptionDetailsParsedStack()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EventsExceptionDetailsParsedStack
        /// class.
        /// </summary>
        /// <param name="assembly">The assembly of the stack entry</param>
        /// <param name="method">The method of the stack entry</param>
        /// <param name="level">The level of the stack entry</param>
        /// <param name="line">The line of the stack entry</param>
        public EventsExceptionDetailsParsedStack(string assembly = default(string), string method = default(string), long? level = default(long?), long? line = default(long?))
        {
            Assembly = assembly;
            Method = method;
            Level = level;
            Line = line;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the assembly of the stack entry
        /// </summary>
        [JsonProperty(PropertyName = "assembly")]
        public string Assembly { get; set; }

        /// <summary>
        /// Gets or sets the method of the stack entry
        /// </summary>
        [JsonProperty(PropertyName = "method")]
        public string Method { get; set; }

        /// <summary>
        /// Gets or sets the level of the stack entry
        /// </summary>
        [JsonProperty(PropertyName = "level")]
        public long? Level { get; set; }

        /// <summary>
        /// Gets or sets the line of the stack entry
        /// </summary>
        [JsonProperty(PropertyName = "line")]
        public long? Line { get; set; }

    }
}
