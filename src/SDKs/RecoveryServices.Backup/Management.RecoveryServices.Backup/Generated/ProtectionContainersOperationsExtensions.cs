// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.Backup
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.RecoveryServices;
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for ProtectionContainersOperations.
    /// </summary>
    public static partial class ProtectionContainersOperationsExtensions
    {
            /// <summary>
            /// Gets details of the specific container registered to your Recovery Services
            /// Vault.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='vaultName'>
            /// The name of the recovery services vault.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the recovery services vault is
            /// present.
            /// </param>
            /// <param name='fabricName'>
            /// Name of the fabric where the container belongs.
            /// </param>
            /// <param name='containerName'>
            /// Name of the container whose details need to be fetched.
            /// </param>
            public static ProtectionContainerResource Get(this IProtectionContainersOperations operations, string vaultName, string resourceGroupName, string fabricName, string containerName)
            {
                return operations.GetAsync(vaultName, resourceGroupName, fabricName, containerName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets details of the specific container registered to your Recovery Services
            /// Vault.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='vaultName'>
            /// The name of the recovery services vault.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the recovery services vault is
            /// present.
            /// </param>
            /// <param name='fabricName'>
            /// Name of the fabric where the container belongs.
            /// </param>
            /// <param name='containerName'>
            /// Name of the container whose details need to be fetched.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ProtectionContainerResource> GetAsync(this IProtectionContainersOperations operations, string vaultName, string resourceGroupName, string fabricName, string containerName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(vaultName, resourceGroupName, fabricName, containerName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Discovers all the containers in the subscription that can be backed up to
            /// Recovery Services Vault. This is an asynchronous operation. To know the
            /// status of the operation, call GetRefreshOperationResult API.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='vaultName'>
            /// The name of the recovery services vault.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the recovery services vault is
            /// present.
            /// </param>
            /// <param name='fabricName'>
            /// Fabric name associated the container.
            /// </param>
            public static void Refresh(this IProtectionContainersOperations operations, string vaultName, string resourceGroupName, string fabricName)
            {
                operations.RefreshAsync(vaultName, resourceGroupName, fabricName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Discovers all the containers in the subscription that can be backed up to
            /// Recovery Services Vault. This is an asynchronous operation. To know the
            /// status of the operation, call GetRefreshOperationResult API.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='vaultName'>
            /// The name of the recovery services vault.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the recovery services vault is
            /// present.
            /// </param>
            /// <param name='fabricName'>
            /// Fabric name associated the container.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task RefreshAsync(this IProtectionContainersOperations operations, string vaultName, string resourceGroupName, string fabricName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.RefreshWithHttpMessagesAsync(vaultName, resourceGroupName, fabricName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
