// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Client script details for file / folder restore.
    /// </summary>
    public partial class ClientScriptForConnect
    {
        /// <summary>
        /// Initializes a new instance of the ClientScriptForConnect class.
        /// </summary>
        public ClientScriptForConnect()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ClientScriptForConnect class.
        /// </summary>
        /// <param name="scriptContent">File content of the client script for
        /// file / folder restore.</param>
        /// <param name="scriptExtension">File extension of the client script
        /// for file / folder restore - .ps1 , .sh , etc.</param>
        /// <param name="osType">OS type - Windows, Linux etc. for which this
        /// file / folder restore client script works.</param>
        /// <param name="url">URL of Executable from where to source the
        /// content. If this is not null then ScriptContent should not be
        /// used</param>
        /// <param name="scriptNameSuffix">Mandator suffix that should be added
        /// to the name of script that is given for download to user.
        /// If its null or empty then , ignore it.</param>
        public ClientScriptForConnect(string scriptContent = default(string), string scriptExtension = default(string), string osType = default(string), string url = default(string), string scriptNameSuffix = default(string))
        {
            ScriptContent = scriptContent;
            ScriptExtension = scriptExtension;
            OsType = osType;
            Url = url;
            ScriptNameSuffix = scriptNameSuffix;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets file content of the client script for file / folder
        /// restore.
        /// </summary>
        [JsonProperty(PropertyName = "scriptContent")]
        public string ScriptContent { get; set; }

        /// <summary>
        /// Gets or sets file extension of the client script for file / folder
        /// restore - .ps1 , .sh , etc.
        /// </summary>
        [JsonProperty(PropertyName = "scriptExtension")]
        public string ScriptExtension { get; set; }

        /// <summary>
        /// Gets or sets OS type - Windows, Linux etc. for which this file /
        /// folder restore client script works.
        /// </summary>
        [JsonProperty(PropertyName = "osType")]
        public string OsType { get; set; }

        /// <summary>
        /// Gets or sets URL of Executable from where to source the content. If
        /// this is not null then ScriptContent should not be used
        /// </summary>
        [JsonProperty(PropertyName = "url")]
        public string Url { get; set; }

        /// <summary>
        /// Gets or sets mandator suffix that should be added to the name of
        /// script that is given for download to user.
        /// If its null or empty then , ignore it.
        /// </summary>
        [JsonProperty(PropertyName = "scriptNameSuffix")]
        public string ScriptNameSuffix { get; set; }

    }
}
