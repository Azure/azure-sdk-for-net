// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.RecoveryServices;
    using Microsoft.Azure.Management.RecoveryServices.Backup;
    using System.Linq;

    /// <summary>
    /// Data Protection Manager (DPM) specific backup engine.
    /// </summary>
    public partial class DpmBackupEngine : BackupEngineBase
    {
        /// <summary>
        /// Initializes a new instance of the DpmBackupEngine class.
        /// </summary>
        public DpmBackupEngine()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DpmBackupEngine class.
        /// </summary>
        /// <param name="friendlyName">Friendly name of the backup
        /// engine.</param>
        /// <param name="backupManagementType">Type of backup management for
        /// the backup engine. Possible values include: 'Invalid',
        /// 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer',
        /// 'AzureSql'</param>
        /// <param name="registrationStatus">Registration status of the backup
        /// engine with the Recovery Services Vault.</param>
        /// <param name="backupEngineState">Status of the backup engine with
        /// the Recovery Services Vault. =
        /// {Active/Deleting/DeleteFailed}</param>
        /// <param name="healthStatus">Backup status of the backup
        /// engine.</param>
        /// <param name="canReRegister">Flag indicating if the backup engine be
        /// registered, once already registered.</param>
        /// <param name="backupEngineId">ID of the backup engine.</param>
        /// <param name="dpmVersion">Backup engine version</param>
        /// <param name="azureBackupAgentVersion">Backup agent version</param>
        /// <param name="isAzureBackupAgentUpgradeAvailable">To check if backup
        /// agent upgrade available</param>
        /// <param name="isDPMUpgradeAvailable">To check if backup engine
        /// upgrade available</param>
        /// <param name="extendedInfo">Extended info of the
        /// backupengine</param>
        public DpmBackupEngine(string friendlyName = default(string), string backupManagementType = default(string), string registrationStatus = default(string), string backupEngineState = default(string), string healthStatus = default(string), bool? canReRegister = default(bool?), string backupEngineId = default(string), string dpmVersion = default(string), string azureBackupAgentVersion = default(string), bool? isAzureBackupAgentUpgradeAvailable = default(bool?), bool? isDPMUpgradeAvailable = default(bool?), BackupEngineExtendedInfo extendedInfo = default(BackupEngineExtendedInfo))
            : base(friendlyName, backupManagementType, registrationStatus, backupEngineState, healthStatus, canReRegister, backupEngineId, dpmVersion, azureBackupAgentVersion, isAzureBackupAgentUpgradeAvailable, isDPMUpgradeAvailable, extendedInfo)
        {
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

    }
}
