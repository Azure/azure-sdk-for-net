// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.RecoveryServices;
    using Microsoft.Azure.Management.RecoveryServices.Backup;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The base backup engine class. All workload specific backup engines
    /// derive from this class.
    /// </summary>
    public partial class BackupEngineBase
    {
        /// <summary>
        /// Initializes a new instance of the BackupEngineBase class.
        /// </summary>
        public BackupEngineBase()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BackupEngineBase class.
        /// </summary>
        /// <param name="friendlyName">Friendly name of the backup
        /// engine.</param>
        /// <param name="backupManagementType">Type of backup management for
        /// the backup engine. Possible values include: 'Invalid',
        /// 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer',
        /// 'AzureSql'</param>
        /// <param name="registrationStatus">Registration status of the backup
        /// engine with the Recovery Services Vault.</param>
        /// <param name="backupEngineState">Status of the backup engine with
        /// the Recovery Services Vault. =
        /// {Active/Deleting/DeleteFailed}</param>
        /// <param name="healthStatus">Backup status of the backup
        /// engine.</param>
        /// <param name="canReRegister">Flag indicating if the backup engine be
        /// registered, once already registered.</param>
        /// <param name="backupEngineId">ID of the backup engine.</param>
        /// <param name="dpmVersion">Backup engine version</param>
        /// <param name="azureBackupAgentVersion">Backup agent version</param>
        /// <param name="isAzureBackupAgentUpgradeAvailable">To check if backup
        /// agent upgrade available</param>
        /// <param name="isDPMUpgradeAvailable">To check if backup engine
        /// upgrade available</param>
        /// <param name="extendedInfo">Extended info of the
        /// backupengine</param>
        public BackupEngineBase(string friendlyName = default(string), string backupManagementType = default(string), string registrationStatus = default(string), string backupEngineState = default(string), string healthStatus = default(string), bool? canReRegister = default(bool?), string backupEngineId = default(string), string dpmVersion = default(string), string azureBackupAgentVersion = default(string), bool? isAzureBackupAgentUpgradeAvailable = default(bool?), bool? isDPMUpgradeAvailable = default(bool?), BackupEngineExtendedInfo extendedInfo = default(BackupEngineExtendedInfo))
        {
            FriendlyName = friendlyName;
            BackupManagementType = backupManagementType;
            RegistrationStatus = registrationStatus;
            BackupEngineState = backupEngineState;
            HealthStatus = healthStatus;
            CanReRegister = canReRegister;
            BackupEngineId = backupEngineId;
            DpmVersion = dpmVersion;
            AzureBackupAgentVersion = azureBackupAgentVersion;
            IsAzureBackupAgentUpgradeAvailable = isAzureBackupAgentUpgradeAvailable;
            IsDPMUpgradeAvailable = isDPMUpgradeAvailable;
            ExtendedInfo = extendedInfo;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets friendly name of the backup engine.
        /// </summary>
        [JsonProperty(PropertyName = "friendlyName")]
        public string FriendlyName { get; set; }

        /// <summary>
        /// Gets or sets type of backup management for the backup engine.
        /// Possible values include: 'Invalid', 'AzureIaasVM', 'MAB', 'DPM',
        /// 'AzureBackupServer', 'AzureSql'
        /// </summary>
        [JsonProperty(PropertyName = "backupManagementType")]
        public string BackupManagementType { get; set; }

        /// <summary>
        /// Gets or sets registration status of the backup engine with the
        /// Recovery Services Vault.
        /// </summary>
        [JsonProperty(PropertyName = "registrationStatus")]
        public string RegistrationStatus { get; set; }

        /// <summary>
        /// Gets or sets status of the backup engine with the Recovery Services
        /// Vault. = {Active/Deleting/DeleteFailed}
        /// </summary>
        [JsonProperty(PropertyName = "backupEngineState")]
        public string BackupEngineState { get; set; }

        /// <summary>
        /// Gets or sets backup status of the backup engine.
        /// </summary>
        [JsonProperty(PropertyName = "healthStatus")]
        public string HealthStatus { get; set; }

        /// <summary>
        /// Gets or sets flag indicating if the backup engine be registered,
        /// once already registered.
        /// </summary>
        [JsonProperty(PropertyName = "canReRegister")]
        public bool? CanReRegister { get; set; }

        /// <summary>
        /// Gets or sets ID of the backup engine.
        /// </summary>
        [JsonProperty(PropertyName = "backupEngineId")]
        public string BackupEngineId { get; set; }

        /// <summary>
        /// Gets or sets backup engine version
        /// </summary>
        [JsonProperty(PropertyName = "dpmVersion")]
        public string DpmVersion { get; set; }

        /// <summary>
        /// Gets or sets backup agent version
        /// </summary>
        [JsonProperty(PropertyName = "azureBackupAgentVersion")]
        public string AzureBackupAgentVersion { get; set; }

        /// <summary>
        /// Gets or sets to check if backup agent upgrade available
        /// </summary>
        [JsonProperty(PropertyName = "isAzureBackupAgentUpgradeAvailable")]
        public bool? IsAzureBackupAgentUpgradeAvailable { get; set; }

        /// <summary>
        /// Gets or sets to check if backup engine upgrade available
        /// </summary>
        [JsonProperty(PropertyName = "isDPMUpgradeAvailable")]
        public bool? IsDPMUpgradeAvailable { get; set; }

        /// <summary>
        /// Gets or sets extended info of the backupengine
        /// </summary>
        [JsonProperty(PropertyName = "extendedInfo")]
        public BackupEngineExtendedInfo ExtendedInfo { get; set; }

    }
}
