// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// MAB workload-specific job.
    /// </summary>
    public partial class MabJob : Job
    {
        /// <summary>
        /// Initializes a new instance of the MabJob class.
        /// </summary>
        public MabJob()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MabJob class.
        /// </summary>
        /// <param name="entityFriendlyName">Friendly name of the entity on
        /// which the current job is executing.</param>
        /// <param name="backupManagementType">Backup management type to
        /// execute the current job. Possible values include: 'Invalid',
        /// 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql',
        /// 'AzureStorage', 'AzureWorkload', 'DefaultBackup'</param>
        /// <param name="operation">The operation name.</param>
        /// <param name="status">Job status.</param>
        /// <param name="startTime">The start time.</param>
        /// <param name="endTime">The end time.</param>
        /// <param name="activityId">ActivityId of job.</param>
        /// <param name="duration">Time taken by job to run.</param>
        /// <param name="actionsInfo">The state/actions applicable on jobs like
        /// cancel/retry.</param>
        /// <param name="mabServerName">Name of server protecting the
        /// DS.</param>
        /// <param name="mabServerType">Server type of MAB container. Possible
        /// values include: 'Invalid', 'Unknown', 'IaasVMContainer',
        /// 'IaasVMServiceContainer', 'DPMContainer',
        /// 'AzureBackupServerContainer', 'MABContainer', 'Cluster',
        /// 'AzureSqlContainer', 'Windows', 'VCenter', 'VMAppContainer',
        /// 'SQLAGWorkLoadContainer', 'StorageContainer', 'GenericContainer',
        /// 'SqlCluster', 'ExchangeDAG', 'SharepointFarm', 'HyperVCluster',
        /// 'WindowsClient'</param>
        /// <param name="workloadType">Workload type of backup item. Possible
        /// values include: 'Invalid', 'VM', 'FileFolder', 'AzureSqlDb',
        /// 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState',
        /// 'Client', 'GenericDataSource', 'SQLDataBase', 'AzureFileShare',
        /// 'SAPHanaDatabase'</param>
        /// <param name="errorDetails">The errors.</param>
        /// <param name="extendedInfo">Additional information on the
        /// job.</param>
        public MabJob(string entityFriendlyName = default(string), string backupManagementType = default(string), string operation = default(string), string status = default(string), System.DateTime? startTime = default(System.DateTime?), System.DateTime? endTime = default(System.DateTime?), string activityId = default(string), System.TimeSpan? duration = default(System.TimeSpan?), IList<JobSupportedAction?> actionsInfo = default(IList<JobSupportedAction?>), string mabServerName = default(string), string mabServerType = default(string), string workloadType = default(string), IList<MabErrorInfo> errorDetails = default(IList<MabErrorInfo>), MabJobExtendedInfo extendedInfo = default(MabJobExtendedInfo))
            : base(entityFriendlyName, backupManagementType, operation, status, startTime, endTime, activityId)
        {
            Duration = duration;
            ActionsInfo = actionsInfo;
            MabServerName = mabServerName;
            MabServerType = mabServerType;
            WorkloadType = workloadType;
            ErrorDetails = errorDetails;
            ExtendedInfo = extendedInfo;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets time taken by job to run.
        /// </summary>
        [JsonProperty(PropertyName = "duration")]
        public System.TimeSpan? Duration { get; set; }

        /// <summary>
        /// Gets or sets the state/actions applicable on jobs like
        /// cancel/retry.
        /// </summary>
        [JsonProperty(PropertyName = "actionsInfo")]
        public IList<JobSupportedAction?> ActionsInfo { get; set; }

        /// <summary>
        /// Gets or sets name of server protecting the DS.
        /// </summary>
        [JsonProperty(PropertyName = "mabServerName")]
        public string MabServerName { get; set; }

        /// <summary>
        /// Gets or sets server type of MAB container. Possible values include:
        /// 'Invalid', 'Unknown', 'IaasVMContainer', 'IaasVMServiceContainer',
        /// 'DPMContainer', 'AzureBackupServerContainer', 'MABContainer',
        /// 'Cluster', 'AzureSqlContainer', 'Windows', 'VCenter',
        /// 'VMAppContainer', 'SQLAGWorkLoadContainer', 'StorageContainer',
        /// 'GenericContainer', 'SqlCluster', 'ExchangeDAG', 'SharepointFarm',
        /// 'HyperVCluster', 'WindowsClient'
        /// </summary>
        [JsonProperty(PropertyName = "mabServerType")]
        public string MabServerType { get; set; }

        /// <summary>
        /// Gets or sets workload type of backup item. Possible values include:
        /// 'Invalid', 'VM', 'FileFolder', 'AzureSqlDb', 'SQLDB', 'Exchange',
        /// 'Sharepoint', 'VMwareVM', 'SystemState', 'Client',
        /// 'GenericDataSource', 'SQLDataBase', 'AzureFileShare',
        /// 'SAPHanaDatabase'
        /// </summary>
        [JsonProperty(PropertyName = "workloadType")]
        public string WorkloadType { get; set; }

        /// <summary>
        /// Gets or sets the errors.
        /// </summary>
        [JsonProperty(PropertyName = "errorDetails")]
        public IList<MabErrorInfo> ErrorDetails { get; set; }

        /// <summary>
        /// Gets or sets additional information on the job.
        /// </summary>
        [JsonProperty(PropertyName = "extendedInfo")]
        public MabJobExtendedInfo ExtendedInfo { get; set; }

    }
}
