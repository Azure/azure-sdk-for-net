// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.RecoveryServices;
    using Microsoft.Azure.Management.RecoveryServices.Backup;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Base class for backup items.
    /// </summary>
    public partial class ProtectedItem
    {
        /// <summary>
        /// Initializes a new instance of the ProtectedItem class.
        /// </summary>
        public ProtectedItem()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ProtectedItem class.
        /// </summary>
        /// <param name="backupManagementType">Type of backup managemenent for
        /// the backed up item. Possible values include: 'Invalid',
        /// 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer',
        /// 'AzureSql'</param>
        /// <param name="workloadType">Type of workload this item represents.
        /// Possible values include: 'Invalid', 'VM', 'FileFolder',
        /// 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM',
        /// 'SystemState', 'Client', 'GenericDataSource'</param>
        /// <param name="containerName">Unique name of container</param>
        /// <param name="sourceResourceId">ARM ID of the resource to be backed
        /// up.</param>
        /// <param name="policyId">ID of the backup policy with which this item
        /// is backed up.</param>
        /// <param name="lastRecoveryPoint">Timestamp when the last (latest)
        /// backup copy was created for this backup item.</param>
        public ProtectedItem(string backupManagementType = default(string), string workloadType = default(string), string containerName = default(string), string sourceResourceId = default(string), string policyId = default(string), System.DateTime? lastRecoveryPoint = default(System.DateTime?))
        {
            BackupManagementType = backupManagementType;
            WorkloadType = workloadType;
            ContainerName = containerName;
            SourceResourceId = sourceResourceId;
            PolicyId = policyId;
            LastRecoveryPoint = lastRecoveryPoint;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets type of backup managemenent for the backed up item.
        /// Possible values include: 'Invalid', 'AzureIaasVM', 'MAB', 'DPM',
        /// 'AzureBackupServer', 'AzureSql'
        /// </summary>
        [JsonProperty(PropertyName = "backupManagementType")]
        public string BackupManagementType { get; set; }

        /// <summary>
        /// Gets or sets type of workload this item represents. Possible values
        /// include: 'Invalid', 'VM', 'FileFolder', 'AzureSqlDb', 'SQLDB',
        /// 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client',
        /// 'GenericDataSource'
        /// </summary>
        [JsonProperty(PropertyName = "workloadType")]
        public string WorkloadType { get; set; }

        /// <summary>
        /// Gets or sets unique name of container
        /// </summary>
        [JsonProperty(PropertyName = "containerName")]
        public string ContainerName { get; set; }

        /// <summary>
        /// Gets or sets ARM ID of the resource to be backed up.
        /// </summary>
        [JsonProperty(PropertyName = "sourceResourceId")]
        public string SourceResourceId { get; set; }

        /// <summary>
        /// Gets or sets ID of the backup policy with which this item is backed
        /// up.
        /// </summary>
        [JsonProperty(PropertyName = "policyId")]
        public string PolicyId { get; set; }

        /// <summary>
        /// Gets or sets timestamp when the last (latest) backup copy was
        /// created for this backup item.
        /// </summary>
        [JsonProperty(PropertyName = "lastRecoveryPoint")]
        public System.DateTime? LastRecoveryPoint { get; set; }

    }
}
