// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Filters to list items that can be backed up.
    /// </summary>
    public partial class BMSPOQueryObject
    {
        /// <summary>
        /// Initializes a new instance of the BMSPOQueryObject class.
        /// </summary>
        public BMSPOQueryObject()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BMSPOQueryObject class.
        /// </summary>
        /// <param name="backupManagementType">Backup management type. Possible
        /// values include: 'Invalid', 'AzureIaasVM', 'MAB', 'DPM',
        /// 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
        /// 'DefaultBackup'</param>
        /// <param name="workloadType">Workload type. Possible values include:
        /// 'Invalid', 'VM', 'FileFolder', 'AzureSqlDb', 'SQLDB', 'Exchange',
        /// 'Sharepoint', 'VMwareVM', 'SystemState', 'Client',
        /// 'GenericDataSource', 'SQLDataBase', 'AzureFileShare',
        /// 'SAPHanaDatabase'</param>
        /// <param name="containerName">Full name of the container whose
        /// Protectable Objects should be returned.</param>
        /// <param name="status">Backup status query parameter.</param>
        /// <param name="friendlyName">Friendly name.</param>
        public BMSPOQueryObject(string backupManagementType = default(string), string workloadType = default(string), string containerName = default(string), string status = default(string), string friendlyName = default(string))
        {
            BackupManagementType = backupManagementType;
            WorkloadType = workloadType;
            ContainerName = containerName;
            Status = status;
            FriendlyName = friendlyName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets backup management type. Possible values include:
        /// 'Invalid', 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer',
        /// 'AzureSql', 'AzureStorage', 'AzureWorkload', 'DefaultBackup'
        /// </summary>
        [JsonProperty(PropertyName = "backupManagementType")]
        public string BackupManagementType { get; set; }

        /// <summary>
        /// Gets or sets workload type. Possible values include: 'Invalid',
        /// 'VM', 'FileFolder', 'AzureSqlDb', 'SQLDB', 'Exchange',
        /// 'Sharepoint', 'VMwareVM', 'SystemState', 'Client',
        /// 'GenericDataSource', 'SQLDataBase', 'AzureFileShare',
        /// 'SAPHanaDatabase'
        /// </summary>
        [JsonProperty(PropertyName = "workloadType")]
        public string WorkloadType { get; set; }

        /// <summary>
        /// Gets or sets full name of the container whose Protectable Objects
        /// should be returned.
        /// </summary>
        [JsonProperty(PropertyName = "containerName")]
        public string ContainerName { get; set; }

        /// <summary>
        /// Gets or sets backup status query parameter.
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets friendly name.
        /// </summary>
        [JsonProperty(PropertyName = "friendlyName")]
        public string FriendlyName { get; set; }

    }
}
