// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Azure Storage Account workload-specific container.
    /// </summary>
    [Newtonsoft.Json.JsonObject("StorageContainer")]
    public partial class AzureStorageContainer : ProtectionContainer
    {
        /// <summary>
        /// Initializes a new instance of the AzureStorageContainer class.
        /// </summary>
        public AzureStorageContainer()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AzureStorageContainer class.
        /// </summary>
        /// <param name="friendlyName">Friendly name of the container.</param>
        /// <param name="backupManagementType">Type of backup managemenent for
        /// the container. Possible values include: 'Invalid', 'AzureIaasVM',
        /// 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage',
        /// 'AzureWorkload', 'DefaultBackup'</param>
        /// <param name="registrationStatus">Status of registration of the
        /// container with the Recovery Services Vault.</param>
        /// <param name="healthStatus">Status of health of the
        /// container.</param>
        /// <param name="sourceResourceId">Fully qualified ARM url.</param>
        /// <param name="storageAccountVersion">Storage account
        /// version.</param>
        /// <param name="resourceGroup">Resource group name of Recovery
        /// Services Vault.</param>
        /// <param name="protectedItemCount">Number of items backed up in this
        /// container.</param>
        public AzureStorageContainer(string friendlyName = default(string), string backupManagementType = default(string), string registrationStatus = default(string), string healthStatus = default(string), string sourceResourceId = default(string), string storageAccountVersion = default(string), string resourceGroup = default(string), long? protectedItemCount = default(long?))
            : base(friendlyName, backupManagementType, registrationStatus, healthStatus)
        {
            SourceResourceId = sourceResourceId;
            StorageAccountVersion = storageAccountVersion;
            ResourceGroup = resourceGroup;
            ProtectedItemCount = protectedItemCount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets fully qualified ARM url.
        /// </summary>
        [JsonProperty(PropertyName = "sourceResourceId")]
        public string SourceResourceId { get; set; }

        /// <summary>
        /// Gets or sets storage account version.
        /// </summary>
        [JsonProperty(PropertyName = "storageAccountVersion")]
        public string StorageAccountVersion { get; set; }

        /// <summary>
        /// Gets or sets resource group name of Recovery Services Vault.
        /// </summary>
        [JsonProperty(PropertyName = "resourceGroup")]
        public string ResourceGroup { get; set; }

        /// <summary>
        /// Gets or sets number of items backed up in this container.
        /// </summary>
        [JsonProperty(PropertyName = "protectedItemCount")]
        public long? ProtectedItemCount { get; set; }

    }
}
