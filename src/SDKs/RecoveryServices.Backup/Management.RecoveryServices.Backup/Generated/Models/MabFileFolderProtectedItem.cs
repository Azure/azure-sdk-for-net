// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.RecoveryServices;
    using Microsoft.Azure.Management.RecoveryServices.Backup;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// MAB workload-specific backup item.
    /// </summary>
    public partial class MabFileFolderProtectedItem : ProtectedItem
    {
        /// <summary>
        /// Initializes a new instance of the MabFileFolderProtectedItem class.
        /// </summary>
        public MabFileFolderProtectedItem()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MabFileFolderProtectedItem class.
        /// </summary>
        /// <param name="backupManagementType">Type of backup managemenent for
        /// the backed up item. Possible values include: 'Invalid',
        /// 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer',
        /// 'AzureSql'</param>
        /// <param name="workloadType">Type of workload this item represents.
        /// Possible values include: 'Invalid', 'VM', 'FileFolder',
        /// 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM',
        /// 'SystemState', 'Client', 'GenericDataSource'</param>
        /// <param name="containerName">Unique name of container</param>
        /// <param name="sourceResourceId">ARM ID of the resource to be backed
        /// up.</param>
        /// <param name="policyId">ID of the backup policy with which this item
        /// is backed up.</param>
        /// <param name="lastRecoveryPoint">Timestamp when the last (latest)
        /// backup copy was created for this backup item.</param>
        /// <param name="friendlyName">Friendly name of this backup
        /// item.</param>
        /// <param name="computerName">Name of the computer associated with
        /// this backup item.</param>
        /// <param name="lastBackupStatus">Status of last backup
        /// operation.</param>
        /// <param name="protectionState">Protected, ProtectionStopped,
        /// IRPending or ProtectionError</param>
        /// <param name="isScheduledForDeferredDelete">Specifies if the item is
        /// scheduled for deferred deletion.</param>
        /// <param name="deferredDeleteSyncTimeInUTC">Sync time for deferred
        /// deletion.</param>
        /// <param name="extendedInfo">Additional information with this backup
        /// item.</param>
        public MabFileFolderProtectedItem(string backupManagementType = default(string), string workloadType = default(string), string containerName = default(string), string sourceResourceId = default(string), string policyId = default(string), System.DateTime? lastRecoveryPoint = default(System.DateTime?), string friendlyName = default(string), string computerName = default(string), string lastBackupStatus = default(string), string protectionState = default(string), bool? isScheduledForDeferredDelete = default(bool?), long? deferredDeleteSyncTimeInUTC = default(long?), MabFileFolderProtectedItemExtendedInfo extendedInfo = default(MabFileFolderProtectedItemExtendedInfo))
            : base(backupManagementType, workloadType, containerName, sourceResourceId, policyId, lastRecoveryPoint)
        {
            FriendlyName = friendlyName;
            ComputerName = computerName;
            LastBackupStatus = lastBackupStatus;
            ProtectionState = protectionState;
            IsScheduledForDeferredDelete = isScheduledForDeferredDelete;
            DeferredDeleteSyncTimeInUTC = deferredDeleteSyncTimeInUTC;
            ExtendedInfo = extendedInfo;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets friendly name of this backup item.
        /// </summary>
        [JsonProperty(PropertyName = "friendlyName")]
        public string FriendlyName { get; set; }

        /// <summary>
        /// Gets or sets name of the computer associated with this backup item.
        /// </summary>
        [JsonProperty(PropertyName = "computerName")]
        public string ComputerName { get; set; }

        /// <summary>
        /// Gets or sets status of last backup operation.
        /// </summary>
        [JsonProperty(PropertyName = "lastBackupStatus")]
        public string LastBackupStatus { get; set; }

        /// <summary>
        /// Gets or sets protected, ProtectionStopped, IRPending or
        /// ProtectionError
        /// </summary>
        [JsonProperty(PropertyName = "protectionState")]
        public string ProtectionState { get; set; }

        /// <summary>
        /// Gets or sets specifies if the item is scheduled for deferred
        /// deletion.
        /// </summary>
        [JsonProperty(PropertyName = "isScheduledForDeferredDelete")]
        public bool? IsScheduledForDeferredDelete { get; set; }

        /// <summary>
        /// Gets or sets sync time for deferred deletion.
        /// </summary>
        [JsonProperty(PropertyName = "deferredDeleteSyncTimeInUTC")]
        public long? DeferredDeleteSyncTimeInUTC { get; set; }

        /// <summary>
        /// Gets or sets additional information with this backup item.
        /// </summary>
        [JsonProperty(PropertyName = "extendedInfo")]
        public MabFileFolderProtectedItemExtendedInfo ExtendedInfo { get; set; }

    }
}
