// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.RecoveryServices.Backup
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Microsoft.Rest.Azure.OData;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for BackupFabricsOperations.
    /// </summary>
    public static partial class BackupFabricsOperationsExtensions
    {
            /// <summary>
            /// Retruns backup fabrics registered to Recovery Services Vault. Returns a
            /// pageable list of fabrics.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='vaultName'>
            /// The name of the recovery services vault.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the recovery services vault is
            /// present.
            /// </param>
            /// <param name='odataQuery'>
            /// OData parameters to apply to the operation.
            /// </param>
            /// <param name='skipToken'>
            /// skipToken Filter.
            /// </param>
            public static IPage<GenericBackupFabricResource> List(this IBackupFabricsOperations operations, string vaultName, string resourceGroupName, ODataQuery<BMSBackupFabricsQueryObject> odataQuery = default(ODataQuery<BMSBackupFabricsQueryObject>), string skipToken = default(string))
            {
                return operations.ListAsync(vaultName, resourceGroupName, odataQuery, skipToken).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retruns backup fabrics registered to Recovery Services Vault. Returns a
            /// pageable list of fabrics.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='vaultName'>
            /// The name of the recovery services vault.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the recovery services vault is
            /// present.
            /// </param>
            /// <param name='odataQuery'>
            /// OData parameters to apply to the operation.
            /// </param>
            /// <param name='skipToken'>
            /// skipToken Filter.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<GenericBackupFabricResource>> ListAsync(this IBackupFabricsOperations operations, string vaultName, string resourceGroupName, ODataQuery<BMSBackupFabricsQueryObject> odataQuery = default(ODataQuery<BMSBackupFabricsQueryObject>), string skipToken = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(vaultName, resourceGroupName, odataQuery, skipToken, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Returns backup fabric registered to Recovery Services Vault.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='vaultName'>
            /// The name of the recovery services vault.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the recovery services vault is
            /// present.
            /// </param>
            /// <param name='fabricName'>
            /// Name of the backup backup fabric.
            /// </param>
            /// <param name='odataQuery'>
            /// OData parameters to apply to the operation.
            /// </param>
            /// <param name='skipToken'>
            /// skipToken Filter.
            /// </param>
            public static GenericBackupFabricResource Get(this IBackupFabricsOperations operations, string vaultName, string resourceGroupName, string fabricName, ODataQuery<BMSBackupFabricQueryObject> odataQuery = default(ODataQuery<BMSBackupFabricQueryObject>), string skipToken = default(string))
            {
                return operations.GetAsync(vaultName, resourceGroupName, fabricName, odataQuery, skipToken).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns backup fabric registered to Recovery Services Vault.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='vaultName'>
            /// The name of the recovery services vault.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the recovery services vault is
            /// present.
            /// </param>
            /// <param name='fabricName'>
            /// Name of the backup backup fabric.
            /// </param>
            /// <param name='odataQuery'>
            /// OData parameters to apply to the operation.
            /// </param>
            /// <param name='skipToken'>
            /// skipToken Filter.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<GenericBackupFabricResource> GetAsync(this IBackupFabricsOperations operations, string vaultName, string resourceGroupName, string fabricName, ODataQuery<BMSBackupFabricQueryObject> odataQuery = default(ODataQuery<BMSBackupFabricQueryObject>), string skipToken = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(vaultName, resourceGroupName, fabricName, odataQuery, skipToken, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create or Update the backup fabric in Recovery Services Vault
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='vaultName'>
            /// The name of the recovery services vault.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the recovery services vault is
            /// present.
            /// </param>
            /// <param name='fabricName'>
            /// Name of the backup backup fabric.
            /// </param>
            /// <param name='parameters'>
            /// fabric resource item
            /// </param>
            public static GenericBackupFabricResource CreateOrUpdate(this IBackupFabricsOperations operations, string vaultName, string resourceGroupName, string fabricName, GenericBackupFabricResource parameters)
            {
                return operations.CreateOrUpdateAsync(vaultName, resourceGroupName, fabricName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create or Update the backup fabric in Recovery Services Vault
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='vaultName'>
            /// The name of the recovery services vault.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the recovery services vault is
            /// present.
            /// </param>
            /// <param name='fabricName'>
            /// Name of the backup backup fabric.
            /// </param>
            /// <param name='parameters'>
            /// fabric resource item
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<GenericBackupFabricResource> CreateOrUpdateAsync(this IBackupFabricsOperations operations, string vaultName, string resourceGroupName, string fabricName, GenericBackupFabricResource parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(vaultName, resourceGroupName, fabricName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes the backup fabric in Recovery Services Vault
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='vaultName'>
            /// The name of the recovery services vault.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the recovery services vault is
            /// present.
            /// </param>
            /// <param name='fabricName'>
            /// Name of the backup backup fabric.
            /// </param>
            public static void Delete(this IBackupFabricsOperations operations, string vaultName, string resourceGroupName, string fabricName)
            {
                operations.DeleteAsync(vaultName, resourceGroupName, fabricName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes the backup fabric in Recovery Services Vault
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='vaultName'>
            /// The name of the recovery services vault.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group where the recovery services vault is
            /// present.
            /// </param>
            /// <param name='fabricName'>
            /// Name of the backup backup fabric.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IBackupFabricsOperations operations, string vaultName, string resourceGroupName, string fabricName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(vaultName, resourceGroupName, fabricName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Retruns backup fabrics registered to Recovery Services Vault. Returns a
            /// pageable list of fabrics.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<GenericBackupFabricResource> ListNext(this IBackupFabricsOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retruns backup fabrics registered to Recovery Services Vault. Returns a
            /// pageable list of fabrics.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<GenericBackupFabricResource>> ListNextAsync(this IBackupFabricsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
