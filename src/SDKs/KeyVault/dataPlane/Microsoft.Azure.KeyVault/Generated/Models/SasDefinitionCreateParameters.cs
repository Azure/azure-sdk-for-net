// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.KeyVault.Models
{
    using Azure;
    using KeyVault;
    using Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The SAS definition create parameters.
    /// </summary>
    public partial class SasDefinitionCreateParameters
    {
        /// <summary>
        /// Initializes a new instance of the SasDefinitionCreateParameters
        /// class.
        /// </summary>
        public SasDefinitionCreateParameters() { }

        /// <summary>
        /// Initializes a new instance of the SasDefinitionCreateParameters
        /// class.
        /// </summary>
        /// <param name="parameters">Sas definition creation metadata in the
        /// form of key-value pairs.</param>
        /// <param name="sasDefinitionAttributes">The attributes of the SAS
        /// definition.</param>
        /// <param name="tags">Application specific metadata in the form of
        /// key-value pairs.</param>
        public SasDefinitionCreateParameters(IDictionary<string, string> parameters, SasDefinitionAttributes sasDefinitionAttributes = default(SasDefinitionAttributes), IDictionary<string, string> tags = default(IDictionary<string, string>))
        {
            Parameters = parameters;
            SasDefinitionAttributes = sasDefinitionAttributes;
            Tags = tags;
        }

        /// <summary>
        /// Gets or sets sas definition creation metadata in the form of
        /// key-value pairs.
        /// </summary>
        [JsonProperty(PropertyName = "parameters")]
        public IDictionary<string, string> Parameters { get; set; }

        /// <summary>
        /// Gets or sets the attributes of the SAS definition.
        /// </summary>
        [JsonProperty(PropertyName = "attributes")]
        public SasDefinitionAttributes SasDefinitionAttributes { get; set; }

        /// <summary>
        /// Gets or sets application specific metadata in the form of key-value
        /// pairs.
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Parameters == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Parameters");
            }
        }
    }
}

