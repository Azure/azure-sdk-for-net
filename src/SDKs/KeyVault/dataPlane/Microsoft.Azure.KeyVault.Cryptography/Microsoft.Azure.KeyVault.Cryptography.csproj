<Project Sdk="Microsoft.NET.Sdk">
  <Import Project="$([MSBuild]::GetPathOfFileAbove('AzSdk.reference.props'))" />
  <PropertyGroup>
    <PackageId>Microsoft.Azure.KeyVault.Cryptography</PackageId>
    <Description>Microsoft Azure Key Vault Cryptography Class Library</Description>
    <AssemblyTitle>Microsoft Azure Key Vault Cryptography</AssemblyTitle>
    <VersionPrefix>2.0.5</VersionPrefix>
    <AssemblyName>Microsoft.Azure.KeyVault.Cryptography</AssemblyName>
    <PackageTags>Microsoft Azure key vault cryptography</PackageTags>    
  </PropertyGroup>
  <PropertyGroup>
    <TargetFrameworks>net452;netstandard1.4</TargetFrameworks>
  </PropertyGroup>
  <ItemGroup>
    <ProjectReference Include="..\Microsoft.Azure.KeyVault.Core\Microsoft.Azure.KeyVault.Core.csproj" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'net452' ">
    <Reference Include="System" />
    <Reference Include="Microsoft.CSharp" />
  </ItemGroup>

  <!-- 
  FullNetFx DefineContant has been imported by default in all SDK projects
  We recommend you use that instead of version specific constant like NET45
  -->
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net452' ">
    <DefineConstants>$(DefineConstants);NET45</DefineConstants>
    <DebugType>portable</DebugType>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(TargetFramework)' == 'netstandard1.4' ">
    <DefineConstants>$(DefineConstants);NETSTANDARD;NETSTANDARD14</DefineConstants>
  </PropertyGroup>
  
  <ItemGroup Condition=" '$(TargetFramework)' == 'netstandard1.4' ">
    <PackageReference Include="System.Diagnostics.Tools" Version="4.0.1" />
    <PackageReference Include="System.Linq" Version="4.1.0" />
    <PackageReference Include="System.Globalization" Version="4.0.11" />
    <PackageReference Include="System.Runtime.Extensions" Version="4.1.0" />
    <PackageReference Include="System.Security.Cryptography.Primitives" Version="4.0.0" />
    <PackageReference Include="System.Security.Cryptography.Algorithms" Version="4.2.0" />
  </ItemGroup>

</Project>
