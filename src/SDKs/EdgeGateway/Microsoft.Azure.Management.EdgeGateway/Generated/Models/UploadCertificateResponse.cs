// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.EdgeGateway.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The upload registration certificate response.
    /// </summary>
    public partial class UploadCertificateResponse
    {
        /// <summary>
        /// Initializes a new instance of the UploadCertificateResponse class.
        /// </summary>
        public UploadCertificateResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UploadCertificateResponse class.
        /// </summary>
        /// <param name="resourceId">The resource ID of the Data Box
        /// Edge/Gateway device.</param>
        /// <param name="aadAuthority">Azure Active Directory tenant
        /// authority.</param>
        /// <param name="aadTenantId">Azure Active Directory tenant ID.</param>
        /// <param name="servicePrincipalClientId">Azure Active Directory
        /// service principal client ID.</param>
        /// <param name="servicePrincipalObjectId">Azure Active Directory
        /// service principal object ID.</param>
        /// <param name="azureManagementEndpointAudience">The azure management
        /// endpoint audience.</param>
        /// <param name="authType">Specifies authentication type. Possible
        /// values include: 'Invalid', 'AzureActiveDirectory'</param>
        public UploadCertificateResponse(string resourceId, string aadAuthority, string aadTenantId, string servicePrincipalClientId, string servicePrincipalObjectId, string azureManagementEndpointAudience, string authType = default(string))
        {
            AuthType = authType;
            ResourceId = resourceId;
            AadAuthority = aadAuthority;
            AadTenantId = aadTenantId;
            ServicePrincipalClientId = servicePrincipalClientId;
            ServicePrincipalObjectId = servicePrincipalObjectId;
            AzureManagementEndpointAudience = azureManagementEndpointAudience;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets specifies authentication type. Possible values
        /// include: 'Invalid', 'AzureActiveDirectory'
        /// </summary>
        [JsonProperty(PropertyName = "authType")]
        public string AuthType { get; set; }

        /// <summary>
        /// Gets or sets the resource ID of the Data Box Edge/Gateway device.
        /// </summary>
        [JsonProperty(PropertyName = "resourceId")]
        public string ResourceId { get; set; }

        /// <summary>
        /// Gets or sets azure Active Directory tenant authority.
        /// </summary>
        [JsonProperty(PropertyName = "aadAuthority")]
        public string AadAuthority { get; set; }

        /// <summary>
        /// Gets or sets azure Active Directory tenant ID.
        /// </summary>
        [JsonProperty(PropertyName = "aadTenantId")]
        public string AadTenantId { get; set; }

        /// <summary>
        /// Gets or sets azure Active Directory service principal client ID.
        /// </summary>
        [JsonProperty(PropertyName = "servicePrincipalClientId")]
        public string ServicePrincipalClientId { get; set; }

        /// <summary>
        /// Gets or sets azure Active Directory service principal object ID.
        /// </summary>
        [JsonProperty(PropertyName = "servicePrincipalObjectId")]
        public string ServicePrincipalObjectId { get; set; }

        /// <summary>
        /// Gets or sets the azure management endpoint audience.
        /// </summary>
        [JsonProperty(PropertyName = "azureManagementEndpointAudience")]
        public string AzureManagementEndpointAudience { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ResourceId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ResourceId");
            }
            if (AadAuthority == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AadAuthority");
            }
            if (AadTenantId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AadTenantId");
            }
            if (ServicePrincipalClientId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ServicePrincipalClientId");
            }
            if (ServicePrincipalObjectId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ServicePrincipalObjectId");
            }
            if (AzureManagementEndpointAudience == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AzureManagementEndpointAudience");
            }
        }
    }
}
