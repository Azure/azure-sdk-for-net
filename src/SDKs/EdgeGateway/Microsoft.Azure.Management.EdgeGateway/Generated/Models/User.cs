// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.EdgeGateway.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Represents a user who has access to one or more shares on the Edge
    /// storage device.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class User : ARMBaseModel
    {
        /// <summary>
        /// Initializes a new instance of the User class.
        /// </summary>
        public User()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the User class.
        /// </summary>
        /// <param name="id">The path ID that uniquely identifies the
        /// object.</param>
        /// <param name="name">The name of the object.</param>
        /// <param name="type">The hierarchical type of the object.</param>
        /// <param name="encryptedPassword">The details of the password
        /// specified for the user.</param>
        /// <param name="shareAccessRights">List of shares that the user has
        /// rights on. This field should not be specified during user
        /// creation.</param>
        public User(string id = default(string), string name = default(string), string type = default(string), AsymmetricEncryptedSecret encryptedPassword = default(AsymmetricEncryptedSecret), IList<ShareAccessRight> shareAccessRights = default(IList<ShareAccessRight>))
            : base(id, name, type)
        {
            EncryptedPassword = encryptedPassword;
            ShareAccessRights = shareAccessRights;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the details of the password specified for the user.
        /// </summary>
        [JsonProperty(PropertyName = "properties.encryptedPassword")]
        public AsymmetricEncryptedSecret EncryptedPassword { get; set; }

        /// <summary>
        /// Gets or sets list of shares that the user has rights on. This field
        /// should not be specified during user creation.
        /// </summary>
        [JsonProperty(PropertyName = "properties.shareAccessRights")]
        public IList<ShareAccessRight> ShareAccessRights { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (EncryptedPassword != null)
            {
                EncryptedPassword.Validate();
            }
            if (ShareAccessRights != null)
            {
                foreach (var element in ShareAccessRights)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
