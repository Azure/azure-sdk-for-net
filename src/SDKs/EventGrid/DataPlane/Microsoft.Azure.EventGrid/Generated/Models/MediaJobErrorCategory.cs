// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.EventGrid.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for MediaJobErrorCategory.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum MediaJobErrorCategory
    {
        /// <summary>
        /// The error is service related.
        /// </summary>
        [EnumMember(Value = "Service")]
        Service,
        /// <summary>
        /// The error is download related.
        /// </summary>
        [EnumMember(Value = "Download")]
        Download,
        /// <summary>
        /// The error is upload related.
        /// </summary>
        [EnumMember(Value = "Upload")]
        Upload,
        /// <summary>
        /// The error is configuration related.
        /// </summary>
        [EnumMember(Value = "Configuration")]
        Configuration,
        /// <summary>
        /// The error is related to data in the input files.
        /// </summary>
        [EnumMember(Value = "Content")]
        Content
    }
    internal static class MediaJobErrorCategoryEnumExtension
    {
        internal static string ToSerializedValue(this MediaJobErrorCategory? value)
        {
            return value == null ? null : ((MediaJobErrorCategory)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this MediaJobErrorCategory value)
        {
            switch( value )
            {
                case MediaJobErrorCategory.Service:
                    return "Service";
                case MediaJobErrorCategory.Download:
                    return "Download";
                case MediaJobErrorCategory.Upload:
                    return "Upload";
                case MediaJobErrorCategory.Configuration:
                    return "Configuration";
                case MediaJobErrorCategory.Content:
                    return "Content";
            }
            return null;
        }

        internal static MediaJobErrorCategory? ParseMediaJobErrorCategory(this string value)
        {
            switch( value )
            {
                case "Service":
                    return MediaJobErrorCategory.Service;
                case "Download":
                    return MediaJobErrorCategory.Download;
                case "Upload":
                    return MediaJobErrorCategory.Upload;
                case "Configuration":
                    return MediaJobErrorCategory.Configuration;
                case "Content":
                    return MediaJobErrorCategory.Content;
            }
            return null;
        }
    }
}
