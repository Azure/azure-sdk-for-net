// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.EventGrid.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Schema of the Data property of an EventGridEvent for an
    /// Microsoft.EventHub.CaptureFileCreated event.
    /// </summary>
    public partial class EventHubCaptureFileCreatedEventData
    {
        /// <summary>
        /// Initializes a new instance of the
        /// EventHubCaptureFileCreatedEventData class.
        /// </summary>
        public EventHubCaptureFileCreatedEventData()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// EventHubCaptureFileCreatedEventData class.
        /// </summary>
        /// <param name="fileurl">The path to the capture file.</param>
        /// <param name="fileType">The file type of the capture file.</param>
        /// <param name="partitionId">The shard ID.</param>
        /// <param name="sizeInBytes">The file size.</param>
        /// <param name="eventCount">The number of events in the file.</param>
        /// <param name="firstSequenceNumber">The smallest sequence number from
        /// the queue.</param>
        /// <param name="lastSequenceNumber">The last sequence number from the
        /// queue.</param>
        /// <param name="firstEnqueueTime">The first time from the
        /// queue.</param>
        /// <param name="lastEnqueueTime">The last time from the queue.</param>
        public EventHubCaptureFileCreatedEventData(string fileurl = default(string), string fileType = default(string), string partitionId = default(string), int? sizeInBytes = default(int?), int? eventCount = default(int?), int? firstSequenceNumber = default(int?), int? lastSequenceNumber = default(int?), System.DateTime? firstEnqueueTime = default(System.DateTime?), System.DateTime? lastEnqueueTime = default(System.DateTime?))
        {
            Fileurl = fileurl;
            FileType = fileType;
            PartitionId = partitionId;
            SizeInBytes = sizeInBytes;
            EventCount = eventCount;
            FirstSequenceNumber = firstSequenceNumber;
            LastSequenceNumber = lastSequenceNumber;
            FirstEnqueueTime = firstEnqueueTime;
            LastEnqueueTime = lastEnqueueTime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the path to the capture file.
        /// </summary>
        [JsonProperty(PropertyName = "fileurl")]
        public string Fileurl { get; set; }

        /// <summary>
        /// Gets or sets the file type of the capture file.
        /// </summary>
        [JsonProperty(PropertyName = "fileType")]
        public string FileType { get; set; }

        /// <summary>
        /// Gets or sets the shard ID.
        /// </summary>
        [JsonProperty(PropertyName = "partitionId")]
        public string PartitionId { get; set; }

        /// <summary>
        /// Gets or sets the file size.
        /// </summary>
        [JsonProperty(PropertyName = "sizeInBytes")]
        public int? SizeInBytes { get; set; }

        /// <summary>
        /// Gets or sets the number of events in the file.
        /// </summary>
        [JsonProperty(PropertyName = "eventCount")]
        public int? EventCount { get; set; }

        /// <summary>
        /// Gets or sets the smallest sequence number from the queue.
        /// </summary>
        [JsonProperty(PropertyName = "firstSequenceNumber")]
        public int? FirstSequenceNumber { get; set; }

        /// <summary>
        /// Gets or sets the last sequence number from the queue.
        /// </summary>
        [JsonProperty(PropertyName = "lastSequenceNumber")]
        public int? LastSequenceNumber { get; set; }

        /// <summary>
        /// Gets or sets the first time from the queue.
        /// </summary>
        [JsonProperty(PropertyName = "firstEnqueueTime")]
        public System.DateTime? FirstEnqueueTime { get; set; }

        /// <summary>
        /// Gets or sets the last time from the queue.
        /// </summary>
        [JsonProperty(PropertyName = "lastEnqueueTime")]
        public System.DateTime? LastEnqueueTime { get; set; }

    }
}
