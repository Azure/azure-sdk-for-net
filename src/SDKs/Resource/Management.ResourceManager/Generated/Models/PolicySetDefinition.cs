// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ResourceManager.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The policy set definition.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class PolicySetDefinition : IResource
    {
        /// <summary>
        /// Initializes a new instance of the PolicySetDefinition class.
        /// </summary>
        public PolicySetDefinition()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PolicySetDefinition class.
        /// </summary>
        /// <param name="policyDefinitions">An array of policy definition
        /// references.</param>
        /// <param name="policyType">The type of policy definition. Possible
        /// values are NotSpecified, BuiltIn, and Custom. Possible values
        /// include: 'NotSpecified', 'BuiltIn', 'Custom'</param>
        /// <param name="displayName">The display name of the policy set
        /// definition.</param>
        /// <param name="description">The policy set definition
        /// description.</param>
        /// <param name="metadata">The policy set definition metadata.</param>
        /// <param name="parameters">The policy set definition parameters that
        /// can be used in policy definition references.</param>
        /// <param name="id">The ID of the policy set definition.</param>
        /// <param name="name">The name of the policy set definition.</param>
        /// <param name="type">The type of the resource
        /// (Microsoft.Authorization/policySetDefinitions).</param>
        public PolicySetDefinition(IList<PolicyDefinitionReference> policyDefinitions, string policyType = default(string), string displayName = default(string), string description = default(string), object metadata = default(object), object parameters = default(object), string id = default(string), string name = default(string), string type = default(string))
        {
            PolicyType = policyType;
            DisplayName = displayName;
            Description = description;
            Metadata = metadata;
            Parameters = parameters;
            PolicyDefinitions = policyDefinitions;
            Id = id;
            Name = name;
            Type = type;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the type of policy definition. Possible values are
        /// NotSpecified, BuiltIn, and Custom. Possible values include:
        /// 'NotSpecified', 'BuiltIn', 'Custom'
        /// </summary>
        [JsonProperty(PropertyName = "properties.policyType")]
        public string PolicyType { get; set; }

        /// <summary>
        /// Gets or sets the display name of the policy set definition.
        /// </summary>
        [JsonProperty(PropertyName = "properties.displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets the policy set definition description.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the policy set definition metadata.
        /// </summary>
        [JsonProperty(PropertyName = "properties.metadata")]
        public object Metadata { get; set; }

        /// <summary>
        /// Gets or sets the policy set definition parameters that can be used
        /// in policy definition references.
        /// </summary>
        [JsonProperty(PropertyName = "properties.parameters")]
        public object Parameters { get; set; }

        /// <summary>
        /// Gets or sets an array of policy definition references.
        /// </summary>
        [JsonProperty(PropertyName = "properties.policyDefinitions")]
        public IList<PolicyDefinitionReference> PolicyDefinitions { get; set; }

        /// <summary>
        /// Gets the ID of the policy set definition.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets the name of the policy set definition.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets the type of the resource
        /// (Microsoft.Authorization/policySetDefinitions).
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (PolicyDefinitions == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PolicyDefinitions");
            }
        }
    }
}
