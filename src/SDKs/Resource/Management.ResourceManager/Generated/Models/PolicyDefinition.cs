// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.ResourceManager.Models
{
    using System.Linq;

    /// <summary>
    /// The policy definition.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class PolicyDefinition : Microsoft.Rest.Azure.IResource
    {
        /// <summary>
        /// Initializes a new instance of the PolicyDefinition class.
        /// </summary>
        public PolicyDefinition() { }

        /// <summary>
        /// Initializes a new instance of the PolicyDefinition class.
        /// </summary>
        /// <param name="policyType">The type of policy definition. Possible
        /// values are NotSpecified, BuiltIn, and Custom. Possible values
        /// include: 'NotSpecified', 'BuiltIn', 'Custom'</param>
        /// <param name="displayName">The display name of the policy
        /// definition.</param>
        /// <param name="description">The policy definition
        /// description.</param>
        /// <param name="policyRule">The policy rule.</param>
        /// <param name="id">The ID of the policy definition.</param>
        /// <param name="name">The name of the policy definition. If you do
        /// not specify a value for name, the value is inferred from the name
        /// value in the request URI.</param>
        public PolicyDefinition(string policyType = default(string), string displayName = default(string), string description = default(string), object policyRule = default(object), string id = default(string), string name = default(string))
        {
            PolicyType = policyType;
            DisplayName = displayName;
            Description = description;
            PolicyRule = policyRule;
            Id = id;
            Name = name;
        }

        /// <summary>
        /// Gets or sets the type of policy definition. Possible values are
        /// NotSpecified, BuiltIn, and Custom. Possible values include:
        /// 'NotSpecified', 'BuiltIn', 'Custom'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.policyType")]
        public string PolicyType { get; set; }

        /// <summary>
        /// Gets or sets the display name of the policy definition.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets the policy definition description.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the policy rule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.policyRule")]
        public object PolicyRule { get; set; }

        /// <summary>
        /// Gets or sets the ID of the policy definition.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets the name of the policy definition. If you do not
        /// specify a value for name, the value is inferred from the name
        /// value in the request URI.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

    }
}
