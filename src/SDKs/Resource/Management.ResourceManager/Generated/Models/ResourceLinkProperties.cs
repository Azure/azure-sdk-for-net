// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ResourceManager.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The resource link properties.
    /// </summary>
    public partial class ResourceLinkProperties
    {
        /// <summary>
        /// Initializes a new instance of the ResourceLinkProperties class.
        /// </summary>
        public ResourceLinkProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ResourceLinkProperties class.
        /// </summary>
        /// <param name="targetId">The fully qualified ID of the target
        /// resource in the link.</param>
        /// <param name="sourceId">The fully qualified ID of the source
        /// resource in the link. </param>
        /// <param name="notes">Notes about the resource link.</param>
        public ResourceLinkProperties(string targetId, string sourceId = default(string), string notes = default(string))
        {
            SourceId = sourceId;
            TargetId = targetId;
            Notes = notes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the fully qualified ID of the source resource in the link.
        /// </summary>
        [JsonProperty(PropertyName = "sourceId")]
        public string SourceId { get; private set; }

        /// <summary>
        /// Gets or sets the fully qualified ID of the target resource in the
        /// link.
        /// </summary>
        [JsonProperty(PropertyName = "targetId")]
        public string TargetId { get; set; }

        /// <summary>
        /// Gets or sets notes about the resource link.
        /// </summary>
        [JsonProperty(PropertyName = "notes")]
        public string Notes { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (TargetId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TargetId");
            }
        }
    }
}
