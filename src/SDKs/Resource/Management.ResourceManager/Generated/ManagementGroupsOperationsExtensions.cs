// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.ResourceManager
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for ManagementGroupsOperations.
    /// </summary>
    public static partial class ManagementGroupsOperationsExtensions
    {
            /// <summary>
            /// List management groups for the authenticated user.
            ///
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='skiptoken'>
            /// Page continuation token is only used if a previous operation returned a
            /// partial result.
            /// If a previous response contains a nextLink element, the value of the
            /// nextLink element will include a token parameter that specifies a starting
            /// point to use for subsequent calls.
            ///
            /// </param>
            public static IPage<ManagementGroupInfo> List(this IManagementGroupsOperations operations, string skiptoken = default(string))
            {
                return operations.ListAsync(skiptoken).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List management groups for the authenticated user.
            ///
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='skiptoken'>
            /// Page continuation token is only used if a previous operation returned a
            /// partial result.
            /// If a previous response contains a nextLink element, the value of the
            /// nextLink element will include a token parameter that specifies a starting
            /// point to use for subsequent calls.
            ///
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<ManagementGroupInfo>> ListAsync(this IManagementGroupsOperations operations, string skiptoken = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(skiptoken, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get the details of the management group.
            ///
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='expand'>
            /// The $expand=children query string parameter allows clients to request
            /// inclusion of children in the response payload. Possible values include:
            /// 'children'
            /// </param>
            /// <param name='recurse'>
            /// The $recurse=true query string parameter allows clients to request
            /// inclusion of entire hierarchy in the response payload.
            /// </param>
            public static ManagementGroupWithHierarchy Get(this IManagementGroupsOperations operations, string expand = default(string), bool? recurse = default(bool?))
            {
                return operations.GetAsync(expand, recurse).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get the details of the management group.
            ///
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='expand'>
            /// The $expand=children query string parameter allows clients to request
            /// inclusion of children in the response payload. Possible values include:
            /// 'children'
            /// </param>
            /// <param name='recurse'>
            /// The $recurse=true query string parameter allows clients to request
            /// inclusion of entire hierarchy in the response payload.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ManagementGroupWithHierarchy> GetAsync(this IManagementGroupsOperations operations, string expand = default(string), bool? recurse = default(bool?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(expand, recurse, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// List management groups for the authenticated user.
            ///
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<ManagementGroupInfo> ListNext(this IManagementGroupsOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List management groups for the authenticated user.
            ///
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<ManagementGroupInfo>> ListNextAsync(this IManagementGroupsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
