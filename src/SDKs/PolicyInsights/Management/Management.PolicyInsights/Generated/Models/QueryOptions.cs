// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.PolicyInsights.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Additional parameters for a set of operations.
    /// </summary>
    public partial class QueryOptions
    {
        /// <summary>
        /// Initializes a new instance of the QueryOptions class.
        /// </summary>
        public QueryOptions()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the QueryOptions class.
        /// </summary>
        /// <param name="top">Maximum number of records to return.</param>
        /// <param name="filter">OData filter expression.</param>
        /// <param name="orderBy">Ordering expression using OData notation. One
        /// or more comma-separated column names with an optional "desc" (the
        /// default) or "asc", e.g. "$orderby=PolicyAssignmentId, ResourceId
        /// asc".</param>
        /// <param name="select">Select expression using OData notation. Limits
        /// the columns on each record to just those requested, e.g.
        /// "$select=PolicyAssignmentId, ResourceId".</param>
        /// <param name="fromProperty">ISO 8601 formatted timestamp specifying
        /// the start time of the interval to query. When not specified, the
        /// service uses ($to - 1-day).</param>
        /// <param name="to">ISO 8601 formatted timestamp specifying the end
        /// time of the interval to query. When not specified, the service uses
        /// request time.</param>
        /// <param name="apply">OData apply expression for
        /// aggregations.</param>
        public QueryOptions(int? top = default(int?), string filter = default(string), string orderBy = default(string), string select = default(string), System.DateTime? fromProperty = default(System.DateTime?), System.DateTime? to = default(System.DateTime?), string apply = default(string))
        {
            Top = top;
            Filter = filter;
            OrderBy = orderBy;
            Select = select;
            FromProperty = fromProperty;
            To = to;
            Apply = apply;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets maximum number of records to return.
        /// </summary>
        [Newtonsoft.Json.JsonIgnore]
        public int? Top { get; set; }

        /// <summary>
        /// Gets or sets oData filter expression.
        /// </summary>
        [Newtonsoft.Json.JsonIgnore]
        public string Filter { get; set; }

        /// <summary>
        /// Gets or sets ordering expression using OData notation. One or more
        /// comma-separated column names with an optional "desc" (the default)
        /// or "asc", e.g. "$orderby=PolicyAssignmentId, ResourceId asc".
        /// </summary>
        [Newtonsoft.Json.JsonIgnore]
        public string OrderBy { get; set; }

        /// <summary>
        /// Gets or sets select expression using OData notation. Limits the
        /// columns on each record to just those requested, e.g.
        /// "$select=PolicyAssignmentId, ResourceId".
        /// </summary>
        [Newtonsoft.Json.JsonIgnore]
        public string Select { get; set; }

        /// <summary>
        /// Gets or sets ISO 8601 formatted timestamp specifying the start time
        /// of the interval to query. When not specified, the service uses ($to
        /// - 1-day).
        /// </summary>
        [Newtonsoft.Json.JsonIgnore]
        public System.DateTime? FromProperty { get; set; }

        /// <summary>
        /// Gets or sets ISO 8601 formatted timestamp specifying the end time
        /// of the interval to query. When not specified, the service uses
        /// request time.
        /// </summary>
        [Newtonsoft.Json.JsonIgnore]
        public System.DateTime? To { get; set; }

        /// <summary>
        /// Gets or sets oData apply expression for aggregations.
        /// </summary>
        [Newtonsoft.Json.JsonIgnore]
        public string Apply { get; set; }

    }
}
