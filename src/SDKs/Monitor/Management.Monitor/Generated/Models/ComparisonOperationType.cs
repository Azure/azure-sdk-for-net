// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Monitor.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for ComparisonOperationType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ComparisonOperationType
    {
        [EnumMember(Value = "Equals")]
        Equals,
        [EnumMember(Value = "NotEquals")]
        NotEquals,
        [EnumMember(Value = "GreaterThan")]
        GreaterThan,
        [EnumMember(Value = "GreaterThanOrEqual")]
        GreaterThanOrEqual,
        [EnumMember(Value = "LessThan")]
        LessThan,
        [EnumMember(Value = "LessThanOrEqual")]
        LessThanOrEqual
    }
    internal static class ComparisonOperationTypeEnumExtension
    {
        internal static string ToSerializedValue(this ComparisonOperationType? value)
        {
            return value == null ? null : ((ComparisonOperationType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this ComparisonOperationType value)
        {
            switch( value )
            {
                case ComparisonOperationType.Equals:
                    return "Equals";
                case ComparisonOperationType.NotEquals:
                    return "NotEquals";
                case ComparisonOperationType.GreaterThan:
                    return "GreaterThan";
                case ComparisonOperationType.GreaterThanOrEqual:
                    return "GreaterThanOrEqual";
                case ComparisonOperationType.LessThan:
                    return "LessThan";
                case ComparisonOperationType.LessThanOrEqual:
                    return "LessThanOrEqual";
            }
            return null;
        }

        internal static ComparisonOperationType? ParseComparisonOperationType(this string value)
        {
            switch( value )
            {
                case "Equals":
                    return ComparisonOperationType.Equals;
                case "NotEquals":
                    return ComparisonOperationType.NotEquals;
                case "GreaterThan":
                    return ComparisonOperationType.GreaterThan;
                case "GreaterThanOrEqual":
                    return ComparisonOperationType.GreaterThanOrEqual;
                case "LessThan":
                    return ComparisonOperationType.LessThan;
                case "LessThanOrEqual":
                    return ComparisonOperationType.LessThanOrEqual;
            }
            return null;
        }
    }
}
