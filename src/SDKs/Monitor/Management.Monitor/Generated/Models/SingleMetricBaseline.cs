// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Monitor.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The baseline results of a single metric.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class SingleMetricBaseline
    {
        /// <summary>
        /// Initializes a new instance of the SingleMetricBaseline class.
        /// </summary>
        public SingleMetricBaseline()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SingleMetricBaseline class.
        /// </summary>
        /// <param name="id">The metric baseline Id.</param>
        /// <param name="type">The resource type of the metric baseline
        /// resource.</param>
        /// <param name="name">The name of the metric for which the baselines
        /// were retrieved.</param>
        /// <param name="timespan">The timespan for which the data was
        /// retrieved. Its value consists of two datetimes concatenated,
        /// separated by '/'.  This may be adjusted in the future and returned
        /// back from what was originally requested.</param>
        /// <param name="interval">The interval (window size) for which the
        /// metric data was returned in.  This may be adjusted in the future
        /// and returned back from what was originally requested.  This is not
        /// present if a metadata request was made.</param>
        /// <param name="baselines">The baseline for each time series that was
        /// queried.</param>
        /// <param name="namespaceProperty">The namespace of the metrics been
        /// queried.</param>
        public SingleMetricBaseline(string id, string type, string name, string timespan, System.TimeSpan interval, IList<TimeSeriesBaseline> baselines, string namespaceProperty = default(string))
        {
            Id = id;
            Type = type;
            Name = name;
            Timespan = timespan;
            Interval = interval;
            NamespaceProperty = namespaceProperty;
            Baselines = baselines;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the metric baseline Id.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets the resource type of the metric baseline resource.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets the name of the metric for which the baselines were
        /// retrieved.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the timespan for which the data was retrieved. Its
        /// value consists of two datetimes concatenated, separated by '/'.
        /// This may be adjusted in the future and returned back from what was
        /// originally requested.
        /// </summary>
        [JsonProperty(PropertyName = "properties.timespan")]
        public string Timespan { get; set; }

        /// <summary>
        /// Gets or sets the interval (window size) for which the metric data
        /// was returned in.  This may be adjusted in the future and returned
        /// back from what was originally requested.  This is not present if a
        /// metadata request was made.
        /// </summary>
        [JsonProperty(PropertyName = "properties.interval")]
        public System.TimeSpan Interval { get; set; }

        /// <summary>
        /// Gets or sets the namespace of the metrics been queried.
        /// </summary>
        [JsonProperty(PropertyName = "properties.namespace")]
        public string NamespaceProperty { get; set; }

        /// <summary>
        /// Gets or sets the baseline for each time series that was queried.
        /// </summary>
        [JsonProperty(PropertyName = "properties.baselines")]
        public IList<TimeSeriesBaseline> Baselines { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Id == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Id");
            }
            if (Type == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Type");
            }
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Timespan == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Timespan");
            }
            if (Baselines == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Baselines");
            }
            if (Baselines != null)
            {
                foreach (var element in Baselines)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
