// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Monitor.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.Monitor;
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A set of metric values in a time range.
    /// </summary>
    public partial class Metric
    {
        /// <summary>
        /// Initializes a new instance of the Metric class.
        /// </summary>
        public Metric() { }

        /// <summary>
        /// Initializes a new instance of the Metric class.
        /// </summary>
        /// <param name="name">the name and the display name of the metric,
        /// i.e. it is localizable string.</param>
        /// <param name="unit">the unit of the metric. Possible values include:
        /// 'Count', 'Bytes', 'Seconds', 'CountPerSecond', 'BytesPerSecond',
        /// 'Percent', 'MilliSeconds'</param>
        /// <param name="data">Array of data points representing the metric
        /// values.</param>
        /// <param name="id">the id, resourceId, of the metric.</param>
        /// <param name="type">the resource type of the metric
        /// resource.</param>
        public Metric(LocalizableString name, Unit unit, IList<MetricValue> data, string id = default(string), string type = default(string))
        {
            Id = id;
            Type = type;
            Name = name;
            Unit = unit;
            Data = data;
        }

        /// <summary>
        /// Gets or sets the id, resourceId, of the metric.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets the resource type of the metric resource.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets the name and the display name of the metric, i.e. it
        /// is localizable string.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public LocalizableString Name { get; set; }

        /// <summary>
        /// Gets or sets the unit of the metric. Possible values include:
        /// 'Count', 'Bytes', 'Seconds', 'CountPerSecond', 'BytesPerSecond',
        /// 'Percent', 'MilliSeconds'
        /// </summary>
        [JsonProperty(PropertyName = "unit")]
        public Unit Unit { get; set; }

        /// <summary>
        /// Gets or sets array of data points representing the metric values.
        /// </summary>
        [JsonProperty(PropertyName = "data")]
        public IList<MetricValue> Data { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Data == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Data");
            }
            if (Name != null)
            {
                Name.Validate();
            }
            if (Data != null)
            {
                foreach (var element in Data)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
