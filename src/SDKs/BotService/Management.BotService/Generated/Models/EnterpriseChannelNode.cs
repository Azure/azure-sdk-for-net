// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.BotService.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The properties specific to an Enterprise Channel Node.
    /// </summary>
    public partial class EnterpriseChannelNode
    {
        /// <summary>
        /// Initializes a new instance of the EnterpriseChannelNode class.
        /// </summary>
        public EnterpriseChannelNode()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EnterpriseChannelNode class.
        /// </summary>
        /// <param name="name">The name of the Enterprise Channel Node.</param>
        /// <param name="azureSku">The sku of the Enterprise Channel
        /// Node.</param>
        /// <param name="azureLocation">The location of the Enterprise Channel
        /// Node.</param>
        /// <param name="id">Id of Enterprise Channel Node. This is generated
        /// by the Bot Framework.</param>
        /// <param name="state">The current state of the Enterprise Channel
        /// Node. Possible values include: 'Creating', 'CreateFailed',
        /// 'Started', 'Starting', 'StartFailed', 'Stopped', 'Stopping',
        /// 'StopFailed', 'Deleting', 'DeleteFailed'</param>
        public EnterpriseChannelNode(string name, string azureSku, string azureLocation, string id = default(string), string state = default(string))
        {
            Id = id;
            State = state;
            Name = name;
            AzureSku = azureSku;
            AzureLocation = azureLocation;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets id of Enterprise Channel Node. This is generated by the Bot
        /// Framework.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets or sets the current state of the Enterprise Channel Node.
        /// Possible values include: 'Creating', 'CreateFailed', 'Started',
        /// 'Starting', 'StartFailed', 'Stopped', 'Stopping', 'StopFailed',
        /// 'Deleting', 'DeleteFailed'
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public string State { get; set; }

        /// <summary>
        /// Gets or sets the name of the Enterprise Channel Node.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the sku of the Enterprise Channel Node.
        /// </summary>
        [JsonProperty(PropertyName = "azureSku")]
        public string AzureSku { get; set; }

        /// <summary>
        /// Gets or sets the location of the Enterprise Channel Node.
        /// </summary>
        [JsonProperty(PropertyName = "azureLocation")]
        public string AzureLocation { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (AzureSku == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AzureSku");
            }
            if (AzureLocation == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AzureLocation");
            }
        }
    }
}
