// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.BotService.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The parameters to provide for the Microsoft Teams channel.
    /// </summary>
    public partial class MsTeamsChannelProperties
    {
        /// <summary>
        /// Initializes a new instance of the MsTeamsChannelProperties class.
        /// </summary>
        public MsTeamsChannelProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MsTeamsChannelProperties class.
        /// </summary>
        /// <param name="isEnabled">Whether this channel is enabled for the
        /// bot</param>
        /// <param name="enableMessaging">Enable messaging for Microsoft Teams
        /// channel</param>
        /// <param name="enableMediaCards">Enable media cards for Microsoft
        /// Teams channel</param>
        /// <param name="enableVideo">Enable video for Microsoft Teams
        /// channel</param>
        /// <param name="enableCalling">Enable calling for Microsoft Teams
        /// channel</param>
        /// <param name="callMode">Enable messaging for Microsoft Teams
        /// channel</param>
        public MsTeamsChannelProperties(bool isEnabled, bool? enableMessaging = default(bool?), bool? enableMediaCards = default(bool?), bool? enableVideo = default(bool?), bool? enableCalling = default(bool?), string callMode = default(string))
        {
            EnableMessaging = enableMessaging;
            EnableMediaCards = enableMediaCards;
            EnableVideo = enableVideo;
            EnableCalling = enableCalling;
            CallMode = callMode;
            IsEnabled = isEnabled;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets enable messaging for Microsoft Teams channel
        /// </summary>
        [JsonProperty(PropertyName = "enableMessaging")]
        public bool? EnableMessaging { get; set; }

        /// <summary>
        /// Gets or sets enable media cards for Microsoft Teams channel
        /// </summary>
        [JsonProperty(PropertyName = "enableMediaCards")]
        public bool? EnableMediaCards { get; set; }

        /// <summary>
        /// Gets or sets enable video for Microsoft Teams channel
        /// </summary>
        [JsonProperty(PropertyName = "enableVideo")]
        public bool? EnableVideo { get; set; }

        /// <summary>
        /// Gets or sets enable calling for Microsoft Teams channel
        /// </summary>
        [JsonProperty(PropertyName = "enableCalling")]
        public bool? EnableCalling { get; set; }

        /// <summary>
        /// Gets or sets enable messaging for Microsoft Teams channel
        /// </summary>
        [JsonProperty(PropertyName = "callMode")]
        public string CallMode { get; set; }

        /// <summary>
        /// Gets or sets whether this channel is enabled for the bot
        /// </summary>
        [JsonProperty(PropertyName = "isEnabled")]
        public bool IsEnabled { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
