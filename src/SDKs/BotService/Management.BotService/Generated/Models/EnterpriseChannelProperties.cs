// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.BotService.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The parameters to provide for the Enterprise Channel.
    /// </summary>
    public partial class EnterpriseChannelProperties
    {
        /// <summary>
        /// Initializes a new instance of the EnterpriseChannelProperties
        /// class.
        /// </summary>
        public EnterpriseChannelProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EnterpriseChannelProperties
        /// class.
        /// </summary>
        /// <param name="nodes">The nodes associated with the Enterprise
        /// Channel.</param>
        /// <param name="state">The current state of the Enterprise Channel.
        /// Possible values include: 'Creating', 'CreateFailed', 'Started',
        /// 'Starting', 'StartFailed', 'Stopped', 'Stopping', 'StopFailed',
        /// 'Deleting', 'DeleteFailed'</param>
        public EnterpriseChannelProperties(IList<EnterpriseChannelNode> nodes, string state = default(string))
        {
            State = state;
            Nodes = nodes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the current state of the Enterprise Channel. Possible
        /// values include: 'Creating', 'CreateFailed', 'Started', 'Starting',
        /// 'StartFailed', 'Stopped', 'Stopping', 'StopFailed', 'Deleting',
        /// 'DeleteFailed'
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public string State { get; set; }

        /// <summary>
        /// Gets or sets the nodes associated with the Enterprise Channel.
        /// </summary>
        [JsonProperty(PropertyName = "nodes")]
        public IList<EnterpriseChannelNode> Nodes { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Nodes == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Nodes");
            }
            if (Nodes != null)
            {
                foreach (var element in Nodes)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
