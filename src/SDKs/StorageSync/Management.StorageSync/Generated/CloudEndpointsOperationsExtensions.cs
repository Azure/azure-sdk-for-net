// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.StorageSync
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for CloudEndpointsOperations.
    /// </summary>
    public static partial class CloudEndpointsOperationsExtensions
    {
            /// <summary>
            /// Create a new CloudEndpoint.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='storageSyncServiceName'>
            /// Name of Storage Sync Service resource.
            /// </param>
            /// <param name='syncGroupName'>
            /// Name of Sync Group resource.
            /// </param>
            /// <param name='cloudEndpointName'>
            /// Name of Cloud Endpoint object.
            /// </param>
            /// <param name='parameters'>
            /// Body of Cloud Endpoint resource.
            /// </param>
            public static CloudEndpoint Create(this ICloudEndpointsOperations operations, string resourceGroupName, string storageSyncServiceName, string syncGroupName, string cloudEndpointName, CloudEndpointCreateParameters parameters)
            {
                return operations.CreateAsync(resourceGroupName, storageSyncServiceName, syncGroupName, cloudEndpointName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create a new CloudEndpoint.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='storageSyncServiceName'>
            /// Name of Storage Sync Service resource.
            /// </param>
            /// <param name='syncGroupName'>
            /// Name of Sync Group resource.
            /// </param>
            /// <param name='cloudEndpointName'>
            /// Name of Cloud Endpoint object.
            /// </param>
            /// <param name='parameters'>
            /// Body of Cloud Endpoint resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CloudEndpoint> CreateAsync(this ICloudEndpointsOperations operations, string resourceGroupName, string storageSyncServiceName, string syncGroupName, string cloudEndpointName, CloudEndpointCreateParameters parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(resourceGroupName, storageSyncServiceName, syncGroupName, cloudEndpointName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get a given CloudEndpoint.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='storageSyncServiceName'>
            /// Name of Storage Sync Service resource.
            /// </param>
            /// <param name='syncGroupName'>
            /// Name of Sync Group resource.
            /// </param>
            /// <param name='cloudEndpointName'>
            /// Name of Cloud Endpoint object.
            /// </param>
            public static CloudEndpoint Get(this ICloudEndpointsOperations operations, string resourceGroupName, string storageSyncServiceName, string syncGroupName, string cloudEndpointName)
            {
                return operations.GetAsync(resourceGroupName, storageSyncServiceName, syncGroupName, cloudEndpointName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get a given CloudEndpoint.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='storageSyncServiceName'>
            /// Name of Storage Sync Service resource.
            /// </param>
            /// <param name='syncGroupName'>
            /// Name of Sync Group resource.
            /// </param>
            /// <param name='cloudEndpointName'>
            /// Name of Cloud Endpoint object.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CloudEndpoint> GetAsync(this ICloudEndpointsOperations operations, string resourceGroupName, string storageSyncServiceName, string syncGroupName, string cloudEndpointName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, storageSyncServiceName, syncGroupName, cloudEndpointName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete a given CloudEndpoint.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='storageSyncServiceName'>
            /// Name of Storage Sync Service resource.
            /// </param>
            /// <param name='syncGroupName'>
            /// Name of Sync Group resource.
            /// </param>
            /// <param name='cloudEndpointName'>
            /// Name of Cloud Endpoint object.
            /// </param>
            public static CloudEndpointsDeleteHeaders Delete(this ICloudEndpointsOperations operations, string resourceGroupName, string storageSyncServiceName, string syncGroupName, string cloudEndpointName)
            {
                return operations.DeleteAsync(resourceGroupName, storageSyncServiceName, syncGroupName, cloudEndpointName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete a given CloudEndpoint.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='storageSyncServiceName'>
            /// Name of Storage Sync Service resource.
            /// </param>
            /// <param name='syncGroupName'>
            /// Name of Sync Group resource.
            /// </param>
            /// <param name='cloudEndpointName'>
            /// Name of Cloud Endpoint object.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CloudEndpointsDeleteHeaders> DeleteAsync(this ICloudEndpointsOperations operations, string resourceGroupName, string storageSyncServiceName, string syncGroupName, string cloudEndpointName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.DeleteWithHttpMessagesAsync(resourceGroupName, storageSyncServiceName, syncGroupName, cloudEndpointName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Headers;
                }
            }

            /// <summary>
            /// Get a CloudEndpoint List.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='storageSyncServiceName'>
            /// Name of Storage Sync Service resource.
            /// </param>
            /// <param name='syncGroupName'>
            /// Name of Sync Group resource.
            /// </param>
            public static IEnumerable<CloudEndpoint> ListBySyncGroup(this ICloudEndpointsOperations operations, string resourceGroupName, string storageSyncServiceName, string syncGroupName)
            {
                return operations.ListBySyncGroupAsync(resourceGroupName, storageSyncServiceName, syncGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get a CloudEndpoint List.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='storageSyncServiceName'>
            /// Name of Storage Sync Service resource.
            /// </param>
            /// <param name='syncGroupName'>
            /// Name of Sync Group resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IEnumerable<CloudEndpoint>> ListBySyncGroupAsync(this ICloudEndpointsOperations operations, string resourceGroupName, string storageSyncServiceName, string syncGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListBySyncGroupWithHttpMessagesAsync(resourceGroupName, storageSyncServiceName, syncGroupName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Pre Backup a given CloudEndpoint.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='storageSyncServiceName'>
            /// Name of Storage Sync Service resource.
            /// </param>
            /// <param name='syncGroupName'>
            /// Name of Sync Group resource.
            /// </param>
            /// <param name='cloudEndpointName'>
            /// Name of Cloud Endpoint object.
            /// </param>
            /// <param name='azureFileShare'>
            /// Azure File Share.
            /// </param>
            public static CloudEndpointsPreBackupHeaders PreBackup(this ICloudEndpointsOperations operations, string resourceGroupName, string storageSyncServiceName, string syncGroupName, string cloudEndpointName, string azureFileShare = default(string))
            {
                return operations.PreBackupAsync(resourceGroupName, storageSyncServiceName, syncGroupName, cloudEndpointName, azureFileShare).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Pre Backup a given CloudEndpoint.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='storageSyncServiceName'>
            /// Name of Storage Sync Service resource.
            /// </param>
            /// <param name='syncGroupName'>
            /// Name of Sync Group resource.
            /// </param>
            /// <param name='cloudEndpointName'>
            /// Name of Cloud Endpoint object.
            /// </param>
            /// <param name='azureFileShare'>
            /// Azure File Share.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CloudEndpointsPreBackupHeaders> PreBackupAsync(this ICloudEndpointsOperations operations, string resourceGroupName, string storageSyncServiceName, string syncGroupName, string cloudEndpointName, string azureFileShare = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.PreBackupWithHttpMessagesAsync(resourceGroupName, storageSyncServiceName, syncGroupName, cloudEndpointName, azureFileShare, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Headers;
                }
            }

            /// <summary>
            /// Post Backup a given CloudEndpoint.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='storageSyncServiceName'>
            /// Name of Storage Sync Service resource.
            /// </param>
            /// <param name='syncGroupName'>
            /// Name of Sync Group resource.
            /// </param>
            /// <param name='cloudEndpointName'>
            /// Name of Cloud Endpoint object.
            /// </param>
            /// <param name='azureFileShare'>
            /// Azure File Share.
            /// </param>
            public static PostBackupResponse PostBackup(this ICloudEndpointsOperations operations, string resourceGroupName, string storageSyncServiceName, string syncGroupName, string cloudEndpointName, string azureFileShare = default(string))
            {
                return operations.PostBackupAsync(resourceGroupName, storageSyncServiceName, syncGroupName, cloudEndpointName, azureFileShare).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Post Backup a given CloudEndpoint.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='storageSyncServiceName'>
            /// Name of Storage Sync Service resource.
            /// </param>
            /// <param name='syncGroupName'>
            /// Name of Sync Group resource.
            /// </param>
            /// <param name='cloudEndpointName'>
            /// Name of Cloud Endpoint object.
            /// </param>
            /// <param name='azureFileShare'>
            /// Azure File Share.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<PostBackupResponse> PostBackupAsync(this ICloudEndpointsOperations operations, string resourceGroupName, string storageSyncServiceName, string syncGroupName, string cloudEndpointName, string azureFileShare = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.PostBackupWithHttpMessagesAsync(resourceGroupName, storageSyncServiceName, syncGroupName, cloudEndpointName, azureFileShare, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Pre Restore a given CloudEndpoint.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='storageSyncServiceName'>
            /// Name of Storage Sync Service resource.
            /// </param>
            /// <param name='syncGroupName'>
            /// Name of Sync Group resource.
            /// </param>
            /// <param name='cloudEndpointName'>
            /// Name of Cloud Endpoint object.
            /// </param>
            /// <param name='parameters'>
            /// Body of Cloud Endpoint object.
            /// </param>
            public static CloudEndpointsPreRestoreHeaders PreRestore(this ICloudEndpointsOperations operations, string resourceGroupName, string storageSyncServiceName, string syncGroupName, string cloudEndpointName, PreRestoreRequest parameters)
            {
                return operations.PreRestoreAsync(resourceGroupName, storageSyncServiceName, syncGroupName, cloudEndpointName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Pre Restore a given CloudEndpoint.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='storageSyncServiceName'>
            /// Name of Storage Sync Service resource.
            /// </param>
            /// <param name='syncGroupName'>
            /// Name of Sync Group resource.
            /// </param>
            /// <param name='cloudEndpointName'>
            /// Name of Cloud Endpoint object.
            /// </param>
            /// <param name='parameters'>
            /// Body of Cloud Endpoint object.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CloudEndpointsPreRestoreHeaders> PreRestoreAsync(this ICloudEndpointsOperations operations, string resourceGroupName, string storageSyncServiceName, string syncGroupName, string cloudEndpointName, PreRestoreRequest parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.PreRestoreWithHttpMessagesAsync(resourceGroupName, storageSyncServiceName, syncGroupName, cloudEndpointName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Headers;
                }
            }

            /// <summary>
            /// Restore Heartbeat a given CloudEndpoint.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='storageSyncServiceName'>
            /// Name of Storage Sync Service resource.
            /// </param>
            /// <param name='syncGroupName'>
            /// Name of Sync Group resource.
            /// </param>
            /// <param name='cloudEndpointName'>
            /// Name of Cloud Endpoint object.
            /// </param>
            public static CloudEndpointsRestoreheartbeatHeaders Restoreheartbeat(this ICloudEndpointsOperations operations, string resourceGroupName, string storageSyncServiceName, string syncGroupName, string cloudEndpointName)
            {
                return operations.RestoreheartbeatAsync(resourceGroupName, storageSyncServiceName, syncGroupName, cloudEndpointName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Restore Heartbeat a given CloudEndpoint.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='storageSyncServiceName'>
            /// Name of Storage Sync Service resource.
            /// </param>
            /// <param name='syncGroupName'>
            /// Name of Sync Group resource.
            /// </param>
            /// <param name='cloudEndpointName'>
            /// Name of Cloud Endpoint object.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CloudEndpointsRestoreheartbeatHeaders> RestoreheartbeatAsync(this ICloudEndpointsOperations operations, string resourceGroupName, string storageSyncServiceName, string syncGroupName, string cloudEndpointName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.RestoreheartbeatWithHttpMessagesAsync(resourceGroupName, storageSyncServiceName, syncGroupName, cloudEndpointName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Headers;
                }
            }

            /// <summary>
            /// Post Restore a given CloudEndpoint.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='storageSyncServiceName'>
            /// Name of Storage Sync Service resource.
            /// </param>
            /// <param name='syncGroupName'>
            /// Name of Sync Group resource.
            /// </param>
            /// <param name='cloudEndpointName'>
            /// Name of Cloud Endpoint object.
            /// </param>
            /// <param name='parameters'>
            /// Body of Cloud Endpoint object.
            /// </param>
            public static CloudEndpointsPostRestoreHeaders PostRestore(this ICloudEndpointsOperations operations, string resourceGroupName, string storageSyncServiceName, string syncGroupName, string cloudEndpointName, PostRestoreRequest parameters)
            {
                return operations.PostRestoreAsync(resourceGroupName, storageSyncServiceName, syncGroupName, cloudEndpointName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Post Restore a given CloudEndpoint.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='storageSyncServiceName'>
            /// Name of Storage Sync Service resource.
            /// </param>
            /// <param name='syncGroupName'>
            /// Name of Sync Group resource.
            /// </param>
            /// <param name='cloudEndpointName'>
            /// Name of Cloud Endpoint object.
            /// </param>
            /// <param name='parameters'>
            /// Body of Cloud Endpoint object.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CloudEndpointsPostRestoreHeaders> PostRestoreAsync(this ICloudEndpointsOperations operations, string resourceGroupName, string storageSyncServiceName, string syncGroupName, string cloudEndpointName, PostRestoreRequest parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.PostRestoreWithHttpMessagesAsync(resourceGroupName, storageSyncServiceName, syncGroupName, cloudEndpointName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Headers;
                }
            }

            /// <summary>
            /// Create a new CloudEndpoint.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='storageSyncServiceName'>
            /// Name of Storage Sync Service resource.
            /// </param>
            /// <param name='syncGroupName'>
            /// Name of Sync Group resource.
            /// </param>
            /// <param name='cloudEndpointName'>
            /// Name of Cloud Endpoint object.
            /// </param>
            /// <param name='parameters'>
            /// Body of Cloud Endpoint resource.
            /// </param>
            public static CloudEndpoint BeginCreate(this ICloudEndpointsOperations operations, string resourceGroupName, string storageSyncServiceName, string syncGroupName, string cloudEndpointName, CloudEndpointCreateParameters parameters)
            {
                return operations.BeginCreateAsync(resourceGroupName, storageSyncServiceName, syncGroupName, cloudEndpointName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create a new CloudEndpoint.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='storageSyncServiceName'>
            /// Name of Storage Sync Service resource.
            /// </param>
            /// <param name='syncGroupName'>
            /// Name of Sync Group resource.
            /// </param>
            /// <param name='cloudEndpointName'>
            /// Name of Cloud Endpoint object.
            /// </param>
            /// <param name='parameters'>
            /// Body of Cloud Endpoint resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CloudEndpoint> BeginCreateAsync(this ICloudEndpointsOperations operations, string resourceGroupName, string storageSyncServiceName, string syncGroupName, string cloudEndpointName, CloudEndpointCreateParameters parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateWithHttpMessagesAsync(resourceGroupName, storageSyncServiceName, syncGroupName, cloudEndpointName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete a given CloudEndpoint.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='storageSyncServiceName'>
            /// Name of Storage Sync Service resource.
            /// </param>
            /// <param name='syncGroupName'>
            /// Name of Sync Group resource.
            /// </param>
            /// <param name='cloudEndpointName'>
            /// Name of Cloud Endpoint object.
            /// </param>
            public static CloudEndpointsDeleteHeaders BeginDelete(this ICloudEndpointsOperations operations, string resourceGroupName, string storageSyncServiceName, string syncGroupName, string cloudEndpointName)
            {
                return operations.BeginDeleteAsync(resourceGroupName, storageSyncServiceName, syncGroupName, cloudEndpointName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete a given CloudEndpoint.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='storageSyncServiceName'>
            /// Name of Storage Sync Service resource.
            /// </param>
            /// <param name='syncGroupName'>
            /// Name of Sync Group resource.
            /// </param>
            /// <param name='cloudEndpointName'>
            /// Name of Cloud Endpoint object.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CloudEndpointsDeleteHeaders> BeginDeleteAsync(this ICloudEndpointsOperations operations, string resourceGroupName, string storageSyncServiceName, string syncGroupName, string cloudEndpointName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginDeleteWithHttpMessagesAsync(resourceGroupName, storageSyncServiceName, syncGroupName, cloudEndpointName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Headers;
                }
            }

            /// <summary>
            /// Pre Backup a given CloudEndpoint.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='storageSyncServiceName'>
            /// Name of Storage Sync Service resource.
            /// </param>
            /// <param name='syncGroupName'>
            /// Name of Sync Group resource.
            /// </param>
            /// <param name='cloudEndpointName'>
            /// Name of Cloud Endpoint object.
            /// </param>
            /// <param name='azureFileShare'>
            /// Azure File Share.
            /// </param>
            public static CloudEndpointsPreBackupHeaders BeginPreBackup(this ICloudEndpointsOperations operations, string resourceGroupName, string storageSyncServiceName, string syncGroupName, string cloudEndpointName, string azureFileShare = default(string))
            {
                return operations.BeginPreBackupAsync(resourceGroupName, storageSyncServiceName, syncGroupName, cloudEndpointName, azureFileShare).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Pre Backup a given CloudEndpoint.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='storageSyncServiceName'>
            /// Name of Storage Sync Service resource.
            /// </param>
            /// <param name='syncGroupName'>
            /// Name of Sync Group resource.
            /// </param>
            /// <param name='cloudEndpointName'>
            /// Name of Cloud Endpoint object.
            /// </param>
            /// <param name='azureFileShare'>
            /// Azure File Share.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CloudEndpointsPreBackupHeaders> BeginPreBackupAsync(this ICloudEndpointsOperations operations, string resourceGroupName, string storageSyncServiceName, string syncGroupName, string cloudEndpointName, string azureFileShare = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginPreBackupWithHttpMessagesAsync(resourceGroupName, storageSyncServiceName, syncGroupName, cloudEndpointName, azureFileShare, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Headers;
                }
            }

            /// <summary>
            /// Post Backup a given CloudEndpoint.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='storageSyncServiceName'>
            /// Name of Storage Sync Service resource.
            /// </param>
            /// <param name='syncGroupName'>
            /// Name of Sync Group resource.
            /// </param>
            /// <param name='cloudEndpointName'>
            /// Name of Cloud Endpoint object.
            /// </param>
            /// <param name='azureFileShare'>
            /// Azure File Share.
            /// </param>
            public static PostBackupResponse BeginPostBackup(this ICloudEndpointsOperations operations, string resourceGroupName, string storageSyncServiceName, string syncGroupName, string cloudEndpointName, string azureFileShare = default(string))
            {
                return operations.BeginPostBackupAsync(resourceGroupName, storageSyncServiceName, syncGroupName, cloudEndpointName, azureFileShare).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Post Backup a given CloudEndpoint.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='storageSyncServiceName'>
            /// Name of Storage Sync Service resource.
            /// </param>
            /// <param name='syncGroupName'>
            /// Name of Sync Group resource.
            /// </param>
            /// <param name='cloudEndpointName'>
            /// Name of Cloud Endpoint object.
            /// </param>
            /// <param name='azureFileShare'>
            /// Azure File Share.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<PostBackupResponse> BeginPostBackupAsync(this ICloudEndpointsOperations operations, string resourceGroupName, string storageSyncServiceName, string syncGroupName, string cloudEndpointName, string azureFileShare = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginPostBackupWithHttpMessagesAsync(resourceGroupName, storageSyncServiceName, syncGroupName, cloudEndpointName, azureFileShare, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Pre Restore a given CloudEndpoint.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='storageSyncServiceName'>
            /// Name of Storage Sync Service resource.
            /// </param>
            /// <param name='syncGroupName'>
            /// Name of Sync Group resource.
            /// </param>
            /// <param name='cloudEndpointName'>
            /// Name of Cloud Endpoint object.
            /// </param>
            /// <param name='parameters'>
            /// Body of Cloud Endpoint object.
            /// </param>
            public static CloudEndpointsPreRestoreHeaders BeginPreRestore(this ICloudEndpointsOperations operations, string resourceGroupName, string storageSyncServiceName, string syncGroupName, string cloudEndpointName, PreRestoreRequest parameters)
            {
                return operations.BeginPreRestoreAsync(resourceGroupName, storageSyncServiceName, syncGroupName, cloudEndpointName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Pre Restore a given CloudEndpoint.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='storageSyncServiceName'>
            /// Name of Storage Sync Service resource.
            /// </param>
            /// <param name='syncGroupName'>
            /// Name of Sync Group resource.
            /// </param>
            /// <param name='cloudEndpointName'>
            /// Name of Cloud Endpoint object.
            /// </param>
            /// <param name='parameters'>
            /// Body of Cloud Endpoint object.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CloudEndpointsPreRestoreHeaders> BeginPreRestoreAsync(this ICloudEndpointsOperations operations, string resourceGroupName, string storageSyncServiceName, string syncGroupName, string cloudEndpointName, PreRestoreRequest parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginPreRestoreWithHttpMessagesAsync(resourceGroupName, storageSyncServiceName, syncGroupName, cloudEndpointName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Headers;
                }
            }

            /// <summary>
            /// Post Restore a given CloudEndpoint.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='storageSyncServiceName'>
            /// Name of Storage Sync Service resource.
            /// </param>
            /// <param name='syncGroupName'>
            /// Name of Sync Group resource.
            /// </param>
            /// <param name='cloudEndpointName'>
            /// Name of Cloud Endpoint object.
            /// </param>
            /// <param name='parameters'>
            /// Body of Cloud Endpoint object.
            /// </param>
            public static CloudEndpointsPostRestoreHeaders BeginPostRestore(this ICloudEndpointsOperations operations, string resourceGroupName, string storageSyncServiceName, string syncGroupName, string cloudEndpointName, PostRestoreRequest parameters)
            {
                return operations.BeginPostRestoreAsync(resourceGroupName, storageSyncServiceName, syncGroupName, cloudEndpointName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Post Restore a given CloudEndpoint.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='storageSyncServiceName'>
            /// Name of Storage Sync Service resource.
            /// </param>
            /// <param name='syncGroupName'>
            /// Name of Sync Group resource.
            /// </param>
            /// <param name='cloudEndpointName'>
            /// Name of Cloud Endpoint object.
            /// </param>
            /// <param name='parameters'>
            /// Body of Cloud Endpoint object.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CloudEndpointsPostRestoreHeaders> BeginPostRestoreAsync(this ICloudEndpointsOperations operations, string resourceGroupName, string storageSyncServiceName, string syncGroupName, string cloudEndpointName, PostRestoreRequest parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginPostRestoreWithHttpMessagesAsync(resourceGroupName, storageSyncServiceName, syncGroupName, cloudEndpointName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Headers;
                }
            }

    }
}
