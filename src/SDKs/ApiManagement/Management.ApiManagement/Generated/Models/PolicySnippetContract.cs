// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ApiManagement.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Policy snippet.
    /// </summary>
    public partial class PolicySnippetContract
    {
        /// <summary>
        /// Initializes a new instance of the PolicySnippetContract class.
        /// </summary>
        public PolicySnippetContract()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PolicySnippetContract class.
        /// </summary>
        /// <param name="name">Snippet name.</param>
        /// <param name="content">Snippet content.</param>
        /// <param name="toolTip">Snippet toolTip.</param>
        /// <param name="scope">Binary OR value of the Snippet scope.</param>
        public PolicySnippetContract(string name = default(string), string content = default(string), string toolTip = default(string), int? scope = default(int?))
        {
            Name = name;
            Content = content;
            ToolTip = toolTip;
            Scope = scope;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets snippet name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets snippet content.
        /// </summary>
        [JsonProperty(PropertyName = "content")]
        public string Content { get; private set; }

        /// <summary>
        /// Gets snippet toolTip.
        /// </summary>
        [JsonProperty(PropertyName = "toolTip")]
        public string ToolTip { get; private set; }

        /// <summary>
        /// Gets binary OR value of the Snippet scope.
        /// </summary>
        [JsonProperty(PropertyName = "scope")]
        public int? Scope { get; private set; }

    }
}
