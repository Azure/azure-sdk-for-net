// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.ServiceFabric.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.ServiceFabric;
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Client certificate details using common name
    /// </summary>
    public partial class ClientCertificateCommonName
    {
        /// <summary>
        /// Initializes a new instance of the ClientCertificateCommonName
        /// class.
        /// </summary>
        public ClientCertificateCommonName()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ClientCertificateCommonName
        /// class.
        /// </summary>
        /// <param name="isAdmin">Is this certificate used for admin access
        /// from the client, if false , it is used or query only access</param>
        /// <param name="certificateCommonName">Certificate common name to be
        /// granted access; be carefull using wild card common names</param>
        /// <param name="certificateIssuerThumbprint">Certificate issuer
        /// thumbprint</param>
        public ClientCertificateCommonName(bool isAdmin, string certificateCommonName, string certificateIssuerThumbprint)
        {
            IsAdmin = isAdmin;
            CertificateCommonName = certificateCommonName;
            CertificateIssuerThumbprint = certificateIssuerThumbprint;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets is this certificate used for admin access from the
        /// client, if false , it is used or query only access
        /// </summary>
        [JsonProperty(PropertyName = "isAdmin")]
        public bool IsAdmin { get; set; }

        /// <summary>
        /// Gets or sets certificate common name to be granted access; be
        /// carefull using wild card common names
        /// </summary>
        [JsonProperty(PropertyName = "certificateCommonName")]
        public string CertificateCommonName { get; set; }

        /// <summary>
        /// Gets or sets certificate issuer thumbprint
        /// </summary>
        [JsonProperty(PropertyName = "certificateIssuerThumbprint")]
        public string CertificateIssuerThumbprint { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (CertificateCommonName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CertificateCommonName");
            }
            if (CertificateIssuerThumbprint == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CertificateIssuerThumbprint");
            }
        }
    }
}
