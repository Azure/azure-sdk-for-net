// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ServiceFabric
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for ClustersOperations.
    /// </summary>
    public static partial class ClustersOperationsExtensions
    {
            /// <summary>
            /// Gets a Service Fabric cluster resource.
            /// </summary>
            /// <remarks>
            /// Get a Service Fabric cluster resource created or in the process of being
            /// created in the specified resource group.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the cluster resource.
            /// </param>
            /// <param name='subscriptionId'>
            /// The customer subscription identifier.
            /// </param>
            public static Cluster Get(this IClustersOperations operations, string resourceGroupName, string clusterName, string subscriptionId)
            {
                return operations.GetAsync(resourceGroupName, clusterName, subscriptionId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets a Service Fabric cluster resource.
            /// </summary>
            /// <remarks>
            /// Get a Service Fabric cluster resource created or in the process of being
            /// created in the specified resource group.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the cluster resource.
            /// </param>
            /// <param name='subscriptionId'>
            /// The customer subscription identifier.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Cluster> GetAsync(this IClustersOperations operations, string resourceGroupName, string clusterName, string subscriptionId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, clusterName, subscriptionId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates or updates a Service Fabric cluster resource.
            /// </summary>
            /// <remarks>
            /// Create or update a Service Fabric cluster resource with the specified name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the cluster resource.
            /// </param>
            /// <param name='subscriptionId'>
            /// The customer subscription identifier.
            /// </param>
            /// <param name='parameters'>
            /// The cluster resource.
            /// </param>
            public static Cluster Create(this IClustersOperations operations, string resourceGroupName, string clusterName, string subscriptionId, Cluster parameters)
            {
                return operations.CreateAsync(resourceGroupName, clusterName, subscriptionId, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates or updates a Service Fabric cluster resource.
            /// </summary>
            /// <remarks>
            /// Create or update a Service Fabric cluster resource with the specified name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the cluster resource.
            /// </param>
            /// <param name='subscriptionId'>
            /// The customer subscription identifier.
            /// </param>
            /// <param name='parameters'>
            /// The cluster resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Cluster> CreateAsync(this IClustersOperations operations, string resourceGroupName, string clusterName, string subscriptionId, Cluster parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(resourceGroupName, clusterName, subscriptionId, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Updates the configuration of a Service Fabric cluster resource.
            /// </summary>
            /// <remarks>
            /// Update the configuration of a Service Fabric cluster resource with the
            /// specified name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the cluster resource.
            /// </param>
            /// <param name='subscriptionId'>
            /// The customer subscription identifier.
            /// </param>
            /// <param name='parameters'>
            /// The parameters which contains the property value and property name which
            /// used to update the cluster configuration.
            /// </param>
            public static Cluster Update(this IClustersOperations operations, string resourceGroupName, string clusterName, string subscriptionId, ClusterUpdateParameters parameters)
            {
                return operations.UpdateAsync(resourceGroupName, clusterName, subscriptionId, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Updates the configuration of a Service Fabric cluster resource.
            /// </summary>
            /// <remarks>
            /// Update the configuration of a Service Fabric cluster resource with the
            /// specified name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the cluster resource.
            /// </param>
            /// <param name='subscriptionId'>
            /// The customer subscription identifier.
            /// </param>
            /// <param name='parameters'>
            /// The parameters which contains the property value and property name which
            /// used to update the cluster configuration.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Cluster> UpdateAsync(this IClustersOperations operations, string resourceGroupName, string clusterName, string subscriptionId, ClusterUpdateParameters parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(resourceGroupName, clusterName, subscriptionId, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes a Service Fabric cluster resource.
            /// </summary>
            /// <remarks>
            /// Delete a Service Fabric cluster resource with the specified name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the cluster resource.
            /// </param>
            /// <param name='subscriptionId'>
            /// The customer subscription identifier.
            /// </param>
            public static void Delete(this IClustersOperations operations, string resourceGroupName, string clusterName, string subscriptionId)
            {
                operations.DeleteAsync(resourceGroupName, clusterName, subscriptionId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes a Service Fabric cluster resource.
            /// </summary>
            /// <remarks>
            /// Delete a Service Fabric cluster resource with the specified name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the cluster resource.
            /// </param>
            /// <param name='subscriptionId'>
            /// The customer subscription identifier.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IClustersOperations operations, string resourceGroupName, string clusterName, string subscriptionId, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, clusterName, subscriptionId, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Gets the list of Service Fabric cluster resources created in the specified
            /// resource group.
            /// </summary>
            /// <remarks>
            /// Gets all Service Fabric cluster resources created or in the process of
            /// being created in the resource group.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='subscriptionId'>
            /// The customer subscription identifier.
            /// </param>
            public static ClusterListResult ListByResourceGroup(this IClustersOperations operations, string resourceGroupName, string subscriptionId)
            {
                return operations.ListByResourceGroupAsync(resourceGroupName, subscriptionId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the list of Service Fabric cluster resources created in the specified
            /// resource group.
            /// </summary>
            /// <remarks>
            /// Gets all Service Fabric cluster resources created or in the process of
            /// being created in the resource group.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='subscriptionId'>
            /// The customer subscription identifier.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ClusterListResult> ListByResourceGroupAsync(this IClustersOperations operations, string resourceGroupName, string subscriptionId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByResourceGroupWithHttpMessagesAsync(resourceGroupName, subscriptionId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets the list of Service Fabric cluster resources created in the specified
            /// subscription.
            /// </summary>
            /// <remarks>
            /// Gets all Service Fabric cluster resources created or in the process of
            /// being created in the subscription.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// The customer subscription identifier.
            /// </param>
            public static ClusterListResult List(this IClustersOperations operations, string subscriptionId)
            {
                return operations.ListAsync(subscriptionId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the list of Service Fabric cluster resources created in the specified
            /// subscription.
            /// </summary>
            /// <remarks>
            /// Gets all Service Fabric cluster resources created or in the process of
            /// being created in the subscription.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// The customer subscription identifier.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ClusterListResult> ListAsync(this IClustersOperations operations, string subscriptionId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(subscriptionId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates or updates a Service Fabric cluster resource.
            /// </summary>
            /// <remarks>
            /// Create or update a Service Fabric cluster resource with the specified name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the cluster resource.
            /// </param>
            /// <param name='subscriptionId'>
            /// The customer subscription identifier.
            /// </param>
            /// <param name='parameters'>
            /// The cluster resource.
            /// </param>
            public static Cluster BeginCreate(this IClustersOperations operations, string resourceGroupName, string clusterName, string subscriptionId, Cluster parameters)
            {
                return operations.BeginCreateAsync(resourceGroupName, clusterName, subscriptionId, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates or updates a Service Fabric cluster resource.
            /// </summary>
            /// <remarks>
            /// Create or update a Service Fabric cluster resource with the specified name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the cluster resource.
            /// </param>
            /// <param name='subscriptionId'>
            /// The customer subscription identifier.
            /// </param>
            /// <param name='parameters'>
            /// The cluster resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Cluster> BeginCreateAsync(this IClustersOperations operations, string resourceGroupName, string clusterName, string subscriptionId, Cluster parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateWithHttpMessagesAsync(resourceGroupName, clusterName, subscriptionId, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Updates the configuration of a Service Fabric cluster resource.
            /// </summary>
            /// <remarks>
            /// Update the configuration of a Service Fabric cluster resource with the
            /// specified name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the cluster resource.
            /// </param>
            /// <param name='subscriptionId'>
            /// The customer subscription identifier.
            /// </param>
            /// <param name='parameters'>
            /// The parameters which contains the property value and property name which
            /// used to update the cluster configuration.
            /// </param>
            public static Cluster BeginUpdate(this IClustersOperations operations, string resourceGroupName, string clusterName, string subscriptionId, ClusterUpdateParameters parameters)
            {
                return operations.BeginUpdateAsync(resourceGroupName, clusterName, subscriptionId, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Updates the configuration of a Service Fabric cluster resource.
            /// </summary>
            /// <remarks>
            /// Update the configuration of a Service Fabric cluster resource with the
            /// specified name.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='clusterName'>
            /// The name of the cluster resource.
            /// </param>
            /// <param name='subscriptionId'>
            /// The customer subscription identifier.
            /// </param>
            /// <param name='parameters'>
            /// The parameters which contains the property value and property name which
            /// used to update the cluster configuration.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Cluster> BeginUpdateAsync(this IClustersOperations operations, string resourceGroupName, string clusterName, string subscriptionId, ClusterUpdateParameters parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginUpdateWithHttpMessagesAsync(resourceGroupName, clusterName, subscriptionId, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
