// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataLake.Analytics.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Scope job properties used when submitting Scope jobs. (Only for use
    /// internally with Scope job type.)
    /// </summary>
    [Newtonsoft.Json.JsonObject("Scope")]
    public partial class CreateScopeJobProperties : CreateJobProperties
    {
        /// <summary>
        /// Initializes a new instance of the CreateScopeJobProperties class.
        /// </summary>
        public CreateScopeJobProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CreateScopeJobProperties class.
        /// </summary>
        /// <param name="script">The script to run. Please note that the
        /// maximum script size is 3 MB.</param>
        /// <param name="runtimeVersion">The runtime version of the Data Lake
        /// Analytics engine to use for the specific type of job being
        /// run.</param>
        /// <param name="resources">The list of resources that are required by
        /// the job.</param>
        /// <param name="notifier">The list of email addresses, separated by
        /// semi-colons, to notify when the job reaches a terminal
        /// state.</param>
        public CreateScopeJobProperties(string script, string runtimeVersion = default(string), IList<ScopeJobResource> resources = default(IList<ScopeJobResource>), string notifier = default(string))
            : base(script, runtimeVersion)
        {
            Resources = resources;
            Notifier = notifier;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the list of resources that are required by the job.
        /// </summary>
        [JsonProperty(PropertyName = "resources")]
        public IList<ScopeJobResource> Resources { get; set; }

        /// <summary>
        /// Gets or sets the list of email addresses, separated by semi-colons,
        /// to notify when the job reaches a terminal state.
        /// </summary>
        [JsonProperty(PropertyName = "notifier")]
        public string Notifier { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
