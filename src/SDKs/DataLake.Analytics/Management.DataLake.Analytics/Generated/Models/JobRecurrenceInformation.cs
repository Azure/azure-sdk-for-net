// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataLake.Analytics.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Recurrence job information for a specific recurrence.
    /// </summary>
    public partial class JobRecurrenceInformation
    {
        /// <summary>
        /// Initializes a new instance of the JobRecurrenceInformation class.
        /// </summary>
        public JobRecurrenceInformation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JobRecurrenceInformation class.
        /// </summary>
        /// <param name="recurrenceId">The recurrence identifier (a GUID),
        /// unique per activity/script, regardless of iterations. This is
        /// something to link different occurrences of the same job
        /// together.</param>
        /// <param name="recurrenceName">The recurrence name, user friendly
        /// name for the correlation between jobs.</param>
        /// <param name="numJobsFailed">The number of jobs in this recurrence
        /// that have failed.</param>
        /// <param name="numJobsCanceled">The number of jobs in this recurrence
        /// that have been canceled.</param>
        /// <param name="numJobsSucceeded">The number of jobs in this
        /// recurrence that have succeeded.</param>
        /// <param name="auHoursFailed">The number of job execution hours that
        /// resulted in failed jobs.</param>
        /// <param name="auHoursCanceled">The number of job execution hours
        /// that resulted in canceled jobs.</param>
        /// <param name="auHoursSucceeded">The number of job execution hours
        /// that resulted in successful jobs.</param>
        /// <param name="lastSubmitTime">The last time a job in this recurrence
        /// was submitted.</param>
        public JobRecurrenceInformation(System.Guid? recurrenceId = default(System.Guid?), string recurrenceName = default(string), int? numJobsFailed = default(int?), int? numJobsCanceled = default(int?), int? numJobsSucceeded = default(int?), double? auHoursFailed = default(double?), double? auHoursCanceled = default(double?), double? auHoursSucceeded = default(double?), System.DateTimeOffset? lastSubmitTime = default(System.DateTimeOffset?))
        {
            RecurrenceId = recurrenceId;
            RecurrenceName = recurrenceName;
            NumJobsFailed = numJobsFailed;
            NumJobsCanceled = numJobsCanceled;
            NumJobsSucceeded = numJobsSucceeded;
            AuHoursFailed = auHoursFailed;
            AuHoursCanceled = auHoursCanceled;
            AuHoursSucceeded = auHoursSucceeded;
            LastSubmitTime = lastSubmitTime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the recurrence identifier (a GUID), unique per
        /// activity/script, regardless of iterations. This is something to
        /// link different occurrences of the same job together.
        /// </summary>
        [JsonProperty(PropertyName = "recurrenceId")]
        public System.Guid? RecurrenceId { get; private set; }

        /// <summary>
        /// Gets the recurrence name, user friendly name for the correlation
        /// between jobs.
        /// </summary>
        [JsonProperty(PropertyName = "recurrenceName")]
        public string RecurrenceName { get; private set; }

        /// <summary>
        /// Gets the number of jobs in this recurrence that have failed.
        /// </summary>
        [JsonProperty(PropertyName = "numJobsFailed")]
        public int? NumJobsFailed { get; private set; }

        /// <summary>
        /// Gets the number of jobs in this recurrence that have been canceled.
        /// </summary>
        [JsonProperty(PropertyName = "numJobsCanceled")]
        public int? NumJobsCanceled { get; private set; }

        /// <summary>
        /// Gets the number of jobs in this recurrence that have succeeded.
        /// </summary>
        [JsonProperty(PropertyName = "numJobsSucceeded")]
        public int? NumJobsSucceeded { get; private set; }

        /// <summary>
        /// Gets the number of job execution hours that resulted in failed
        /// jobs.
        /// </summary>
        [JsonProperty(PropertyName = "auHoursFailed")]
        public double? AuHoursFailed { get; private set; }

        /// <summary>
        /// Gets the number of job execution hours that resulted in canceled
        /// jobs.
        /// </summary>
        [JsonProperty(PropertyName = "auHoursCanceled")]
        public double? AuHoursCanceled { get; private set; }

        /// <summary>
        /// Gets the number of job execution hours that resulted in successful
        /// jobs.
        /// </summary>
        [JsonProperty(PropertyName = "auHoursSucceeded")]
        public double? AuHoursSucceeded { get; private set; }

        /// <summary>
        /// Gets the last time a job in this recurrence was submitted.
        /// </summary>
        [JsonProperty(PropertyName = "lastSubmitTime")]
        public System.DateTimeOffset? LastSubmitTime { get; private set; }

    }
}
