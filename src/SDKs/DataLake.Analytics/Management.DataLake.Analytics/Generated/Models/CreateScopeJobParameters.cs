// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataLake.Analytics.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The parameters used to submit a new Data Lake Analytics Scope job.
    /// (Only for use internally with Scope job type.)
    /// </summary>
    public partial class CreateScopeJobParameters : CreateJobParameters
    {
        /// <summary>
        /// Initializes a new instance of the CreateScopeJobParameters class.
        /// </summary>
        public CreateScopeJobParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CreateScopeJobParameters class.
        /// </summary>
        /// <param name="type">The job type of the current job (Hive, USql, or
        /// Scope (for internal use only)). Possible values include: 'USql',
        /// 'Hive', 'Scope'</param>
        /// <param name="properties">The job specific properties.</param>
        /// <param name="name">The friendly name of the job to submit.</param>
        /// <param name="degreeOfParallelism">The degree of parallelism to use
        /// for this job. At most one of degreeOfParallelism and
        /// degreeOfParallelismPercent should be specified. If none, a default
        /// value of 1 will be used for degreeOfParallelism.</param>
        /// <param name="degreeOfParallelismPercent">the degree of parallelism
        /// in percentage used for this job. At most one of degreeOfParallelism
        /// and degreeOfParallelismPercent should be specified. If none, a
        /// default value of 1 will be used for degreeOfParallelism.</param>
        /// <param name="priority">The priority value to use for the current
        /// job. Lower numbers have a higher priority. By default, a job has a
        /// priority of 1000. This must be greater than 0.</param>
        /// <param name="logFilePatterns">The list of log file name patterns to
        /// find in the logFolder. '*' is the only matching character allowed.
        /// Example format: jobExecution*.log or *mylog*.txt</param>
        /// <param name="related">The recurring job relationship information
        /// properties.</param>
        /// <param name="tags">The key-value pairs used to add additional
        /// metadata to the job information.</param>
        public CreateScopeJobParameters(JobType type, CreateJobProperties properties, string name, int? degreeOfParallelism = default(int?), double? degreeOfParallelismPercent = default(double?), int? priority = default(int?), IList<string> logFilePatterns = default(IList<string>), JobRelationshipProperties related = default(JobRelationshipProperties), IDictionary<string, string> tags = default(IDictionary<string, string>))
            : base(type, properties, name, degreeOfParallelism, degreeOfParallelismPercent, priority, logFilePatterns, related)
        {
            Tags = tags;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the key-value pairs used to add additional metadata to
        /// the job information.
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
