// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataLake.Analytics.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// A Data Lake Analytics catalog U-SQL table fragment item.
    /// </summary>
    public partial class USqlTableFragment
    {
        /// <summary>
        /// Initializes a new instance of the USqlTableFragment class.
        /// </summary>
        public USqlTableFragment()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the USqlTableFragment class.
        /// </summary>
        /// <param name="parentId">the parent object Id of the table fragment.
        /// The parent could be a table or table partition.</param>
        /// <param name="fragmentId">the version of the catalog item.</param>
        /// <param name="indexId">the ordinal of the index which contains the
        /// table fragment.</param>
        /// <param name="size">the data size of the table fragment in
        /// bytes.</param>
        /// <param name="rowCount">the number of rows in the table
        /// fragment.</param>
        /// <param name="createDate">the creation time of the table
        /// fragment.</param>
        public USqlTableFragment(System.Guid? parentId = default(System.Guid?), System.Guid? fragmentId = default(System.Guid?), int? indexId = default(int?), long? size = default(long?), long? rowCount = default(long?), System.DateTimeOffset? createDate = default(System.DateTimeOffset?))
        {
            ParentId = parentId;
            FragmentId = fragmentId;
            IndexId = indexId;
            Size = size;
            RowCount = rowCount;
            CreateDate = createDate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the parent object Id of the table fragment. The parent
        /// could be a table or table partition.
        /// </summary>
        [JsonProperty(PropertyName = "parentId")]
        public System.Guid? ParentId { get; set; }

        /// <summary>
        /// Gets or sets the version of the catalog item.
        /// </summary>
        [JsonProperty(PropertyName = "fragmentId")]
        public System.Guid? FragmentId { get; set; }

        /// <summary>
        /// Gets or sets the ordinal of the index which contains the table
        /// fragment.
        /// </summary>
        [JsonProperty(PropertyName = "indexId")]
        public int? IndexId { get; set; }

        /// <summary>
        /// Gets or sets the data size of the table fragment in bytes.
        /// </summary>
        [JsonProperty(PropertyName = "size")]
        public long? Size { get; set; }

        /// <summary>
        /// Gets or sets the number of rows in the table fragment.
        /// </summary>
        [JsonProperty(PropertyName = "rowCount")]
        public long? RowCount { get; set; }

        /// <summary>
        /// Gets or sets the creation time of the table fragment.
        /// </summary>
        [JsonProperty(PropertyName = "createDate")]
        public System.DateTimeOffset? CreateDate { get; set; }

    }
}
