// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataLake.Analytics.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The parameters that can be used to update existing Data Lake Analytics
    /// job information properties. (Only for use internally with Scope job
    /// type.)
    /// </summary>
    public partial class UpdateJobParameters
    {
        /// <summary>
        /// Initializes a new instance of the UpdateJobParameters class.
        /// </summary>
        public UpdateJobParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UpdateJobParameters class.
        /// </summary>
        /// <param name="degreeOfParallelism">The degree of parallelism used
        /// for this job.</param>
        /// <param name="degreeOfParallelismPercent">the degree of parallelism
        /// in percentage used for this job.</param>
        /// <param name="priority">The priority value for the current job.
        /// Lower numbers have a higher priority. By default, a job has a
        /// priority of 1000. This must be greater than 0.</param>
        /// <param name="tags">The key-value pairs used to add additional
        /// metadata to the job information.</param>
        public UpdateJobParameters(int? degreeOfParallelism = default(int?), double? degreeOfParallelismPercent = default(double?), int? priority = default(int?), IDictionary<string, string> tags = default(IDictionary<string, string>))
        {
            DegreeOfParallelism = degreeOfParallelism;
            DegreeOfParallelismPercent = degreeOfParallelismPercent;
            Priority = priority;
            Tags = tags;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the degree of parallelism used for this job.
        /// </summary>
        [JsonProperty(PropertyName = "degreeOfParallelism")]
        public int? DegreeOfParallelism { get; set; }

        /// <summary>
        /// Gets or sets the degree of parallelism in percentage used for this
        /// job.
        /// </summary>
        [JsonProperty(PropertyName = "degreeOfParallelismPercent")]
        public double? DegreeOfParallelismPercent { get; set; }

        /// <summary>
        /// Gets or sets the priority value for the current job. Lower numbers
        /// have a higher priority. By default, a job has a priority of 1000.
        /// This must be greater than 0.
        /// </summary>
        [JsonProperty(PropertyName = "priority")]
        public int? Priority { get; set; }

        /// <summary>
        /// Gets or sets the key-value pairs used to add additional metadata to
        /// the job information.
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

    }
}
