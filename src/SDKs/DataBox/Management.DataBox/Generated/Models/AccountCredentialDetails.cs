// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataBox.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Credential details of the account.
    /// </summary>
    public partial class AccountCredentialDetails
    {
        /// <summary>
        /// Initializes a new instance of the AccountCredentialDetails class.
        /// </summary>
        public AccountCredentialDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AccountCredentialDetails class.
        /// </summary>
        /// <param name="accountName">Name of the account.</param>
        /// <param name="accountConnectionString">Connection string of the
        /// account endpoint to use the account as a storage endpoint on the
        /// device.</param>
        /// <param name="shareCredentialDetails">Per share level unencrypted
        /// access credentials.</param>
        public AccountCredentialDetails(string accountName = default(string), string accountConnectionString = default(string), IList<ShareCredentialDetails> shareCredentialDetails = default(IList<ShareCredentialDetails>))
        {
            AccountName = accountName;
            AccountConnectionString = accountConnectionString;
            ShareCredentialDetails = shareCredentialDetails;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets name of the account.
        /// </summary>
        [JsonProperty(PropertyName = "accountName")]
        public string AccountName { get; private set; }

        /// <summary>
        /// Gets connection string of the account endpoint to use the account
        /// as a storage endpoint on the device.
        /// </summary>
        [JsonProperty(PropertyName = "accountConnectionString")]
        public string AccountConnectionString { get; private set; }

        /// <summary>
        /// Gets per share level unencrypted access credentials.
        /// </summary>
        [JsonProperty(PropertyName = "shareCredentialDetails")]
        public IList<ShareCredentialDetails> ShareCredentialDetails { get; private set; }

    }
}
