// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataBox.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for StageStatus.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum StageStatus
    {
        [EnumMember(Value = "None")]
        None,
        [EnumMember(Value = "InProgress")]
        InProgress,
        [EnumMember(Value = "Succeeded")]
        Succeeded,
        [EnumMember(Value = "Failed")]
        Failed,
        [EnumMember(Value = "Cancelled")]
        Cancelled,
        [EnumMember(Value = "Cancelling")]
        Cancelling,
        [EnumMember(Value = "SucceededWithErrors")]
        SucceededWithErrors
    }
    internal static class StageStatusEnumExtension
    {
        internal static string ToSerializedValue(this StageStatus? value)
        {
            return value == null ? null : ((StageStatus)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this StageStatus value)
        {
            switch( value )
            {
                case StageStatus.None:
                    return "None";
                case StageStatus.InProgress:
                    return "InProgress";
                case StageStatus.Succeeded:
                    return "Succeeded";
                case StageStatus.Failed:
                    return "Failed";
                case StageStatus.Cancelled:
                    return "Cancelled";
                case StageStatus.Cancelling:
                    return "Cancelling";
                case StageStatus.SucceededWithErrors:
                    return "SucceededWithErrors";
            }
            return null;
        }

        internal static StageStatus? ParseStageStatus(this string value)
        {
            switch( value )
            {
                case "None":
                    return StageStatus.None;
                case "InProgress":
                    return StageStatus.InProgress;
                case "Succeeded":
                    return StageStatus.Succeeded;
                case "Failed":
                    return StageStatus.Failed;
                case "Cancelled":
                    return StageStatus.Cancelled;
                case "Cancelling":
                    return StageStatus.Cancelling;
                case "SucceededWithErrors":
                    return StageStatus.SucceededWithErrors;
            }
            return null;
        }
    }
}
