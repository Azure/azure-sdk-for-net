// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataBox.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for IssueType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum IssueType
    {
        [EnumMember(Value = "DeviceMismatch")]
        DeviceMismatch,
        [EnumMember(Value = "ValidationStringMismatch")]
        ValidationStringMismatch,
        [EnumMember(Value = "CredentialNotWorking")]
        CredentialNotWorking,
        [EnumMember(Value = "DeviceFailure")]
        DeviceFailure
    }
    internal static class IssueTypeEnumExtension
    {
        internal static string ToSerializedValue(this IssueType? value)
        {
            return value == null ? null : ((IssueType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this IssueType value)
        {
            switch( value )
            {
                case IssueType.DeviceMismatch:
                    return "DeviceMismatch";
                case IssueType.ValidationStringMismatch:
                    return "ValidationStringMismatch";
                case IssueType.CredentialNotWorking:
                    return "CredentialNotWorking";
                case IssueType.DeviceFailure:
                    return "DeviceFailure";
            }
            return null;
        }

        internal static IssueType? ParseIssueType(this string value)
        {
            switch( value )
            {
                case "DeviceMismatch":
                    return IssueType.DeviceMismatch;
                case "ValidationStringMismatch":
                    return IssueType.ValidationStringMismatch;
                case "CredentialNotWorking":
                    return IssueType.CredentialNotWorking;
                case "DeviceFailure":
                    return IssueType.DeviceFailure;
            }
            return null;
        }
    }
}
