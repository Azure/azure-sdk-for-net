// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataBox.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The secrets related to a databox heavy.
    /// </summary>
    public partial class DataBoxHeavySecret
    {
        /// <summary>
        /// Initializes a new instance of the DataBoxHeavySecret class.
        /// </summary>
        public DataBoxHeavySecret()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DataBoxHeavySecret class.
        /// </summary>
        /// <param name="deviceSerialNumber">Serial number of the assigned
        /// device.</param>
        /// <param name="devicePassword">Password for out of the box experience
        /// on device.</param>
        /// <param name="networkConfigurations">Network configuration of the
        /// appliance.</param>
        /// <param name="encodedValidationCertPubKey">The base 64 encoded
        /// public key to authenticate with the device</param>
        /// <param name="accountCredentialDetails">Per account level access
        /// credentials.</param>
        public DataBoxHeavySecret(string deviceSerialNumber = default(string), string devicePassword = default(string), IList<ApplianceNetworkConfiguration> networkConfigurations = default(IList<ApplianceNetworkConfiguration>), string encodedValidationCertPubKey = default(string), IList<AccountCredentialDetails> accountCredentialDetails = default(IList<AccountCredentialDetails>))
        {
            DeviceSerialNumber = deviceSerialNumber;
            DevicePassword = devicePassword;
            NetworkConfigurations = networkConfigurations;
            EncodedValidationCertPubKey = encodedValidationCertPubKey;
            AccountCredentialDetails = accountCredentialDetails;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets serial number of the assigned device.
        /// </summary>
        [JsonProperty(PropertyName = "deviceSerialNumber")]
        public string DeviceSerialNumber { get; private set; }

        /// <summary>
        /// Gets password for out of the box experience on device.
        /// </summary>
        [JsonProperty(PropertyName = "devicePassword")]
        public string DevicePassword { get; private set; }

        /// <summary>
        /// Gets network configuration of the appliance.
        /// </summary>
        [JsonProperty(PropertyName = "networkConfigurations")]
        public IList<ApplianceNetworkConfiguration> NetworkConfigurations { get; private set; }

        /// <summary>
        /// Gets the base 64 encoded public key to authenticate with the device
        /// </summary>
        [JsonProperty(PropertyName = "encodedValidationCertPubKey")]
        public string EncodedValidationCertPubKey { get; private set; }

        /// <summary>
        /// Gets per account level access credentials.
        /// </summary>
        [JsonProperty(PropertyName = "accountCredentialDetails")]
        public IList<AccountCredentialDetails> AccountCredentialDetails { get; private set; }

    }
}
