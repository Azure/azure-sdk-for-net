// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Information about the current running state of the overall upgrade.
    /// </summary>
    public partial class UpgradeOperationHistoryStatus
    {
        /// <summary>
        /// Initializes a new instance of the UpgradeOperationHistoryStatus
        /// class.
        /// </summary>
        public UpgradeOperationHistoryStatus()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UpgradeOperationHistoryStatus
        /// class.
        /// </summary>
        /// <param name="code">Code indicating the current status of the
        /// upgrade. Possible values include: 'RollingForward', 'Cancelled',
        /// 'Completed', 'Faulted'</param>
        /// <param name="startTime">Start time of the upgrade.</param>
        /// <param name="endTime">End time of the upgrade.</param>
        public UpgradeOperationHistoryStatus(UpgradeState? code = default(UpgradeState?), System.DateTime? startTime = default(System.DateTime?), System.DateTime? endTime = default(System.DateTime?))
        {
            Code = code;
            StartTime = startTime;
            EndTime = endTime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets code indicating the current status of the upgrade. Possible
        /// values include: 'RollingForward', 'Cancelled', 'Completed',
        /// 'Faulted'
        /// </summary>
        [JsonProperty(PropertyName = "code")]
        public UpgradeState? Code { get; private set; }

        /// <summary>
        /// Gets start time of the upgrade.
        /// </summary>
        [JsonProperty(PropertyName = "startTime")]
        public System.DateTime? StartTime { get; private set; }

        /// <summary>
        /// Gets end time of the upgrade.
        /// </summary>
        [JsonProperty(PropertyName = "endTime")]
        public System.DateTime? EndTime { get; private set; }

    }
}
