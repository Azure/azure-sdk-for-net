// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Newtonsoft.Json;

    /// <summary>
    /// Defines values for ContainerServiceVMSizeTypes.
    /// </summary>
    /// <summary>
    /// Determine base value for a given allowed value if exists, else return
    /// the value itself
    /// </summary>
    [JsonConverter(typeof(ContainerServiceVMSizeTypesConverter))]
    public struct ContainerServiceVMSizeTypes : System.IEquatable<ContainerServiceVMSizeTypes>
    {
        private ContainerServiceVMSizeTypes(string underlyingValue)
        {
            UnderlyingValue=underlyingValue;
        }

        public static readonly ContainerServiceVMSizeTypes StandardA0 = "Standard_A0";

        public static readonly ContainerServiceVMSizeTypes StandardA1 = "Standard_A1";

        public static readonly ContainerServiceVMSizeTypes StandardA2 = "Standard_A2";

        public static readonly ContainerServiceVMSizeTypes StandardA3 = "Standard_A3";

        public static readonly ContainerServiceVMSizeTypes StandardA4 = "Standard_A4";

        public static readonly ContainerServiceVMSizeTypes StandardA5 = "Standard_A5";

        public static readonly ContainerServiceVMSizeTypes StandardA6 = "Standard_A6";

        public static readonly ContainerServiceVMSizeTypes StandardA7 = "Standard_A7";

        public static readonly ContainerServiceVMSizeTypes StandardA8 = "Standard_A8";

        public static readonly ContainerServiceVMSizeTypes StandardA9 = "Standard_A9";

        public static readonly ContainerServiceVMSizeTypes StandardA10 = "Standard_A10";

        public static readonly ContainerServiceVMSizeTypes StandardA11 = "Standard_A11";

        public static readonly ContainerServiceVMSizeTypes StandardD1 = "Standard_D1";

        public static readonly ContainerServiceVMSizeTypes StandardD2 = "Standard_D2";

        public static readonly ContainerServiceVMSizeTypes StandardD3 = "Standard_D3";

        public static readonly ContainerServiceVMSizeTypes StandardD4 = "Standard_D4";

        public static readonly ContainerServiceVMSizeTypes StandardD11 = "Standard_D11";

        public static readonly ContainerServiceVMSizeTypes StandardD12 = "Standard_D12";

        public static readonly ContainerServiceVMSizeTypes StandardD13 = "Standard_D13";

        public static readonly ContainerServiceVMSizeTypes StandardD14 = "Standard_D14";

        public static readonly ContainerServiceVMSizeTypes StandardD1V2 = "Standard_D1_v2";

        public static readonly ContainerServiceVMSizeTypes StandardD2V2 = "Standard_D2_v2";

        public static readonly ContainerServiceVMSizeTypes StandardD3V2 = "Standard_D3_v2";

        public static readonly ContainerServiceVMSizeTypes StandardD4V2 = "Standard_D4_v2";

        public static readonly ContainerServiceVMSizeTypes StandardD5V2 = "Standard_D5_v2";

        public static readonly ContainerServiceVMSizeTypes StandardD11V2 = "Standard_D11_v2";

        public static readonly ContainerServiceVMSizeTypes StandardD12V2 = "Standard_D12_v2";

        public static readonly ContainerServiceVMSizeTypes StandardD13V2 = "Standard_D13_v2";

        public static readonly ContainerServiceVMSizeTypes StandardD14V2 = "Standard_D14_v2";

        public static readonly ContainerServiceVMSizeTypes StandardG1 = "Standard_G1";

        public static readonly ContainerServiceVMSizeTypes StandardG2 = "Standard_G2";

        public static readonly ContainerServiceVMSizeTypes StandardG3 = "Standard_G3";

        public static readonly ContainerServiceVMSizeTypes StandardG4 = "Standard_G4";

        public static readonly ContainerServiceVMSizeTypes StandardG5 = "Standard_G5";

        public static readonly ContainerServiceVMSizeTypes StandardDS1 = "Standard_DS1";

        public static readonly ContainerServiceVMSizeTypes StandardDS2 = "Standard_DS2";

        public static readonly ContainerServiceVMSizeTypes StandardDS3 = "Standard_DS3";

        public static readonly ContainerServiceVMSizeTypes StandardDS4 = "Standard_DS4";

        public static readonly ContainerServiceVMSizeTypes StandardDS11 = "Standard_DS11";

        public static readonly ContainerServiceVMSizeTypes StandardDS12 = "Standard_DS12";

        public static readonly ContainerServiceVMSizeTypes StandardDS13 = "Standard_DS13";

        public static readonly ContainerServiceVMSizeTypes StandardDS14 = "Standard_DS14";

        public static readonly ContainerServiceVMSizeTypes StandardGS1 = "Standard_GS1";

        public static readonly ContainerServiceVMSizeTypes StandardGS2 = "Standard_GS2";

        public static readonly ContainerServiceVMSizeTypes StandardGS3 = "Standard_GS3";

        public static readonly ContainerServiceVMSizeTypes StandardGS4 = "Standard_GS4";

        public static readonly ContainerServiceVMSizeTypes StandardGS5 = "Standard_GS5";


        /// <summary>
        /// Underlying value of enum ContainerServiceVMSizeTypes
        /// </summary>
        private readonly string UnderlyingValue;

        /// <summary>
        /// Returns string representation for ContainerServiceVMSizeTypes
        /// </summary>
        public override string ToString()
        {
            return UnderlyingValue.ToString();
        }

        /// <summary>
        /// Compares enums of type ContainerServiceVMSizeTypes
        /// </summary>
        public bool Equals(ContainerServiceVMSizeTypes e)
        {
            return UnderlyingValue.Equals(e.UnderlyingValue);
        }

        /// <summary>
        /// Implicit operator to convert string to ContainerServiceVMSizeTypes
        /// </summary>
        public static implicit operator ContainerServiceVMSizeTypes(string value)
        {
            return new ContainerServiceVMSizeTypes(value);
        }

        /// <summary>
        /// Implicit operator to convert ContainerServiceVMSizeTypes to string
        /// </summary>
        public static implicit operator string(ContainerServiceVMSizeTypes e)
        {
            return e.UnderlyingValue;
        }

        /// <summary>
        /// Overriding == operator for enum ContainerServiceVMSizeTypes
        /// </summary>
        public static bool operator == (ContainerServiceVMSizeTypes e1, ContainerServiceVMSizeTypes e2)
        {
            return e2.Equals(e1);
        }

        /// <summary>
        /// Overriding != operator for enum ContainerServiceVMSizeTypes
        /// </summary>
        public static bool operator != (ContainerServiceVMSizeTypes e1, ContainerServiceVMSizeTypes e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>
        /// Overrides Equals operator for ContainerServiceVMSizeTypes
        /// </summary>
        public override bool Equals(object obj)
        {
            return obj is ContainerServiceVMSizeTypes && Equals((ContainerServiceVMSizeTypes)obj);
        }

        /// <summary>
        /// Returns for hashCode ContainerServiceVMSizeTypes
        /// </summary>
        public override int GetHashCode()
        {
            return UnderlyingValue.GetHashCode();
        }

    }
}
