// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Compute.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.Compute;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for RecoveryMode.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum RecoveryMode
    {
        [EnumMember(Value = "None")]
        None,
        [EnumMember(Value = "OverProvision")]
        OverProvision,
        [EnumMember(Value = "Reprovision")]
        Reprovision
    }
    internal static class RecoveryModeEnumExtension
    {
        internal static string ToSerializedValue(this RecoveryMode? value)  =>
            value == null ? null : ((RecoveryMode)value).ToSerializedValue();

        internal static string ToSerializedValue(this RecoveryMode value)
        {
            switch( value )
            {
                case RecoveryMode.None:
                    return "None";
                case RecoveryMode.OverProvision:
                    return "OverProvision";
                case RecoveryMode.Reprovision:
                    return "Reprovision";
            }
            return null;
        }

        internal static RecoveryMode? ParseRecoveryMode(this string value)
        {
            switch( value )
            {
                case "None":
                    return RecoveryMode.None;
                case "OverProvision":
                    return RecoveryMode.OverProvision;
                case "Reprovision":
                    return RecoveryMode.Reprovision;
            }
            return null;
        }
    }
}
