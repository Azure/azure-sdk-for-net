// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Get GitHub access token request definition.
    /// </summary>
    public partial class GitHubAccessTokenRequest
    {
        /// <summary>
        /// Initializes a new instance of the GitHubAccessTokenRequest class.
        /// </summary>
        public GitHubAccessTokenRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GitHubAccessTokenRequest class.
        /// </summary>
        /// <param name="gitHubAccessCode">GitHub access code.</param>
        /// <param name="gitHubAccessTokenBaseUrl">GitHub access token base
        /// URL.</param>
        /// <param name="gitHubClientId">GitHub application client ID.</param>
        public GitHubAccessTokenRequest(string gitHubAccessCode, string gitHubAccessTokenBaseUrl, string gitHubClientId = default(string))
        {
            GitHubAccessCode = gitHubAccessCode;
            GitHubClientId = gitHubClientId;
            GitHubAccessTokenBaseUrl = gitHubAccessTokenBaseUrl;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets gitHub access code.
        /// </summary>
        [JsonProperty(PropertyName = "gitHubAccessCode")]
        public string GitHubAccessCode { get; set; }

        /// <summary>
        /// Gets or sets gitHub application client ID.
        /// </summary>
        [JsonProperty(PropertyName = "gitHubClientId")]
        public string GitHubClientId { get; set; }

        /// <summary>
        /// Gets or sets gitHub access token base URL.
        /// </summary>
        [JsonProperty(PropertyName = "gitHubAccessTokenBaseUrl")]
        public string GitHubAccessTokenBaseUrl { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (GitHubAccessCode == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "GitHubAccessCode");
            }
            if (GitHubAccessTokenBaseUrl == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "GitHubAccessTokenBaseUrl");
            }
        }
    }
}
