// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.DataFactory;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A copy activity tabular translator.
    /// </summary>
    public partial class TabularTranslator : CopyTranslator
    {
        /// <summary>
        /// Initializes a new instance of the TabularTranslator class.
        /// </summary>
        public TabularTranslator()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TabularTranslator class.
        /// </summary>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="columnMappings">Column mappings. Type: string (or
        /// Expression with resultType string).</param>
        public TabularTranslator(IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), object columnMappings = default(object))
            : base(additionalProperties)
        {
            ColumnMappings = columnMappings;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets column mappings. Type: string (or Expression with
        /// resultType string).
        /// </summary>
        [JsonProperty(PropertyName = "columnMappings")]
        public object ColumnMappings { get; set; }

    }
}
