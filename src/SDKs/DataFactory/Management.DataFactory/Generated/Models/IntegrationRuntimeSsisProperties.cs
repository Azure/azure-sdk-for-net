// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataFactory.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// SSIS properties for managed integration runtime.
    /// </summary>
    public partial class IntegrationRuntimeSsisProperties
    {
        /// <summary>
        /// Initializes a new instance of the IntegrationRuntimeSsisProperties
        /// class.
        /// </summary>
        public IntegrationRuntimeSsisProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IntegrationRuntimeSsisProperties
        /// class.
        /// </summary>
        /// <param name="catalogInfo">Catalog information for managed dedicated
        /// integration runtime.</param>
        /// <param name="customSetupScriptProperties">Custom setup script
        /// properties for a managed dedicated integration runtime.</param>
        public IntegrationRuntimeSsisProperties(IntegrationRuntimeSsisCatalogInfo catalogInfo = default(IntegrationRuntimeSsisCatalogInfo), IntegrationRuntimeCustomSetupScriptProperties customSetupScriptProperties = default(IntegrationRuntimeCustomSetupScriptProperties))
        {
            CatalogInfo = catalogInfo;
            CustomSetupScriptProperties = customSetupScriptProperties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets catalog information for managed dedicated integration
        /// runtime.
        /// </summary>
        [JsonProperty(PropertyName = "catalogInfo")]
        public IntegrationRuntimeSsisCatalogInfo CatalogInfo { get; set; }

        /// <summary>
        /// Gets or sets custom setup script properties for a managed dedicated
        /// integration runtime.
        /// </summary>
        [JsonProperty(PropertyName = "customSetupScriptProperties")]
        public IntegrationRuntimeCustomSetupScriptProperties CustomSetupScriptProperties { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (CatalogInfo != null)
            {
                CatalogInfo.Validate();
            }
            if (CustomSetupScriptProperties != null)
            {
                CustomSetupScriptProperties.Validate();
            }
        }
    }
}
