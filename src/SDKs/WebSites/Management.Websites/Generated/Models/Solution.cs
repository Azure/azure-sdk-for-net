// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.WebSites.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Class Representing Solution for problems detected.
    /// </summary>
    public partial class Solution
    {
        /// <summary>
        /// Initializes a new instance of the Solution class.
        /// </summary>
        public Solution()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Solution class.
        /// </summary>
        /// <param name="id">Solution Id.</param>
        /// <param name="displayName">Display Name of the solution</param>
        /// <param name="order">Order of the solution.</param>
        /// <param name="description">Description of the solution</param>
        /// <param name="type">Type of Solution. Possible values include:
        /// 'QuickSolution', 'DeepInvestigation', 'BestPractices'</param>
        /// <param name="data">Solution Data.</param>
        /// <param name="metadata">Solution Metadata.</param>
        public Solution(double? id = default(double?), string displayName = default(string), double? order = default(double?), string description = default(string), SolutionType? type = default(SolutionType?), IList<IList<NameValuePair>> data = default(IList<IList<NameValuePair>>), IList<IList<NameValuePair>> metadata = default(IList<IList<NameValuePair>>))
        {
            Id = id;
            DisplayName = displayName;
            Order = order;
            Description = description;
            Type = type;
            Data = data;
            Metadata = metadata;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets solution Id.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public double? Id { get; set; }

        /// <summary>
        /// Gets or sets display Name of the solution
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets order of the solution.
        /// </summary>
        [JsonProperty(PropertyName = "order")]
        public double? Order { get; set; }

        /// <summary>
        /// Gets or sets description of the solution
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets type of Solution. Possible values include:
        /// 'QuickSolution', 'DeepInvestigation', 'BestPractices'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public SolutionType? Type { get; set; }

        /// <summary>
        /// Gets or sets solution Data.
        /// </summary>
        [JsonProperty(PropertyName = "data")]
        public IList<IList<NameValuePair>> Data { get; set; }

        /// <summary>
        /// Gets or sets solution Metadata.
        /// </summary>
        [JsonProperty(PropertyName = "metadata")]
        public IList<IList<NameValuePair>> Metadata { get; set; }

    }
}
