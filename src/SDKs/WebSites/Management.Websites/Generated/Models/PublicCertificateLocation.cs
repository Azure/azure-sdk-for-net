// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.WebSites.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for PublicCertificateLocation.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum PublicCertificateLocation
    {
        [EnumMember(Value = "CurrentUserMy")]
        CurrentUserMy,
        [EnumMember(Value = "LocalMachineMy")]
        LocalMachineMy,
        [EnumMember(Value = "Unknown")]
        Unknown
    }
    internal static class PublicCertificateLocationEnumExtension
    {
        internal static string ToSerializedValue(this PublicCertificateLocation? value)
        {
            return value == null ? null : ((PublicCertificateLocation)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this PublicCertificateLocation value)
        {
            switch( value )
            {
                case PublicCertificateLocation.CurrentUserMy:
                    return "CurrentUserMy";
                case PublicCertificateLocation.LocalMachineMy:
                    return "LocalMachineMy";
                case PublicCertificateLocation.Unknown:
                    return "Unknown";
            }
            return null;
        }

        internal static PublicCertificateLocation? ParsePublicCertificateLocation(this string value)
        {
            switch( value )
            {
                case "CurrentUserMy":
                    return PublicCertificateLocation.CurrentUserMy;
                case "LocalMachineMy":
                    return PublicCertificateLocation.LocalMachineMy;
                case "Unknown":
                    return PublicCertificateLocation.Unknown;
            }
            return null;
        }
    }
}
