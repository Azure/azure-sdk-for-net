// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.WebSites.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for AzureStorageState.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum AzureStorageState
    {
        [EnumMember(Value = "Ok")]
        Ok,
        [EnumMember(Value = "InvalidCredentials")]
        InvalidCredentials,
        [EnumMember(Value = "InvalidShare")]
        InvalidShare
    }
    internal static class AzureStorageStateEnumExtension
    {
        internal static string ToSerializedValue(this AzureStorageState? value)
        {
            return value == null ? null : ((AzureStorageState)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this AzureStorageState value)
        {
            switch( value )
            {
                case AzureStorageState.Ok:
                    return "Ok";
                case AzureStorageState.InvalidCredentials:
                    return "InvalidCredentials";
                case AzureStorageState.InvalidShare:
                    return "InvalidShare";
            }
            return null;
        }

        internal static AzureStorageState? ParseAzureStorageState(this string value)
        {
            switch( value )
            {
                case "Ok":
                    return AzureStorageState.Ok;
                case "InvalidCredentials":
                    return AzureStorageState.InvalidCredentials;
                case "InvalidShare":
                    return AzureStorageState.InvalidShare;
            }
            return null;
        }
    }
}
