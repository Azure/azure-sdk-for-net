// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.WebSites
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for ProviderOperations.
    /// </summary>
    public static partial class ProviderOperationsExtensions
    {
            /// <summary>
            /// Get available application frameworks and their versions
            /// </summary>
            /// <remarks>
            /// Get available application frameworks and their versions
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static object GetAvailableStacks(this IProviderOperations operations)
            {
                return operations.GetAvailableStacksAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get available application frameworks and their versions
            /// </summary>
            /// <remarks>
            /// Get available application frameworks and their versions
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> GetAvailableStacksAsync(this IProviderOperations operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetAvailableStacksWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets all available operations for the Microsoft.Web resource provider. Also
            /// exposes resource metric definitions
            /// </summary>
            /// <remarks>
            /// Gets all available operations for the Microsoft.Web resource provider. Also
            /// exposes resource metric definitions
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IPage<CsmOperationDescription> ListOperations(this IProviderOperations operations)
            {
                return operations.ListOperationsAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets all available operations for the Microsoft.Web resource provider. Also
            /// exposes resource metric definitions
            /// </summary>
            /// <remarks>
            /// Gets all available operations for the Microsoft.Web resource provider. Also
            /// exposes resource metric definitions
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<CsmOperationDescription>> ListOperationsAsync(this IProviderOperations operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListOperationsWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get available application frameworks and their versions
            /// </summary>
            /// <remarks>
            /// Get available application frameworks and their versions
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static object GetAvailableStacksOnPrem(this IProviderOperations operations)
            {
                return operations.GetAvailableStacksOnPremAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get available application frameworks and their versions
            /// </summary>
            /// <remarks>
            /// Get available application frameworks and their versions
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> GetAvailableStacksOnPremAsync(this IProviderOperations operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetAvailableStacksOnPremWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets all available operations for the Microsoft.Web resource provider. Also
            /// exposes resource metric definitions
            /// </summary>
            /// <remarks>
            /// Gets all available operations for the Microsoft.Web resource provider. Also
            /// exposes resource metric definitions
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<CsmOperationDescription> ListOperationsNext(this IProviderOperations operations, string nextPageLink)
            {
                return operations.ListOperationsNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets all available operations for the Microsoft.Web resource provider. Also
            /// exposes resource metric definitions
            /// </summary>
            /// <remarks>
            /// Gets all available operations for the Microsoft.Web resource provider. Also
            /// exposes resource metric definitions
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<CsmOperationDescription>> ListOperationsNextAsync(this IProviderOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListOperationsNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
