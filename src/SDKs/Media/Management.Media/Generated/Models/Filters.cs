// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Describes all the filtering operations, such as de-interlacing,
    /// rotation etc. that are to be applied to the input media before
    /// encoding.
    /// </summary>
    public partial class Filters
    {
        /// <summary>
        /// Initializes a new instance of the Filters class.
        /// </summary>
        public Filters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Filters class.
        /// </summary>
        /// <param name="deinterlace">The de-interlacing settings.</param>
        /// <param name="rotation">The rotation, if any, to be applied to the
        /// input video, before it is encoded. Default is Auto. Possible values
        /// include: 'Auto', 'None', 'Rotate0', 'Rotate90', 'Rotate180',
        /// 'Rotate270'</param>
        /// <param name="crop">The parameters for the rectangular window with
        /// which to crop the input video.</param>
        /// <param name="overlays">The properties of overlays to be applied to
        /// the input video. These could be audio, image or video
        /// overlays.</param>
        public Filters(Deinterlace deinterlace = default(Deinterlace), string rotation = default(string), Rectangle crop = default(Rectangle), IList<Overlay> overlays = default(IList<Overlay>))
        {
            Deinterlace = deinterlace;
            Rotation = rotation;
            Crop = crop;
            Overlays = overlays;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the de-interlacing settings.
        /// </summary>
        [JsonProperty(PropertyName = "deinterlace")]
        public Deinterlace Deinterlace { get; set; }

        /// <summary>
        /// Gets or sets the rotation, if any, to be applied to the input
        /// video, before it is encoded. Default is Auto. Possible values
        /// include: 'Auto', 'None', 'Rotate0', 'Rotate90', 'Rotate180',
        /// 'Rotate270'
        /// </summary>
        [JsonProperty(PropertyName = "rotation")]
        public string Rotation { get; set; }

        /// <summary>
        /// Gets or sets the parameters for the rectangular window with which
        /// to crop the input video.
        /// </summary>
        [JsonProperty(PropertyName = "crop")]
        public Rectangle Crop { get; set; }

        /// <summary>
        /// Gets or sets the properties of overlays to be applied to the input
        /// video. These could be audio, image or video overlays.
        /// </summary>
        [JsonProperty(PropertyName = "overlays")]
        public IList<Overlay> Overlays { get; set; }

    }
}
