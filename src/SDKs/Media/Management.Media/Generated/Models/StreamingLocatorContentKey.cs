// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Class for content key in Streaming Locator
    /// </summary>
    public partial class StreamingLocatorContentKey
    {
        /// <summary>
        /// Initializes a new instance of the StreamingLocatorContentKey class.
        /// </summary>
        public StreamingLocatorContentKey()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the StreamingLocatorContentKey class.
        /// </summary>
        /// <param name="id">ID of Content Key</param>
        /// <param name="type">Encryption type of Content Key. Possible values
        /// include: 'CommonEncryptionCenc', 'CommonEncryptionCbcs',
        /// 'EnvelopeEncryption'</param>
        /// <param name="labelReferenceInStreamingPolicy">Label of Content Key
        /// as specified in the Streaming Policy</param>
        /// <param name="value">Value of Content Key</param>
        /// <param name="policyName">ContentKeyPolicy used by Content
        /// Key</param>
        /// <param name="tracks">Tracks which use this Content Key</param>
        public StreamingLocatorContentKey(System.Guid id, StreamingLocatorContentKeyType type = default(StreamingLocatorContentKeyType), string labelReferenceInStreamingPolicy = default(string), string value = default(string), string policyName = default(string), IList<TrackSelection> tracks = default(IList<TrackSelection>))
        {
            Id = id;
            Type = type;
            LabelReferenceInStreamingPolicy = labelReferenceInStreamingPolicy;
            Value = value;
            PolicyName = policyName;
            Tracks = tracks;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets ID of Content Key
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid Id { get; set; }

        /// <summary>
        /// Gets encryption type of Content Key. Possible values include:
        /// 'CommonEncryptionCenc', 'CommonEncryptionCbcs',
        /// 'EnvelopeEncryption'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public StreamingLocatorContentKeyType Type { get; private set; }

        /// <summary>
        /// Gets or sets label of Content Key as specified in the Streaming
        /// Policy
        /// </summary>
        [JsonProperty(PropertyName = "labelReferenceInStreamingPolicy")]
        public string LabelReferenceInStreamingPolicy { get; set; }

        /// <summary>
        /// Gets or sets value of Content Key
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public string Value { get; set; }

        /// <summary>
        /// Gets contentKeyPolicy used by Content Key
        /// </summary>
        [JsonProperty(PropertyName = "policyName")]
        public string PolicyName { get; private set; }

        /// <summary>
        /// Gets tracks which use this Content Key
        /// </summary>
        [JsonProperty(PropertyName = "tracks")]
        public IList<TrackSelection> Tracks { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
