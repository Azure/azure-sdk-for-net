// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Configures the Explicit Analog Television Output Restriction control
    /// bits. For further details see the PlayReady Compliance Rules.
    /// </summary>
    public partial class ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction class.
        /// </summary>
        public ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction class.
        /// </summary>
        /// <param name="bestEffort">Indicates whether this restriction is
        /// enforced on a Best Effort basis.</param>
        /// <param name="configurationData">Configures the restriction control
        /// bits. Must be between 0 and 3 inclusive.</param>
        public ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction(bool bestEffort, int configurationData)
        {
            BestEffort = bestEffort;
            ConfigurationData = configurationData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets indicates whether this restriction is enforced on a
        /// Best Effort basis.
        /// </summary>
        [JsonProperty(PropertyName = "bestEffort")]
        public bool BestEffort { get; set; }

        /// <summary>
        /// Gets or sets configures the restriction control bits. Must be
        /// between 0 and 3 inclusive.
        /// </summary>
        [JsonProperty(PropertyName = "configurationData")]
        public int ConfigurationData { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
