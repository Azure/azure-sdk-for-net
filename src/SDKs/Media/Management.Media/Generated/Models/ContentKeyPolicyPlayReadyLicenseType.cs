// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for ContentKeyPolicyPlayReadyLicenseType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ContentKeyPolicyPlayReadyLicenseType
    {
        /// <summary>
        /// Represents a ContentKeyPolicyPlayReadyLicenseType that is
        /// unavailable in current API version.
        /// </summary>
        [EnumMember(Value = "Unknown")]
        Unknown,
        /// <summary>
        /// Non persistent license.
        /// </summary>
        [EnumMember(Value = "NonPersistent")]
        NonPersistent,
        /// <summary>
        /// Persistent license. Allows offline playback.
        /// </summary>
        [EnumMember(Value = "Persistent")]
        Persistent
    }
    internal static class ContentKeyPolicyPlayReadyLicenseTypeEnumExtension
    {
        internal static string ToSerializedValue(this ContentKeyPolicyPlayReadyLicenseType? value)
        {
            return value == null ? null : ((ContentKeyPolicyPlayReadyLicenseType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this ContentKeyPolicyPlayReadyLicenseType value)
        {
            switch( value )
            {
                case ContentKeyPolicyPlayReadyLicenseType.Unknown:
                    return "Unknown";
                case ContentKeyPolicyPlayReadyLicenseType.NonPersistent:
                    return "NonPersistent";
                case ContentKeyPolicyPlayReadyLicenseType.Persistent:
                    return "Persistent";
            }
            return null;
        }

        internal static ContentKeyPolicyPlayReadyLicenseType? ParseContentKeyPolicyPlayReadyLicenseType(this string value)
        {
            switch( value )
            {
                case "Unknown":
                    return ContentKeyPolicyPlayReadyLicenseType.Unknown;
                case "NonPersistent":
                    return ContentKeyPolicyPlayReadyLicenseType.NonPersistent;
                case "Persistent":
                    return ContentKeyPolicyPlayReadyLicenseType.Persistent;
            }
            return null;
        }
    }
}
