// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The encoder can be configured to produce video and/or images
    /// (thumbnails) at different resolutions, by specifying a layer for each
    /// desired resolution. A layer represents the properties for the video or
    /// image at a resolution.
    /// </summary>
    public partial class Layer
    {
        /// <summary>
        /// Initializes a new instance of the Layer class.
        /// </summary>
        public Layer()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Layer class.
        /// </summary>
        /// <param name="width">The width of the output video for this layer.
        /// The value can be absolute (in pixels) or relative (in percentage).
        /// For example 50% means the output video has half as many pixels in
        /// width as the input.</param>
        /// <param name="height">The height of the output video for this layer.
        /// The value can be absolute (in pixels) or relative (in percentage).
        /// For example 50% means the output video has half as many pixels in
        /// height as the input.</param>
        /// <param name="label">The alphanumeric label for this layer, which
        /// can be used in multiplexing different video and audio layers, or in
        /// naming the output file.</param>
        public Layer(string width = default(string), string height = default(string), string label = default(string))
        {
            Width = width;
            Height = height;
            Label = label;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the width of the output video for this layer. The
        /// value can be absolute (in pixels) or relative (in percentage). For
        /// example 50% means the output video has half as many pixels in width
        /// as the input.
        /// </summary>
        [JsonProperty(PropertyName = "width")]
        public string Width { get; set; }

        /// <summary>
        /// Gets or sets the height of the output video for this layer. The
        /// value can be absolute (in pixels) or relative (in percentage). For
        /// example 50% means the output video has half as many pixels in
        /// height as the input.
        /// </summary>
        [JsonProperty(PropertyName = "height")]
        public string Height { get; set; }

        /// <summary>
        /// Gets or sets the alphanumeric label for this layer, which can be
        /// used in multiplexing different video and audio layers, or in naming
        /// the output file.
        /// </summary>
        [JsonProperty(PropertyName = "label")]
        public string Label { get; set; }

    }
}
