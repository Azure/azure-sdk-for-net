// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for JobState.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum JobState
    {
        /// <summary>
        /// The job was canceled. This is a final state for the job.
        /// </summary>
        [EnumMember(Value = "Canceled")]
        Canceled,
        /// <summary>
        /// The job is in the process of being canceled. This is a transient
        /// state for the job.
        /// </summary>
        [EnumMember(Value = "Canceling")]
        Canceling,
        /// <summary>
        /// The job has encountered an error. This is a final state for the
        /// job.
        /// </summary>
        [EnumMember(Value = "Error")]
        Error,
        /// <summary>
        /// The job is finished. This is a final state for the job.
        /// </summary>
        [EnumMember(Value = "Finished")]
        Finished,
        /// <summary>
        /// The job is processing. This is a transient state for the job.
        /// </summary>
        [EnumMember(Value = "Processing")]
        Processing,
        /// <summary>
        /// The job is in a queued state, waiting for resources to become
        /// available. This is a transient state.
        /// </summary>
        [EnumMember(Value = "Queued")]
        Queued,
        /// <summary>
        /// The job is being scheduled to run on an available resource. This is
        /// a transient state, between queued and processing states.
        /// </summary>
        [EnumMember(Value = "Scheduled")]
        Scheduled
    }
    internal static class JobStateEnumExtension
    {
        internal static string ToSerializedValue(this JobState? value)
        {
            return value == null ? null : ((JobState)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this JobState value)
        {
            switch( value )
            {
                case JobState.Canceled:
                    return "Canceled";
                case JobState.Canceling:
                    return "Canceling";
                case JobState.Error:
                    return "Error";
                case JobState.Finished:
                    return "Finished";
                case JobState.Processing:
                    return "Processing";
                case JobState.Queued:
                    return "Queued";
                case JobState.Scheduled:
                    return "Scheduled";
            }
            return null;
        }

        internal static JobState? ParseJobState(this string value)
        {
            switch( value )
            {
                case "Canceled":
                    return JobState.Canceled;
                case "Canceling":
                    return JobState.Canceling;
                case "Error":
                    return JobState.Error;
                case "Finished":
                    return JobState.Finished;
                case "Processing":
                    return JobState.Processing;
                case "Queued":
                    return JobState.Queued;
                case "Scheduled":
                    return JobState.Scheduled;
            }
            return null;
        }
    }
}
