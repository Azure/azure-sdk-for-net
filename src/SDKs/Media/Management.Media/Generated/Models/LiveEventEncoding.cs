// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The Live Event encoding.
    /// </summary>
    public partial class LiveEventEncoding
    {
        /// <summary>
        /// Initializes a new instance of the LiveEventEncoding class.
        /// </summary>
        public LiveEventEncoding()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LiveEventEncoding class.
        /// </summary>
        /// <param name="encodingType">The encoding type for Live Event.  This
        /// value is specified at creation time and cannot be updated. Possible
        /// values include: 'None', 'Basic', 'Standard'</param>
        /// <param name="presetName">The encoding preset name.  This value is
        /// specified at creation time and cannot be updated.</param>
        public LiveEventEncoding(LiveEventEncodingType? encodingType = default(LiveEventEncodingType?), string presetName = default(string))
        {
            EncodingType = encodingType;
            PresetName = presetName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the encoding type for Live Event.  This value is
        /// specified at creation time and cannot be updated. Possible values
        /// include: 'None', 'Basic', 'Standard'
        /// </summary>
        [JsonProperty(PropertyName = "encodingType")]
        public LiveEventEncodingType? EncodingType { get; set; }

        /// <summary>
        /// Gets or sets the encoding preset name.  This value is specified at
        /// creation time and cannot be updated.
        /// </summary>
        [JsonProperty(PropertyName = "presetName")]
        public string PresetName { get; set; }

    }
}
