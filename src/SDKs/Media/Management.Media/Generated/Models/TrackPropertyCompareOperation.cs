// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for TrackPropertyCompareOperation.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum TrackPropertyCompareOperation
    {
        /// <summary>
        /// Unknown track property compare operation
        /// </summary>
        [EnumMember(Value = "Unknown")]
        Unknown,
        /// <summary>
        /// Equal operation
        /// </summary>
        [EnumMember(Value = "Equal")]
        Equal
    }
    internal static class TrackPropertyCompareOperationEnumExtension
    {
        internal static string ToSerializedValue(this TrackPropertyCompareOperation? value)
        {
            return value == null ? null : ((TrackPropertyCompareOperation)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this TrackPropertyCompareOperation value)
        {
            switch( value )
            {
                case TrackPropertyCompareOperation.Unknown:
                    return "Unknown";
                case TrackPropertyCompareOperation.Equal:
                    return "Equal";
            }
            return null;
        }

        internal static TrackPropertyCompareOperation? ParseTrackPropertyCompareOperation(this string value)
        {
            switch( value )
            {
                case "Unknown":
                    return TrackPropertyCompareOperation.Unknown;
                case "Equal":
                    return TrackPropertyCompareOperation.Equal;
            }
            return null;
        }
    }
}
