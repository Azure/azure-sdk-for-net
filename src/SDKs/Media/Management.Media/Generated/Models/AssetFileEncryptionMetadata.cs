// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The Asset File Storage encryption metadata.
    /// </summary>
    public partial class AssetFileEncryptionMetadata
    {
        /// <summary>
        /// Initializes a new instance of the AssetFileEncryptionMetadata
        /// class.
        /// </summary>
        public AssetFileEncryptionMetadata()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AssetFileEncryptionMetadata
        /// class.
        /// </summary>
        /// <param name="assetFileId">The Asset File Id.</param>
        /// <param name="initializationVector">The Asset File initialization
        /// vector.</param>
        /// <param name="assetFileName">The Asset File name.</param>
        public AssetFileEncryptionMetadata(System.Guid assetFileId, string initializationVector = default(string), string assetFileName = default(string))
        {
            InitializationVector = initializationVector;
            AssetFileName = assetFileName;
            AssetFileId = assetFileId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the Asset File initialization vector.
        /// </summary>
        [JsonProperty(PropertyName = "initializationVector")]
        public string InitializationVector { get; set; }

        /// <summary>
        /// Gets or sets the Asset File name.
        /// </summary>
        [JsonProperty(PropertyName = "assetFileName")]
        public string AssetFileName { get; set; }

        /// <summary>
        /// Gets or sets the Asset File Id.
        /// </summary>
        [JsonProperty(PropertyName = "assetFileId")]
        public System.Guid AssetFileId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
