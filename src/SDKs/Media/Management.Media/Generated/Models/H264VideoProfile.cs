// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for H264VideoProfile.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum H264VideoProfile
    {
        /// <summary>
        /// Tells the encoder to automatically determine the appropriate H.264
        /// profile.
        /// </summary>
        [EnumMember(Value = "Auto")]
        Auto,
        /// <summary>
        /// Baseline profile
        /// </summary>
        [EnumMember(Value = "Baseline")]
        Baseline,
        /// <summary>
        /// Main profile
        /// </summary>
        [EnumMember(Value = "Main")]
        Main,
        /// <summary>
        /// High profile.
        /// </summary>
        [EnumMember(Value = "High")]
        High,
        /// <summary>
        /// High 4:2:2 profile.
        /// </summary>
        [EnumMember(Value = "High422")]
        High422,
        /// <summary>
        /// High 4:4:4 predictive profile.
        /// </summary>
        [EnumMember(Value = "High444")]
        High444
    }
    internal static class H264VideoProfileEnumExtension
    {
        internal static string ToSerializedValue(this H264VideoProfile? value)
        {
            return value == null ? null : ((H264VideoProfile)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this H264VideoProfile value)
        {
            switch( value )
            {
                case H264VideoProfile.Auto:
                    return "Auto";
                case H264VideoProfile.Baseline:
                    return "Baseline";
                case H264VideoProfile.Main:
                    return "Main";
                case H264VideoProfile.High:
                    return "High";
                case H264VideoProfile.High422:
                    return "High422";
                case H264VideoProfile.High444:
                    return "High444";
            }
            return null;
        }

        internal static H264VideoProfile? ParseH264VideoProfile(this string value)
        {
            switch( value )
            {
                case "Auto":
                    return H264VideoProfile.Auto;
                case "Baseline":
                    return H264VideoProfile.Baseline;
                case "Main":
                    return H264VideoProfile.Main;
                case "High":
                    return H264VideoProfile.High;
                case "High422":
                    return H264VideoProfile.High422;
                case "High444":
                    return H264VideoProfile.High444;
            }
            return null;
        }
    }
}
