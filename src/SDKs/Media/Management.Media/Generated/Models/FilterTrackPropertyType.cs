// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for FilterTrackPropertyType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum FilterTrackPropertyType
    {
        /// <summary>
        /// The unknown track property type.
        /// </summary>
        [EnumMember(Value = "Unknown")]
        Unknown,
        /// <summary>
        /// The type.
        /// </summary>
        [EnumMember(Value = "Type")]
        Type,
        /// <summary>
        /// The name.
        /// </summary>
        [EnumMember(Value = "Name")]
        Name,
        /// <summary>
        /// The language.
        /// </summary>
        [EnumMember(Value = "Language")]
        Language,
        /// <summary>
        /// The fourCC.
        /// </summary>
        [EnumMember(Value = "FourCC")]
        FourCC,
        /// <summary>
        /// The bitrate.
        /// </summary>
        [EnumMember(Value = "Bitrate")]
        Bitrate
    }
    internal static class FilterTrackPropertyTypeEnumExtension
    {
        internal static string ToSerializedValue(this FilterTrackPropertyType? value)
        {
            return value == null ? null : ((FilterTrackPropertyType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this FilterTrackPropertyType value)
        {
            switch( value )
            {
                case FilterTrackPropertyType.Unknown:
                    return "Unknown";
                case FilterTrackPropertyType.Type:
                    return "Type";
                case FilterTrackPropertyType.Name:
                    return "Name";
                case FilterTrackPropertyType.Language:
                    return "Language";
                case FilterTrackPropertyType.FourCC:
                    return "FourCC";
                case FilterTrackPropertyType.Bitrate:
                    return "Bitrate";
            }
            return null;
        }

        internal static FilterTrackPropertyType? ParseFilterTrackPropertyType(this string value)
        {
            switch( value )
            {
                case "Unknown":
                    return FilterTrackPropertyType.Unknown;
                case "Type":
                    return FilterTrackPropertyType.Type;
                case "Name":
                    return FilterTrackPropertyType.Name;
                case "Language":
                    return FilterTrackPropertyType.Language;
                case "FourCC":
                    return FilterTrackPropertyType.FourCC;
                case "Bitrate":
                    return FilterTrackPropertyType.Bitrate;
            }
            return null;
        }
    }
}
