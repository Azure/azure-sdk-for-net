// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The parameters to the list SAS request.
    /// </summary>
    public partial class ListContainerSasInput
    {
        /// <summary>
        /// Initializes a new instance of the ListContainerSasInput class.
        /// </summary>
        public ListContainerSasInput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ListContainerSasInput class.
        /// </summary>
        /// <param name="permissions">The permissions to set on the SAS URL.
        /// Possible values include: 'Read', 'ReadWrite',
        /// 'ReadWriteDelete'</param>
        /// <param name="expiryTime">The SAS URL expiration time.  This must be
        /// less than 24 hours from the current time.</param>
        public ListContainerSasInput(AssetContainerPermission? permissions = default(AssetContainerPermission?), System.DateTime? expiryTime = default(System.DateTime?))
        {
            Permissions = permissions;
            ExpiryTime = expiryTime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the permissions to set on the SAS URL. Possible values
        /// include: 'Read', 'ReadWrite', 'ReadWriteDelete'
        /// </summary>
        [JsonProperty(PropertyName = "permissions")]
        public AssetContainerPermission? Permissions { get; set; }

        /// <summary>
        /// Gets or sets the SAS URL expiration time.  This must be less than
        /// 24 hours from the current time.
        /// </summary>
        [JsonProperty(PropertyName = "expiryTime")]
        public System.DateTime? ExpiryTime { get; set; }

    }
}
