// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// An Asset Filter.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class AssetFilter : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the AssetFilter class.
        /// </summary>
        public AssetFilter()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AssetFilter class.
        /// </summary>
        /// <param name="id">Fully qualified resource ID for the
        /// resource.</param>
        /// <param name="name">The name of the resource.</param>
        /// <param name="type">The type of the resource.</param>
        /// <param name="presentationTimeRange">The presentation time
        /// range.</param>
        /// <param name="firstQuality">The first quality.</param>
        /// <param name="tracks">The tracks selection conditions.</param>
        public AssetFilter(string id = default(string), string name = default(string), string type = default(string), PresentationTimeRange presentationTimeRange = default(PresentationTimeRange), FirstQuality firstQuality = default(FirstQuality), IList<FilterTrackSelection> tracks = default(IList<FilterTrackSelection>))
            : base(id, name, type)
        {
            PresentationTimeRange = presentationTimeRange;
            FirstQuality = firstQuality;
            Tracks = tracks;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the presentation time range.
        /// </summary>
        [JsonProperty(PropertyName = "properties.presentationTimeRange")]
        public PresentationTimeRange PresentationTimeRange { get; set; }

        /// <summary>
        /// Gets or sets the first quality.
        /// </summary>
        [JsonProperty(PropertyName = "properties.firstQuality")]
        public FirstQuality FirstQuality { get; set; }

        /// <summary>
        /// Gets or sets the tracks selection conditions.
        /// </summary>
        [JsonProperty(PropertyName = "properties.tracks")]
        public IList<FilterTrackSelection> Tracks { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (FirstQuality != null)
            {
                FirstQuality.Validate();
            }
            if (Tracks != null)
            {
                foreach (var element in Tracks)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
