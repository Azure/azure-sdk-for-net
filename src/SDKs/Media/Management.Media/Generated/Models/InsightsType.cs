// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for InsightsType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum InsightsType
    {
        /// <summary>
        /// Generate audio only insights. Ignore video even if present. Fails
        /// if no audio is present.
        /// </summary>
        [EnumMember(Value = "AudioInsightsOnly")]
        AudioInsightsOnly,
        /// <summary>
        /// Generate video only insights. Ignore audio if present. Fails if no
        /// video is present.
        /// </summary>
        [EnumMember(Value = "VideoInsightsOnly")]
        VideoInsightsOnly,
        /// <summary>
        /// Generate both audio and video insights. Fails if either audio or
        /// video Insights fail.
        /// </summary>
        [EnumMember(Value = "AllInsights")]
        AllInsights
    }
    internal static class InsightsTypeEnumExtension
    {
        internal static string ToSerializedValue(this InsightsType? value)
        {
            return value == null ? null : ((InsightsType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this InsightsType value)
        {
            switch( value )
            {
                case InsightsType.AudioInsightsOnly:
                    return "AudioInsightsOnly";
                case InsightsType.VideoInsightsOnly:
                    return "VideoInsightsOnly";
                case InsightsType.AllInsights:
                    return "AllInsights";
            }
            return null;
        }

        internal static InsightsType? ParseInsightsType(this string value)
        {
            switch( value )
            {
                case "AudioInsightsOnly":
                    return InsightsType.AudioInsightsOnly;
                case "VideoInsightsOnly":
                    return InsightsType.VideoInsightsOnly;
                case "AllInsights":
                    return InsightsType.AllInsights;
            }
            return null;
        }
    }
}
