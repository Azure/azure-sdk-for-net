// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for StretchMode.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum StretchMode
    {
        /// <summary>
        /// Strictly respect the output resolution without considering the
        /// pixel aspect ratio or display aspect ratio of the input video.
        /// </summary>
        [EnumMember(Value = "None")]
        None,
        /// <summary>
        /// Override the output resolution, and change it to match the display
        /// aspect ratio of the input, without padding. For example, if the
        /// input is 1920x1080 and the encoding preset asks for 1280x1280, then
        /// the value in the preset is overridden, and the output will be at
        /// 1280x720, which maintains the input aspect ratio of 16:9.
        /// </summary>
        [EnumMember(Value = "AutoSize")]
        AutoSize,
        /// <summary>
        /// Pad the output (with either letterbox or pillar box) to honor the
        /// output resolution, while ensuring that the active video region in
        /// the output has the same aspect ratio as the input. For example, if
        /// the input is 1920x1080 and the encoding preset asks for 1280x1280,
        /// then the output will be at 1280x1280, which contains an inner
        /// rectangle of 1280x720 at aspect ratio of 16:9, and pillar box
        /// regions 280 pixels wide at the left and right.
        /// </summary>
        [EnumMember(Value = "AutoFit")]
        AutoFit
    }
    internal static class StretchModeEnumExtension
    {
        internal static string ToSerializedValue(this StretchMode? value)
        {
            return value == null ? null : ((StretchMode)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this StretchMode value)
        {
            switch( value )
            {
                case StretchMode.None:
                    return "None";
                case StretchMode.AutoSize:
                    return "AutoSize";
                case StretchMode.AutoFit:
                    return "AutoFit";
            }
            return null;
        }

        internal static StretchMode? ParseStretchMode(this string value)
        {
            switch( value )
            {
                case "None":
                    return StretchMode.None;
                case "AutoSize":
                    return StretchMode.AutoSize;
                case "AutoFit":
                    return StretchMode.AutoFit;
            }
            return null;
        }
    }
}
