// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The Audio Analyzer preset applies a pre-defined set of AI-based
    /// analysis operations, including speech transcription. Currently, the
    /// preset supports processing of content with a single audio track.
    /// </summary>
    [Newtonsoft.Json.JsonObject("#Microsoft.Media.AudioAnalyzerPreset")]
    public partial class AudioAnalyzerPreset : Preset
    {
        /// <summary>
        /// Initializes a new instance of the AudioAnalyzerPreset class.
        /// </summary>
        public AudioAnalyzerPreset()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AudioAnalyzerPreset class.
        /// </summary>
        /// <param name="audioLanguage">The language for the audio payload in
        /// the input using the BCP-47 format of 'language tag-region' (e.g:
        /// 'en-US'). The list of supported languages are, 'en-US', 'en-GB',
        /// 'es-ES', 'es-MX', 'fr-FR', 'it-IT', 'ja-JP', 'pt-BR', 'zh-CN',
        /// 'de-DE', 'ar-EG', 'ru-RU', 'hi-IN'. If not specified, automatic
        /// language detection would be employed. This feature currently
        /// supports English, Chinese, French, German, Italian, Japanese,
        /// Spanish, Russian, and Portuguese. The automatic detection works
        /// best with audio recordings with clearly discernable speech. If
        /// automatic detection fails to find the language, transcription would
        /// fallback to English.</param>
        public AudioAnalyzerPreset(string audioLanguage = default(string))
        {
            AudioLanguage = audioLanguage;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the language for the audio payload in the input using
        /// the BCP-47 format of 'language tag-region' (e.g: 'en-US'). The list
        /// of supported languages are, 'en-US', 'en-GB', 'es-ES', 'es-MX',
        /// 'fr-FR', 'it-IT', 'ja-JP', 'pt-BR', 'zh-CN', 'de-DE', 'ar-EG',
        /// 'ru-RU', 'hi-IN'. If not specified, automatic language detection
        /// would be employed. This feature currently supports English,
        /// Chinese, French, German, Italian, Japanese, Spanish, Russian, and
        /// Portuguese. The automatic detection works best with audio
        /// recordings with clearly discernable speech. If automatic detection
        /// fails to find the language, transcription would fallback to
        /// English.
        /// </summary>
        [JsonProperty(PropertyName = "audioLanguage")]
        public string AudioLanguage { get; set; }

    }
}
