// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Represents HTTPS job input.
    /// </summary>
    [Newtonsoft.Json.JsonObject("#Microsoft.Media.JobInputHttp")]
    public partial class JobInputHttp : JobInputClip
    {
        /// <summary>
        /// Initializes a new instance of the JobInputHttp class.
        /// </summary>
        public JobInputHttp()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JobInputHttp class.
        /// </summary>
        /// <param name="files">List of files. Required for
        /// JobInputHttp.</param>
        /// <param name="label">A label that is assigned to a JobInputClip,
        /// that is used to satisfy a reference used in the Transform. For
        /// example, a Transform can be authored so as to take an image file
        /// with the label 'xyz' and apply it as an overlay onto the input
        /// video before it is encoded. When submitting a Job, exactly one of
        /// the JobInputs should be the image file, and it should have the
        /// label 'xyz'.</param>
        /// <param name="baseUri">Base URI for HTTPS job input. It will be
        /// concatenated with provided file names.   If no base uri is given,
        /// then the provided file list is assumed to be fully qualified
        /// uris.</param>
        public JobInputHttp(IList<string> files = default(IList<string>), string label = default(string), string baseUri = default(string))
            : base(files, label)
        {
            BaseUri = baseUri;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets base URI for HTTPS job input. It will be concatenated
        /// with provided file names.   If no base uri is given, then the
        /// provided file list is assumed to be fully qualified uris.
        /// </summary>
        [JsonProperty(PropertyName = "baseUri")]
        public string BaseUri { get; set; }

    }
}
