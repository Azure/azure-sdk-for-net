// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for OnErrorType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum OnErrorType
    {
        /// <summary>
        /// Tells the service that if this TransformOutput fails, then any
        /// other incomplete TransformOutputs can be stopped.
        /// </summary>
        [EnumMember(Value = "StopProcessingJob")]
        StopProcessingJob,
        /// <summary>
        /// Tells the service that if this TransformOutput fails, then allow
        /// any other TransformOutput to continue.
        /// </summary>
        [EnumMember(Value = "ContinueJob")]
        ContinueJob
    }
    internal static class OnErrorTypeEnumExtension
    {
        internal static string ToSerializedValue(this OnErrorType? value)
        {
            return value == null ? null : ((OnErrorType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this OnErrorType value)
        {
            switch( value )
            {
                case OnErrorType.StopProcessingJob:
                    return "StopProcessingJob";
                case OnErrorType.ContinueJob:
                    return "ContinueJob";
            }
            return null;
        }

        internal static OnErrorType? ParseOnErrorType(this string value)
        {
            switch( value )
            {
                case "StopProcessingJob":
                    return OnErrorType.StopProcessingJob;
                case "ContinueJob":
                    return OnErrorType.ContinueJob;
            }
            return null;
        }
    }
}
