// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The properties of the Content Key Policy.
    /// </summary>
    public partial class ContentKeyPolicyProperties
    {
        /// <summary>
        /// Initializes a new instance of the ContentKeyPolicyProperties class.
        /// </summary>
        public ContentKeyPolicyProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ContentKeyPolicyProperties class.
        /// </summary>
        /// <param name="options">The Key Policy options.</param>
        /// <param name="policyId">The legacy Policy ID.</param>
        /// <param name="created">The creation date of the Policy</param>
        /// <param name="lastModified">The last modified date of the
        /// Policy</param>
        /// <param name="description">A description for the Policy.</param>
        public ContentKeyPolicyProperties(IList<ContentKeyPolicyOption> options, System.Guid policyId = default(System.Guid), System.DateTime created = default(System.DateTime), System.DateTime lastModified = default(System.DateTime), string description = default(string))
        {
            PolicyId = policyId;
            Created = created;
            LastModified = lastModified;
            Description = description;
            Options = options;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the legacy Policy ID.
        /// </summary>
        [JsonProperty(PropertyName = "policyId")]
        public System.Guid PolicyId { get; private set; }

        /// <summary>
        /// Gets the creation date of the Policy
        /// </summary>
        [JsonProperty(PropertyName = "created")]
        public System.DateTime Created { get; private set; }

        /// <summary>
        /// Gets the last modified date of the Policy
        /// </summary>
        [JsonProperty(PropertyName = "lastModified")]
        public System.DateTime LastModified { get; private set; }

        /// <summary>
        /// Gets or sets a description for the Policy.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the Key Policy options.
        /// </summary>
        [JsonProperty(PropertyName = "options")]
        public IList<ContentKeyPolicyOption> Options { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Options == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Options");
            }
            if (Options != null)
            {
                foreach (var element in Options)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
