// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// A video analyzer preset that extracts insights (rich metadata) from
    /// both audio and video, and outputs a JSON format file.
    /// </summary>
    [Newtonsoft.Json.JsonObject("#Microsoft.Media.VideoAnalyzerPreset")]
    public partial class VideoAnalyzerPreset : AudioAnalyzerPreset
    {
        /// <summary>
        /// Initializes a new instance of the VideoAnalyzerPreset class.
        /// </summary>
        public VideoAnalyzerPreset()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VideoAnalyzerPreset class.
        /// </summary>
        /// <param name="audioLanguage">The language for the audio payload in
        /// the input using the BCP-47 format of 'language tag-region' (e.g:
        /// 'en-US'). The list of supported languages are, 'en-US', 'en-GB',
        /// 'es-ES', 'es-MX', 'fr-FR', 'it-IT', 'ja-JP', 'pt-BR',
        /// 'zh-CN'.</param>
        /// <param name="audioInsightsOnly">Whether to only extract audio
        /// insights when processing a video file.</param>
        public VideoAnalyzerPreset(string audioLanguage = default(string), bool? audioInsightsOnly = default(bool?))
            : base(audioLanguage)
        {
            AudioInsightsOnly = audioInsightsOnly;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets whether to only extract audio insights when processing
        /// a video file.
        /// </summary>
        [JsonProperty(PropertyName = "audioInsightsOnly")]
        public bool? AudioInsightsOnly { get; set; }

    }
}
