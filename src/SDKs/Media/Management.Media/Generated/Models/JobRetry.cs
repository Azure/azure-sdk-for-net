// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for JobRetry.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum JobRetry
    {
        /// <summary>
        /// Issue needs to be investigated and then the job resubmitted with
        /// corrections or retried once the underlying issue has been
        /// corrected.
        /// </summary>
        [EnumMember(Value = "DoNotRetry")]
        DoNotRetry,
        /// <summary>
        /// Issue may be resolved after waiting for a period of time and
        /// resubmitting the same Job.
        /// </summary>
        [EnumMember(Value = "MayRetry")]
        MayRetry
    }
    internal static class JobRetryEnumExtension
    {
        internal static string ToSerializedValue(this JobRetry? value)
        {
            return value == null ? null : ((JobRetry)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this JobRetry value)
        {
            switch( value )
            {
                case JobRetry.DoNotRetry:
                    return "DoNotRetry";
                case JobRetry.MayRetry:
                    return "MayRetry";
            }
            return null;
        }

        internal static JobRetry? ParseJobRetry(this string value)
        {
            switch( value )
            {
                case "DoNotRetry":
                    return JobRetry.DoNotRetry;
                case "MayRetry":
                    return JobRetry.MayRetry;
            }
            return null;
        }
    }
}
