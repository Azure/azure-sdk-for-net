// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The presentation time range, this is asset related and not recommended
    /// for Account Filter.
    /// </summary>
    public partial class PresentationTimeRange
    {
        /// <summary>
        /// Initializes a new instance of the PresentationTimeRange class.
        /// </summary>
        public PresentationTimeRange()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PresentationTimeRange class.
        /// </summary>
        /// <param name="startTimestamp">The absolute start time
        /// boundary.</param>
        /// <param name="endTimestamp">The absolute end time boundary.</param>
        /// <param name="presentationWindowDuration">The relative to end
        /// sliding window.</param>
        /// <param name="liveBackoffDuration">The relative to end right
        /// edge.</param>
        /// <param name="timescale">The time scale of time stamps.</param>
        /// <param name="forceEndTimestamp">The indicator of forcing exsiting
        /// of end time stamp.</param>
        public PresentationTimeRange(long? startTimestamp = default(long?), long? endTimestamp = default(long?), long? presentationWindowDuration = default(long?), long? liveBackoffDuration = default(long?), long? timescale = default(long?), bool? forceEndTimestamp = default(bool?))
        {
            StartTimestamp = startTimestamp;
            EndTimestamp = endTimestamp;
            PresentationWindowDuration = presentationWindowDuration;
            LiveBackoffDuration = liveBackoffDuration;
            Timescale = timescale;
            ForceEndTimestamp = forceEndTimestamp;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the absolute start time boundary.
        /// </summary>
        [JsonProperty(PropertyName = "startTimestamp")]
        public long? StartTimestamp { get; set; }

        /// <summary>
        /// Gets or sets the absolute end time boundary.
        /// </summary>
        [JsonProperty(PropertyName = "endTimestamp")]
        public long? EndTimestamp { get; set; }

        /// <summary>
        /// Gets or sets the relative to end sliding window.
        /// </summary>
        [JsonProperty(PropertyName = "presentationWindowDuration")]
        public long? PresentationWindowDuration { get; set; }

        /// <summary>
        /// Gets or sets the relative to end right edge.
        /// </summary>
        [JsonProperty(PropertyName = "liveBackoffDuration")]
        public long? LiveBackoffDuration { get; set; }

        /// <summary>
        /// Gets or sets the time scale of time stamps.
        /// </summary>
        [JsonProperty(PropertyName = "timescale")]
        public long? Timescale { get; set; }

        /// <summary>
        /// Gets or sets the indicator of forcing exsiting of end time stamp.
        /// </summary>
        [JsonProperty(PropertyName = "forceEndTimestamp")]
        public bool? ForceEndTimestamp { get; set; }

    }
}
