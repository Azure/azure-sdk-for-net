// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Media.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Class of paths for streaming
    /// </summary>
    public partial class StreamingPath
    {
        /// <summary>
        /// Initializes a new instance of the StreamingPath class.
        /// </summary>
        public StreamingPath()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the StreamingPath class.
        /// </summary>
        /// <param name="streamingProtocol">Streaming protocol. Possible values
        /// include: 'Hls', 'Dash', 'SmoothStreaming', 'Download'</param>
        /// <param name="encryptionScheme">Encryption scheme. Possible values
        /// include: 'NoEncryption', 'EnvelopeEncryption',
        /// 'CommonEncryptionCenc', 'CommonEncryptionCbcs'</param>
        /// <param name="paths">Streaming paths for each protocol and
        /// encryptionScheme pair</param>
        public StreamingPath(StreamingPolicyStreamingProtocol streamingProtocol, EncryptionScheme encryptionScheme, IList<string> paths = default(IList<string>))
        {
            StreamingProtocol = streamingProtocol;
            EncryptionScheme = encryptionScheme;
            Paths = paths;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets streaming protocol. Possible values include: 'Hls',
        /// 'Dash', 'SmoothStreaming', 'Download'
        /// </summary>
        [JsonProperty(PropertyName = "streamingProtocol")]
        public StreamingPolicyStreamingProtocol StreamingProtocol { get; set; }

        /// <summary>
        /// Gets or sets encryption scheme. Possible values include:
        /// 'NoEncryption', 'EnvelopeEncryption', 'CommonEncryptionCenc',
        /// 'CommonEncryptionCbcs'
        /// </summary>
        [JsonProperty(PropertyName = "encryptionScheme")]
        public EncryptionScheme EncryptionScheme { get; set; }

        /// <summary>
        /// Gets or sets streaming paths for each protocol and encryptionScheme
        /// pair
        /// </summary>
        [JsonProperty(PropertyName = "paths")]
        public IList<string> Paths { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
