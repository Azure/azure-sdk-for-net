// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.IotHub.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// The IP filter rules for the IoT hub.
    /// </summary>
    public partial class IpFilterRule
    {
        /// <summary>
        /// Initializes a new instance of the IpFilterRule class.
        /// </summary>
        public IpFilterRule() { }

        /// <summary>
        /// Initializes a new instance of the IpFilterRule class.
        /// </summary>
        /// <param name="filterName">The name of the IP filter rule.</param>
        /// <param name="action">The desired action for requests captured by this rule. Possible values include: 'Accept', 'Reject'</param>
        /// <param name="ipMask">A string that contains the IP address range in CIDR notation for the rule.</param>
        public IpFilterRule(string filterName, IpFilterActionType action, string ipMask)
        {
            FilterName = filterName;
            Action = action;
            IpMask = ipMask;
        }

        /// <summary>
        /// Gets or sets the name of the IP filter rule.
        /// </summary>
        [JsonProperty(PropertyName = "filterName")]
        public string FilterName { get; set; }

        /// <summary>
        /// Gets or sets the desired action for requests captured by this
        /// rule. Possible values include: 'Accept', 'Reject'
        /// </summary>
        [JsonProperty(PropertyName = "action")]
        public IpFilterActionType Action { get; set; }

        /// <summary>
        /// Gets or sets a string that contains the IP address range in CIDR
        /// notation for the rule.
        /// </summary>
        [JsonProperty(PropertyName = "ipMask")]
        public string IpMask { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (FilterName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FilterName");
            }
            if (IpMask == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "IpMask");
            }
        }
    }
}
