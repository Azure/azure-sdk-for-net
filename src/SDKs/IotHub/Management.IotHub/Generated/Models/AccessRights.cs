// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.IotHub.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for AccessRights.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum AccessRights
    {
        [EnumMember(Value = "RegistryRead")]
        RegistryRead,
        [EnumMember(Value = "RegistryWrite")]
        RegistryWrite,
        [EnumMember(Value = "ServiceConnect")]
        ServiceConnect,
        [EnumMember(Value = "DeviceConnect")]
        DeviceConnect,
        [EnumMember(Value = "RegistryRead, RegistryWrite")]
        RegistryReadRegistryWrite,
        [EnumMember(Value = "RegistryRead, ServiceConnect")]
        RegistryReadServiceConnect,
        [EnumMember(Value = "RegistryRead, DeviceConnect")]
        RegistryReadDeviceConnect,
        [EnumMember(Value = "RegistryWrite, ServiceConnect")]
        RegistryWriteServiceConnect,
        [EnumMember(Value = "RegistryWrite, DeviceConnect")]
        RegistryWriteDeviceConnect,
        [EnumMember(Value = "ServiceConnect, DeviceConnect")]
        ServiceConnectDeviceConnect,
        [EnumMember(Value = "RegistryRead, RegistryWrite, ServiceConnect")]
        RegistryReadRegistryWriteServiceConnect,
        [EnumMember(Value = "RegistryRead, RegistryWrite, DeviceConnect")]
        RegistryReadRegistryWriteDeviceConnect,
        [EnumMember(Value = "RegistryRead, ServiceConnect, DeviceConnect")]
        RegistryReadServiceConnectDeviceConnect,
        [EnumMember(Value = "RegistryWrite, ServiceConnect, DeviceConnect")]
        RegistryWriteServiceConnectDeviceConnect,
        [EnumMember(Value = "RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect")]
        RegistryReadRegistryWriteServiceConnectDeviceConnect
    }
    internal static class AccessRightsEnumExtension
    {
        internal static string ToSerializedValue(this AccessRights? value)
        {
            return value == null ? null : ((AccessRights)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this AccessRights value)
        {
            switch( value )
            {
                case AccessRights.RegistryRead:
                    return "RegistryRead";
                case AccessRights.RegistryWrite:
                    return "RegistryWrite";
                case AccessRights.ServiceConnect:
                    return "ServiceConnect";
                case AccessRights.DeviceConnect:
                    return "DeviceConnect";
                case AccessRights.RegistryReadRegistryWrite:
                    return "RegistryRead, RegistryWrite";
                case AccessRights.RegistryReadServiceConnect:
                    return "RegistryRead, ServiceConnect";
                case AccessRights.RegistryReadDeviceConnect:
                    return "RegistryRead, DeviceConnect";
                case AccessRights.RegistryWriteServiceConnect:
                    return "RegistryWrite, ServiceConnect";
                case AccessRights.RegistryWriteDeviceConnect:
                    return "RegistryWrite, DeviceConnect";
                case AccessRights.ServiceConnectDeviceConnect:
                    return "ServiceConnect, DeviceConnect";
                case AccessRights.RegistryReadRegistryWriteServiceConnect:
                    return "RegistryRead, RegistryWrite, ServiceConnect";
                case AccessRights.RegistryReadRegistryWriteDeviceConnect:
                    return "RegistryRead, RegistryWrite, DeviceConnect";
                case AccessRights.RegistryReadServiceConnectDeviceConnect:
                    return "RegistryRead, ServiceConnect, DeviceConnect";
                case AccessRights.RegistryWriteServiceConnectDeviceConnect:
                    return "RegistryWrite, ServiceConnect, DeviceConnect";
                case AccessRights.RegistryReadRegistryWriteServiceConnectDeviceConnect:
                    return "RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect";
            }
            return null;
        }

        internal static AccessRights? ParseAccessRights(this string value)
        {
            switch( value )
            {
                case "RegistryRead":
                    return AccessRights.RegistryRead;
                case "RegistryWrite":
                    return AccessRights.RegistryWrite;
                case "ServiceConnect":
                    return AccessRights.ServiceConnect;
                case "DeviceConnect":
                    return AccessRights.DeviceConnect;
                case "RegistryRead, RegistryWrite":
                    return AccessRights.RegistryReadRegistryWrite;
                case "RegistryRead, ServiceConnect":
                    return AccessRights.RegistryReadServiceConnect;
                case "RegistryRead, DeviceConnect":
                    return AccessRights.RegistryReadDeviceConnect;
                case "RegistryWrite, ServiceConnect":
                    return AccessRights.RegistryWriteServiceConnect;
                case "RegistryWrite, DeviceConnect":
                    return AccessRights.RegistryWriteDeviceConnect;
                case "ServiceConnect, DeviceConnect":
                    return AccessRights.ServiceConnectDeviceConnect;
                case "RegistryRead, RegistryWrite, ServiceConnect":
                    return AccessRights.RegistryReadRegistryWriteServiceConnect;
                case "RegistryRead, RegistryWrite, DeviceConnect":
                    return AccessRights.RegistryReadRegistryWriteDeviceConnect;
                case "RegistryRead, ServiceConnect, DeviceConnect":
                    return AccessRights.RegistryReadServiceConnectDeviceConnect;
                case "RegistryWrite, ServiceConnect, DeviceConnect":
                    return AccessRights.RegistryWriteServiceConnectDeviceConnect;
                case "RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect":
                    return AccessRights.RegistryReadRegistryWriteServiceConnectDeviceConnect;
            }
            return null;
        }
    }
}
