// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.OperationalInsights.Models
{
    using System.Linq;

    /// <summary>
    /// Value object for saved search results.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class SavedSearch
    {
        /// <summary>
        /// Initializes a new instance of the SavedSearch class.
        /// </summary>
        public SavedSearch() { }

        /// <summary>
        /// Initializes a new instance of the SavedSearch class.
        /// </summary>
        /// <param name="category">The category of the saved search. This helps
        /// the user to find a saved search faster. </param>
        /// <param name="displayName">Saved search display name.</param>
        /// <param name="query">The query expression for the saved search.
        /// Please see
        /// https://docs.microsoft.com/en-us/azure/log-analytics/log-analytics-search-reference
        /// for reference.</param>
        /// <param name="version">The version number of the query lanuage. Only
        /// verion 1 is allowed here.</param>
        /// <param name="id">The id of the saved search.</param>
        /// <param name="etag">The etag of the saved search.</param>
        /// <param name="tags">The tags attached to the saved search.</param>
        public SavedSearch(string category, string displayName, string query, long version, string id = default(string), string etag = default(string), System.Collections.Generic.IList<Tag> tags = default(System.Collections.Generic.IList<Tag>))
        {
            Id = id;
            Etag = etag;
            Category = category;
            DisplayName = displayName;
            Query = query;
            Version = version;
            Tags = tags;
        }

        /// <summary>
        /// Gets the id of the saved search.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets or sets the etag of the saved search.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "etag")]
        public string Etag { get; set; }

        /// <summary>
        /// Gets or sets the category of the saved search. This helps the user
        /// to find a saved search faster.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.Category")]
        public string Category { get; set; }

        /// <summary>
        /// Gets or sets saved search display name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.DisplayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets the query expression for the saved search. Please see
        /// https://docs.microsoft.com/en-us/azure/log-analytics/log-analytics-search-reference
        /// for reference.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.Query")]
        public string Query { get; set; }

        /// <summary>
        /// Gets or sets the version number of the query lanuage. Only verion 1
        /// is allowed here.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.Version")]
        public long Version { get; set; }

        /// <summary>
        /// Gets or sets the tags attached to the saved search.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.Tags")]
        public System.Collections.Generic.IList<Tag> Tags { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Category == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Category");
            }
            if (DisplayName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "DisplayName");
            }
            if (Query == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Query");
            }
            if (this.Version > 1)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMaximum, "Version", 1);
            }
            if (this.Version < 1)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMinimum, "Version", 1);
            }
            if (this.Tags != null)
            {
                foreach (var element in this.Tags)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
