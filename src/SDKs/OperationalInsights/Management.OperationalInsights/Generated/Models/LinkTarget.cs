// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.OperationalInsights.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.OperationalInsights;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Metadata for a workspace that isn't linked to an Azure subscription.
    /// </summary>
    public partial class LinkTarget
    {
        /// <summary>
        /// Initializes a new instance of the LinkTarget class.
        /// </summary>
        public LinkTarget()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LinkTarget class.
        /// </summary>
        /// <param name="customerId">The GUID that uniquely identifies the
        /// workspace. </param>
        /// <param name="displayName">The display name of the
        /// workspace.</param>
        /// <param name="workspaceName">The DNS valid workspace name.</param>
        /// <param name="location">The location of the workspace.</param>
        public LinkTarget(string customerId = default(string), string displayName = default(string), string workspaceName = default(string), string location = default(string))
        {
            CustomerId = customerId;
            DisplayName = displayName;
            WorkspaceName = workspaceName;
            Location = location;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the GUID that uniquely identifies the workspace.
        /// </summary>
        [JsonProperty(PropertyName = "customerId")]
        public string CustomerId { get; set; }

        /// <summary>
        /// Gets or sets the display name of the workspace.
        /// </summary>
        [JsonProperty(PropertyName = "accountName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets the DNS valid workspace name.
        /// </summary>
        [JsonProperty(PropertyName = "workspaceName")]
        public string WorkspaceName { get; set; }

        /// <summary>
        /// Gets or sets the location of the workspace.
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public string Location { get; set; }

    }
}
