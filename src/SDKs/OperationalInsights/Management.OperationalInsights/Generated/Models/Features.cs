// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.OperationalInsights.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.OperationalInsights;
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The features of the workspace.
    /// </summary>
    public partial class Features
    {
        /// <summary>
        /// Initializes a new instance of the Features class.
        /// </summary>
        public Features()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Features class.
        /// </summary>
        /// <param name="legacy">The legacy status of the workspace. Possible
        /// values include: 'None', 'GrandfatheredNonSuite',
        /// 'GrandfatheredSuite'</param>
        /// <param name="searchVersion">The search version of the workspace.
        /// Possible values include: 'OQL', 'KQL'</param>
        /// <param name="searchVersionUpgradeTime">The search version upgrade
        /// time of the workspace.</param>
        public Features(string legacy, string searchVersion, System.DateTime? searchVersionUpgradeTime = default(System.DateTime?))
        {
            Legacy = legacy;
            SearchVersion = searchVersion;
            SearchVersionUpgradeTime = searchVersionUpgradeTime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the legacy status of the workspace. Possible values
        /// include: 'None', 'GrandfatheredNonSuite', 'GrandfatheredSuite'
        /// </summary>
        [JsonProperty(PropertyName = "legacy")]
        public string Legacy { get; set; }

        /// <summary>
        /// Gets or sets the search version of the workspace. Possible values
        /// include: 'OQL', 'KQL'
        /// </summary>
        [JsonProperty(PropertyName = "searchVersion")]
        public string SearchVersion { get; set; }

        /// <summary>
        /// Gets or sets the search version upgrade time of the workspace.
        /// </summary>
        [JsonProperty(PropertyName = "searchVersionUpgradeTime")]
        public System.DateTime? SearchVersionUpgradeTime { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Legacy == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Legacy");
            }
            if (SearchVersion == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SearchVersion");
            }
        }
    }
}
