// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.OperationalInsights.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.OperationalInsights;
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Parameters specifying the search query and range.
    /// </summary>
    public partial class SearchParameters
    {
        /// <summary>
        /// Initializes a new instance of the SearchParameters class.
        /// </summary>
        public SearchParameters()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SearchParameters class.
        /// </summary>
        /// <param name="query">The query to search.</param>
        /// <param name="top">The number to get from the top.</param>
        /// <param name="highlight">The highlight that looks for all occurences
        /// of a string.</param>
        /// <param name="start">The start date filter, so the only query
        /// results returned are after this date.</param>
        /// <param name="end">The end date filter, so the only query results
        /// returned are before this date.</param>
        public SearchParameters(string query, long? top = default(long?), SearchHighlight highlight = default(SearchHighlight), System.DateTime? start = default(System.DateTime?), System.DateTime? end = default(System.DateTime?))
        {
            Top = top;
            Highlight = highlight;
            Query = query;
            Start = start;
            End = end;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the number to get from the top.
        /// </summary>
        [JsonProperty(PropertyName = "top")]
        public long? Top { get; set; }

        /// <summary>
        /// Gets or sets the highlight that looks for all occurences of a
        /// string.
        /// </summary>
        [JsonProperty(PropertyName = "highlight")]
        public SearchHighlight Highlight { get; set; }

        /// <summary>
        /// Gets or sets the query to search.
        /// </summary>
        [JsonProperty(PropertyName = "query")]
        public string Query { get; set; }

        /// <summary>
        /// Gets or sets the start date filter, so the only query results
        /// returned are after this date.
        /// </summary>
        [JsonProperty(PropertyName = "start")]
        public System.DateTime? Start { get; set; }

        /// <summary>
        /// Gets or sets the end date filter, so the only query results
        /// returned are before this date.
        /// </summary>
        [JsonProperty(PropertyName = "end")]
        public System.DateTime? End { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Query == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Query");
            }
        }
    }
}
