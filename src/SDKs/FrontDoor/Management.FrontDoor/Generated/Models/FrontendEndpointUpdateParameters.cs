// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.FrontDoor.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Frontend endpoint used in routing rule
    /// </summary>
    public partial class FrontendEndpointUpdateParameters
    {
        /// <summary>
        /// Initializes a new instance of the FrontendEndpointUpdateParameters
        /// class.
        /// </summary>
        public FrontendEndpointUpdateParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FrontendEndpointUpdateParameters
        /// class.
        /// </summary>
        /// <param name="hostName">The host name of the frontendEndpoint. Must
        /// be a domain name.</param>
        /// <param name="sessionAffinityEnabledState">Whether to allow session
        /// affinity on this host. Valid options are 'Enabled' or 'Disabled'.
        /// Possible values include: 'Enabled', 'Disabled'</param>
        /// <param name="sessionAffinityTtlSeconds">UNUSED. This field will be
        /// ignored. The TTL to use in seconds for session affinity, if
        /// applicable.</param>
        /// <param name="webApplicationFirewallPolicyLink">Defines the Web
        /// Application Firewall policy for each host (if applicable)</param>
        public FrontendEndpointUpdateParameters(string hostName = default(string), string sessionAffinityEnabledState = default(string), int? sessionAffinityTtlSeconds = default(int?), FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink webApplicationFirewallPolicyLink = default(FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink))
        {
            HostName = hostName;
            SessionAffinityEnabledState = sessionAffinityEnabledState;
            SessionAffinityTtlSeconds = sessionAffinityTtlSeconds;
            WebApplicationFirewallPolicyLink = webApplicationFirewallPolicyLink;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the host name of the frontendEndpoint. Must be a
        /// domain name.
        /// </summary>
        [JsonProperty(PropertyName = "hostName")]
        public string HostName { get; set; }

        /// <summary>
        /// Gets or sets whether to allow session affinity on this host. Valid
        /// options are 'Enabled' or 'Disabled'. Possible values include:
        /// 'Enabled', 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "sessionAffinityEnabledState")]
        public string SessionAffinityEnabledState { get; set; }

        /// <summary>
        /// Gets or sets UNUSED. This field will be ignored. The TTL to use in
        /// seconds for session affinity, if applicable.
        /// </summary>
        [JsonProperty(PropertyName = "sessionAffinityTtlSeconds")]
        public int? SessionAffinityTtlSeconds { get; set; }

        /// <summary>
        /// Gets or sets defines the Web Application Firewall policy for each
        /// host (if applicable)
        /// </summary>
        [JsonProperty(PropertyName = "webApplicationFirewallPolicyLink")]
        public FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink WebApplicationFirewallPolicyLink { get; set; }

    }
}
