// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.FrontDoor.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Defines contents of a web application rule
    /// </summary>
    public partial class AzureManagedOverrideRuleGroup
    {
        /// <summary>
        /// Initializes a new instance of the AzureManagedOverrideRuleGroup
        /// class.
        /// </summary>
        public AzureManagedOverrideRuleGroup()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AzureManagedOverrideRuleGroup
        /// class.
        /// </summary>
        /// <param name="ruleGroupOverride">Describes overrideruleGroup.
        /// Possible values include: 'SqlInjection', 'XSS'</param>
        /// <param name="action">Type of Actions. Possible values include:
        /// 'Allow', 'Block', 'Log'</param>
        public AzureManagedOverrideRuleGroup(string ruleGroupOverride, string action)
        {
            RuleGroupOverride = ruleGroupOverride;
            Action = action;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets describes overrideruleGroup. Possible values include:
        /// 'SqlInjection', 'XSS'
        /// </summary>
        [JsonProperty(PropertyName = "ruleGroupOverride")]
        public string RuleGroupOverride { get; set; }

        /// <summary>
        /// Gets or sets type of Actions. Possible values include: 'Allow',
        /// 'Block', 'Log'
        /// </summary>
        [JsonProperty(PropertyName = "action")]
        public string Action { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (RuleGroupOverride == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "RuleGroupOverride");
            }
            if (Action == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Action");
            }
        }
    }
}
