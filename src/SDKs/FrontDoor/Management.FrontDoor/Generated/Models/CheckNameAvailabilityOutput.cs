// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.FrontDoor.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Output of check name availability API.
    /// </summary>
    public partial class CheckNameAvailabilityOutput
    {
        /// <summary>
        /// Initializes a new instance of the CheckNameAvailabilityOutput
        /// class.
        /// </summary>
        public CheckNameAvailabilityOutput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CheckNameAvailabilityOutput
        /// class.
        /// </summary>
        /// <param name="nameAvailability">Indicates whether the name is
        /// available. Possible values include: 'Available',
        /// 'Unavailable'</param>
        /// <param name="reason">The reason why the name is not
        /// available.</param>
        /// <param name="message">The detailed error message describing why the
        /// name is not available.</param>
        public CheckNameAvailabilityOutput(string nameAvailability = default(string), string reason = default(string), string message = default(string))
        {
            NameAvailability = nameAvailability;
            Reason = reason;
            Message = message;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets indicates whether the name is available. Possible values
        /// include: 'Available', 'Unavailable'
        /// </summary>
        [JsonProperty(PropertyName = "nameAvailability")]
        public string NameAvailability { get; private set; }

        /// <summary>
        /// Gets the reason why the name is not available.
        /// </summary>
        [JsonProperty(PropertyName = "reason")]
        public string Reason { get; private set; }

        /// <summary>
        /// Gets the detailed error message describing why the name is not
        /// available.
        /// </summary>
        [JsonProperty(PropertyName = "message")]
        public string Message { get; private set; }

    }
}
