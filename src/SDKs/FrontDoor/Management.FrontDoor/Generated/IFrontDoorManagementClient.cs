// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.FrontDoor
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// FrontDoor Client
    /// </summary>
    public partial interface IFrontDoorManagementClient : System.IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        System.Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }

        /// <summary>
        /// Credentials needed for the client to connect to Azure.
        /// </summary>
        ServiceClientCredentials Credentials { get; }

        /// <summary>
        /// The subscription credentials which uniquely identify the Microsoft
        /// Azure subscription. The subscription ID forms part of the URI for
        /// every service call.
        /// </summary>
        string SubscriptionId { get; set; }

        /// <summary>
        /// The preferred language for the response.
        /// </summary>
        string AcceptLanguage { get; set; }

        /// <summary>
        /// The retry timeout in seconds for Long Running Operations. Default
        /// value is 30.
        /// </summary>
        int? LongRunningOperationRetryTimeout { get; set; }

        /// <summary>
        /// Whether a unique x-ms-client-request-id should be generated. When
        /// set to true a unique x-ms-client-request-id value is generated and
        /// included in each request. Default is true.
        /// </summary>
        bool? GenerateClientRequestId { get; set; }


        /// <summary>
        /// Gets the IFrontDoorsOperations.
        /// </summary>
        IFrontDoorsOperations FrontDoors { get; }

        /// <summary>
        /// Gets the IRoutingRulesOperations.
        /// </summary>
        IRoutingRulesOperations RoutingRules { get; }

        /// <summary>
        /// Gets the IHealthProbeSettingsOperations.
        /// </summary>
        IHealthProbeSettingsOperations HealthProbeSettings { get; }

        /// <summary>
        /// Gets the ILoadBalancingSettingsOperations.
        /// </summary>
        ILoadBalancingSettingsOperations LoadBalancingSettings { get; }

        /// <summary>
        /// Gets the IBackendPoolsOperations.
        /// </summary>
        IBackendPoolsOperations BackendPools { get; }

        /// <summary>
        /// Gets the IFrontendEndpointsOperations.
        /// </summary>
        IFrontendEndpointsOperations FrontendEndpoints { get; }

        /// <summary>
        /// Gets the IEndpointsOperations.
        /// </summary>
        IEndpointsOperations Endpoints { get; }

        /// <summary>
        /// Gets the IPoliciesOperations.
        /// </summary>
        IPoliciesOperations Policies { get; }

        /// <summary>
        /// Check the availability of a Front Door resource name.
        /// </summary>
        /// <param name='checkFrontDoorNameAvailabilityInput'>
        /// Input to check.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<CheckNameAvailabilityOutput>> CheckFrontDoorNameAvailabilityWithHttpMessagesAsync(CheckNameAvailabilityInput checkFrontDoorNameAvailabilityInput, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Check the availability of a Front Door subdomain.
        /// </summary>
        /// <param name='checkFrontDoorNameAvailabilityInput'>
        /// Input to check.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<CheckNameAvailabilityOutput>> CheckFrontDoorNameAvailabilityWithSubscriptionWithHttpMessagesAsync(CheckNameAvailabilityInput checkFrontDoorNameAvailabilityInput, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

    }
}
