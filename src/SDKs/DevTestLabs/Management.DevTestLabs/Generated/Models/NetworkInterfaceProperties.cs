// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DevTestLabs.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Properties of a network interface.
    /// </summary>
    public partial class NetworkInterfaceProperties
    {
        /// <summary>
        /// Initializes a new instance of the NetworkInterfaceProperties class.
        /// </summary>
        public NetworkInterfaceProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NetworkInterfaceProperties class.
        /// </summary>
        /// <param name="virtualNetworkId">The resource ID of the virtual
        /// network.</param>
        /// <param name="subnetId">The resource ID of the sub net.</param>
        /// <param name="publicIpAddressId">The resource ID of the public IP
        /// address.</param>
        /// <param name="publicIpAddress">The public IP address.</param>
        /// <param name="privateIpAddress">The private IP address.</param>
        /// <param name="dnsName">The DNS name.</param>
        /// <param name="rdpAuthority">The RdpAuthority property is a server
        /// DNS host name or IP address followed by the service port number for
        /// RDP (Remote Desktop Protocol).</param>
        /// <param name="sshAuthority">The SshAuthority property is a server
        /// DNS host name or IP address followed by the service port number for
        /// SSH.</param>
        /// <param name="sharedPublicIpAddressConfiguration">The configuration
        /// for sharing a public IP address across multiple virtual
        /// machines.</param>
        public NetworkInterfaceProperties(string virtualNetworkId = default(string), string subnetId = default(string), string publicIpAddressId = default(string), string publicIpAddress = default(string), string privateIpAddress = default(string), string dnsName = default(string), string rdpAuthority = default(string), string sshAuthority = default(string), SharedPublicIpAddressConfiguration sharedPublicIpAddressConfiguration = default(SharedPublicIpAddressConfiguration))
        {
            VirtualNetworkId = virtualNetworkId;
            SubnetId = subnetId;
            PublicIpAddressId = publicIpAddressId;
            PublicIpAddress = publicIpAddress;
            PrivateIpAddress = privateIpAddress;
            DnsName = dnsName;
            RdpAuthority = rdpAuthority;
            SshAuthority = sshAuthority;
            SharedPublicIpAddressConfiguration = sharedPublicIpAddressConfiguration;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the resource ID of the virtual network.
        /// </summary>
        [JsonProperty(PropertyName = "virtualNetworkId")]
        public string VirtualNetworkId { get; set; }

        /// <summary>
        /// Gets or sets the resource ID of the sub net.
        /// </summary>
        [JsonProperty(PropertyName = "subnetId")]
        public string SubnetId { get; set; }

        /// <summary>
        /// Gets or sets the resource ID of the public IP address.
        /// </summary>
        [JsonProperty(PropertyName = "publicIpAddressId")]
        public string PublicIpAddressId { get; set; }

        /// <summary>
        /// Gets or sets the public IP address.
        /// </summary>
        [JsonProperty(PropertyName = "publicIpAddress")]
        public string PublicIpAddress { get; set; }

        /// <summary>
        /// Gets or sets the private IP address.
        /// </summary>
        [JsonProperty(PropertyName = "privateIpAddress")]
        public string PrivateIpAddress { get; set; }

        /// <summary>
        /// Gets or sets the DNS name.
        /// </summary>
        [JsonProperty(PropertyName = "dnsName")]
        public string DnsName { get; set; }

        /// <summary>
        /// Gets or sets the RdpAuthority property is a server DNS host name or
        /// IP address followed by the service port number for RDP (Remote
        /// Desktop Protocol).
        /// </summary>
        [JsonProperty(PropertyName = "rdpAuthority")]
        public string RdpAuthority { get; set; }

        /// <summary>
        /// Gets or sets the SshAuthority property is a server DNS host name or
        /// IP address followed by the service port number for SSH.
        /// </summary>
        [JsonProperty(PropertyName = "sshAuthority")]
        public string SshAuthority { get; set; }

        /// <summary>
        /// Gets or sets the configuration for sharing a public IP address
        /// across multiple virtual machines.
        /// </summary>
        [JsonProperty(PropertyName = "sharedPublicIpAddressConfiguration")]
        public SharedPublicIpAddressConfiguration SharedPublicIpAddressConfiguration { get; set; }

    }
}
