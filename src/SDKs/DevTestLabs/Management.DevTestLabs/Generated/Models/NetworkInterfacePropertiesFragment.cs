// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.DevTestLabs.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// Properties of a network interface.
    /// </summary>
    public partial class NetworkInterfacePropertiesFragment
    {
        /// <summary>
        /// Initializes a new instance of the
        /// NetworkInterfacePropertiesFragment class.
        /// </summary>
        public NetworkInterfacePropertiesFragment() { }

        /// <summary>
        /// Initializes a new instance of the
        /// NetworkInterfacePropertiesFragment class.
        /// </summary>
        public NetworkInterfacePropertiesFragment(string virtualNetworkId = default(string), string subnetId = default(string), string publicIpAddressId = default(string), string publicIpAddress = default(string), string privateIpAddress = default(string), string dnsName = default(string), string rdpAuthority = default(string), string sshAuthority = default(string), SharedPublicIpAddressConfigurationFragment sharedPublicIpAddressConfiguration = default(SharedPublicIpAddressConfigurationFragment))
        {
            VirtualNetworkId = virtualNetworkId;
            SubnetId = subnetId;
            PublicIpAddressId = publicIpAddressId;
            PublicIpAddress = publicIpAddress;
            PrivateIpAddress = privateIpAddress;
            DnsName = dnsName;
            RdpAuthority = rdpAuthority;
            SshAuthority = sshAuthority;
            SharedPublicIpAddressConfiguration = sharedPublicIpAddressConfiguration;
        }

        /// <summary>
        /// The resource ID of the virtual network.
        /// </summary>
        [JsonProperty(PropertyName = "virtualNetworkId")]
        public string VirtualNetworkId { get; set; }

        /// <summary>
        /// The resource ID of the sub net.
        /// </summary>
        [JsonProperty(PropertyName = "subnetId")]
        public string SubnetId { get; set; }

        /// <summary>
        /// The resource ID of the public IP address.
        /// </summary>
        [JsonProperty(PropertyName = "publicIpAddressId")]
        public string PublicIpAddressId { get; set; }

        /// <summary>
        /// The public IP address.
        /// </summary>
        [JsonProperty(PropertyName = "publicIpAddress")]
        public string PublicIpAddress { get; set; }

        /// <summary>
        /// The private IP address.
        /// </summary>
        [JsonProperty(PropertyName = "privateIpAddress")]
        public string PrivateIpAddress { get; set; }

        /// <summary>
        /// The DNS name.
        /// </summary>
        [JsonProperty(PropertyName = "dnsName")]
        public string DnsName { get; set; }

        /// <summary>
        /// The RdpAuthority property is a server DNS host name or IP address
        /// followed by the service port number for RDP (Remote Desktop
        /// Protocol).
        /// </summary>
        [JsonProperty(PropertyName = "rdpAuthority")]
        public string RdpAuthority { get; set; }

        /// <summary>
        /// The SshAuthority property is a server DNS host name or IP address
        /// followed by the service port number for SSH.
        /// </summary>
        [JsonProperty(PropertyName = "sshAuthority")]
        public string SshAuthority { get; set; }

        /// <summary>
        /// The configuration for sharing a public IP address across multiple
        /// virtual machines.
        /// </summary>
        [JsonProperty(PropertyName = "sharedPublicIpAddressConfiguration")]
        public SharedPublicIpAddressConfigurationFragment SharedPublicIpAddressConfiguration { get; set; }

    }
}
