// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.DevTestLabs.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// Properties of an artifact source.
    /// </summary>
    [JsonTransformation]
    public partial class ArtifactSourceFragment : Resource
    {
        /// <summary>
        /// Initializes a new instance of the ArtifactSourceFragment class.
        /// </summary>
        public ArtifactSourceFragment() { }

        /// <summary>
        /// Initializes a new instance of the ArtifactSourceFragment class.
        /// </summary>
        public ArtifactSourceFragment(string id = default(string), string name = default(string), string type = default(string), string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string displayName = default(string), string uri = default(string), string sourceType = default(string), string folderPath = default(string), string armTemplateFolderPath = default(string), string branchRef = default(string), string securityToken = default(string), string status = default(string), string provisioningState = default(string), string uniqueIdentifier = default(string))
            : base(id, name, type, location, tags)
        {
            DisplayName = displayName;
            Uri = uri;
            SourceType = sourceType;
            FolderPath = folderPath;
            ArmTemplateFolderPath = armTemplateFolderPath;
            BranchRef = branchRef;
            SecurityToken = securityToken;
            Status = status;
            ProvisioningState = provisioningState;
            UniqueIdentifier = uniqueIdentifier;
        }

        /// <summary>
        /// The artifact source's display name.
        /// </summary>
        [JsonProperty(PropertyName = "properties.displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// The artifact source's URI.
        /// </summary>
        [JsonProperty(PropertyName = "properties.uri")]
        public string Uri { get; set; }

        /// <summary>
        /// The artifact source's type. Possible values include: 'VsoGit',
        /// 'GitHub'
        /// </summary>
        [JsonProperty(PropertyName = "properties.sourceType")]
        public string SourceType { get; set; }

        /// <summary>
        /// The folder containing artifacts.
        /// </summary>
        [JsonProperty(PropertyName = "properties.folderPath")]
        public string FolderPath { get; set; }

        /// <summary>
        /// The folder containing Azure Resource Manager templates.
        /// </summary>
        [JsonProperty(PropertyName = "properties.armTemplateFolderPath")]
        public string ArmTemplateFolderPath { get; set; }

        /// <summary>
        /// The artifact source's branch reference.
        /// </summary>
        [JsonProperty(PropertyName = "properties.branchRef")]
        public string BranchRef { get; set; }

        /// <summary>
        /// The security token to authenticate to the artifact source.
        /// </summary>
        [JsonProperty(PropertyName = "properties.securityToken")]
        public string SecurityToken { get; set; }

        /// <summary>
        /// Indicates if the artifact source is enabled (values: Enabled,
        /// Disabled). Possible values include: 'Enabled', 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public string Status { get; set; }

        /// <summary>
        /// The provisioning status of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// The unique immutable identifier of a resource (Guid).
        /// </summary>
        [JsonProperty(PropertyName = "properties.uniqueIdentifier")]
        public string UniqueIdentifier { get; set; }

    }
}
