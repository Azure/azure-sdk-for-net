// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.DevTestLabs.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// A rule for NAT - exposing a VM's port (backendPort) on the public IP
    /// address using a load balancer.
    /// </summary>
    public partial class InboundNatRuleFragment
    {
        /// <summary>
        /// Initializes a new instance of the InboundNatRuleFragment class.
        /// </summary>
        public InboundNatRuleFragment() { }

        /// <summary>
        /// Initializes a new instance of the InboundNatRuleFragment class.
        /// </summary>
        public InboundNatRuleFragment(string transportProtocol = default(string), int? frontendPort = default(int?), int? backendPort = default(int?))
        {
            TransportProtocol = transportProtocol;
            FrontendPort = frontendPort;
            BackendPort = backendPort;
        }

        /// <summary>
        /// The transport protocol for the endpoint. Possible values include:
        /// 'Tcp', 'Udp'
        /// </summary>
        [JsonProperty(PropertyName = "transportProtocol")]
        public string TransportProtocol { get; set; }

        /// <summary>
        /// The external endpoint port of the inbound connection. Possible
        /// values range between 1 and 65535, inclusive. If unspecified, a
        /// value will be allocated automatically.
        /// </summary>
        [JsonProperty(PropertyName = "frontendPort")]
        public int? FrontendPort { get; set; }

        /// <summary>
        /// The port to which the external traffic will be redirected.
        /// </summary>
        [JsonProperty(PropertyName = "backendPort")]
        public int? BackendPort { get; set; }

    }
}
