// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.DevTestLabs.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// A schedule.
    /// </summary>
    [JsonTransformation]
    public partial class ScheduleFragment : Resource
    {
        /// <summary>
        /// Initializes a new instance of the ScheduleFragment class.
        /// </summary>
        public ScheduleFragment() { }

        /// <summary>
        /// Initializes a new instance of the ScheduleFragment class.
        /// </summary>
        public ScheduleFragment(string id = default(string), string name = default(string), string type = default(string), string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string status = default(string), string taskType = default(string), WeekDetailsFragment weeklyRecurrence = default(WeekDetailsFragment), DayDetailsFragment dailyRecurrence = default(DayDetailsFragment), HourDetailsFragment hourlyRecurrence = default(HourDetailsFragment), string timeZoneId = default(string), NotificationSettingsFragment notificationSettings = default(NotificationSettingsFragment), string targetResourceId = default(string), string provisioningState = default(string), string uniqueIdentifier = default(string))
            : base(id, name, type, location, tags)
        {
            Status = status;
            TaskType = taskType;
            WeeklyRecurrence = weeklyRecurrence;
            DailyRecurrence = dailyRecurrence;
            HourlyRecurrence = hourlyRecurrence;
            TimeZoneId = timeZoneId;
            NotificationSettings = notificationSettings;
            TargetResourceId = targetResourceId;
            ProvisioningState = provisioningState;
            UniqueIdentifier = uniqueIdentifier;
        }

        /// <summary>
        /// The status of the schedule (i.e. Enabled, Disabled). Possible
        /// values include: 'Enabled', 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public string Status { get; set; }

        /// <summary>
        /// The task type of the schedule (e.g. LabVmsShutdownTask,
        /// LabVmAutoStart).
        /// </summary>
        [JsonProperty(PropertyName = "properties.taskType")]
        public string TaskType { get; set; }

        /// <summary>
        /// If the schedule will occur only some days of the week, specify the
        /// weekly recurrence.
        /// </summary>
        [JsonProperty(PropertyName = "properties.weeklyRecurrence")]
        public WeekDetailsFragment WeeklyRecurrence { get; set; }

        /// <summary>
        /// If the schedule will occur once each day of the week, specify the
        /// daily recurrence.
        /// </summary>
        [JsonProperty(PropertyName = "properties.dailyRecurrence")]
        public DayDetailsFragment DailyRecurrence { get; set; }

        /// <summary>
        /// If the schedule will occur multiple times a day, specify the
        /// hourly recurrence.
        /// </summary>
        [JsonProperty(PropertyName = "properties.hourlyRecurrence")]
        public HourDetailsFragment HourlyRecurrence { get; set; }

        /// <summary>
        /// The time zone ID (e.g. Pacific Standard time).
        /// </summary>
        [JsonProperty(PropertyName = "properties.timeZoneId")]
        public string TimeZoneId { get; set; }

        /// <summary>
        /// Notification settings.
        /// </summary>
        [JsonProperty(PropertyName = "properties.notificationSettings")]
        public NotificationSettingsFragment NotificationSettings { get; set; }

        /// <summary>
        /// The resource ID to which the schedule belongs
        /// </summary>
        [JsonProperty(PropertyName = "properties.targetResourceId")]
        public string TargetResourceId { get; set; }

        /// <summary>
        /// The provisioning status of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// The unique immutable identifier of a resource (Guid).
        /// </summary>
        [JsonProperty(PropertyName = "properties.uniqueIdentifier")]
        public string UniqueIdentifier { get; set; }

    }
}
