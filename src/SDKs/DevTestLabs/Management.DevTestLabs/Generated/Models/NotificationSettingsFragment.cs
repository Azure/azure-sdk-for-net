// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DevTestLabs.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Notification settings for a schedule.
    /// </summary>
    public partial class NotificationSettingsFragment
    {
        /// <summary>
        /// Initializes a new instance of the NotificationSettingsFragment
        /// class.
        /// </summary>
        public NotificationSettingsFragment()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NotificationSettingsFragment
        /// class.
        /// </summary>
        /// <param name="status">If notifications are enabled for this schedule
        /// (i.e. Enabled, Disabled). Possible values include: 'Enabled',
        /// 'Disabled'</param>
        /// <param name="timeInMinutes">Time in minutes before event at which
        /// notification will be sent.</param>
        /// <param name="webhookUrl">The webhook URL to which the notification
        /// will be sent.</param>
        /// <param name="emailRecipient">The email recipient to send
        /// notifications to (can be a list of semi-colon seperated email
        /// addresses).</param>
        /// <param name="notificationLocale">The locale to use when sending a
        /// notification (fallback for unsupported languages is EN).</param>
        public NotificationSettingsFragment(string status = default(string), int? timeInMinutes = default(int?), string webhookUrl = default(string), string emailRecipient = default(string), string notificationLocale = default(string))
        {
            Status = status;
            TimeInMinutes = timeInMinutes;
            WebhookUrl = webhookUrl;
            EmailRecipient = emailRecipient;
            NotificationLocale = notificationLocale;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets if notifications are enabled for this schedule (i.e.
        /// Enabled, Disabled). Possible values include: 'Enabled', 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets time in minutes before event at which notification
        /// will be sent.
        /// </summary>
        [JsonProperty(PropertyName = "timeInMinutes")]
        public int? TimeInMinutes { get; set; }

        /// <summary>
        /// Gets or sets the webhook URL to which the notification will be
        /// sent.
        /// </summary>
        [JsonProperty(PropertyName = "webhookUrl")]
        public string WebhookUrl { get; set; }

        /// <summary>
        /// Gets or sets the email recipient to send notifications to (can be a
        /// list of semi-colon seperated email addresses).
        /// </summary>
        [JsonProperty(PropertyName = "emailRecipient")]
        public string EmailRecipient { get; set; }

        /// <summary>
        /// Gets or sets the locale to use when sending a notification
        /// (fallback for unsupported languages is EN).
        /// </summary>
        [JsonProperty(PropertyName = "notificationLocale")]
        public string NotificationLocale { get; set; }

    }
}
