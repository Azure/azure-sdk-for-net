// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Network configuration diagnostic result corresponded to provided
    /// traffic query.
    /// </summary>
    public partial class NetworkConfigurationDiagnosticResult
    {
        /// <summary>
        /// Initializes a new instance of the
        /// NetworkConfigurationDiagnosticResult class.
        /// </summary>
        public NetworkConfigurationDiagnosticResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// NetworkConfigurationDiagnosticResult class.
        /// </summary>
        public NetworkConfigurationDiagnosticResult(NetworkConfigurationDiagnosticProfile profile = default(NetworkConfigurationDiagnosticProfile), NetworkSecurityGroupResult networkSecurityGroupResult = default(NetworkSecurityGroupResult))
        {
            Profile = profile;
            NetworkSecurityGroupResult = networkSecurityGroupResult;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "profile")]
        public NetworkConfigurationDiagnosticProfile Profile { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "networkSecurityGroupResult")]
        public NetworkSecurityGroupResult NetworkSecurityGroupResult { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Profile != null)
            {
                Profile.Validate();
            }
        }
    }
}
