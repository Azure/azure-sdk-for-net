// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Interface endpoint resource.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class InterfaceEndpoint : Resource
    {
        /// <summary>
        /// Initializes a new instance of the InterfaceEndpoint class.
        /// </summary>
        public InterfaceEndpoint()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the InterfaceEndpoint class.
        /// </summary>
        /// <param name="id">Resource ID.</param>
        /// <param name="name">Resource name.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="location">Resource location.</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="fqdn">A first-party service's FQDN that is mapped to
        /// the private IP allocated via this interface endpoint.</param>
        /// <param name="endpointService">A reference to the service being
        /// brought into the virtual network.</param>
        /// <param name="subnet">The ID of the subnet from which the private IP
        /// will be allocated.</param>
        /// <param name="networkInterfaces">Gets an array of references to the
        /// network interfaces created for this interface endpoint.</param>
        /// <param name="owner">A read-only property that identifies who
        /// created this interface endpoint.</param>
        /// <param name="provisioningState">The provisioning state of the
        /// interface endpoint. Possible values are: 'Updating', 'Deleting',
        /// and 'Failed'.</param>
        /// <param name="etag">Gets a unique read-only string that changes
        /// whenever the resource is updated.</param>
        public InterfaceEndpoint(string id = default(string), string name = default(string), string type = default(string), string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string fqdn = default(string), EndpointService endpointService = default(EndpointService), Subnet subnet = default(Subnet), IList<NetworkInterface> networkInterfaces = default(IList<NetworkInterface>), string owner = default(string), string provisioningState = default(string), string etag = default(string))
            : base(id, name, type, location, tags)
        {
            Fqdn = fqdn;
            EndpointService = endpointService;
            Subnet = subnet;
            NetworkInterfaces = networkInterfaces;
            Owner = owner;
            ProvisioningState = provisioningState;
            Etag = etag;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets a first-party service's FQDN that is mapped to the
        /// private IP allocated via this interface endpoint.
        /// </summary>
        [JsonProperty(PropertyName = "properties.fqdn")]
        public string Fqdn { get; set; }

        /// <summary>
        /// Gets or sets a reference to the service being brought into the
        /// virtual network.
        /// </summary>
        [JsonProperty(PropertyName = "properties.endpointService")]
        public EndpointService EndpointService { get; set; }

        /// <summary>
        /// Gets or sets the ID of the subnet from which the private IP will be
        /// allocated.
        /// </summary>
        [JsonProperty(PropertyName = "properties.subnet")]
        public Subnet Subnet { get; set; }

        /// <summary>
        /// Gets an array of references to the network interfaces created for
        /// this interface endpoint.
        /// </summary>
        [JsonProperty(PropertyName = "properties.networkInterfaces")]
        public IList<NetworkInterface> NetworkInterfaces { get; private set; }

        /// <summary>
        /// Gets a read-only property that identifies who created this
        /// interface endpoint.
        /// </summary>
        [JsonProperty(PropertyName = "properties.owner")]
        public string Owner { get; private set; }

        /// <summary>
        /// Gets the provisioning state of the interface endpoint. Possible
        /// values are: 'Updating', 'Deleting', and 'Failed'.
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource
        /// is updated.
        /// </summary>
        [JsonProperty(PropertyName = "etag")]
        public string Etag { get; set; }

    }
}
