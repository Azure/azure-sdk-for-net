// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Policies for vpn gateway.
    /// </summary>
    public partial class Policies
    {
        /// <summary>
        /// Initializes a new instance of the Policies class.
        /// </summary>
        public Policies()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Policies class.
        /// </summary>
        /// <param name="allowBranchToBranchTraffic">True if branch to branch
        /// traffic is allowed.</param>
        /// <param name="allowVnetToVnetTraffic">True if Vnet to Vnet traffic
        /// is allowed.</param>
        public Policies(bool? allowBranchToBranchTraffic = default(bool?), bool? allowVnetToVnetTraffic = default(bool?))
        {
            AllowBranchToBranchTraffic = allowBranchToBranchTraffic;
            AllowVnetToVnetTraffic = allowVnetToVnetTraffic;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets true if branch to branch traffic is allowed.
        /// </summary>
        [JsonProperty(PropertyName = "allowBranchToBranchTraffic")]
        public bool? AllowBranchToBranchTraffic { get; set; }

        /// <summary>
        /// Gets or sets true if Vnet to Vnet traffic is allowed.
        /// </summary>
        [JsonProperty(PropertyName = "allowVnetToVnetTraffic")]
        public bool? AllowVnetToVnetTraffic { get; set; }

    }
}
