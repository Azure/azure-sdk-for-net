// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Application Gateway autoscale bounds on number of Application Gateway
    /// instance.
    /// </summary>
    public partial class ApplicationGatewayAutoscaleBounds
    {
        /// <summary>
        /// Initializes a new instance of the ApplicationGatewayAutoscaleBounds
        /// class.
        /// </summary>
        public ApplicationGatewayAutoscaleBounds()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApplicationGatewayAutoscaleBounds
        /// class.
        /// </summary>
        /// <param name="min">Lower bound on number of Application Gateway
        /// instances.</param>
        /// <param name="max">Upper bound on number of Application Gateway
        /// instances.</param>
        public ApplicationGatewayAutoscaleBounds(int min, int max)
        {
            Min = min;
            Max = max;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets lower bound on number of Application Gateway
        /// instances.
        /// </summary>
        [JsonProperty(PropertyName = "min")]
        public int Min { get; set; }

        /// <summary>
        /// Gets or sets upper bound on number of Application Gateway
        /// instances.
        /// </summary>
        [JsonProperty(PropertyName = "max")]
        public int Max { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
