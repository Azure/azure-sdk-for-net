// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataLake.Store.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for SyncFlag.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum SyncFlag
    {
        [EnumMember(Value = "DATA")]
        DATA,
        [EnumMember(Value = "METADATA")]
        METADATA,
        [EnumMember(Value = "CLOSE")]
        CLOSE
    }
    internal static class SyncFlagEnumExtension
    {
        internal static string ToSerializedValue(this SyncFlag? value)
        {
            return value == null ? null : ((SyncFlag)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this SyncFlag value)
        {
            switch( value )
            {
                case SyncFlag.DATA:
                    return "DATA";
                case SyncFlag.METADATA:
                    return "METADATA";
                case SyncFlag.CLOSE:
                    return "CLOSE";
            }
            return null;
        }

        internal static SyncFlag? ParseSyncFlag(this string value)
        {
            switch( value )
            {
                case "DATA":
                    return SyncFlag.DATA;
                case "METADATA":
                    return SyncFlag.METADATA;
                case "CLOSE":
                    return SyncFlag.CLOSE;
            }
            return null;
        }
    }
}
