// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.DataLake.Store.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Subscription-level properties and limits for Data Lake Store.
    /// </summary>
    public partial class CapabilityInformation
    {
        /// <summary>
        /// Initializes a new instance of the CapabilityInformation class.
        /// </summary>
        public CapabilityInformation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CapabilityInformation class.
        /// </summary>
        /// <param name="subscriptionId">The subscription credentials that
        /// uniquely identifies the subscription.</param>
        /// <param name="state">The subscription state. Possible values
        /// include: 'Registered', 'Suspended', 'Deleted', 'Unregistered',
        /// 'Warned'</param>
        /// <param name="maxAccountCount">The maximum supported number of
        /// accounts under this subscription.</param>
        /// <param name="accountCount">The current number of accounts under
        /// this subscription.</param>
        /// <param name="migrationState">The Boolean value of true or false to
        /// indicate the maintenance state.</param>
        public CapabilityInformation(System.Guid? subscriptionId = default(System.Guid?), string state = default(string), int? maxAccountCount = default(int?), int? accountCount = default(int?), bool? migrationState = default(bool?))
        {
            SubscriptionId = subscriptionId;
            State = state;
            MaxAccountCount = maxAccountCount;
            AccountCount = accountCount;
            MigrationState = migrationState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the subscription credentials that uniquely identifies the
        /// subscription.
        /// </summary>
        [JsonProperty(PropertyName = "subscriptionId")]
        public System.Guid? SubscriptionId { get; private set; }

        /// <summary>
        /// Gets the subscription state. Possible values include: 'Registered',
        /// 'Suspended', 'Deleted', 'Unregistered', 'Warned'
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public string State { get; private set; }

        /// <summary>
        /// Gets the maximum supported number of accounts under this
        /// subscription.
        /// </summary>
        [JsonProperty(PropertyName = "maxAccountCount")]
        public int? MaxAccountCount { get; private set; }

        /// <summary>
        /// Gets the current number of accounts under this subscription.
        /// </summary>
        [JsonProperty(PropertyName = "accountCount")]
        public int? AccountCount { get; private set; }

        /// <summary>
        /// Gets the Boolean value of true or false to indicate the maintenance
        /// state.
        /// </summary>
        [JsonProperty(PropertyName = "migrationState")]
        public bool? MigrationState { get; private set; }

    }
}
