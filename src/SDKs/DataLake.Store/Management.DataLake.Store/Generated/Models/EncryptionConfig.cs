// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.DataLake.Store.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.DataLake;
    using Microsoft.Azure.Management.DataLake.Store;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The encryption configuration for the account.
    /// </summary>
    public partial class EncryptionConfig
    {
        /// <summary>
        /// Initializes a new instance of the EncryptionConfig class.
        /// </summary>
        public EncryptionConfig()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EncryptionConfig class.
        /// </summary>
        /// <param name="type">The type of encryption configuration being used.
        /// Currently the only supported types are 'UserManaged' and
        /// 'ServiceManaged'. Possible values include: 'UserManaged',
        /// 'ServiceManaged'</param>
        /// <param name="keyVaultMetaInfo">The Key Vault information for
        /// connecting to user managed encryption keys.</param>
        public EncryptionConfig(EncryptionConfigType type, KeyVaultMetaInfo keyVaultMetaInfo = default(KeyVaultMetaInfo))
        {
            Type = type;
            KeyVaultMetaInfo = keyVaultMetaInfo;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the type of encryption configuration being used.
        /// Currently the only supported types are 'UserManaged' and
        /// 'ServiceManaged'. Possible values include: 'UserManaged',
        /// 'ServiceManaged'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public EncryptionConfigType Type { get; set; }

        /// <summary>
        /// Gets or sets the Key Vault information for connecting to user
        /// managed encryption keys.
        /// </summary>
        [JsonProperty(PropertyName = "keyVaultMetaInfo")]
        public KeyVaultMetaInfo KeyVaultMetaInfo { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (KeyVaultMetaInfo != null)
            {
                KeyVaultMetaInfo.Validate();
            }
        }
    }
}
