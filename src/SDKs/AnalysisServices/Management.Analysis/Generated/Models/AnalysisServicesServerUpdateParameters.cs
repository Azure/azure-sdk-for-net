// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Analysis.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.Analysis;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Provision request specification
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class AnalysisServicesServerUpdateParameters
    {
        /// <summary>
        /// Initializes a new instance of the
        /// AnalysisServicesServerUpdateParameters class.
        /// </summary>
        public AnalysisServicesServerUpdateParameters()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// AnalysisServicesServerUpdateParameters class.
        /// </summary>
        /// <param name="sku">The SKU of the Analysis Services
        /// resource.</param>
        /// <param name="tags">Key-value pairs of additional provisioning
        /// properties.</param>
        /// <param name="asAdministrators">A collection of AS server
        /// administrators</param>
        /// <param name="backupBlobContainerUri">The SAS container URI to the
        /// backup container.</param>
        /// <param name="gatewayDetails">The gateway details configured for the
        /// AS server.</param>
        public AnalysisServicesServerUpdateParameters(ResourceSku sku = default(ResourceSku), IDictionary<string, string> tags = default(IDictionary<string, string>), ServerAdministrators asAdministrators = default(ServerAdministrators), string backupBlobContainerUri = default(string), GatewayDetails gatewayDetails = default(GatewayDetails))
        {
            Sku = sku;
            Tags = tags;
            AsAdministrators = asAdministrators;
            BackupBlobContainerUri = backupBlobContainerUri;
            GatewayDetails = gatewayDetails;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the SKU of the Analysis Services resource.
        /// </summary>
        [JsonProperty(PropertyName = "sku")]
        public ResourceSku Sku { get; set; }

        /// <summary>
        /// Gets or sets key-value pairs of additional provisioning properties.
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

        /// <summary>
        /// Gets or sets a collection of AS server administrators
        /// </summary>
        [JsonProperty(PropertyName = "properties.asAdministrators")]
        public ServerAdministrators AsAdministrators { get; set; }

        /// <summary>
        /// Gets or sets the SAS container URI to the backup container.
        /// </summary>
        [JsonProperty(PropertyName = "properties.backupBlobContainerUri")]
        public string BackupBlobContainerUri { get; set; }

        /// <summary>
        /// Gets or sets the gateway details configured for the AS server.
        /// </summary>
        [JsonProperty(PropertyName = "properties.gatewayDetails")]
        public GatewayDetails GatewayDetails { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Sku != null)
            {
                Sku.Validate();
            }
        }
    }
}
