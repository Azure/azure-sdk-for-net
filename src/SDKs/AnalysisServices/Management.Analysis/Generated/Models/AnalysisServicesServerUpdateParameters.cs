// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Analysis.Models
{
    using System.Linq;

    /// <summary>
    /// Provision request specification
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class AnalysisServicesServerUpdateParameters
    {
        /// <summary>
        /// Initializes a new instance of the
        /// AnalysisServicesServerUpdateParameters class.
        /// </summary>
        public AnalysisServicesServerUpdateParameters() { }

        /// <summary>
        /// Initializes a new instance of the
        /// AnalysisServicesServerUpdateParameters class.
        /// </summary>
        /// <param name="sku">The SKU of the Analysis Services
        /// resource.</param>
        /// <param name="tags">Key-value pairs of additional provisioning
        /// properties.</param>
        /// <param name="asAdministrators">A collection of AS server
        /// administrators</param>
        /// <param name="backupBlobContainerUri">The container URI of backup
        /// blob.</param>
        /// <param name="querypoolConnectionMode">How the read-write server's
        /// participation in the query pool is controlled.<br/>It can have
        /// the following values: <ul><li>readOnly - indicates that the
        /// read-write server is intended not to participate in query
        /// operations</li><li>all - indicates that the read-write server can
        /// participate in query operations</li></ul>Specifying readOnly when
        /// capacity is 1 results in error. Possible values include: 'All',
        /// 'ReadOnly'</param>
        public AnalysisServicesServerUpdateParameters(ResourceSku sku = default(ResourceSku), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), ServerAdministrators asAdministrators = default(ServerAdministrators), string backupBlobContainerUri = default(string), ConnectionMode? querypoolConnectionMode = default(ConnectionMode?))
        {
            Sku = sku;
            Tags = tags;
            AsAdministrators = asAdministrators;
            BackupBlobContainerUri = backupBlobContainerUri;
            QuerypoolConnectionMode = querypoolConnectionMode;
        }

        /// <summary>
        /// Gets or sets the SKU of the Analysis Services resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sku")]
        public ResourceSku Sku { get; set; }

        /// <summary>
        /// Gets or sets key-value pairs of additional provisioning properties.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tags")]
        public System.Collections.Generic.IDictionary<string, string> Tags { get; set; }

        /// <summary>
        /// Gets or sets a collection of AS server administrators
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.asAdministrators")]
        public ServerAdministrators AsAdministrators { get; set; }

        /// <summary>
        /// Gets or sets the container URI of backup blob.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.backupBlobContainerUri")]
        public string BackupBlobContainerUri { get; set; }

        /// <summary>
        /// Gets or sets how the read-write server's participation in the
        /// query pool is controlled.&lt;br/&gt;It can have the following
        /// values: &lt;ul&gt;&lt;li&gt;readOnly - indicates that the
        /// read-write server is intended not to participate in query
        /// operations&lt;/li&gt;&lt;li&gt;all - indicates that the
        /// read-write server can participate in query
        /// operations&lt;/li&gt;&lt;/ul&gt;Specifying readOnly when capacity
        /// is 1 results in error. Possible values include: 'All', 'ReadOnly'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.querypoolConnectionMode")]
        public ConnectionMode? QuerypoolConnectionMode { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Sku != null)
            {
                this.Sku.Validate();
            }
        }
    }
}
