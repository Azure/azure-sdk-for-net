// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.WindowsAzure;
using Microsoft.WindowsAzure.Management.WebSites.Models;

namespace Microsoft.WindowsAzure.Management.WebSites.Models
{
    /// <summary>
    /// The Get Historical Usage Metrics Web Site operation response.
    /// </summary>
    public partial class WebSiteGetHistoricalUsageMetricsResponse : OperationResponse, IEnumerable<WebSiteGetHistoricalUsageMetricsResponse.HistoricalUsageMetric>
    {
        private IList<WebSiteGetHistoricalUsageMetricsResponse.HistoricalUsageMetric> _usageMetrics;
        
        /// <summary>
        /// Optional. Historical metric snapshots for the web site.
        /// </summary>
        public IList<WebSiteGetHistoricalUsageMetricsResponse.HistoricalUsageMetric> UsageMetrics
        {
            get { return this._usageMetrics; }
            set { this._usageMetrics = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the
        /// WebSiteGetHistoricalUsageMetricsResponse class.
        /// </summary>
        public WebSiteGetHistoricalUsageMetricsResponse()
        {
            this._usageMetrics = new List<WebSiteGetHistoricalUsageMetricsResponse.HistoricalUsageMetric>();
        }
        
        /// <summary>
        /// Gets the sequence of UsageMetrics.
        /// </summary>
        public IEnumerator<WebSiteGetHistoricalUsageMetricsResponse.HistoricalUsageMetric> GetEnumerator()
        {
            return this.UsageMetrics.GetEnumerator();
        }
        
        /// <summary>
        /// Gets the sequence of UsageMetrics.
        /// </summary>
        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return this.GetEnumerator();
        }
        
        /// <summary>
        /// Historical metric snapshot for the web site.
        /// </summary>
        public partial class HistoricalUsageMetric
        {
            private string _code;
            
            /// <summary>
            /// Optional. Reports whether the metric data was returned
            /// successfully.
            /// </summary>
            public string Code
            {
                get { return this._code; }
                set { this._code = value; }
            }
            
            private WebSiteGetHistoricalUsageMetricsResponse.HistoricalUsageMetricData _data;
            
            /// <summary>
            /// Optional. Historical metric snapshot data for the web site.
            /// </summary>
            public WebSiteGetHistoricalUsageMetricsResponse.HistoricalUsageMetricData Data
            {
                get { return this._data; }
                set { this._data = value; }
            }
            
            private string _message;
            
            /// <summary>
            /// Optional. A string for optional message content.
            /// </summary>
            public string Message
            {
                get { return this._message; }
                set { this._message = value; }
            }
            
            /// <summary>
            /// Initializes a new instance of the HistoricalUsageMetric class.
            /// </summary>
            public HistoricalUsageMetric()
            {
            }
        }
        
        /// <summary>
        /// Historical metric snapshot data for the web site.
        /// </summary>
        public partial class HistoricalUsageMetricData
        {
            private string _displayName;
            
            /// <summary>
            /// Optional. The display name of the metric, including spaces.
            /// </summary>
            public string DisplayName
            {
                get { return this._displayName; }
                set { this._displayName = value; }
            }
            
            private DateTime _endTime;
            
            /// <summary>
            /// Optional. The end time of the data reported.
            /// </summary>
            public DateTime EndTime
            {
                get { return this._endTime; }
                set { this._endTime = value; }
            }
            
            private string _name;
            
            /// <summary>
            /// Optional. The name of the metric.
            /// </summary>
            public string Name
            {
                get { return this._name; }
                set { this._name = value; }
            }
            
            private string _primaryAggregationType;
            
            /// <summary>
            /// Optional. The primary data aggregation type. This value is
            /// usually Total.
            /// </summary>
            public string PrimaryAggregationType
            {
                get { return this._primaryAggregationType; }
                set { this._primaryAggregationType = value; }
            }
            
            private DateTime _startTime;
            
            /// <summary>
            /// Optional. The start time of the data reported.
            /// </summary>
            public DateTime StartTime
            {
                get { return this._startTime; }
                set { this._startTime = value; }
            }
            
            private string _timeGrain;
            
            /// <summary>
            /// Optional. Length of time (rollup) during which the information
            /// was gathered. For more information, see Supported Rollups.
            /// </summary>
            public string TimeGrain
            {
                get { return this._timeGrain; }
                set { this._timeGrain = value; }
            }
            
            private string _unit;
            
            /// <summary>
            /// Optional. The unit of measurement for the metric (for example,
            /// milliseconds, bytes, or count).
            /// </summary>
            public string Unit
            {
                get { return this._unit; }
                set { this._unit = value; }
            }
            
            private IList<WebSiteGetHistoricalUsageMetricsResponse.HistoricalUsageMetricSample> _values;
            
            /// <summary>
            /// Optional. One or more MetricSample elements.
            /// </summary>
            public IList<WebSiteGetHistoricalUsageMetricsResponse.HistoricalUsageMetricSample> Values
            {
                get { return this._values; }
                set { this._values = value; }
            }
            
            /// <summary>
            /// Initializes a new instance of the HistoricalUsageMetricData
            /// class.
            /// </summary>
            public HistoricalUsageMetricData()
            {
                this._values = new List<WebSiteGetHistoricalUsageMetricsResponse.HistoricalUsageMetricSample>();
            }
        }
        
        /// <summary>
        /// Historical metric snapshot data sample.
        /// </summary>
        public partial class HistoricalUsageMetricSample
        {
            private int _count;
            
            /// <summary>
            /// Optional. The metric sample count. This value is usually 1.
            /// </summary>
            public int Count
            {
                get { return this._count; }
                set { this._count = value; }
            }
            
            private string _maximum;
            
            /// <summary>
            /// Optional. Maximum value recorded.
            /// </summary>
            public string Maximum
            {
                get { return this._maximum; }
                set { this._maximum = value; }
            }
            
            private string _minimum;
            
            /// <summary>
            /// Optional. Minimum value recorded.
            /// </summary>
            public string Minimum
            {
                get { return this._minimum; }
                set { this._minimum = value; }
            }
            
            private DateTime _timeCreated;
            
            /// <summary>
            /// Optional. Time the metric was taken.
            /// </summary>
            public DateTime TimeCreated
            {
                get { return this._timeCreated; }
                set { this._timeCreated = value; }
            }
            
            private string _total;
            
            /// <summary>
            /// Optional. Value of the metric sample for the time taken.
            /// </summary>
            public string Total
            {
                get { return this._total; }
                set { this._total = value; }
            }
            
            /// <summary>
            /// Initializes a new instance of the HistoricalUsageMetricSample
            /// class.
            /// </summary>
            public HistoricalUsageMetricSample()
            {
            }
        }
    }
}
