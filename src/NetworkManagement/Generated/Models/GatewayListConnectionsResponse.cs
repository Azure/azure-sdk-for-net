// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.WindowsAzure;
using Microsoft.WindowsAzure.Management.Network.Models;

namespace Microsoft.WindowsAzure.Management.Network.Models
{
    /// <summary>
    /// The response to a ListConnections request to a Virtual Network Gateway.
    /// </summary>
    public partial class GatewayListConnectionsResponse : OperationResponse, IEnumerable<GatewayListConnectionsResponse.GatewayConnection>
    {
        private IList<GatewayListConnectionsResponse.GatewayConnection> _connections;
        
        /// <summary>
        /// Optional. The list of connections.
        /// </summary>
        public IList<GatewayListConnectionsResponse.GatewayConnection> Connections
        {
            get { return this._connections; }
            set { this._connections = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the GatewayListConnectionsResponse
        /// class.
        /// </summary>
        public GatewayListConnectionsResponse()
        {
            this._connections = new List<GatewayListConnectionsResponse.GatewayConnection>();
        }
        
        /// <summary>
        /// Gets the sequence of Connections.
        /// </summary>
        public IEnumerator<GatewayListConnectionsResponse.GatewayConnection> GetEnumerator()
        {
            return this.Connections.GetEnumerator();
        }
        
        /// <summary>
        /// Gets the sequence of Connections.
        /// </summary>
        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return this.GetEnumerator();
        }
        
        public partial class GatewayConnection
        {
            private IList<string> _allocatedIPAddresses;
            
            /// <summary>
            /// Optional. If LocalNetworkSiteName is defined as
            /// VPNClientConnection, this element contains a list of IP
            /// addresses (represented as strings) that are assigned to
            /// currently connected VPN clients.
            /// </summary>
            public IList<string> AllocatedIPAddresses
            {
                get { return this._allocatedIPAddresses; }
                set { this._allocatedIPAddresses = value; }
            }
            
            private GatewayConnectivityState _connectivityState;
            
            /// <summary>
            /// Optional. The connection state of the site. You can set the
            /// connection state to Connected, Connecting, or NotConnected.
            /// </summary>
            public GatewayConnectivityState ConnectivityState
            {
                get { return this._connectivityState; }
                set { this._connectivityState = value; }
            }
            
            private long _egressBytesTransferred;
            
            /// <summary>
            /// Optional. The number of bytes of data transferred out through
            /// this connection since it was started.
            /// </summary>
            public long EgressBytesTransferred
            {
                get { return this._egressBytesTransferred; }
                set { this._egressBytesTransferred = value; }
            }
            
            private long _ingressBytesTransferred;
            
            /// <summary>
            /// Optional. The number of bytes of data transferred in through
            /// this connection since it was started.
            /// </summary>
            public long IngressBytesTransferred
            {
                get { return this._ingressBytesTransferred; }
                set { this._ingressBytesTransferred = value; }
            }
            
            private DateTime _lastConnectionEstablished;
            
            /// <summary>
            /// Optional. The time that the last connection was established.
            /// </summary>
            public DateTime LastConnectionEstablished
            {
                get { return this._lastConnectionEstablished; }
                set { this._lastConnectionEstablished = value; }
            }
            
            private GatewayEvent _lastEvent;
            
            /// <summary>
            /// Optional. A record of the last provisioning event for this
            /// connection.
            /// </summary>
            public GatewayEvent LastEvent
            {
                get { return this._lastEvent; }
                set { this._lastEvent = value; }
            }
            
            private string _localNetworkSiteName;
            
            /// <summary>
            /// Optional. The name of the local network site represented by the
            /// connection.
            /// </summary>
            public string LocalNetworkSiteName
            {
                get { return this._localNetworkSiteName; }
                set { this._localNetworkSiteName = value; }
            }
            
            /// <summary>
            /// Initializes a new instance of the GatewayConnection class.
            /// </summary>
            public GatewayConnection()
            {
                this._allocatedIPAddresses = new List<string>();
            }
        }
    }
}
