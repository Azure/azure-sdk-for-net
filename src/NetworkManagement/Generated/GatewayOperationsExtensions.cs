// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.WindowsAzure.Management.Network;
using Microsoft.WindowsAzure.Management.Network.Models;

namespace Microsoft.WindowsAzure
{
    /// <summary>
    /// The Service Management API includes operations for managing the virtual
    /// networks your subscription.  (see
    /// http://msdn.microsoft.com/en-us/library/windowsazure/jj157182.aspx for
    /// more information)
    /// </summary>
    public static partial class GatewayOperationsExtensions
    {
        /// <summary>
        /// To connect to, disconnect from, or test your connection to a local
        /// network site, access the connection resource representing the
        /// local network and specify Connect, Disconnect or Test to perform
        /// the desired operation.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154107.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Network.IGatewayOperations.
        /// </param>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='localNetworkSiteName'>
        /// The name of the site to connect to.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Create Virtual Network Gateway operation.
        /// </param>
        /// <returns>
        /// A standard storage response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static GatewayOperationResponse BeginConnectDisconnectOrTesting(this IGatewayOperations operations, string networkName, string localNetworkSiteName, GatewayConnectDisconnectOrTestParameters parameters)
        {
            try
            {
                return operations.BeginConnectDisconnectOrTestingAsync(networkName, localNetworkSiteName, parameters).Result;
            }
            catch (AggregateException ex)
            {
                if (ex.InnerExceptions.Count > 1)
                {
                    throw;
                }
                else
                {
                    throw ex.InnerException;
                }
            }
        }
        
        /// <summary>
        /// To connect to, disconnect from, or test your connection to a local
        /// network site, access the connection resource representing the
        /// local network and specify Connect, Disconnect or Test to perform
        /// the desired operation.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154107.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Network.IGatewayOperations.
        /// </param>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='localNetworkSiteName'>
        /// The name of the site to connect to.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Create Virtual Network Gateway operation.
        /// </param>
        /// <returns>
        /// A standard storage response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<GatewayOperationResponse> BeginConnectDisconnectOrTestingAsync(this IGatewayOperations operations, string networkName, string localNetworkSiteName, GatewayConnectDisconnectOrTestParameters parameters)
        {
            return operations.BeginConnectDisconnectOrTestingAsync(networkName, localNetworkSiteName, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// The Create Virtual network Gateway operation creates a new network
        /// gateways account in Windows Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154119.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Network.IGatewayOperations.
        /// </param>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Create Virtual Network Gateway operation.
        /// </param>
        /// <returns>
        /// A standard storage response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static GatewayOperationResponse BeginCreating(this IGatewayOperations operations, string networkName, GatewayCreateParameters parameters)
        {
            try
            {
                return operations.BeginCreatingAsync(networkName, parameters).Result;
            }
            catch (AggregateException ex)
            {
                if (ex.InnerExceptions.Count > 1)
                {
                    throw;
                }
                else
                {
                    throw ex.InnerException;
                }
            }
        }
        
        /// <summary>
        /// The Create Virtual network Gateway operation creates a new network
        /// gateways account in Windows Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154119.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Network.IGatewayOperations.
        /// </param>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Create Virtual Network Gateway operation.
        /// </param>
        /// <returns>
        /// A standard storage response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<GatewayOperationResponse> BeginCreatingAsync(this IGatewayOperations operations, string networkName, GatewayCreateParameters parameters)
        {
            return operations.BeginCreatingAsync(networkName, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// The Delete Virtual network Gateway operation deletes a network
        /// gateway for the specified virtual network in Windows Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154129.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Network.IGatewayOperations.
        /// </param>
        /// <param name='networkName'>
        /// The name of the virtual network.
        /// </param>
        /// <returns>
        /// A standard storage response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static GatewayOperationResponse BeginDeleting(this IGatewayOperations operations, string networkName)
        {
            try
            {
                return operations.BeginDeletingAsync(networkName).Result;
            }
            catch (AggregateException ex)
            {
                if (ex.InnerExceptions.Count > 1)
                {
                    throw;
                }
                else
                {
                    throw ex.InnerException;
                }
            }
        }
        
        /// <summary>
        /// The Delete Virtual network Gateway operation deletes a network
        /// gateway for the specified virtual network in Windows Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154129.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Network.IGatewayOperations.
        /// </param>
        /// <param name='networkName'>
        /// The name of the virtual network.
        /// </param>
        /// <returns>
        /// A standard storage response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<GatewayOperationResponse> BeginDeletingAsync(this IGatewayOperations operations, string networkName)
        {
            return operations.BeginDeletingAsync(networkName, CancellationToken.None);
        }
        
        /// <summary>
        /// The Failover Virtual network Gateway operation causes a network
        /// gateway failover for the specified virtual network in Windows
        /// Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154118.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Network.IGatewayOperations.
        /// </param>
        /// <param name='networkName'>
        /// The name of the virtual network in Azure.
        /// </param>
        /// <returns>
        /// A standard storage response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static GatewayOperationResponse BeginFailover(this IGatewayOperations operations, string networkName)
        {
            try
            {
                return operations.BeginFailoverAsync(networkName).Result;
            }
            catch (AggregateException ex)
            {
                if (ex.InnerExceptions.Count > 1)
                {
                    throw;
                }
                else
                {
                    throw ex.InnerException;
                }
            }
        }
        
        /// <summary>
        /// The Failover Virtual network Gateway operation causes a network
        /// gateway failover for the specified virtual network in Windows
        /// Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154118.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Network.IGatewayOperations.
        /// </param>
        /// <param name='networkName'>
        /// The name of the virtual network in Azure.
        /// </param>
        /// <returns>
        /// A standard storage response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<GatewayOperationResponse> BeginFailoverAsync(this IGatewayOperations operations, string networkName)
        {
            return operations.BeginFailoverAsync(networkName, CancellationToken.None);
        }
        
        /// <summary>
        /// The Reset Virtual network Gateway shared key operation resets the
        /// shared key on the virtual network gateway for the specified
        /// vitrual network connection to the specified local network in
        /// Windows Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154114.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Network.IGatewayOperations.
        /// </param>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='localNetworkName'>
        /// The name of the local network.
        /// </param>
        /// <param name='parameters'>
        /// The parameters to the Virtual Network Gateway Reset Shared Key
        /// request.
        /// </param>
        /// <returns>
        /// A standard storage response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static GatewayOperationResponse BeginResetSharedKey(this IGatewayOperations operations, string networkName, string localNetworkName, GatewayResetSharedKeyParameters parameters)
        {
            try
            {
                return operations.BeginResetSharedKeyAsync(networkName, localNetworkName, parameters).Result;
            }
            catch (AggregateException ex)
            {
                if (ex.InnerExceptions.Count > 1)
                {
                    throw;
                }
                else
                {
                    throw ex.InnerException;
                }
            }
        }
        
        /// <summary>
        /// The Reset Virtual network Gateway shared key operation resets the
        /// shared key on the virtual network gateway for the specified
        /// vitrual network connection to the specified local network in
        /// Windows Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154114.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Network.IGatewayOperations.
        /// </param>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='localNetworkName'>
        /// The name of the local network.
        /// </param>
        /// <param name='parameters'>
        /// The parameters to the Virtual Network Gateway Reset Shared Key
        /// request.
        /// </param>
        /// <returns>
        /// A standard storage response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<GatewayOperationResponse> BeginResetSharedKeyAsync(this IGatewayOperations operations, string networkName, string localNetworkName, GatewayResetSharedKeyParameters parameters)
        {
            return operations.BeginResetSharedKeyAsync(networkName, localNetworkName, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// To connect to, disconnect from, or test your connection to a local
        /// network site, access the connection resource representing the
        /// local network and specify Connect, Disconnect or Test to perform
        /// the desired operation.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154107.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Network.IGatewayOperations.
        /// </param>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='localNetworkSiteName'>
        /// The name of the site to connect to.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Create Virtual Network Gateway operation.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself.  If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request.  If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        public static GatewayGetOperationStatusResponse ConnectDisconnectOrTest(this IGatewayOperations operations, string networkName, string localNetworkSiteName, GatewayConnectDisconnectOrTestParameters parameters)
        {
            try
            {
                return operations.ConnectDisconnectOrTestAsync(networkName, localNetworkSiteName, parameters).Result;
            }
            catch (AggregateException ex)
            {
                if (ex.InnerExceptions.Count > 1)
                {
                    throw;
                }
                else
                {
                    throw ex.InnerException;
                }
            }
        }
        
        /// <summary>
        /// To connect to, disconnect from, or test your connection to a local
        /// network site, access the connection resource representing the
        /// local network and specify Connect, Disconnect or Test to perform
        /// the desired operation.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154107.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Network.IGatewayOperations.
        /// </param>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='localNetworkSiteName'>
        /// The name of the site to connect to.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Create Virtual Network Gateway operation.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself.  If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request.  If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        public static Task<GatewayGetOperationStatusResponse> ConnectDisconnectOrTestAsync(this IGatewayOperations operations, string networkName, string localNetworkSiteName, GatewayConnectDisconnectOrTestParameters parameters)
        {
            return operations.ConnectDisconnectOrTestAsync(networkName, localNetworkSiteName, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// The Create Virtual network Gateway operation creates a new network
        /// gateways account in Windows Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154119.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Network.IGatewayOperations.
        /// </param>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Create Virtual Network Gateway operation.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself.  If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request.  If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        public static GatewayGetOperationStatusResponse Create(this IGatewayOperations operations, string networkName, GatewayCreateParameters parameters)
        {
            try
            {
                return operations.CreateAsync(networkName, parameters).Result;
            }
            catch (AggregateException ex)
            {
                if (ex.InnerExceptions.Count > 1)
                {
                    throw;
                }
                else
                {
                    throw ex.InnerException;
                }
            }
        }
        
        /// <summary>
        /// The Create Virtual network Gateway operation creates a new network
        /// gateways account in Windows Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154119.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Network.IGatewayOperations.
        /// </param>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Create Virtual Network Gateway operation.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself.  If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request.  If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        public static Task<GatewayGetOperationStatusResponse> CreateAsync(this IGatewayOperations operations, string networkName, GatewayCreateParameters parameters)
        {
            return operations.CreateAsync(networkName, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// The Delete Virtual network Gateway operation deletes a network
        /// gateway for the specified virtual network in Windows Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154129.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Network.IGatewayOperations.
        /// </param>
        /// <param name='networkName'>
        /// The name of the virtual network.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself.  If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request.  If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        public static GatewayGetOperationStatusResponse Delete(this IGatewayOperations operations, string networkName)
        {
            try
            {
                return operations.DeleteAsync(networkName).Result;
            }
            catch (AggregateException ex)
            {
                if (ex.InnerExceptions.Count > 1)
                {
                    throw;
                }
                else
                {
                    throw ex.InnerException;
                }
            }
        }
        
        /// <summary>
        /// The Delete Virtual network Gateway operation deletes a network
        /// gateway for the specified virtual network in Windows Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154129.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Network.IGatewayOperations.
        /// </param>
        /// <param name='networkName'>
        /// The name of the virtual network.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself.  If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request.  If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        public static Task<GatewayGetOperationStatusResponse> DeleteAsync(this IGatewayOperations operations, string networkName)
        {
            return operations.DeleteAsync(networkName, CancellationToken.None);
        }
        
        /// <summary>
        /// The Failover Virtual network Gateway operation causes a network
        /// gateway failover for the specified virtual network in Windows
        /// Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154118.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Network.IGatewayOperations.
        /// </param>
        /// <param name='networkName'>
        /// The name of the virtual network in Azure.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself.  If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request.  If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        public static GatewayGetOperationStatusResponse Failover(this IGatewayOperations operations, string networkName)
        {
            try
            {
                return operations.FailoverAsync(networkName).Result;
            }
            catch (AggregateException ex)
            {
                if (ex.InnerExceptions.Count > 1)
                {
                    throw;
                }
                else
                {
                    throw ex.InnerException;
                }
            }
        }
        
        /// <summary>
        /// The Failover Virtual network Gateway operation causes a network
        /// gateway failover for the specified virtual network in Windows
        /// Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154118.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Network.IGatewayOperations.
        /// </param>
        /// <param name='networkName'>
        /// The name of the virtual network in Azure.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself.  If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request.  If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        public static Task<GatewayGetOperationStatusResponse> FailoverAsync(this IGatewayOperations operations, string networkName)
        {
            return operations.FailoverAsync(networkName, CancellationToken.None);
        }
        
        /// <summary>
        /// The Generate VPN Client Package creates a VPN client package for
        /// the specified virtual network and gateway in Windows Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/dn205126.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Network.IGatewayOperations.
        /// </param>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Create Virtual Network Gateway operation.
        /// </param>
        /// <returns>
        /// A standard storage response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static GatewayOperationResponse GenerateVpnClientPackage(this IGatewayOperations operations, string networkName, GatewayGenerateVpnClientPackageParameters parameters)
        {
            try
            {
                return operations.GenerateVpnClientPackageAsync(networkName, parameters).Result;
            }
            catch (AggregateException ex)
            {
                if (ex.InnerExceptions.Count > 1)
                {
                    throw;
                }
                else
                {
                    throw ex.InnerException;
                }
            }
        }
        
        /// <summary>
        /// The Generate VPN Client Package creates a VPN client package for
        /// the specified virtual network and gateway in Windows Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/dn205126.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Network.IGatewayOperations.
        /// </param>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Create Virtual Network Gateway operation.
        /// </param>
        /// <returns>
        /// A standard storage response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<GatewayOperationResponse> GenerateVpnClientPackageAsync(this IGatewayOperations operations, string networkName, GatewayGenerateVpnClientPackageParameters parameters)
        {
            return operations.GenerateVpnClientPackageAsync(networkName, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// The Get Virtual network Gateway operation gets information on the
        /// network gateway for the specified vitrual network in Windows
        /// Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154109.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Network.IGatewayOperations.
        /// </param>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <returns>
        /// A standard storage response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static GatewayGetResponse Get(this IGatewayOperations operations, string networkName)
        {
            try
            {
                return operations.GetAsync(networkName).Result;
            }
            catch (AggregateException ex)
            {
                if (ex.InnerExceptions.Count > 1)
                {
                    throw;
                }
                else
                {
                    throw ex.InnerException;
                }
            }
        }
        
        /// <summary>
        /// The Get Virtual network Gateway operation gets information on the
        /// network gateway for the specified vitrual network in Windows
        /// Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154109.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Network.IGatewayOperations.
        /// </param>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <returns>
        /// A standard storage response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<GatewayGetResponse> GetAsync(this IGatewayOperations operations, string networkName)
        {
            return operations.GetAsync(networkName, CancellationToken.None);
        }
        
        /// <summary>
        /// The Get Device Configuration Script operation returns a script that
        /// you can use to configure local VPN devices to connect to the
        /// gateway.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154115.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Network.IGatewayOperations.
        /// </param>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='parameters'>
        /// The parameters for the GetDeviceConfigurationScript request.
        /// </param>
        /// <returns>
        /// The configuration script returned from the get device configuration
        /// script request.
        /// </returns>
        public static GatewayGetDeviceConfigurationScriptResponse GetDeviceConfigurationScript(this IGatewayOperations operations, string networkName, GatewayGetDeviceConfigurationScriptParameters parameters)
        {
            try
            {
                return operations.GetDeviceConfigurationScriptAsync(networkName, parameters).Result;
            }
            catch (AggregateException ex)
            {
                if (ex.InnerExceptions.Count > 1)
                {
                    throw;
                }
                else
                {
                    throw ex.InnerException;
                }
            }
        }
        
        /// <summary>
        /// The Get Device Configuration Script operation returns a script that
        /// you can use to configure local VPN devices to connect to the
        /// gateway.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154115.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Network.IGatewayOperations.
        /// </param>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='parameters'>
        /// The parameters for the GetDeviceConfigurationScript request.
        /// </param>
        /// <returns>
        /// The configuration script returned from the get device configuration
        /// script request.
        /// </returns>
        public static Task<GatewayGetDeviceConfigurationScriptResponse> GetDeviceConfigurationScriptAsync(this IGatewayOperations operations, string networkName, GatewayGetDeviceConfigurationScriptParameters parameters)
        {
            return operations.GetDeviceConfigurationScriptAsync(networkName, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// The Get Virtual network Gateway operation status gets information
        /// on the status of network gateway operations in Windows Azure.
        /// (see http://msdn.microsoft.com/en-us/library/windowsazure/jj154112.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Network.IGatewayOperations.
        /// </param>
        /// <param name='operationId'>
        /// The id  of the network operation.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself.  If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request.  If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        public static GatewayGetOperationStatusResponse GetOperationStatus(this IGatewayOperations operations, string operationId)
        {
            try
            {
                return operations.GetOperationStatusAsync(operationId).Result;
            }
            catch (AggregateException ex)
            {
                if (ex.InnerExceptions.Count > 1)
                {
                    throw;
                }
                else
                {
                    throw ex.InnerException;
                }
            }
        }
        
        /// <summary>
        /// The Get Virtual network Gateway operation status gets information
        /// on the status of network gateway operations in Windows Azure.
        /// (see http://msdn.microsoft.com/en-us/library/windowsazure/jj154112.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Network.IGatewayOperations.
        /// </param>
        /// <param name='operationId'>
        /// The id  of the network operation.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself.  If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request.  If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        public static Task<GatewayGetOperationStatusResponse> GetOperationStatusAsync(this IGatewayOperations operations, string operationId)
        {
            return operations.GetOperationStatusAsync(operationId, CancellationToken.None);
        }
        
        /// <summary>
        /// The Get Virtual network Gateway shared key operation gets the
        /// shared key on the virtual network gateway for the specified
        /// vitrual network connection to the specified local network in
        /// Windows Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154122.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Network.IGatewayOperations.
        /// </param>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='localNetworkName'>
        /// The name of the local network.
        /// </param>
        /// <returns>
        /// The response to the get shared key request.
        /// </returns>
        public static GatewayGetSharedKeyResponse GetSharedKey(this IGatewayOperations operations, string networkName, string localNetworkName)
        {
            try
            {
                return operations.GetSharedKeyAsync(networkName, localNetworkName).Result;
            }
            catch (AggregateException ex)
            {
                if (ex.InnerExceptions.Count > 1)
                {
                    throw;
                }
                else
                {
                    throw ex.InnerException;
                }
            }
        }
        
        /// <summary>
        /// The Get Virtual network Gateway shared key operation gets the
        /// shared key on the virtual network gateway for the specified
        /// vitrual network connection to the specified local network in
        /// Windows Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154122.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Network.IGatewayOperations.
        /// </param>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='localNetworkName'>
        /// The name of the local network.
        /// </param>
        /// <returns>
        /// The response to the get shared key request.
        /// </returns>
        public static Task<GatewayGetSharedKeyResponse> GetSharedKeyAsync(this IGatewayOperations operations, string networkName, string localNetworkName)
        {
            return operations.GetSharedKeyAsync(networkName, localNetworkName, CancellationToken.None);
        }
        
        /// <summary>
        /// The List Connections operation returns a list of the local network
        /// connections that can be accessed through the gateway.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154120.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Network.IGatewayOperations.
        /// </param>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <returns>
        /// The response to a ListConnections request to a Virtual Network
        /// Gateway.
        /// </returns>
        public static GatewayListConnectionsResponse ListConnections(this IGatewayOperations operations, string networkName)
        {
            try
            {
                return operations.ListConnectionsAsync(networkName).Result;
            }
            catch (AggregateException ex)
            {
                if (ex.InnerExceptions.Count > 1)
                {
                    throw;
                }
                else
                {
                    throw ex.InnerException;
                }
            }
        }
        
        /// <summary>
        /// The List Connections operation returns a list of the local network
        /// connections that can be accessed through the gateway.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154120.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Network.IGatewayOperations.
        /// </param>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <returns>
        /// The response to a ListConnections request to a Virtual Network
        /// Gateway.
        /// </returns>
        public static Task<GatewayListConnectionsResponse> ListConnectionsAsync(this IGatewayOperations operations, string networkName)
        {
            return operations.ListConnectionsAsync(networkName, CancellationToken.None);
        }
        
        /// <summary>
        /// The List Virtual Network Gateway Supported Devices operation lists
        /// the supported, on-premise network devices that can connect to the
        /// gateway.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154102.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Network.IGatewayOperations.
        /// </param>
        /// <returns>
        /// The respoonse to the get supported platform configuration request.
        /// </returns>
        public static GatewayListSupportedDevicesResponse ListSupportedDevices(this IGatewayOperations operations)
        {
            try
            {
                return operations.ListSupportedDevicesAsync().Result;
            }
            catch (AggregateException ex)
            {
                if (ex.InnerExceptions.Count > 1)
                {
                    throw;
                }
                else
                {
                    throw ex.InnerException;
                }
            }
        }
        
        /// <summary>
        /// The List Virtual Network Gateway Supported Devices operation lists
        /// the supported, on-premise network devices that can connect to the
        /// gateway.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154102.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Network.IGatewayOperations.
        /// </param>
        /// <returns>
        /// The respoonse to the get supported platform configuration request.
        /// </returns>
        public static Task<GatewayListSupportedDevicesResponse> ListSupportedDevicesAsync(this IGatewayOperations operations)
        {
            return operations.ListSupportedDevicesAsync(CancellationToken.None);
        }
        
        /// <summary>
        /// The Reset Virtual network Gateway shared key operation resets the
        /// shared key on the virtual network gateway for the specified
        /// vitrual network connection to the specified local network in
        /// Windows Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154114.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Network.IGatewayOperations.
        /// </param>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='localNetworkName'>
        /// The name of the local network.
        /// </param>
        /// <param name='parameters'>
        /// The parameters to the Virtual Network Gateway Reset Shared Key
        /// request.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself.  If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request.  If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        public static GatewayGetOperationStatusResponse ResetSharedKey(this IGatewayOperations operations, string networkName, string localNetworkName, GatewayResetSharedKeyParameters parameters)
        {
            try
            {
                return operations.ResetSharedKeyAsync(networkName, localNetworkName, parameters).Result;
            }
            catch (AggregateException ex)
            {
                if (ex.InnerExceptions.Count > 1)
                {
                    throw;
                }
                else
                {
                    throw ex.InnerException;
                }
            }
        }
        
        /// <summary>
        /// The Reset Virtual network Gateway shared key operation resets the
        /// shared key on the virtual network gateway for the specified
        /// vitrual network connection to the specified local network in
        /// Windows Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154114.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Network.IGatewayOperations.
        /// </param>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='localNetworkName'>
        /// The name of the local network.
        /// </param>
        /// <param name='parameters'>
        /// The parameters to the Virtual Network Gateway Reset Shared Key
        /// request.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself.  If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request.  If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        public static Task<GatewayGetOperationStatusResponse> ResetSharedKeyAsync(this IGatewayOperations operations, string networkName, string localNetworkName, GatewayResetSharedKeyParameters parameters)
        {
            return operations.ResetSharedKeyAsync(networkName, localNetworkName, parameters, CancellationToken.None);
        }
    }
}
