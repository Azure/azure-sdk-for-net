// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure.Management.Automation.Models;
using Microsoft.WindowsAzure;

namespace Microsoft.Azure.Management.Automation
{
    /// <summary>
    /// Service operation for automation runbooks.  (see
    /// http://msdn.microsoft.com/en-us/library/windowsazure/XXXX.aspx for
    /// more information)
    /// </summary>
    public partial interface IRunbookOperations
    {
        /// <summary>
        /// Create a runbook schedule link.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/XXXXXXX.aspx
        /// for more information)
        /// </summary>
        /// <param name='automationAccount'>
        /// The automation account name.
        /// </param>
        /// <param name='parameters'>
        /// The parameters supplied to the create runbook schedule link
        /// operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response model for the create runbook schedule link operation.
        /// </returns>
        Task<RunbookCreateScheduleLinkResponse> CreateScheduleLinkAsync(string automationAccount, RunbookCreateScheduleLinkParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// Delete the runbook identified by runbookId.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/XXXXXXX.aspx
        /// for more information)
        /// </summary>
        /// <param name='automationAccount'>
        /// The automation account name.
        /// </param>
        /// <param name='runbookId'>
        /// The runbook id.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<OperationResponse> DeleteAsync(string automationAccount, string runbookId, CancellationToken cancellationToken);
        
        /// <summary>
        /// Delete the runbook schedule link.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/XXXXXXX.aspx
        /// for more information)
        /// </summary>
        /// <param name='automationAccount'>
        /// The automation account name.
        /// </param>
        /// <param name='parameters'>
        /// The parameters supplied to the delete runbook schedule link
        /// operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<OperationResponse> DeleteScheduleLinkAsync(string automationAccount, RunbookDeleteScheduleLinkParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// Edit the runbook identified by runbookId.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/XXXXXXX.aspx
        /// for more information)
        /// </summary>
        /// <param name='automationAccount'>
        /// The automation account name.
        /// </param>
        /// <param name='runbookId'>
        /// The runbook id.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response model for the edit runbook operation.
        /// </returns>
        Task<RunbookEditResponse> EditAsync(string automationAccount, string runbookId, CancellationToken cancellationToken);
        
        /// <summary>
        /// Retrieve the runbook identified by runbookId.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/XXXXXXX.aspx
        /// for more information)
        /// </summary>
        /// <param name='automationAccount'>
        /// The automation account name.
        /// </param>
        /// <param name='runbookId'>
        /// The runbook id.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response model for the get runbook operation.
        /// </returns>
        Task<RunbookGetResponse> GetAsync(string automationAccount, string runbookId, CancellationToken cancellationToken);
        
        /// <summary>
        /// Retrieve the runbook identified by runbookId.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/XXXXXXX.aspx
        /// for more information)
        /// </summary>
        /// <param name='automationAccount'>
        /// The automation account name.
        /// </param>
        /// <param name='runbookId'>
        /// The runbook id.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response model for the get runbook operation.
        /// </returns>
        Task<RunbookGetResponse> GetWithSchedulesAsync(string automationAccount, string runbookId, CancellationToken cancellationToken);
        
        /// <summary>
        /// Retrieve a list of one runbook identified by runbookName.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/XXXXXXX.aspx
        /// for more information)
        /// </summary>
        /// <param name='automationAccount'>
        /// The automation account name.
        /// </param>
        /// <param name='runbookName'>
        /// The runbook name.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response model for the list runbook operation.
        /// </returns>
        Task<RunbookListResponse> ListByNameAsync(string automationAccount, string runbookName, CancellationToken cancellationToken);
        
        /// <summary>
        /// Retrieve a list of one runbook identified by runbookName.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/XXXXXXX.aspx
        /// for more information)
        /// </summary>
        /// <param name='automationAccount'>
        /// The automation account name.
        /// </param>
        /// <param name='runbookName'>
        /// The runbook name.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response model for the list runbook operation.
        /// </returns>
        Task<RunbookListResponse> ListByNameWithSchedulesAsync(string automationAccount, string runbookName, CancellationToken cancellationToken);
        
        /// <summary>
        /// Retrieve a list of runbooks which run on the schedule.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/XXXXXXX.aspx
        /// for more information)
        /// </summary>
        /// <param name='automationAccount'>
        /// The automation account name.
        /// </param>
        /// <param name='parameters'>
        /// The parameters supplied to the list runbook by schedule name
        /// operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response model for the list runbook operation.
        /// </returns>
        Task<RunbookListResponse> ListByScheduleNameAsync(string automationAccount, RunbookListByScheduleNameParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// Retrieve a list of runbooks which run on the schedule.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/XXXXXXX.aspx
        /// for more information)
        /// </summary>
        /// <param name='automationAccount'>
        /// The automation account name.
        /// </param>
        /// <param name='parameters'>
        /// The parameters supplied to the list runbook by schedule name
        /// operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response model for the list runbook operation.
        /// </returns>
        Task<RunbookListResponse> ListByScheduleNameWithSchedulesAsync(string automationAccount, RunbookListByScheduleNameParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// Retrieve a list of runbooks for the given automation account.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/XXXXXXX.aspx
        /// for more information)
        /// </summary>
        /// <param name='automationAccount'>
        /// The automation account name.
        /// </param>
        /// <param name='skipToken'>
        /// The skip token.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response model for the list runbook operation.
        /// </returns>
        Task<RunbookListResponse> ListWithSchedulesAsync(string automationAccount, string skipToken, CancellationToken cancellationToken);
        
        /// <summary>
        /// Publish the runbook identified by runbookId.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/XXXXXXX.aspx
        /// for more information)
        /// </summary>
        /// <param name='automationAccount'>
        /// The automation account name.
        /// </param>
        /// <param name='parameters'>
        /// The parameters supplied to the publish runbook operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response model for the publish runbook operation.
        /// </returns>
        Task<RunbookPublishResponse> PublishAsync(string automationAccount, RunbookPublishParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// Start the runbook identified by runbookId.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/XXXXXXX.aspx
        /// for more information)
        /// </summary>
        /// <param name='automationAccount'>
        /// The automation account name.
        /// </param>
        /// <param name='parameters'>
        /// The parameters supplied to the start runbook operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response model for the start runbook operation.
        /// </returns>
        Task<RunbookStartResponse> StartAsync(string automationAccount, RunbookStartParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// Update the runbook identified by runbookId.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/XXXXXXX.aspx
        /// for more information)
        /// </summary>
        /// <param name='automationAccount'>
        /// The automation account name.
        /// </param>
        /// <param name='parameters'>
        /// The parameters supplied to the update runbook operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<OperationResponse> UpdateAsync(string automationAccount, RunbookUpdateParameters parameters, CancellationToken cancellationToken);
    }
}
