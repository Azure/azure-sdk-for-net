// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.ContainerRegistry.Models
{
    using System.Linq;

    /// <summary>
    /// A request to check whether the container registry name is available.
    /// </summary>
    public partial class RegistryNameCheckRequest
    {
        /// <summary>
        /// Initializes a new instance of the RegistryNameCheckRequest class.
        /// </summary>
        public RegistryNameCheckRequest() { }

        /// <summary>
        /// Initializes a new instance of the RegistryNameCheckRequest class.
        /// </summary>
        /// <param name="name">The name of the container registry.</param>
        public RegistryNameCheckRequest(string name)
        {
            Name = name;
        }
        /// <summary>
        /// Static constructor for RegistryNameCheckRequest class.
        /// </summary>
        static RegistryNameCheckRequest()
        {
            Type = "Microsoft.ContainerRegistry/registries";
        }

        /// <summary>
        /// Gets or sets the name of the container registry.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// The resource type of the container registry. This field must be
        /// set to "Microsoft.ContainerRegistry/registries".
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public static string Type { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Name");
            }
        }
    }
}
