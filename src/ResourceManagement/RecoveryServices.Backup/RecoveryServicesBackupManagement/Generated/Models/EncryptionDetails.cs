// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    /// <summary>
    /// Details needed if the source VM was encrypted at the time of backup.
    /// </summary>
    public partial class EncryptionDetails
    {
        private bool _encryptionEnabled;
        
        /// <summary>
        /// Optional. Identifies whether this recovery point represents an
        /// encrypted VM at the time of backup.
        /// </summary>
        public bool EncryptionEnabled
        {
            get { return this._encryptionEnabled; }
            set { this._encryptionEnabled = value; }
        }
        
        private string _kekUrl;
        
        /// <summary>
        /// Optional. Key Url.
        /// </summary>
        public string KekUrl
        {
            get { return this._kekUrl; }
            set { this._kekUrl = value; }
        }
        
        private string _kekVaultId;
        
        /// <summary>
        /// Optional. ID of Key Vault where KEK is stored.
        /// </summary>
        public string KekVaultId
        {
            get { return this._kekVaultId; }
            set { this._kekVaultId = value; }
        }
        
        private string _secretKeyUrl;
        
        /// <summary>
        /// Optional. Secret Url.
        /// </summary>
        public string SecretKeyUrl
        {
            get { return this._secretKeyUrl; }
            set { this._secretKeyUrl = value; }
        }
        
        private string _secretKeyVaultId;
        
        /// <summary>
        /// Optional. ID of Key Vault where Secret is stored.
        /// </summary>
        public string SecretKeyVaultId
        {
            get { return this._secretKeyVaultId; }
            set { this._secretKeyVaultId = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the EncryptionDetails class.
        /// </summary>
        public EncryptionDetails()
        {
        }
    }
}
