// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    using System.Linq;

    /// <summary>
    /// Base class for backup item. Workload-specific backup items are derived
    /// from this class.
    /// </summary>
    public partial class WorkloadProtectableItem
    {
        /// <summary>
        /// Initializes a new instance of the WorkloadProtectableItem class.
        /// </summary>
        public WorkloadProtectableItem() { }

        /// <summary>
        /// Initializes a new instance of the WorkloadProtectableItem class.
        /// </summary>
        /// <param name="backupManagementType">Type of backup managemenent to
        /// backup an item.</param>
        /// <param name="friendlyName">Friendly name of the backup
        /// item.</param>
        /// <param name="protectionState">State of the back up item. Possible
        /// values include: 'Invalid', 'NotProtected', 'Protecting',
        /// 'Protected'</param>
        public WorkloadProtectableItem(string backupManagementType = default(string), string friendlyName = default(string), ProtectionStatus? protectionState = default(ProtectionStatus?))
        {
            BackupManagementType = backupManagementType;
            FriendlyName = friendlyName;
            ProtectionState = protectionState;
        }

        /// <summary>
        /// Gets or sets type of backup managemenent to backup an item.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "backupManagementType")]
        public string BackupManagementType { get; set; }

        /// <summary>
        /// Gets or sets friendly name of the backup item.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "friendlyName")]
        public string FriendlyName { get; set; }

        /// <summary>
        /// Gets or sets state of the back up item. Possible values include:
        /// 'Invalid', 'NotProtected', 'Protecting', 'Protected'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "protectionState")]
        public ProtectionStatus? ProtectionState { get; set; }

    }
}
