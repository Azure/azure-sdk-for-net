// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    using System.Linq;

    /// <summary>
    /// Details needed if the VM was encrypted at the time of backup.
    /// </summary>
    public partial class EncryptionDetails
    {
        /// <summary>
        /// Initializes a new instance of the EncryptionDetails class.
        /// </summary>
        public EncryptionDetails() { }

        /// <summary>
        /// Initializes a new instance of the EncryptionDetails class.
        /// </summary>
        /// <param name="encryptionEnabled">Identifies whether this backup
        /// copy represents an encrypted VM at the time of backup.</param>
        /// <param name="kekUrl">Key Url.</param>
        /// <param name="secretKeyUrl">Secret Url.</param>
        /// <param name="kekVaultId">ID of Key Vault where KEK is
        /// stored.</param>
        /// <param name="secretKeyVaultId">ID of Key Vault where Secret is
        /// stored.</param>
        public EncryptionDetails(bool? encryptionEnabled = default(bool?), string kekUrl = default(string), string secretKeyUrl = default(string), string kekVaultId = default(string), string secretKeyVaultId = default(string))
        {
            EncryptionEnabled = encryptionEnabled;
            KekUrl = kekUrl;
            SecretKeyUrl = secretKeyUrl;
            KekVaultId = kekVaultId;
            SecretKeyVaultId = secretKeyVaultId;
        }

        /// <summary>
        /// Gets or sets identifies whether this backup copy represents an
        /// encrypted VM at the time of backup.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "encryptionEnabled")]
        public bool? EncryptionEnabled { get; set; }

        /// <summary>
        /// Gets or sets key Url.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "kekUrl")]
        public string KekUrl { get; set; }

        /// <summary>
        /// Gets or sets secret Url.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "secretKeyUrl")]
        public string SecretKeyUrl { get; set; }

        /// <summary>
        /// Gets or sets ID of Key Vault where KEK is stored.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "kekVaultId")]
        public string KekVaultId { get; set; }

        /// <summary>
        /// Gets or sets ID of Key Vault where Secret is stored.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "secretKeyVaultId")]
        public string SecretKeyVaultId { get; set; }

    }
}
