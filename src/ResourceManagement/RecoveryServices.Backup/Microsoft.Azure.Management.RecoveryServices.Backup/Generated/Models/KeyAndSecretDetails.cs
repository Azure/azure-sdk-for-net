// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    using System.Linq;

    /// <summary>
    /// BEK is bitlocker key.
    /// KEK is encryption key for BEK
    /// If the VM was encrypted then we will store follwing
    /// details :
    /// 1. Secret(BEK) - Url + Backup Data + vaultId.
    /// 2. Key(KEK) - Url + Backup Data + vaultId.
    /// BEK and KEK can potentiallty have different vault ids.
    /// </summary>
    public partial class KeyAndSecretDetails
    {
        /// <summary>
        /// Initializes a new instance of the KeyAndSecretDetails class.
        /// </summary>
        public KeyAndSecretDetails() { }

        /// <summary>
        /// Initializes a new instance of the KeyAndSecretDetails class.
        /// </summary>
        /// <param name="kekDetails">KEK is encryption key for BEK.</param>
        /// <param name="bekDetails">BEK is bitlocker encrpytion key.</param>
        public KeyAndSecretDetails(KEKDetails kekDetails = default(KEKDetails), BEKDetails bekDetails = default(BEKDetails))
        {
            KekDetails = kekDetails;
            BekDetails = bekDetails;
        }

        /// <summary>
        /// Gets or sets KEK is encryption key for BEK.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "kekDetails")]
        public KEKDetails KekDetails { get; set; }

        /// <summary>
        /// Gets or sets BEK is bitlocker encrpytion key.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "bekDetails")]
        public BEKDetails BekDetails { get; set; }

    }
}
