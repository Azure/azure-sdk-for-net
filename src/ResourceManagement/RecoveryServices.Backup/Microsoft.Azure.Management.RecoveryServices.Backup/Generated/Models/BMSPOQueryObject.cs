// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    using System.Linq;

    /// <summary>
    /// Filters to list items that can be backed up.
    /// </summary>
    public partial class BMSPOQueryObject
    {
        /// <summary>
        /// Initializes a new instance of the BMSPOQueryObject class.
        /// </summary>
        public BMSPOQueryObject() { }

        /// <summary>
        /// Initializes a new instance of the BMSPOQueryObject class.
        /// </summary>
        /// <param name="backupManagementType">Backup management type.
        /// Possible values include: 'Invalid', 'AzureIaasVM', 'MAB', 'DPM',
        /// 'AzureBackupServer', 'AzureSql'</param>
        /// <param name="status">Backup status query parameter.</param>
        /// <param name="friendlyName">Friendly name.</param>
        public BMSPOQueryObject(BackupManagementType? backupManagementType = default(BackupManagementType?), string status = default(string), string friendlyName = default(string))
        {
            BackupManagementType = backupManagementType;
            Status = status;
            FriendlyName = friendlyName;
        }

        /// <summary>
        /// Gets or sets backup management type. Possible values include:
        /// 'Invalid', 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer',
        /// 'AzureSql'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "backupManagementType")]
        public BackupManagementType? BackupManagementType { get; set; }

        /// <summary>
        /// Gets or sets backup status query parameter.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets friendly name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "friendlyName")]
        public string FriendlyName { get; set; }

    }
}
