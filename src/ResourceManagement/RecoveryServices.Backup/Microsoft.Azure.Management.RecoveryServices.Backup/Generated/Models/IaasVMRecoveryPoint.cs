// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    using System.Linq;

    /// <summary>
    /// IaaS VM workload specific backup copy.
    /// </summary>
    public partial class IaasVMRecoveryPoint : RecoveryPoint
    {
        /// <summary>
        /// Initializes a new instance of the IaasVMRecoveryPoint class.
        /// </summary>
        public IaasVMRecoveryPoint() { }

        /// <summary>
        /// Initializes a new instance of the IaasVMRecoveryPoint class.
        /// </summary>
        /// <param name="recoveryPointType">Type of the backup copy.</param>
        /// <param name="recoveryPointTime">Time at which this backup copy was
        /// created.</param>
        /// <param name="recoveryPointAdditionalInfo">Additional information
        /// associated with this backup copy.</param>
        /// <param name="sourceVMStorageType">Storage type of the VM whose
        /// backup copy is created.</param>
        /// <param name="isSourceVMEncrypted">Identifies whether the VM was
        /// encrypted when the backup copy is created.</param>
        /// <param name="keyAndSecret">Required details for recovering an
        /// encrypted VM. Applicable only when IsSourceVMEncrypted is
        /// true.</param>
        /// <param name="isInstantILRSessionActive">Is the session to recover
        /// items from this backup copy still active.</param>
        public IaasVMRecoveryPoint(string recoveryPointType = default(string), System.DateTime? recoveryPointTime = default(System.DateTime?), string recoveryPointAdditionalInfo = default(string), string sourceVMStorageType = default(string), bool? isSourceVMEncrypted = default(bool?), KeyAndSecretDetails keyAndSecret = default(KeyAndSecretDetails), bool? isInstantILRSessionActive = default(bool?))
        {
            RecoveryPointType = recoveryPointType;
            RecoveryPointTime = recoveryPointTime;
            RecoveryPointAdditionalInfo = recoveryPointAdditionalInfo;
            SourceVMStorageType = sourceVMStorageType;
            IsSourceVMEncrypted = isSourceVMEncrypted;
            KeyAndSecret = keyAndSecret;
            IsInstantILRSessionActive = isInstantILRSessionActive;
        }

        /// <summary>
        /// Gets or sets type of the backup copy.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "recoveryPointType")]
        public string RecoveryPointType { get; set; }

        /// <summary>
        /// Gets or sets time at which this backup copy was created.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "recoveryPointTime")]
        public System.DateTime? RecoveryPointTime { get; set; }

        /// <summary>
        /// Gets or sets additional information associated with this backup
        /// copy.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "recoveryPointAdditionalInfo")]
        public string RecoveryPointAdditionalInfo { get; set; }

        /// <summary>
        /// Gets or sets storage type of the VM whose backup copy is created.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sourceVMStorageType")]
        public string SourceVMStorageType { get; set; }

        /// <summary>
        /// Gets or sets identifies whether the VM was encrypted when the
        /// backup copy is created.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isSourceVMEncrypted")]
        public bool? IsSourceVMEncrypted { get; set; }

        /// <summary>
        /// Gets or sets required details for recovering an encrypted VM.
        /// Applicable only when IsSourceVMEncrypted is true.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "keyAndSecret")]
        public KeyAndSecretDetails KeyAndSecret { get; set; }

        /// <summary>
        /// Gets or sets is the session to recover items from this backup copy
        /// still active.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isInstantILRSessionActive")]
        public bool? IsInstantILRSessionActive { get; set; }

    }
}
