// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure;
using Microsoft.Azure.Management.RecoveryServices.Backup;
using Microsoft.Azure.Management.RecoveryServices.Backup.Models;

namespace Microsoft.Azure.Management.RecoveryServices.Backup
{
    public partial interface IRecoveryServicesBackupManagementClient : IDisposable
    {
        /// <summary>
        /// Gets the API version.
        /// </summary>
        string ApiVersion
        {
            get; 
        }
        
        /// <summary>
        /// Gets the URI used as the base for all cloud service requests.
        /// </summary>
        Uri BaseUri
        {
            get; 
        }
        
        /// <summary>
        /// Gets subscription credentials which uniquely identify Microsoft
        /// Azure subscription. The subscription ID forms part of the URI for
        /// every service call.
        /// </summary>
        SubscriptionCloudCredentials Credentials
        {
            get; 
        }
        
        /// <summary>
        /// Gets or sets the initial timeout for Long Running Operations.
        /// </summary>
        int LongRunningOperationInitialTimeout
        {
            get; set; 
        }
        
        /// <summary>
        /// Gets or sets the retry timeout for Long Running Operations.
        /// </summary>
        int LongRunningOperationRetryTimeout
        {
            get; set; 
        }
        
        /// <summary>
        /// Definition of Backup operations for the Azure Backup extension.
        /// </summary>
        IBackupOperations Backup
        {
            get; 
        }
        
        /// <summary>
        /// Definition of Container operations for the Azure Backup extension
        /// with RecoveryService Vault.
        /// </summary>
        IContainerOperation Container
        {
            get; 
        }
        
        /// <summary>
        /// Definition of Protectable Object operations for the Azure Backup
        /// extension.
        /// </summary>
        IProtectableObjectOperations ProtectableObject
        {
            get; 
        }
        
        /// <summary>
        /// Definition of Protected Item operations for the Azure Backup
        /// extension.
        /// </summary>
        IProtectedItemOperations DataSource
        {
            get; 
        }
        
        /// <summary>
        /// Definition of Protection Policy operations for the Azure Backup
        /// extension.
        /// </summary>
        IProtectionPolicyOperations ProtectionPolicy
        {
            get; 
        }
        
        /// <summary>
        /// Definition of Backup operations for the Azure Backup extension.
        /// </summary>
        IRecoveryPointOperations RecoveryPoint
        {
            get; 
        }
        
        /// <summary>
        /// Definition of Restore operations for the Azure Backup extension.
        /// </summary>
        IRestoreOperations Restore
        {
            get; 
        }
        
        /// <summary>
        /// Get the list of all Protection Policy.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// ResourceGroupName for recoveryServices Vault.
        /// </param>
        /// <param name='resourceName'>
        /// ResourceName for recoveryServices Vault.
        /// </param>
        /// <param name='policyName'>
        /// The protection policy Name to be fetched.
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Request header parameters.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The definition of a ProtectionPolicyResponse.
        /// </returns>
        Task<ProtectionPolicyResponse> GetAsync(string resourceGroupName, string resourceName, string policyName, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken);
        
        /// <summary>
        /// Get the list of all Protection Policy.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// ResourceGroupName for recoveryServices Vault.
        /// </param>
        /// <param name='resourceName'>
        /// ResourceName for recoveryServices Vault.
        /// </param>
        /// <param name='policyName'>
        /// The protection policy Name to be updated.
        /// </param>
        /// <param name='operationId'>
        /// OperationId to get operation result.
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Request header parameters.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The definition of a ProtectionPolicyResponse.
        /// </returns>
        Task<ProtectionPolicyResponse> GetOperationResultAsync(string resourceGroupName, string resourceName, string policyName, string operationId, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken);
    }
}
