// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;

namespace Microsoft.Azure.Management.Sql.Models
{
    /// <summary>
    /// Represents state info of a Recommended Action
    /// </summary>
    public partial class RecommendedActionStateInfo
    {
        private string _actionInitiatedBy;
        
        /// <summary>
        /// Optional. Gets who initiated the execution of this Recommended
        /// Action. Possible Value are: User    -> When User explicity
        /// notified system to apply the recommendation.System  -> When
        /// auto-execute status of this advisor is set to 'Enabled', in which
        /// case the System applies it.
        /// </summary>
        public string ActionInitiatedBy
        {
            get { return this._actionInitiatedBy; }
            set { this._actionInitiatedBy = value; }
        }
        
        private string _currentValue;
        
        /// <summary>
        /// Optional. Current state the Recommended Action is in. Some
        /// significant states common to all advisors are: Active      ->
        /// Recommendation is active and no action has been taken yet. Pending
        /// -> Recommendation is approved for and is awaiting execution.
        /// Executing   -> Recommendation is being applied on the user
        /// database. Verifying   -> Recommendation was applied and is being
        /// verified of its usefulness by the system. Success     ->
        /// Recommendation was applied and improvement found during
        /// verification. Pending Reverting   -> Verification found little to
        /// no improvement so Recommendation is queued for revert or User has
        /// manually revertedReverting   -> Changes made while applying
        /// recommendation are being reverted on the user database. Reverted
        /// -> Succesfully reverted the changes made by recommendation on
        /// user database. Ignored     -> User explicitly ignored/discarded
        /// the recommendation.
        /// </summary>
        public string CurrentValue
        {
            get { return this._currentValue; }
            set { this._currentValue = value; }
        }
        
        private DateTime _lastModified;
        
        /// <summary>
        /// Optional. Gets the time when state was last modified
        /// </summary>
        public DateTime LastModified
        {
            get { return this._lastModified; }
            set { this._lastModified = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the RecommendedActionStateInfo class.
        /// </summary>
        public RecommendedActionStateInfo()
        {
        }
    }
}
