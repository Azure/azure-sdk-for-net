// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure;
using Microsoft.Azure.Management.Sql;
using Microsoft.Azure.Management.Sql.Models;

namespace Microsoft.Azure.Management.Sql
{
    /// <summary>
    /// The Windows Azure SQL Database management API provides a RESTful set of
    /// web services that interact with Windows Azure SQL Database services to
    /// manage your databases. The API enables users to create, retrieve,
    /// update, and delete databases and servers.
    /// </summary>
    public static partial class FailoverGroupOperationsExtensions
    {
        /// <summary>
        /// Begins creating a new Azure SQL Database Failover Group or updating
        /// an existing Azure SQL Database Failover Group. To determine the
        /// status of the operation call GetFailoverGroupOperationStatus.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.IFailoverGroupOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the Azure SQL
        /// Database Server belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server on which the
        /// database is hosted.
        /// </param>
        /// <param name='failoverGroupName'>
        /// Required. The name of the Azure SQL Database Failover Group to be
        /// operated on (Updated or created).
        /// </param>
        /// <param name='parameters'>
        /// Required. The required parameters for createing or updating an
        /// Failover Group.
        /// </param>
        /// <returns>
        /// Response for long running Azure Sql Database Failover Group
        /// operation.
        /// </returns>
        public static FailoverGroupCreateOrUpdateResponse BeginCreateOrUpdate(this IFailoverGroupOperations operations, string resourceGroupName, string serverName, string failoverGroupName, FailoverGroupCreateOrUpdateParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IFailoverGroupOperations)s).BeginCreateOrUpdateAsync(resourceGroupName, serverName, failoverGroupName, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Begins creating a new Azure SQL Database Failover Group or updating
        /// an existing Azure SQL Database Failover Group. To determine the
        /// status of the operation call GetFailoverGroupOperationStatus.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.IFailoverGroupOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the Azure SQL
        /// Database Server belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server on which the
        /// database is hosted.
        /// </param>
        /// <param name='failoverGroupName'>
        /// Required. The name of the Azure SQL Database Failover Group to be
        /// operated on (Updated or created).
        /// </param>
        /// <param name='parameters'>
        /// Required. The required parameters for createing or updating an
        /// Failover Group.
        /// </param>
        /// <returns>
        /// Response for long running Azure Sql Database Failover Group
        /// operation.
        /// </returns>
        public static Task<FailoverGroupCreateOrUpdateResponse> BeginCreateOrUpdateAsync(this IFailoverGroupOperations operations, string resourceGroupName, string serverName, string failoverGroupName, FailoverGroupCreateOrUpdateParameters parameters)
        {
            return operations.BeginCreateOrUpdateAsync(resourceGroupName, serverName, failoverGroupName, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Begins adding databases to an existing Azure SQL Database Failover
        /// Group. To determine the status of the operation call
        /// GetFailoverGroupOperationStatus.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.IFailoverGroupOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the Azure SQL
        /// Database Server belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server on which the
        /// database is hosted.
        /// </param>
        /// <param name='failoverGroupName'>
        /// Required. The name of the Azure SQL Database Failover Group to be
        /// updated.
        /// </param>
        /// <param name='parameters'>
        /// Required. The required parameters for creating or updating an
        /// Failover Group.
        /// </param>
        /// <returns>
        /// Response for long running Azure Sql Database Failover Group
        /// operation.
        /// </returns>
        public static FailoverGroupPatchUpdateResponse BeginPatchUpdate(this IFailoverGroupOperations operations, string resourceGroupName, string serverName, string failoverGroupName, FailoverGroupPatchUpdateParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IFailoverGroupOperations)s).BeginPatchUpdateAsync(resourceGroupName, serverName, failoverGroupName, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Begins adding databases to an existing Azure SQL Database Failover
        /// Group. To determine the status of the operation call
        /// GetFailoverGroupOperationStatus.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.IFailoverGroupOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the Azure SQL
        /// Database Server belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server on which the
        /// database is hosted.
        /// </param>
        /// <param name='failoverGroupName'>
        /// Required. The name of the Azure SQL Database Failover Group to be
        /// updated.
        /// </param>
        /// <param name='parameters'>
        /// Required. The required parameters for creating or updating an
        /// Failover Group.
        /// </param>
        /// <returns>
        /// Response for long running Azure Sql Database Failover Group
        /// operation.
        /// </returns>
        public static Task<FailoverGroupPatchUpdateResponse> BeginPatchUpdateAsync(this IFailoverGroupOperations operations, string resourceGroupName, string serverName, string failoverGroupName, FailoverGroupPatchUpdateParameters parameters)
        {
            return operations.BeginPatchUpdateAsync(resourceGroupName, serverName, failoverGroupName, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Creates a new Azure SQL Database Failover Group or updates an
        /// existing Azure SQL Database Failover Group.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.IFailoverGroupOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the Azure SQL
        /// Database Server belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server on which the
        /// Azure SQL Database Failover Group is hosted.
        /// </param>
        /// <param name='failoverGroupName'>
        /// Required. The name of the Azure SQL Database Failover Group to be
        /// operated on (updated or created).
        /// </param>
        /// <param name='parameters'>
        /// Required. The required parameters for creating or updating an Azure
        /// Sql Databaser Failover Group.
        /// </param>
        /// <returns>
        /// Response for long running Azure Sql Database Failover Group
        /// operation.
        /// </returns>
        public static FailoverGroupCreateOrUpdateResponse CreateOrUpdate(this IFailoverGroupOperations operations, string resourceGroupName, string serverName, string failoverGroupName, FailoverGroupCreateOrUpdateParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IFailoverGroupOperations)s).CreateOrUpdateAsync(resourceGroupName, serverName, failoverGroupName, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Creates a new Azure SQL Database Failover Group or updates an
        /// existing Azure SQL Database Failover Group.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.IFailoverGroupOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the Azure SQL
        /// Database Server belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server on which the
        /// Azure SQL Database Failover Group is hosted.
        /// </param>
        /// <param name='failoverGroupName'>
        /// Required. The name of the Azure SQL Database Failover Group to be
        /// operated on (updated or created).
        /// </param>
        /// <param name='parameters'>
        /// Required. The required parameters for creating or updating an Azure
        /// Sql Databaser Failover Group.
        /// </param>
        /// <returns>
        /// Response for long running Azure Sql Database Failover Group
        /// operation.
        /// </returns>
        public static Task<FailoverGroupCreateOrUpdateResponse> CreateOrUpdateAsync(this IFailoverGroupOperations operations, string resourceGroupName, string serverName, string failoverGroupName, FailoverGroupCreateOrUpdateParameters parameters)
        {
            return operations.CreateOrUpdateAsync(resourceGroupName, serverName, failoverGroupName, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Deletes the Azure SQL Database Failover Group with the given name.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.IFailoverGroupOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the Azure SQL
        /// Database Server belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server on which the
        /// Azure SQL Database Failover Group is hosted.
        /// </param>
        /// <param name='failoverGroupName'>
        /// Required. The name of the Azure SQL Database Failover Group to be
        /// deleted.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static AzureOperationResponse Delete(this IFailoverGroupOperations operations, string resourceGroupName, string serverName, string failoverGroupName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IFailoverGroupOperations)s).DeleteAsync(resourceGroupName, serverName, failoverGroupName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Deletes the Azure SQL Database Failover Group with the given name.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.IFailoverGroupOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the Azure SQL
        /// Database Server belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server on which the
        /// Azure SQL Database Failover Group is hosted.
        /// </param>
        /// <param name='failoverGroupName'>
        /// Required. The name of the Azure SQL Database Failover Group to be
        /// deleted.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<AzureOperationResponse> DeleteAsync(this IFailoverGroupOperations operations, string resourceGroupName, string serverName, string failoverGroupName)
        {
            return operations.DeleteAsync(resourceGroupName, serverName, failoverGroupName, CancellationToken.None);
        }
        
        /// <summary>
        /// Issue the failover operation without data loss for the Azure SQL
        /// Database Failover Group with the given name.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.IFailoverGroupOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the Azure SQL
        /// Database Server belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server on which the
        /// Azure SQL Database Failover Group is hosted.
        /// </param>
        /// <param name='failoverGroupName'>
        /// Required. The name of the Azure SQL Database Failover Group to be
        /// failovered.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static AzureOperationResponse Failover(this IFailoverGroupOperations operations, string resourceGroupName, string serverName, string failoverGroupName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IFailoverGroupOperations)s).FailoverAsync(resourceGroupName, serverName, failoverGroupName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Issue the failover operation without data loss for the Azure SQL
        /// Database Failover Group with the given name.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.IFailoverGroupOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the Azure SQL
        /// Database Server belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server on which the
        /// Azure SQL Database Failover Group is hosted.
        /// </param>
        /// <param name='failoverGroupName'>
        /// Required. The name of the Azure SQL Database Failover Group to be
        /// failovered.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<AzureOperationResponse> FailoverAsync(this IFailoverGroupOperations operations, string resourceGroupName, string serverName, string failoverGroupName)
        {
            return operations.FailoverAsync(resourceGroupName, serverName, failoverGroupName, CancellationToken.None);
        }
        
        /// <summary>
        /// Issue the forced failover operation with data loss for the Azure
        /// SQL Database Failover Group with the given name.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.IFailoverGroupOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the Azure SQL
        /// Database Server belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server on which the
        /// Azure SQL Database Failover Group is hosted.
        /// </param>
        /// <param name='failoverGroupName'>
        /// Required. The name of the Azure SQL Database Failover Group to be
        /// force failovered.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static AzureOperationResponse ForceFailoverAllowDataLoss(this IFailoverGroupOperations operations, string resourceGroupName, string serverName, string failoverGroupName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IFailoverGroupOperations)s).ForceFailoverAllowDataLossAsync(resourceGroupName, serverName, failoverGroupName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Issue the forced failover operation with data loss for the Azure
        /// SQL Database Failover Group with the given name.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.IFailoverGroupOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the Azure SQL
        /// Database Server belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server on which the
        /// Azure SQL Database Failover Group is hosted.
        /// </param>
        /// <param name='failoverGroupName'>
        /// Required. The name of the Azure SQL Database Failover Group to be
        /// force failovered.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<AzureOperationResponse> ForceFailoverAllowDataLossAsync(this IFailoverGroupOperations operations, string resourceGroupName, string serverName, string failoverGroupName)
        {
            return operations.ForceFailoverAllowDataLossAsync(resourceGroupName, serverName, failoverGroupName, CancellationToken.None);
        }
        
        /// <summary>
        /// Returns information about an Azure SQL Database Failover Group.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.IFailoverGroupOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the Azure SQL
        /// Database Server belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server on which the
        /// Azure SQL Database Failover Group belongs.
        /// </param>
        /// <param name='failoverGroupName'>
        /// Required. The name of the Azure SQL Database Failover Group to be
        /// retrieved.
        /// </param>
        /// <returns>
        /// Represents the response to a Get Azure Sql Failover Group request.
        /// </returns>
        public static FailoverGroupGetResponse Get(this IFailoverGroupOperations operations, string resourceGroupName, string serverName, string failoverGroupName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IFailoverGroupOperations)s).GetAsync(resourceGroupName, serverName, failoverGroupName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Returns information about an Azure SQL Database Failover Group.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.IFailoverGroupOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the Azure SQL
        /// Database Server belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server on which the
        /// Azure SQL Database Failover Group belongs.
        /// </param>
        /// <param name='failoverGroupName'>
        /// Required. The name of the Azure SQL Database Failover Group to be
        /// retrieved.
        /// </param>
        /// <returns>
        /// Represents the response to a Get Azure Sql Failover Group request.
        /// </returns>
        public static Task<FailoverGroupGetResponse> GetAsync(this IFailoverGroupOperations operations, string resourceGroupName, string serverName, string failoverGroupName)
        {
            return operations.GetAsync(resourceGroupName, serverName, failoverGroupName, CancellationToken.None);
        }
        
        /// <summary>
        /// Gets the status of an Azure Sql Database Failover Group create or
        /// update operation.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.IFailoverGroupOperations.
        /// </param>
        /// <param name='operationStatusLink'>
        /// Required. Location value returned by the Begin operation
        /// </param>
        /// <returns>
        /// Response for long running Azure Sql Database Failover Group
        /// operation.
        /// </returns>
        public static FailoverGroupCreateOrUpdateResponse GetFailoverGroupOperationStatus(this IFailoverGroupOperations operations, string operationStatusLink)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IFailoverGroupOperations)s).GetFailoverGroupOperationStatusAsync(operationStatusLink);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Gets the status of an Azure Sql Database Failover Group create or
        /// update operation.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.IFailoverGroupOperations.
        /// </param>
        /// <param name='operationStatusLink'>
        /// Required. Location value returned by the Begin operation
        /// </param>
        /// <returns>
        /// Response for long running Azure Sql Database Failover Group
        /// operation.
        /// </returns>
        public static Task<FailoverGroupCreateOrUpdateResponse> GetFailoverGroupOperationStatusAsync(this IFailoverGroupOperations operations, string operationStatusLink)
        {
            return operations.GetFailoverGroupOperationStatusAsync(operationStatusLink, CancellationToken.None);
        }
        
        /// <summary>
        /// Gets the status of an Azure Sql Database Failover Group Patch
        /// update operation.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.IFailoverGroupOperations.
        /// </param>
        /// <param name='operationStatusLink'>
        /// Required. Location value returned by the Begin operation
        /// </param>
        /// <returns>
        /// Response for long running Azure Sql Database Failover Group
        /// operation.
        /// </returns>
        public static FailoverGroupPatchUpdateResponse GetFailoverGroupPatchUpdateOperationStatus(this IFailoverGroupOperations operations, string operationStatusLink)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IFailoverGroupOperations)s).GetFailoverGroupPatchUpdateOperationStatusAsync(operationStatusLink);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Gets the status of an Azure Sql Database Failover Group Patch
        /// update operation.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.IFailoverGroupOperations.
        /// </param>
        /// <param name='operationStatusLink'>
        /// Required. Location value returned by the Begin operation
        /// </param>
        /// <returns>
        /// Response for long running Azure Sql Database Failover Group
        /// operation.
        /// </returns>
        public static Task<FailoverGroupPatchUpdateResponse> GetFailoverGroupPatchUpdateOperationStatusAsync(this IFailoverGroupOperations operations, string operationStatusLink)
        {
            return operations.GetFailoverGroupPatchUpdateOperationStatusAsync(operationStatusLink, CancellationToken.None);
        }
        
        /// <summary>
        /// Returns information about Azure SQL Database Failover Groups.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.IFailoverGroupOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the Azure SQL
        /// Database Serve belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server in which Azure
        /// SQL Database Failover Groups belong.
        /// </param>
        /// <returns>
        /// Represents the response to a List Azure Sql Failover Group request.
        /// </returns>
        public static FailoverGroupListResponse List(this IFailoverGroupOperations operations, string resourceGroupName, string serverName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IFailoverGroupOperations)s).ListAsync(resourceGroupName, serverName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Returns information about Azure SQL Database Failover Groups.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.IFailoverGroupOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the Azure SQL
        /// Database Serve belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server in which Azure
        /// SQL Database Failover Groups belong.
        /// </param>
        /// <returns>
        /// Represents the response to a List Azure Sql Failover Group request.
        /// </returns>
        public static Task<FailoverGroupListResponse> ListAsync(this IFailoverGroupOperations operations, string resourceGroupName, string serverName)
        {
            return operations.ListAsync(resourceGroupName, serverName, CancellationToken.None);
        }
        
        /// <summary>
        /// Updates an existing Azure SQL Database Failover Group.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.IFailoverGroupOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the Azure SQL
        /// Database Server belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server on which the
        /// Azure SQL Database Failover Group is hosted.
        /// </param>
        /// <param name='failoverGroupName'>
        /// Required. The name of the Azure SQL Database Failover Group to be
        /// updated.
        /// </param>
        /// <param name='parameters'>
        /// Required. The required parameters for patch updating an Azure Sql
        /// Databaser Failover Group.
        /// </param>
        /// <returns>
        /// Response for long running Azure Sql Database Failover Group
        /// operation.
        /// </returns>
        public static FailoverGroupPatchUpdateResponse PatchUpdate(this IFailoverGroupOperations operations, string resourceGroupName, string serverName, string failoverGroupName, FailoverGroupPatchUpdateParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IFailoverGroupOperations)s).PatchUpdateAsync(resourceGroupName, serverName, failoverGroupName, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Updates an existing Azure SQL Database Failover Group.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.IFailoverGroupOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the Azure SQL
        /// Database Server belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server on which the
        /// Azure SQL Database Failover Group is hosted.
        /// </param>
        /// <param name='failoverGroupName'>
        /// Required. The name of the Azure SQL Database Failover Group to be
        /// updated.
        /// </param>
        /// <param name='parameters'>
        /// Required. The required parameters for patch updating an Azure Sql
        /// Databaser Failover Group.
        /// </param>
        /// <returns>
        /// Response for long running Azure Sql Database Failover Group
        /// operation.
        /// </returns>
        public static Task<FailoverGroupPatchUpdateResponse> PatchUpdateAsync(this IFailoverGroupOperations operations, string resourceGroupName, string serverName, string failoverGroupName, FailoverGroupPatchUpdateParameters parameters)
        {
            return operations.PatchUpdateAsync(resourceGroupName, serverName, failoverGroupName, parameters, CancellationToken.None);
        }
    }
}
