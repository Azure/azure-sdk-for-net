// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure.Management.Sql;
using Microsoft.Azure.Management.Sql.Models;

namespace Microsoft.Azure.Management.Sql
{
    /// <summary>
    /// The Windows Azure SQL Database management API provides a RESTful set of
    /// web services that interact with Windows Azure SQL Database services to
    /// manage your databases. The API enables users to create, retrieve,
    /// update, and delete databases and servers.
    /// </summary>
    public static partial class DatabaseBackupOperationsExtensions
    {
        /// <summary>
        /// Returns an Azure SQL deleted database backup (a resource
        /// representing a deleted database that can be restored).
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.IDatabaseBackupOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the server
        /// belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server to retrieve
        /// deleted databases for.
        /// </param>
        /// <param name='databaseName'>
        /// Required. The name of the Azure SQL Database Database to retrieve
        /// deleted databases for.
        /// </param>
        /// <returns>
        /// Represents the response to a Get Azure Sql Database deleted
        /// database backup request.
        /// </returns>
        public static DeletedDatabaseBackupGetResponse GetDeletedDatabaseBackup(this IDatabaseBackupOperations operations, string resourceGroupName, string serverName, string databaseName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IDatabaseBackupOperations)s).GetDeletedDatabaseBackupAsync(resourceGroupName, serverName, databaseName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Returns an Azure SQL deleted database backup (a resource
        /// representing a deleted database that can be restored).
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.IDatabaseBackupOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the server
        /// belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server to retrieve
        /// deleted databases for.
        /// </param>
        /// <param name='databaseName'>
        /// Required. The name of the Azure SQL Database Database to retrieve
        /// deleted databases for.
        /// </param>
        /// <returns>
        /// Represents the response to a Get Azure Sql Database deleted
        /// database backup request.
        /// </returns>
        public static Task<DeletedDatabaseBackupGetResponse> GetDeletedDatabaseBackupAsync(this IDatabaseBackupOperations operations, string resourceGroupName, string serverName, string databaseName)
        {
            return operations.GetDeletedDatabaseBackupAsync(resourceGroupName, serverName, databaseName, CancellationToken.None);
        }
        
        /// <summary>
        /// Returns an Azure SQL Database geo backup.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.IDatabaseBackupOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the server
        /// belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server to retrieve geo
        /// backups for.
        /// </param>
        /// <param name='databaseName'>
        /// Required. The name of the Azure SQL Database to retrieve geo
        /// backups for.
        /// </param>
        /// <returns>
        /// Represents the response to a Get Azure Sql Database geo backup
        /// request.
        /// </returns>
        public static GeoBackupGetResponse GetGeoBackup(this IDatabaseBackupOperations operations, string resourceGroupName, string serverName, string databaseName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IDatabaseBackupOperations)s).GetGeoBackupAsync(resourceGroupName, serverName, databaseName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Returns an Azure SQL Database geo backup.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.IDatabaseBackupOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the server
        /// belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server to retrieve geo
        /// backups for.
        /// </param>
        /// <param name='databaseName'>
        /// Required. The name of the Azure SQL Database to retrieve geo
        /// backups for.
        /// </param>
        /// <returns>
        /// Represents the response to a Get Azure Sql Database geo backup
        /// request.
        /// </returns>
        public static Task<GeoBackupGetResponse> GetGeoBackupAsync(this IDatabaseBackupOperations operations, string resourceGroupName, string serverName, string databaseName)
        {
            return operations.GetGeoBackupAsync(resourceGroupName, serverName, databaseName, CancellationToken.None);
        }
        
        /// <summary>
        /// Returns a list of Azure SQL deleted database backups (a resource
        /// representing a deleted database that can be restored).
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.IDatabaseBackupOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the server
        /// belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server to retrieve
        /// deleted databases for.
        /// </param>
        /// <returns>
        /// Represents the response to a List Azure Sql Database deleted
        /// database backups request.
        /// </returns>
        public static DeletedDatabaseBackupListResponse ListDeletedDatabaseBackups(this IDatabaseBackupOperations operations, string resourceGroupName, string serverName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IDatabaseBackupOperations)s).ListDeletedDatabaseBackupsAsync(resourceGroupName, serverName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Returns a list of Azure SQL deleted database backups (a resource
        /// representing a deleted database that can be restored).
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.IDatabaseBackupOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the server
        /// belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server to retrieve
        /// deleted databases for.
        /// </param>
        /// <returns>
        /// Represents the response to a List Azure Sql Database deleted
        /// database backups request.
        /// </returns>
        public static Task<DeletedDatabaseBackupListResponse> ListDeletedDatabaseBackupsAsync(this IDatabaseBackupOperations operations, string resourceGroupName, string serverName)
        {
            return operations.ListDeletedDatabaseBackupsAsync(resourceGroupName, serverName, CancellationToken.None);
        }
        
        /// <summary>
        /// Returns a list of Azure SQL Database geo backups.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.IDatabaseBackupOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the server
        /// belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server to retrieve geo
        /// backups for.
        /// </param>
        /// <returns>
        /// Represents the response to a List Azure Sql Database geo backups
        /// request.
        /// </returns>
        public static GeoBackupListResponse ListGeoBackups(this IDatabaseBackupOperations operations, string resourceGroupName, string serverName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IDatabaseBackupOperations)s).ListGeoBackupsAsync(resourceGroupName, serverName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Returns a list of Azure SQL Database geo backups.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.IDatabaseBackupOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the server
        /// belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server to retrieve geo
        /// backups for.
        /// </param>
        /// <returns>
        /// Represents the response to a List Azure Sql Database geo backups
        /// request.
        /// </returns>
        public static Task<GeoBackupListResponse> ListGeoBackupsAsync(this IDatabaseBackupOperations operations, string resourceGroupName, string serverName)
        {
            return operations.ListGeoBackupsAsync(resourceGroupName, serverName, CancellationToken.None);
        }
        
        /// <summary>
        /// Returns a list of Azure SQL Database restore points.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.IDatabaseBackupOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the server
        /// belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server on which the
        /// database is hosted.
        /// </param>
        /// <param name='databaseName'>
        /// Required. The name of the Azure SQL Database from which to retrieve
        /// available restore points.
        /// </param>
        /// <returns>
        /// Represents the response to a List Azure Sql Database restore points
        /// request.
        /// </returns>
        public static RestorePointListResponse ListRestorePoints(this IDatabaseBackupOperations operations, string resourceGroupName, string serverName, string databaseName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IDatabaseBackupOperations)s).ListRestorePointsAsync(resourceGroupName, serverName, databaseName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Returns a list of Azure SQL Database restore points.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Sql.IDatabaseBackupOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the Resource Group to which the server
        /// belongs.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server on which the
        /// database is hosted.
        /// </param>
        /// <param name='databaseName'>
        /// Required. The name of the Azure SQL Database from which to retrieve
        /// available restore points.
        /// </param>
        /// <returns>
        /// Represents the response to a List Azure Sql Database restore points
        /// request.
        /// </returns>
        public static Task<RestorePointListResponse> ListRestorePointsAsync(this IDatabaseBackupOperations operations, string resourceGroupName, string serverName, string databaseName)
        {
            return operations.ListRestorePointsAsync(resourceGroupName, serverName, databaseName, CancellationToken.None);
        }
    }
}
