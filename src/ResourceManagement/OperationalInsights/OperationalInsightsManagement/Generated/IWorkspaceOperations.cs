// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure;
using Microsoft.Azure.Management.OperationalInsights.Models;

namespace Microsoft.Azure.Management.OperationalInsights
{
    /// <summary>
    /// Operations for managing Operational Insights workspaces.
    /// </summary>
    public partial interface IWorkspaceOperations
    {
        /// <summary>
        /// Create or update a workspace.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The resource group name of the workspace.
        /// </param>
        /// <param name='parameters'>
        /// The parameters required to create or update a workspace.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The create or update workspace operation response.
        /// </returns>
        Task<WorkspaceCreateOrUpdateResponse> BeginCreateOrUpdateAsync(string resourceGroupName, WorkspaceCreateOrUpdateParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// Create or update a workspace.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The resource group name of the workspace.
        /// </param>
        /// <param name='parameters'>
        /// The parameters required to create or update a workspace.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The create or update workspace operation response.
        /// </returns>
        Task<WorkspaceCreateOrUpdateResponse> CreateOrUpdateAsync(string resourceGroupName, WorkspaceCreateOrUpdateParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// Deletes a workspace instance.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The resource group name of the workspace.
        /// </param>
        /// <param name='workspaceName'>
        /// A unique workspace instance name.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<AzureOperationResponse> DeleteAsync(string resourceGroupName, string workspaceName, CancellationToken cancellationToken);
        
        /// <summary>
        /// Gets a workspace instance.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The resource group name of the workspace.
        /// </param>
        /// <param name='workspaceName'>
        /// A unique workspace instance name.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The get workspace operation response.
        /// </returns>
        Task<WorkspaceGetResponse> GetAsync(string resourceGroupName, string workspaceName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Get Operation Status operation returns the status of the
        /// specified operation. After calling an asynchronous operation, you
        /// can call Get Operation Status to determine whether the operation
        /// has succeeded, failed, or is still in progress.
        /// </summary>
        /// <param name='operationStatusLink'>
        /// Location value returned by the BeginCreateOrUpdate operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The create or update workspace operation response.
        /// </returns>
        Task<WorkspaceCreateOrUpdateResponse> GetCreateOrUpdateStatusAsync(string operationStatusLink, CancellationToken cancellationToken);
        
        /// <summary>
        /// Gets the shared keys for a workspace.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The resource group name of the workspace.
        /// </param>
        /// <param name='workspaceName'>
        /// A unique workspace name.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The get workspace shared keys operation response.
        /// </returns>
        Task<WorkspaceGetSharedKeysResponse> GetSharedKeysAsync(string resourceGroupName, string workspaceName, CancellationToken cancellationToken);
        
        /// <summary>
        /// Gets the first page of workspace instances in a resource group with
        /// the link to the next page.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The resource group name of the workspaces.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The list workspaces operation response.
        /// </returns>
        Task<WorkspaceListResponse> ListInResourceGroupAsync(string resourceGroupName, CancellationToken cancellationToken);
        
        /// <summary>
        /// Gets the first page of workspace instances in a subscription with
        /// the link to the next page.
        /// </summary>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The list workspaces operation response.
        /// </returns>
        Task<WorkspaceListResponse> ListInSubscriptionAsync(CancellationToken cancellationToken);
        
        /// <summary>
        /// Gets a list of accounts with administrator privileges that are not
        /// associated with an existing workspace.
        /// </summary>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The list workspace link targets operation response.
        /// </returns>
        Task<WorkspaceListLinkTargetsResponse> ListLinkTargetsAsync(CancellationToken cancellationToken);
        
        /// <summary>
        /// Gets a list of management groups connected to a workspace.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The resource group name of the workspace.
        /// </param>
        /// <param name='workspaceName'>
        /// The name of the workspace.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The list workspace managmement groups operation response.
        /// </returns>
        Task<WorkspaceListManagementGroupsResponse> ListManagementGroupsAsync(string resourceGroupName, string workspaceName, CancellationToken cancellationToken);
        
        /// <summary>
        /// Gets the next page of workspace instances with the link to the next
        /// page.
        /// </summary>
        /// <param name='nextLink'>
        /// The url to the next workspaces page.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The list workspaces operation response.
        /// </returns>
        Task<WorkspaceListResponse> ListNextAsync(string nextLink, CancellationToken cancellationToken);
        
        /// <summary>
        /// Gets the next page of management groups with the link to the next
        /// page.
        /// </summary>
        /// <param name='nextLink'>
        /// The url to the next management groups page.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The list workspace managmement groups operation response.
        /// </returns>
        Task<WorkspaceListManagementGroupsResponse> ListNextManagementGroupsAsync(string nextLink, CancellationToken cancellationToken);
        
        /// <summary>
        /// Gets a list of usage metrics for a workspace.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The resource group name of the workspace.
        /// </param>
        /// <param name='workspaceName'>
        /// The name of the workspace.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The list workspace usages operation response.
        /// </returns>
        Task<WorkspaceListUsagesResponse> ListUsagesAsync(string resourceGroupName, string workspaceName, CancellationToken cancellationToken);
    }
}
