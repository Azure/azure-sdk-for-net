// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Compute.Fluent.Models
{
    using Azure;
    using Management;
    using Compute;
    using Fluent;
    using Rest;
    using Rest.Azure;
    using Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Describes a virtual machine scale set network profile's IP
    /// configuration.
    /// </summary>
    [JsonTransformation]
    public partial class VirtualMachineScaleSetIPConfigurationInner : Microsoft.Azure.Management.ResourceManager.Fluent.SubResource
    {
        /// <summary>
        /// Initializes a new instance of the
        /// VirtualMachineScaleSetIPConfigurationInner class.
        /// </summary>
        public VirtualMachineScaleSetIPConfigurationInner() { }

        /// <summary>
        /// Initializes a new instance of the
        /// VirtualMachineScaleSetIPConfigurationInner class.
        /// </summary>
        /// <param name="name">The IP configuration name.</param>
        /// <param name="subnet">The subnet.</param>
        /// <param name="applicationGatewayBackendAddressPools">The application
        /// gateway backend address pools.</param>
        /// <param name="loadBalancerBackendAddressPools">The load balancer
        /// backend address pools.</param>
        /// <param name="loadBalancerInboundNatPools">The load balancer inbound
        /// nat pools.</param>
        public VirtualMachineScaleSetIPConfigurationInner(string name, ApiEntityReference subnet, string id = default(string), IList<Microsoft.Azure.Management.ResourceManager.Fluent.SubResource> applicationGatewayBackendAddressPools = default(IList<Microsoft.Azure.Management.ResourceManager.Fluent.SubResource>), IList<Microsoft.Azure.Management.ResourceManager.Fluent.SubResource> loadBalancerBackendAddressPools = default(IList<Microsoft.Azure.Management.ResourceManager.Fluent.SubResource>), IList<Microsoft.Azure.Management.ResourceManager.Fluent.SubResource> loadBalancerInboundNatPools = default(IList<Microsoft.Azure.Management.ResourceManager.Fluent.SubResource>))
            : base(id)
        {
            Name = name;
            Subnet = subnet;
            ApplicationGatewayBackendAddressPools = applicationGatewayBackendAddressPools;
            LoadBalancerBackendAddressPools = loadBalancerBackendAddressPools;
            LoadBalancerInboundNatPools = loadBalancerInboundNatPools;
        }

        /// <summary>
        /// Gets or sets the IP configuration name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the subnet.
        /// </summary>
        [JsonProperty(PropertyName = "properties.subnet")]
        public ApiEntityReference Subnet { get; set; }

        /// <summary>
        /// Gets or sets the application gateway backend address pools.
        /// </summary>
        [JsonProperty(PropertyName = "properties.applicationGatewayBackendAddressPools")]
        public IList<Microsoft.Azure.Management.ResourceManager.Fluent.SubResource> ApplicationGatewayBackendAddressPools { get; set; }

        /// <summary>
        /// Gets or sets the load balancer backend address pools.
        /// </summary>
        [JsonProperty(PropertyName = "properties.loadBalancerBackendAddressPools")]
        public IList<Microsoft.Azure.Management.ResourceManager.Fluent.SubResource> LoadBalancerBackendAddressPools { get; set; }

        /// <summary>
        /// Gets or sets the load balancer inbound nat pools.
        /// </summary>
        [JsonProperty(PropertyName = "properties.loadBalancerInboundNatPools")]
        public IList<Microsoft.Azure.Management.ResourceManager.Fluent.SubResource> LoadBalancerInboundNatPools { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Subnet == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Subnet");
            }
        }
    }
}

