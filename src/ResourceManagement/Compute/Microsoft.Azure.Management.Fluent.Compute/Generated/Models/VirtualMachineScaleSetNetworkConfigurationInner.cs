// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Compute.Models
{
    using System.Linq;

    /// <summary>
    /// Describes a virtual machine scale set network profile's network
    /// configurations.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class VirtualMachineScaleSetNetworkConfigurationInner : Microsoft.Rest.Azure.SubResource
    {
        /// <summary>
        /// Initializes a new instance of the
        /// VirtualMachineScaleSetNetworkConfigurationInner class.
        /// </summary>
        public VirtualMachineScaleSetNetworkConfigurationInner() { }

        /// <summary>
        /// Initializes a new instance of the
        /// VirtualMachineScaleSetNetworkConfigurationInner class.
        /// </summary>
        /// <param name="name">the network configuration name.</param>
        /// <param name="ipConfigurations">the virtual machine scale set IP
        /// Configuration.</param>
        /// <param name="primary">whether this is a primary NIC on a virtual
        /// machine.</param>
        public VirtualMachineScaleSetNetworkConfigurationInner(string name, System.Collections.Generic.IList<VirtualMachineScaleSetIPConfigurationInner> ipConfigurations, string id = default(string), bool? primary = default(bool?))
            : base(id)
        {
            Name = name;
            Primary = primary;
            IpConfigurations = ipConfigurations;
        }

        /// <summary>
        /// Gets or sets the network configuration name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets whether this is a primary NIC on a virtual machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.primary")]
        public bool? Primary { get; set; }

        /// <summary>
        /// Gets or sets the virtual machine scale set IP Configuration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.ipConfigurations")]
        public System.Collections.Generic.IList<VirtualMachineScaleSetIPConfigurationInner> IpConfigurations { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Name");
            }
            if (IpConfigurations == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "IpConfigurations");
            }
            if (this.IpConfigurations != null)
            {
                foreach (var element in this.IpConfigurations)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
