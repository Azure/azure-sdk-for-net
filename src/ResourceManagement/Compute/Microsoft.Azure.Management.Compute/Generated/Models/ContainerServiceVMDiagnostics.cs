// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Compute.Models
{
    using Azure;
    using Management;
    using Compute;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Profile for diagnostics on the container service VMs.
    /// </summary>
    public partial class ContainerServiceVMDiagnostics
    {
        /// <summary>
        /// Initializes a new instance of the ContainerServiceVMDiagnostics
        /// class.
        /// </summary>
        public ContainerServiceVMDiagnostics() { }

        /// <summary>
        /// Initializes a new instance of the ContainerServiceVMDiagnostics
        /// class.
        /// </summary>
        /// <param name="enabled">Whether the VM diagnostic agent is
        /// provisioned on the VM.</param>
        /// <param name="storageUri">The URI of the storage account where
        /// diagnostics are stored.</param>
        public ContainerServiceVMDiagnostics(bool enabled, string storageUri = default(string))
        {
            Enabled = enabled;
            StorageUri = storageUri;
        }

        /// <summary>
        /// Gets or sets whether the VM diagnostic agent is provisioned on the
        /// VM.
        /// </summary>
        [JsonProperty(PropertyName = "enabled")]
        public bool Enabled { get; set; }

        /// <summary>
        /// Gets the URI of the storage account where diagnostics are stored.
        /// </summary>
        [JsonProperty(PropertyName = "storageUri")]
        public string StorageUri { get; protected set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}

