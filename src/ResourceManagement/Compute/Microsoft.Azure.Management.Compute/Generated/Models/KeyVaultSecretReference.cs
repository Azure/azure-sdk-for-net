// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.13.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Compute.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// Describes a reference to Key Vault Secret
    /// </summary>
    public partial class KeyVaultSecretReference
    {
        /// <summary>
        /// Initializes a new instance of the KeyVaultSecretReference class.
        /// </summary>
        public KeyVaultSecretReference() { }

        /// <summary>
        /// Initializes a new instance of the KeyVaultSecretReference class.
        /// </summary>
        public KeyVaultSecretReference(string secretUrl, SubResource sourceVault)
        {
            SecretUrl = secretUrl;
            SourceVault = sourceVault;
        }

        /// <summary>
        /// Gets or sets the URL referencing a secret in a Key Vault.
        /// </summary>
        [JsonProperty(PropertyName = "secretUrl")]
        public string SecretUrl { get; set; }

        /// <summary>
        /// Gets or sets the Relative URL of the Key Vault containing the
        /// secret.
        /// </summary>
        [JsonProperty(PropertyName = "sourceVault")]
        public SubResource SourceVault { get; set; }

        /// <summary>
        /// Validate the object. Throws ArgumentException or ArgumentNullException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (SecretUrl == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SecretUrl");
            }
            if (SourceVault == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SourceVault");
            }
        }
    }
}
