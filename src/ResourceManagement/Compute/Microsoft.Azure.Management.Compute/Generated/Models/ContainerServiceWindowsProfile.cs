// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Compute.Models
{
    using System.Linq;

    /// <summary>
    /// Profile for Windows VMs
    /// </summary>
    public partial class ContainerServiceWindowsProfile
    {
        /// <summary>
        /// Initializes a new instance of the ContainerServiceWindowsProfile
        /// class.
        /// </summary>
        public ContainerServiceWindowsProfile() { }

        /// <summary>
        /// Initializes a new instance of the ContainerServiceWindowsProfile
        /// class.
        /// </summary>
        /// <param name="adminUsername">The administrator username to use for
        /// Windows VMs</param>
        /// <param name="adminPassword">The administrator password to use for
        /// Windows VMs</param>
        public ContainerServiceWindowsProfile(string adminUsername, string adminPassword)
        {
            AdminUsername = adminUsername;
            AdminPassword = adminPassword;
        }

        /// <summary>
        /// Gets or sets the administrator username to use for Windows VMs
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "adminUsername")]
        public string AdminUsername { get; set; }

        /// <summary>
        /// Gets or sets the administrator password to use for Windows VMs
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "adminPassword")]
        public string AdminPassword { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (AdminUsername == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "AdminUsername");
            }
            if (AdminPassword == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "AdminPassword");
            }
        }
    }
}
