// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Compute.Models
{
    using Azure;
    using Management;
    using Compute;
    using Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Profile for Linux VMs in the container service cluster.
    /// </summary>
    public partial class ContainerServiceLinuxProfile
    {
        /// <summary>
        /// Initializes a new instance of the ContainerServiceLinuxProfile
        /// class.
        /// </summary>
        public ContainerServiceLinuxProfile() { }

        /// <summary>
        /// Initializes a new instance of the ContainerServiceLinuxProfile
        /// class.
        /// </summary>
        /// <param name="adminUsername">The administrator username to use for
        /// Linux VMs.</param>
        /// <param name="ssh">The ssh key configuration for Linux VMs.</param>
        public ContainerServiceLinuxProfile(string adminUsername, ContainerServiceSshConfiguration ssh)
        {
            AdminUsername = adminUsername;
            Ssh = ssh;
        }

        /// <summary>
        /// Gets or sets the administrator username to use for Linux VMs.
        /// </summary>
        [JsonProperty(PropertyName = "adminUsername")]
        public string AdminUsername { get; set; }

        /// <summary>
        /// Gets or sets the ssh key configuration for Linux VMs.
        /// </summary>
        [JsonProperty(PropertyName = "ssh")]
        public ContainerServiceSshConfiguration Ssh { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (AdminUsername == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AdminUsername");
            }
            if (Ssh == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Ssh");
            }
            if (AdminUsername != null)
            {
                if (!System.Text.RegularExpressions.Regex.IsMatch(AdminUsername, "^[a-z][a-z0-9_-]*$"))
                {
                    throw new ValidationException(ValidationRules.Pattern, "AdminUsername", "^[a-z][a-z0-9_-]*$");
                }
            }
            if (Ssh != null)
            {
                Ssh.Validate();
            }
        }
    }
}

