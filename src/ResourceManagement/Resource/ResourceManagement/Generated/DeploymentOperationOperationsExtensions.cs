// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure.Management.Resources;
using Microsoft.Azure.Management.Resources.Models;

namespace Microsoft.Azure.Management.Resources
{
    public static partial class DeploymentOperationOperationsExtensions
    {
        /// <summary>
        /// Get a list of deployments operations.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Resources.IDeploymentOperationOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group. The name is case
        /// insensitive.
        /// </param>
        /// <param name='deploymentName'>
        /// Required. The name of the deployment.
        /// </param>
        /// <param name='operationId'>
        /// Required. Operation Id.
        /// </param>
        /// <returns>
        /// Deployment operation.
        /// </returns>
        public static DeploymentOperationsGetResult Get(this IDeploymentOperationOperations operations, string resourceGroupName, string deploymentName, string operationId)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IDeploymentOperationOperations)s).GetAsync(resourceGroupName, deploymentName, operationId);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Get a list of deployments operations.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Resources.IDeploymentOperationOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group. The name is case
        /// insensitive.
        /// </param>
        /// <param name='deploymentName'>
        /// Required. The name of the deployment.
        /// </param>
        /// <param name='operationId'>
        /// Required. Operation Id.
        /// </param>
        /// <returns>
        /// Deployment operation.
        /// </returns>
        public static Task<DeploymentOperationsGetResult> GetAsync(this IDeploymentOperationOperations operations, string resourceGroupName, string deploymentName, string operationId)
        {
            return operations.GetAsync(resourceGroupName, deploymentName, operationId, CancellationToken.None);
        }
        
        /// <summary>
        /// Gets a list of deployments operations.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Resources.IDeploymentOperationOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group. The name is case
        /// insensitive.
        /// </param>
        /// <param name='deploymentName'>
        /// Required. The name of the deployment.
        /// </param>
        /// <param name='parameters'>
        /// Optional. Query parameters.
        /// </param>
        /// <returns>
        /// List of deployment operations.
        /// </returns>
        public static DeploymentOperationsListResult List(this IDeploymentOperationOperations operations, string resourceGroupName, string deploymentName, DeploymentOperationsListParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IDeploymentOperationOperations)s).ListAsync(resourceGroupName, deploymentName, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Gets a list of deployments operations.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Resources.IDeploymentOperationOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group. The name is case
        /// insensitive.
        /// </param>
        /// <param name='deploymentName'>
        /// Required. The name of the deployment.
        /// </param>
        /// <param name='parameters'>
        /// Optional. Query parameters.
        /// </param>
        /// <returns>
        /// List of deployment operations.
        /// </returns>
        public static Task<DeploymentOperationsListResult> ListAsync(this IDeploymentOperationOperations operations, string resourceGroupName, string deploymentName, DeploymentOperationsListParameters parameters)
        {
            return operations.ListAsync(resourceGroupName, deploymentName, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Gets a next list of deployments operations.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Resources.IDeploymentOperationOperations.
        /// </param>
        /// <param name='nextLink'>
        /// Required. NextLink from the previous successful call to List
        /// operation.
        /// </param>
        /// <returns>
        /// List of deployment operations.
        /// </returns>
        public static DeploymentOperationsListResult ListNext(this IDeploymentOperationOperations operations, string nextLink)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IDeploymentOperationOperations)s).ListNextAsync(nextLink);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Gets a next list of deployments operations.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Resources.IDeploymentOperationOperations.
        /// </param>
        /// <param name='nextLink'>
        /// Required. NextLink from the previous successful call to List
        /// operation.
        /// </param>
        /// <returns>
        /// List of deployment operations.
        /// </returns>
        public static Task<DeploymentOperationsListResult> ListNextAsync(this IDeploymentOperationOperations operations, string nextLink)
        {
            return operations.ListNextAsync(nextLink, CancellationToken.None);
        }
    }
}
