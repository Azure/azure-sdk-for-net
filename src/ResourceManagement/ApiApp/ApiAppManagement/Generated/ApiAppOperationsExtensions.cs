// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure.Management.ApiApps;
using Microsoft.Azure.Management.ApiApps.Models;

namespace Microsoft.Azure.Management.ApiApps
{
    /// <summary>
    /// The Microsoft Azure ApiApp management API provides a RESTful set of web
    /// services that interact with Microsoft Azure ApiApp service to manage
    /// your ApiApps. The API has entities that capture the relationship
    /// between an end user and the Microsoft Azure ApiApp service.  (see
    /// http://azure.microsoft.com/en-us/services/app-service/api/ for more
    /// information)
    /// </summary>
    public static partial class ApiAppOperationsExtensions
    {
        /// <summary>
        /// Get information about a specific ApiApp
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiApps.IApiAppOperations.
        /// </param>
        /// <param name='resourceGroup'>
        /// Required. The resource group containing the api app
        /// </param>
        /// <param name='name'>
        /// Required. The instance name of the apiapp
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static GetApiAppResponse Get(this IApiAppOperations operations, string resourceGroup, string name)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IApiAppOperations)s).GetAsync(resourceGroup, name);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Get information about a specific ApiApp
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiApps.IApiAppOperations.
        /// </param>
        /// <param name='resourceGroup'>
        /// Required. The resource group containing the api app
        /// </param>
        /// <param name='name'>
        /// Required. The instance name of the apiapp
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<GetApiAppResponse> GetAsync(this IApiAppOperations operations, string resourceGroup, string name)
        {
            return operations.GetAsync(resourceGroup, name, CancellationToken.None);
        }
        
        /// <summary>
        /// Return list of the deployed ApiApps for the resource group
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiApps.IApiAppOperations.
        /// </param>
        /// <param name='resourceGroup'>
        /// Required. Name of the resource group containing the apiapps to list
        /// </param>
        /// <param name='expand'>
        /// Optional. Option controlling how much data to return, valid options
        /// are "basic" or "detail"
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static ListApiAppsResponse List(this IApiAppOperations operations, string resourceGroup, string expand)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IApiAppOperations)s).ListAsync(resourceGroup, expand);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Return list of the deployed ApiApps for the resource group
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiApps.IApiAppOperations.
        /// </param>
        /// <param name='resourceGroup'>
        /// Required. Name of the resource group containing the apiapps to list
        /// </param>
        /// <param name='expand'>
        /// Optional. Option controlling how much data to return, valid options
        /// are "basic" or "detail"
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<ListApiAppsResponse> ListAsync(this IApiAppOperations operations, string resourceGroup, string expand)
        {
            return operations.ListAsync(resourceGroup, expand, CancellationToken.None);
        }
        
        /// <summary>
        /// Return list of the deployed ApiApps for this subscription
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiApps.IApiAppOperations.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static ListApiAppsResponse ListAll(this IApiAppOperations operations)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IApiAppOperations)s).ListAllAsync();
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Return list of the deployed ApiApps for this subscription
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiApps.IApiAppOperations.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<ListApiAppsResponse> ListAllAsync(this IApiAppOperations operations)
        {
            return operations.ListAllAsync(CancellationToken.None);
        }
        
        /// <summary>
        /// List the next set of ApiApps from the previous list call.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiApps.IApiAppOperations.
        /// </param>
        /// <param name='nextLink'>
        /// Required. NextLink from a previous successful call to List
        /// operation.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static ListApiAppsResponse ListNext(this IApiAppOperations operations, string nextLink)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IApiAppOperations)s).ListNextAsync(nextLink);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// List the next set of ApiApps from the previous list call.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiApps.IApiAppOperations.
        /// </param>
        /// <param name='nextLink'>
        /// Required. NextLink from a previous successful call to List
        /// operation.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<ListApiAppsResponse> ListNextAsync(this IApiAppOperations operations, string nextLink)
        {
            return operations.ListNextAsync(nextLink, CancellationToken.None);
        }
    }
}
