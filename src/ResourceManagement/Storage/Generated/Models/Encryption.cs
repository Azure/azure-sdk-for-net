// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Storage.Fluent.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.Storage;
    using Microsoft.Azure.Management.Storage.Fluent;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The encryption settings on the storage account.
    /// </summary>
    public partial class Encryption
    {
        /// <summary>
        /// Initializes a new instance of the Encryption class.
        /// </summary>
        public Encryption()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Encryption class.
        /// </summary>
        /// <param name="services">List of services which support
        /// encryption.</param>
        public Encryption(EncryptionServices services = default(EncryptionServices))
        {
            Services = services;
            CustomInit();
        }

        /// <summary>
        /// Static constructor for Encryption class.
        /// </summary>
        static Encryption()
        {
            KeySource = "Microsoft.Storage";
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets list of services which support encryption.
        /// </summary>
        [JsonProperty(PropertyName = "services")]
        public EncryptionServices Services { get; set; }

        /// <summary>
        /// The encryption keySource (provider). Possible values
        /// (case-insensitive):  Microsoft.Storage
        /// </summary>
        [JsonProperty(PropertyName = "keySource")]
        public static string KeySource { get; private set; }

    }
}
