// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Hyak.Common;
using Microsoft.Azure.Management.Storage.Models;

namespace Microsoft.Azure.Management.Storage.Models
{
    /// <summary>
    /// The parameters to update on the account.
    /// </summary>
    public partial class StorageAccountUpdateParameters
    {
        private Microsoft.Azure.Management.Storage.Models.AccountType? _accountType;
        
        /// <summary>
        /// Optional. Gets or sets the account type. Note that StandardZRS and
        /// PremiumLRS accounts cannot be changed to other account types, and
        /// other account types cannot be changed to StandardZRS or PremiumLRS.
        /// </summary>
        public Microsoft.Azure.Management.Storage.Models.AccountType? AccountType
        {
            get { return this._accountType; }
            set { this._accountType = value; }
        }
        
        private CustomDomain _customDomain;
        
        /// <summary>
        /// Optional. User domain assigned to the storage account. Name is the
        /// CNAME source. Only one custom domain is supported per storage
        /// account at this time. To clear the existing custom domain, use an
        /// empty string for the custom domain name property.
        /// </summary>
        public CustomDomain CustomDomain
        {
            get { return this._customDomain; }
            set { this._customDomain = value; }
        }
        
        private IDictionary<string, string> _tags;
        
        /// <summary>
        /// Optional. Gets or sets a list of key value pairs that describe the
        /// resource. These tags can be used in viewing and grouping this
        /// resource (across resource groups). A maximum of 15 tags can be
        /// provided for a resource. Each tag must have a key no greater than
        /// 128 characters and value no greater than 256 characters. This is a
        /// full replace so all the existing tags will be replaced on Update.
        /// </summary>
        public IDictionary<string, string> Tags
        {
            get { return this._tags; }
            set { this._tags = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the StorageAccountUpdateParameters
        /// class.
        /// </summary>
        public StorageAccountUpdateParameters()
        {
            this.Tags = new LazyDictionary<string, string>();
        }
    }
}
