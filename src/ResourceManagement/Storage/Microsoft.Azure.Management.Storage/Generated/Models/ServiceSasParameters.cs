// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Storage.Models
{
    using Azure;
    using Management;
    using Storage;
    using Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The parameters to list service SAS credentials of a speicific resource.
    /// </summary>
    public partial class ServiceSasParameters
    {
        /// <summary>
        /// Initializes a new instance of the ServiceSasParameters class.
        /// </summary>
        public ServiceSasParameters() { }

        /// <summary>
        /// Initializes a new instance of the ServiceSasParameters class.
        /// </summary>
        /// <param name="canonicalizedResource">The canonical path to the
        /// signed resource.</param>
        /// <param name="resource">The signed services accessible with the
        /// service SAS. Possible values include: Blob (b), Container (c), File
        /// (f), Share (s). Possible values include: 'b', 'c', 'f', 's'</param>
        /// <param name="permissions">The signed permissions for the service
        /// SAS. Possible values include: Read (r), Write (w), Delete (d), List
        /// (l), Add (a), Create (c), Update (u) and Process (p). Possible
        /// values include: 'r', 'd', 'w', 'l', 'a', 'c', 'u', 'p'</param>
        /// <param name="iPAddressOrRange">An IP address or a range of IP
        /// addresses from which to accept requests.</param>
        /// <param name="protocols">The protocol permitted for a request made
        /// with the account SAS. Possible values include: 'https,http',
        /// 'https'</param>
        /// <param name="sharedAccessStartTime">The time at which the SAS
        /// becomes valid.</param>
        /// <param name="sharedAccessExpiryTime">The time at which the shared
        /// access signature becomes invalid.</param>
        /// <param name="identifier">A unique value up to 64 characters in
        /// length that correlates to an access policy specified for the
        /// container, queue, or table.</param>
        /// <param name="partitionKeyStart">The start of partition key.</param>
        /// <param name="partitionKeyEnd">The end of partition key.</param>
        /// <param name="rowKeyStart">The start of row key.</param>
        /// <param name="rowKeyEnd">The end of row key.</param>
        /// <param name="keyToSign">The key to sign the account SAS token
        /// with.</param>
        /// <param name="cacheControl">The response header override for cache
        /// control.</param>
        /// <param name="contentDisposition">The response header override for
        /// content disposition.</param>
        /// <param name="contentEncoding">The response header override for
        /// content encoding.</param>
        /// <param name="contentLanguage">The response header override for
        /// content language.</param>
        /// <param name="contentType">The response header override for content
        /// type.</param>
        public ServiceSasParameters(string canonicalizedResource, string resource, string permissions = default(string), string iPAddressOrRange = default(string), HttpProtocol? protocols = default(HttpProtocol?), System.DateTime? sharedAccessStartTime = default(System.DateTime?), System.DateTime? sharedAccessExpiryTime = default(System.DateTime?), string identifier = default(string), string partitionKeyStart = default(string), string partitionKeyEnd = default(string), string rowKeyStart = default(string), string rowKeyEnd = default(string), string keyToSign = default(string), string cacheControl = default(string), string contentDisposition = default(string), string contentEncoding = default(string), string contentLanguage = default(string), string contentType = default(string))
        {
            CanonicalizedResource = canonicalizedResource;
            Resource = resource;
            Permissions = permissions;
            IPAddressOrRange = iPAddressOrRange;
            Protocols = protocols;
            SharedAccessStartTime = sharedAccessStartTime;
            SharedAccessExpiryTime = sharedAccessExpiryTime;
            Identifier = identifier;
            PartitionKeyStart = partitionKeyStart;
            PartitionKeyEnd = partitionKeyEnd;
            RowKeyStart = rowKeyStart;
            RowKeyEnd = rowKeyEnd;
            KeyToSign = keyToSign;
            CacheControl = cacheControl;
            ContentDisposition = contentDisposition;
            ContentEncoding = contentEncoding;
            ContentLanguage = contentLanguage;
            ContentType = contentType;
        }

        /// <summary>
        /// Gets or sets the canonical path to the signed resource.
        /// </summary>
        [JsonProperty(PropertyName = "canonicalizedResource")]
        public string CanonicalizedResource { get; set; }

        /// <summary>
        /// Gets or sets the signed services accessible with the service SAS.
        /// Possible values include: Blob (b), Container (c), File (f), Share
        /// (s). Possible values include: 'b', 'c', 'f', 's'
        /// </summary>
        [JsonProperty(PropertyName = "signedResource")]
        public string Resource { get; set; }

        /// <summary>
        /// Gets or sets the signed permissions for the service SAS. Possible
        /// values include: Read (r), Write (w), Delete (d), List (l), Add (a),
        /// Create (c), Update (u) and Process (p). Possible values include:
        /// 'r', 'd', 'w', 'l', 'a', 'c', 'u', 'p'
        /// </summary>
        [JsonProperty(PropertyName = "signedPermission")]
        public string Permissions { get; set; }

        /// <summary>
        /// Gets or sets an IP address or a range of IP addresses from which to
        /// accept requests.
        /// </summary>
        [JsonProperty(PropertyName = "signedIp")]
        public string IPAddressOrRange { get; set; }

        /// <summary>
        /// Gets or sets the protocol permitted for a request made with the
        /// account SAS. Possible values include: 'https,http', 'https'
        /// </summary>
        [JsonProperty(PropertyName = "signedProtocol")]
        public HttpProtocol? Protocols { get; set; }

        /// <summary>
        /// Gets or sets the time at which the SAS becomes valid.
        /// </summary>
        [JsonProperty(PropertyName = "signedStart")]
        public System.DateTime? SharedAccessStartTime { get; set; }

        /// <summary>
        /// Gets or sets the time at which the shared access signature becomes
        /// invalid.
        /// </summary>
        [JsonProperty(PropertyName = "signedExpiry")]
        public System.DateTime? SharedAccessExpiryTime { get; set; }

        /// <summary>
        /// Gets or sets a unique value up to 64 characters in length that
        /// correlates to an access policy specified for the container, queue,
        /// or table.
        /// </summary>
        [JsonProperty(PropertyName = "signedIdentifier")]
        public string Identifier { get; set; }

        /// <summary>
        /// Gets or sets the start of partition key.
        /// </summary>
        [JsonProperty(PropertyName = "startPk")]
        public string PartitionKeyStart { get; set; }

        /// <summary>
        /// Gets or sets the end of partition key.
        /// </summary>
        [JsonProperty(PropertyName = "endPk")]
        public string PartitionKeyEnd { get; set; }

        /// <summary>
        /// Gets or sets the start of row key.
        /// </summary>
        [JsonProperty(PropertyName = "startRk")]
        public string RowKeyStart { get; set; }

        /// <summary>
        /// Gets or sets the end of row key.
        /// </summary>
        [JsonProperty(PropertyName = "endRk")]
        public string RowKeyEnd { get; set; }

        /// <summary>
        /// Gets or sets the key to sign the account SAS token with.
        /// </summary>
        [JsonProperty(PropertyName = "keyToSign")]
        public string KeyToSign { get; set; }

        /// <summary>
        /// Gets or sets the response header override for cache control.
        /// </summary>
        [JsonProperty(PropertyName = "rscc")]
        public string CacheControl { get; set; }

        /// <summary>
        /// Gets or sets the response header override for content disposition.
        /// </summary>
        [JsonProperty(PropertyName = "rscd")]
        public string ContentDisposition { get; set; }

        /// <summary>
        /// Gets or sets the response header override for content encoding.
        /// </summary>
        [JsonProperty(PropertyName = "rsce")]
        public string ContentEncoding { get; set; }

        /// <summary>
        /// Gets or sets the response header override for content language.
        /// </summary>
        [JsonProperty(PropertyName = "rscl")]
        public string ContentLanguage { get; set; }

        /// <summary>
        /// Gets or sets the response header override for content type.
        /// </summary>
        [JsonProperty(PropertyName = "rsct")]
        public string ContentType { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (CanonicalizedResource == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CanonicalizedResource");
            }
            if (Resource == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Resource");
            }
            if (Identifier != null)
            {
                if (Identifier.Length > 64)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "Identifier", 64);
                }
            }
        }
    }
}

