// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.AppService.Fluent.Models
{
    using System.Linq;

    /// <summary>
    /// Options for app content migration.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class StorageMigrationOptionsInner : Microsoft.Azure.Management.ResourceManager.Fluent.Resource
    {
        /// <summary>
        /// Initializes a new instance of the StorageMigrationOptionsInner
        /// class.
        /// </summary>
        public StorageMigrationOptionsInner() { }

        /// <summary>
        /// Initializes a new instance of the StorageMigrationOptionsInner
        /// class.
        /// </summary>
        /// <param name="azurefilesConnectionString">AzureFiles connection
        /// string.</param>
        /// <param name="azurefilesShare">AzureFiles share.</param>
        /// <param name="switchSiteAfterMigration"><code>true</code>if the app
        /// should be switched over; otherwise, <code>false</code>.</param>
        /// <param name="blockWriteAccessToSite"><code>true</code> if the app
        /// should be read only during copy operation; otherwise,
        /// <code>false</code>.</param>
        public StorageMigrationOptionsInner(string location = default(string), string id = default(string), string name = default(string), string type = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), string azurefilesConnectionString = default(string), string azurefilesShare = default(string), bool? switchSiteAfterMigration = default(bool?), bool? blockWriteAccessToSite = default(bool?))
            : base(location, id, name, type, tags)
        {
            AzurefilesConnectionString = azurefilesConnectionString;
            AzurefilesShare = azurefilesShare;
            SwitchSiteAfterMigration = switchSiteAfterMigration;
            BlockWriteAccessToSite = blockWriteAccessToSite;
        }

        /// <summary>
        /// Gets or sets azureFiles connection string.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.azurefilesConnectionString")]
        public string AzurefilesConnectionString { get; set; }

        /// <summary>
        /// Gets or sets azureFiles share.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.azurefilesShare")]
        public string AzurefilesShare { get; set; }

        /// <summary>
        /// Gets or sets &lt;code&gt;true&lt;/code&gt;if the app should be
        /// switched over; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.switchSiteAfterMigration")]
        public bool? SwitchSiteAfterMigration { get; set; }

        /// <summary>
        /// Gets or sets &lt;code&gt;true&lt;/code&gt; if the app should be
        /// read only during copy operation; otherwise,
        /// &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.blockWriteAccessToSite")]
        public bool? BlockWriteAccessToSite { get; set; }

    }
}
