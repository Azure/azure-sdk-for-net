// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.AppService.Fluent.Models
{
    using System.Linq;

    /// <summary>
    /// Hybrid Connection limits contract. This is used to return the plan
    /// limits of Hybrid Connections.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class HybridConnectionLimitsInner : Microsoft.Azure.Management.Resource.Fluent.Resource
    {
        /// <summary>
        /// Initializes a new instance of the HybridConnectionLimitsInner
        /// class.
        /// </summary>
        public HybridConnectionLimitsInner() { }

        /// <summary>
        /// Initializes a new instance of the HybridConnectionLimitsInner
        /// class.
        /// </summary>
        /// <param name="current">The current number of Hybrid
        /// Connections.</param>
        /// <param name="maximum">The maximum number of Hybrid Connections
        /// allowed.</param>
        public HybridConnectionLimitsInner(string location = default(string), string id = default(string), string name = default(string), string type = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), int? current = default(int?), int? maximum = default(int?))
            : base(location, id, name, type, tags)
        {
            Current = current;
            Maximum = maximum;
        }

        /// <summary>
        /// Gets the current number of Hybrid Connections.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.current")]
        public int? Current { get; private set; }

        /// <summary>
        /// Gets the maximum number of Hybrid Connections allowed.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.maximum")]
        public int? Maximum { get; private set; }

    }
}
