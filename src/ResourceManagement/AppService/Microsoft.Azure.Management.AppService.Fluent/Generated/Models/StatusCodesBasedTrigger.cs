// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.AppService.Fluent.Models
{
    using System.Linq;

    /// <summary>
    /// Trigger based on status code.
    /// </summary>
    public partial class StatusCodesBasedTrigger
    {
        /// <summary>
        /// Initializes a new instance of the StatusCodesBasedTrigger class.
        /// </summary>
        public StatusCodesBasedTrigger() { }

        /// <summary>
        /// Initializes a new instance of the StatusCodesBasedTrigger class.
        /// </summary>
        /// <param name="status">HTTP status code.</param>
        /// <param name="subStatus">SubStatus.</param>
        /// <param name="win32Status">Win32 error code.</param>
        /// <param name="count">Count.</param>
        /// <param name="timeInterval">Time interval.</param>
        public StatusCodesBasedTrigger(int? status = default(int?), int? subStatus = default(int?), int? win32Status = default(int?), int? count = default(int?), string timeInterval = default(string))
        {
            Status = status;
            SubStatus = subStatus;
            Win32Status = win32Status;
            Count = count;
            TimeInterval = timeInterval;
        }

        /// <summary>
        /// Gets or sets HTTP status code.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "status")]
        public int? Status { get; set; }

        /// <summary>
        /// Gets or sets subStatus.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "subStatus")]
        public int? SubStatus { get; set; }

        /// <summary>
        /// Gets or sets win32 error code.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "win32Status")]
        public int? Win32Status { get; set; }

        /// <summary>
        /// Gets or sets count.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "count")]
        public int? Count { get; set; }

        /// <summary>
        /// Gets or sets time interval.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "timeInterval")]
        public string TimeInterval { get; set; }

    }
}
