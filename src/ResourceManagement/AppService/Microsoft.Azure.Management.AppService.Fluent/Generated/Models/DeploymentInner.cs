// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.AppService.Fluent.Models
{
    using System.Linq;

    /// <summary>
    /// User crendentials used for publishing activity.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class DeploymentInner : Microsoft.Azure.Management.Resource.Fluent.Resource
    {
        /// <summary>
        /// Initializes a new instance of the DeploymentInner class.
        /// </summary>
        public DeploymentInner() { }

        /// <summary>
        /// Initializes a new instance of the DeploymentInner class.
        /// </summary>
        /// <param name="deploymentId">ID.</param>
        /// <param name="status">Status.</param>
        /// <param name="message">Message.</param>
        /// <param name="author">Author.</param>
        /// <param name="deployer">Deployer.</param>
        /// <param name="authorEmail">Author email.</param>
        /// <param name="startTime">Start time.</param>
        /// <param name="endTime">End time.</param>
        /// <param name="active">Active.</param>
        /// <param name="details">Detail.</param>
        public DeploymentInner(string location = default(string), string id = default(string), string name = default(string), string type = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), string deploymentId = default(string), int? status = default(int?), string message = default(string), string author = default(string), string deployer = default(string), string authorEmail = default(string), System.DateTime? startTime = default(System.DateTime?), System.DateTime? endTime = default(System.DateTime?), bool? active = default(bool?), string details = default(string))
            : base(location, id, name, type, tags)
        {
            DeploymentId = deploymentId;
            Status = status;
            Message = message;
            Author = author;
            Deployer = deployer;
            AuthorEmail = authorEmail;
            StartTime = startTime;
            EndTime = endTime;
            Active = active;
            Details = details;
        }

        /// <summary>
        /// Gets or sets ID.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.id")]
        public string DeploymentId { get; set; }

        /// <summary>
        /// Gets or sets status.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.status")]
        public int? Status { get; set; }

        /// <summary>
        /// Gets or sets message.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.message")]
        public string Message { get; set; }

        /// <summary>
        /// Gets or sets author.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.author")]
        public string Author { get; set; }

        /// <summary>
        /// Gets or sets deployer.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.deployer")]
        public string Deployer { get; set; }

        /// <summary>
        /// Gets or sets author email.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.author_email")]
        public string AuthorEmail { get; set; }

        /// <summary>
        /// Gets or sets start time.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.start_time")]
        public System.DateTime? StartTime { get; set; }

        /// <summary>
        /// Gets or sets end time.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.end_time")]
        public System.DateTime? EndTime { get; set; }

        /// <summary>
        /// Gets or sets active.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.active")]
        public bool? Active { get; set; }

        /// <summary>
        /// Gets or sets detail.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.details")]
        public string Details { get; set; }

    }
}
