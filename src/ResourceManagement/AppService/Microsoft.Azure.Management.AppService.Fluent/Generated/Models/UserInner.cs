// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.AppService.Fluent.Models
{
    using System.Linq;

    /// <summary>
    /// User crendentials used for publishing activity.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class UserInner : Microsoft.Azure.Management.ResourceManager.Fluent.Resource
    {
        /// <summary>
        /// Initializes a new instance of the UserInner class.
        /// </summary>
        public UserInner() { }

        /// <summary>
        /// Initializes a new instance of the UserInner class.
        /// </summary>
        /// <param name="userName">Username</param>
        /// <param name="publishingUserName">Username used for
        /// publishing.</param>
        /// <param name="publishingPassword">Password used for
        /// publishing.</param>
        /// <param name="publishingPasswordHash">Password hash used for
        /// publishing.</param>
        /// <param name="publishingPasswordHashSalt">Password hash salt used
        /// for publishing.</param>
        public UserInner(string location = default(string), string id = default(string), string name = default(string), string type = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), string userName = default(string), string publishingUserName = default(string), string publishingPassword = default(string), string publishingPasswordHash = default(string), string publishingPasswordHashSalt = default(string))
            : base(location, id, name, type, tags)
        {
            UserName = userName;
            PublishingUserName = publishingUserName;
            PublishingPassword = publishingPassword;
            PublishingPasswordHash = publishingPasswordHash;
            PublishingPasswordHashSalt = publishingPasswordHashSalt;
        }

        /// <summary>
        /// Gets or sets username
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.name")]
        public string UserName { get; set; }

        /// <summary>
        /// Gets or sets username used for publishing.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.publishingUserName")]
        public string PublishingUserName { get; set; }

        /// <summary>
        /// Gets or sets password used for publishing.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.publishingPassword")]
        public string PublishingPassword { get; set; }

        /// <summary>
        /// Gets or sets password hash used for publishing.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.publishingPasswordHash")]
        public string PublishingPasswordHash { get; set; }

        /// <summary>
        /// Gets or sets password hash salt used for publishing.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.publishingPasswordHashSalt")]
        public string PublishingPasswordHashSalt { get; set; }

    }
}
