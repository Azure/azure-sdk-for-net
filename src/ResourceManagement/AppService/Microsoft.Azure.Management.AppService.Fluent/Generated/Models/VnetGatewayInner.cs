// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.AppService.Fluent.Models
{
    using System.Linq;

    /// <summary>
    /// The Virtual Network gateway contract. This is used to give the Virtual
    /// Network gateway access to the VPN package.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class VnetGatewayInner : Microsoft.Azure.Management.Resource.Fluent.Resource
    {
        /// <summary>
        /// Initializes a new instance of the VnetGatewayInner class.
        /// </summary>
        public VnetGatewayInner() { }

        /// <summary>
        /// Initializes a new instance of the VnetGatewayInner class.
        /// </summary>
        /// <param name="vnetName">The Virtual Network name.</param>
        /// <param name="vpnPackageUri">The URI where the VPN package can be
        /// downloaded.</param>
        public VnetGatewayInner(string location = default(string), string id = default(string), string name = default(string), string type = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), string vnetName = default(string), string vpnPackageUri = default(string))
            : base(location, id, name, type, tags)
        {
            VnetName = vnetName;
            VpnPackageUri = vpnPackageUri;
        }

        /// <summary>
        /// Gets or sets the Virtual Network name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.vnetName")]
        public string VnetName { get; set; }

        /// <summary>
        /// Gets or sets the URI where the VPN package can be downloaded.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.vpnPackageUri")]
        public string VpnPackageUri { get; set; }

    }
}
