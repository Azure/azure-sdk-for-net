// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.AppService.Fluent.Models
{
    using System.Linq;

    /// <summary>
    /// Virtual application in an app.
    /// </summary>
    public partial class VirtualApplication
    {
        /// <summary>
        /// Initializes a new instance of the VirtualApplication class.
        /// </summary>
        public VirtualApplication() { }

        /// <summary>
        /// Initializes a new instance of the VirtualApplication class.
        /// </summary>
        /// <param name="virtualPath">Virtual path.</param>
        /// <param name="physicalPath">Physical path.</param>
        /// <param name="preloadEnabled"><code>true</code> if preloading is
        /// enabled; otherwise, <code>false</code>.</param>
        /// <param name="virtualDirectories">Virtual directories for virtual
        /// application.</param>
        public VirtualApplication(string virtualPath = default(string), string physicalPath = default(string), bool? preloadEnabled = default(bool?), System.Collections.Generic.IList<VirtualDirectory> virtualDirectories = default(System.Collections.Generic.IList<VirtualDirectory>))
        {
            VirtualPath = virtualPath;
            PhysicalPath = physicalPath;
            PreloadEnabled = preloadEnabled;
            VirtualDirectories = virtualDirectories;
        }

        /// <summary>
        /// Gets or sets virtual path.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "virtualPath")]
        public string VirtualPath { get; set; }

        /// <summary>
        /// Gets or sets physical path.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "physicalPath")]
        public string PhysicalPath { get; set; }

        /// <summary>
        /// Gets or sets &lt;code&gt;true&lt;/code&gt; if preloading is
        /// enabled; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "preloadEnabled")]
        public bool? PreloadEnabled { get; set; }

        /// <summary>
        /// Gets or sets virtual directories for virtual application.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "virtualDirectories")]
        public System.Collections.Generic.IList<VirtualDirectory> VirtualDirectories { get; set; }

    }
}
