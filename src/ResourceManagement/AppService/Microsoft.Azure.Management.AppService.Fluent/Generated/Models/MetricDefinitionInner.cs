// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.AppService.Fluent.Models
{
    using System.Linq;

    /// <summary>
    /// Metadata for a metric.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class MetricDefinitionInner : Microsoft.Azure.Management.ResourceManager.Fluent.Resource
    {
        /// <summary>
        /// Initializes a new instance of the MetricDefinitionInner class.
        /// </summary>
        public MetricDefinitionInner() { }

        /// <summary>
        /// Initializes a new instance of the MetricDefinitionInner class.
        /// </summary>
        /// <param name="metricDefinitionName">Name of the metric.</param>
        /// <param name="unit">Unit of the metric.</param>
        /// <param name="primaryAggregationType">Primary aggregation
        /// type.</param>
        /// <param name="metricAvailabilities">List of time grains supported
        /// for the metric together with retention period.</param>
        /// <param name="displayName">Friendly name shown in the UI.</param>
        public MetricDefinitionInner(string location = default(string), string id = default(string), string name = default(string), string type = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), string metricDefinitionName = default(string), string unit = default(string), string primaryAggregationType = default(string), System.Collections.Generic.IList<MetricAvailabilily> metricAvailabilities = default(System.Collections.Generic.IList<MetricAvailabilily>), string displayName = default(string))
            : base(location, id, name, type, tags)
        {
            MetricDefinitionName = metricDefinitionName;
            Unit = unit;
            PrimaryAggregationType = primaryAggregationType;
            MetricAvailabilities = metricAvailabilities;
            DisplayName = displayName;
        }

        /// <summary>
        /// Gets name of the metric.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.name")]
        public string MetricDefinitionName { get; private set; }

        /// <summary>
        /// Gets unit of the metric.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.unit")]
        public string Unit { get; private set; }

        /// <summary>
        /// Gets primary aggregation type.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.primaryAggregationType")]
        public string PrimaryAggregationType { get; private set; }

        /// <summary>
        /// Gets list of time grains supported for the metric together with
        /// retention period.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.metricAvailabilities")]
        public System.Collections.Generic.IList<MetricAvailabilily> MetricAvailabilities { get; private set; }

        /// <summary>
        /// Gets friendly name shown in the UI.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.displayName")]
        public string DisplayName { get; private set; }

    }
}
