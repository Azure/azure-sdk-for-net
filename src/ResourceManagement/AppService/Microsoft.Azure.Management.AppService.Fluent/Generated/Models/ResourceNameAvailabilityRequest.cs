// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.AppService.Fluent.Models
{
    using System.Linq;

    /// <summary>
    /// Resource name availability request content.
    /// </summary>
    public partial class ResourceNameAvailabilityRequest
    {
        /// <summary>
        /// Initializes a new instance of the ResourceNameAvailabilityRequest
        /// class.
        /// </summary>
        public ResourceNameAvailabilityRequest() { }

        /// <summary>
        /// Initializes a new instance of the ResourceNameAvailabilityRequest
        /// class.
        /// </summary>
        /// <param name="name">Resource name to verify.</param>
        /// <param name="type">Resource type used for verification. Possible
        /// values include: 'Site', 'Slot', 'HostingEnvironment'</param>
        /// <param name="isFqdn">Is fully qualified domain name.</param>
        public ResourceNameAvailabilityRequest(string name, string type, bool? isFqdn = default(bool?))
        {
            Name = name;
            Type = type;
            IsFqdn = isFqdn;
        }

        /// <summary>
        /// Gets or sets resource name to verify.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets resource type used for verification. Possible values
        /// include: 'Site', 'Slot', 'HostingEnvironment'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets is fully qualified domain name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isFqdn")]
        public bool? IsFqdn { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Name");
            }
            if (Type == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Type");
            }
        }
    }
}
