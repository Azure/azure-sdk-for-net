// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.AppService.Fluent.Models
{
    using System.Linq;

    /// <summary>
    /// Information regarding availbility of a resource name.
    /// </summary>
    public partial class ResourceNameAvailabilityInner
    {
        /// <summary>
        /// Initializes a new instance of the ResourceNameAvailabilityInner
        /// class.
        /// </summary>
        public ResourceNameAvailabilityInner() { }

        /// <summary>
        /// Initializes a new instance of the ResourceNameAvailabilityInner
        /// class.
        /// </summary>
        /// <param name="nameAvailable"><code>true</code> indicates name is
        /// valid and available. <code>false</code> indicates the name is
        /// invalid, unavailable, or both.</param>
        /// <param name="reason"><code>Invalid</code> indicates the name
        /// provided does not match Azure App Service naming requirements.
        /// <code>AlreadyExists</code> indicates that the name is already in
        /// use and is therefore unavailable. Possible values include:
        /// 'Invalid', 'AlreadyExists'</param>
        /// <param name="message">If reason == invalid, provide the user with
        /// the reason why the given name is invalid, and provide the
        /// resource naming requirements so that the user can select a valid
        /// name. If reason == AlreadyExists, explain that resource name is
        /// already in use, and direct them to select a different
        /// name.</param>
        public ResourceNameAvailabilityInner(bool? nameAvailable = default(bool?), string reason = default(string), string message = default(string))
        {
            NameAvailable = nameAvailable;
            Reason = reason;
            Message = message;
        }

        /// <summary>
        /// Gets or sets &lt;code&gt;true&lt;/code&gt; indicates name is valid
        /// and available. &lt;code&gt;false&lt;/code&gt; indicates the name
        /// is invalid, unavailable, or both.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "nameAvailable")]
        public bool? NameAvailable { get; set; }

        /// <summary>
        /// Gets or sets &lt;code&gt;Invalid&lt;/code&gt; indicates the name
        /// provided does not match Azure App Service naming requirements.
        /// &lt;code&gt;AlreadyExists&lt;/code&gt; indicates that the name is
        /// already in use and is therefore unavailable. Possible values
        /// include: 'Invalid', 'AlreadyExists'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "reason")]
        public string Reason { get; set; }

        /// <summary>
        /// Gets or sets if reason == invalid, provide the user with the
        /// reason why the given name is invalid, and provide the resource
        /// naming requirements so that the user can select a valid name. If
        /// reason == AlreadyExists, explain that resource name is already in
        /// use, and direct them to select a different name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "message")]
        public string Message { get; set; }

    }
}
