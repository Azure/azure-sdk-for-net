// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.AppService.Fluent.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.AppService;
    using Microsoft.Azure.Management.AppService.Fluent;
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A top level domain object.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class TopLevelDomainInner : Microsoft.Azure.Management.ResourceManager.Fluent.Resource
    {
        /// <summary>
        /// Initializes a new instance of the TopLevelDomainInner class.
        /// </summary>
        public TopLevelDomainInner()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TopLevelDomainInner class.
        /// </summary>
        /// <param name="domainName">Name of the top level domain.</param>
        /// <param name="privacy">If &lt;code&gt;true&lt;/code&gt;, then the
        /// top level domain supports domain privacy; otherwise,
        /// &lt;code&gt;false&lt;/code&gt;.</param>
        public TopLevelDomainInner(string location = default(string), string id = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string domainName = default(string), bool? privacy = default(bool?))
            : base(location, id, name, type, tags)
        {
            DomainName = domainName;
            Privacy = privacy;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets name of the top level domain.
        /// </summary>
        [JsonProperty(PropertyName = "properties.name")]
        public string DomainName { get; private set; }

        /// <summary>
        /// Gets or sets if &amp;lt;code&amp;gt;true&amp;lt;/code&amp;gt;, then
        /// the top level domain supports domain privacy; otherwise,
        /// &amp;lt;code&amp;gt;false&amp;lt;/code&amp;gt;.
        /// </summary>
        [JsonProperty(PropertyName = "properties.privacy")]
        public bool? Privacy { get; set; }

    }
}
