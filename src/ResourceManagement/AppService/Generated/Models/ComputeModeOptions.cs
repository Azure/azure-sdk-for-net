// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.AppService.Fluent.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.AppService;
    using Microsoft.Azure.Management.AppService.Fluent;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for ComputeModeOptions.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ComputeModeOptions
    {
        [EnumMember(Value = "Shared")]
        Shared,
        [EnumMember(Value = "Dedicated")]
        Dedicated,
        [EnumMember(Value = "Dynamic")]
        Dynamic
    }
    internal static class ComputeModeOptionsEnumExtension
    {
        internal static string ToSerializedValue(this ComputeModeOptions? value)  =>
            value == null ? null : ((ComputeModeOptions)value).ToSerializedValue();

        internal static string ToSerializedValue(this ComputeModeOptions value)
        {
            switch( value )
            {
                case ComputeModeOptions.Shared:
                    return "Shared";
                case ComputeModeOptions.Dedicated:
                    return "Dedicated";
                case ComputeModeOptions.Dynamic:
                    return "Dynamic";
            }
            return null;
        }

        internal static ComputeModeOptions? ParseComputeModeOptions(this string value)
        {
            switch( value )
            {
                case "Shared":
                    return ComputeModeOptions.Shared;
                case "Dedicated":
                    return ComputeModeOptions.Dedicated;
                case "Dynamic":
                    return ComputeModeOptions.Dynamic;
            }
            return null;
        }
    }
}
