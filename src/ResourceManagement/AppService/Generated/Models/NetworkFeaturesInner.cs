// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.AppService.Fluent.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.AppService;
    using Microsoft.Azure.Management.AppService.Fluent;
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Full view of network features for an app (presently VNET integration
    /// and Hybrid Connections).
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class NetworkFeaturesInner : Microsoft.Azure.Management.ResourceManager.Fluent.Resource
    {
        /// <summary>
        /// Initializes a new instance of the NetworkFeaturesInner class.
        /// </summary>
        public NetworkFeaturesInner()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NetworkFeaturesInner class.
        /// </summary>
        /// <param name="virtualNetworkName">The Virtual Network name.</param>
        /// <param name="virtualNetworkConnection">The Virtual Network summary
        /// view.</param>
        /// <param name="hybridConnections">The Hybrid Connections summary
        /// view.</param>
        /// <param name="hybridConnectionsV2">The Hybrid Connection V2 (Service
        /// Bus) view.</param>
        public NetworkFeaturesInner(string location = default(string), string id = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string virtualNetworkName = default(string), VnetInfoInner virtualNetworkConnection = default(VnetInfoInner), IList<RelayServiceConnectionEntityInner> hybridConnections = default(IList<RelayServiceConnectionEntityInner>), IList<HybridConnectionInner> hybridConnectionsV2 = default(IList<HybridConnectionInner>))
            : base(location, id, name, type, tags)
        {
            VirtualNetworkName = virtualNetworkName;
            VirtualNetworkConnection = virtualNetworkConnection;
            HybridConnections = hybridConnections;
            HybridConnectionsV2 = hybridConnectionsV2;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the Virtual Network name.
        /// </summary>
        [JsonProperty(PropertyName = "properties.virtualNetworkName")]
        public string VirtualNetworkName { get; private set; }

        /// <summary>
        /// Gets the Virtual Network summary view.
        /// </summary>
        [JsonProperty(PropertyName = "properties.virtualNetworkConnection")]
        public VnetInfoInner VirtualNetworkConnection { get; private set; }

        /// <summary>
        /// Gets the Hybrid Connections summary view.
        /// </summary>
        [JsonProperty(PropertyName = "properties.hybridConnections")]
        public IList<RelayServiceConnectionEntityInner> HybridConnections { get; private set; }

        /// <summary>
        /// Gets the Hybrid Connection V2 (Service Bus) view.
        /// </summary>
        [JsonProperty(PropertyName = "properties.hybridConnectionsV2")]
        public IList<HybridConnectionInner> HybridConnectionsV2 { get; private set; }

    }
}
