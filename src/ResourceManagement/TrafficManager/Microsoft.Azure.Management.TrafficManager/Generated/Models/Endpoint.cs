// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.TrafficManager.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// Class representing a Traffic Manager endpoint.
    /// </summary>
    [JsonTransformation]
    public partial class Endpoint
    {
        /// <summary>
        /// Initializes a new instance of the Endpoint class.
        /// </summary>
        public Endpoint() { }

        /// <summary>
        /// Initializes a new instance of the Endpoint class.
        /// </summary>
        public Endpoint(string id = default(string), string name = default(string), string type = default(string), string targetResourceId = default(string), string target = default(string), string endpointStatus = default(string), long? weight = default(long?), long? priority = default(long?), string endpointLocation = default(string), string endpointMonitorStatus = default(string), long? minChildEndpoints = default(long?), IList<string> geoMapping = default(IList<string>))
        {
            Id = id;
            Name = name;
            Type = type;
            TargetResourceId = targetResourceId;
            Target = target;
            EndpointStatus = endpointStatus;
            Weight = weight;
            Priority = priority;
            EndpointLocation = endpointLocation;
            EndpointMonitorStatus = endpointMonitorStatus;
            MinChildEndpoints = minChildEndpoints;
            GeoMapping = geoMapping;
        }

        /// <summary>
        /// Gets or sets the ID of the Traffic Manager endpoint.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets the name of the Traffic Manager endpoint.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the endpoint type of the Traffic Manager endpoint.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets the Azure Resource URI of the of the endpoint.  Not
        /// applicable to endpoints of type 'ExternalEndpoints'.
        /// </summary>
        [JsonProperty(PropertyName = "properties.targetResourceId")]
        public string TargetResourceId { get; set; }

        /// <summary>
        /// Gets or sets the fully-qualified DNS name of the endpoint.
        /// Traffic Manager returns this value in DNS responses to direct
        /// traffic to this endpoint.
        /// </summary>
        [JsonProperty(PropertyName = "properties.target")]
        public string Target { get; set; }

        /// <summary>
        /// Gets or sets the status of the endpoint..  If the endpoint is
        /// Enabled, it is probed for endpoint health and is included in the
        /// traffic routing method.  Possible values are 'Enabled' and
        /// 'Disabled'.
        /// </summary>
        [JsonProperty(PropertyName = "properties.endpointStatus")]
        public string EndpointStatus { get; set; }

        /// <summary>
        /// Gets or sets the weight of this endpoint when using the 'Weighted'
        /// traffic routing method. Possible values are from 1 to 1000.
        /// </summary>
        [JsonProperty(PropertyName = "properties.weight")]
        public long? Weight { get; set; }

        /// <summary>
        /// Gets or sets the priority of this endpoint when using the
        /// ‘Priority’ traffic routing method. Possible values are from 1 to
        /// 1000, lower values represent higher priority. This is an optional
        /// parameter.  If specified, it must be specified on all endpoints,
        /// and no two endpoints can share the same priority value.
        /// </summary>
        [JsonProperty(PropertyName = "properties.priority")]
        public long? Priority { get; set; }

        /// <summary>
        /// Specifies the location of the external or nested endpoints when
        /// using the ‘Performance’ traffic routing method.
        /// </summary>
        [JsonProperty(PropertyName = "properties.endpointLocation")]
        public string EndpointLocation { get; set; }

        /// <summary>
        /// Gets or sets the monitoring status of the endpoint.
        /// </summary>
        [JsonProperty(PropertyName = "properties.endpointMonitorStatus")]
        public string EndpointMonitorStatus { get; set; }

        /// <summary>
        /// Gets or sets the minimum number of endpoints that must be
        /// available in the child profile in order for the parent profile to
        /// be considered available. Only applicable to endpoint of type
        /// 'NestedEndpoints'.
        /// </summary>
        [JsonProperty(PropertyName = "properties.minChildEndpoints")]
        public long? MinChildEndpoints { get; set; }

        /// <summary>
        /// Gets or sets the list of countries/regions mapped to this endpoint
        /// when using the ‘Geographic’ traffic routing method. Please
        /// consult Traffic Manager Geographic documentation for a full list
        /// of accepted values.
        /// </summary>
        [JsonProperty(PropertyName = "properties.geoMapping")]
        public IList<string> GeoMapping { get; set; }

    }
}
