// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.TrafficManager.Fluent.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.TrafficManager;
    using Microsoft.Azure.Management.TrafficManager.Fluent;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Class representing a Traffic Manager profile.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ProfileInner : Microsoft.Azure.Management.ResourceManager.Fluent.Resource
    {
        /// <summary>
        /// Initializes a new instance of the ProfileInner class.
        /// </summary>
        public ProfileInner()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ProfileInner class.
        /// </summary>
        /// <param name="tags">Resource tags.</param>
        /// <param name="location">The Azure Region where the resource
        /// lives</param>
        /// <param name="profileStatus">The status of the Traffic Manager
        /// profile. Possible values include: 'Enabled', 'Disabled'</param>
        /// <param name="trafficRoutingMethod">The traffic routing method of
        /// the Traffic Manager profile. Possible values include:
        /// 'Performance', 'Priority', 'Weighted', 'Geographic'</param>
        /// <param name="dnsConfig">The DNS settings of the Traffic Manager
        /// profile.</param>
        /// <param name="monitorConfig">The endpoint monitoring settings of the
        /// Traffic Manager profile.</param>
        /// <param name="endpoints">The list of endpoints in the Traffic
        /// Manager profile.</param>
        public ProfileInner(string location = default(string), string id = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string profileStatus = default(string), string trafficRoutingMethod = default(string), DnsConfig dnsConfig = default(DnsConfig), MonitorConfig monitorConfig = default(MonitorConfig), IList<EndpointInner> endpoints = default(IList<EndpointInner>))
            : base(location, id, name, type, tags)
        {
            ProfileStatus = profileStatus;
            TrafficRoutingMethod = trafficRoutingMethod;
            DnsConfig = dnsConfig;
            MonitorConfig = monitorConfig;
            Endpoints = endpoints;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the status of the Traffic Manager profile. Possible
        /// values include: 'Enabled', 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "properties.profileStatus")]
        public string ProfileStatus { get; set; }

        /// <summary>
        /// Gets or sets the traffic routing method of the Traffic Manager
        /// profile. Possible values include: 'Performance', 'Priority',
        /// 'Weighted', 'Geographic'
        /// </summary>
        [JsonProperty(PropertyName = "properties.trafficRoutingMethod")]
        public string TrafficRoutingMethod { get; set; }

        /// <summary>
        /// Gets or sets the DNS settings of the Traffic Manager profile.
        /// </summary>
        [JsonProperty(PropertyName = "properties.dnsConfig")]
        public DnsConfig DnsConfig { get; set; }

        /// <summary>
        /// Gets or sets the endpoint monitoring settings of the Traffic
        /// Manager profile.
        /// </summary>
        [JsonProperty(PropertyName = "properties.monitorConfig")]
        public MonitorConfig MonitorConfig { get; set; }

        /// <summary>
        /// Gets or sets the list of endpoints in the Traffic Manager profile.
        /// </summary>
        [JsonProperty(PropertyName = "properties.endpoints")]
        public IList<EndpointInner> Endpoints { get; set; }

    }
}
