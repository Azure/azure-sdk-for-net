// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.WebSites
{
    using System;
    using System.Collections.Generic;
    using System.Net.Http;
    using System.Threading;
    using System.Threading.Tasks;
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// AppServicePlansOperations operations.
    /// </summary>
    public partial interface IAppServicePlansOperations
    {
        /// <summary>
        /// Gets all App Service Plans for a subcription
        /// </summary>
        /// Gets all App Service Plans for a subcription
        /// <param name='detailed'>
        /// False to return a subset of App Service Plan properties, true to
        /// return all of the properties.
        /// Retrieval of all properties may increase the API
        /// latency.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<AppServicePlan>>> ListWithHttpMessagesAsync(bool? detailed = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets collection of App Service Plans in a resource group for a
        /// given subscription.
        /// </summary>
        /// Gets collection of App Service Plans in a resource group for a
        /// given subscription.
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<AppServicePlan>>> ListByResourceGroupWithHttpMessagesAsync(string resourceGroupName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets specified App Service Plan in a resource group
        /// </summary>
        /// Gets specified App Service Plan in a resource group
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of App Service Plan
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<AppServicePlan>> GetWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Creates or updates an App Service Plan
        /// </summary>
        /// Creates or updates an App Service Plan
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of App Service Plan
        /// </param>
        /// <param name='appServicePlan'>
        /// Details of App Service Plan
        /// </param>
        /// <param name='allowPendingState'>
        /// OBSOLETE: If true, allow pending state for App Service Plan
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<AppServicePlan>> CreateOrUpdateWithHttpMessagesAsync(string resourceGroupName, string name, AppServicePlan appServicePlan, bool? allowPendingState = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Creates or updates an App Service Plan
        /// </summary>
        /// Creates or updates an App Service Plan
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of App Service Plan
        /// </param>
        /// <param name='appServicePlan'>
        /// Details of App Service Plan
        /// </param>
        /// <param name='allowPendingState'>
        /// OBSOLETE: If true, allow pending state for App Service Plan
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<AppServicePlan>> BeginCreateOrUpdateWithHttpMessagesAsync(string resourceGroupName, string name, AppServicePlan appServicePlan, bool? allowPendingState = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Deletes a App Service Plan
        /// </summary>
        /// Deletes a App Service Plan
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of App Service Plan
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> DeleteWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// List serverfarm capabilities
        /// </summary>
        /// List serverfarm capabilities
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the App Service Plan
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IList<Capability>>> ListCapabilitiesWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves a specific Service Bus Hybrid Connection in use on this
        /// App Service Plan.
        /// </summary>
        /// Retrieves a specific Service Bus Hybrid Connection in use on this
        /// App Service Plan.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the App Service Plan
        /// </param>
        /// <param name='namespaceName'>
        /// The name of the Service Bus Namespace
        /// </param>
        /// <param name='relayName'>
        /// The name of the Service Bus Relay
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<HybridConnection>> GetHybridConnectionWithHttpMessagesAsync(string resourceGroupName, string name, string namespaceName, string relayName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates an existing Service Bus Hybrid Connection in use on this
        /// App Service Plan. This will fail if the Hybrid Connection does
        /// not already exist.
        /// </summary>
        /// Updates an existing Service Bus Hybrid Connection in use on this
        /// App Service Plan. This will fail if the Hybrid Connection does
        /// not already exist.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the App Service Plan
        /// </param>
        /// <param name='namespaceName'>
        /// The name of the Service Bus Namespace
        /// </param>
        /// <param name='relayName'>
        /// The name of the Service Bus Relay
        /// </param>
        /// <param name='connection'>
        /// The hybrid connection entity
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<HybridConnection>> UpdateHybridConnectionWithHttpMessagesAsync(string resourceGroupName, string name, string namespaceName, string relayName, HybridConnection connection, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Deletes an existing Service Bus Hybrid Connection in use on this
        /// App Service Plan.
        /// </summary>
        /// Deletes an existing Service Bus Hybrid Connection in use on this
        /// App Service Plan.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the App Service Plan
        /// </param>
        /// <param name='namespaceName'>
        /// The name of the Service Bus Namespace
        /// </param>
        /// <param name='relayName'>
        /// The name of the Service Bus Relay
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> DeleteHybridConnectionWithHttpMessagesAsync(string resourceGroupName, string name, string namespaceName, string relayName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the send key name and value for this Hybrid Connection
        /// </summary>
        /// Gets the send key name and value for this Hybrid Connection
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the App Service Plan
        /// </param>
        /// <param name='namespaceName'>
        /// The name of the Service Bus Namespace
        /// </param>
        /// <param name='relayName'>
        /// The name of the Service Bus Relay
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<HybridConnectionKey>> ListHybridConnectionKeysWithHttpMessagesAsync(string resourceGroupName, string name, string namespaceName, string relayName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets a list of sites that are using a particular Hybrid Connection
        /// on an App Service Plan
        /// </summary>
        /// Gets a list of sites that are using a particular Hybrid Connection
        /// on an App Service Plan
        /// <param name='resourceGroupName'>
        /// The resource group
        /// </param>
        /// <param name='name'>
        /// The name of the App Service Plan
        /// </param>
        /// <param name='namespaceName'>
        /// The Hybrid Connection namespace
        /// </param>
        /// <param name='relayName'>
        /// The Hybrid Connection relay name
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> ListHybridConnectionWebAppsWithHttpMessagesAsync(string resourceGroupName, string name, string namespaceName, string relayName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the maximum number of Hybrid Connections allowed on a
        /// specified App Service Plan
        /// </summary>
        /// Gets the maximum number of Hybrid Connections allowed on a
        /// specified App Service Plan
        /// <param name='resourceGroupName'>
        /// The resource group
        /// </param>
        /// <param name='name'>
        /// The name of the App Service Plan
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> GetHybridConnectionPlanLimitWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves all Service Bus Hybrid Connections in use on this App
        /// Service Plan
        /// </summary>
        /// Retrieves all Service Bus Hybrid Connections in use on this App
        /// Service Plan
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the App Service Plan
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<HybridConnection>> ListHybridConnectionsWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// List of metrics that can be queried for an App Service Plan
        /// </summary>
        /// List of metrics that can be queried for an App Service Plan
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of App Service Plan
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<MetricDefinition>>> ListMetricDefintionsWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Queries for App Serice Plan metrics
        /// </summary>
        /// Queries for App Serice Plan metrics
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of App Service Plan
        /// </param>
        /// <param name='details'>
        /// If true, metrics are broken down per App Service Plan instance
        /// </param>
        /// <param name='filter'>
        /// Return only usages/metrics specified in the filter. Filter
        /// conforms to odata syntax. Example: $filter=(name.value eq
        /// 'Metric1' or name.value eq 'Metric2') and startTime eq
        /// '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and
        /// timeGrain eq duration'[Hour|Minute|Day]'.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<ResourceMetric>>> ListMetricsWithHttpMessagesAsync(string resourceGroupName, string name, bool? details = default(bool?), string filter = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets a server farm operation
        /// </summary>
        /// Gets a server farm operation
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of server farm
        /// </param>
        /// <param name='operationId'>
        /// Id of Server farm operation"&amp;gt;
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<AppServicePlan>> GetOperationWithHttpMessagesAsync(string resourceGroupName, string name, string operationId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Restarts web apps in a specified App Service Plan
        /// </summary>
        /// Restarts web apps in a specified App Service Plan
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of App Service Plan
        /// </param>
        /// <param name='softRestart'>
        /// Soft restart applies the configuration settings and restarts the
        /// apps if necessary. Hard restart always restarts and reprovisions
        /// the apps
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> RestartWebAppsWithHttpMessagesAsync(string resourceGroupName, string name, bool? softRestart = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets list of Apps associated with an App Service Plan
        /// </summary>
        /// Gets list of Apps associated with an App Service Plan
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of App Service Plan
        /// </param>
        /// <param name='skipToken'>
        /// Skip to of web apps in a list. If specified, the resulting list
        /// will contain web apps starting from (including) the skipToken.
        /// Else, the resulting list contains web apps from the start of the
        /// list
        /// </param>
        /// <param name='filter'>
        /// Supported filter: $filter=state eq running. Returns only web apps
        /// that are currently running
        /// </param>
        /// <param name='top'>
        /// List page size. If specified, results are paged.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<Site>>> ListWebAppsWithHttpMessagesAsync(string resourceGroupName, string name, string skipToken = default(string), string filter = default(string), string top = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets list of vnets associated with App Service Plan
        /// </summary>
        /// Gets list of vnets associated with App Service Plan
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of App Service Plan
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IList<VnetInfo>>> ListVnetsWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets a vnet associated with an App Service Plan
        /// </summary>
        /// Gets a vnet associated with an App Service Plan
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of App Service Plan
        /// </param>
        /// <param name='vnetName'>
        /// Name of virtual network
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<VnetInfo>> GetVnetFromServerFarmWithHttpMessagesAsync(string resourceGroupName, string name, string vnetName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the vnet gateway.
        /// </summary>
        /// Gets the vnet gateway.
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of the App Service Plan
        /// </param>
        /// <param name='vnetName'>
        /// Name of the virtual network
        /// </param>
        /// <param name='gatewayName'>
        /// Name of the gateway. Only the 'primary' gateway is supported.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<VnetGateway>> GetVnetGatewayWithHttpMessagesAsync(string resourceGroupName, string name, string vnetName, string gatewayName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates the vnet gateway
        /// </summary>
        /// Updates the vnet gateway
        /// <param name='resourceGroupName'>
        /// The resource group
        /// </param>
        /// <param name='name'>
        /// The name of the App Service Plan
        /// </param>
        /// <param name='vnetName'>
        /// The name of the virtual network
        /// </param>
        /// <param name='gatewayName'>
        /// The name of the gateway. Only 'primary' is supported.
        /// </param>
        /// <param name='connectionEnvelope'>
        /// The gateway entity.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<VnetGateway>> UpdateVnetGatewayWithHttpMessagesAsync(string resourceGroupName, string name, string vnetName, string gatewayName, VnetGateway connectionEnvelope, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets a list of all routes associated with a vnet, in an app
        /// service plan
        /// </summary>
        /// Gets a list of all routes associated with a vnet, in an app
        /// service plan
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of App Service Plan
        /// </param>
        /// <param name='vnetName'>
        /// Name of virtual network
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IList<VnetRoute>>> ListtRoutesForVnetWithHttpMessagesAsync(string resourceGroupName, string name, string vnetName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets a specific route associated with a vnet, in an app service
        /// plan
        /// </summary>
        /// Gets a specific route associated with a vnet, in an app service
        /// plan
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of App Service Plan
        /// </param>
        /// <param name='vnetName'>
        /// Name of virtual network
        /// </param>
        /// <param name='routeName'>
        /// Name of the virtual network route
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IList<VnetRoute>>> GetRouteForVnetWithHttpMessagesAsync(string resourceGroupName, string name, string vnetName, string routeName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Creates a new route or updates an existing route for a vnet in an
        /// app service plan.
        /// </summary>
        /// Creates a new route or updates an existing route for a vnet in an
        /// app service plan.
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of App Service Plan
        /// </param>
        /// <param name='vnetName'>
        /// Name of virtual network
        /// </param>
        /// <param name='routeName'>
        /// Name of the virtual network route
        /// </param>
        /// <param name='route'>
        /// The route object
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<VnetRoute>> CreateOrUpdateVnetRouteWithHttpMessagesAsync(string resourceGroupName, string name, string vnetName, string routeName, VnetRoute route, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Deletes an existing route for a vnet in an app service plan.
        /// </summary>
        /// Deletes an existing route for a vnet in an app service plan.
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of App Service Plan
        /// </param>
        /// <param name='vnetName'>
        /// Name of virtual network
        /// </param>
        /// <param name='routeName'>
        /// Name of the virtual network route
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> DeleteVnetRouteWithHttpMessagesAsync(string resourceGroupName, string name, string vnetName, string routeName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Creates a new route or updates an existing route for a vnet in an
        /// app service plan.
        /// </summary>
        /// Creates a new route or updates an existing route for a vnet in an
        /// app service plan.
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of App Service Plan
        /// </param>
        /// <param name='vnetName'>
        /// Name of virtual network
        /// </param>
        /// <param name='routeName'>
        /// Name of the virtual network route
        /// </param>
        /// <param name='route'>
        /// The route object
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<VnetRoute>> UpdateVnetRouteWithHttpMessagesAsync(string resourceGroupName, string name, string vnetName, string routeName, VnetRoute route, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Submit a reboot request for a worker machine in the specified
        /// server farm
        /// </summary>
        /// Submit a reboot request for a worker machine in the specified
        /// server farm
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of server farm
        /// </param>
        /// <param name='workerName'>
        /// Name of worker machine, typically starts with RD
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> RebootWorkerWithHttpMessagesAsync(string resourceGroupName, string name, string workerName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets all App Service Plans for a subcription
        /// </summary>
        /// Gets all App Service Plans for a subcription
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<AppServicePlan>>> ListNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets collection of App Service Plans in a resource group for a
        /// given subscription.
        /// </summary>
        /// Gets collection of App Service Plans in a resource group for a
        /// given subscription.
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<AppServicePlan>>> ListByResourceGroupNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// List of metrics that can be queried for an App Service Plan
        /// </summary>
        /// List of metrics that can be queried for an App Service Plan
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<MetricDefinition>>> ListMetricDefintionsNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Queries for App Serice Plan metrics
        /// </summary>
        /// Queries for App Serice Plan metrics
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<ResourceMetric>>> ListMetricsNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets list of Apps associated with an App Service Plan
        /// </summary>
        /// Gets list of Apps associated with an App Service Plan
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<Site>>> ListWebAppsNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
