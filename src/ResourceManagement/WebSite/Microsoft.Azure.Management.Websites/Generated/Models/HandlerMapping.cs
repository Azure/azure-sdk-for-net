// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// The IIS handler mappings used to define which handler processes HTTP
    /// requests with certain extension.
    /// For example it is used to configure php-cgi.exe process to
    /// handle all HTTP requests with *.php extension.
    /// </summary>
    public partial class HandlerMapping
    {
        /// <summary>
        /// Initializes a new instance of the HandlerMapping class.
        /// </summary>
        public HandlerMapping() { }

        /// <summary>
        /// Initializes a new instance of the HandlerMapping class.
        /// </summary>
        public HandlerMapping(string extension = default(string), string scriptProcessor = default(string), string arguments = default(string))
        {
            Extension = extension;
            ScriptProcessor = scriptProcessor;
            Arguments = arguments;
        }

        /// <summary>
        /// Requests with this extension will be handled using the specified
        /// FastCGI application.
        /// </summary>
        [JsonProperty(PropertyName = "extension")]
        public string Extension { get; set; }

        /// <summary>
        /// The absolute path to the FastCGI application.
        /// </summary>
        [JsonProperty(PropertyName = "scriptProcessor")]
        public string ScriptProcessor { get; set; }

        /// <summary>
        /// Command-line arguments to be passed to the script processor.
        /// </summary>
        [JsonProperty(PropertyName = "arguments")]
        public string Arguments { get; set; }

    }
}
