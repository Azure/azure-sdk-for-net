// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// Worker pool of a hostingEnvironment (App Service Environment)
    /// </summary>
    public partial class WorkerPool : Resource
    {
        /// <summary>
        /// Initializes a new instance of the WorkerPool class.
        /// </summary>
        public WorkerPool() { }

        /// <summary>
        /// Initializes a new instance of the WorkerPool class.
        /// </summary>
        public WorkerPool(string location, string id = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), SkuDescription sku = default(SkuDescription), int? workerSizeId = default(int?), ComputeModeOptions? computeMode = default(ComputeModeOptions?), string workerSize = default(string), int? workerCount = default(int?), IList<string> instanceNames = default(IList<string>))
            : base(location, id, name, type, tags)
        {
            Sku = sku;
            WorkerSizeId = workerSizeId;
            ComputeMode = computeMode;
            WorkerSize = workerSize;
            WorkerCount = workerCount;
            InstanceNames = instanceNames;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sku")]
        public SkuDescription Sku { get; set; }

        /// <summary>
        /// Worker size id for referencing this worker pool
        /// </summary>
        [JsonProperty(PropertyName = "properties.workerSizeId")]
        public int? WorkerSizeId { get; set; }

        /// <summary>
        /// Shared or dedicated web app hosting. Possible values for this
        /// property include: 'Shared', 'Dedicated', 'Dynamic'.
        /// </summary>
        [JsonProperty(PropertyName = "properties.computeMode")]
        public ComputeModeOptions? ComputeMode { get; set; }

        /// <summary>
        /// VM size of the worker pool instances
        /// </summary>
        [JsonProperty(PropertyName = "properties.workerSize")]
        public string WorkerSize { get; set; }

        /// <summary>
        /// Number of instances in the worker pool
        /// </summary>
        [JsonProperty(PropertyName = "properties.workerCount")]
        public int? WorkerCount { get; set; }

        /// <summary>
        /// Names of all instances in the worker pool (read only)
        /// </summary>
        [JsonProperty(PropertyName = "properties.instanceNames")]
        public IList<string> InstanceNames { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
