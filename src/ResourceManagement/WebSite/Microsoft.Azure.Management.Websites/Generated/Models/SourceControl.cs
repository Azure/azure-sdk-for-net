// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// Describes the Source Control OAuth Token
    /// </summary>
    [JsonTransformation]
    public partial class SourceControl : Resource
    {
        /// <summary>
        /// Initializes a new instance of the SourceControl class.
        /// </summary>
        public SourceControl() { }

        /// <summary>
        /// Initializes a new instance of the SourceControl class.
        /// </summary>
        public SourceControl(string name, string location, string id = default(string), string kind = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string sourceControlName = default(string), string token = default(string), string tokenSecret = default(string), string refreshToken = default(string), DateTime? expirationTime = default(DateTime?))
            : base(name, location, id, kind, type, tags)
        {
            SourceControlName = sourceControlName;
            Token = token;
            TokenSecret = tokenSecret;
            RefreshToken = refreshToken;
            ExpirationTime = expirationTime;
        }

        /// <summary>
        /// Name or Source Control Type
        /// </summary>
        [JsonProperty(PropertyName = "properties.name")]
        public string SourceControlName { get; set; }

        /// <summary>
        /// OAuth Access Token
        /// </summary>
        [JsonProperty(PropertyName = "properties.token")]
        public string Token { get; set; }

        /// <summary>
        /// OAuth Access Token Secret
        /// </summary>
        [JsonProperty(PropertyName = "properties.tokenSecret")]
        public string TokenSecret { get; set; }

        /// <summary>
        /// OAuth Refresh Token
        /// </summary>
        [JsonProperty(PropertyName = "properties.refreshToken")]
        public string RefreshToken { get; set; }

        /// <summary>
        /// OAuth Token Expiration
        /// </summary>
        [JsonProperty(PropertyName = "properties.expirationTime")]
        public DateTime? ExpirationTime { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
