// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// Push settings for the Web App.
    /// </summary>
    public partial class PushSettings
    {
        /// <summary>
        /// Initializes a new instance of the PushSettings class.
        /// </summary>
        public PushSettings() { }

        /// <summary>
        /// Initializes a new instance of the PushSettings class.
        /// </summary>
        public PushSettings(bool? isPushEnabled = default(bool?), string tagWhitelistJson = default(string), string tagsRequiringAuth = default(string), string dynamicTagsJson = default(string))
        {
            IsPushEnabled = isPushEnabled;
            TagWhitelistJson = tagWhitelistJson;
            TagsRequiringAuth = tagsRequiringAuth;
            DynamicTagsJson = dynamicTagsJson;
        }

        /// <summary>
        /// Gets or sets a flag indicating whether the Push endpoint is
        /// enabled.
        /// </summary>
        [JsonProperty(PropertyName = "isPushEnabled")]
        public bool? IsPushEnabled { get; set; }

        /// <summary>
        /// Gets or sets a JSON string containing a list of tags that are
        /// whitelisted for use by the push registration endpoint.
        /// </summary>
        [JsonProperty(PropertyName = "tagWhitelistJson")]
        public string TagWhitelistJson { get; set; }

        /// <summary>
        /// Gets or sets a JSON string containing a list of tags that require
        /// user authentication to be used in the push registration endpoint.
        /// </summary>
        [JsonProperty(PropertyName = "tagsRequiringAuth")]
        public string TagsRequiringAuth { get; set; }

        /// <summary>
        /// Gets or sets a JSON string containing a list of dynamic tags that
        /// will be evaluated from user claims in the push registration
        /// endpoint.
        /// </summary>
        [JsonProperty(PropertyName = "dynamicTagsJson")]
        public string DynamicTagsJson { get; set; }

    }
}
