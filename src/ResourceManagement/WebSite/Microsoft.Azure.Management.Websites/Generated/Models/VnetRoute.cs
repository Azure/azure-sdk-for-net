// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// VnetRoute contract used to pass routing information for a vnet.
    /// </summary>
    [JsonTransformation]
    public partial class VnetRoute : Resource
    {
        /// <summary>
        /// Initializes a new instance of the VnetRoute class.
        /// </summary>
        public VnetRoute() { }

        /// <summary>
        /// Initializes a new instance of the VnetRoute class.
        /// </summary>
        public VnetRoute(string name, string location, string id = default(string), string kind = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string vnetRouteName = default(string), string startAddress = default(string), string endAddress = default(string), string routeType = default(string))
            : base(name, location, id, kind, type, tags)
        {
            VnetRouteName = vnetRouteName;
            StartAddress = startAddress;
            EndAddress = endAddress;
            RouteType = routeType;
        }

        /// <summary>
        /// The name of this route. This is only returned by the server and
        /// does not need to be set by the client.
        /// </summary>
        [JsonProperty(PropertyName = "properties.name")]
        public string VnetRouteName { get; set; }

        /// <summary>
        /// The starting address for this route. This may also include a CIDR
        /// notation, in which case the end address must not be specified.
        /// </summary>
        [JsonProperty(PropertyName = "properties.startAddress")]
        public string StartAddress { get; set; }

        /// <summary>
        /// The ending address for this route. If the start address is
        /// specified in CIDR notation, this must be omitted.
        /// </summary>
        [JsonProperty(PropertyName = "properties.endAddress")]
        public string EndAddress { get; set; }

        /// <summary>
        /// The type of route this is:
        /// DEFAULT - By default, every web app has routes to the
        /// local address ranges specified by RFC1918
        /// INHERITED - Routes inherited from the real Virtual
        /// Network routes
        /// STATIC - Static route set on the web app only
        /// 
        /// These values will be used for syncing a Web App's
        /// routes with those from a Virtual Network. This operation will
        /// clear all DEFAULT and INHERITED routes and replace them
        /// with new INHERITED routes.
        /// </summary>
        [JsonProperty(PropertyName = "properties.routeType")]
        public string RouteType { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
