// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// App Service Plan Model
    /// </summary>
    [JsonTransformation]
    public partial class AppServicePlan : Resource
    {
        /// <summary>
        /// Initializes a new instance of the AppServicePlan class.
        /// </summary>
        public AppServicePlan() { }

        /// <summary>
        /// Initializes a new instance of the AppServicePlan class.
        /// </summary>
        public AppServicePlan(string name, string location, string id = default(string), string kind = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string appServicePlanName = default(string), string workerTierName = default(string), StatusOptions? status = default(StatusOptions?), string subscription = default(string), string adminSiteName = default(string), HostingEnvironmentProfile hostingEnvironmentProfile = default(HostingEnvironmentProfile), int? maximumNumberOfWorkers = default(int?), string geoRegion = default(string), bool? perSiteScaling = default(bool?), int? numberOfSites = default(int?), string resourceGroup = default(string), SkuDescription sku = default(SkuDescription))
            : base(name, location, id, kind, type, tags)
        {
            AppServicePlanName = appServicePlanName;
            WorkerTierName = workerTierName;
            Status = status;
            Subscription = subscription;
            AdminSiteName = adminSiteName;
            HostingEnvironmentProfile = hostingEnvironmentProfile;
            MaximumNumberOfWorkers = maximumNumberOfWorkers;
            GeoRegion = geoRegion;
            PerSiteScaling = perSiteScaling;
            NumberOfSites = numberOfSites;
            ResourceGroup = resourceGroup;
            Sku = sku;
        }

        /// <summary>
        /// Name for the App Service Plan
        /// </summary>
        [JsonProperty(PropertyName = "properties.name")]
        public string AppServicePlanName { get; set; }

        /// <summary>
        /// Target worker tier assigned to the App Service Plan
        /// </summary>
        [JsonProperty(PropertyName = "properties.workerTierName")]
        public string WorkerTierName { get; set; }

        /// <summary>
        /// App Service Plan Status. Possible values include: 'Ready',
        /// 'Pending'
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public StatusOptions? Status { get; set; }

        /// <summary>
        /// App Service Plan Subscription
        /// </summary>
        [JsonProperty(PropertyName = "properties.subscription")]
        public string Subscription { get; set; }

        /// <summary>
        /// App Service Plan administration site
        /// </summary>
        [JsonProperty(PropertyName = "properties.adminSiteName")]
        public string AdminSiteName { get; set; }

        /// <summary>
        /// Specification for the hosting environment (App Service
        /// Environment) to use for the App Service Plan
        /// </summary>
        [JsonProperty(PropertyName = "properties.hostingEnvironmentProfile")]
        public HostingEnvironmentProfile HostingEnvironmentProfile { get; set; }

        /// <summary>
        /// Maximum number of instances that can be assigned to this App
        /// Service Plan
        /// </summary>
        [JsonProperty(PropertyName = "properties.maximumNumberOfWorkers")]
        public int? MaximumNumberOfWorkers { get; set; }

        /// <summary>
        /// Geographical location for the App Service Plan
        /// </summary>
        [JsonProperty(PropertyName = "properties.geoRegion")]
        public string GeoRegion { get; set; }

        /// <summary>
        /// If True apps assigned to this App Service Plan can be scaled
        /// independently
        /// If False apps assigned to this App Service Plan will
        /// scale to all instances of the plan
        /// </summary>
        [JsonProperty(PropertyName = "properties.perSiteScaling")]
        public bool? PerSiteScaling { get; set; }

        /// <summary>
        /// Number of web apps assigned to this App Service Plan
        /// </summary>
        [JsonProperty(PropertyName = "properties.numberOfSites")]
        public int? NumberOfSites { get; set; }

        /// <summary>
        /// Resource group of the serverfarm
        /// </summary>
        [JsonProperty(PropertyName = "properties.resourceGroup")]
        public string ResourceGroup { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sku")]
        public SkuDescription Sku { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
