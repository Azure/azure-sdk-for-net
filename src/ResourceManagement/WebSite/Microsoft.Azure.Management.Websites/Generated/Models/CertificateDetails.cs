// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// Certificate Details
    /// </summary>
    [JsonTransformation]
    public partial class CertificateDetails : Resource
    {
        /// <summary>
        /// Initializes a new instance of the CertificateDetails class.
        /// </summary>
        public CertificateDetails() { }

        /// <summary>
        /// Initializes a new instance of the CertificateDetails class.
        /// </summary>
        public CertificateDetails(string name, string location, string id = default(string), string kind = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), int? version = default(int?), string serialNumber = default(string), string thumbprint = default(string), string subject = default(string), DateTime? notBefore = default(DateTime?), DateTime? notAfter = default(DateTime?), string signatureAlgorithm = default(string), string issuer = default(string), string rawData = default(string))
            : base(name, location, id, kind, type, tags)
        {
            Version = version;
            SerialNumber = serialNumber;
            Thumbprint = thumbprint;
            Subject = subject;
            NotBefore = notBefore;
            NotAfter = notAfter;
            SignatureAlgorithm = signatureAlgorithm;
            Issuer = issuer;
            RawData = rawData;
        }

        /// <summary>
        /// Version
        /// </summary>
        [JsonProperty(PropertyName = "properties.version")]
        public int? Version { get; set; }

        /// <summary>
        /// Serial Number
        /// </summary>
        [JsonProperty(PropertyName = "properties.serialNumber")]
        public string SerialNumber { get; set; }

        /// <summary>
        /// Thumbprint
        /// </summary>
        [JsonProperty(PropertyName = "properties.thumbprint")]
        public string Thumbprint { get; set; }

        /// <summary>
        /// Subject
        /// </summary>
        [JsonProperty(PropertyName = "properties.subject")]
        public string Subject { get; set; }

        /// <summary>
        /// Valid from
        /// </summary>
        [JsonProperty(PropertyName = "properties.notBefore")]
        public DateTime? NotBefore { get; set; }

        /// <summary>
        /// Valid to
        /// </summary>
        [JsonProperty(PropertyName = "properties.notAfter")]
        public DateTime? NotAfter { get; set; }

        /// <summary>
        /// Signature Algorithm
        /// </summary>
        [JsonProperty(PropertyName = "properties.signatureAlgorithm")]
        public string SignatureAlgorithm { get; set; }

        /// <summary>
        /// Issuer
        /// </summary>
        [JsonProperty(PropertyName = "properties.issuer")]
        public string Issuer { get; set; }

        /// <summary>
        /// Raw certificate data
        /// </summary>
        [JsonProperty(PropertyName = "properties.rawData")]
        public string RawData { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
