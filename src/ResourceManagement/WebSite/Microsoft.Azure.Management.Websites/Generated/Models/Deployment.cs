// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// Represents user crendentials used for publishing activity
    /// </summary>
    [JsonTransformation]
    public partial class Deployment : Resource
    {
        /// <summary>
        /// Initializes a new instance of the Deployment class.
        /// </summary>
        public Deployment() { }

        /// <summary>
        /// Initializes a new instance of the Deployment class.
        /// </summary>
        public Deployment(string name, string location, string id = default(string), string kind = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string deploymentId = default(string), int? status = default(int?), string message = default(string), string author = default(string), string deployer = default(string), string authorEmail = default(string), DateTime? startTime = default(DateTime?), DateTime? endTime = default(DateTime?), bool? active = default(bool?), string details = default(string))
            : base(name, location, id, kind, type, tags)
        {
            DeploymentId = deploymentId;
            Status = status;
            Message = message;
            Author = author;
            Deployer = deployer;
            AuthorEmail = authorEmail;
            StartTime = startTime;
            EndTime = endTime;
            Active = active;
            Details = details;
        }

        /// <summary>
        /// Id
        /// </summary>
        [JsonProperty(PropertyName = "properties.id")]
        public string DeploymentId { get; set; }

        /// <summary>
        /// Status
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public int? Status { get; set; }

        /// <summary>
        /// Message
        /// </summary>
        [JsonProperty(PropertyName = "properties.message")]
        public string Message { get; set; }

        /// <summary>
        /// Author
        /// </summary>
        [JsonProperty(PropertyName = "properties.author")]
        public string Author { get; set; }

        /// <summary>
        /// Deployer
        /// </summary>
        [JsonProperty(PropertyName = "properties.deployer")]
        public string Deployer { get; set; }

        /// <summary>
        /// AuthorEmail
        /// </summary>
        [JsonProperty(PropertyName = "properties.author_email")]
        public string AuthorEmail { get; set; }

        /// <summary>
        /// StartTime
        /// </summary>
        [JsonProperty(PropertyName = "properties.start_time")]
        public DateTime? StartTime { get; set; }

        /// <summary>
        /// EndTime
        /// </summary>
        [JsonProperty(PropertyName = "properties.end_time")]
        public DateTime? EndTime { get; set; }

        /// <summary>
        /// Active
        /// </summary>
        [JsonProperty(PropertyName = "properties.active")]
        public bool? Active { get; set; }

        /// <summary>
        /// Detail
        /// </summary>
        [JsonProperty(PropertyName = "properties.details")]
        public string Details { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
