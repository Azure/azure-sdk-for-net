// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.WebSites
{
    using System;
    using System.Collections.Generic;
    using System.Net.Http;
    using System.Threading;
    using System.Threading.Tasks;
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// WebAppsOperations operations.
    /// </summary>
    public partial interface IWebAppsOperations
    {
        /// <summary>
        /// Gets all Web Apps for a subscription
        /// </summary>
        /// Gets all Web Apps for a subscription
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<Site>>> ListWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets deleted web apps in subscription
        /// </summary>
        /// Gets deleted web apps in subscription
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='propertiesToInclude'>
        /// Additional web app properties included in the response
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<DeletedSite>>> ListDeletedWithHttpMessagesAsync(string resourceGroupName, string propertiesToInclude = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the web apps for a subscription in the specified resource
        /// group
        /// </summary>
        /// Gets the web apps for a subscription in the specified resource
        /// group
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='propertiesToInclude'>
        /// Additional web app properties included in the response
        /// </param>
        /// <param name='includeSlots'>
        /// Whether or not to include deployments slots in results
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<Site>>> ListByResourceGroupWithHttpMessagesAsync(string resourceGroupName, string propertiesToInclude = default(string), bool? includeSlots = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get details of a web app
        /// </summary>
        /// Get details of a web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='propertiesToInclude'>
        /// Additional web app properties included in the response
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<Site>> GetWithHttpMessagesAsync(string resourceGroupName, string name, string propertiesToInclude = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Creates a new web app or modifies an existing web app.
        /// </summary>
        /// Creates a new web app or modifies an existing web app.
        /// <param name='resourceGroupName'>
        /// Name of the resource group
        /// </param>
        /// <param name='name'>
        /// Name of the web app
        /// </param>
        /// <param name='siteEnvelope'>
        /// Details of web app if it exists already
        /// </param>
        /// <param name='skipDnsRegistration'>
        /// If true web app hostname is not registered with DNS on creation.
        /// This parameter is
        /// only used for app creation
        /// </param>
        /// <param name='skipCustomDomainVerification'>
        /// If true, custom (non *.azurewebsites.net) domains associated with
        /// web app are not verified.
        /// </param>
        /// <param name='forceDnsRegistration'>
        /// If true, web app hostname is force registered with DNS
        /// </param>
        /// <param name='ttlInSeconds'>
        /// Time to live in seconds for web app's default domain name
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<Site>> CreateOrUpdateWithHttpMessagesAsync(string resourceGroupName, string name, Site siteEnvelope, bool? skipDnsRegistration = default(bool?), bool? skipCustomDomainVerification = default(bool?), bool? forceDnsRegistration = default(bool?), string ttlInSeconds = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Creates a new web app or modifies an existing web app.
        /// </summary>
        /// Creates a new web app or modifies an existing web app.
        /// <param name='resourceGroupName'>
        /// Name of the resource group
        /// </param>
        /// <param name='name'>
        /// Name of the web app
        /// </param>
        /// <param name='siteEnvelope'>
        /// Details of web app if it exists already
        /// </param>
        /// <param name='skipDnsRegistration'>
        /// If true web app hostname is not registered with DNS on creation.
        /// This parameter is
        /// only used for app creation
        /// </param>
        /// <param name='skipCustomDomainVerification'>
        /// If true, custom (non *.azurewebsites.net) domains associated with
        /// web app are not verified.
        /// </param>
        /// <param name='forceDnsRegistration'>
        /// If true, web app hostname is force registered with DNS
        /// </param>
        /// <param name='ttlInSeconds'>
        /// Time to live in seconds for web app's default domain name
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<Site>> BeginCreateOrUpdateWithHttpMessagesAsync(string resourceGroupName, string name, Site siteEnvelope, bool? skipDnsRegistration = default(bool?), bool? skipCustomDomainVerification = default(bool?), bool? forceDnsRegistration = default(bool?), string ttlInSeconds = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Deletes a web app
        /// </summary>
        /// Deletes a web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='deleteMetrics'>
        /// If true, web app metrics are also deleted
        /// </param>
        /// <param name='deleteEmptyServerFarm'>
        /// If true and App Service Plan is empty after web app deletion, App
        /// Service Plan is also deleted
        /// </param>
        /// <param name='skipDnsRegistration'>
        /// If true, DNS registration is skipped
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> DeleteWithHttpMessagesAsync(string resourceGroupName, string name, bool? deleteMetrics = default(bool?), bool? deleteEmptyServerFarm = default(bool?), bool? skipDnsRegistration = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Analyze a custom hostname
        /// </summary>
        /// Analyze a custom hostname
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='hostName'>
        /// Custom hostname
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<CustomHostnameAnalysisResult>> AnalyzeCustomHostnameWithHttpMessagesAsync(string resourceGroupName, string name, string hostName = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Applies the configuration settings from the target slot onto the
        /// current slot
        /// </summary>
        /// Applies the configuration settings from the target slot onto the
        /// current slot
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slotSwapEntity'>
        /// Request body that contains the target slot name. Settings from
        /// that slot will be applied on the source slot
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> ApplySlotConfigToProductionWithHttpMessagesAsync(string resourceGroupName, string name, CsmSlotEntity slotSwapEntity, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Creates web app backup
        /// </summary>
        /// Creates web app backup
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='request'>
        /// Information on backup request
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<BackupItem>> BackupWithHttpMessagesAsync(string resourceGroupName, string name, BackupRequest request, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Lists all available backups for web app
        /// </summary>
        /// Lists all available backups for web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<BackupItem>>> ListBackupsWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Discovers existing web app backups that can be restored
        /// </summary>
        /// Discovers existing web app backups that can be restored
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='request'>
        /// Information on restore request
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<RestoreRequest>> DiscoverRestoreWithHttpMessagesAsync(string resourceGroupName, string name, RestoreRequest request, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets status of a web app backup that may be in progress.
        /// </summary>
        /// Gets status of a web app backup that may be in progress.
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='backupId'>
        /// Id of backup
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<BackupItem>> GetBackupStatusWithHttpMessagesAsync(string resourceGroupName, string name, string backupId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Deletes a backup from Azure Storage
        /// </summary>
        /// Deletes a backup from Azure Storage
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='backupId'>
        /// Id of backup
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<BackupItem>> DeleteBackupWithHttpMessagesAsync(string resourceGroupName, string name, string backupId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets status of a web app backup that may be in progress, including
        /// secrets associated with the backup, such as the Azure Storage SAS
        /// URL. Also can be used to update the SAS URL for the backup if a
        /// new URL is passed in the request body.
        /// </summary>
        /// Gets status of a web app backup that may be in progress, including
        /// secrets associated with the backup, such as the Azure Storage SAS
        /// URL. Also can be used to update the SAS URL for the backup if a
        /// new URL is passed in the request body.
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='backupId'>
        /// Id of backup
        /// </param>
        /// <param name='request'>
        /// Information on backup request
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<BackupItem>> ListBackupStatusSecretsWithHttpMessagesAsync(string resourceGroupName, string name, string backupId, BackupRequest request, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Restores a web app
        /// </summary>
        /// Restores a web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='backupId'>
        /// Id of backup to restore
        /// </param>
        /// <param name='request'>
        /// Information on restore request
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<RestoreResponse>> RestoreWithHttpMessagesAsync(string resourceGroupName, string name, string backupId, RestoreRequest request, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Restores a web app
        /// </summary>
        /// Restores a web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='backupId'>
        /// Id of backup to restore
        /// </param>
        /// <param name='request'>
        /// Information on restore request
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<RestoreResponse>> BeginRestoreWithHttpMessagesAsync(string resourceGroupName, string name, string backupId, RestoreRequest request, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates the application settings of web app
        /// </summary>
        /// Updates the application settings of web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='appSettings'>
        /// Application settings of web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<StringDictionary>> UpdateApplicationSettingsWithHttpMessagesAsync(string resourceGroupName, string name, StringDictionary appSettings, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the application settings of web app
        /// </summary>
        /// Gets the application settings of web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<StringDictionary>> ListApplicationSettingsWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates the Authentication / Authorization settings associated
        /// with web app
        /// </summary>
        /// Updates the Authentication / Authorization settings associated
        /// with web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='siteAuthSettings'>
        /// Auth settings associated with web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<SiteAuthSettings>> UpdateAuthSettingsWithHttpMessagesAsync(string resourceGroupName, string name, SiteAuthSettings siteAuthSettings, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the Authentication / Authorization settings associated with
        /// web app
        /// </summary>
        /// Gets the Authentication / Authorization settings associated with
        /// web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<SiteAuthSettings>> ListAuthSettingsWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates backup configuration of web app
        /// </summary>
        /// Updates backup configuration of web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='request'>
        /// Information on backup request
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<BackupRequest>> UpdateBackupConfigurationWithHttpMessagesAsync(string resourceGroupName, string name, BackupRequest request, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Removes the backup configuration for a web app
        /// </summary>
        /// Removes the backup configuration for a web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> DeleteBackupConfigurationWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the backup configuration for a web app
        /// </summary>
        /// Gets the backup configuration for a web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<BackupRequest>> GetBackupConfigurationWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates the connection strings associated with web app
        /// </summary>
        /// Updates the connection strings associated with web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='connectionStrings'>
        /// Connection strings associated with web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<ConnectionStringDictionary>> UpdateConnectionStringsWithHttpMessagesAsync(string resourceGroupName, string name, ConnectionStringDictionary connectionStrings, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the connection strings associated with web app
        /// </summary>
        /// Gets the connection strings associated with web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<ConnectionStringDictionary>> ListConnectionStringsWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the web app logs configuration
        /// </summary>
        /// Gets the web app logs configuration
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<SiteLogsConfig>> GetDiagnosticLogsConfigurationWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates the meta data for web app
        /// </summary>
        /// Updates the meta data for web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='siteLogsConfig'>
        /// Site logs configuration
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<SiteLogsConfig>> UpdateDiagnosticLogsConfigWithHttpMessagesAsync(string resourceGroupName, string name, SiteLogsConfig siteLogsConfig, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates the meta data for web app
        /// </summary>
        /// Updates the meta data for web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='metadata'>
        /// Meta data of web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<StringDictionary>> UpdateMetadataWithHttpMessagesAsync(string resourceGroupName, string name, StringDictionary metadata, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the web app meta data.
        /// </summary>
        /// Gets the web app meta data.
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<StringDictionary>> ListMetadataWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the web app publishing credentials
        /// </summary>
        /// Gets the web app publishing credentials
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<User>> ListPublishingCredentialsWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the web app publishing credentials
        /// </summary>
        /// Gets the web app publishing credentials
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<User>> BeginListPublishingCredentialsWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates the Push settings associated with web app
        /// </summary>
        /// Updates the Push settings associated with web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='pushSettings'>
        /// Push settings associated with web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<PushSettings>> UpdateSitePushSettingsWithHttpMessagesAsync(string resourceGroupName, string name, PushSettings pushSettings, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the Push settings associated with web app
        /// </summary>
        /// Gets the Push settings associated with web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<PushSettings>> ListSitePushSettingsWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the names of application settings and connection string that
        /// remain with the slot during swap operation
        /// </summary>
        /// Gets the names of application settings and connection string that
        /// remain with the slot during swap operation
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<SlotConfigNamesResource>> ListSlotConfigurationNamesWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates the names of application settings and connection string
        /// that remain with the slot during swap operation
        /// </summary>
        /// Updates the names of application settings and connection string
        /// that remain with the slot during swap operation
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slotConfigNames'>
        /// Request body containing the names of application settings and
        /// connection strings
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<SlotConfigNamesResource>> UpdateSlotConfigurationNamesWithHttpMessagesAsync(string resourceGroupName, string name, SlotConfigNamesResource slotConfigNames, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the configuration of the web app
        /// </summary>
        /// Gets the configuration of the web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<SiteConfig>> GetConfigurationWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Update the configuration of web app
        /// </summary>
        /// Update the configuration of web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='siteConfig'>
        /// Request body that contains the configuraiton setting for the web
        /// app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<SiteConfig>> CreateOrUpdateConfigurationWithHttpMessagesAsync(string resourceGroupName, string name, SiteConfig siteConfig, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Update the configuration of web app
        /// </summary>
        /// Update the configuration of web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='siteConfig'>
        /// Request body that contains the configuraiton setting for the web
        /// app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<SiteConfig>> UpdateConfigurationWithHttpMessagesAsync(string resourceGroupName, string name, SiteConfig siteConfig, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// List deployments
        /// </summary>
        /// List deployments
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<Deployment>>> ListDeploymentsWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get the deployment
        /// </summary>
        /// Get the deployment
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='id'>
        /// Id of the deployment
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<Deployment>> GetDeploymentWithHttpMessagesAsync(string resourceGroupName, string name, string id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Create a deployment
        /// </summary>
        /// Create a deployment
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='id'>
        /// Id of the deployment
        /// </param>
        /// <param name='deployment'>
        /// Details of deployment
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<Deployment>> CreateDeploymentWithHttpMessagesAsync(string resourceGroupName, string name, string id, Deployment deployment, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Delete the deployment
        /// </summary>
        /// Delete the deployment
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='id'>
        /// Id of the deployment
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> DeleteDeploymentWithHttpMessagesAsync(string resourceGroupName, string name, string id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get web app hostname bindings
        /// </summary>
        /// Get web app hostname bindings
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<HostNameBinding>>> ListHostNameBindingsWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get web app binding for a hostname
        /// </summary>
        /// Get web app binding for a hostname
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='hostName'>
        /// Name of host
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<HostNameBinding>> GetHostNameBindingWithHttpMessagesAsync(string resourceGroupName, string name, string hostName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Creates a web app hostname binding
        /// </summary>
        /// Creates a web app hostname binding
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='hostName'>
        /// Name of host
        /// </param>
        /// <param name='hostNameBinding'>
        /// Host name binding information
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<HostNameBinding>> CreateOrUpdateHostNameBindingWithHttpMessagesAsync(string resourceGroupName, string name, string hostName, HostNameBinding hostNameBinding, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Deletes a host name binding
        /// </summary>
        /// Deletes a host name binding
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='hostName'>
        /// Name of host
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> DeleteHostNameBindingWithHttpMessagesAsync(string resourceGroupName, string name, string hostName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves a specific Service Bus Hybrid Connection used by this
        /// Web App.
        /// </summary>
        /// Retrieves a specific Service Bus Hybrid Connection used by this
        /// Web App.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='namespaceName'>
        /// The namespace for this hybrid connection
        /// </param>
        /// <param name='relayName'>
        /// The relay name for this hybrid connection
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<HybridConnection>> GetHybridConnectionWithHttpMessagesAsync(string resourceGroupName, string name, string namespaceName, string relayName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Creates a new Hybrid Connection using a Service Bus relay
        /// </summary>
        /// Creates a new Hybrid Connection using a Service Bus relay
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='namespaceName'>
        /// The namespace for this hybrid connection
        /// </param>
        /// <param name='relayName'>
        /// The relay name for this hybrid connection
        /// </param>
        /// <param name='connectionEnvelope'>
        /// The details of the hybrid connection
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<HybridConnection>> CreateOrUpdateHybridConnectionWithHttpMessagesAsync(string resourceGroupName, string name, string namespaceName, string relayName, HybridConnection connectionEnvelope, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Removes a Hybrid Connection from this site.
        /// </summary>
        /// Removes a Hybrid Connection from this site.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='namespaceName'>
        /// The namespace for this hybrid connection
        /// </param>
        /// <param name='relayName'>
        /// The relay name for this hybrid connection
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> DeleteHybridConnectionWithHttpMessagesAsync(string resourceGroupName, string name, string namespaceName, string relayName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Creates a new Hybrid Connection using a Service Bus relay
        /// </summary>
        /// Creates a new Hybrid Connection using a Service Bus relay
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='namespaceName'>
        /// The namespace for this hybrid connection
        /// </param>
        /// <param name='relayName'>
        /// The relay name for this hybrid connection
        /// </param>
        /// <param name='connectionEnvelope'>
        /// The details of the hybrid connection
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<HybridConnection>> UpdateHybridConnectionWithHttpMessagesAsync(string resourceGroupName, string name, string namespaceName, string relayName, HybridConnection connectionEnvelope, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the send key name and value for a Hybrid Connection
        /// </summary>
        /// Gets the send key name and value for a Hybrid Connection
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='namespaceName'>
        /// The namespace for this hybrid connection
        /// </param>
        /// <param name='relayName'>
        /// The relay name for this hybrid connection
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> ListHybridConnectionKeysWithHttpMessagesAsync(string resourceGroupName, string name, string namespaceName, string relayName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves all Service Bus Hybrid Connections used by this Web App.
        /// </summary>
        /// Retrieves all Service Bus Hybrid Connections used by this Web App.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<HybridConnection>> ListHybridConnectionsWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves all Biztalk Hybrid Connections associated with this web
        /// app.
        /// </summary>
        /// Retrieves all Biztalk Hybrid Connections associated with this web
        /// app.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<RelayServiceConnectionEntity>> ListRelayServiceConnectionsWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves a Biztalk Hybrid Connection identified by its entity
        /// name.
        /// </summary>
        /// Retrieves a Biztalk Hybrid Connection identified by its entity
        /// name.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='entityName'>
        /// The name by which the Hybrid Connection is identified
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<RelayServiceConnectionEntity>> GetRelayServiceConnectionWithHttpMessagesAsync(string resourceGroupName, string name, string entityName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Creates a new association to a Biztalk Hybrid Connection, or
        /// updates an existing one.
        /// </summary>
        /// Creates a new association to a Biztalk Hybrid Connection, or
        /// updates an existing one.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='entityName'>
        /// The name by which the Hybrid Connection is identified
        /// </param>
        /// <param name='connectionEnvelope'>
        /// The details of the Hybrid Connection
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<RelayServiceConnectionEntity>> CreateOrUpdateRelayServiceConnectionWithHttpMessagesAsync(string resourceGroupName, string name, string entityName, RelayServiceConnectionEntity connectionEnvelope, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Removes the association to a Biztalk Hybrid Connection, identified
        /// by its entity name.
        /// </summary>
        /// Removes the association to a Biztalk Hybrid Connection, identified
        /// by its entity name.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='entityName'>
        /// The name by which the Hybrid Connection is identified
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> DeleteRelayServiceConnectionWithHttpMessagesAsync(string resourceGroupName, string name, string entityName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Creates a new association to a Biztalk Hybrid Connection, or
        /// updates an existing one.
        /// </summary>
        /// Creates a new association to a Biztalk Hybrid Connection, or
        /// updates an existing one.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='entityName'>
        /// The name by which the Hybrid Connection is identified
        /// </param>
        /// <param name='connectionEnvelope'>
        /// The details of the Hybrid Connection
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<RelayServiceConnectionEntity>> UpdateRelayServiceConnectionWithHttpMessagesAsync(string resourceGroupName, string name, string entityName, RelayServiceConnectionEntity connectionEnvelope, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets all instance of a web app
        /// </summary>
        /// Gets all instance of a web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<SiteInstance>>> ListInstanceIdentifiersWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// List deployments
        /// </summary>
        /// List deployments
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='instanceId'>
        /// Id of web app instance
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<Deployment>>> ListInstanceDeploymentsWithHttpMessagesAsync(string resourceGroupName, string name, string instanceId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get the deployment
        /// </summary>
        /// Get the deployment
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='id'>
        /// Id of the deployment
        /// </param>
        /// <param name='instanceId'>
        /// Id of web app instance
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<Deployment>> GetInstanceDeploymentWithHttpMessagesAsync(string resourceGroupName, string name, string id, string instanceId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Create a deployment
        /// </summary>
        /// Create a deployment
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='id'>
        /// Id of the deployment
        /// </param>
        /// <param name='instanceId'>
        /// Id of web app instance
        /// </param>
        /// <param name='deployment'>
        /// Details of deployment
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<Deployment>> CreateInstanceDeploymentWithHttpMessagesAsync(string resourceGroupName, string name, string id, string instanceId, Deployment deployment, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Delete the deployment
        /// </summary>
        /// Delete the deployment
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='id'>
        /// Id of the deployment
        /// </param>
        /// <param name='instanceId'>
        /// Id of web app instance
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> DeleteInstanceDeploymentWithHttpMessagesAsync(string resourceGroupName, string name, string id, string instanceId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Creates a new web app or modifies an existing web app.
        /// </summary>
        /// Creates a new web app or modifies an existing web app.
        /// <param name='resourceGroupName'>
        /// Name of the resource group
        /// </param>
        /// <param name='name'>
        /// Name of the web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<SiteCloneability>> IsCloneableWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets metric definitions for web app
        /// </summary>
        /// Gets metric definitions for web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<MetricDefinition>>> ListMetricDefinitionsWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets metrics for web app
        /// </summary>
        /// Gets metrics for web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='details'>
        /// If true, metric details are included in response
        /// </param>
        /// <param name='filter'>
        /// Return only usages/metrics specified in the filter. Filter
        /// conforms to odata syntax. Example: $filter=(name.value eq
        /// 'Metric1' or name.value eq 'Metric2') and startTime eq
        /// '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and
        /// timeGrain eq duration'[Hour|Minute|Day]'.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<ResourceMetric>>> ListMetricsWithHttpMessagesAsync(string resourceGroupName, string name, bool? details = default(bool?), string filter = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Restores a web app
        /// </summary>
        /// Restores a web app
        /// <param name='subscriptionName'>
        /// Azure subscription
        /// </param>
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='options'>
        /// Migration options
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<StorageMigrationResponse>> MigrateStorageWithHttpMessagesAsync(string subscriptionName, string resourceGroupName, string name, StorageMigrationOptions options, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Restores a web app
        /// </summary>
        /// Restores a web app
        /// <param name='subscriptionName'>
        /// Azure subscription
        /// </param>
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='options'>
        /// Migration options
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<StorageMigrationResponse>> BeginMigrateStorageWithHttpMessagesAsync(string subscriptionName, string resourceGroupName, string name, StorageMigrationOptions options, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Migrates a local (in-app) MySql database to a remote MySql database
        /// </summary>
        /// Migrates a local (in-app) MySql database to a remote MySql database
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='migrationRequestEnvelope'>
        /// MySql migration options
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<Operation>> MigrateMySqlWithHttpMessagesAsync(string resourceGroupName, string name, MigrateMySqlRequest migrationRequestEnvelope, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Migrates a local (in-app) MySql database to a remote MySql database
        /// </summary>
        /// Migrates a local (in-app) MySql database to a remote MySql database
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='migrationRequestEnvelope'>
        /// MySql migration options
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<Operation>> BeginMigrateMySqlWithHttpMessagesAsync(string resourceGroupName, string name, MigrateMySqlRequest migrationRequestEnvelope, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves a view of all network features in use on this web app.
        /// </summary>
        /// Retrieves a view of all network features in use on this web app.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='view'>
        /// The type of view. This can either be "summary" or "detailed".
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<NetworkFeatures>> ListNetworkFeaturesWithHttpMessagesAsync(string resourceGroupName, string name, string view, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Start capturing network packets for the site
        /// </summary>
        /// Start capturing network packets for the site
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='durationInSeconds'>
        /// The duration to keep capturing in seconds
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<string>> StartWebSiteNetworkTraceWithHttpMessagesAsync(string resourceGroupName, string name, int? durationInSeconds = default(int?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Stop ongoing capturing network packets for the site
        /// </summary>
        /// Stop ongoing capturing network packets for the site
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<string>> StopWebSiteNetworkTraceWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Generates new random app publishing password
        /// </summary>
        /// Generates new random app publishing password
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> GenerateNewSitePublishingPasswordWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the operation for a web app
        /// </summary>
        /// Gets the operation for a web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='operationId'>
        /// Id of an operation
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> GetOperationWithHttpMessagesAsync(string resourceGroupName, string name, string operationId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets perfmon counters for web app
        /// </summary>
        /// Gets perfmon counters for web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='filter'>
        /// Return only usages/metrics specified in the filter. Filter
        /// conforms to odata syntax. Example: $filter=(startTime eq
        /// '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and
        /// timeGrain eq duration'[Hour|Minute|Day]'.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<PerfMonResponse>>> ListPerfMonCountersWithHttpMessagesAsync(string resourceGroupName, string name, string filter = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets sites's event logs
        /// </summary>
        /// Gets sites's event logs
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IList<object>>> GetSitePhpErrorLogFlagWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// List premier add ons for web app
        /// </summary>
        /// List premier add ons for web app
        /// <param name='resourceGroupName'>
        /// Resource group
        /// </param>
        /// <param name='name'>
        /// web app name
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> ListPremierAddOnsWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets a specific premier add on
        /// </summary>
        /// Gets a specific premier add on
        /// <param name='resourceGroupName'>
        /// Resource group
        /// </param>
        /// <param name='name'>
        /// web app name
        /// </param>
        /// <param name='premierAddOnName'>
        /// Premier add on
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> GetPremierAddOnWithHttpMessagesAsync(string resourceGroupName, string name, string premierAddOnName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Add premier add-on
        /// </summary>
        /// Add premier add-on
        /// <param name='resourceGroupName'>
        /// Resource group
        /// </param>
        /// <param name='name'>
        /// web app name
        /// </param>
        /// <param name='premierAddOnName'>
        /// Premier add on
        /// </param>
        /// <param name='premierAddOn'>
        /// Premier add on request
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> AddPremierAddOnWithHttpMessagesAsync(string resourceGroupName, string name, string premierAddOnName, PremierAddOnRequest premierAddOn, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Delete premier add-on
        /// </summary>
        /// Delete premier add-on
        /// <param name='resourceGroupName'>
        /// Resource group
        /// </param>
        /// <param name='name'>
        /// web app name
        /// </param>
        /// <param name='premierAddOnName'>
        /// Premier add on
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> DeletePremierAddOnWithHttpMessagesAsync(string resourceGroupName, string name, string premierAddOnName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the publishing profile for web app
        /// </summary>
        /// Gets the publishing profile for web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='options'>
        /// Specifies options for publishing profile. Pass
        /// CsmPublishingProfileOptions.Format=FileZilla3 for FileZilla FTP
        /// format.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<System.IO.Stream>> ListPublishingProfileXmlWithSecretsWithHttpMessagesAsync(string resourceGroupName, string name, CsmPublishingProfileOptions options, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Recovers a deleted web app
        /// </summary>
        /// Recovers a deleted web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='recoveryEntity'>
        /// Snapshot data used for web app recovery. Snapshot information can
        /// be obtained by calling GetDeletedSites or GetSiteSnapshots API.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<RecoverResponse>> RecoverWithHttpMessagesAsync(string resourceGroupName, string name, CsmSiteRecoveryEntity recoveryEntity, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Recovers a deleted web app
        /// </summary>
        /// Recovers a deleted web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='recoveryEntity'>
        /// Snapshot data used for web app recovery. Snapshot information can
        /// be obtained by calling GetDeletedSites or GetSiteSnapshots API.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<RecoverResponse>> BeginRecoverWithHttpMessagesAsync(string resourceGroupName, string name, CsmSiteRecoveryEntity recoveryEntity, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Resets the configuration settings of the current slot if they were
        /// previously modified by calling ApplySlotConfig API
        /// </summary>
        /// Resets the configuration settings of the current slot if they were
        /// previously modified by calling ApplySlotConfig API
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> ResetProductionSlotConfigWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Restarts web app
        /// </summary>
        /// Restarts web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='softRestart'>
        /// Soft restart applies the configuration settings and restarts the
        /// app if necessary. Hard restart always restarts and reprovisions
        /// the app
        /// </param>
        /// <param name='synchronous'>
        /// If true then the API will block until the app has been restarted
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> RestartWithHttpMessagesAsync(string resourceGroupName, string name, bool? softRestart = default(bool?), bool? synchronous = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets all the slots for a web apps
        /// </summary>
        /// Gets all the slots for a web apps
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='propertiesToInclude'>
        /// List of app properties to include in the response
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<Site>>> ListSlotsWithHttpMessagesAsync(string resourceGroupName, string name, string propertiesToInclude = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get details of a web app
        /// </summary>
        /// Get details of a web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='propertiesToInclude'>
        /// Additional web app properties included in the response
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<Site>> GetSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, string propertiesToInclude = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Creates a new web app or modifies an existing web app.
        /// </summary>
        /// Creates a new web app or modifies an existing web app.
        /// <param name='resourceGroupName'>
        /// Name of the resource group
        /// </param>
        /// <param name='name'>
        /// Name of the web app
        /// </param>
        /// <param name='siteEnvelope'>
        /// Details of web app if it exists already
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='skipDnsRegistration'>
        /// If true web app hostname is not registered with DNS on creation.
        /// This parameter is
        /// only used for app creation
        /// </param>
        /// <param name='skipCustomDomainVerification'>
        /// If true, custom (non *.azurewebsites.net) domains associated with
        /// web app are not verified.
        /// </param>
        /// <param name='forceDnsRegistration'>
        /// If true, web app hostname is force registered with DNS
        /// </param>
        /// <param name='ttlInSeconds'>
        /// Time to live in seconds for web app's default domain name
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<Site>> CreateOrUpdateSlotWithHttpMessagesAsync(string resourceGroupName, string name, Site siteEnvelope, string slot, bool? skipDnsRegistration = default(bool?), bool? skipCustomDomainVerification = default(bool?), bool? forceDnsRegistration = default(bool?), string ttlInSeconds = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Creates a new web app or modifies an existing web app.
        /// </summary>
        /// Creates a new web app or modifies an existing web app.
        /// <param name='resourceGroupName'>
        /// Name of the resource group
        /// </param>
        /// <param name='name'>
        /// Name of the web app
        /// </param>
        /// <param name='siteEnvelope'>
        /// Details of web app if it exists already
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='skipDnsRegistration'>
        /// If true web app hostname is not registered with DNS on creation.
        /// This parameter is
        /// only used for app creation
        /// </param>
        /// <param name='skipCustomDomainVerification'>
        /// If true, custom (non *.azurewebsites.net) domains associated with
        /// web app are not verified.
        /// </param>
        /// <param name='forceDnsRegistration'>
        /// If true, web app hostname is force registered with DNS
        /// </param>
        /// <param name='ttlInSeconds'>
        /// Time to live in seconds for web app's default domain name
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<Site>> BeginCreateOrUpdateSlotWithHttpMessagesAsync(string resourceGroupName, string name, Site siteEnvelope, string slot, bool? skipDnsRegistration = default(bool?), bool? skipCustomDomainVerification = default(bool?), bool? forceDnsRegistration = default(bool?), string ttlInSeconds = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Deletes a web app
        /// </summary>
        /// Deletes a web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='deleteMetrics'>
        /// If true, web app metrics are also deleted
        /// </param>
        /// <param name='deleteEmptyServerFarm'>
        /// If true and App Service Plan is empty after web app deletion, App
        /// Service Plan is also deleted
        /// </param>
        /// <param name='skipDnsRegistration'>
        /// If true, DNS registration is skipped
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> DeleteSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, bool? deleteMetrics = default(bool?), bool? deleteEmptyServerFarm = default(bool?), bool? skipDnsRegistration = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Analyze a custom hostname
        /// </summary>
        /// Analyze a custom hostname
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='hostName'>
        /// Custom hostname
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<CustomHostnameAnalysisResult>> AnalyzeCustomHostnameSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, string hostName = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Applies the configuration settings from the target slot onto the
        /// current slot
        /// </summary>
        /// Applies the configuration settings from the target slot onto the
        /// current slot
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slotSwapEntity'>
        /// Request body that contains the target slot name. Settings from
        /// that slot will be applied on the source slot
        /// </param>
        /// <param name='slot'>
        /// Name of the source slot. Settings from the target slot will be
        /// applied onto this slot
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> ApplySlotConfigurationSlotWithHttpMessagesAsync(string resourceGroupName, string name, CsmSlotEntity slotSwapEntity, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Creates web app backup
        /// </summary>
        /// Creates web app backup
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='request'>
        /// Information on backup request
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<BackupItem>> BackupSlotWithHttpMessagesAsync(string resourceGroupName, string name, BackupRequest request, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Lists all available backups for web app
        /// </summary>
        /// Lists all available backups for web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<BackupItem>>> ListBackupsSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Discovers existing web app backups that can be restored
        /// </summary>
        /// Discovers existing web app backups that can be restored
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='request'>
        /// Information on restore request
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<RestoreRequest>> DiscoverRestoreSlotWithHttpMessagesAsync(string resourceGroupName, string name, RestoreRequest request, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets status of a web app backup that may be in progress.
        /// </summary>
        /// Gets status of a web app backup that may be in progress.
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='backupId'>
        /// Id of backup
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<BackupItem>> GetBackupStatusSlotWithHttpMessagesAsync(string resourceGroupName, string name, string backupId, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Deletes a backup from Azure Storage
        /// </summary>
        /// Deletes a backup from Azure Storage
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='backupId'>
        /// Id of backup
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<BackupItem>> DeleteBackupSlotWithHttpMessagesAsync(string resourceGroupName, string name, string backupId, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets status of a web app backup that may be in progress, including
        /// secrets associated with the backup, such as the Azure Storage SAS
        /// URL. Also can be used to update the SAS URL for the backup if a
        /// new URL is passed in the request body.
        /// </summary>
        /// Gets status of a web app backup that may be in progress, including
        /// secrets associated with the backup, such as the Azure Storage SAS
        /// URL. Also can be used to update the SAS URL for the backup if a
        /// new URL is passed in the request body.
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='backupId'>
        /// Id of backup
        /// </param>
        /// <param name='request'>
        /// Information on backup request
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<BackupItem>> ListBackupStatusSecretsSlotWithHttpMessagesAsync(string resourceGroupName, string name, string backupId, BackupRequest request, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Restores a web app
        /// </summary>
        /// Restores a web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='backupId'>
        /// Id of backup to restore
        /// </param>
        /// <param name='request'>
        /// Information on restore request
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<RestoreResponse>> RestoreSlotWithHttpMessagesAsync(string resourceGroupName, string name, string backupId, RestoreRequest request, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Restores a web app
        /// </summary>
        /// Restores a web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='backupId'>
        /// Id of backup to restore
        /// </param>
        /// <param name='request'>
        /// Information on restore request
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<RestoreResponse>> BeginRestoreSlotWithHttpMessagesAsync(string resourceGroupName, string name, string backupId, RestoreRequest request, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates the application settings of web app
        /// </summary>
        /// Updates the application settings of web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='appSettings'>
        /// Application settings of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<StringDictionary>> UpdateApplicationSettingsSlotWithHttpMessagesAsync(string resourceGroupName, string name, StringDictionary appSettings, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the application settings of web app
        /// </summary>
        /// Gets the application settings of web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<StringDictionary>> ListApplicationSettingsSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates the Authentication / Authorization settings associated
        /// with web app
        /// </summary>
        /// Updates the Authentication / Authorization settings associated
        /// with web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='siteAuthSettings'>
        /// Auth settings associated with web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<SiteAuthSettings>> UpdateAuthSettingsSlotWithHttpMessagesAsync(string resourceGroupName, string name, SiteAuthSettings siteAuthSettings, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the Authentication / Authorization settings associated with
        /// web app
        /// </summary>
        /// Gets the Authentication / Authorization settings associated with
        /// web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<SiteAuthSettings>> ListAuthSettingsSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates backup configuration of web app
        /// </summary>
        /// Updates backup configuration of web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='request'>
        /// Information on backup request
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<BackupRequest>> UpdateBackupConfigurationSlotWithHttpMessagesAsync(string resourceGroupName, string name, BackupRequest request, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Removes the backup configuration for a web app
        /// </summary>
        /// Removes the backup configuration for a web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> DeleteBackupConfigurationSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the backup configuration for a web app
        /// </summary>
        /// Gets the backup configuration for a web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<BackupRequest>> GetBackupConfigurationSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates the connection strings associated with web app
        /// </summary>
        /// Updates the connection strings associated with web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='connectionStrings'>
        /// Connection strings associated with web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<ConnectionStringDictionary>> UpdateConnectionStringsSlotWithHttpMessagesAsync(string resourceGroupName, string name, ConnectionStringDictionary connectionStrings, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the connection strings associated with web app
        /// </summary>
        /// Gets the connection strings associated with web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<ConnectionStringDictionary>> ListConnectionStringsSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the web app logs configuration
        /// </summary>
        /// Gets the web app logs configuration
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<SiteLogsConfig>> GetDiagnosticLogsConfigurationSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates the meta data for web app
        /// </summary>
        /// Updates the meta data for web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='siteLogsConfig'>
        /// Site logs configuration
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<SiteLogsConfig>> UpdateDiagnosticLogsConfigSlotWithHttpMessagesAsync(string resourceGroupName, string name, SiteLogsConfig siteLogsConfig, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates the meta data for web app
        /// </summary>
        /// Updates the meta data for web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='metadata'>
        /// Meta data of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<StringDictionary>> UpdateMetadataSlotWithHttpMessagesAsync(string resourceGroupName, string name, StringDictionary metadata, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the web app meta data.
        /// </summary>
        /// Gets the web app meta data.
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<StringDictionary>> ListMetadataSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the web app publishing credentials
        /// </summary>
        /// Gets the web app publishing credentials
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<User>> ListPublishingCredentialsSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the web app publishing credentials
        /// </summary>
        /// Gets the web app publishing credentials
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<User>> BeginListPublishingCredentialsSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates the Push settings associated with web app
        /// </summary>
        /// Updates the Push settings associated with web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='pushSettings'>
        /// Push settings associated with web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<PushSettings>> UpdateSitePushSettingsSlotWithHttpMessagesAsync(string resourceGroupName, string name, PushSettings pushSettings, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the Push settings associated with web app
        /// </summary>
        /// Gets the Push settings associated with web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<PushSettings>> ListSitePushSettingsSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the configuration of the web app
        /// </summary>
        /// Gets the configuration of the web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<SiteConfig>> GetConfigurationSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Update the configuration of web app
        /// </summary>
        /// Update the configuration of web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='siteConfig'>
        /// Request body that contains the configuraiton setting for the web
        /// app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<SiteConfig>> CreateOrUpdateConfigurationSlotWithHttpMessagesAsync(string resourceGroupName, string name, SiteConfig siteConfig, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Update the configuration of web app
        /// </summary>
        /// Update the configuration of web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='siteConfig'>
        /// Request body that contains the configuraiton setting for the web
        /// app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<SiteConfig>> UpdateConfigurationSlotWithHttpMessagesAsync(string resourceGroupName, string name, SiteConfig siteConfig, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// List deployments
        /// </summary>
        /// List deployments
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<Deployment>>> ListDeploymentsSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get the deployment
        /// </summary>
        /// Get the deployment
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='id'>
        /// Id of the deployment
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<Deployment>> GetDeploymentSlotWithHttpMessagesAsync(string resourceGroupName, string name, string id, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Create a deployment
        /// </summary>
        /// Create a deployment
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='id'>
        /// Id of the deployment
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='deployment'>
        /// Details of deployment
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<Deployment>> CreateDeploymentSlotWithHttpMessagesAsync(string resourceGroupName, string name, string id, string slot, Deployment deployment, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Delete the deployment
        /// </summary>
        /// Delete the deployment
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='id'>
        /// Id of the deployment
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> DeleteDeploymentSlotWithHttpMessagesAsync(string resourceGroupName, string name, string id, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get web app hostname bindings
        /// </summary>
        /// Get web app hostname bindings
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<HostNameBinding>>> ListHostNameBindingsSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get web app binding for a hostname
        /// </summary>
        /// Get web app binding for a hostname
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='hostName'>
        /// Name of host
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<HostNameBinding>> GetHostNameBindingSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, string hostName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Creates a web app hostname binding
        /// </summary>
        /// Creates a web app hostname binding
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='hostName'>
        /// Name of host
        /// </param>
        /// <param name='hostNameBinding'>
        /// Host name binding information
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<HostNameBinding>> CreateOrUpdateHostNameBindingSlotWithHttpMessagesAsync(string resourceGroupName, string name, string hostName, HostNameBinding hostNameBinding, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Deletes a host name binding
        /// </summary>
        /// Deletes a host name binding
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='hostName'>
        /// Name of host
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> DeleteHostNameBindingSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, string hostName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves a specific Service Bus Hybrid Connection used by this
        /// Web App.
        /// </summary>
        /// Retrieves a specific Service Bus Hybrid Connection used by this
        /// Web App.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='namespaceName'>
        /// The namespace for this hybrid connection
        /// </param>
        /// <param name='relayName'>
        /// The relay name for this hybrid connection
        /// </param>
        /// <param name='slot'>
        /// The name of the slot for the web app.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<HybridConnection>> GetHybridConnectionSlotWithHttpMessagesAsync(string resourceGroupName, string name, string namespaceName, string relayName, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Creates a new Hybrid Connection using a Service Bus relay
        /// </summary>
        /// Creates a new Hybrid Connection using a Service Bus relay
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='namespaceName'>
        /// The namespace for this hybrid connection
        /// </param>
        /// <param name='relayName'>
        /// The relay name for this hybrid connection
        /// </param>
        /// <param name='connectionEnvelope'>
        /// The details of the hybrid connection
        /// </param>
        /// <param name='slot'>
        /// The name of the slot for the web app.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<HybridConnection>> CreateOrUpdateHybridConnectionSlotWithHttpMessagesAsync(string resourceGroupName, string name, string namespaceName, string relayName, HybridConnection connectionEnvelope, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Removes a Hybrid Connection from this site.
        /// </summary>
        /// Removes a Hybrid Connection from this site.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='namespaceName'>
        /// The namespace for this hybrid connection
        /// </param>
        /// <param name='relayName'>
        /// The relay name for this hybrid connection
        /// </param>
        /// <param name='slot'>
        /// The name of the slot for the web app.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> DeleteHybridConnectionSlotWithHttpMessagesAsync(string resourceGroupName, string name, string namespaceName, string relayName, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Creates a new Hybrid Connection using a Service Bus relay
        /// </summary>
        /// Creates a new Hybrid Connection using a Service Bus relay
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='namespaceName'>
        /// The namespace for this hybrid connection
        /// </param>
        /// <param name='relayName'>
        /// The relay name for this hybrid connection
        /// </param>
        /// <param name='connectionEnvelope'>
        /// The details of the hybrid connection
        /// </param>
        /// <param name='slot'>
        /// The name of the slot for the web app.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<HybridConnection>> UpdateHybridConnectionSlotWithHttpMessagesAsync(string resourceGroupName, string name, string namespaceName, string relayName, HybridConnection connectionEnvelope, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the send key name and value for a Hybrid Connection
        /// </summary>
        /// Gets the send key name and value for a Hybrid Connection
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='namespaceName'>
        /// The namespace for this hybrid connection
        /// </param>
        /// <param name='relayName'>
        /// The relay name for this hybrid connection
        /// </param>
        /// <param name='slot'>
        /// The name of the slot for the web app.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> ListHybridConnectionKeysSlotWithHttpMessagesAsync(string resourceGroupName, string name, string namespaceName, string relayName, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves all Service Bus Hybrid Connections used by this Web App.
        /// </summary>
        /// Retrieves all Service Bus Hybrid Connections used by this Web App.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='slot'>
        /// The name of the slot for the web app.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<HybridConnection>> ListHybridConnectionsSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves all Biztalk Hybrid Connections associated with this web
        /// app.
        /// </summary>
        /// Retrieves all Biztalk Hybrid Connections associated with this web
        /// app.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='slot'>
        /// The name of the slot for the web app.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<RelayServiceConnectionEntity>> ListRelayServiceConnectionsSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves a Biztalk Hybrid Connection identified by its entity
        /// name.
        /// </summary>
        /// Retrieves a Biztalk Hybrid Connection identified by its entity
        /// name.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='entityName'>
        /// The name by which the Hybrid Connection is identified
        /// </param>
        /// <param name='slot'>
        /// The name of the slot for the web app.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<RelayServiceConnectionEntity>> GetRelayServiceConnectionSlotWithHttpMessagesAsync(string resourceGroupName, string name, string entityName, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Creates a new association to a Biztalk Hybrid Connection, or
        /// updates an existing one.
        /// </summary>
        /// Creates a new association to a Biztalk Hybrid Connection, or
        /// updates an existing one.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='entityName'>
        /// The name by which the Hybrid Connection is identified
        /// </param>
        /// <param name='connectionEnvelope'>
        /// The details of the Hybrid Connection
        /// </param>
        /// <param name='slot'>
        /// The name of the slot for the web app.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<RelayServiceConnectionEntity>> CreateOrUpdateRelayServiceConnectionSlotWithHttpMessagesAsync(string resourceGroupName, string name, string entityName, RelayServiceConnectionEntity connectionEnvelope, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Removes the association to a Biztalk Hybrid Connection, identified
        /// by its entity name.
        /// </summary>
        /// Removes the association to a Biztalk Hybrid Connection, identified
        /// by its entity name.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='entityName'>
        /// The name by which the Hybrid Connection is identified
        /// </param>
        /// <param name='slot'>
        /// The name of the slot for the web app.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> DeleteRelayServiceConnectionSlotWithHttpMessagesAsync(string resourceGroupName, string name, string entityName, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Creates a new association to a Biztalk Hybrid Connection, or
        /// updates an existing one.
        /// </summary>
        /// Creates a new association to a Biztalk Hybrid Connection, or
        /// updates an existing one.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='entityName'>
        /// The name by which the Hybrid Connection is identified
        /// </param>
        /// <param name='connectionEnvelope'>
        /// The details of the Hybrid Connection
        /// </param>
        /// <param name='slot'>
        /// The name of the slot for the web app.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<RelayServiceConnectionEntity>> UpdateRelayServiceConnectionSlotWithHttpMessagesAsync(string resourceGroupName, string name, string entityName, RelayServiceConnectionEntity connectionEnvelope, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets all instance of a web app
        /// </summary>
        /// Gets all instance of a web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<SiteInstance>>> ListInstanceIdentifiersSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// List deployments
        /// </summary>
        /// List deployments
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='instanceId'>
        /// Id of web app instance
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<Deployment>>> ListInstanceDeploymentsSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, string instanceId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get the deployment
        /// </summary>
        /// Get the deployment
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='id'>
        /// Id of the deployment
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='instanceId'>
        /// Id of web app instance
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<Deployment>> GetInstanceDeploymentSlotWithHttpMessagesAsync(string resourceGroupName, string name, string id, string slot, string instanceId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Create a deployment
        /// </summary>
        /// Create a deployment
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='id'>
        /// Id of the deployment
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='instanceId'>
        /// Id of web app instance
        /// </param>
        /// <param name='deployment'>
        /// Details of deployment
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<Deployment>> CreateInstanceDeploymentSlotWithHttpMessagesAsync(string resourceGroupName, string name, string id, string slot, string instanceId, Deployment deployment, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Delete the deployment
        /// </summary>
        /// Delete the deployment
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='id'>
        /// Id of the deployment
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='instanceId'>
        /// Id of web app instance
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> DeleteInstanceDeploymentSlotWithHttpMessagesAsync(string resourceGroupName, string name, string id, string slot, string instanceId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Creates a new web app or modifies an existing web app.
        /// </summary>
        /// Creates a new web app or modifies an existing web app.
        /// <param name='resourceGroupName'>
        /// Name of the resource group
        /// </param>
        /// <param name='name'>
        /// Name of the web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<SiteCloneability>> IsCloneableSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets metric definitions for web app
        /// </summary>
        /// Gets metric definitions for web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<MetricDefinition>>> ListMetricDefinitionsSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets metrics for web app
        /// </summary>
        /// Gets metrics for web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='details'>
        /// If true, metric details are included in response
        /// </param>
        /// <param name='filter'>
        /// Return only usages/metrics specified in the filter. Filter
        /// conforms to odata syntax. Example: $filter=(name.value eq
        /// 'Metric1' or name.value eq 'Metric2') and startTime eq
        /// '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and
        /// timeGrain eq duration'[Hour|Minute|Day]'.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<ResourceMetric>>> ListMetricsSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, bool? details = default(bool?), string filter = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves a view of all network features in use on this web app.
        /// </summary>
        /// Retrieves a view of all network features in use on this web app.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='view'>
        /// The type of view. This can either be "summary" or "detailed".
        /// </param>
        /// <param name='slot'>
        /// The name of the slot for this web app.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<NetworkFeatures>> ListNetworkFeaturesSlotWithHttpMessagesAsync(string resourceGroupName, string name, string view, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Start capturing network packets for the site
        /// </summary>
        /// Start capturing network packets for the site
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='slot'>
        /// The name of the slot for this web app.
        /// </param>
        /// <param name='durationInSeconds'>
        /// The duration to keep capturing in seconds
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<string>> StartWebSiteNetworkTraceSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, int? durationInSeconds = default(int?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Stop ongoing capturing network packets for the site
        /// </summary>
        /// Stop ongoing capturing network packets for the site
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='slot'>
        /// The name of the slot for this web app.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<string>> StopWebSiteNetworkTraceSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Generates new random app publishing password
        /// </summary>
        /// Generates new random app publishing password
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> GenerateNewSitePublishingPasswordSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the operation for a web app
        /// </summary>
        /// Gets the operation for a web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='operationId'>
        /// Id of an operation
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> GetOperationSlotWithHttpMessagesAsync(string resourceGroupName, string name, string operationId, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets perfmon counters for web app
        /// </summary>
        /// Gets perfmon counters for web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot. **** CURRENTLY UNUSED *****
        /// </param>
        /// <param name='filter'>
        /// Return only usages/metrics specified in the filter. Filter
        /// conforms to odata syntax. Example: $filter=(startTime eq
        /// '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and
        /// timeGrain eq duration'[Hour|Minute|Day]'.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<PerfMonResponse>>> ListPerfMonCountersSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, string filter = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets sites's event logs
        /// </summary>
        /// Gets sites's event logs
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IList<object>>> GetSitePhpErrorLogFlagSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// List premier add ons for web app
        /// </summary>
        /// List premier add ons for web app
        /// <param name='resourceGroupName'>
        /// Resource group
        /// </param>
        /// <param name='name'>
        /// web app name
        /// </param>
        /// <param name='slot'>
        /// web app slot name
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> ListPremierAddOnsSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets a specific premier add on
        /// </summary>
        /// Gets a specific premier add on
        /// <param name='resourceGroupName'>
        /// Resource group
        /// </param>
        /// <param name='name'>
        /// web app name
        /// </param>
        /// <param name='premierAddOnName'>
        /// Premier add on
        /// </param>
        /// <param name='slot'>
        /// web app slot name
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> GetPremierAddOnSlotWithHttpMessagesAsync(string resourceGroupName, string name, string premierAddOnName, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Add premier add-on
        /// </summary>
        /// Add premier add-on
        /// <param name='resourceGroupName'>
        /// Resource group
        /// </param>
        /// <param name='name'>
        /// web app name
        /// </param>
        /// <param name='premierAddOnName'>
        /// Premier add on
        /// </param>
        /// <param name='premierAddOn'>
        /// Premier add on request
        /// </param>
        /// <param name='slot'>
        /// web app slot name
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> AddPremierAddOnSlotWithHttpMessagesAsync(string resourceGroupName, string name, string premierAddOnName, PremierAddOnRequest premierAddOn, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Delete premier add-on
        /// </summary>
        /// Delete premier add-on
        /// <param name='resourceGroupName'>
        /// Resource group
        /// </param>
        /// <param name='name'>
        /// web app name
        /// </param>
        /// <param name='premierAddOnName'>
        /// Premier add on
        /// </param>
        /// <param name='slot'>
        /// web app slot name
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> DeletePremierAddOnSlotWithHttpMessagesAsync(string resourceGroupName, string name, string premierAddOnName, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the publishing profile for web app
        /// </summary>
        /// Gets the publishing profile for web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='options'>
        /// Specifies options for publishing profile. Pass
        /// CsmPublishingProfileOptions.Format=FileZilla3 for FileZilla FTP
        /// format.
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<System.IO.Stream>> ListPublishingProfileXmlWithSecretsSlotWithHttpMessagesAsync(string resourceGroupName, string name, CsmPublishingProfileOptions options, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Recovers a deleted web app
        /// </summary>
        /// Recovers a deleted web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='recoveryEntity'>
        /// Snapshot data used for web app recovery. Snapshot information can
        /// be obtained by calling GetDeletedSites or GetSiteSnapshots API.
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<RecoverResponse>> RecoverSlotWithHttpMessagesAsync(string resourceGroupName, string name, CsmSiteRecoveryEntity recoveryEntity, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Recovers a deleted web app
        /// </summary>
        /// Recovers a deleted web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='recoveryEntity'>
        /// Snapshot data used for web app recovery. Snapshot information can
        /// be obtained by calling GetDeletedSites or GetSiteSnapshots API.
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<RecoverResponse>> BeginRecoverSlotWithHttpMessagesAsync(string resourceGroupName, string name, CsmSiteRecoveryEntity recoveryEntity, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Resets the configuration settings of the current slot if they were
        /// previously modified by calling ApplySlotConfig API
        /// </summary>
        /// Resets the configuration settings of the current slot if they were
        /// previously modified by calling ApplySlotConfig API
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> ResetSlotConfigurationSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Restarts web app
        /// </summary>
        /// Restarts web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='softRestart'>
        /// Soft restart applies the configuration settings and restarts the
        /// app if necessary. Hard restart always restarts and reprovisions
        /// the app
        /// </param>
        /// <param name='synchronous'>
        /// If true then the API will block until the app has been restarted
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> RestartSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, bool? softRestart = default(bool?), bool? synchronous = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get the difference in configuration settings between two web app
        /// slots
        /// </summary>
        /// Get the difference in configuration settings between two web app
        /// slots
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slotSwapEntity'>
        /// Request body that contains the target slot name
        /// </param>
        /// <param name='slot'>
        /// Name of the source slot
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<SlotDifference>>> GetSlotsDifferencesSlotWithHttpMessagesAsync(string resourceGroupName, string name, CsmSlotEntity slotSwapEntity, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Swaps web app slots
        /// </summary>
        /// Swaps web app slots
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slotSwapEntity'>
        /// Request body that contains the target slot name
        /// </param>
        /// <param name='slot'>
        /// Name of source slot for the swap
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> SwapSlotsSlotWithHttpMessagesAsync(string resourceGroupName, string name, CsmSlotEntity slotSwapEntity, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Swaps web app slots
        /// </summary>
        /// Swaps web app slots
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slotSwapEntity'>
        /// Request body that contains the target slot name
        /// </param>
        /// <param name='slot'>
        /// Name of source slot for the swap
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> BeginSwapSlotsSlotWithHttpMessagesAsync(string resourceGroupName, string name, CsmSlotEntity slotSwapEntity, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns all Snapshots to the user.
        /// </summary>
        /// Returns all Snapshots to the user.
        /// <param name='resourceGroupName'>
        /// Resource group
        /// </param>
        /// <param name='name'>
        /// Website Name
        /// </param>
        /// <param name='slot'>
        /// Website Slot
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<Snapshot>>> ListSnapshotsSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get the source control configuration of web app
        /// </summary>
        /// Get the source control configuration of web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<SiteSourceControl>> GetSourceControlSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Update the source control configuration of web app
        /// </summary>
        /// Update the source control configuration of web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='siteSourceControl'>
        /// Request body that contains the source control parameters
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<SiteSourceControl>> CreateOrUpdateSourceControlSlotWithHttpMessagesAsync(string resourceGroupName, string name, SiteSourceControl siteSourceControl, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Delete source control configuration of web app
        /// </summary>
        /// Delete source control configuration of web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> DeleteSourceControlSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Update the source control configuration of web app
        /// </summary>
        /// Update the source control configuration of web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='siteSourceControl'>
        /// Request body that contains the source control parameters
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<SiteSourceControl>> UpdateSourceControlSlotWithHttpMessagesAsync(string resourceGroupName, string name, SiteSourceControl siteSourceControl, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Starts web app
        /// </summary>
        /// Starts web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> StartSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Stops web app
        /// </summary>
        /// Stops web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> StopSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Sync web app repository
        /// </summary>
        /// Sync web app repository
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> SyncRepositorySlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the quota usage numbers for web app
        /// </summary>
        /// Gets the quota usage numbers for web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slot'>
        /// Name of web app slot. If not specified then will default to
        /// production slot.
        /// </param>
        /// <param name='filter'>
        /// Return only usages specified in the filter. Filter is specified by
        /// using OData syntax. Example: $filter=(name.value eq 'Metric1' or
        /// name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z'
        /// and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq
        /// duration'[Hour|Minute|Day]'.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<CsmUsageQuota>>> ListUsagesSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, string filter = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves a list of all Virtual Network Connections associated
        /// with this web app.
        /// </summary>
        /// Retrieves a list of all Virtual Network Connections associated
        /// with this web app.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='slot'>
        /// The name of the slot for this web app.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IList<VnetInfo>>> ListVnetConnectionsSlotWithHttpMessagesAsync(string resourceGroupName, string name, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves a specific Virtual Network Connection associated with
        /// this web app.
        /// </summary>
        /// Retrieves a specific Virtual Network Connection associated with
        /// this web app.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='vnetName'>
        /// The name of the Virtual Network
        /// </param>
        /// <param name='slot'>
        /// The name of the slot for this web app.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<VnetInfo>> GetVnetConnectionSlotWithHttpMessagesAsync(string resourceGroupName, string name, string vnetName, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Adds a Virtual Network Connection or updates it's properties.
        /// </summary>
        /// Adds a Virtual Network Connection or updates it's properties.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='vnetName'>
        /// The name of the Virtual Network
        /// </param>
        /// <param name='connectionEnvelope'>
        /// The properties of this Virtual Network Connection
        /// </param>
        /// <param name='slot'>
        /// The name of the slot for this web app.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<VnetInfo>> CreateOrUpdateVnetConnectionSlotWithHttpMessagesAsync(string resourceGroupName, string name, string vnetName, VnetInfo connectionEnvelope, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Removes the specified Virtual Network Connection association from
        /// this web app.
        /// </summary>
        /// Removes the specified Virtual Network Connection association from
        /// this web app.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='vnetName'>
        /// The name of the Virtual Network
        /// </param>
        /// <param name='slot'>
        /// The name of the slot for this web app.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> DeleteVnetConnectionSlotWithHttpMessagesAsync(string resourceGroupName, string name, string vnetName, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Adds a Virtual Network Connection or updates it's properties.
        /// </summary>
        /// Adds a Virtual Network Connection or updates it's properties.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='vnetName'>
        /// The name of the Virtual Network
        /// </param>
        /// <param name='connectionEnvelope'>
        /// The properties of this Virtual Network Connection
        /// </param>
        /// <param name='slot'>
        /// The name of the slot for this web app.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<VnetInfo>> UpdateVnetConnectionSlotWithHttpMessagesAsync(string resourceGroupName, string name, string vnetName, VnetInfo connectionEnvelope, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves a Virtual Network connection gateway associated with
        /// this web app and virtual network.
        /// </summary>
        /// Retrieves a Virtual Network connection gateway associated with
        /// this web app and virtual network.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='vnetName'>
        /// The name of the Virtual Network
        /// </param>
        /// <param name='gatewayName'>
        /// The name of the gateway. The only gateway that exists presently is
        /// "primary"
        /// </param>
        /// <param name='slot'>
        /// The name of the slot for this web app.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> GetVnetConnectionGatewaySlotWithHttpMessagesAsync(string resourceGroupName, string name, string vnetName, string gatewayName, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates the Virtual Network Gateway.
        /// </summary>
        /// Updates the Virtual Network Gateway.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='vnetName'>
        /// The name of the Virtual Network
        /// </param>
        /// <param name='gatewayName'>
        /// The name of the gateway. The only gateway that exists presently is
        /// "primary"
        /// </param>
        /// <param name='connectionEnvelope'>
        /// The properties to update this gateway with.
        /// </param>
        /// <param name='slot'>
        /// The name of the slot for this web app.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<VnetGateway>> CreateOrUpdateVnetConnectionGatewaySlotWithHttpMessagesAsync(string resourceGroupName, string name, string vnetName, string gatewayName, VnetGateway connectionEnvelope, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates the Virtual Network Gateway.
        /// </summary>
        /// Updates the Virtual Network Gateway.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='vnetName'>
        /// The name of the Virtual Network
        /// </param>
        /// <param name='gatewayName'>
        /// The name of the gateway. The only gateway that exists presently is
        /// "primary"
        /// </param>
        /// <param name='connectionEnvelope'>
        /// The properties to update this gateway with.
        /// </param>
        /// <param name='slot'>
        /// The name of the slot for this web app.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<VnetGateway>> UpdateVnetConnectionGatewaySlotWithHttpMessagesAsync(string resourceGroupName, string name, string vnetName, string gatewayName, VnetGateway connectionEnvelope, string slot, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get the difference in configuration settings between two web app
        /// slots
        /// </summary>
        /// Get the difference in configuration settings between two web app
        /// slots
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slotSwapEntity'>
        /// Request body that contains the target slot name
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<SlotDifference>>> GetSlotsDifferencesFromProductionWithHttpMessagesAsync(string resourceGroupName, string name, CsmSlotEntity slotSwapEntity, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Swaps web app slots
        /// </summary>
        /// Swaps web app slots
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slotSwapEntity'>
        /// Request body that contains the target slot name
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> SwapSlotWithProductionWithHttpMessagesAsync(string resourceGroupName, string name, CsmSlotEntity slotSwapEntity, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Swaps web app slots
        /// </summary>
        /// Swaps web app slots
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='slotSwapEntity'>
        /// Request body that contains the target slot name
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> BeginSwapSlotWithProductionWithHttpMessagesAsync(string resourceGroupName, string name, CsmSlotEntity slotSwapEntity, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns all Snapshots to the user.
        /// </summary>
        /// Returns all Snapshots to the user.
        /// <param name='resourceGroupName'>
        /// Resource group
        /// </param>
        /// <param name='name'>
        /// Website Name
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<Snapshot>>> ListSnapshotsWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get the source control configuration of web app
        /// </summary>
        /// Get the source control configuration of web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<SiteSourceControl>> GetSourceControlWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Update the source control configuration of web app
        /// </summary>
        /// Update the source control configuration of web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='siteSourceControl'>
        /// Request body that contains the source control parameters
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<SiteSourceControl>> CreateOrUpdateSourceControlWithHttpMessagesAsync(string resourceGroupName, string name, SiteSourceControl siteSourceControl, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Delete source control configuration of web app
        /// </summary>
        /// Delete source control configuration of web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> DeleteSourceControlWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Update the source control configuration of web app
        /// </summary>
        /// Update the source control configuration of web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='siteSourceControl'>
        /// Request body that contains the source control parameters
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<SiteSourceControl>> UpdateSourceControlWithHttpMessagesAsync(string resourceGroupName, string name, SiteSourceControl siteSourceControl, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Starts web app
        /// </summary>
        /// Starts web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> StartWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Stops web app
        /// </summary>
        /// Stops web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> StopWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Sync web app repository
        /// </summary>
        /// Sync web app repository
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> SyncRepositoryWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the quota usage numbers for web app
        /// </summary>
        /// Gets the quota usage numbers for web app
        /// <param name='resourceGroupName'>
        /// Name of resource group
        /// </param>
        /// <param name='name'>
        /// Name of web app
        /// </param>
        /// <param name='filter'>
        /// Return only usages specified in the filter. Filter is specified by
        /// using OData syntax. Example: $filter=(name.value eq 'Metric1' or
        /// name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z'
        /// and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq
        /// duration'[Hour|Minute|Day]'.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<CsmUsageQuota>>> ListUsagesWithHttpMessagesAsync(string resourceGroupName, string name, string filter = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves a list of all Virtual Network Connections associated
        /// with this web app.
        /// </summary>
        /// Retrieves a list of all Virtual Network Connections associated
        /// with this web app.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IList<VnetInfo>>> ListVnetConnectionsWithHttpMessagesAsync(string resourceGroupName, string name, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves a specific Virtual Network Connection associated with
        /// this web app.
        /// </summary>
        /// Retrieves a specific Virtual Network Connection associated with
        /// this web app.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='vnetName'>
        /// The name of the Virtual Network
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<VnetInfo>> GetVnetConnectionWithHttpMessagesAsync(string resourceGroupName, string name, string vnetName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Adds a Virtual Network Connection or updates it's properties.
        /// </summary>
        /// Adds a Virtual Network Connection or updates it's properties.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='vnetName'>
        /// The name of the Virtual Network
        /// </param>
        /// <param name='connectionEnvelope'>
        /// The properties of this Virtual Network Connection
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<VnetInfo>> CreateOrUpdateVnetConnectionWithHttpMessagesAsync(string resourceGroupName, string name, string vnetName, VnetInfo connectionEnvelope, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Removes the specified Virtual Network Connection association from
        /// this web app.
        /// </summary>
        /// Removes the specified Virtual Network Connection association from
        /// this web app.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='vnetName'>
        /// The name of the Virtual Network
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> DeleteVnetConnectionWithHttpMessagesAsync(string resourceGroupName, string name, string vnetName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Adds a Virtual Network Connection or updates it's properties.
        /// </summary>
        /// Adds a Virtual Network Connection or updates it's properties.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='vnetName'>
        /// The name of the Virtual Network
        /// </param>
        /// <param name='connectionEnvelope'>
        /// The properties of this Virtual Network Connection
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<VnetInfo>> UpdateVnetConnectionWithHttpMessagesAsync(string resourceGroupName, string name, string vnetName, VnetInfo connectionEnvelope, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves a Virtual Network connection gateway associated with
        /// this web app and virtual network.
        /// </summary>
        /// Retrieves a Virtual Network connection gateway associated with
        /// this web app and virtual network.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='vnetName'>
        /// The name of the Virtual Network
        /// </param>
        /// <param name='gatewayName'>
        /// The name of the gateway. The only gateway that exists presently is
        /// "primary"
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<object>> GetVnetConnectionGatewayWithHttpMessagesAsync(string resourceGroupName, string name, string vnetName, string gatewayName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates the Virtual Network Gateway.
        /// </summary>
        /// Updates the Virtual Network Gateway.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='vnetName'>
        /// The name of the Virtual Network
        /// </param>
        /// <param name='gatewayName'>
        /// The name of the gateway. The only gateway that exists presently is
        /// "primary"
        /// </param>
        /// <param name='connectionEnvelope'>
        /// The properties to update this gateway with.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<VnetGateway>> CreateOrUpdateVnetConnectionGatewayWithHttpMessagesAsync(string resourceGroupName, string name, string vnetName, string gatewayName, VnetGateway connectionEnvelope, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates the Virtual Network Gateway.
        /// </summary>
        /// Updates the Virtual Network Gateway.
        /// <param name='resourceGroupName'>
        /// The resource group name
        /// </param>
        /// <param name='name'>
        /// The name of the web app
        /// </param>
        /// <param name='vnetName'>
        /// The name of the Virtual Network
        /// </param>
        /// <param name='gatewayName'>
        /// The name of the gateway. The only gateway that exists presently is
        /// "primary"
        /// </param>
        /// <param name='connectionEnvelope'>
        /// The properties to update this gateway with.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<VnetGateway>> UpdateVnetConnectionGatewayWithHttpMessagesAsync(string resourceGroupName, string name, string vnetName, string gatewayName, VnetGateway connectionEnvelope, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets all Web Apps for a subscription
        /// </summary>
        /// Gets all Web Apps for a subscription
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<Site>>> ListNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets deleted web apps in subscription
        /// </summary>
        /// Gets deleted web apps in subscription
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<DeletedSite>>> ListDeletedNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the web apps for a subscription in the specified resource
        /// group
        /// </summary>
        /// Gets the web apps for a subscription in the specified resource
        /// group
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<Site>>> ListByResourceGroupNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Lists all available backups for web app
        /// </summary>
        /// Lists all available backups for web app
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<BackupItem>>> ListBackupsNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// List deployments
        /// </summary>
        /// List deployments
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<Deployment>>> ListDeploymentsNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get web app hostname bindings
        /// </summary>
        /// Get web app hostname bindings
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<HostNameBinding>>> ListHostNameBindingsNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets all instance of a web app
        /// </summary>
        /// Gets all instance of a web app
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<SiteInstance>>> ListInstanceIdentifiersNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// List deployments
        /// </summary>
        /// List deployments
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<Deployment>>> ListInstanceDeploymentsNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets metric definitions for web app
        /// </summary>
        /// Gets metric definitions for web app
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<MetricDefinition>>> ListMetricDefinitionsNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets metrics for web app
        /// </summary>
        /// Gets metrics for web app
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<ResourceMetric>>> ListMetricsNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets perfmon counters for web app
        /// </summary>
        /// Gets perfmon counters for web app
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<PerfMonResponse>>> ListPerfMonCountersNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets all the slots for a web apps
        /// </summary>
        /// Gets all the slots for a web apps
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<Site>>> ListSlotsNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Lists all available backups for web app
        /// </summary>
        /// Lists all available backups for web app
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<BackupItem>>> ListBackupsSlotNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// List deployments
        /// </summary>
        /// List deployments
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<Deployment>>> ListDeploymentsSlotNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get web app hostname bindings
        /// </summary>
        /// Get web app hostname bindings
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<HostNameBinding>>> ListHostNameBindingsSlotNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets all instance of a web app
        /// </summary>
        /// Gets all instance of a web app
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<SiteInstance>>> ListInstanceIdentifiersSlotNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// List deployments
        /// </summary>
        /// List deployments
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<Deployment>>> ListInstanceDeploymentsSlotNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets metric definitions for web app
        /// </summary>
        /// Gets metric definitions for web app
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<MetricDefinition>>> ListMetricDefinitionsSlotNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets metrics for web app
        /// </summary>
        /// Gets metrics for web app
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<ResourceMetric>>> ListMetricsSlotNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets perfmon counters for web app
        /// </summary>
        /// Gets perfmon counters for web app
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<PerfMonResponse>>> ListPerfMonCountersSlotNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get the difference in configuration settings between two web app
        /// slots
        /// </summary>
        /// Get the difference in configuration settings between two web app
        /// slots
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<SlotDifference>>> GetSlotsDifferencesSlotNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns all Snapshots to the user.
        /// </summary>
        /// Returns all Snapshots to the user.
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<Snapshot>>> ListSnapshotsSlotNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the quota usage numbers for web app
        /// </summary>
        /// Gets the quota usage numbers for web app
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<CsmUsageQuota>>> ListUsagesSlotNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Get the difference in configuration settings between two web app
        /// slots
        /// </summary>
        /// Get the difference in configuration settings between two web app
        /// slots
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<SlotDifference>>> GetSlotsDifferencesFromProductionNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns all Snapshots to the user.
        /// </summary>
        /// Returns all Snapshots to the user.
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<Snapshot>>> ListSnapshotsNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the quota usage numbers for web app
        /// </summary>
        /// Gets the quota usage numbers for web app
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<CsmUsageQuota>>> ListUsagesNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
