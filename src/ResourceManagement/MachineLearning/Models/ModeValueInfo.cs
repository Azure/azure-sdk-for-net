// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// </auto-generated>

namespace Microsoft.Azure.Management.MachineLearning.Fluent.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.MachineLearning;
    using Microsoft.Azure.Management.MachineLearning.Fluent;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Nested parameter definition.
    /// </summary>
    public partial class ModeValueInfo
    {
        /// <summary>
        /// Initializes a new instance of the ModeValueInfo class.
        /// </summary>
        public ModeValueInfo()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ModeValueInfo class.
        /// </summary>
        /// <param name="interfaceString">The interface string name for the
        /// nested parameter.</param>
        /// <param name="parameters">The definition of the parameter.</param>
        public ModeValueInfo(string interfaceString = default(string), IList<ModuleAssetParameter> parameters = default(IList<ModuleAssetParameter>))
        {
            InterfaceString = interfaceString;
            Parameters = parameters;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the interface string name for the nested parameter.
        /// </summary>
        [JsonProperty(PropertyName = "interfaceString")]
        public string InterfaceString { get; set; }

        /// <summary>
        /// Gets or sets the definition of the parameter.
        /// </summary>
        [JsonProperty(PropertyName = "parameters")]
        public IList<ModuleAssetParameter> Parameters { get; set; }

    }
}
