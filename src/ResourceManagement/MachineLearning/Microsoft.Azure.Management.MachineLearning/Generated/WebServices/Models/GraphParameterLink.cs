// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.MachineLearning.WebServices.Models
{
    using System.Linq;

    /// <summary>
    /// Association link for a graph global parameter to a node in the graph.
    /// </summary>
    public partial class GraphParameterLink
    {
        /// <summary>
        /// Initializes a new instance of the GraphParameterLink class.
        /// </summary>
        public GraphParameterLink() { }

        /// <summary>
        /// Initializes a new instance of the GraphParameterLink class.
        /// </summary>
        /// <param name="nodeId">The graph node's identifier</param>
        /// <param name="parameterKey">The identifier of the node parameter
        /// that the global parameter maps to.</param>
        public GraphParameterLink(string nodeId, string parameterKey)
        {
            NodeId = nodeId;
            ParameterKey = parameterKey;
        }

        /// <summary>
        /// Gets or sets the graph node's identifier
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "nodeId")]
        public string NodeId { get; set; }

        /// <summary>
        /// Gets or sets the identifier of the node parameter that the global
        /// parameter maps to.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "parameterKey")]
        public string ParameterKey { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (NodeId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "NodeId");
            }
            if (ParameterKey == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ParameterKey");
            }
        }
    }
}
