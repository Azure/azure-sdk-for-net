// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.MachineLearning.WebServices.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.MachineLearning;
    using Microsoft.Azure.Management.MachineLearning.WebServices;
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Swagger 2.0 schema for a column within the data table representing a
    /// web service input or output. See Swagger specification:
    /// http://swagger.io/specification/
    /// </summary>
    public partial class ColumnSpecification
    {
        /// <summary>
        /// Initializes a new instance of the ColumnSpecification class.
        /// </summary>
        public ColumnSpecification()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ColumnSpecification class.
        /// </summary>
        /// <param name="type">Data type of the column. Possible values
        /// include: 'Boolean', 'Integer', 'Number', 'String'</param>
        /// <param name="format">Additional format information for the data
        /// type. Possible values include: 'Byte', 'Char', 'Complex64',
        /// 'Complex128', 'Date-time', 'Date-timeOffset', 'Double', 'Duration',
        /// 'Float', 'Int8', 'Int16', 'Int32', 'Int64', 'Uint8', 'Uint16',
        /// 'Uint32', 'Uint64'</param>
        /// <param name="enumProperty">If the data type is categorical, this
        /// provides the list of accepted categories.</param>
        /// <param name="xMsIsnullable">Flag indicating if the type supports
        /// null values or not.</param>
        /// <param name="xMsIsordered">Flag indicating whether the categories
        /// are treated as an ordered set or not, if this is a categorical
        /// column.</param>
        public ColumnSpecification(string type, string format = default(string), IList<object> enumProperty = default(IList<object>), bool? xMsIsnullable = default(bool?), bool? xMsIsordered = default(bool?))
        {
            Type = type;
            Format = format;
            EnumProperty = enumProperty;
            XMsIsnullable = xMsIsnullable;
            XMsIsordered = xMsIsordered;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets data type of the column. Possible values include:
        /// 'Boolean', 'Integer', 'Number', 'String'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets additional format information for the data type.
        /// Possible values include: 'Byte', 'Char', 'Complex64', 'Complex128',
        /// 'Date-time', 'Date-timeOffset', 'Double', 'Duration', 'Float',
        /// 'Int8', 'Int16', 'Int32', 'Int64', 'Uint8', 'Uint16', 'Uint32',
        /// 'Uint64'
        /// </summary>
        [JsonProperty(PropertyName = "format")]
        public string Format { get; set; }

        /// <summary>
        /// Gets or sets if the data type is categorical, this provides the
        /// list of accepted categories.
        /// </summary>
        [JsonProperty(PropertyName = "enum")]
        public IList<object> EnumProperty { get; set; }

        /// <summary>
        /// Gets or sets flag indicating if the type supports null values or
        /// not.
        /// </summary>
        [JsonProperty(PropertyName = "x-ms-isnullable")]
        public bool? XMsIsnullable { get; set; }

        /// <summary>
        /// Gets or sets flag indicating whether the categories are treated as
        /// an ordered set or not, if this is a categorical column.
        /// </summary>
        [JsonProperty(PropertyName = "x-ms-isordered")]
        public bool? XMsIsordered { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Type == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Type");
            }
        }
    }
}
