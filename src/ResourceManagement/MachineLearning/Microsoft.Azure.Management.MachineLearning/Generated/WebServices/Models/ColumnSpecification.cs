// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.MachineLearning.WebServices.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// Swagger 2.0 schema for a column within the data table representing a
    /// web service input or output. See Swagger specification:
    /// http://swagger.io/specification/
    /// </summary>
    public partial class ColumnSpecification
    {
        /// <summary>
        /// Initializes a new instance of the ColumnSpecification class.
        /// </summary>
        public ColumnSpecification() { }

        /// <summary>
        /// Initializes a new instance of the ColumnSpecification class.
        /// </summary>
        public ColumnSpecification(string type, string format = default(string), IList<object> enumProperty = default(IList<object>), bool? xMsIsnullable = default(bool?), bool? xMsIsordered = default(bool?))
        {
            Type = type;
            Format = format;
            EnumProperty = enumProperty;
            XMsIsnullable = xMsIsnullable;
            XMsIsordered = xMsIsordered;
        }

        /// <summary>
        /// Data type of the column. Possible values include: 'Boolean',
        /// 'Integer', 'Number', 'String'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Additional format information for the data type. Possible values
        /// include: 'Byte', 'Char', 'Datetime', 'Double', 'Duration',
        /// 'Float', 'Int8', 'Int16', 'Int32', 'Int64', 'Uint8', 'Uint16',
        /// 'Uint32', 'Uint64'
        /// </summary>
        [JsonProperty(PropertyName = "format")]
        public string Format { get; set; }

        /// <summary>
        /// If the data type is categorical, this provides the list of
        /// accepted categories.
        /// </summary>
        [JsonProperty(PropertyName = "enum")]
        public IList<object> EnumProperty { get; set; }

        /// <summary>
        /// Flag indicating if the type supports null values or not.
        /// </summary>
        [JsonProperty(PropertyName = "x-ms-isnullable")]
        public bool? XMsIsnullable { get; set; }

        /// <summary>
        /// Flag indicating whether the categories are treated as an ordered
        /// set or not, if this is a categorical column.
        /// </summary>
        [JsonProperty(PropertyName = "x-ms-isordered")]
        public bool? XMsIsordered { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (Type == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Type");
            }
        }
    }
}
