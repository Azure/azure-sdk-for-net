// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.MachineLearning.WebServices.Models
{
    using System.Linq;

    /// <summary>
    /// The set of properties specific to the Azure ML web service resource.
    /// </summary>
    public partial class WebServiceProperties
    {
        /// <summary>
        /// Initializes a new instance of the WebServiceProperties class.
        /// </summary>
        public WebServiceProperties() { }

        /// <summary>
        /// Initializes a new instance of the WebServiceProperties class.
        /// </summary>
        /// <param name="title">The title of the Azure ML web service.</param>
        /// <param name="description">The description of the Azure ML web
        /// service.</param>
        /// <param name="createdOn">The moment of time the Azure ML web
        /// service was created.</param>
        /// <param name="modifiedOn">The moment of time the web service was
        /// last modified.</param>
        /// <param name="provisioningState">The web service resource's
        /// provisioning state. Possible values include: 'Unknown',
        /// 'Provisioning', 'Succeeded', 'Failed', 'Canceled'</param>
        /// <param name="keys">The set of access keys for the web service. If
        /// not specified at creation time (PUT), they will be generated
        /// automatically by the resource provider.</param>
        /// <param name="readOnlyProperty">If true, the web service can no
        /// longer be updated / patched, only removed. Otherwise, the service
        /// resource supports changes.</param>
        /// <param name="swaggerLocation">The uri for the swagger spec
        /// associated with this web service.</param>
        /// <param name="exposeSampleData">Flag that controls whether to
        /// expose sample data or not in the web service's swagger
        /// definition.</param>
        /// <param name="realtimeConfiguration">Configuration for the
        /// service's realtime endpoint.</param>
        /// <param name="diagnostics">Settings controlling the diagnostics
        /// traces collection for the web service.</param>
        /// <param name="storageAccount">The storage account associated with
        /// the service. This is used to store both datasets and diagnostic
        /// traces. This information is required at creation time (PUT) and
        /// only the key is updateable after that. The account credentials
        /// are hidden on a GET web service call.</param>
        /// <param name="machineLearningWorkspace">This is only populated at
        /// creation time (PUT) for web services originating from an AzureML
        /// Studio experiment.</param>
        /// <param name="commitmentPlan">The commitment plan associated with
        /// this web service. This is required to be specified at creation
        /// time (PUT) and is not updateable afterwards.</param>
        /// <param name="input">Swagger schema for the service's input(s), as
        /// applicable.</param>
        /// <param name="output">Swagger schema for the service's output(s),
        /// as applicable.</param>
        /// <param name="exampleRequest">Sample request data for each of the
        /// service's inputs, as applicable.</param>
        /// <param name="assets">Set of assets associated with the web
        /// service.</param>
        /// <param name="parameters">The set of global parameters values
        /// defined for the web service, given as a global parameter name to
        /// default value map. If no default value is specified, the
        /// parameter is considered to be required.</param>
        public WebServiceProperties(string title = default(string), string description = default(string), System.DateTime? createdOn = default(System.DateTime?), System.DateTime? modifiedOn = default(System.DateTime?), string provisioningState = default(string), WebServiceKeys keys = default(WebServiceKeys), bool? readOnlyProperty = default(bool?), string swaggerLocation = default(string), bool? exposeSampleData = default(bool?), RealtimeConfiguration realtimeConfiguration = default(RealtimeConfiguration), DiagnosticsConfiguration diagnostics = default(DiagnosticsConfiguration), StorageAccount storageAccount = default(StorageAccount), MachineLearningWorkspace machineLearningWorkspace = default(MachineLearningWorkspace), CommitmentPlan commitmentPlan = default(CommitmentPlan), ServiceInputOutputSpecification input = default(ServiceInputOutputSpecification), ServiceInputOutputSpecification output = default(ServiceInputOutputSpecification), ExampleRequest exampleRequest = default(ExampleRequest), System.Collections.Generic.IDictionary<string, AssetItem> assets = default(System.Collections.Generic.IDictionary<string, AssetItem>), System.Collections.Generic.IDictionary<string, string> parameters = default(System.Collections.Generic.IDictionary<string, string>))
        {
            Title = title;
            Description = description;
            CreatedOn = createdOn;
            ModifiedOn = modifiedOn;
            ProvisioningState = provisioningState;
            Keys = keys;
            ReadOnlyProperty = readOnlyProperty;
            SwaggerLocation = swaggerLocation;
            ExposeSampleData = exposeSampleData;
            RealtimeConfiguration = realtimeConfiguration;
            Diagnostics = diagnostics;
            StorageAccount = storageAccount;
            MachineLearningWorkspace = machineLearningWorkspace;
            CommitmentPlan = commitmentPlan;
            Input = input;
            Output = output;
            ExampleRequest = exampleRequest;
            Assets = assets;
            Parameters = parameters;
        }

        /// <summary>
        /// Gets or sets the title of the Azure ML web service.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "title")]
        public string Title { get; set; }

        /// <summary>
        /// Gets or sets the description of the Azure ML web service.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets the moment of time the Azure ML web service was created.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "createdOn")]
        public System.DateTime? CreatedOn { get; private set; }

        /// <summary>
        /// Gets the moment of time the web service was last modified.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "modifiedOn")]
        public System.DateTime? ModifiedOn { get; private set; }

        /// <summary>
        /// Gets the web service resource's provisioning state. Possible
        /// values include: 'Unknown', 'Provisioning', 'Succeeded', 'Failed',
        /// 'Canceled'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets or sets the set of access keys for the web service. If not
        /// specified at creation time (PUT), they will be generated
        /// automatically by the resource provider.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "keys")]
        public WebServiceKeys Keys { get; set; }

        /// <summary>
        /// Gets or sets if true, the web service can no longer be updated /
        /// patched, only removed. Otherwise, the service resource supports
        /// changes.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "readOnly")]
        public bool? ReadOnlyProperty { get; set; }

        /// <summary>
        /// Gets the uri for the swagger spec associated with this web service.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "swaggerLocation")]
        public string SwaggerLocation { get; private set; }

        /// <summary>
        /// Gets or sets flag that controls whether to expose sample data or
        /// not in the web service's swagger definition.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "exposeSampleData")]
        public bool? ExposeSampleData { get; set; }

        /// <summary>
        /// Gets or sets configuration for the service's realtime endpoint.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "realtimeConfiguration")]
        public RealtimeConfiguration RealtimeConfiguration { get; set; }

        /// <summary>
        /// Gets or sets settings controlling the diagnostics traces
        /// collection for the web service.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "diagnostics")]
        public DiagnosticsConfiguration Diagnostics { get; set; }

        /// <summary>
        /// Gets or sets the storage account associated with the service. This
        /// is used to store both datasets and diagnostic traces. This
        /// information is required at creation time (PUT) and only the key
        /// is updateable after that. The account credentials are hidden on a
        /// GET web service call.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "storageAccount")]
        public StorageAccount StorageAccount { get; set; }

        /// <summary>
        /// Gets or sets this is only populated at creation time (PUT) for web
        /// services originating from an AzureML Studio experiment.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "machineLearningWorkspace")]
        public MachineLearningWorkspace MachineLearningWorkspace { get; set; }

        /// <summary>
        /// Gets or sets the commitment plan associated with this web service.
        /// This is required to be specified at creation time (PUT) and is
        /// not updateable afterwards.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "commitmentPlan")]
        public CommitmentPlan CommitmentPlan { get; set; }

        /// <summary>
        /// Gets or sets swagger schema for the service's input(s), as
        /// applicable.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "input")]
        public ServiceInputOutputSpecification Input { get; set; }

        /// <summary>
        /// Gets or sets swagger schema for the service's output(s), as
        /// applicable.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "output")]
        public ServiceInputOutputSpecification Output { get; set; }

        /// <summary>
        /// Gets or sets sample request data for each of the service's inputs,
        /// as applicable.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "exampleRequest")]
        public ExampleRequest ExampleRequest { get; set; }

        /// <summary>
        /// Gets or sets set of assets associated with the web service.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "assets")]
        public System.Collections.Generic.IDictionary<string, AssetItem> Assets { get; set; }

        /// <summary>
        /// Gets or sets the set of global parameters values defined for the
        /// web service, given as a global parameter name to default value
        /// map. If no default value is specified, the parameter is
        /// considered to be required.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "parameters")]
        public System.Collections.Generic.IDictionary<string, string> Parameters { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.RealtimeConfiguration != null)
            {
                this.RealtimeConfiguration.Validate();
            }
            if (this.Diagnostics != null)
            {
                this.Diagnostics.Validate();
            }
            if (this.MachineLearningWorkspace != null)
            {
                this.MachineLearningWorkspace.Validate();
            }
            if (this.CommitmentPlan != null)
            {
                this.CommitmentPlan.Validate();
            }
            if (this.Input != null)
            {
                this.Input.Validate();
            }
            if (this.Output != null)
            {
                this.Output.Validate();
            }
            if (this.Assets != null)
            {
                foreach (var valueElement in this.Assets.Values)
                {
                    if (valueElement != null)
                    {
                        valueElement.Validate();
                    }
                }
            }
        }
    }
}
