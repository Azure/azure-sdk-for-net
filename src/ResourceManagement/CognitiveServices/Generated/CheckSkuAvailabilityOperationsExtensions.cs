// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// </auto-generated>

namespace Microsoft.Azure.Management.CognitiveServices.Fluent
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.CognitiveServices;
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for CheckSkuAvailabilityOperations.
    /// </summary>
    public static partial class CheckSkuAvailabilityOperationsExtensions
    {
            /// <summary>
            /// Check available SKUs.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='skus'>
            /// The SKU of the resource.
            /// </param>
            /// <param name='kind'>
            /// The Kind of the resource. Possible values include: 'Academic',
            /// 'Bing.Autosuggest', 'Bing.Search', 'Bing.Speech', 'Bing.SpellCheck',
            /// 'ComputerVision', 'ContentModerator', 'CustomSpeech', 'Emotion', 'Face',
            /// 'LUIS', 'Recommendations', 'SpeakerRecognition', 'Speech',
            /// 'SpeechTranslation', 'TextAnalytics', 'TextTranslation', 'WebLM'
            /// </param>
            /// <param name='type'>
            /// The Type of the resource.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CheckSkuAvailabilityResultListInner> ListAsync(this ICheckSkuAvailabilityOperations operations, IList<string> skus, string kind, string type, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(skus, kind, type, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
