// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Scheduler.Fluent.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.Scheduler;
    using Microsoft.Azure.Management.Scheduler.Fluent;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class JobHistoryDefinitionProperties
    {
        /// <summary>
        /// Initializes a new instance of the JobHistoryDefinitionProperties
        /// class.
        /// </summary>
        public JobHistoryDefinitionProperties()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JobHistoryDefinitionProperties
        /// class.
        /// </summary>
        /// <param name="startTime">Gets the start time for this job.</param>
        /// <param name="endTime">Gets the end time for this job.</param>
        /// <param name="expectedExecutionTime">Gets the expected execution
        /// time for this job.</param>
        /// <param name="actionName">Gets the job history action name. Possible
        /// values include: 'MainAction', 'ErrorAction'</param>
        /// <param name="status">Gets the job history status. Possible values
        /// include: 'Completed', 'Failed', 'Postponed'</param>
        /// <param name="message">Gets the message for the job history.</param>
        /// <param name="retryCount">Gets the retry count for job.</param>
        /// <param name="repeatCount">Gets the repeat count for the
        /// job.</param>
        public JobHistoryDefinitionProperties(System.DateTime? startTime = default(System.DateTime?), System.DateTime? endTime = default(System.DateTime?), System.DateTime? expectedExecutionTime = default(System.DateTime?), JobHistoryActionName? actionName = default(JobHistoryActionName?), JobExecutionStatus? status = default(JobExecutionStatus?), string message = default(string), int? retryCount = default(int?), int? repeatCount = default(int?))
        {
            StartTime = startTime;
            EndTime = endTime;
            ExpectedExecutionTime = expectedExecutionTime;
            ActionName = actionName;
            Status = status;
            Message = message;
            RetryCount = retryCount;
            RepeatCount = repeatCount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the start time for this job.
        /// </summary>
        [JsonProperty(PropertyName = "startTime")]
        public System.DateTime? StartTime { get; private set; }

        /// <summary>
        /// Gets the end time for this job.
        /// </summary>
        [JsonProperty(PropertyName = "endTime")]
        public System.DateTime? EndTime { get; private set; }

        /// <summary>
        /// Gets the expected execution time for this job.
        /// </summary>
        [JsonProperty(PropertyName = "expectedExecutionTime")]
        public System.DateTime? ExpectedExecutionTime { get; private set; }

        /// <summary>
        /// Gets the job history action name. Possible values include:
        /// 'MainAction', 'ErrorAction'
        /// </summary>
        [JsonProperty(PropertyName = "actionName")]
        public JobHistoryActionName? ActionName { get; private set; }

        /// <summary>
        /// Gets the job history status. Possible values include: 'Completed',
        /// 'Failed', 'Postponed'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public JobExecutionStatus? Status { get; private set; }

        /// <summary>
        /// Gets the message for the job history.
        /// </summary>
        [JsonProperty(PropertyName = "message")]
        public string Message { get; private set; }

        /// <summary>
        /// Gets the retry count for job.
        /// </summary>
        [JsonProperty(PropertyName = "retryCount")]
        public int? RetryCount { get; private set; }

        /// <summary>
        /// Gets the repeat count for the job.
        /// </summary>
        [JsonProperty(PropertyName = "repeatCount")]
        public int? RepeatCount { get; private set; }

    }
}
