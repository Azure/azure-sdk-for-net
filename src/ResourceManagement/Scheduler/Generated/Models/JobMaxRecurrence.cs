// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Scheduler.Fluent.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.Scheduler;
    using Microsoft.Azure.Management.Scheduler.Fluent;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class JobMaxRecurrence
    {
        /// <summary>
        /// Initializes a new instance of the JobMaxRecurrence class.
        /// </summary>
        public JobMaxRecurrence()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JobMaxRecurrence class.
        /// </summary>
        /// <param name="frequency">Gets or sets the frequency of recurrence
        /// (second, minute, hour, day, week, month). Possible values include:
        /// 'Minute', 'Hour', 'Day', 'Week', 'Month'</param>
        /// <param name="interval">Gets or sets the interval between
        /// retries.</param>
        public JobMaxRecurrence(RecurrenceFrequency? frequency = default(RecurrenceFrequency?), int? interval = default(int?))
        {
            Frequency = frequency;
            Interval = interval;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the frequency of recurrence (second, minute, hour,
        /// day, week, month). Possible values include: 'Minute', 'Hour',
        /// 'Day', 'Week', 'Month'
        /// </summary>
        [JsonProperty(PropertyName = "frequency")]
        public RecurrenceFrequency? Frequency { get; set; }

        /// <summary>
        /// Gets or sets the interval between retries.
        /// </summary>
        [JsonProperty(PropertyName = "interval")]
        public int? Interval { get; set; }

    }
}
