// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.DataLake.Store.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.DataLake;
    using Microsoft.Azure.Management.DataLake.Store;
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Metadata information used by account encryption.
    /// </summary>
    public partial class KeyVaultMetaInfo
    {
        /// <summary>
        /// Initializes a new instance of the KeyVaultMetaInfo class.
        /// </summary>
        public KeyVaultMetaInfo()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the KeyVaultMetaInfo class.
        /// </summary>
        /// <param name="keyVaultResourceId">The resource identifier for the
        /// user managed Key Vault being used to encrypt.</param>
        /// <param name="encryptionKeyName">The name of the user managed
        /// encryption key.</param>
        /// <param name="encryptionKeyVersion">The version of the user managed
        /// encryption key.</param>
        public KeyVaultMetaInfo(string keyVaultResourceId, string encryptionKeyName, string encryptionKeyVersion)
        {
            KeyVaultResourceId = keyVaultResourceId;
            EncryptionKeyName = encryptionKeyName;
            EncryptionKeyVersion = encryptionKeyVersion;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the resource identifier for the user managed Key Vault
        /// being used to encrypt.
        /// </summary>
        [JsonProperty(PropertyName = "keyVaultResourceId")]
        public string KeyVaultResourceId { get; set; }

        /// <summary>
        /// Gets or sets the name of the user managed encryption key.
        /// </summary>
        [JsonProperty(PropertyName = "encryptionKeyName")]
        public string EncryptionKeyName { get; set; }

        /// <summary>
        /// Gets or sets the version of the user managed encryption key.
        /// </summary>
        [JsonProperty(PropertyName = "encryptionKeyVersion")]
        public string EncryptionKeyVersion { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (KeyVaultResourceId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "KeyVaultResourceId");
            }
            if (EncryptionKeyName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "EncryptionKeyName");
            }
            if (EncryptionKeyVersion == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "EncryptionKeyVersion");
            }
        }
    }
}
