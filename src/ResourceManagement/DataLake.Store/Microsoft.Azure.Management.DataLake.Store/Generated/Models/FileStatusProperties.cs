// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.DataLake.Store.Models
{
    using Azure;
    using Management;
    using DataLake;
    using Store;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Data Lake Store file or directory information.
    /// </summary>
    public partial class FileStatusProperties
    {
        /// <summary>
        /// Initializes a new instance of the FileStatusProperties class.
        /// </summary>
        public FileStatusProperties() { }

        /// <summary>
        /// Initializes a new instance of the FileStatusProperties class.
        /// </summary>
        /// <param name="accessTime">the last access time as ticks since the
        /// epoch.</param>
        /// <param name="blockSize">the block size for the file.</param>
        /// <param name="childrenNum">the number of children in the
        /// directory.</param>
        /// <param name="expirationTime">Gets the expiration time, if any, as
        /// ticks since the epoch. If the value is 0 or DateTime.MaxValue there
        /// is no expiration.</param>
        /// <param name="group">the group owner.</param>
        /// <param name="length">the number of bytes in a file.</param>
        /// <param name="modificationTime">the modification time as ticks since
        /// the epoch.</param>
        /// <param name="owner">the user who is the owner.</param>
        /// <param name="pathSuffix">the path suffix.</param>
        /// <param name="permission">the permission represented as an
        /// string.</param>
        /// <param name="type">the type of the path object. Possible values
        /// include: 'FILE', 'DIRECTORY'</param>
        public FileStatusProperties(long? accessTime = default(long?), long? blockSize = default(long?), long? childrenNum = default(long?), long? expirationTime = default(long?), string group = default(string), long? length = default(long?), long? modificationTime = default(long?), string owner = default(string), string pathSuffix = default(string), string permission = default(string), FileType? type = default(FileType?))
        {
            AccessTime = accessTime;
            BlockSize = blockSize;
            ChildrenNum = childrenNum;
            ExpirationTime = expirationTime;
            Group = group;
            Length = length;
            ModificationTime = modificationTime;
            Owner = owner;
            PathSuffix = pathSuffix;
            Permission = permission;
            Type = type;
        }

        /// <summary>
        /// Gets the last access time as ticks since the epoch.
        /// </summary>
        [JsonProperty(PropertyName = "accessTime")]
        public long? AccessTime { get; protected set; }

        /// <summary>
        /// Gets the block size for the file.
        /// </summary>
        [JsonProperty(PropertyName = "blockSize")]
        public long? BlockSize { get; protected set; }

        /// <summary>
        /// Gets the number of children in the directory.
        /// </summary>
        [JsonProperty(PropertyName = "childrenNum")]
        public long? ChildrenNum { get; protected set; }

        /// <summary>
        /// Gets the expiration time, if any, as ticks since the epoch. If the
        /// value is 0 or DateTime.MaxValue there is no expiration.
        /// </summary>
        [JsonProperty(PropertyName = "expirationTime")]
        public long? ExpirationTime { get; protected set; }

        /// <summary>
        /// Gets the group owner.
        /// </summary>
        [JsonProperty(PropertyName = "group")]
        public string Group { get; protected set; }

        /// <summary>
        /// Gets the number of bytes in a file.
        /// </summary>
        [JsonProperty(PropertyName = "length")]
        public long? Length { get; protected set; }

        /// <summary>
        /// Gets the modification time as ticks since the epoch.
        /// </summary>
        [JsonProperty(PropertyName = "modificationTime")]
        public long? ModificationTime { get; protected set; }

        /// <summary>
        /// Gets the user who is the owner.
        /// </summary>
        [JsonProperty(PropertyName = "owner")]
        public string Owner { get; protected set; }

        /// <summary>
        /// Gets the path suffix.
        /// </summary>
        [JsonProperty(PropertyName = "pathSuffix")]
        public string PathSuffix { get; protected set; }

        /// <summary>
        /// Gets the permission represented as an string.
        /// </summary>
        [JsonProperty(PropertyName = "permission")]
        public string Permission { get; protected set; }

        /// <summary>
        /// Gets the type of the path object. Possible values include: 'FILE',
        /// 'DIRECTORY'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public FileType? Type { get; protected set; }

    }
}

