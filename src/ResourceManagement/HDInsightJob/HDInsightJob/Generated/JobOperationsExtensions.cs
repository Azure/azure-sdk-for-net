// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure.Management.HDInsight.Job;
using Microsoft.Azure.Management.HDInsight.Job.Models;

namespace Microsoft.Azure.Management.HDInsight.Job
{
    /// <summary>
    /// The HDInsight job client manages jobs against HDInsight clusters.
    /// </summary>
    public static partial class JobOperationsExtensions
    {
        /// <summary>
        /// Gets job details from the specified HDInsight cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.Job.IJobOperations.
        /// </param>
        /// <param name='jobId'>
        /// Required. The id of the job.
        /// </param>
        /// <returns>
        /// The Get Job operation response.
        /// </returns>
        public static JobGetResponse GetJob(this IJobOperations operations, string jobId)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IJobOperations)s).GetJobAsync(jobId);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Gets job details from the specified HDInsight cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.Job.IJobOperations.
        /// </param>
        /// <param name='jobId'>
        /// Required. The id of the job.
        /// </param>
        /// <returns>
        /// The Get Job operation response.
        /// </returns>
        public static Task<JobGetResponse> GetJobAsync(this IJobOperations operations, string jobId)
        {
            return operations.GetJobAsync(jobId, CancellationToken.None);
        }
        
        /// <summary>
        /// Initiates cancel on given running job in the specified HDInsight
        /// cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.Job.IJobOperations.
        /// </param>
        /// <param name='jobId'>
        /// Required. The id of the job.
        /// </param>
        /// <returns>
        /// The Get Job operation response.
        /// </returns>
        public static JobGetResponse KillJob(this IJobOperations operations, string jobId)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IJobOperations)s).KillJobAsync(jobId);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Initiates cancel on given running job in the specified HDInsight
        /// cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.Job.IJobOperations.
        /// </param>
        /// <param name='jobId'>
        /// Required. The id of the job.
        /// </param>
        /// <returns>
        /// The Get Job operation response.
        /// </returns>
        public static Task<JobGetResponse> KillJobAsync(this IJobOperations operations, string jobId)
        {
            return operations.KillJobAsync(jobId, CancellationToken.None);
        }
        
        /// <summary>
        /// Gets the list of jobs from the specified HDInsight cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.Job.IJobOperations.
        /// </param>
        /// <returns>
        /// The List Job operation response.
        /// </returns>
        public static JobListResponse ListJobs(this IJobOperations operations)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IJobOperations)s).ListJobsAsync();
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Gets the list of jobs from the specified HDInsight cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.Job.IJobOperations.
        /// </param>
        /// <returns>
        /// The List Job operation response.
        /// </returns>
        public static Task<JobListResponse> ListJobsAsync(this IJobOperations operations)
        {
            return operations.ListJobsAsync(CancellationToken.None);
        }
        
        /// <summary>
        /// Gets numOfJobs after jobId from the specified HDInsight cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.Job.IJobOperations.
        /// </param>
        /// <param name='jobId'>
        /// Optional. jobId from where to list jobs.
        /// </param>
        /// <param name='numOfJobs'>
        /// Required. Number of jobs to fetch. Use -1 to get all.
        /// </param>
        /// <returns>
        /// The List Job operation response.
        /// </returns>
        public static JobListResponse ListJobsAfterJobId(this IJobOperations operations, string jobId, int numOfJobs)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IJobOperations)s).ListJobsAfterJobIdAsync(jobId, numOfJobs);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Gets numOfJobs after jobId from the specified HDInsight cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.Job.IJobOperations.
        /// </param>
        /// <param name='jobId'>
        /// Optional. jobId from where to list jobs.
        /// </param>
        /// <param name='numOfJobs'>
        /// Required. Number of jobs to fetch. Use -1 to get all.
        /// </param>
        /// <returns>
        /// The List Job operation response.
        /// </returns>
        public static Task<JobListResponse> ListJobsAfterJobIdAsync(this IJobOperations operations, string jobId, int numOfJobs)
        {
            return operations.ListJobsAfterJobIdAsync(jobId, numOfJobs, CancellationToken.None);
        }
        
        /// <summary>
        /// Submits a Hive job to an HDInsight cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.Job.IJobOperations.
        /// </param>
        /// <param name='parameters'>
        /// Required. Hive job parameters.
        /// </param>
        /// <returns>
        /// The Create Job operation response.
        /// </returns>
        public static JobSubmissionResponse SubmitHiveJob(this IJobOperations operations, JobSubmissionParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IJobOperations)s).SubmitHiveJobAsync(parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Submits a Hive job to an HDInsight cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.Job.IJobOperations.
        /// </param>
        /// <param name='parameters'>
        /// Required. Hive job parameters.
        /// </param>
        /// <returns>
        /// The Create Job operation response.
        /// </returns>
        public static Task<JobSubmissionResponse> SubmitHiveJobAsync(this IJobOperations operations, JobSubmissionParameters parameters)
        {
            return operations.SubmitHiveJobAsync(parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Submits a MapReduce job to an HDInsight cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.Job.IJobOperations.
        /// </param>
        /// <param name='parameters'>
        /// Required. MapReduce job parameters.
        /// </param>
        /// <returns>
        /// The Create Job operation response.
        /// </returns>
        public static JobSubmissionResponse SubmitMapReduceJob(this IJobOperations operations, JobSubmissionParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IJobOperations)s).SubmitMapReduceJobAsync(parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Submits a MapReduce job to an HDInsight cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.Job.IJobOperations.
        /// </param>
        /// <param name='parameters'>
        /// Required. MapReduce job parameters.
        /// </param>
        /// <returns>
        /// The Create Job operation response.
        /// </returns>
        public static Task<JobSubmissionResponse> SubmitMapReduceJobAsync(this IJobOperations operations, JobSubmissionParameters parameters)
        {
            return operations.SubmitMapReduceJobAsync(parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Submits a MapReduce streaming job to an HDInsight cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.Job.IJobOperations.
        /// </param>
        /// <param name='parameters'>
        /// Required. MapReduce job parameters.
        /// </param>
        /// <returns>
        /// The Create Job operation response.
        /// </returns>
        public static JobSubmissionResponse SubmitMapReduceStreamingJob(this IJobOperations operations, JobSubmissionParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IJobOperations)s).SubmitMapReduceStreamingJobAsync(parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Submits a MapReduce streaming job to an HDInsight cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.Job.IJobOperations.
        /// </param>
        /// <param name='parameters'>
        /// Required. MapReduce job parameters.
        /// </param>
        /// <returns>
        /// The Create Job operation response.
        /// </returns>
        public static Task<JobSubmissionResponse> SubmitMapReduceStreamingJobAsync(this IJobOperations operations, JobSubmissionParameters parameters)
        {
            return operations.SubmitMapReduceStreamingJobAsync(parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Submits a Pig job to an HDInsight cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.Job.IJobOperations.
        /// </param>
        /// <param name='parameters'>
        /// Required. Pig job parameters.
        /// </param>
        /// <returns>
        /// The Create Job operation response.
        /// </returns>
        public static JobSubmissionResponse SubmitPigJob(this IJobOperations operations, JobSubmissionParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IJobOperations)s).SubmitPigJobAsync(parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Submits a Pig job to an HDInsight cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.Job.IJobOperations.
        /// </param>
        /// <param name='parameters'>
        /// Required. Pig job parameters.
        /// </param>
        /// <returns>
        /// The Create Job operation response.
        /// </returns>
        public static Task<JobSubmissionResponse> SubmitPigJobAsync(this IJobOperations operations, JobSubmissionParameters parameters)
        {
            return operations.SubmitPigJobAsync(parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Submits a Sqoop job to an HDInsight cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.Job.IJobOperations.
        /// </param>
        /// <param name='parameters'>
        /// Required. Sqoop job parameters.
        /// </param>
        /// <returns>
        /// The Create Job operation response.
        /// </returns>
        public static JobSubmissionResponse SubmitSqoopJob(this IJobOperations operations, JobSubmissionParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IJobOperations)s).SubmitSqoopJobAsync(parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Submits a Sqoop job to an HDInsight cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.Job.IJobOperations.
        /// </param>
        /// <param name='parameters'>
        /// Required. Sqoop job parameters.
        /// </param>
        /// <returns>
        /// The Create Job operation response.
        /// </returns>
        public static Task<JobSubmissionResponse> SubmitSqoopJobAsync(this IJobOperations operations, JobSubmissionParameters parameters)
        {
            return operations.SubmitSqoopJobAsync(parameters, CancellationToken.None);
        }
    }
}
