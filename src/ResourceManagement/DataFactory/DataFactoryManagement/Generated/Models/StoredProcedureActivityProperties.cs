// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Hyak.Common;

namespace Microsoft.Azure.Management.DataFactories.Models
{
    /// <summary>
    /// SQL Stored Procedure activity properties.
    /// </summary>
    public partial class StoredProcedureActivityProperties
    {
        private IDictionary<string, string> _storedProcedureActivityParameters;
        
        /// <summary>
        /// Optional. User specified property bag used in Stored Procedure.
        /// There is no restriction on the keys or values that can be used.
        /// User needs to consume and interpret the content accordingly in
        /// their customized Stored Procedure.
        /// </summary>
        public IDictionary<string, string> StoredProcedureActivityParameters
        {
            get { return this._storedProcedureActivityParameters; }
            set { this._storedProcedureActivityParameters = value; }
        }
        
        private string _storedProcedureName;
        
        /// <summary>
        /// Required. Stored Procedure Name.
        /// </summary>
        public string StoredProcedureName
        {
            get { return this._storedProcedureName; }
            set { this._storedProcedureName = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the StoredProcedureActivityProperties
        /// class.
        /// </summary>
        public StoredProcedureActivityProperties()
        {
            this.StoredProcedureActivityParameters = new LazyDictionary<string, string>();
        }
        
        /// <summary>
        /// Initializes a new instance of the StoredProcedureActivityProperties
        /// class with required arguments.
        /// </summary>
        public StoredProcedureActivityProperties(string storedProcedureName)
            : this()
        {
            if (storedProcedureName == null)
            {
                throw new ArgumentNullException("storedProcedureName");
            }
            this.StoredProcedureName = storedProcedureName;
        }
    }
}
