// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Hyak.Common;
using Microsoft.Azure.Management.DataFactories.Models;

namespace Microsoft.Azure.Management.DataFactories.Models
{
    /// <summary>
    /// The properties for the HDInsight linkedService.
    /// </summary>
    public partial class HDInsightOnDemandLinkedService : LinkedServiceProperties
    {
        private IList<string> _additionalLinkedServiceNames;
        
        /// <summary>
        /// Optional. Specify additional Azure storage accounts that need to be
        /// accessible from the cluster.
        /// </summary>
        public IList<string> AdditionalLinkedServiceNames
        {
            get { return this._additionalLinkedServiceNames; }
            set { this._additionalLinkedServiceNames = value; }
        }
        
        private int _clusterSize;
        
        /// <summary>
        /// Required. HDInsight cluster size.
        /// </summary>
        public int ClusterSize
        {
            get { return this._clusterSize; }
            set { this._clusterSize = value; }
        }
        
        private string _clusterType;
        
        /// <summary>
        /// Optional. Gets or sets the flavor for the HDInsight cluster.
        /// </summary>
        public string ClusterType
        {
            get { return this._clusterType; }
            set { this._clusterType = value; }
        }
        
        private IDictionary<string, string> _coreConfiguration;
        
        /// <summary>
        /// Optional. Allows user to override default values for core
        /// configuration.
        /// </summary>
        public IDictionary<string, string> CoreConfiguration
        {
            get { return this._coreConfiguration; }
            set { this._coreConfiguration = value; }
        }
        
        private string _dataNodeSize;
        
        /// <summary>
        /// Optional. Gets or sets the size of the Data Node.
        /// </summary>
        public string DataNodeSize
        {
            get { return this._dataNodeSize; }
            set { this._dataNodeSize = value; }
        }
        
        private IDictionary<string, string> _hBaseConfiguration;
        
        /// <summary>
        /// Optional. Allows user to override default values for HBase
        /// configuration.
        /// </summary>
        public IDictionary<string, string> HBaseConfiguration
        {
            get { return this._hBaseConfiguration; }
            set { this._hBaseConfiguration = value; }
        }
        
        private HCatalogProperties _hcatalog;
        
        /// <summary>
        /// Optional. Hcatalog integration properties.
        /// </summary>
        public HCatalogProperties Hcatalog
        {
            get { return this._hcatalog; }
            set { this._hcatalog = value; }
        }
        
        private IDictionary<string, string> _hdfsConfiguration;
        
        /// <summary>
        /// Optional. Allows user to override default values for Hdfs
        /// configuration.
        /// </summary>
        public IDictionary<string, string> HdfsConfiguration
        {
            get { return this._hdfsConfiguration; }
            set { this._hdfsConfiguration = value; }
        }
        
        private string _headNodeSize;
        
        /// <summary>
        /// Optional. Gets or sets the size of the Head Node.
        /// </summary>
        public string HeadNodeSize
        {
            get { return this._headNodeSize; }
            set { this._headNodeSize = value; }
        }
        
        private IDictionary<string, string> _hiveConfiguration;
        
        /// <summary>
        /// Optional. Allows user to override default values for HIVE
        /// configuration.
        /// </summary>
        public IDictionary<string, string> HiveConfiguration
        {
            get { return this._hiveConfiguration; }
            set { this._hiveConfiguration = value; }
        }
        
        private string _hiveCustomLibrariesContainer;
        
        /// <summary>
        /// Optional. The name of the blob container that contains custom jar
        /// files for HIVE consumption.
        /// </summary>
        public string HiveCustomLibrariesContainer
        {
            get { return this._hiveCustomLibrariesContainer; }
            set { this._hiveCustomLibrariesContainer = value; }
        }
        
        private string _linkedServiceName;
        
        /// <summary>
        /// Required. Storage service name.
        /// </summary>
        public string LinkedServiceName
        {
            get { return this._linkedServiceName; }
            set { this._linkedServiceName = value; }
        }
        
        private IDictionary<string, string> _mapReduceConfiguration;
        
        /// <summary>
        /// Optional. Allows user to override default values for mapreduce
        /// configuration.
        /// </summary>
        public IDictionary<string, string> MapReduceConfiguration
        {
            get { return this._mapReduceConfiguration; }
            set { this._mapReduceConfiguration = value; }
        }
        
        private IDictionary<string, string> _oozieConfiguration;
        
        /// <summary>
        /// Optional. Allows user to override default values for oozie
        /// configuration.
        /// </summary>
        public IDictionary<string, string> OozieConfiguration
        {
            get { return this._oozieConfiguration; }
            set { this._oozieConfiguration = value; }
        }
        
        private string _oSType;
        
        /// <summary>
        /// Optional. Gets or sets the type of operating system installed on
        /// cluster nodes.
        /// </summary>
        public string OSType
        {
            get { return this._oSType; }
            set { this._oSType = value; }
        }
        
        private IDictionary<string, string> _sparkConfiguration;
        
        /// <summary>
        /// Optional. The Spark service configuration of this HDInsight cluster.
        /// </summary>
        public IDictionary<string, string> SparkConfiguration
        {
            get { return this._sparkConfiguration; }
            set { this._sparkConfiguration = value; }
        }
        
        private string _sshPassword;
        
        /// <summary>
        /// Optional. Gets or sets SSH password.
        /// </summary>
        public string SshPassword
        {
            get { return this._sshPassword; }
            set { this._sshPassword = value; }
        }
        
        private string _sshPublicKey;
        
        /// <summary>
        /// Optional. Gets or sets the public key to be used for SSH.
        /// </summary>
        public string SshPublicKey
        {
            get { return this._sshPublicKey; }
            set { this._sshPublicKey = value; }
        }
        
        private string _sshUserName;
        
        /// <summary>
        /// Optional. Gets or sets SSH user name.
        /// </summary>
        public string SshUserName
        {
            get { return this._sshUserName; }
            set { this._sshUserName = value; }
        }
        
        private IDictionary<string, string> _stormConfiguration;
        
        /// <summary>
        /// Optional. Allows user to override default values for Storm
        /// configuration.
        /// </summary>
        public IDictionary<string, string> StormConfiguration
        {
            get { return this._stormConfiguration; }
            set { this._stormConfiguration = value; }
        }
        
        private TimeSpan _timeToLive;
        
        /// <summary>
        /// Required. Time to live.
        /// </summary>
        public TimeSpan TimeToLive
        {
            get { return this._timeToLive; }
            set { this._timeToLive = value; }
        }
        
        private string _version;
        
        /// <summary>
        /// Optional. HDInsight version.
        /// </summary>
        public string Version
        {
            get { return this._version; }
            set { this._version = value; }
        }
        
        private IDictionary<string, string> _yarnConfiguration;
        
        /// <summary>
        /// Optional. Allows user to override default values for YARN
        /// configuration.
        /// </summary>
        public IDictionary<string, string> YarnConfiguration
        {
            get { return this._yarnConfiguration; }
            set { this._yarnConfiguration = value; }
        }
        
        private string _zookeeperNodeSize;
        
        /// <summary>
        /// Optional. Gets or sets the size of the Zookeeper Node.
        /// </summary>
        public string ZookeeperNodeSize
        {
            get { return this._zookeeperNodeSize; }
            set { this._zookeeperNodeSize = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the HDInsightOnDemandLinkedService
        /// class.
        /// </summary>
        public HDInsightOnDemandLinkedService()
        {
            this.AdditionalLinkedServiceNames = new LazyList<string>();
            this.CoreConfiguration = new LazyDictionary<string, string>();
            this.HBaseConfiguration = new LazyDictionary<string, string>();
            this.HdfsConfiguration = new LazyDictionary<string, string>();
            this.HiveConfiguration = new LazyDictionary<string, string>();
            this.MapReduceConfiguration = new LazyDictionary<string, string>();
            this.OozieConfiguration = new LazyDictionary<string, string>();
            this.SparkConfiguration = new LazyDictionary<string, string>();
            this.StormConfiguration = new LazyDictionary<string, string>();
            this.YarnConfiguration = new LazyDictionary<string, string>();
        }
        
        /// <summary>
        /// Initializes a new instance of the HDInsightOnDemandLinkedService
        /// class with required arguments.
        /// </summary>
        public HDInsightOnDemandLinkedService(int clusterSize, TimeSpan timeToLive, string linkedServiceName)
            : this()
        {
            if (linkedServiceName == null)
            {
                throw new ArgumentNullException("linkedServiceName");
            }
            this.ClusterSize = clusterSize;
            this.TimeToLive = timeToLive;
            this.LinkedServiceName = linkedServiceName;
        }
    }
}
