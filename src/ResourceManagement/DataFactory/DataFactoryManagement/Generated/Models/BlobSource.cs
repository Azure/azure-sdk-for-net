// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using Microsoft.Azure.Management.DataFactories.Models;

namespace Microsoft.Azure.Management.DataFactories.Models
{
    /// <summary>
    /// A copy activity blob source.
    /// </summary>
    public partial class BlobSource : CopySource
    {
        private string _blobColumnSeparators;
        
        /// <summary>
        /// Optional. Blob column separators.
        /// </summary>
        public string BlobColumnSeparators
        {
            get { return this._blobColumnSeparators; }
            set { this._blobColumnSeparators = value; }
        }
        
        private string _nullValues;
        
        /// <summary>
        /// Optional. Null values.
        /// </summary>
        public string NullValues
        {
            get { return this._nullValues; }
            set { this._nullValues = value; }
        }
        
        private int? _skipHeaderLineCount;
        
        /// <summary>
        /// Optional. Number of header lines to skip from each blob
        /// </summary>
        public int? SkipHeaderLineCount
        {
            get { return this._skipHeaderLineCount; }
            set { this._skipHeaderLineCount = value; }
        }
        
        private bool? _treatEmptyAsNull;
        
        /// <summary>
        /// Optional. Treat empty as null.
        /// </summary>
        public bool? TreatEmptyAsNull
        {
            get { return this._treatEmptyAsNull; }
            set { this._treatEmptyAsNull = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the BlobSource class.
        /// </summary>
        public BlobSource()
        {
        }
    }
}
