// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// </auto-generated>

namespace Microsoft.Azure.Management.CustomerInsights.Fluent.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.CustomerInsights;
    using Microsoft.Azure.Management.CustomerInsights.Fluent;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for CalculationWindowTypes.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum CalculationWindowTypes
    {
        [EnumMember(Value = "Lifetime")]
        Lifetime,
        [EnumMember(Value = "Hour")]
        Hour,
        [EnumMember(Value = "Day")]
        Day,
        [EnumMember(Value = "Week")]
        Week,
        [EnumMember(Value = "Month")]
        Month
    }
    internal static class CalculationWindowTypesEnumExtension
    {
        internal static string ToSerializedValue(this CalculationWindowTypes? value)
        {
            return value == null ? null : ((CalculationWindowTypes)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this CalculationWindowTypes value)
        {
            switch( value )
            {
                case CalculationWindowTypes.Lifetime:
                    return "Lifetime";
                case CalculationWindowTypes.Hour:
                    return "Hour";
                case CalculationWindowTypes.Day:
                    return "Day";
                case CalculationWindowTypes.Week:
                    return "Week";
                case CalculationWindowTypes.Month:
                    return "Month";
            }
            return null;
        }

        internal static CalculationWindowTypes? ParseCalculationWindowTypes(this string value)
        {
            switch( value )
            {
                case "Lifetime":
                    return CalculationWindowTypes.Lifetime;
                case "Hour":
                    return CalculationWindowTypes.Hour;
                case "Day":
                    return CalculationWindowTypes.Day;
                case "Week":
                    return CalculationWindowTypes.Week;
                case "Month":
                    return CalculationWindowTypes.Month;
            }
            return null;
        }
    }
}
