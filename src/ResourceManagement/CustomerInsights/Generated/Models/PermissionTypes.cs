// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// </auto-generated>

namespace Microsoft.Azure.Management.CustomerInsights.Fluent.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.CustomerInsights;
    using Microsoft.Azure.Management.CustomerInsights.Fluent;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for PermissionTypes.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum PermissionTypes
    {
        [EnumMember(Value = "Read")]
        Read,
        [EnumMember(Value = "Write")]
        Write,
        [EnumMember(Value = "Manage")]
        Manage
    }
    internal static class PermissionTypesEnumExtension
    {
        internal static string ToSerializedValue(this PermissionTypes? value)
        {
            return value == null ? null : ((PermissionTypes)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this PermissionTypes value)
        {
            switch( value )
            {
                case PermissionTypes.Read:
                    return "Read";
                case PermissionTypes.Write:
                    return "Write";
                case PermissionTypes.Manage:
                    return "Manage";
            }
            return null;
        }

        internal static PermissionTypes? ParsePermissionTypes(this string value)
        {
            switch( value )
            {
                case "Read":
                    return PermissionTypes.Read;
                case "Write":
                    return PermissionTypes.Write;
                case "Manage":
                    return PermissionTypes.Manage;
            }
            return null;
        }
    }
}
