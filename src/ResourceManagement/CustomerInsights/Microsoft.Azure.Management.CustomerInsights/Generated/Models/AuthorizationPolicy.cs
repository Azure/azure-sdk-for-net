// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.CustomerInsights.Models
{
    using System.Linq;

    /// <summary>
    /// The authorization policy.
    /// </summary>
    public partial class AuthorizationPolicy
    {
        /// <summary>
        /// Initializes a new instance of the AuthorizationPolicy class.
        /// </summary>
        public AuthorizationPolicy() { }

        /// <summary>
        /// Initializes a new instance of the AuthorizationPolicy class.
        /// </summary>
        /// <param name="permissions">The permissions associated with the
        /// policy.</param>
        /// <param name="policyName">Name of the policy.</param>
        /// <param name="primaryKey">Primary key assiciated with the
        /// policy.</param>
        /// <param name="secondaryKey">Secondary key assiciated with the
        /// policy.</param>
        public AuthorizationPolicy(System.Collections.Generic.IList<PermissionTypes?> permissions, string policyName = default(string), string primaryKey = default(string), string secondaryKey = default(string))
        {
            PolicyName = policyName;
            Permissions = permissions;
            PrimaryKey = primaryKey;
            SecondaryKey = secondaryKey;
        }

        /// <summary>
        /// Gets name of the policy.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "policyName")]
        public string PolicyName { get; private set; }

        /// <summary>
        /// Gets or sets the permissions associated with the policy.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "permissions")]
        public System.Collections.Generic.IList<PermissionTypes?> Permissions { get; set; }

        /// <summary>
        /// Gets or sets primary key assiciated with the policy.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "primaryKey")]
        public string PrimaryKey { get; set; }

        /// <summary>
        /// Gets or sets secondary key assiciated with the policy.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "secondaryKey")]
        public string SecondaryKey { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Permissions == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Permissions");
            }
            if (this.Permissions != null)
            {
                if (this.Permissions.Count != this.Permissions.Distinct().Count())
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.UniqueItems, "Permissions");
                }
            }
        }
    }
}
