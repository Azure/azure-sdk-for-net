{
  "Entries": [
    {
      "RequestUri": "/subscriptions/e4f2946d-558a-4212-9e97-217ee3e55f94/resourceGroups/Api-Default-Central-US/providers/Microsoft.ApiManagement/service/hydraapimservice2033/policySnippets?api-version=2014-02-14&scope=All",
      "EncodedRequestUri": "L3N1YnNjcmlwdGlvbnMvZTRmMjk0NmQtNTU4YS00MjEyLTllOTctMjE3ZWUzZTU1Zjk0L3Jlc291cmNlR3JvdXBzL0FwaS1EZWZhdWx0LUNlbnRyYWwtVVMvcHJvdmlkZXJzL01pY3Jvc29mdC5BcGlNYW5hZ2VtZW50L3NlcnZpY2UvaHlkcmFhcGltc2VydmljZTIwMzMvcG9saWN5U25pcHBldHM/YXBpLXZlcnNpb249MjAxNC0wMi0xNCZzY29wZT1BbGw=",
      "RequestMethod": "GET",
      "RequestBody": "",
      "RequestHeaders": {
        "User-Agent": [
          "Microsoft.Azure.Management.ApiManagement.ApiManagementClient/1.0.0.0"
        ]
      },
      "ResponseBody": "[\r\n  {\r\n    \"name\": \"Allow cross domain calls\",\r\n    \"content\": \"<cross-domain>\\r\\n    <cross-domain-policy>\\r\\n        <allow-http-request-headers-from domain='*' headers='*' />\\r\\n    </cross-domain-policy>\\r\\n</cross-domain>\",\r\n    \"toolTip\": \"Make the API accessible from Adobe Flash and Microsoft Silverlight browser-based clients. Use in the inbound section at Global scope.\",\r\n    \"scope\": \"tenant\"\r\n  },\r\n  {\r\n    \"name\": \"Authenticate with Basic\",\r\n    \"content\": \"<authentication-basic username=\\\"username\\\" password=\\\"password\\\" />\",\r\n    \"toolTip\": \"Authenticate with the backend service using Basic authentication. Use in the inbound section at API scope.\",\r\n    \"scope\": \"all\"\r\n  },\r\n  {\r\n    \"name\": \"Authenticate with client certificate\",\r\n    \"content\": \"<authentication-certificate thumbprint=\\\"thumbprint\\\" />\",\r\n    \"toolTip\": \"Authenticate with the backend service using a client certificate. Use in the inbound section at API scope.\",\r\n    \"scope\": \"all\"\r\n  },\r\n  {\r\n    \"name\": \"Check HTTP header\",\r\n    \"content\": \"<check-header name=\\\"header name\\\"\\r\\n              failed-check-httpcode=\\\"http status code to return on failure\\\"\\r\\n              failed-check-error-message=\\\"error message to return\\\"\\r\\n              ignore-case=\\\"true | false\\\">\\r\\n    <value>value</value> <!-- if there are multiple possible allowed values, then add additional value elements -->\\r\\n</check-header>\",\r\n    \"toolTip\": \"Check header and return specified HTTP status code if it doesn't exist or match expected value. Works for both response and request headers – policy can be applied in inbound or outbound sections at any scope.\",\r\n    \"scope\": \"all\"\r\n  },\r\n  {\r\n    \"name\": \"Control flow\",\r\n    \"content\": \"<choose>\\r\\n    <when condition=\\\"@(expression to evaluate)\\\">\\r\\n    </when>\\r\\n    <when condition=\\\"@(expression to evaluate)\\\">\\r\\n    </when>\\r\\n    <otherwise>\\r\\n    </otherwise>\\r\\n</choose>\",\r\n    \"toolTip\": \"Conditionally apply policy statements based on the results of the evaluation of Boolean expressions. Use at any scope in the inbound and outbound sections.\",\r\n    \"scope\": \"all\"\r\n  },\r\n  {\r\n    \"name\": \"Convert JSON to XML\",\r\n    \"content\": \"<json-to-xml apply=\\\"always | content-type-json\\\" consider-accept-header=\\\"true | false\\\"/>\",\r\n    \"toolTip\": \"Convert request or response body from JSON to XML. Use in the inbound or outbound sections at API or Operation scopes.\",\r\n    \"scope\": \"all\"\r\n  },\r\n  {\r\n    \"name\": \"Convert XML to JSON\",\r\n    \"content\": \"<xml-to-json kind=\\\"javascript-friendly | direct\\\" apply=\\\"always | content-type-xml\\\" consider-accept-header=\\\"true | false\\\"/>\",\r\n    \"toolTip\": \"Convert request or response body from XML to either \\\"JSON friendly\\\" or \\\"XML faithful\\\" form of JSON. Use in the inbound or outbound sections at API or Operation scopes.\",\r\n    \"scope\": \"all\"\r\n  },\r\n  {\r\n    \"name\": \"CORS\",\r\n    \"content\": \"<cors>\\r\\n    <allowed-origins>\\r\\n        <origin>*</origin> <!-- allow any -->\\r\\n        <!-- OR a list of one or more specific URIs (case-sensitive) -->\\r\\n        <origin>URI</origin> <!-- URI must include scheme, host, and port. If port is omitted, 80 is assumed for http and 443 is assumed for https. -->\\r\\n    </allowed-origins>\\r\\n</cors>\",\r\n    \"toolTip\": \"CORS stands for cross-origin resource sharing. Add CORS support to an operation or an API to allow cross-domain calls from browser-based clients. Use in the inbound section only.\",\r\n    \"scope\": 12\r\n  },\r\n  {\r\n    \"name\": \"Find and replace string in body\",\r\n    \"content\": \"<find-and-replace from=\\\"what to replace\\\" to=\\\"replacement\\\" />\",\r\n    \"toolTip\": \"Find a request or response substring and replace it with a different substring. Use in the inbound and outbound sections at any scope.\",\r\n    \"scope\": \"all\"\r\n  },\r\n  {\r\n    \"name\": \"Get from cache\",\r\n    \"content\": \"<cache-lookup vary-by-developer=\\\"true | false\\\" vary-by-developer-groups=\\\"true | false\\\" downstream-caching-type=\\\"none | private | public\\\" must-revalidate=\\\"true | false\\\" allow-private-response-caching=\\\"@(expression to evaluate)\\\">\\r\\n    <vary-by-header>Accept</vary-by-header> <!-- should be present in most cases -->\\r\\n    <vary-by-header>Accept-Charset</vary-by-header> <!-- should be present in most cases -->\\r\\n    <vary-by-header>Authorization</vary-by-header> <!-- should be present when allow-authorized-response-caching is \\\"true\\\"-->\\r\\n    <vary-by-header>header name</vary-by-header> <!-- optional, can repeated several times -->\\r\\n    <vary-by-query-parameter>parameter name</vary-by-query-parameter> <!-- optional, can repeated several times -->\\r\\n</cache-lookup>\",\r\n    \"toolTip\": \"Perform cache lookup and return a valid cached response when available. Appropriately respond to cache validation requests from callers. Use anywhere in the inbound section at Product, API, or Operation scopes.\",\r\n    \"scope\": \"all\"\r\n  },\r\n  {\r\n    \"name\": \"JSONP\",\r\n    \"content\": \"<jsonp callback-parameter-name=\\\"callback function name\\\" />\",\r\n    \"toolTip\": \"Add support for JSONP to an operation or an API to allow cross-domain calls from JavaScript browser-based clients. Use in the outbound section only.\",\r\n    \"scope\": \"all\"\r\n  },\r\n  {\r\n    \"name\": \"Limit call rate\",\r\n    \"content\": \"<rate-limit calls=\\\"number\\\" renewal-period=\\\"seconds\\\">\\r\\n    <api name=\\\"name\\\" calls=\\\"number\\\">\\r\\n        <operation name=\\\"name\\\" calls=\\\"number\\\" />\\r\\n    </api>\\r\\n</rate-limit>\",\r\n    \"toolTip\": \"Arrest usage spikes by limiting calls and/or bandwidth consumption rate. Use in the inbound section at Product scope.\",\r\n    \"scope\": \"product\"\r\n  },\r\n  {\r\n    \"name\": \"Log to EventHub\",\r\n    \"content\": \"<log-to-eventhub logger-id ='logger-id'>\\r\\n                 @( string.Join(\\\",\\\", DateTime.UtcNow, context.Deployment.ServiceName, context.RequestId, context.Request.IpAddress, context.Operation.Name) ) \\r\\n             </log-to-eventhub>\",\r\n    \"toolTip\": \"Send custom messages to Event Hub. Use at any scope in the inbound or outbound sections.\",\r\n    \"scope\": \"all\"\r\n  },\r\n  {\r\n    \"name\": \"Mask URLs in content\",\r\n    \"content\": \"<redirect-content-urls />\",\r\n    \"toolTip\": \"Use in the outbound section to re-write response body links and Location header values making them point to the proxy. Use in the inbound section for an opposite effect. Apply at API or Operation scopes.\",\r\n    \"scope\": \"all\"\r\n  },\r\n  {\r\n    \"name\": \"Restrict caller IPs\",\r\n    \"content\": \"<ip-filter action=\\\"allow | forbid\\\">\\r\\n    <address>address</address>\\r\\n    <address-range from=\\\"address\\\" to=\\\"address\\\" />\\r\\n</ip-filter>\",\r\n    \"toolTip\": \"Allow calls only from specific IP addresses and/or address ranges. Forbid calls from specific IP addresses and/or address ranges. Use in the inbound section at any scope.\",\r\n    \"scope\": \"all\"\r\n  },\r\n  {\r\n    \"name\": \"Rewrite URL\",\r\n    \"content\": \"<rewrite-uri template=\\\"uri template\\\" />\",\r\n    \"toolTip\": \"Convert request URL from its public form to the form expected by the web service. Use anywhere in the inbound section at Operation scope only.\",\r\n    \"scope\": \"operation\"\r\n  },\r\n  {\r\n    \"name\": \"Set backend service\",\r\n    \"content\": \"<set-backend-service base-url=\\\"https://backend.com/service\\\" />\",\r\n    \"toolTip\": \"Change backend service where the incoming calls will be directed. Use in the inbound section only at any scope.\",\r\n    \"scope\": 12\r\n  },\r\n  {\r\n    \"name\": \"Set body\",\r\n    \"content\": \"<set-body>new body value as text</set-body>\",\r\n    \"toolTip\": \"Set message body to a specific string value. The policy has no effect on the Content-Type header value. Use at any scope in the inbound or outbound sections.\",\r\n    \"scope\": \"all\"\r\n  },\r\n  {\r\n    \"name\": \"Set context variable\",\r\n    \"content\": \"<set-variable name=\\\"variable name\\\" value=\\\"@(expression to evaluate)\\\" />\",\r\n    \"toolTip\": \"Persist a value in a named context variable for later access from expressions. Use at any scope in the inbound and outbound sections.\",\r\n    \"scope\": \"all\"\r\n  },\r\n  {\r\n    \"name\": \"Set HTTP header\",\r\n    \"content\": \"<set-header name=\\\"header name\\\" exists-action=\\\"override | skip | append | delete\\\">\\r\\n    <value>value</value> <!-- for multiple headers with the same name add additional value elements -->\\r\\n</set-header>\",\r\n    \"toolTip\": \"Add a new header, change the value of an existing header or remove a header. Works for both response and request headers – policy can be applied in inbound or outbound sections at any scope.\",\r\n    \"scope\": \"all\"\r\n  },\r\n  {\r\n    \"name\": \"Set query string parameter\",\r\n    \"content\": \"<set-query-parameter name=\\\"param name\\\" exists-action=\\\"override | skip | append | delete\\\">\\r\\n    <value>value</value> <!-- for multiple parameters with the same name add additional value elements -->\\r\\n</set-query-parameter>\",\r\n    \"toolTip\": \"Add a new query string parameter, change the value of an existing parameter or remove a parameter. Can be applied in the inbound section at any scope.\",\r\n    \"scope\": \"all\"\r\n  },\r\n  {\r\n    \"name\": \"Set usage quota\",\r\n    \"content\": \"<quota calls=\\\"number\\\" bandwidth=\\\"kilobytes\\\" renewal-period=\\\"seconds\\\">\\r\\n    <api name=\\\"name\\\" calls=\\\"number\\\" bandwidth=\\\"kilobytes\\\">\\r\\n        <operation name=\\\"name\\\" calls=\\\"number\\\" bandwidth=\\\"kilobytes\\\" />\\r\\n    </api>\\r\\n</quota>\",\r\n    \"toolTip\": \"Enforce a renewable or lifetime call volume and/or bandwidth quota. Use in the inbound section at Product scope.\",\r\n    \"scope\": \"product\"\r\n  },\r\n  {\r\n    \"name\": \"Store to cache\",\r\n    \"content\": \"<cache-store duration=\\\"seconds\\\" />\",\r\n    \"toolTip\": \"Cache responses according to the specified cache configuratuion. Use anywhere in the outbound section at Product, API, or Operation scopes.\",\r\n    \"scope\": \"all\"\r\n  },\r\n  {\r\n    \"name\": \"Validate JWT\",\r\n    \"content\": \"<validate-jwt header-name=\\\"Insert HTTP Header Name here\\\" failed-validation-httpcode=\\\"401\\\" failed-validation-error-message=\\\"Unauthorized\\\">\\r\\n    <issuer-signing-keys>\\r\\n        <key>Base64 Encoded Key 1</key>\\r\\n         <!-- if there are multiple possible allowed values, then add additional value elements -->\\r\\n    </issuer-signing-keys>\\r\\n    <audiences>\\r\\n        <audience>Audience 1</audience>\\r\\n         <!-- if there are multiple possible allowed values, then add additional value elements -->\\r\\n    </audiences>\\r\\n    <issuers>\\r\\n        <issuer>Issuer 1</issuer>\\r\\n         <!-- if there are multiple possible allowed values, then add additional value elements -->\\r\\n    </issuers>\\r\\n    <required-claims>\\r\\n        <claim name=\\\"claim1\\\" match=\\\"all\\\">\\r\\n            <value>value1</value>\\r\\n            <value>value2</value>\\r\\n        </claim>\\r\\n         <!-- if there are multiple possible allowed values, then add additional value elements -->\\r\\n    </required-claims>\\r\\n</validate-jwt>\",\r\n    \"toolTip\": \"Check and validate a JWT in a header or query parameter. Use in the inbound section at any scope.\",\r\n    \"scope\": \"all\"\r\n  }\r\n]",
      "ResponseHeaders": {
        "Content-Length": [
          "10054"
        ],
        "Content-Type": [
          "application/json; charset=utf-8"
        ],
        "Expires": [
          "-1"
        ],
        "Pragma": [
          "no-cache"
        ],
        "x-ms-request-id": [
          "2b8cde88-9be7-4cd2-9168-f3bbdc6c410e"
        ],
        "x-ms-ratelimit-remaining-subscription-reads": [
          "14954"
        ],
        "x-ms-correlation-request-id": [
          "4ee29acc-5c2f-4105-a773-92e46393cc4b"
        ],
        "x-ms-routing-request-id": [
          "CENTRALUS:20150622T195411Z:4ee29acc-5c2f-4105-a773-92e46393cc4b"
        ],
        "Strict-Transport-Security": [
          "max-age=31536000; includeSubDomains"
        ],
        "Cache-Control": [
          "no-cache"
        ],
        "Date": [
          "Mon, 22 Jun 2015 19:54:10 GMT"
        ],
        "Server": [
          "Microsoft-HTTPAPI/2.0"
        ]
      },
      "StatusCode": 200
    },
    {
      "RequestUri": "/subscriptions/e4f2946d-558a-4212-9e97-217ee3e55f94/resourceGroups/Api-Default-Central-US/providers/Microsoft.ApiManagement/service/hydraapimservice2033/policySnippets?api-version=2014-02-14&scope=Api",
      "EncodedRequestUri": "L3N1YnNjcmlwdGlvbnMvZTRmMjk0NmQtNTU4YS00MjEyLTllOTctMjE3ZWUzZTU1Zjk0L3Jlc291cmNlR3JvdXBzL0FwaS1EZWZhdWx0LUNlbnRyYWwtVVMvcHJvdmlkZXJzL01pY3Jvc29mdC5BcGlNYW5hZ2VtZW50L3NlcnZpY2UvaHlkcmFhcGltc2VydmljZTIwMzMvcG9saWN5U25pcHBldHM/YXBpLXZlcnNpb249MjAxNC0wMi0xNCZzY29wZT1BcGk=",
      "RequestMethod": "GET",
      "RequestBody": "",
      "RequestHeaders": {
        "User-Agent": [
          "Microsoft.Azure.Management.ApiManagement.ApiManagementClient/1.0.0.0"
        ]
      },
      "ResponseBody": "[\r\n  {\r\n    \"name\": \"Authenticate with Basic\",\r\n    \"content\": \"<authentication-basic username=\\\"username\\\" password=\\\"password\\\" />\",\r\n    \"toolTip\": \"Authenticate with the backend service using Basic authentication. Use in the inbound section at API scope.\",\r\n    \"scope\": \"all\"\r\n  },\r\n  {\r\n    \"name\": \"Authenticate with client certificate\",\r\n    \"content\": \"<authentication-certificate thumbprint=\\\"thumbprint\\\" />\",\r\n    \"toolTip\": \"Authenticate with the backend service using a client certificate. Use in the inbound section at API scope.\",\r\n    \"scope\": \"all\"\r\n  },\r\n  {\r\n    \"name\": \"Check HTTP header\",\r\n    \"content\": \"<check-header name=\\\"header name\\\"\\r\\n              failed-check-httpcode=\\\"http status code to return on failure\\\"\\r\\n              failed-check-error-message=\\\"error message to return\\\"\\r\\n              ignore-case=\\\"true | false\\\">\\r\\n    <value>value</value> <!-- if there are multiple possible allowed values, then add additional value elements -->\\r\\n</check-header>\",\r\n    \"toolTip\": \"Check header and return specified HTTP status code if it doesn't exist or match expected value. Works for both response and request headers – policy can be applied in inbound or outbound sections at any scope.\",\r\n    \"scope\": \"all\"\r\n  },\r\n  {\r\n    \"name\": \"Control flow\",\r\n    \"content\": \"<choose>\\r\\n    <when condition=\\\"@(expression to evaluate)\\\">\\r\\n    </when>\\r\\n    <when condition=\\\"@(expression to evaluate)\\\">\\r\\n    </when>\\r\\n    <otherwise>\\r\\n    </otherwise>\\r\\n</choose>\",\r\n    \"toolTip\": \"Conditionally apply policy statements based on the results of the evaluation of Boolean expressions. Use at any scope in the inbound and outbound sections.\",\r\n    \"scope\": \"all\"\r\n  },\r\n  {\r\n    \"name\": \"Convert JSON to XML\",\r\n    \"content\": \"<json-to-xml apply=\\\"always | content-type-json\\\" consider-accept-header=\\\"true | false\\\"/>\",\r\n    \"toolTip\": \"Convert request or response body from JSON to XML. Use in the inbound or outbound sections at API or Operation scopes.\",\r\n    \"scope\": \"all\"\r\n  },\r\n  {\r\n    \"name\": \"Convert XML to JSON\",\r\n    \"content\": \"<xml-to-json kind=\\\"javascript-friendly | direct\\\" apply=\\\"always | content-type-xml\\\" consider-accept-header=\\\"true | false\\\"/>\",\r\n    \"toolTip\": \"Convert request or response body from XML to either \\\"JSON friendly\\\" or \\\"XML faithful\\\" form of JSON. Use in the inbound or outbound sections at API or Operation scopes.\",\r\n    \"scope\": \"all\"\r\n  },\r\n  {\r\n    \"name\": \"CORS\",\r\n    \"content\": \"<cors>\\r\\n    <allowed-origins>\\r\\n        <origin>*</origin> <!-- allow any -->\\r\\n        <!-- OR a list of one or more specific URIs (case-sensitive) -->\\r\\n        <origin>URI</origin> <!-- URI must include scheme, host, and port. If port is omitted, 80 is assumed for http and 443 is assumed for https. -->\\r\\n    </allowed-origins>\\r\\n</cors>\",\r\n    \"toolTip\": \"CORS stands for cross-origin resource sharing. Add CORS support to an operation or an API to allow cross-domain calls from browser-based clients. Use in the inbound section only.\",\r\n    \"scope\": 12\r\n  },\r\n  {\r\n    \"name\": \"Find and replace string in body\",\r\n    \"content\": \"<find-and-replace from=\\\"what to replace\\\" to=\\\"replacement\\\" />\",\r\n    \"toolTip\": \"Find a request or response substring and replace it with a different substring. Use in the inbound and outbound sections at any scope.\",\r\n    \"scope\": \"all\"\r\n  },\r\n  {\r\n    \"name\": \"Get from cache\",\r\n    \"content\": \"<cache-lookup vary-by-developer=\\\"true | false\\\" vary-by-developer-groups=\\\"true | false\\\" downstream-caching-type=\\\"none | private | public\\\" must-revalidate=\\\"true | false\\\" allow-private-response-caching=\\\"@(expression to evaluate)\\\">\\r\\n    <vary-by-header>Accept</vary-by-header> <!-- should be present in most cases -->\\r\\n    <vary-by-header>Accept-Charset</vary-by-header> <!-- should be present in most cases -->\\r\\n    <vary-by-header>Authorization</vary-by-header> <!-- should be present when allow-authorized-response-caching is \\\"true\\\"-->\\r\\n    <vary-by-header>header name</vary-by-header> <!-- optional, can repeated several times -->\\r\\n    <vary-by-query-parameter>parameter name</vary-by-query-parameter> <!-- optional, can repeated several times -->\\r\\n</cache-lookup>\",\r\n    \"toolTip\": \"Perform cache lookup and return a valid cached response when available. Appropriately respond to cache validation requests from callers. Use anywhere in the inbound section at Product, API, or Operation scopes.\",\r\n    \"scope\": \"all\"\r\n  },\r\n  {\r\n    \"name\": \"JSONP\",\r\n    \"content\": \"<jsonp callback-parameter-name=\\\"callback function name\\\" />\",\r\n    \"toolTip\": \"Add support for JSONP to an operation or an API to allow cross-domain calls from JavaScript browser-based clients. Use in the outbound section only.\",\r\n    \"scope\": \"all\"\r\n  },\r\n  {\r\n    \"name\": \"Log to EventHub\",\r\n    \"content\": \"<log-to-eventhub logger-id ='logger-id'>\\r\\n                 @( string.Join(\\\",\\\", DateTime.UtcNow, context.Deployment.ServiceName, context.RequestId, context.Request.IpAddress, context.Operation.Name) ) \\r\\n             </log-to-eventhub>\",\r\n    \"toolTip\": \"Send custom messages to Event Hub. Use at any scope in the inbound or outbound sections.\",\r\n    \"scope\": \"all\"\r\n  },\r\n  {\r\n    \"name\": \"Mask URLs in content\",\r\n    \"content\": \"<redirect-content-urls />\",\r\n    \"toolTip\": \"Use in the outbound section to re-write response body links and Location header values making them point to the proxy. Use in the inbound section for an opposite effect. Apply at API or Operation scopes.\",\r\n    \"scope\": \"all\"\r\n  },\r\n  {\r\n    \"name\": \"Restrict caller IPs\",\r\n    \"content\": \"<ip-filter action=\\\"allow | forbid\\\">\\r\\n    <address>address</address>\\r\\n    <address-range from=\\\"address\\\" to=\\\"address\\\" />\\r\\n</ip-filter>\",\r\n    \"toolTip\": \"Allow calls only from specific IP addresses and/or address ranges. Forbid calls from specific IP addresses and/or address ranges. Use in the inbound section at any scope.\",\r\n    \"scope\": \"all\"\r\n  },\r\n  {\r\n    \"name\": \"Set backend service\",\r\n    \"content\": \"<set-backend-service base-url=\\\"https://backend.com/service\\\" />\",\r\n    \"toolTip\": \"Change backend service where the incoming calls will be directed. Use in the inbound section only at any scope.\",\r\n    \"scope\": 12\r\n  },\r\n  {\r\n    \"name\": \"Set body\",\r\n    \"content\": \"<set-body>new body value as text</set-body>\",\r\n    \"toolTip\": \"Set message body to a specific string value. The policy has no effect on the Content-Type header value. Use at any scope in the inbound or outbound sections.\",\r\n    \"scope\": \"all\"\r\n  },\r\n  {\r\n    \"name\": \"Set context variable\",\r\n    \"content\": \"<set-variable name=\\\"variable name\\\" value=\\\"@(expression to evaluate)\\\" />\",\r\n    \"toolTip\": \"Persist a value in a named context variable for later access from expressions. Use at any scope in the inbound and outbound sections.\",\r\n    \"scope\": \"all\"\r\n  },\r\n  {\r\n    \"name\": \"Set HTTP header\",\r\n    \"content\": \"<set-header name=\\\"header name\\\" exists-action=\\\"override | skip | append | delete\\\">\\r\\n    <value>value</value> <!-- for multiple headers with the same name add additional value elements -->\\r\\n</set-header>\",\r\n    \"toolTip\": \"Add a new header, change the value of an existing header or remove a header. Works for both response and request headers – policy can be applied in inbound or outbound sections at any scope.\",\r\n    \"scope\": \"all\"\r\n  },\r\n  {\r\n    \"name\": \"Set query string parameter\",\r\n    \"content\": \"<set-query-parameter name=\\\"param name\\\" exists-action=\\\"override | skip | append | delete\\\">\\r\\n    <value>value</value> <!-- for multiple parameters with the same name add additional value elements -->\\r\\n</set-query-parameter>\",\r\n    \"toolTip\": \"Add a new query string parameter, change the value of an existing parameter or remove a parameter. Can be applied in the inbound section at any scope.\",\r\n    \"scope\": \"all\"\r\n  },\r\n  {\r\n    \"name\": \"Store to cache\",\r\n    \"content\": \"<cache-store duration=\\\"seconds\\\" />\",\r\n    \"toolTip\": \"Cache responses according to the specified cache configuratuion. Use anywhere in the outbound section at Product, API, or Operation scopes.\",\r\n    \"scope\": \"all\"\r\n  },\r\n  {\r\n    \"name\": \"Validate JWT\",\r\n    \"content\": \"<validate-jwt header-name=\\\"Insert HTTP Header Name here\\\" failed-validation-httpcode=\\\"401\\\" failed-validation-error-message=\\\"Unauthorized\\\">\\r\\n    <issuer-signing-keys>\\r\\n        <key>Base64 Encoded Key 1</key>\\r\\n         <!-- if there are multiple possible allowed values, then add additional value elements -->\\r\\n    </issuer-signing-keys>\\r\\n    <audiences>\\r\\n        <audience>Audience 1</audience>\\r\\n         <!-- if there are multiple possible allowed values, then add additional value elements -->\\r\\n    </audiences>\\r\\n    <issuers>\\r\\n        <issuer>Issuer 1</issuer>\\r\\n         <!-- if there are multiple possible allowed values, then add additional value elements -->\\r\\n    </issuers>\\r\\n    <required-claims>\\r\\n        <claim name=\\\"claim1\\\" match=\\\"all\\\">\\r\\n            <value>value1</value>\\r\\n            <value>value2</value>\\r\\n        </claim>\\r\\n         <!-- if there are multiple possible allowed values, then add additional value elements -->\\r\\n    </required-claims>\\r\\n</validate-jwt>\",\r\n    \"toolTip\": \"Check and validate a JWT in a header or query parameter. Use in the inbound section at any scope.\",\r\n    \"scope\": \"all\"\r\n  }\r\n]",
      "ResponseHeaders": {
        "Content-Length": [
          "8621"
        ],
        "Content-Type": [
          "application/json; charset=utf-8"
        ],
        "Expires": [
          "-1"
        ],
        "Pragma": [
          "no-cache"
        ],
        "x-ms-request-id": [
          "1768a357-a3e4-4e93-8070-35935d0aa3e1"
        ],
        "x-ms-ratelimit-remaining-subscription-reads": [
          "14953"
        ],
        "x-ms-correlation-request-id": [
          "cd8247bd-d53c-4d19-94d6-7bd593cbb230"
        ],
        "x-ms-routing-request-id": [
          "CENTRALUS:20150622T195412Z:cd8247bd-d53c-4d19-94d6-7bd593cbb230"
        ],
        "Strict-Transport-Security": [
          "max-age=31536000; includeSubDomains"
        ],
        "Cache-Control": [
          "no-cache"
        ],
        "Date": [
          "Mon, 22 Jun 2015 19:54:12 GMT"
        ],
        "Server": [
          "Microsoft-HTTPAPI/2.0"
        ]
      },
      "StatusCode": 200
    }
  ],
  "Names": {},
  "Variables": {
    "SubscriptionId": "e4f2946d-558a-4212-9e97-217ee3e55f94"
  }
}