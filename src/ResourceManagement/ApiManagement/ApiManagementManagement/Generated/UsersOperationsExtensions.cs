// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure;
using Microsoft.Azure.Management.ApiManagement;
using Microsoft.Azure.Management.ApiManagement.SmapiModels;

namespace Microsoft.Azure.Management.ApiManagement
{
    /// <summary>
    /// .Net client wrapper for the REST API for Azure ApiManagement Service
    /// </summary>
    public static partial class UsersOperationsExtensions
    {
        /// <summary>
        /// Creates new user.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IUsersOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='uid'>
        /// Required. Identifier of the user.
        /// </param>
        /// <param name='parameters'>
        /// Required. Create or update parameters.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static AzureOperationResponse Create(this IUsersOperations operations, string resourceGroupName, string serviceName, string uid, UserCreateParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IUsersOperations)s).CreateAsync(resourceGroupName, serviceName, uid, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Creates new user.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IUsersOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='uid'>
        /// Required. Identifier of the user.
        /// </param>
        /// <param name='parameters'>
        /// Required. Create or update parameters.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<AzureOperationResponse> CreateAsync(this IUsersOperations operations, string resourceGroupName, string serviceName, string uid, UserCreateParameters parameters)
        {
            return operations.CreateAsync(resourceGroupName, serviceName, uid, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Deletes specific user.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IUsersOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='uid'>
        /// Required. Identifier of the user.
        /// </param>
        /// <param name='etag'>
        /// Required. ETag.
        /// </param>
        /// <param name='deleteSubscriptions'>
        /// Required. Whether to delete user's subscription or not.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static AzureOperationResponse Delete(this IUsersOperations operations, string resourceGroupName, string serviceName, string uid, string etag, bool deleteSubscriptions)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IUsersOperations)s).DeleteAsync(resourceGroupName, serviceName, uid, etag, deleteSubscriptions);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Deletes specific user.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IUsersOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='uid'>
        /// Required. Identifier of the user.
        /// </param>
        /// <param name='etag'>
        /// Required. ETag.
        /// </param>
        /// <param name='deleteSubscriptions'>
        /// Required. Whether to delete user's subscription or not.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<AzureOperationResponse> DeleteAsync(this IUsersOperations operations, string resourceGroupName, string serviceName, string uid, string etag, bool deleteSubscriptions)
        {
            return operations.DeleteAsync(resourceGroupName, serviceName, uid, etag, deleteSubscriptions, CancellationToken.None);
        }
        
        /// <summary>
        /// Generates SSO URL.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IUsersOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='uid'>
        /// Required. Identifier of the user.
        /// </param>
        /// <returns>
        /// Generate SSO Url operations response details.
        /// </returns>
        public static GenerateSsoUrlResponse GenerateSsoUrl(this IUsersOperations operations, string resourceGroupName, string serviceName, string uid)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IUsersOperations)s).GenerateSsoUrlAsync(resourceGroupName, serviceName, uid);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Generates SSO URL.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IUsersOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='uid'>
        /// Required. Identifier of the user.
        /// </param>
        /// <returns>
        /// Generate SSO Url operations response details.
        /// </returns>
        public static Task<GenerateSsoUrlResponse> GenerateSsoUrlAsync(this IUsersOperations operations, string resourceGroupName, string serviceName, string uid)
        {
            return operations.GenerateSsoUrlAsync(resourceGroupName, serviceName, uid, CancellationToken.None);
        }
        
        /// <summary>
        /// Gets specific user.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IUsersOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='uid'>
        /// Required. Identifier of the user.
        /// </param>
        /// <returns>
        /// Get User operation response details.
        /// </returns>
        public static UserGetResponse Get(this IUsersOperations operations, string resourceGroupName, string serviceName, string uid)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IUsersOperations)s).GetAsync(resourceGroupName, serviceName, uid);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Gets specific user.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IUsersOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='uid'>
        /// Required. Identifier of the user.
        /// </param>
        /// <returns>
        /// Get User operation response details.
        /// </returns>
        public static Task<UserGetResponse> GetAsync(this IUsersOperations operations, string resourceGroupName, string serviceName, string uid)
        {
            return operations.GetAsync(resourceGroupName, serviceName, uid, CancellationToken.None);
        }
        
        /// <summary>
        /// List all users.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IUsersOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='query'>
        /// Optional.
        /// </param>
        /// <returns>
        /// List Users operation response details.
        /// </returns>
        public static UserListResponse List(this IUsersOperations operations, string resourceGroupName, string serviceName, QueryParameters query)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IUsersOperations)s).ListAsync(resourceGroupName, serviceName, query);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// List all users.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IUsersOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='query'>
        /// Optional.
        /// </param>
        /// <returns>
        /// List Users operation response details.
        /// </returns>
        public static Task<UserListResponse> ListAsync(this IUsersOperations operations, string resourceGroupName, string serviceName, QueryParameters query)
        {
            return operations.ListAsync(resourceGroupName, serviceName, query, CancellationToken.None);
        }
        
        /// <summary>
        /// List all users.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IUsersOperations.
        /// </param>
        /// <param name='nextLink'>
        /// Required. NextLink from the previous successful call to List
        /// operation.
        /// </param>
        /// <returns>
        /// List Users operation response details.
        /// </returns>
        public static UserListResponse ListNext(this IUsersOperations operations, string nextLink)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IUsersOperations)s).ListNextAsync(nextLink);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// List all users.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IUsersOperations.
        /// </param>
        /// <param name='nextLink'>
        /// Required. NextLink from the previous successful call to List
        /// operation.
        /// </param>
        /// <returns>
        /// List Users operation response details.
        /// </returns>
        public static Task<UserListResponse> ListNextAsync(this IUsersOperations operations, string nextLink)
        {
            return operations.ListNextAsync(nextLink, CancellationToken.None);
        }
        
        /// <summary>
        /// Updates specific user.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IUsersOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='uid'>
        /// Required. Identifier of the user.
        /// </param>
        /// <param name='parameters'>
        /// Required. Update parameters.
        /// </param>
        /// <param name='etag'>
        /// Required. ETag.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static AzureOperationResponse Update(this IUsersOperations operations, string resourceGroupName, string serviceName, string uid, UserUpdateParameters parameters, string etag)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IUsersOperations)s).UpdateAsync(resourceGroupName, serviceName, uid, parameters, etag);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Updates specific user.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IUsersOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='uid'>
        /// Required. Identifier of the user.
        /// </param>
        /// <param name='parameters'>
        /// Required. Update parameters.
        /// </param>
        /// <param name='etag'>
        /// Required. ETag.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<AzureOperationResponse> UpdateAsync(this IUsersOperations operations, string resourceGroupName, string serviceName, string uid, UserUpdateParameters parameters, string etag)
        {
            return operations.UpdateAsync(resourceGroupName, serviceName, uid, parameters, etag, CancellationToken.None);
        }
    }
}
