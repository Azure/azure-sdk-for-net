// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure.Management.ApiManagement.SmapiModels;

namespace Microsoft.Azure.Management.ApiManagement
{
    /// <summary>
    /// Operations for managing Reports.
    /// </summary>
    public partial interface IReportsOperations
    {
        /// <summary>
        /// Lists report records.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the Api Management service.
        /// </param>
        /// <param name='aggregation'>
        /// Report aggregation.
        /// </param>
        /// <param name='interval'>
        /// By time interval. This value is only applicable to ByTime
        /// aggregation. Interval must be multiple of 15 minutes and may not
        /// be zero. The value should be in ISO  8601 format
        /// (http://en.wikipedia.org/wiki/ISO_8601#Durations).This code can be
        /// used to convert TimSpan to a valid interval string:
        /// XmlConvert.ToString(new TimeSpan(hours, minutes, secconds))
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// List Report records operation response details.
        /// </returns>
        Task<ReportListResponse> ListAsync(string resourceGroupName, string serviceName, ReportsAggregation aggregation, QueryParameters query, string interval, CancellationToken cancellationToken);
        
        /// <summary>
        /// List report records.
        /// </summary>
        /// <param name='nextLink'>
        /// NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// List Report records operation response details.
        /// </returns>
        Task<ReportListResponse> ListNextAsync(string nextLink, CancellationToken cancellationToken);
    }
}
