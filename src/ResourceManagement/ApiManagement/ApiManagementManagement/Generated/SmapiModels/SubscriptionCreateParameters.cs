// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using Microsoft.Azure.Management.ApiManagement.SmapiModels;

namespace Microsoft.Azure.Management.ApiManagement.SmapiModels
{
    /// <summary>
    /// Parameters supplied to the Create subscription operation.
    /// </summary>
    public partial class SubscriptionCreateParameters
    {
        private string _name;
        
        /// <summary>
        /// Required. Gets or sets Subscription name.
        /// </summary>
        public string Name
        {
            get { return this._name; }
            set { this._name = value; }
        }
        
        private string _primaryKey;
        
        /// <summary>
        /// Optional. Gets or sets Primary subscription key. If not specified
        /// during request key will be generated automatically. Must be 1 to
        /// 300 characters long.
        /// </summary>
        public string PrimaryKey
        {
            get { return this._primaryKey; }
            set { this._primaryKey = value; }
        }
        
        private string _productIdPath;
        
        /// <summary>
        /// Required. Gets or sets Product (product id path) for which
        /// subscription is being created.
        /// </summary>
        public string ProductIdPath
        {
            get { return this._productIdPath; }
            set { this._productIdPath = value; }
        }
        
        private string _secondaryKey;
        
        /// <summary>
        /// Optional. Gets or sets Secondary subscription key. If not specified
        /// during request key will be generated automatically. Must be 1 to
        /// 300 characters long.
        /// </summary>
        public string SecondaryKey
        {
            get { return this._secondaryKey; }
            set { this._secondaryKey = value; }
        }
        
        private Microsoft.Azure.Management.ApiManagement.SmapiModels.SubscriptionStateContract? _state;
        
        /// <summary>
        /// Optional. Gets or sets Initial subscription state.
        /// </summary>
        public Microsoft.Azure.Management.ApiManagement.SmapiModels.SubscriptionStateContract? State
        {
            get { return this._state; }
            set { this._state = value; }
        }
        
        private string _userIdPath;
        
        /// <summary>
        /// Required. Gets or sets User (user id path) for whom subscription is
        /// being created.
        /// </summary>
        public string UserIdPath
        {
            get { return this._userIdPath; }
            set { this._userIdPath = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the SubscriptionCreateParameters
        /// class.
        /// </summary>
        public SubscriptionCreateParameters()
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the SubscriptionCreateParameters
        /// class with required arguments.
        /// </summary>
        public SubscriptionCreateParameters(string userIdPath, string productIdPath, string name)
            : this()
        {
            if (userIdPath == null)
            {
                throw new ArgumentNullException("userIdPath");
            }
            if (productIdPath == null)
            {
                throw new ArgumentNullException("productIdPath");
            }
            if (name == null)
            {
                throw new ArgumentNullException("name");
            }
            this.UserIdPath = userIdPath;
            this.ProductIdPath = productIdPath;
            this.Name = name;
        }
    }
}
