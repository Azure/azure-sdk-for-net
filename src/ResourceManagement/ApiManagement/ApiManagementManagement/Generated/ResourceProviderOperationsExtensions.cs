// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure;
using Microsoft.Azure.Management.ApiManagement;
using Microsoft.Azure.Management.ApiManagement.Models;

namespace Microsoft.Azure.Management.ApiManagement
{
    /// <summary>
    /// .Net client wrapper for the REST API for Azure ApiManagement Service
    /// </summary>
    public static partial class ResourceProviderOperationsExtensions
    {
        /// <summary>
        /// Backs up an Api Management service.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='name'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the Backup operation.
        /// </param>
        /// <returns>
        /// The response of the CreateOrUpdate Api Management service long
        /// running operation.
        /// </returns>
        public static ApiServiceLongRunningOperationResponse Backup(this IResourceProviderOperations operations, string resourceGroupName, string name, ApiServiceBackupRestoreParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IResourceProviderOperations)s).BackupAsync(resourceGroupName, name, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Backs up an Api Management service.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='name'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the Backup operation.
        /// </param>
        /// <returns>
        /// The response of the CreateOrUpdate Api Management service long
        /// running operation.
        /// </returns>
        public static Task<ApiServiceLongRunningOperationResponse> BackupAsync(this IResourceProviderOperations operations, string resourceGroupName, string name, ApiServiceBackupRestoreParameters parameters)
        {
            return operations.BackupAsync(resourceGroupName, name, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Begin backup operation of an Api Management service.To determine
        /// whether the operation has finished processing the request, call
        /// GetLongRunningOperationStatus.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='name'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the BeginBackup operation.
        /// </param>
        /// <returns>
        /// The response of the CreateOrUpdate Api Management service long
        /// running operation.
        /// </returns>
        public static ApiServiceLongRunningOperationResponse BeginBackup(this IResourceProviderOperations operations, string resourceGroupName, string name, ApiServiceBackupRestoreParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IResourceProviderOperations)s).BeginBackupAsync(resourceGroupName, name, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Begin backup operation of an Api Management service.To determine
        /// whether the operation has finished processing the request, call
        /// GetLongRunningOperationStatus.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='name'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the BeginBackup operation.
        /// </param>
        /// <returns>
        /// The response of the CreateOrUpdate Api Management service long
        /// running operation.
        /// </returns>
        public static Task<ApiServiceLongRunningOperationResponse> BeginBackupAsync(this IResourceProviderOperations operations, string resourceGroupName, string name, ApiServiceBackupRestoreParameters parameters)
        {
            return operations.BeginBackupAsync(resourceGroupName, name, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Begins creating new or updating existing Api Management service.To
        /// determine whether the operation has finished processing the
        /// request, call GetApiServiceLongRunningOperationStatus.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='name'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the CreateOrUpdate Api Management
        /// service operation.
        /// </param>
        /// <returns>
        /// The response of the CreateOrUpdate Api Management service long
        /// running operation.
        /// </returns>
        public static ApiServiceLongRunningOperationResponse BeginCreatingOrUpdating(this IResourceProviderOperations operations, string resourceGroupName, string name, ApiServiceCreateOrUpdateParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IResourceProviderOperations)s).BeginCreatingOrUpdatingAsync(resourceGroupName, name, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Begins creating new or updating existing Api Management service.To
        /// determine whether the operation has finished processing the
        /// request, call GetApiServiceLongRunningOperationStatus.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='name'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the CreateOrUpdate Api Management
        /// service operation.
        /// </param>
        /// <returns>
        /// The response of the CreateOrUpdate Api Management service long
        /// running operation.
        /// </returns>
        public static Task<ApiServiceLongRunningOperationResponse> BeginCreatingOrUpdatingAsync(this IResourceProviderOperations operations, string resourceGroupName, string name, ApiServiceCreateOrUpdateParameters parameters)
        {
            return operations.BeginCreatingOrUpdatingAsync(resourceGroupName, name, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Begin to manage (CUD) deployments of an Api Management service.To
        /// determine whether the operation has finished processing the
        /// request, call GetLongRunningOperationStatus.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='name'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the ManageDeployments operation.
        /// </param>
        /// <returns>
        /// The response of the CreateOrUpdate Api Management service long
        /// running operation.
        /// </returns>
        public static ApiServiceLongRunningOperationResponse BeginManagingDeployments(this IResourceProviderOperations operations, string resourceGroupName, string name, ApiServiceManageDeploymentsParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IResourceProviderOperations)s).BeginManagingDeploymentsAsync(resourceGroupName, name, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Begin to manage (CUD) deployments of an Api Management service.To
        /// determine whether the operation has finished processing the
        /// request, call GetLongRunningOperationStatus.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='name'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the ManageDeployments operation.
        /// </param>
        /// <returns>
        /// The response of the CreateOrUpdate Api Management service long
        /// running operation.
        /// </returns>
        public static Task<ApiServiceLongRunningOperationResponse> BeginManagingDeploymentsAsync(this IResourceProviderOperations operations, string resourceGroupName, string name, ApiServiceManageDeploymentsParameters parameters)
        {
            return operations.BeginManagingDeploymentsAsync(resourceGroupName, name, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Begin restore from backup operation of an Api Management service.To
        /// determine whether the operation has finished processing the
        /// request, call GetLongRunningOperationStatus.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='name'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the Restore Api Management service
        /// from backup operation.
        /// </param>
        /// <returns>
        /// The response of the CreateOrUpdate Api Management service long
        /// running operation.
        /// </returns>
        public static ApiServiceLongRunningOperationResponse BeginRestoring(this IResourceProviderOperations operations, string resourceGroupName, string name, ApiServiceBackupRestoreParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IResourceProviderOperations)s).BeginRestoringAsync(resourceGroupName, name, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Begin restore from backup operation of an Api Management service.To
        /// determine whether the operation has finished processing the
        /// request, call GetLongRunningOperationStatus.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='name'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the Restore Api Management service
        /// from backup operation.
        /// </param>
        /// <returns>
        /// The response of the CreateOrUpdate Api Management service long
        /// running operation.
        /// </returns>
        public static Task<ApiServiceLongRunningOperationResponse> BeginRestoringAsync(this IResourceProviderOperations operations, string resourceGroupName, string name, ApiServiceBackupRestoreParameters parameters)
        {
            return operations.BeginRestoringAsync(resourceGroupName, name, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Begin updating hostname of an Api Management service.To determine
        /// whether the operation has finished processing the request, call
        /// GetLongRunningOperationStatus.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='name'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the UpdateHostname operation.
        /// </param>
        /// <returns>
        /// The response of the CreateOrUpdate Api Management service long
        /// running operation.
        /// </returns>
        public static ApiServiceLongRunningOperationResponse BeginUpdatingHostname(this IResourceProviderOperations operations, string resourceGroupName, string name, ApiServiceUpdateHostnameParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IResourceProviderOperations)s).BeginUpdatingHostnameAsync(resourceGroupName, name, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Begin updating hostname of an Api Management service.To determine
        /// whether the operation has finished processing the request, call
        /// GetLongRunningOperationStatus.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='name'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the UpdateHostname operation.
        /// </param>
        /// <returns>
        /// The response of the CreateOrUpdate Api Management service long
        /// running operation.
        /// </returns>
        public static Task<ApiServiceLongRunningOperationResponse> BeginUpdatingHostnameAsync(this IResourceProviderOperations operations, string resourceGroupName, string name, ApiServiceUpdateHostnameParameters parameters)
        {
            return operations.BeginUpdatingHostnameAsync(resourceGroupName, name, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Checks whether the custom host name maps to an Api Management
        /// service.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='name'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the CheckCustomHostname operation.
        /// </param>
        /// <returns>
        /// The response of the CheckCustomHostname operation.
        /// </returns>
        public static ApiServiceCheckCustomHostnameResponse CheckCustomHostname(this IResourceProviderOperations operations, string resourceGroupName, string name, ApiServiceCheckCustomHostnameParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IResourceProviderOperations)s).CheckCustomHostnameAsync(resourceGroupName, name, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Checks whether the custom host name maps to an Api Management
        /// service.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='name'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the CheckCustomHostname operation.
        /// </param>
        /// <returns>
        /// The response of the CheckCustomHostname operation.
        /// </returns>
        public static Task<ApiServiceCheckCustomHostnameResponse> CheckCustomHostnameAsync(this IResourceProviderOperations operations, string resourceGroupName, string name, ApiServiceCheckCustomHostnameParameters parameters)
        {
            return operations.CheckCustomHostnameAsync(resourceGroupName, name, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Checks availability and correctness of a name for an Api Management
        /// service.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the CheckNameAvailability
        /// operation.
        /// </param>
        /// <returns>
        /// Response of the CheckNameAvailability operation.
        /// </returns>
        public static ApiServiceNameAvailabilityResponse CheckNameAvailability(this IResourceProviderOperations operations, ApiServiceCheckNameAvailabilityParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IResourceProviderOperations)s).CheckNameAvailabilityAsync(parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Checks availability and correctness of a name for an Api Management
        /// service.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the CheckNameAvailability
        /// operation.
        /// </param>
        /// <returns>
        /// Response of the CheckNameAvailability operation.
        /// </returns>
        public static Task<ApiServiceNameAvailabilityResponse> CheckNameAvailabilityAsync(this IResourceProviderOperations operations, ApiServiceCheckNameAvailabilityParameters parameters)
        {
            return operations.CheckNameAvailabilityAsync(parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Creates new or updates existing Api Management service
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='name'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the CreateOrUpdate Api Management
        /// service operation.
        /// </param>
        /// <returns>
        /// The response of the CreateOrUpdate Api Management service long
        /// running operation.
        /// </returns>
        public static ApiServiceLongRunningOperationResponse CreateOrUpdate(this IResourceProviderOperations operations, string resourceGroupName, string name, ApiServiceCreateOrUpdateParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IResourceProviderOperations)s).CreateOrUpdateAsync(resourceGroupName, name, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Creates new or updates existing Api Management service
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='name'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the CreateOrUpdate Api Management
        /// service operation.
        /// </param>
        /// <returns>
        /// The response of the CreateOrUpdate Api Management service long
        /// running operation.
        /// </returns>
        public static Task<ApiServiceLongRunningOperationResponse> CreateOrUpdateAsync(this IResourceProviderOperations operations, string resourceGroupName, string name, ApiServiceCreateOrUpdateParameters parameters)
        {
            return operations.CreateOrUpdateAsync(resourceGroupName, name, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Deletes existing Api Management service
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='name'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static AzureOperationResponse Delete(this IResourceProviderOperations operations, string resourceGroupName, string name)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IResourceProviderOperations)s).DeleteAsync(resourceGroupName, name);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Deletes existing Api Management service
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='name'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<AzureOperationResponse> DeleteAsync(this IResourceProviderOperations operations, string resourceGroupName, string name)
        {
            return operations.DeleteAsync(resourceGroupName, name, CancellationToken.None);
        }
        
        /// <summary>
        /// Get an Api Management service resource description.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='name'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <returns>
        /// The response of the Get Api Management service operation.
        /// </returns>
        public static ApiServiceGetResponse Get(this IResourceProviderOperations operations, string resourceGroupName, string name)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IResourceProviderOperations)s).GetAsync(resourceGroupName, name);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Get an Api Management service resource description.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='name'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <returns>
        /// The response of the Get Api Management service operation.
        /// </returns>
        public static Task<ApiServiceGetResponse> GetAsync(this IResourceProviderOperations operations, string resourceGroupName, string name)
        {
            return operations.GetAsync(resourceGroupName, name, CancellationToken.None);
        }
        
        /// <summary>
        /// The Get ApiService Operation Status operation returns the status of
        /// the create or update operation. After calling the operation, you
        /// can call Get ApiService Operation Status to determine whether the
        /// operation has succeeded, failed, or is still in progress. This
        /// method differs GetLongRunningOperationStatus in providing Api
        /// Management service resource description.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='operationStatusLink'>
        /// Required. Location value returned by the Begin operation.
        /// </param>
        /// <returns>
        /// The response of the CreateOrUpdate Api Management service long
        /// running operation.
        /// </returns>
        public static ApiServiceLongRunningOperationResponse GetApiServiceLongRunningOperationStatus(this IResourceProviderOperations operations, string operationStatusLink)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IResourceProviderOperations)s).GetApiServiceLongRunningOperationStatusAsync(operationStatusLink);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// The Get ApiService Operation Status operation returns the status of
        /// the create or update operation. After calling the operation, you
        /// can call Get ApiService Operation Status to determine whether the
        /// operation has succeeded, failed, or is still in progress. This
        /// method differs GetLongRunningOperationStatus in providing Api
        /// Management service resource description.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='operationStatusLink'>
        /// Required. Location value returned by the Begin operation.
        /// </param>
        /// <returns>
        /// The response of the CreateOrUpdate Api Management service long
        /// running operation.
        /// </returns>
        public static Task<ApiServiceLongRunningOperationResponse> GetApiServiceLongRunningOperationStatusAsync(this IResourceProviderOperations operations, string operationStatusLink)
        {
            return operations.GetApiServiceLongRunningOperationStatusAsync(operationStatusLink, CancellationToken.None);
        }
        
        /// <summary>
        /// The Get Operation Status operation returns the status of the
        /// specified operation. After calling an asynchronous operation, you
        /// can call Get Operation Status to determine whether the operation
        /// has succeeded, failed, or is still in progress.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='operationStatusLink'>
        /// Required. Location value returned by the Begin operation.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public static LongRunningOperationResponse GetLongRunningOperationStatus(this IResourceProviderOperations operations, string operationStatusLink)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IResourceProviderOperations)s).GetLongRunningOperationStatusAsync(operationStatusLink);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// The Get Operation Status operation returns the status of the
        /// specified operation. After calling an asynchronous operation, you
        /// can call Get Operation Status to determine whether the operation
        /// has succeeded, failed, or is still in progress.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='operationStatusLink'>
        /// Required. Location value returned by the Begin operation.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public static Task<LongRunningOperationResponse> GetLongRunningOperationStatusAsync(this IResourceProviderOperations operations, string operationStatusLink)
        {
            return operations.GetLongRunningOperationStatusAsync(operationStatusLink, CancellationToken.None);
        }
        
        /// <summary>
        /// Gets SsoToken for an Api Management service.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='name'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <returns>
        /// The response of the GetSsoToken operation.
        /// </returns>
        public static ApiServiceGetSsoTokenResponse GetSsoToken(this IResourceProviderOperations operations, string resourceGroupName, string name)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IResourceProviderOperations)s).GetSsoTokenAsync(resourceGroupName, name);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Gets SsoToken for an Api Management service.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='name'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <returns>
        /// The response of the GetSsoToken operation.
        /// </returns>
        public static Task<ApiServiceGetSsoTokenResponse> GetSsoTokenAsync(this IResourceProviderOperations operations, string resourceGroupName, string name)
        {
            return operations.GetSsoTokenAsync(resourceGroupName, name, CancellationToken.None);
        }
        
        /// <summary>
        /// List all Api Management services within a resource group.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Optional. The name of the resource group. If resourceGroupName
        /// value is null the method lists all Api Management services within
        /// subscription
        /// </param>
        /// <returns>
        /// The response of the List Api Management services operation.
        /// </returns>
        public static ApiServiceListResponse List(this IResourceProviderOperations operations, string resourceGroupName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IResourceProviderOperations)s).ListAsync(resourceGroupName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// List all Api Management services within a resource group.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Optional. The name of the resource group. If resourceGroupName
        /// value is null the method lists all Api Management services within
        /// subscription
        /// </param>
        /// <returns>
        /// The response of the List Api Management services operation.
        /// </returns>
        public static Task<ApiServiceListResponse> ListAsync(this IResourceProviderOperations operations, string resourceGroupName)
        {
            return operations.ListAsync(resourceGroupName, CancellationToken.None);
        }
        
        /// <summary>
        /// Manage (CUD) deployments of an Api Management service.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='name'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the ManageDeployments operation.
        /// </param>
        /// <returns>
        /// The response of the CreateOrUpdate Api Management service long
        /// running operation.
        /// </returns>
        public static ApiServiceLongRunningOperationResponse ManageDeployments(this IResourceProviderOperations operations, string resourceGroupName, string name, ApiServiceManageDeploymentsParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IResourceProviderOperations)s).ManageDeploymentsAsync(resourceGroupName, name, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Manage (CUD) deployments of an Api Management service.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='name'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the ManageDeployments operation.
        /// </param>
        /// <returns>
        /// The response of the CreateOrUpdate Api Management service long
        /// running operation.
        /// </returns>
        public static Task<ApiServiceLongRunningOperationResponse> ManageDeploymentsAsync(this IResourceProviderOperations operations, string resourceGroupName, string name, ApiServiceManageDeploymentsParameters parameters)
        {
            return operations.ManageDeploymentsAsync(resourceGroupName, name, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Restore an Api Management service from backup.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='name'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the Restore Api Management service
        /// from backup operation.
        /// </param>
        /// <returns>
        /// The response of the CreateOrUpdate Api Management service long
        /// running operation.
        /// </returns>
        public static ApiServiceLongRunningOperationResponse Restore(this IResourceProviderOperations operations, string resourceGroupName, string name, ApiServiceBackupRestoreParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IResourceProviderOperations)s).RestoreAsync(resourceGroupName, name, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Restore an Api Management service from backup.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='name'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the Restore Api Management service
        /// from backup operation.
        /// </param>
        /// <returns>
        /// The response of the CreateOrUpdate Api Management service long
        /// running operation.
        /// </returns>
        public static Task<ApiServiceLongRunningOperationResponse> RestoreAsync(this IResourceProviderOperations operations, string resourceGroupName, string name, ApiServiceBackupRestoreParameters parameters)
        {
            return operations.RestoreAsync(resourceGroupName, name, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Update hostname of an Api Management service.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='name'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the UpdateHostname operation.
        /// </param>
        /// <returns>
        /// The response of the CreateOrUpdate Api Management service long
        /// running operation.
        /// </returns>
        public static ApiServiceLongRunningOperationResponse UpdateHostname(this IResourceProviderOperations operations, string resourceGroupName, string name, ApiServiceUpdateHostnameParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IResourceProviderOperations)s).UpdateHostnameAsync(resourceGroupName, name, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Update hostname of an Api Management service.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='name'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the UpdateHostname operation.
        /// </param>
        /// <returns>
        /// The response of the CreateOrUpdate Api Management service long
        /// running operation.
        /// </returns>
        public static Task<ApiServiceLongRunningOperationResponse> UpdateHostnameAsync(this IResourceProviderOperations operations, string resourceGroupName, string name, ApiServiceUpdateHostnameParameters parameters)
        {
            return operations.UpdateHostnameAsync(resourceGroupName, name, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Upload SSL certificate for an Api Management service.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='name'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the Upload SSL certificate for an
        /// Api Management service operation.
        /// </param>
        /// <returns>
        /// The response of the Upload SSL certificate for an Api Management
        /// service operation.
        /// </returns>
        public static ApiServiceUploadCertificateResponse UploadCertificate(this IResourceProviderOperations operations, string resourceGroupName, string name, ApiServiceUploadCertificateParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IResourceProviderOperations)s).UploadCertificateAsync(resourceGroupName, name, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Upload SSL certificate for an Api Management service.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.IResourceProviderOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='name'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the Upload SSL certificate for an
        /// Api Management service operation.
        /// </param>
        /// <returns>
        /// The response of the Upload SSL certificate for an Api Management
        /// service operation.
        /// </returns>
        public static Task<ApiServiceUploadCertificateResponse> UploadCertificateAsync(this IResourceProviderOperations operations, string resourceGroupName, string name, ApiServiceUploadCertificateParameters parameters)
        {
            return operations.UploadCertificateAsync(resourceGroupName, name, parameters, CancellationToken.None);
        }
    }
}
