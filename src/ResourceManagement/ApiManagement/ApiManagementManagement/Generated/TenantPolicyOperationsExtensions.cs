// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.IO;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure;
using Microsoft.Azure.Management.ApiManagement;
using Microsoft.Azure.Management.ApiManagement.SmapiModels;

namespace Microsoft.Azure.Management.ApiManagement
{
    /// <summary>
    /// .Net client wrapper for the REST API for Azure ApiManagement Service
    /// </summary>
    public static partial class TenantPolicyOperationsExtensions
    {
        /// <summary>
        /// Deletes tenant-level policy.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.ITenantPolicyOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='etag'>
        /// Required. ETag.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static AzureOperationResponse Delete(this ITenantPolicyOperations operations, string resourceGroupName, string serviceName, string etag)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((ITenantPolicyOperations)s).DeleteAsync(resourceGroupName, serviceName, etag);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Deletes tenant-level policy.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.ITenantPolicyOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='etag'>
        /// Required. ETag.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<AzureOperationResponse> DeleteAsync(this ITenantPolicyOperations operations, string resourceGroupName, string serviceName, string etag)
        {
            return operations.DeleteAsync(resourceGroupName, serviceName, etag, CancellationToken.None);
        }
        
        /// <summary>
        /// Gets tenant-level policy.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.ITenantPolicyOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='format'>
        /// Required. Format of the policy. Supported formats:
        /// application/vnd.ms-azure-apim.policy+xml,
        /// application/vnd.ms-azure-apim.policy.raw+xml
        /// </param>
        /// <returns>
        /// The response model for the get policy output operation.
        /// </returns>
        public static PolicyGetResponse Get(this ITenantPolicyOperations operations, string resourceGroupName, string serviceName, string format)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((ITenantPolicyOperations)s).GetAsync(resourceGroupName, serviceName, format);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Gets tenant-level policy.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.ITenantPolicyOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='format'>
        /// Required. Format of the policy. Supported formats:
        /// application/vnd.ms-azure-apim.policy+xml,
        /// application/vnd.ms-azure-apim.policy.raw+xml
        /// </param>
        /// <returns>
        /// The response model for the get policy output operation.
        /// </returns>
        public static Task<PolicyGetResponse> GetAsync(this ITenantPolicyOperations operations, string resourceGroupName, string serviceName, string format)
        {
            return operations.GetAsync(resourceGroupName, serviceName, format, CancellationToken.None);
        }
        
        /// <summary>
        /// Sets tenant-level policy.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.ITenantPolicyOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='format'>
        /// Required. Format of the policy. Supported formats:
        /// application/vnd.ms-azure-apim.policy+xml,
        /// application/vnd.ms-azure-apim.policy.raw+xml
        /// </param>
        /// <param name='policyStream'>
        /// Required. Policy stream.
        /// </param>
        /// <param name='etag'>
        /// Optional. ETag.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static AzureOperationResponse Set(this ITenantPolicyOperations operations, string resourceGroupName, string serviceName, string format, Stream policyStream, string etag)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((ITenantPolicyOperations)s).SetAsync(resourceGroupName, serviceName, format, policyStream, etag);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Sets tenant-level policy.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.ApiManagement.ITenantPolicyOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='serviceName'>
        /// Required. The name of the Api Management service.
        /// </param>
        /// <param name='format'>
        /// Required. Format of the policy. Supported formats:
        /// application/vnd.ms-azure-apim.policy+xml,
        /// application/vnd.ms-azure-apim.policy.raw+xml
        /// </param>
        /// <param name='policyStream'>
        /// Required. Policy stream.
        /// </param>
        /// <param name='etag'>
        /// Optional. ETag.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<AzureOperationResponse> SetAsync(this ITenantPolicyOperations operations, string resourceGroupName, string serviceName, string format, Stream policyStream, string etag)
        {
            return operations.SetAsync(resourceGroupName, serviceName, format, policyStream, etag, CancellationToken.None);
        }
    }
}
