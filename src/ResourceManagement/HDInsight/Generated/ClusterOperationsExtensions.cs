// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure.Management.HDInsight;
using Microsoft.Azure.Management.HDInsight.Models;

namespace Microsoft.Azure.Management.HDInsight
{
    /// <summary>
    /// The HDInsight Management Client.
    /// </summary>
    public static partial class ClusterOperationsExtensions
    {
        /// <summary>
        /// Begins configuring the HTTP settings on the specified cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='clusterName'>
        /// Required. The name of the cluster.
        /// </param>
        /// <param name='httpSettingsParameters'>
        /// Required. The name of the resource group.
        /// </param>
        /// <returns>
        /// The cluster long running operation response.
        /// </returns>
        public static HDInsightOperationResponse BeginConfiguringHttpSettings(this IClusterOperations operations, string resourceGroupName, string clusterName, HttpSettingsParameters httpSettingsParameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IClusterOperations)s).BeginConfiguringHttpSettingsAsync(resourceGroupName, clusterName, httpSettingsParameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Begins configuring the HTTP settings on the specified cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='clusterName'>
        /// Required. The name of the cluster.
        /// </param>
        /// <param name='httpSettingsParameters'>
        /// Required. The name of the resource group.
        /// </param>
        /// <returns>
        /// The cluster long running operation response.
        /// </returns>
        public static Task<HDInsightOperationResponse> BeginConfiguringHttpSettingsAsync(this IClusterOperations operations, string resourceGroupName, string clusterName, HttpSettingsParameters httpSettingsParameters)
        {
            return operations.BeginConfiguringHttpSettingsAsync(resourceGroupName, clusterName, httpSettingsParameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Begins configuring the RDP settings on the specified cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='clusterName'>
        /// Required. The name of the cluster.
        /// </param>
        /// <param name='rdpParameters'>
        /// Required. The OS profile for RDP.
        /// </param>
        /// <returns>
        /// The cluster long running operation response.
        /// </returns>
        public static HDInsightOperationResponse BeginConfiguringRdpSettings(this IClusterOperations operations, string resourceGroupName, string clusterName, RDPSettingsParameters rdpParameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IClusterOperations)s).BeginConfiguringRdpSettingsAsync(resourceGroupName, clusterName, rdpParameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Begins configuring the RDP settings on the specified cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='clusterName'>
        /// Required. The name of the cluster.
        /// </param>
        /// <param name='rdpParameters'>
        /// Required. The OS profile for RDP.
        /// </param>
        /// <returns>
        /// The cluster long running operation response.
        /// </returns>
        public static Task<HDInsightOperationResponse> BeginConfiguringRdpSettingsAsync(this IClusterOperations operations, string resourceGroupName, string clusterName, RDPSettingsParameters rdpParameters)
        {
            return operations.BeginConfiguringRdpSettingsAsync(resourceGroupName, clusterName, rdpParameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Begins creating a new HDInsight cluster with the specified
        /// parameters.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='clusterName'>
        /// Required. The name of the cluster.
        /// </param>
        /// <param name='clusterCreateParameters'>
        /// Required. The cluster create request.
        /// </param>
        /// <returns>
        /// The CreateCluster operation response.
        /// </returns>
        public static ClusterCreateResponse BeginCreating(this IClusterOperations operations, string resourceGroupName, string clusterName, ClusterCreateParametersExtended clusterCreateParameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IClusterOperations)s).BeginCreatingAsync(resourceGroupName, clusterName, clusterCreateParameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Begins creating a new HDInsight cluster with the specified
        /// parameters.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='clusterName'>
        /// Required. The name of the cluster.
        /// </param>
        /// <param name='clusterCreateParameters'>
        /// Required. The cluster create request.
        /// </param>
        /// <returns>
        /// The CreateCluster operation response.
        /// </returns>
        public static Task<ClusterCreateResponse> BeginCreatingAsync(this IClusterOperations operations, string resourceGroupName, string clusterName, ClusterCreateParametersExtended clusterCreateParameters)
        {
            return operations.BeginCreatingAsync(resourceGroupName, clusterName, clusterCreateParameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Begins deleting the specified HDInsight cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='clusterName'>
        /// Required. The name of the cluster.
        /// </param>
        /// <returns>
        /// The cluster long running operation response.
        /// </returns>
        public static HDInsightOperationResponse BeginDeleting(this IClusterOperations operations, string resourceGroupName, string clusterName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IClusterOperations)s).BeginDeletingAsync(resourceGroupName, clusterName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Begins deleting the specified HDInsight cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='clusterName'>
        /// Required. The name of the cluster.
        /// </param>
        /// <returns>
        /// The cluster long running operation response.
        /// </returns>
        public static Task<HDInsightOperationResponse> BeginDeletingAsync(this IClusterOperations operations, string resourceGroupName, string clusterName)
        {
            return operations.BeginDeletingAsync(resourceGroupName, clusterName, CancellationToken.None);
        }
        
        /// <summary>
        /// Begins a resize operation on the specified HDInsight cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='clusterName'>
        /// Required. The name of the cluster.
        /// </param>
        /// <param name='resizeParameters'>
        /// Required. The parameters for the resize operation.
        /// </param>
        /// <returns>
        /// The cluster long running operation response.
        /// </returns>
        public static HDInsightOperationResponse BeginResizing(this IClusterOperations operations, string resourceGroupName, string clusterName, ClusterResizeParameters resizeParameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IClusterOperations)s).BeginResizingAsync(resourceGroupName, clusterName, resizeParameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Begins a resize operation on the specified HDInsight cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='clusterName'>
        /// Required. The name of the cluster.
        /// </param>
        /// <param name='resizeParameters'>
        /// Required. The parameters for the resize operation.
        /// </param>
        /// <returns>
        /// The cluster long running operation response.
        /// </returns>
        public static Task<HDInsightOperationResponse> BeginResizingAsync(this IClusterOperations operations, string resourceGroupName, string clusterName, ClusterResizeParameters resizeParameters)
        {
            return operations.BeginResizingAsync(resourceGroupName, clusterName, resizeParameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Configures the HTTP settings on the specified cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='clusterName'>
        /// Required. The name of the cluster.
        /// </param>
        /// <param name='httpSettingsParameters'>
        /// Required. The name of the resource group.
        /// </param>
        /// <returns>
        /// The cluster long running operation response.
        /// </returns>
        public static HDInsightLongRunningOperationResponse ConfigureHttpSettings(this IClusterOperations operations, string resourceGroupName, string clusterName, HttpSettingsParameters httpSettingsParameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IClusterOperations)s).ConfigureHttpSettingsAsync(resourceGroupName, clusterName, httpSettingsParameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Configures the HTTP settings on the specified cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='clusterName'>
        /// Required. The name of the cluster.
        /// </param>
        /// <param name='httpSettingsParameters'>
        /// Required. The name of the resource group.
        /// </param>
        /// <returns>
        /// The cluster long running operation response.
        /// </returns>
        public static Task<HDInsightLongRunningOperationResponse> ConfigureHttpSettingsAsync(this IClusterOperations operations, string resourceGroupName, string clusterName, HttpSettingsParameters httpSettingsParameters)
        {
            return operations.ConfigureHttpSettingsAsync(resourceGroupName, clusterName, httpSettingsParameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Configures the RDP settings on the specified cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='clusterName'>
        /// Required. The name of the cluster.
        /// </param>
        /// <param name='rdpParameters'>
        /// Required. The OS profile for RDP. Use null to turn RDP off.
        /// </param>
        /// <returns>
        /// The cluster long running operation response.
        /// </returns>
        public static HDInsightLongRunningOperationResponse ConfigureRdpSettings(this IClusterOperations operations, string resourceGroupName, string clusterName, RDPSettingsParameters rdpParameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IClusterOperations)s).ConfigureRdpSettingsAsync(resourceGroupName, clusterName, rdpParameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Configures the RDP settings on the specified cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='clusterName'>
        /// Required. The name of the cluster.
        /// </param>
        /// <param name='rdpParameters'>
        /// Required. The OS profile for RDP. Use null to turn RDP off.
        /// </param>
        /// <returns>
        /// The cluster long running operation response.
        /// </returns>
        public static Task<HDInsightLongRunningOperationResponse> ConfigureRdpSettingsAsync(this IClusterOperations operations, string resourceGroupName, string clusterName, RDPSettingsParameters rdpParameters)
        {
            return operations.ConfigureRdpSettingsAsync(resourceGroupName, clusterName, rdpParameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Creates a new HDInsight cluster with the specified parameters.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='clusterName'>
        /// Required. The name of the cluster.
        /// </param>
        /// <param name='clusterCreateParameters'>
        /// Required. The cluster create request.
        /// </param>
        /// <returns>
        /// The GetCluster operation response.
        /// </returns>
        public static ClusterGetResponse Create(this IClusterOperations operations, string resourceGroupName, string clusterName, ClusterCreateParametersExtended clusterCreateParameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IClusterOperations)s).CreateAsync(resourceGroupName, clusterName, clusterCreateParameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Creates a new HDInsight cluster with the specified parameters.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='clusterName'>
        /// Required. The name of the cluster.
        /// </param>
        /// <param name='clusterCreateParameters'>
        /// Required. The cluster create request.
        /// </param>
        /// <returns>
        /// The GetCluster operation response.
        /// </returns>
        public static Task<ClusterGetResponse> CreateAsync(this IClusterOperations operations, string resourceGroupName, string clusterName, ClusterCreateParametersExtended clusterCreateParameters)
        {
            return operations.CreateAsync(resourceGroupName, clusterName, clusterCreateParameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Deletes the specified HDInsight cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='clusterName'>
        /// Required. The name of the cluster.
        /// </param>
        /// <returns>
        /// The GetCluster operation response.
        /// </returns>
        public static ClusterGetResponse Delete(this IClusterOperations operations, string resourceGroupName, string clusterName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IClusterOperations)s).DeleteAsync(resourceGroupName, clusterName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Deletes the specified HDInsight cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='clusterName'>
        /// Required. The name of the cluster.
        /// </param>
        /// <returns>
        /// The GetCluster operation response.
        /// </returns>
        public static Task<ClusterGetResponse> DeleteAsync(this IClusterOperations operations, string resourceGroupName, string clusterName)
        {
            return operations.DeleteAsync(resourceGroupName, clusterName, CancellationToken.None);
        }
        
        /// <summary>
        /// Gets the specified cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='clusterName'>
        /// Required. The name of the cluster.
        /// </param>
        /// <returns>
        /// The GetCluster operation response.
        /// </returns>
        public static ClusterGetResponse Get(this IClusterOperations operations, string resourceGroupName, string clusterName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IClusterOperations)s).GetAsync(resourceGroupName, clusterName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Gets the specified cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='clusterName'>
        /// Required. The name of the cluster.
        /// </param>
        /// <returns>
        /// The GetCluster operation response.
        /// </returns>
        public static Task<ClusterGetResponse> GetAsync(this IClusterOperations operations, string resourceGroupName, string clusterName)
        {
            return operations.GetAsync(resourceGroupName, clusterName, CancellationToken.None);
        }
        
        /// <summary>
        /// Gets the capabilities for the specified location.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='location'>
        /// Required. The location to get capabilities for.
        /// </param>
        /// <returns>
        /// The Get Capabilities operation response.
        /// </returns>
        public static CapabilitiesResponse GetCapabilities(this IClusterOperations operations, string location)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IClusterOperations)s).GetCapabilitiesAsync(location);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Gets the capabilities for the specified location.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='location'>
        /// Required. The location to get capabilities for.
        /// </param>
        /// <returns>
        /// The Get Capabilities operation response.
        /// </returns>
        public static Task<CapabilitiesResponse> GetCapabilitiesAsync(this IClusterOperations operations, string location)
        {
            return operations.GetCapabilitiesAsync(location, CancellationToken.None);
        }
        
        /// <summary>
        /// Gets the configuration for the specified cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='clusterName'>
        /// Required. The name of the cluster.
        /// </param>
        /// <param name='configurationName'>
        /// Required. The type name of the hadoop congfiguration.
        /// </param>
        /// <returns>
        /// The Cluster Configurations operation response.
        /// </returns>
        public static ClusterConfigurationsResponse GetClusterConfigurations(this IClusterOperations operations, string resourceGroupName, string clusterName, string configurationName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IClusterOperations)s).GetClusterConfigurationsAsync(resourceGroupName, clusterName, configurationName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Gets the configuration for the specified cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='clusterName'>
        /// Required. The name of the cluster.
        /// </param>
        /// <param name='configurationName'>
        /// Required. The type name of the hadoop congfiguration.
        /// </param>
        /// <returns>
        /// The Cluster Configurations operation response.
        /// </returns>
        public static Task<ClusterConfigurationsResponse> GetClusterConfigurationsAsync(this IClusterOperations operations, string resourceGroupName, string clusterName, string configurationName)
        {
            return operations.GetClusterConfigurationsAsync(resourceGroupName, clusterName, configurationName, CancellationToken.None);
        }
        
        /// <summary>
        /// Gets the connectivity settings for the specified cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='clusterName'>
        /// Required. The name of the cluster.
        /// </param>
        /// <returns>
        /// The payload for a Configure HTTP settings request.
        /// </returns>
        public static HttpConnectivitySettings GetConnectivitySettings(this IClusterOperations operations, string resourceGroupName, string clusterName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IClusterOperations)s).GetConnectivitySettingsAsync(resourceGroupName, clusterName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Gets the connectivity settings for the specified cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='clusterName'>
        /// Required. The name of the cluster.
        /// </param>
        /// <returns>
        /// The payload for a Configure HTTP settings request.
        /// </returns>
        public static Task<HttpConnectivitySettings> GetConnectivitySettingsAsync(this IClusterOperations operations, string resourceGroupName, string clusterName)
        {
            return operations.GetConnectivitySettingsAsync(resourceGroupName, clusterName, CancellationToken.None);
        }
        
        /// <summary>
        /// Gets the status of the Create operation.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='operationStatusLink'>
        /// Required. Location value returned by the Begin operation.
        /// </param>
        /// <returns>
        /// The GetCluster operation response.
        /// </returns>
        public static ClusterGetResponse GetCreateStatus(this IClusterOperations operations, string operationStatusLink)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IClusterOperations)s).GetCreateStatusAsync(operationStatusLink);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Gets the status of the Create operation.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='operationStatusLink'>
        /// Required. Location value returned by the Begin operation.
        /// </param>
        /// <returns>
        /// The GetCluster operation response.
        /// </returns>
        public static Task<ClusterGetResponse> GetCreateStatusAsync(this IClusterOperations operations, string operationStatusLink)
        {
            return operations.GetCreateStatusAsync(operationStatusLink, CancellationToken.None);
        }
        
        /// <summary>
        /// Gets the status of the Delete operation.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='operationStatusLink'>
        /// Required. Location value returned by the Begin operation.
        /// </param>
        /// <returns>
        /// The GetCluster operation response.
        /// </returns>
        public static ClusterGetResponse GetDeleteStatus(this IClusterOperations operations, string operationStatusLink)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IClusterOperations)s).GetDeleteStatusAsync(operationStatusLink);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Gets the status of the Delete operation.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='operationStatusLink'>
        /// Required. Location value returned by the Begin operation.
        /// </param>
        /// <returns>
        /// The GetCluster operation response.
        /// </returns>
        public static Task<ClusterGetResponse> GetDeleteStatusAsync(this IClusterOperations operations, string operationStatusLink)
        {
            return operations.GetDeleteStatusAsync(operationStatusLink, CancellationToken.None);
        }
        
        /// <summary>
        /// Lists HDInsight clusters under the subscription.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <returns>
        /// The List Cluster operation response.
        /// </returns>
        public static ClusterListResponse List(this IClusterOperations operations)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IClusterOperations)s).ListAsync();
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Lists HDInsight clusters under the subscription.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <returns>
        /// The List Cluster operation response.
        /// </returns>
        public static Task<ClusterListResponse> ListAsync(this IClusterOperations operations)
        {
            return operations.ListAsync(CancellationToken.None);
        }
        
        /// <summary>
        /// List the HDInsight clusters in a resource group.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <returns>
        /// The List Cluster operation response.
        /// </returns>
        public static ClusterListResponse ListByResourceGroup(this IClusterOperations operations, string resourceGroupName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IClusterOperations)s).ListByResourceGroupAsync(resourceGroupName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// List the HDInsight clusters in a resource group.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <returns>
        /// The List Cluster operation response.
        /// </returns>
        public static Task<ClusterListResponse> ListByResourceGroupAsync(this IClusterOperations operations, string resourceGroupName)
        {
            return operations.ListByResourceGroupAsync(resourceGroupName, CancellationToken.None);
        }
        
        /// <summary>
        /// Resizes the specified HDInsight cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='clusterName'>
        /// Required. The name of the cluster.
        /// </param>
        /// <param name='resizeParameters'>
        /// Required. The parameters for the resize operation.
        /// </param>
        /// <returns>
        /// The cluster long running operation response.
        /// </returns>
        public static HDInsightLongRunningOperationResponse Resize(this IClusterOperations operations, string resourceGroupName, string clusterName, ClusterResizeParameters resizeParameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IClusterOperations)s).ResizeAsync(resourceGroupName, clusterName, resizeParameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Resizes the specified HDInsight cluster.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.HDInsight.IClusterOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='clusterName'>
        /// Required. The name of the cluster.
        /// </param>
        /// <param name='resizeParameters'>
        /// Required. The parameters for the resize operation.
        /// </param>
        /// <returns>
        /// The cluster long running operation response.
        /// </returns>
        public static Task<HDInsightLongRunningOperationResponse> ResizeAsync(this IClusterOperations operations, string resourceGroupName, string clusterName, ClusterResizeParameters resizeParameters)
        {
            return operations.ResizeAsync(resourceGroupName, clusterName, resizeParameters, CancellationToken.None);
        }
    }
}
