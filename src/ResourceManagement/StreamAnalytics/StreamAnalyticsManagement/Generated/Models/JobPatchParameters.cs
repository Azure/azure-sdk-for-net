// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using Microsoft.Azure.Management.StreamAnalytics.Models;

namespace Microsoft.Azure.Management.StreamAnalytics.Models
{
    /// <summary>
    /// Parameters specifying the stream analytics job definition for a patch
    /// operation.
    /// </summary>
    public partial class JobPatchParameters
    {
        private JobPatchRequest _jobPatchRequest;
        
        /// <summary>
        /// Required. Gets or sets the definition of the stream analytics job
        /// to be patched.
        /// </summary>
        public JobPatchRequest JobPatchRequest
        {
            get { return this._jobPatchRequest; }
            set { this._jobPatchRequest = value; }
        }
        
        private string _jobStateIfMatch;
        
        /// <summary>
        /// Optional. Gets or sets the If-None-Match. Use If-None-Match: * to
        /// give PUT create-only semantics â€“ to make create fail if the named
        /// resource exists. Without it, PUT replaces the named resource if it
        /// exists.
        /// </summary>
        public string JobStateIfMatch
        {
            get { return this._jobStateIfMatch; }
            set { this._jobStateIfMatch = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the JobPatchParameters class.
        /// </summary>
        public JobPatchParameters()
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the JobPatchParameters class with
        /// required arguments.
        /// </summary>
        public JobPatchParameters(JobPatchRequest jobPatchRequest)
            : this()
        {
            if (jobPatchRequest == null)
            {
                throw new ArgumentNullException("jobPatchRequest");
            }
            this.JobPatchRequest = jobPatchRequest;
        }
    }
}
