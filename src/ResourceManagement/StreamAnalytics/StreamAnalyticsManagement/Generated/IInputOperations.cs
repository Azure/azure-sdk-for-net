// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure.Management.StreamAnalytics.Models;

namespace Microsoft.Azure.Management.StreamAnalytics
{
    /// <summary>
    /// Operations for managing the input of the stream analytics job.
    /// </summary>
    public partial interface IInputOperations
    {
        /// <summary>
        /// Test the connectivity of an input for a stream analytics job.
        /// Asynchronous call.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// The name of the stream analytics job.
        /// </param>
        /// <param name='inputName'>
        /// The input name of the stream analytics job.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The test result of the input or output data source.
        /// </returns>
        Task<DataSourceTestConnectionResponse> BeginTestConnectionAsync(string resourceGroupName, string jobName, string inputName, CancellationToken cancellationToken);
        
        /// <summary>
        /// Create or update an input for a stream analytics job.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// The name of the stream analytics job.
        /// </param>
        /// <param name='parameters'>
        /// The parameters required to create or update an input for a stream
        /// analytics job.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response of the input CreateOrUpdate operation.
        /// </returns>
        Task<InputCreateOrUpdateResponse> CreateOrUpdateAsync(string resourceGroupName, string jobName, InputCreateOrUpdateParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// Create or update an input for a stream analytics job. The raw json
        /// content will be used.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// The name of the stream analytics job.
        /// </param>
        /// <param name='inputName'>
        /// The name of the input for the stream analytics job.
        /// </param>
        /// <param name='parameters'>
        /// The parameters required to create or update an input for a stream
        /// analytics job.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response of the input CreateOrUpdate operation.
        /// </returns>
        Task<InputCreateOrUpdateResponse> CreateOrUpdateWithRawJsonContentAsync(string resourceGroupName, string jobName, string inputName, InputCreateOrUpdateWithRawJsonContentParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// Delete an input for a stream analytics job.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// The name of the stream analytics job.
        /// </param>
        /// <param name='inputName'>
        /// The name of the input for the stream analytics job.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The common operation response.
        /// </returns>
        Task<CommonOperationResponse> DeleteAsync(string resourceGroupName, string jobName, string inputName, CancellationToken cancellationToken);
        
        /// <summary>
        /// Get an input for a stream analytics job.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// The name of the stream analytics job.
        /// </param>
        /// <param name='inputName'>
        /// The name of the input for the stream analytics job.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response of the get stream analytics intput operation.
        /// </returns>
        Task<InputGetResponse> GetAsync(string resourceGroupName, string jobName, string inputName, CancellationToken cancellationToken);
        
        /// <summary>
        /// Get a list of the inputs defined in a stream analytics job.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// The name of the stream analytics job.
        /// </param>
        /// <param name='parameters'>
        /// The parameters required to list all the inputs in the specified
        /// stream analytics job.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response of the input list operation.
        /// </returns>
        Task<InputListResponse> ListInputInJobAsync(string resourceGroupName, string jobName, InputListParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// Update an input for a stream analytics job.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// The name of the stream analytics job.
        /// </param>
        /// <param name='inputName'>
        /// The name of the input for the stream analytics job.
        /// </param>
        /// <param name='parameters'>
        /// The parameters required to update an input for a stream analytics
        /// job.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response of the input patch operation.
        /// </returns>
        Task<InputPatchResponse> PatchAsync(string resourceGroupName, string jobName, string inputName, InputPatchParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// Test the connectivity of an input for a stream analytics job.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// The name of the stream analytics job.
        /// </param>
        /// <param name='inputName'>
        /// The input name of the stream analytics job.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The test result of the input or output data source.
        /// </returns>
        Task<DataSourceTestConnectionResponse> TestConnectionAsync(string resourceGroupName, string jobName, string inputName, CancellationToken cancellationToken);
    }
}
