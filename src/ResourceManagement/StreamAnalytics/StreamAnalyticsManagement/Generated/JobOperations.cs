// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using System.Globalization;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Hyak.Common;
using Hyak.Common.Internals;
using Microsoft.Azure;
using Microsoft.Azure.Management.StreamAnalytics;
using Microsoft.Azure.Management.StreamAnalytics.Models;
using Newtonsoft.Json.Linq;

namespace Microsoft.Azure.Management.StreamAnalytics
{
    /// <summary>
    /// Operations for managing the stream analytics job.
    /// </summary>
    internal partial class JobOperations : IServiceOperations<StreamAnalyticsManagementClient>, IJobOperations
    {
        /// <summary>
        /// Initializes a new instance of the JobOperations class.
        /// </summary>
        /// <param name='client'>
        /// Reference to the service client.
        /// </param>
        internal JobOperations(StreamAnalyticsManagementClient client)
        {
            this._client = client;
        }
        
        private StreamAnalyticsManagementClient _client;
        
        /// <summary>
        /// Gets a reference to the
        /// Microsoft.Azure.Management.StreamAnalytics.StreamAnalyticsManagementClient.
        /// </summary>
        public StreamAnalyticsManagementClient Client
        {
            get { return this._client; }
        }
        
        /// <summary>
        /// Delete a stream analytics job.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// Required. The name of the stream analytics job.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public async Task<LongRunningOperationResponse> BeginDeleteAsync(string resourceGroupName, string jobName, CancellationToken cancellationToken)
        {
            // Validate
            if (resourceGroupName == null)
            {
                throw new ArgumentNullException("resourceGroupName");
            }
            if (jobName == null)
            {
                throw new ArgumentNullException("jobName");
            }
            
            // Tracing
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("resourceGroupName", resourceGroupName);
                tracingParameters.Add("jobName", jobName);
                TracingAdapter.Enter(invocationId, this, "BeginDeleteAsync", tracingParameters);
            }
            
            // Construct URL
            string url = "";
            url = url + "/subscriptions/";
            if (this.Client.Credentials.SubscriptionId != null)
            {
                url = url + Uri.EscapeDataString(this.Client.Credentials.SubscriptionId);
            }
            url = url + "/resourcegroups/";
            url = url + Uri.EscapeDataString(resourceGroupName);
            url = url + "/providers/Microsoft.StreamAnalytics/streamingjobs/";
            url = url + Uri.EscapeDataString(jobName);
            List<string> queryParameters = new List<string>();
            queryParameters.Add("api-version=2015-04-01");
            if (queryParameters.Count > 0)
            {
                url = url + "?" + string.Join("&", queryParameters);
            }
            string baseUrl = this.Client.BaseUri.AbsoluteUri;
            // Trim '/' character from the end of baseUrl and beginning of url.
            if (baseUrl[baseUrl.Length - 1] == '/')
            {
                baseUrl = baseUrl.Substring(0, baseUrl.Length - 1);
            }
            if (url[0] == '/')
            {
                url = url.Substring(1);
            }
            url = baseUrl + "/" + url;
            url = url.Replace(" ", "%20");
            
            // Create HTTP transport objects
            HttpRequestMessage httpRequest = null;
            try
            {
                httpRequest = new HttpRequestMessage();
                httpRequest.Method = HttpMethod.Delete;
                httpRequest.RequestUri = new Uri(url);
                
                // Set Headers
                httpRequest.Headers.Add("x-ms-client-request-id", Guid.NewGuid().ToString());
                
                // Set Credentials
                cancellationToken.ThrowIfCancellationRequested();
                await this.Client.Credentials.ProcessHttpRequestAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                
                // Send Request
                HttpResponseMessage httpResponse = null;
                try
                {
                    if (shouldTrace)
                    {
                        TracingAdapter.SendRequest(invocationId, httpRequest);
                    }
                    cancellationToken.ThrowIfCancellationRequested();
                    httpResponse = await this.Client.HttpClient.SendAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                    if (shouldTrace)
                    {
                        TracingAdapter.ReceiveResponse(invocationId, httpResponse);
                    }
                    HttpStatusCode statusCode = httpResponse.StatusCode;
                    if (statusCode != HttpStatusCode.OK && statusCode != HttpStatusCode.Accepted && statusCode != HttpStatusCode.NoContent)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        CloudException ex = CloudException.Create(httpRequest, null, httpResponse, await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false));
                        if (shouldTrace)
                        {
                            TracingAdapter.Error(invocationId, ex);
                        }
                        throw ex;
                    }
                    
                    // Create Result
                    LongRunningOperationResponse result = null;
                    // Deserialize Response
                    result = new LongRunningOperationResponse();
                    result.StatusCode = statusCode;
                    if (httpResponse.Headers.Contains("Location"))
                    {
                        result.OperationStatusLink = httpResponse.Headers.GetValues("Location").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Retry-After"))
                    {
                        result.RetryAfter = int.Parse(httpResponse.Headers.GetValues("Retry-After").FirstOrDefault(), CultureInfo.InvariantCulture);
                    }
                    if (httpResponse.Headers.Contains("x-ms-request-id"))
                    {
                        result.RequestId = httpResponse.Headers.GetValues("x-ms-request-id").FirstOrDefault();
                    }
                    if (statusCode == HttpStatusCode.NotFound)
                    {
                        result.Status = OperationStatus.Failed;
                    }
                    if (statusCode == HttpStatusCode.Conflict)
                    {
                        result.Status = OperationStatus.Failed;
                    }
                    if (statusCode == HttpStatusCode.PreconditionFailed)
                    {
                        result.Status = OperationStatus.Failed;
                    }
                    if (statusCode == HttpStatusCode.NoContent)
                    {
                        result.Status = OperationStatus.Succeeded;
                    }
                    if (statusCode == HttpStatusCode.OK)
                    {
                        result.Status = OperationStatus.Succeeded;
                    }
                    
                    if (shouldTrace)
                    {
                        TracingAdapter.Exit(invocationId, result);
                    }
                    return result;
                }
                finally
                {
                    if (httpResponse != null)
                    {
                        httpResponse.Dispose();
                    }
                }
            }
            finally
            {
                if (httpRequest != null)
                {
                    httpRequest.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Start a stream analytics job. Asynchronous call.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// Required. The name of the stream analytics job.
        /// </param>
        /// <param name='parameters'>
        /// Optional. Parameters for a job start operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public async Task<LongRunningOperationResponse> BeginStartAsync(string resourceGroupName, string jobName, JobStartParameters parameters, CancellationToken cancellationToken)
        {
            // Validate
            if (resourceGroupName == null)
            {
                throw new ArgumentNullException("resourceGroupName");
            }
            if (jobName == null)
            {
                throw new ArgumentNullException("jobName");
            }
            
            // Tracing
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("resourceGroupName", resourceGroupName);
                tracingParameters.Add("jobName", jobName);
                tracingParameters.Add("parameters", parameters);
                TracingAdapter.Enter(invocationId, this, "BeginStartAsync", tracingParameters);
            }
            
            // Construct URL
            string url = "";
            url = url + "/subscriptions/";
            if (this.Client.Credentials.SubscriptionId != null)
            {
                url = url + Uri.EscapeDataString(this.Client.Credentials.SubscriptionId);
            }
            url = url + "/resourcegroups/";
            url = url + Uri.EscapeDataString(resourceGroupName);
            url = url + "/providers/Microsoft.StreamAnalytics/streamingjobs/";
            url = url + Uri.EscapeDataString(jobName);
            url = url + "/start";
            List<string> queryParameters = new List<string>();
            queryParameters.Add("api-version=2015-04-01");
            if (queryParameters.Count > 0)
            {
                url = url + "?" + string.Join("&", queryParameters);
            }
            string baseUrl = this.Client.BaseUri.AbsoluteUri;
            // Trim '/' character from the end of baseUrl and beginning of url.
            if (baseUrl[baseUrl.Length - 1] == '/')
            {
                baseUrl = baseUrl.Substring(0, baseUrl.Length - 1);
            }
            if (url[0] == '/')
            {
                url = url.Substring(1);
            }
            url = baseUrl + "/" + url;
            url = url.Replace(" ", "%20");
            
            // Create HTTP transport objects
            HttpRequestMessage httpRequest = null;
            try
            {
                httpRequest = new HttpRequestMessage();
                httpRequest.Method = HttpMethod.Post;
                httpRequest.RequestUri = new Uri(url);
                
                // Set Headers
                httpRequest.Headers.Add("x-ms-client-request-id", Guid.NewGuid().ToString());
                
                // Set Credentials
                cancellationToken.ThrowIfCancellationRequested();
                await this.Client.Credentials.ProcessHttpRequestAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                
                // Serialize Request
                string requestContent = null;
                JToken requestDoc = null;
                
                if (parameters != null)
                {
                    JObject jobStartParametersValue = new JObject();
                    requestDoc = jobStartParametersValue;
                    
                    if (parameters.OutputStartMode != null)
                    {
                        jobStartParametersValue["outputStartMode"] = parameters.OutputStartMode;
                    }
                    
                    if (parameters.OutputStartTime != null)
                    {
                        jobStartParametersValue["outputStartTime"] = parameters.OutputStartTime.Value;
                    }
                }
                
                requestContent = requestDoc.ToString(Newtonsoft.Json.Formatting.Indented);
                httpRequest.Content = new StringContent(requestContent, Encoding.UTF8);
                httpRequest.Content.Headers.ContentType = MediaTypeHeaderValue.Parse("application/json");
                
                // Send Request
                HttpResponseMessage httpResponse = null;
                try
                {
                    if (shouldTrace)
                    {
                        TracingAdapter.SendRequest(invocationId, httpRequest);
                    }
                    cancellationToken.ThrowIfCancellationRequested();
                    httpResponse = await this.Client.HttpClient.SendAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                    if (shouldTrace)
                    {
                        TracingAdapter.ReceiveResponse(invocationId, httpResponse);
                    }
                    HttpStatusCode statusCode = httpResponse.StatusCode;
                    if (statusCode != HttpStatusCode.OK && statusCode != HttpStatusCode.Accepted && statusCode != HttpStatusCode.NotFound && statusCode != HttpStatusCode.Conflict && statusCode != HttpStatusCode.PreconditionFailed)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        CloudException ex = CloudException.Create(httpRequest, requestContent, httpResponse, await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false));
                        if (shouldTrace)
                        {
                            TracingAdapter.Error(invocationId, ex);
                        }
                        throw ex;
                    }
                    
                    // Create Result
                    LongRunningOperationResponse result = null;
                    // Deserialize Response
                    result = new LongRunningOperationResponse();
                    result.StatusCode = statusCode;
                    if (httpResponse.Headers.Contains("Location"))
                    {
                        result.OperationStatusLink = httpResponse.Headers.GetValues("Location").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Retry-After"))
                    {
                        result.RetryAfter = int.Parse(httpResponse.Headers.GetValues("Retry-After").FirstOrDefault(), CultureInfo.InvariantCulture);
                    }
                    if (httpResponse.Headers.Contains("x-ms-request-id"))
                    {
                        result.RequestId = httpResponse.Headers.GetValues("x-ms-request-id").FirstOrDefault();
                    }
                    if (statusCode == HttpStatusCode.NotFound)
                    {
                        result.Status = OperationStatus.Failed;
                    }
                    if (statusCode == HttpStatusCode.Conflict)
                    {
                        result.Status = OperationStatus.Failed;
                    }
                    if (statusCode == HttpStatusCode.PreconditionFailed)
                    {
                        result.Status = OperationStatus.Failed;
                    }
                    if (statusCode == HttpStatusCode.OK)
                    {
                        result.Status = OperationStatus.Succeeded;
                    }
                    
                    if (shouldTrace)
                    {
                        TracingAdapter.Exit(invocationId, result);
                    }
                    return result;
                }
                finally
                {
                    if (httpResponse != null)
                    {
                        httpResponse.Dispose();
                    }
                }
            }
            finally
            {
                if (httpRequest != null)
                {
                    httpRequest.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Stop a stream analytics job. Asynchronous call.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// Required. The name of the stream analytics job.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public async Task<LongRunningOperationResponse> BeginStopAsync(string resourceGroupName, string jobName, CancellationToken cancellationToken)
        {
            // Validate
            if (resourceGroupName == null)
            {
                throw new ArgumentNullException("resourceGroupName");
            }
            if (jobName == null)
            {
                throw new ArgumentNullException("jobName");
            }
            
            // Tracing
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("resourceGroupName", resourceGroupName);
                tracingParameters.Add("jobName", jobName);
                TracingAdapter.Enter(invocationId, this, "BeginStopAsync", tracingParameters);
            }
            
            // Construct URL
            string url = "";
            url = url + "/subscriptions/";
            if (this.Client.Credentials.SubscriptionId != null)
            {
                url = url + Uri.EscapeDataString(this.Client.Credentials.SubscriptionId);
            }
            url = url + "/resourcegroups/";
            url = url + Uri.EscapeDataString(resourceGroupName);
            url = url + "/providers/Microsoft.StreamAnalytics/streamingjobs/";
            url = url + Uri.EscapeDataString(jobName);
            url = url + "/stop";
            List<string> queryParameters = new List<string>();
            queryParameters.Add("api-version=2015-04-01");
            if (queryParameters.Count > 0)
            {
                url = url + "?" + string.Join("&", queryParameters);
            }
            string baseUrl = this.Client.BaseUri.AbsoluteUri;
            // Trim '/' character from the end of baseUrl and beginning of url.
            if (baseUrl[baseUrl.Length - 1] == '/')
            {
                baseUrl = baseUrl.Substring(0, baseUrl.Length - 1);
            }
            if (url[0] == '/')
            {
                url = url.Substring(1);
            }
            url = baseUrl + "/" + url;
            url = url.Replace(" ", "%20");
            
            // Create HTTP transport objects
            HttpRequestMessage httpRequest = null;
            try
            {
                httpRequest = new HttpRequestMessage();
                httpRequest.Method = HttpMethod.Post;
                httpRequest.RequestUri = new Uri(url);
                
                // Set Headers
                httpRequest.Headers.Add("x-ms-client-request-id", Guid.NewGuid().ToString());
                
                // Set Credentials
                cancellationToken.ThrowIfCancellationRequested();
                await this.Client.Credentials.ProcessHttpRequestAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                
                // Send Request
                HttpResponseMessage httpResponse = null;
                try
                {
                    if (shouldTrace)
                    {
                        TracingAdapter.SendRequest(invocationId, httpRequest);
                    }
                    cancellationToken.ThrowIfCancellationRequested();
                    httpResponse = await this.Client.HttpClient.SendAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                    if (shouldTrace)
                    {
                        TracingAdapter.ReceiveResponse(invocationId, httpResponse);
                    }
                    HttpStatusCode statusCode = httpResponse.StatusCode;
                    if (statusCode != HttpStatusCode.OK && statusCode != HttpStatusCode.Accepted)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        CloudException ex = CloudException.Create(httpRequest, null, httpResponse, await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false));
                        if (shouldTrace)
                        {
                            TracingAdapter.Error(invocationId, ex);
                        }
                        throw ex;
                    }
                    
                    // Create Result
                    LongRunningOperationResponse result = null;
                    // Deserialize Response
                    result = new LongRunningOperationResponse();
                    result.StatusCode = statusCode;
                    if (httpResponse.Headers.Contains("Location"))
                    {
                        result.OperationStatusLink = httpResponse.Headers.GetValues("Location").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("Retry-After"))
                    {
                        result.RetryAfter = int.Parse(httpResponse.Headers.GetValues("Retry-After").FirstOrDefault(), CultureInfo.InvariantCulture);
                    }
                    if (httpResponse.Headers.Contains("x-ms-request-id"))
                    {
                        result.RequestId = httpResponse.Headers.GetValues("x-ms-request-id").FirstOrDefault();
                    }
                    if (statusCode == HttpStatusCode.PreconditionFailed)
                    {
                        result.Status = OperationStatus.Failed;
                    }
                    if (statusCode == HttpStatusCode.NotFound)
                    {
                        result.Status = OperationStatus.Failed;
                    }
                    if (statusCode == HttpStatusCode.Conflict)
                    {
                        result.Status = OperationStatus.Failed;
                    }
                    if (statusCode == HttpStatusCode.OK)
                    {
                        result.Status = OperationStatus.Succeeded;
                    }
                    
                    if (shouldTrace)
                    {
                        TracingAdapter.Exit(invocationId, result);
                    }
                    return result;
                }
                finally
                {
                    if (httpResponse != null)
                    {
                        httpResponse.Dispose();
                    }
                }
            }
            finally
            {
                if (httpRequest != null)
                {
                    httpRequest.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Create or update a stream analytics job.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the stream analytics job.
        /// </param>
        /// <param name='parameters'>
        /// Required. The parameters required to create or update a stream
        /// analytics job.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response of the create stream analytics job operation.
        /// </returns>
        public async Task<JobCreateOrUpdateResponse> CreateOrUpdateAsync(string resourceGroupName, JobCreateOrUpdateParameters parameters, CancellationToken cancellationToken)
        {
            // Validate
            if (resourceGroupName == null)
            {
                throw new ArgumentNullException("resourceGroupName");
            }
            if (parameters == null)
            {
                throw new ArgumentNullException("parameters");
            }
            if (parameters.Job == null)
            {
                throw new ArgumentNullException("parameters.Job");
            }
            if (parameters.Job.Name == null)
            {
                throw new ArgumentNullException("parameters.Job.Name");
            }
            if (parameters.Job.Properties == null)
            {
                throw new ArgumentNullException("parameters.Job.Properties");
            }
            if (parameters.Job.Properties.Inputs != null)
            {
                foreach (Input inputsParameterItem in parameters.Job.Properties.Inputs)
                {
                    if (inputsParameterItem.Name == null)
                    {
                        throw new ArgumentNullException("parameters.Job.Properties.Inputs.Name");
                    }
                }
            }
            if (parameters.Job.Properties.Outputs != null)
            {
                foreach (Output outputsParameterItem in parameters.Job.Properties.Outputs)
                {
                    if (outputsParameterItem.Name == null)
                    {
                        throw new ArgumentNullException("parameters.Job.Properties.Outputs.Name");
                    }
                }
            }
            if (parameters.Job.Properties.Transformation != null)
            {
                if (parameters.Job.Properties.Transformation.Name == null)
                {
                    throw new ArgumentNullException("parameters.Job.Properties.Transformation.Name");
                }
            }
            
            // Tracing
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("resourceGroupName", resourceGroupName);
                tracingParameters.Add("parameters", parameters);
                TracingAdapter.Enter(invocationId, this, "CreateOrUpdateAsync", tracingParameters);
            }
            
            // Construct URL
            string url = "";
            url = url + "/subscriptions/";
            if (this.Client.Credentials.SubscriptionId != null)
            {
                url = url + Uri.EscapeDataString(this.Client.Credentials.SubscriptionId);
            }
            url = url + "/resourcegroups/";
            url = url + Uri.EscapeDataString(resourceGroupName);
            url = url + "/providers/Microsoft.StreamAnalytics/streamingjobs/";
            url = url + Uri.EscapeDataString(parameters.Job.Name);
            List<string> queryParameters = new List<string>();
            queryParameters.Add("api-version=2015-04-01");
            if (queryParameters.Count > 0)
            {
                url = url + "?" + string.Join("&", queryParameters);
            }
            string baseUrl = this.Client.BaseUri.AbsoluteUri;
            // Trim '/' character from the end of baseUrl and beginning of url.
            if (baseUrl[baseUrl.Length - 1] == '/')
            {
                baseUrl = baseUrl.Substring(0, baseUrl.Length - 1);
            }
            if (url[0] == '/')
            {
                url = url.Substring(1);
            }
            url = baseUrl + "/" + url;
            url = url.Replace(" ", "%20");
            
            // Create HTTP transport objects
            HttpRequestMessage httpRequest = null;
            try
            {
                httpRequest = new HttpRequestMessage();
                httpRequest.Method = HttpMethod.Put;
                httpRequest.RequestUri = new Uri(url);
                
                // Set Headers
                httpRequest.Headers.Add("If-None-Match", parameters.IfNoneMatch);
                httpRequest.Headers.Add("x-ms-client-request-id", Guid.NewGuid().ToString());
                
                // Set Credentials
                cancellationToken.ThrowIfCancellationRequested();
                await this.Client.Credentials.ProcessHttpRequestAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                
                // Serialize Request
                string requestContent = null;
                JToken requestDoc = null;
                
                JObject jobCreateOrUpdateParametersValue = new JObject();
                requestDoc = jobCreateOrUpdateParametersValue;
                
                if (parameters.IfNoneMatch != null)
                {
                    jobCreateOrUpdateParametersValue["IfNoneMatch"] = JObject.Parse(parameters.IfNoneMatch);
                }
                
                if (parameters.Job.Id != null)
                {
                    jobCreateOrUpdateParametersValue["id"] = parameters.Job.Id;
                }
                
                jobCreateOrUpdateParametersValue["name"] = parameters.Job.Name;
                
                if (parameters.Job.Type != null)
                {
                    jobCreateOrUpdateParametersValue["type"] = parameters.Job.Type;
                }
                
                if (parameters.Job.Location != null)
                {
                    jobCreateOrUpdateParametersValue["location"] = parameters.Job.Location;
                }
                
                if (parameters.Job.Tags != null)
                {
                    if (parameters.Job.Tags is ILazyCollection == false || ((ILazyCollection)parameters.Job.Tags).IsInitialized)
                    {
                        JObject tagsDictionary = new JObject();
                        foreach (KeyValuePair<string, string> pair in parameters.Job.Tags)
                        {
                            string tagsKey = pair.Key;
                            string tagsValue = pair.Value;
                            tagsDictionary[tagsKey] = tagsValue;
                        }
                        jobCreateOrUpdateParametersValue["tags"] = tagsDictionary;
                    }
                }
                
                JObject propertiesValue = new JObject();
                jobCreateOrUpdateParametersValue["properties"] = propertiesValue;
                
                if (parameters.Job.Properties.Sku != null)
                {
                    JObject skuValue = new JObject();
                    propertiesValue["sku"] = skuValue;
                    
                    if (parameters.Job.Properties.Sku.Name != null)
                    {
                        skuValue["name"] = parameters.Job.Properties.Sku.Name;
                    }
                }
                
                if (parameters.Job.Properties.EventsOutOfOrderPolicy != null)
                {
                    propertiesValue["eventsOutOfOrderPolicy"] = parameters.Job.Properties.EventsOutOfOrderPolicy;
                }
                
                if (parameters.Job.Properties.EventsOutOfOrderMaxDelayInSeconds != null)
                {
                    propertiesValue["eventsOutOfOrderMaxDelayInSeconds"] = parameters.Job.Properties.EventsOutOfOrderMaxDelayInSeconds.Value;
                }
                
                if (parameters.Job.Properties.EventsLateArrivalMaxDelayInSeconds != null)
                {
                    propertiesValue["eventsLateArrivalMaxDelayInSeconds"] = parameters.Job.Properties.EventsLateArrivalMaxDelayInSeconds.Value;
                }
                
                if (parameters.Job.Properties.DataLocale != null)
                {
                    propertiesValue["dataLocale"] = parameters.Job.Properties.DataLocale;
                }
                
                if (parameters.Job.Properties.OutputStartMode != null)
                {
                    propertiesValue["outputStartMode"] = parameters.Job.Properties.OutputStartMode;
                }
                
                if (parameters.Job.Properties.OutputStartTime != null)
                {
                    propertiesValue["outputStartTime"] = parameters.Job.Properties.OutputStartTime.Value;
                }
                
                if (parameters.Job.Properties.LastOutputEventTime != null)
                {
                    propertiesValue["lastOutputEventTime"] = parameters.Job.Properties.LastOutputEventTime.Value;
                }
                
                if (parameters.Job.Properties.JobId != null)
                {
                    propertiesValue["jobId"] = parameters.Job.Properties.JobId;
                }
                
                if (parameters.Job.Properties.Etag != null)
                {
                    propertiesValue["etag"] = parameters.Job.Properties.Etag;
                }
                
                if (parameters.Job.Properties.ProvisioningState != null)
                {
                    propertiesValue["provisioningState"] = parameters.Job.Properties.ProvisioningState;
                }
                
                if (parameters.Job.Properties.JobState != null)
                {
                    propertiesValue["jobState"] = parameters.Job.Properties.JobState;
                }
                
                if (parameters.Job.Properties.CreatedDate != null)
                {
                    propertiesValue["createdDate"] = parameters.Job.Properties.CreatedDate.Value;
                }
                
                if (parameters.Job.Properties.Inputs != null)
                {
                    if (parameters.Job.Properties.Inputs is ILazyCollection == false || ((ILazyCollection)parameters.Job.Properties.Inputs).IsInitialized)
                    {
                        JArray inputsArray = new JArray();
                        foreach (Input inputsItem in parameters.Job.Properties.Inputs)
                        {
                            JObject inputValue = new JObject();
                            inputsArray.Add(inputValue);
                            
                            inputValue["name"] = inputsItem.Name;
                            
                            if (inputsItem.Properties != null)
                            {
                                JObject propertiesValue2 = new JObject();
                                inputValue["properties"] = propertiesValue2;
                                if (inputsItem.Properties is ReferenceInputProperties)
                                {
                                    propertiesValue2["type"] = "Reference";
                                    ReferenceInputProperties derived = ((ReferenceInputProperties)inputsItem.Properties);
                                    
                                    if (derived.DataSource != null)
                                    {
                                        JObject datasourceValue = new JObject();
                                        propertiesValue2["datasource"] = datasourceValue;
                                        if (derived.DataSource is BlobReferenceInputDataSource)
                                        {
                                            datasourceValue["type"] = "Microsoft.Storage/Blob";
                                            BlobReferenceInputDataSource derived2 = ((BlobReferenceInputDataSource)derived.DataSource);
                                            
                                            if (derived2.Properties != null)
                                            {
                                                JObject propertiesValue3 = new JObject();
                                                datasourceValue["properties"] = propertiesValue3;
                                                
                                                if (derived2.Properties.StorageAccounts != null)
                                                {
                                                    if (derived2.Properties.StorageAccounts is ILazyCollection == false || ((ILazyCollection)derived2.Properties.StorageAccounts).IsInitialized)
                                                    {
                                                        JArray storageAccountsArray = new JArray();
                                                        foreach (StorageAccount storageAccountsItem in derived2.Properties.StorageAccounts)
                                                        {
                                                            JObject storageAccountValue = new JObject();
                                                            storageAccountsArray.Add(storageAccountValue);
                                                            
                                                            if (storageAccountsItem.AccountName != null)
                                                            {
                                                                storageAccountValue["accountName"] = storageAccountsItem.AccountName;
                                                            }
                                                            
                                                            if (storageAccountsItem.AccountKey != null)
                                                            {
                                                                storageAccountValue["accountKey"] = storageAccountsItem.AccountKey;
                                                            }
                                                        }
                                                        propertiesValue3["storageAccounts"] = storageAccountsArray;
                                                    }
                                                }
                                                
                                                if (derived2.Properties.Container != null)
                                                {
                                                    propertiesValue3["container"] = derived2.Properties.Container;
                                                }
                                                
                                                if (derived2.Properties.PathPattern != null)
                                                {
                                                    propertiesValue3["pathPattern"] = derived2.Properties.PathPattern;
                                                }
                                                
                                                if (derived2.Properties.DateFormat != null)
                                                {
                                                    propertiesValue3["dateFormat"] = derived2.Properties.DateFormat;
                                                }
                                                
                                                if (derived2.Properties.TimeFormat != null)
                                                {
                                                    propertiesValue3["timeFormat"] = derived2.Properties.TimeFormat;
                                                }
                                            }
                                            
                                            if (derived2.Type != null)
                                            {
                                                datasourceValue["type"] = derived2.Type;
                                            }
                                        }
                                    }
                                    
                                    if (derived.Etag != null)
                                    {
                                        propertiesValue2["etag"] = derived.Etag;
                                    }
                                    
                                    if (derived.Type != null)
                                    {
                                        propertiesValue2["type"] = derived.Type;
                                    }
                                    
                                    if (derived.Serialization != null)
                                    {
                                        JObject serializationValue = new JObject();
                                        propertiesValue2["serialization"] = serializationValue;
                                        if (derived.Serialization is CsvSerialization)
                                        {
                                            serializationValue["type"] = "Csv";
                                            CsvSerialization derived3 = ((CsvSerialization)derived.Serialization);
                                            
                                            if (derived3.Properties != null)
                                            {
                                                JObject propertiesValue4 = new JObject();
                                                serializationValue["properties"] = propertiesValue4;
                                                
                                                if (derived3.Properties.FieldDelimiter != null)
                                                {
                                                    propertiesValue4["fieldDelimiter"] = derived3.Properties.FieldDelimiter;
                                                }
                                                
                                                if (derived3.Properties.Encoding != null)
                                                {
                                                    propertiesValue4["encoding"] = derived3.Properties.Encoding;
                                                }
                                            }
                                            
                                            if (derived3.Type != null)
                                            {
                                                serializationValue["type"] = derived3.Type;
                                            }
                                        }
                                        if (derived.Serialization is JsonSerialization)
                                        {
                                            serializationValue["type"] = "Json";
                                            JsonSerialization derived4 = ((JsonSerialization)derived.Serialization);
                                            
                                            if (derived4.Properties != null)
                                            {
                                                JObject propertiesValue5 = new JObject();
                                                serializationValue["properties"] = propertiesValue5;
                                                
                                                if (derived4.Properties.Encoding != null)
                                                {
                                                    propertiesValue5["encoding"] = derived4.Properties.Encoding;
                                                }
                                                
                                                if (derived4.Properties.Format != null)
                                                {
                                                    propertiesValue5["format"] = derived4.Properties.Format;
                                                }
                                            }
                                            
                                            if (derived4.Type != null)
                                            {
                                                serializationValue["type"] = derived4.Type;
                                            }
                                        }
                                        if (derived.Serialization is AvroSerialization)
                                        {
                                            serializationValue["type"] = "Avro";
                                            AvroSerialization derived5 = ((AvroSerialization)derived.Serialization);
                                            
                                            if (derived5.Properties != null)
                                            {
                                                serializationValue["properties"] = derived5.Properties.ToString();
                                            }
                                            
                                            if (derived5.Type != null)
                                            {
                                                serializationValue["type"] = derived5.Type;
                                            }
                                        }
                                    }
                                    
                                    if (derived.Diagnostics != null)
                                    {
                                        JObject diagnosticsValue = new JObject();
                                        propertiesValue2["diagnostics"] = diagnosticsValue;
                                        
                                        if (derived.Diagnostics.Conditions != null)
                                        {
                                            if (derived.Diagnostics.Conditions is ILazyCollection == false || ((ILazyCollection)derived.Diagnostics.Conditions).IsInitialized)
                                            {
                                                JArray conditionsArray = new JArray();
                                                foreach (DiagnosticCondition conditionsItem in derived.Diagnostics.Conditions)
                                                {
                                                    JObject diagnosticConditionValue = new JObject();
                                                    conditionsArray.Add(diagnosticConditionValue);
                                                    
                                                    if (conditionsItem.Since != null)
                                                    {
                                                        diagnosticConditionValue["since"] = conditionsItem.Since.Value;
                                                    }
                                                    
                                                    if (conditionsItem.Code != null)
                                                    {
                                                        diagnosticConditionValue["code"] = conditionsItem.Code;
                                                    }
                                                    
                                                    if (conditionsItem.Message != null)
                                                    {
                                                        diagnosticConditionValue["message"] = conditionsItem.Message;
                                                    }
                                                }
                                                diagnosticsValue["conditions"] = conditionsArray;
                                            }
                                        }
                                    }
                                }
                                if (inputsItem.Properties is StreamInputProperties)
                                {
                                    propertiesValue2["type"] = "Stream";
                                    StreamInputProperties derived6 = ((StreamInputProperties)inputsItem.Properties);
                                    
                                    if (derived6.DataSource != null)
                                    {
                                        JObject datasourceValue2 = new JObject();
                                        propertiesValue2["datasource"] = datasourceValue2;
                                        if (derived6.DataSource is BlobStreamInputDataSource)
                                        {
                                            datasourceValue2["type"] = "Microsoft.Storage/Blob";
                                            BlobStreamInputDataSource derived7 = ((BlobStreamInputDataSource)derived6.DataSource);
                                            
                                            if (derived7.Properties != null)
                                            {
                                                JObject propertiesValue6 = new JObject();
                                                datasourceValue2["properties"] = propertiesValue6;
                                                
                                                if (derived7.Properties.StorageAccounts != null)
                                                {
                                                    if (derived7.Properties.StorageAccounts is ILazyCollection == false || ((ILazyCollection)derived7.Properties.StorageAccounts).IsInitialized)
                                                    {
                                                        JArray storageAccountsArray2 = new JArray();
                                                        foreach (StorageAccount storageAccountsItem2 in derived7.Properties.StorageAccounts)
                                                        {
                                                            JObject storageAccountValue2 = new JObject();
                                                            storageAccountsArray2.Add(storageAccountValue2);
                                                            
                                                            if (storageAccountsItem2.AccountName != null)
                                                            {
                                                                storageAccountValue2["accountName"] = storageAccountsItem2.AccountName;
                                                            }
                                                            
                                                            if (storageAccountsItem2.AccountKey != null)
                                                            {
                                                                storageAccountValue2["accountKey"] = storageAccountsItem2.AccountKey;
                                                            }
                                                        }
                                                        propertiesValue6["storageAccounts"] = storageAccountsArray2;
                                                    }
                                                }
                                                
                                                if (derived7.Properties.Container != null)
                                                {
                                                    propertiesValue6["container"] = derived7.Properties.Container;
                                                }
                                                
                                                if (derived7.Properties.PathPattern != null)
                                                {
                                                    propertiesValue6["pathPattern"] = derived7.Properties.PathPattern;
                                                }
                                                
                                                if (derived7.Properties.DateFormat != null)
                                                {
                                                    propertiesValue6["dateFormat"] = derived7.Properties.DateFormat;
                                                }
                                                
                                                if (derived7.Properties.TimeFormat != null)
                                                {
                                                    propertiesValue6["timeFormat"] = derived7.Properties.TimeFormat;
                                                }
                                                
                                                if (derived7.Properties.SourcePartitionCount != null)
                                                {
                                                    propertiesValue6["sourcePartitionCount"] = derived7.Properties.SourcePartitionCount.Value;
                                                }
                                            }
                                            
                                            if (derived7.Type != null)
                                            {
                                                datasourceValue2["type"] = derived7.Type;
                                            }
                                        }
                                        if (derived6.DataSource is EventHubStreamInputDataSource)
                                        {
                                            datasourceValue2["type"] = "Microsoft.ServiceBus/EventHub";
                                            EventHubStreamInputDataSource derived8 = ((EventHubStreamInputDataSource)derived6.DataSource);
                                            
                                            if (derived8.Properties != null)
                                            {
                                                JObject propertiesValue7 = new JObject();
                                                datasourceValue2["properties"] = propertiesValue7;
                                                
                                                if (derived8.Properties.ServiceBusNamespace != null)
                                                {
                                                    propertiesValue7["serviceBusNamespace"] = derived8.Properties.ServiceBusNamespace;
                                                }
                                                
                                                if (derived8.Properties.SharedAccessPolicyName != null)
                                                {
                                                    propertiesValue7["sharedAccessPolicyName"] = derived8.Properties.SharedAccessPolicyName;
                                                }
                                                
                                                if (derived8.Properties.SharedAccessPolicyKey != null)
                                                {
                                                    propertiesValue7["sharedAccessPolicyKey"] = derived8.Properties.SharedAccessPolicyKey;
                                                }
                                                
                                                if (derived8.Properties.EventHubName != null)
                                                {
                                                    propertiesValue7["eventHubName"] = derived8.Properties.EventHubName;
                                                }
                                                
                                                if (derived8.Properties.ConsumerGroupName != null)
                                                {
                                                    propertiesValue7["consumerGroupName"] = derived8.Properties.ConsumerGroupName;
                                                }
                                            }
                                            
                                            if (derived8.Type != null)
                                            {
                                                datasourceValue2["type"] = derived8.Type;
                                            }
                                        }
                                    }
                                    
                                    if (derived6.Etag != null)
                                    {
                                        propertiesValue2["etag"] = derived6.Etag;
                                    }
                                    
                                    if (derived6.Type != null)
                                    {
                                        propertiesValue2["type"] = derived6.Type;
                                    }
                                    
                                    if (derived6.Serialization != null)
                                    {
                                        JObject serializationValue2 = new JObject();
                                        propertiesValue2["serialization"] = serializationValue2;
                                        if (derived6.Serialization is CsvSerialization)
                                        {
                                            serializationValue2["type"] = "Csv";
                                            CsvSerialization derived9 = ((CsvSerialization)derived6.Serialization);
                                            
                                            if (derived9.Properties != null)
                                            {
                                                JObject propertiesValue8 = new JObject();
                                                serializationValue2["properties"] = propertiesValue8;
                                                
                                                if (derived9.Properties.FieldDelimiter != null)
                                                {
                                                    propertiesValue8["fieldDelimiter"] = derived9.Properties.FieldDelimiter;
                                                }
                                                
                                                if (derived9.Properties.Encoding != null)
                                                {
                                                    propertiesValue8["encoding"] = derived9.Properties.Encoding;
                                                }
                                            }
                                            
                                            if (derived9.Type != null)
                                            {
                                                serializationValue2["type"] = derived9.Type;
                                            }
                                        }
                                        if (derived6.Serialization is JsonSerialization)
                                        {
                                            serializationValue2["type"] = "Json";
                                            JsonSerialization derived10 = ((JsonSerialization)derived6.Serialization);
                                            
                                            if (derived10.Properties != null)
                                            {
                                                JObject propertiesValue9 = new JObject();
                                                serializationValue2["properties"] = propertiesValue9;
                                                
                                                if (derived10.Properties.Encoding != null)
                                                {
                                                    propertiesValue9["encoding"] = derived10.Properties.Encoding;
                                                }
                                                
                                                if (derived10.Properties.Format != null)
                                                {
                                                    propertiesValue9["format"] = derived10.Properties.Format;
                                                }
                                            }
                                            
                                            if (derived10.Type != null)
                                            {
                                                serializationValue2["type"] = derived10.Type;
                                            }
                                        }
                                        if (derived6.Serialization is AvroSerialization)
                                        {
                                            serializationValue2["type"] = "Avro";
                                            AvroSerialization derived11 = ((AvroSerialization)derived6.Serialization);
                                            
                                            if (derived11.Properties != null)
                                            {
                                                serializationValue2["properties"] = derived11.Properties.ToString();
                                            }
                                            
                                            if (derived11.Type != null)
                                            {
                                                serializationValue2["type"] = derived11.Type;
                                            }
                                        }
                                    }
                                    
                                    if (derived6.Diagnostics != null)
                                    {
                                        JObject diagnosticsValue2 = new JObject();
                                        propertiesValue2["diagnostics"] = diagnosticsValue2;
                                        
                                        if (derived6.Diagnostics.Conditions != null)
                                        {
                                            if (derived6.Diagnostics.Conditions is ILazyCollection == false || ((ILazyCollection)derived6.Diagnostics.Conditions).IsInitialized)
                                            {
                                                JArray conditionsArray2 = new JArray();
                                                foreach (DiagnosticCondition conditionsItem2 in derived6.Diagnostics.Conditions)
                                                {
                                                    JObject diagnosticConditionValue2 = new JObject();
                                                    conditionsArray2.Add(diagnosticConditionValue2);
                                                    
                                                    if (conditionsItem2.Since != null)
                                                    {
                                                        diagnosticConditionValue2["since"] = conditionsItem2.Since.Value;
                                                    }
                                                    
                                                    if (conditionsItem2.Code != null)
                                                    {
                                                        diagnosticConditionValue2["code"] = conditionsItem2.Code;
                                                    }
                                                    
                                                    if (conditionsItem2.Message != null)
                                                    {
                                                        diagnosticConditionValue2["message"] = conditionsItem2.Message;
                                                    }
                                                }
                                                diagnosticsValue2["conditions"] = conditionsArray2;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        propertiesValue["inputs"] = inputsArray;
                    }
                }
                
                if (parameters.Job.Properties.Transformation != null)
                {
                    JObject transformationValue = new JObject();
                    propertiesValue["transformation"] = transformationValue;
                    
                    transformationValue["name"] = parameters.Job.Properties.Transformation.Name;
                    
                    if (parameters.Job.Properties.Transformation.Properties != null)
                    {
                        JObject propertiesValue10 = new JObject();
                        transformationValue["properties"] = propertiesValue10;
                        
                        if (parameters.Job.Properties.Transformation.Properties.Etag != null)
                        {
                            propertiesValue10["etag"] = parameters.Job.Properties.Transformation.Properties.Etag;
                        }
                        
                        if (parameters.Job.Properties.Transformation.Properties.StreamingUnits != null)
                        {
                            propertiesValue10["streamingUnits"] = parameters.Job.Properties.Transformation.Properties.StreamingUnits.Value;
                        }
                        
                        if (parameters.Job.Properties.Transformation.Properties.Query != null)
                        {
                            propertiesValue10["query"] = parameters.Job.Properties.Transformation.Properties.Query;
                        }
                    }
                }
                
                if (parameters.Job.Properties.Outputs != null)
                {
                    if (parameters.Job.Properties.Outputs is ILazyCollection == false || ((ILazyCollection)parameters.Job.Properties.Outputs).IsInitialized)
                    {
                        JArray outputsArray = new JArray();
                        foreach (Output outputsItem in parameters.Job.Properties.Outputs)
                        {
                            JObject outputValue = new JObject();
                            outputsArray.Add(outputValue);
                            
                            outputValue["name"] = outputsItem.Name;
                            
                            if (outputsItem.Properties != null)
                            {
                                JObject propertiesValue11 = new JObject();
                                outputValue["properties"] = propertiesValue11;
                                
                                if (outputsItem.Properties.Etag != null)
                                {
                                    propertiesValue11["etag"] = outputsItem.Properties.Etag;
                                }
                                
                                if (outputsItem.Properties.DataSource != null)
                                {
                                    JObject datasourceValue3 = new JObject();
                                    propertiesValue11["datasource"] = datasourceValue3;
                                    if (outputsItem.Properties.DataSource is BlobOutputDataSource)
                                    {
                                        datasourceValue3["type"] = "Microsoft.Storage/Blob";
                                        BlobOutputDataSource derived12 = ((BlobOutputDataSource)outputsItem.Properties.DataSource);
                                        
                                        if (derived12.Properties != null)
                                        {
                                            JObject propertiesValue12 = new JObject();
                                            datasourceValue3["properties"] = propertiesValue12;
                                            
                                            if (derived12.Properties.StorageAccounts != null)
                                            {
                                                if (derived12.Properties.StorageAccounts is ILazyCollection == false || ((ILazyCollection)derived12.Properties.StorageAccounts).IsInitialized)
                                                {
                                                    JArray storageAccountsArray3 = new JArray();
                                                    foreach (StorageAccount storageAccountsItem3 in derived12.Properties.StorageAccounts)
                                                    {
                                                        JObject storageAccountValue3 = new JObject();
                                                        storageAccountsArray3.Add(storageAccountValue3);
                                                        
                                                        if (storageAccountsItem3.AccountName != null)
                                                        {
                                                            storageAccountValue3["accountName"] = storageAccountsItem3.AccountName;
                                                        }
                                                        
                                                        if (storageAccountsItem3.AccountKey != null)
                                                        {
                                                            storageAccountValue3["accountKey"] = storageAccountsItem3.AccountKey;
                                                        }
                                                    }
                                                    propertiesValue12["storageAccounts"] = storageAccountsArray3;
                                                }
                                            }
                                            
                                            if (derived12.Properties.Container != null)
                                            {
                                                propertiesValue12["container"] = derived12.Properties.Container;
                                            }
                                            
                                            if (derived12.Properties.BlobPathPrefix != null)
                                            {
                                                propertiesValue12["blobPathPrefix"] = derived12.Properties.BlobPathPrefix;
                                            }
                                        }
                                        
                                        if (derived12.Type != null)
                                        {
                                            datasourceValue3["type"] = derived12.Type;
                                        }
                                    }
                                    if (outputsItem.Properties.DataSource is AzureTableOutputDataSource)
                                    {
                                        datasourceValue3["type"] = "Microsoft.Storage/Table";
                                        AzureTableOutputDataSource derived13 = ((AzureTableOutputDataSource)outputsItem.Properties.DataSource);
                                        
                                        if (derived13.Properties != null)
                                        {
                                            JObject propertiesValue13 = new JObject();
                                            datasourceValue3["properties"] = propertiesValue13;
                                            
                                            if (derived13.Properties.AccountName != null)
                                            {
                                                propertiesValue13["accountName"] = derived13.Properties.AccountName;
                                            }
                                            
                                            if (derived13.Properties.AccountKey != null)
                                            {
                                                propertiesValue13["accountKey"] = derived13.Properties.AccountKey;
                                            }
                                            
                                            if (derived13.Properties.Table != null)
                                            {
                                                propertiesValue13["table"] = derived13.Properties.Table;
                                            }
                                            
                                            if (derived13.Properties.PartitionKey != null)
                                            {
                                                propertiesValue13["partitionKey"] = derived13.Properties.PartitionKey;
                                            }
                                            
                                            if (derived13.Properties.RowKey != null)
                                            {
                                                propertiesValue13["rowKey"] = derived13.Properties.RowKey;
                                            }
                                            
                                            if (derived13.Properties.ColumnsToRemove != null)
                                            {
                                                if (derived13.Properties.ColumnsToRemove is ILazyCollection == false || ((ILazyCollection)derived13.Properties.ColumnsToRemove).IsInitialized)
                                                {
                                                    JArray columnsToRemoveArray = new JArray();
                                                    foreach (string columnsToRemoveItem in derived13.Properties.ColumnsToRemove)
                                                    {
                                                        columnsToRemoveArray.Add(columnsToRemoveItem);
                                                    }
                                                    propertiesValue13["columnsToRemove"] = columnsToRemoveArray;
                                                }
                                            }
                                            
                                            if (derived13.Properties.BatchSize != null)
                                            {
                                                propertiesValue13["batchSize"] = derived13.Properties.BatchSize.Value;
                                            }
                                        }
                                        
                                        if (derived13.Type != null)
                                        {
                                            datasourceValue3["type"] = derived13.Type;
                                        }
                                    }
                                    if (outputsItem.Properties.DataSource is EventHubOutputDataSource)
                                    {
                                        datasourceValue3["type"] = "Microsoft.ServiceBus/EventHub";
                                        EventHubOutputDataSource derived14 = ((EventHubOutputDataSource)outputsItem.Properties.DataSource);
                                        
                                        if (derived14.Properties != null)
                                        {
                                            JObject propertiesValue14 = new JObject();
                                            datasourceValue3["properties"] = propertiesValue14;
                                            
                                            if (derived14.Properties.ServiceBusNamespace != null)
                                            {
                                                propertiesValue14["serviceBusNamespace"] = derived14.Properties.ServiceBusNamespace;
                                            }
                                            
                                            if (derived14.Properties.SharedAccessPolicyName != null)
                                            {
                                                propertiesValue14["sharedAccessPolicyName"] = derived14.Properties.SharedAccessPolicyName;
                                            }
                                            
                                            if (derived14.Properties.SharedAccessPolicyKey != null)
                                            {
                                                propertiesValue14["sharedAccessPolicyKey"] = derived14.Properties.SharedAccessPolicyKey;
                                            }
                                            
                                            if (derived14.Properties.EventHubName != null)
                                            {
                                                propertiesValue14["eventHubName"] = derived14.Properties.EventHubName;
                                            }
                                            
                                            if (derived14.Properties.PartitionKey != null)
                                            {
                                                propertiesValue14["partitionKey"] = derived14.Properties.PartitionKey;
                                            }
                                        }
                                        
                                        if (derived14.Type != null)
                                        {
                                            datasourceValue3["type"] = derived14.Type;
                                        }
                                    }
                                    if (outputsItem.Properties.DataSource is SqlAzureOutputDataSource)
                                    {
                                        datasourceValue3["type"] = "Microsoft.Sql/Server/Database";
                                        SqlAzureOutputDataSource derived15 = ((SqlAzureOutputDataSource)outputsItem.Properties.DataSource);
                                        
                                        if (derived15.Properties != null)
                                        {
                                            JObject propertiesValue15 = new JObject();
                                            datasourceValue3["properties"] = propertiesValue15;
                                            
                                            if (derived15.Properties.Server != null)
                                            {
                                                propertiesValue15["server"] = derived15.Properties.Server;
                                            }
                                            
                                            if (derived15.Properties.Database != null)
                                            {
                                                propertiesValue15["database"] = derived15.Properties.Database;
                                            }
                                            
                                            if (derived15.Properties.User != null)
                                            {
                                                propertiesValue15["user"] = derived15.Properties.User;
                                            }
                                            
                                            if (derived15.Properties.Password != null)
                                            {
                                                propertiesValue15["password"] = derived15.Properties.Password;
                                            }
                                            
                                            if (derived15.Properties.Table != null)
                                            {
                                                propertiesValue15["table"] = derived15.Properties.Table;
                                            }
                                        }
                                        
                                        if (derived15.Type != null)
                                        {
                                            datasourceValue3["type"] = derived15.Type;
                                        }
                                    }
                                }
                                
                                if (outputsItem.Properties.Serialization != null)
                                {
                                    JObject serializationValue3 = new JObject();
                                    propertiesValue11["serialization"] = serializationValue3;
                                    if (outputsItem.Properties.Serialization is CsvSerialization)
                                    {
                                        serializationValue3["type"] = "Csv";
                                        CsvSerialization derived16 = ((CsvSerialization)outputsItem.Properties.Serialization);
                                        
                                        if (derived16.Properties != null)
                                        {
                                            JObject propertiesValue16 = new JObject();
                                            serializationValue3["properties"] = propertiesValue16;
                                            
                                            if (derived16.Properties.FieldDelimiter != null)
                                            {
                                                propertiesValue16["fieldDelimiter"] = derived16.Properties.FieldDelimiter;
                                            }
                                            
                                            if (derived16.Properties.Encoding != null)
                                            {
                                                propertiesValue16["encoding"] = derived16.Properties.Encoding;
                                            }
                                        }
                                        
                                        if (derived16.Type != null)
                                        {
                                            serializationValue3["type"] = derived16.Type;
                                        }
                                    }
                                    if (outputsItem.Properties.Serialization is JsonSerialization)
                                    {
                                        serializationValue3["type"] = "Json";
                                        JsonSerialization derived17 = ((JsonSerialization)outputsItem.Properties.Serialization);
                                        
                                        if (derived17.Properties != null)
                                        {
                                            JObject propertiesValue17 = new JObject();
                                            serializationValue3["properties"] = propertiesValue17;
                                            
                                            if (derived17.Properties.Encoding != null)
                                            {
                                                propertiesValue17["encoding"] = derived17.Properties.Encoding;
                                            }
                                            
                                            if (derived17.Properties.Format != null)
                                            {
                                                propertiesValue17["format"] = derived17.Properties.Format;
                                            }
                                        }
                                        
                                        if (derived17.Type != null)
                                        {
                                            serializationValue3["type"] = derived17.Type;
                                        }
                                    }
                                    if (outputsItem.Properties.Serialization is AvroSerialization)
                                    {
                                        serializationValue3["type"] = "Avro";
                                        AvroSerialization derived18 = ((AvroSerialization)outputsItem.Properties.Serialization);
                                        
                                        if (derived18.Properties != null)
                                        {
                                            serializationValue3["properties"] = derived18.Properties.ToString();
                                        }
                                        
                                        if (derived18.Type != null)
                                        {
                                            serializationValue3["type"] = derived18.Type;
                                        }
                                    }
                                }
                                
                                if (outputsItem.Properties.Diagnostics != null)
                                {
                                    JObject diagnosticsValue3 = new JObject();
                                    propertiesValue11["diagnostics"] = diagnosticsValue3;
                                    
                                    if (outputsItem.Properties.Diagnostics.Conditions != null)
                                    {
                                        if (outputsItem.Properties.Diagnostics.Conditions is ILazyCollection == false || ((ILazyCollection)outputsItem.Properties.Diagnostics.Conditions).IsInitialized)
                                        {
                                            JArray conditionsArray3 = new JArray();
                                            foreach (DiagnosticCondition conditionsItem3 in outputsItem.Properties.Diagnostics.Conditions)
                                            {
                                                JObject diagnosticConditionValue3 = new JObject();
                                                conditionsArray3.Add(diagnosticConditionValue3);
                                                
                                                if (conditionsItem3.Since != null)
                                                {
                                                    diagnosticConditionValue3["since"] = conditionsItem3.Since.Value;
                                                }
                                                
                                                if (conditionsItem3.Code != null)
                                                {
                                                    diagnosticConditionValue3["code"] = conditionsItem3.Code;
                                                }
                                                
                                                if (conditionsItem3.Message != null)
                                                {
                                                    diagnosticConditionValue3["message"] = conditionsItem3.Message;
                                                }
                                            }
                                            diagnosticsValue3["conditions"] = conditionsArray3;
                                        }
                                    }
                                }
                            }
                        }
                        propertiesValue["outputs"] = outputsArray;
                    }
                }
                
                requestContent = requestDoc.ToString(Newtonsoft.Json.Formatting.Indented);
                httpRequest.Content = new StringContent(requestContent, Encoding.UTF8);
                httpRequest.Content.Headers.ContentType = MediaTypeHeaderValue.Parse("application/json");
                
                // Send Request
                HttpResponseMessage httpResponse = null;
                try
                {
                    if (shouldTrace)
                    {
                        TracingAdapter.SendRequest(invocationId, httpRequest);
                    }
                    cancellationToken.ThrowIfCancellationRequested();
                    httpResponse = await this.Client.HttpClient.SendAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                    if (shouldTrace)
                    {
                        TracingAdapter.ReceiveResponse(invocationId, httpResponse);
                    }
                    HttpStatusCode statusCode = httpResponse.StatusCode;
                    if (statusCode != HttpStatusCode.OK && statusCode != HttpStatusCode.Created)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        CloudException ex = CloudException.Create(httpRequest, requestContent, httpResponse, await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false));
                        if (shouldTrace)
                        {
                            TracingAdapter.Error(invocationId, ex);
                        }
                        throw ex;
                    }
                    
                    // Create Result
                    JobCreateOrUpdateResponse result = null;
                    // Deserialize Response
                    if (statusCode == HttpStatusCode.OK || statusCode == HttpStatusCode.Created)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        string responseContent = await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false);
                        result = new JobCreateOrUpdateResponse();
                        JToken responseDoc = null;
                        if (string.IsNullOrEmpty(responseContent) == false)
                        {
                            responseDoc = JToken.Parse(responseContent);
                        }
                        
                        if (responseDoc != null && responseDoc.Type != JTokenType.Null)
                        {
                            Job jobInstance = new Job();
                            result.Job = jobInstance;
                            
                            JToken idValue = responseDoc["id"];
                            if (idValue != null && idValue.Type != JTokenType.Null)
                            {
                                string idInstance = ((string)idValue);
                                jobInstance.Id = idInstance;
                            }
                            
                            JToken nameValue = responseDoc["name"];
                            if (nameValue != null && nameValue.Type != JTokenType.Null)
                            {
                                string nameInstance = ((string)nameValue);
                                jobInstance.Name = nameInstance;
                            }
                            
                            JToken typeValue = responseDoc["type"];
                            if (typeValue != null && typeValue.Type != JTokenType.Null)
                            {
                                string typeInstance = ((string)typeValue);
                                jobInstance.Type = typeInstance;
                            }
                            
                            JToken locationValue = responseDoc["location"];
                            if (locationValue != null && locationValue.Type != JTokenType.Null)
                            {
                                string locationInstance = ((string)locationValue);
                                jobInstance.Location = locationInstance;
                            }
                            
                            JToken tagsSequenceElement = ((JToken)responseDoc["tags"]);
                            if (tagsSequenceElement != null && tagsSequenceElement.Type != JTokenType.Null)
                            {
                                foreach (JProperty property in tagsSequenceElement)
                                {
                                    string tagsKey2 = ((string)property.Name);
                                    string tagsValue2 = ((string)property.Value);
                                    jobInstance.Tags.Add(tagsKey2, tagsValue2);
                                }
                            }
                            
                            JToken propertiesValue18 = responseDoc["properties"];
                            if (propertiesValue18 != null && propertiesValue18.Type != JTokenType.Null)
                            {
                                JobProperties propertiesInstance = new JobProperties();
                                jobInstance.Properties = propertiesInstance;
                                
                                JToken skuValue2 = propertiesValue18["sku"];
                                if (skuValue2 != null && skuValue2.Type != JTokenType.Null)
                                {
                                    Sku skuInstance = new Sku();
                                    propertiesInstance.Sku = skuInstance;
                                    
                                    JToken nameValue2 = skuValue2["name"];
                                    if (nameValue2 != null && nameValue2.Type != JTokenType.Null)
                                    {
                                        string nameInstance2 = ((string)nameValue2);
                                        skuInstance.Name = nameInstance2;
                                    }
                                }
                                
                                JToken eventsOutOfOrderPolicyValue = propertiesValue18["eventsOutOfOrderPolicy"];
                                if (eventsOutOfOrderPolicyValue != null && eventsOutOfOrderPolicyValue.Type != JTokenType.Null)
                                {
                                    string eventsOutOfOrderPolicyInstance = ((string)eventsOutOfOrderPolicyValue);
                                    propertiesInstance.EventsOutOfOrderPolicy = eventsOutOfOrderPolicyInstance;
                                }
                                
                                JToken eventsOutOfOrderMaxDelayInSecondsValue = propertiesValue18["eventsOutOfOrderMaxDelayInSeconds"];
                                if (eventsOutOfOrderMaxDelayInSecondsValue != null && eventsOutOfOrderMaxDelayInSecondsValue.Type != JTokenType.Null)
                                {
                                    int eventsOutOfOrderMaxDelayInSecondsInstance = ((int)eventsOutOfOrderMaxDelayInSecondsValue);
                                    propertiesInstance.EventsOutOfOrderMaxDelayInSeconds = eventsOutOfOrderMaxDelayInSecondsInstance;
                                }
                                
                                JToken eventsLateArrivalMaxDelayInSecondsValue = propertiesValue18["eventsLateArrivalMaxDelayInSeconds"];
                                if (eventsLateArrivalMaxDelayInSecondsValue != null && eventsLateArrivalMaxDelayInSecondsValue.Type != JTokenType.Null)
                                {
                                    int eventsLateArrivalMaxDelayInSecondsInstance = ((int)eventsLateArrivalMaxDelayInSecondsValue);
                                    propertiesInstance.EventsLateArrivalMaxDelayInSeconds = eventsLateArrivalMaxDelayInSecondsInstance;
                                }
                                
                                JToken dataLocaleValue = propertiesValue18["dataLocale"];
                                if (dataLocaleValue != null && dataLocaleValue.Type != JTokenType.Null)
                                {
                                    string dataLocaleInstance = ((string)dataLocaleValue);
                                    propertiesInstance.DataLocale = dataLocaleInstance;
                                }
                                
                                JToken outputStartModeValue = propertiesValue18["outputStartMode"];
                                if (outputStartModeValue != null && outputStartModeValue.Type != JTokenType.Null)
                                {
                                    string outputStartModeInstance = ((string)outputStartModeValue);
                                    propertiesInstance.OutputStartMode = outputStartModeInstance;
                                }
                                
                                JToken outputStartTimeValue = propertiesValue18["outputStartTime"];
                                if (outputStartTimeValue != null && outputStartTimeValue.Type != JTokenType.Null)
                                {
                                    DateTime outputStartTimeInstance = ((DateTime)outputStartTimeValue);
                                    propertiesInstance.OutputStartTime = outputStartTimeInstance;
                                }
                                
                                JToken lastOutputEventTimeValue = propertiesValue18["lastOutputEventTime"];
                                if (lastOutputEventTimeValue != null && lastOutputEventTimeValue.Type != JTokenType.Null)
                                {
                                    DateTime lastOutputEventTimeInstance = ((DateTime)lastOutputEventTimeValue);
                                    propertiesInstance.LastOutputEventTime = lastOutputEventTimeInstance;
                                }
                                
                                JToken jobIdValue = propertiesValue18["jobId"];
                                if (jobIdValue != null && jobIdValue.Type != JTokenType.Null)
                                {
                                    string jobIdInstance = ((string)jobIdValue);
                                    propertiesInstance.JobId = jobIdInstance;
                                }
                                
                                JToken etagValue = propertiesValue18["etag"];
                                if (etagValue != null && etagValue.Type != JTokenType.Null)
                                {
                                    string etagInstance = ((string)etagValue);
                                    propertiesInstance.Etag = etagInstance;
                                }
                                
                                JToken provisioningStateValue = propertiesValue18["provisioningState"];
                                if (provisioningStateValue != null && provisioningStateValue.Type != JTokenType.Null)
                                {
                                    string provisioningStateInstance = ((string)provisioningStateValue);
                                    propertiesInstance.ProvisioningState = provisioningStateInstance;
                                }
                                
                                JToken jobStateValue = propertiesValue18["jobState"];
                                if (jobStateValue != null && jobStateValue.Type != JTokenType.Null)
                                {
                                    string jobStateInstance = ((string)jobStateValue);
                                    propertiesInstance.JobState = jobStateInstance;
                                }
                                
                                JToken createdDateValue = propertiesValue18["createdDate"];
                                if (createdDateValue != null && createdDateValue.Type != JTokenType.Null)
                                {
                                    DateTime createdDateInstance = ((DateTime)createdDateValue);
                                    propertiesInstance.CreatedDate = createdDateInstance;
                                }
                                
                                JToken inputsArray2 = propertiesValue18["inputs"];
                                if (inputsArray2 != null && inputsArray2.Type != JTokenType.Null)
                                {
                                    foreach (JToken inputsValue in ((JArray)inputsArray2))
                                    {
                                        Input inputInstance = new Input();
                                        propertiesInstance.Inputs.Add(inputInstance);
                                        
                                        JToken nameValue3 = inputsValue["name"];
                                        if (nameValue3 != null && nameValue3.Type != JTokenType.Null)
                                        {
                                            string nameInstance3 = ((string)nameValue3);
                                            inputInstance.Name = nameInstance3;
                                        }
                                        
                                        JToken propertiesValue19 = inputsValue["properties"];
                                        if (propertiesValue19 != null && propertiesValue19.Type != JTokenType.Null)
                                        {
                                            string typeName = ((string)propertiesValue19["type"]);
                                            if (typeName == "Reference")
                                            {
                                                ReferenceInputProperties referenceInputPropertiesInstance = new ReferenceInputProperties();
                                                
                                                JToken datasourceValue4 = propertiesValue19["datasource"];
                                                if (datasourceValue4 != null && datasourceValue4.Type != JTokenType.Null)
                                                {
                                                    string typeName2 = ((string)datasourceValue4["type"]);
                                                    if (typeName2 == "Microsoft.Storage/Blob")
                                                    {
                                                        BlobReferenceInputDataSource blobReferenceInputDataSourceInstance = new BlobReferenceInputDataSource();
                                                        
                                                        JToken propertiesValue20 = datasourceValue4["properties"];
                                                        if (propertiesValue20 != null && propertiesValue20.Type != JTokenType.Null)
                                                        {
                                                            BlobReferenceInputDataSourceProperties propertiesInstance2 = new BlobReferenceInputDataSourceProperties();
                                                            blobReferenceInputDataSourceInstance.Properties = propertiesInstance2;
                                                            
                                                            JToken storageAccountsArray4 = propertiesValue20["storageAccounts"];
                                                            if (storageAccountsArray4 != null && storageAccountsArray4.Type != JTokenType.Null)
                                                            {
                                                                foreach (JToken storageAccountsValue in ((JArray)storageAccountsArray4))
                                                                {
                                                                    StorageAccount storageAccountInstance = new StorageAccount();
                                                                    propertiesInstance2.StorageAccounts.Add(storageAccountInstance);
                                                                    
                                                                    JToken accountNameValue = storageAccountsValue["accountName"];
                                                                    if (accountNameValue != null && accountNameValue.Type != JTokenType.Null)
                                                                    {
                                                                        string accountNameInstance = ((string)accountNameValue);
                                                                        storageAccountInstance.AccountName = accountNameInstance;
                                                                    }
                                                                    
                                                                    JToken accountKeyValue = storageAccountsValue["accountKey"];
                                                                    if (accountKeyValue != null && accountKeyValue.Type != JTokenType.Null)
                                                                    {
                                                                        string accountKeyInstance = ((string)accountKeyValue);
                                                                        storageAccountInstance.AccountKey = accountKeyInstance;
                                                                    }
                                                                }
                                                            }
                                                            
                                                            JToken containerValue = propertiesValue20["container"];
                                                            if (containerValue != null && containerValue.Type != JTokenType.Null)
                                                            {
                                                                string containerInstance = ((string)containerValue);
                                                                propertiesInstance2.Container = containerInstance;
                                                            }
                                                            
                                                            JToken pathPatternValue = propertiesValue20["pathPattern"];
                                                            if (pathPatternValue != null && pathPatternValue.Type != JTokenType.Null)
                                                            {
                                                                string pathPatternInstance = ((string)pathPatternValue);
                                                                propertiesInstance2.PathPattern = pathPatternInstance;
                                                            }
                                                            
                                                            JToken dateFormatValue = propertiesValue20["dateFormat"];
                                                            if (dateFormatValue != null && dateFormatValue.Type != JTokenType.Null)
                                                            {
                                                                string dateFormatInstance = ((string)dateFormatValue);
                                                                propertiesInstance2.DateFormat = dateFormatInstance;
                                                            }
                                                            
                                                            JToken timeFormatValue = propertiesValue20["timeFormat"];
                                                            if (timeFormatValue != null && timeFormatValue.Type != JTokenType.Null)
                                                            {
                                                                string timeFormatInstance = ((string)timeFormatValue);
                                                                propertiesInstance2.TimeFormat = timeFormatInstance;
                                                            }
                                                        }
                                                        
                                                        JToken typeValue2 = datasourceValue4["type"];
                                                        if (typeValue2 != null && typeValue2.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance2 = ((string)typeValue2);
                                                            blobReferenceInputDataSourceInstance.Type = typeInstance2;
                                                        }
                                                        referenceInputPropertiesInstance.DataSource = blobReferenceInputDataSourceInstance;
                                                    }
                                                }
                                                
                                                JToken etagValue2 = propertiesValue19["etag"];
                                                if (etagValue2 != null && etagValue2.Type != JTokenType.Null)
                                                {
                                                    string etagInstance2 = ((string)etagValue2);
                                                    referenceInputPropertiesInstance.Etag = etagInstance2;
                                                }
                                                
                                                JToken typeValue3 = propertiesValue19["type"];
                                                if (typeValue3 != null && typeValue3.Type != JTokenType.Null)
                                                {
                                                    string typeInstance3 = ((string)typeValue3);
                                                    referenceInputPropertiesInstance.Type = typeInstance3;
                                                }
                                                
                                                JToken serializationValue4 = propertiesValue19["serialization"];
                                                if (serializationValue4 != null && serializationValue4.Type != JTokenType.Null)
                                                {
                                                    string typeName3 = ((string)serializationValue4["type"]);
                                                    if (typeName3 == "Csv")
                                                    {
                                                        CsvSerialization csvSerializationInstance = new CsvSerialization();
                                                        
                                                        JToken propertiesValue21 = serializationValue4["properties"];
                                                        if (propertiesValue21 != null && propertiesValue21.Type != JTokenType.Null)
                                                        {
                                                            CsvSerializationProperties propertiesInstance3 = new CsvSerializationProperties();
                                                            csvSerializationInstance.Properties = propertiesInstance3;
                                                            
                                                            JToken fieldDelimiterValue = propertiesValue21["fieldDelimiter"];
                                                            if (fieldDelimiterValue != null && fieldDelimiterValue.Type != JTokenType.Null)
                                                            {
                                                                string fieldDelimiterInstance = ((string)fieldDelimiterValue);
                                                                propertiesInstance3.FieldDelimiter = fieldDelimiterInstance;
                                                            }
                                                            
                                                            JToken encodingValue = propertiesValue21["encoding"];
                                                            if (encodingValue != null && encodingValue.Type != JTokenType.Null)
                                                            {
                                                                string encodingInstance = ((string)encodingValue);
                                                                propertiesInstance3.Encoding = encodingInstance;
                                                            }
                                                        }
                                                        
                                                        JToken typeValue4 = serializationValue4["type"];
                                                        if (typeValue4 != null && typeValue4.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance4 = ((string)typeValue4);
                                                            csvSerializationInstance.Type = typeInstance4;
                                                        }
                                                        referenceInputPropertiesInstance.Serialization = csvSerializationInstance;
                                                    }
                                                    if (typeName3 == "Json")
                                                    {
                                                        JsonSerialization jsonSerializationInstance = new JsonSerialization();
                                                        
                                                        JToken propertiesValue22 = serializationValue4["properties"];
                                                        if (propertiesValue22 != null && propertiesValue22.Type != JTokenType.Null)
                                                        {
                                                            JsonSerializationProperties propertiesInstance4 = new JsonSerializationProperties();
                                                            jsonSerializationInstance.Properties = propertiesInstance4;
                                                            
                                                            JToken encodingValue2 = propertiesValue22["encoding"];
                                                            if (encodingValue2 != null && encodingValue2.Type != JTokenType.Null)
                                                            {
                                                                string encodingInstance2 = ((string)encodingValue2);
                                                                propertiesInstance4.Encoding = encodingInstance2;
                                                            }
                                                            
                                                            JToken formatValue = propertiesValue22["format"];
                                                            if (formatValue != null && formatValue.Type != JTokenType.Null)
                                                            {
                                                                string formatInstance = ((string)formatValue);
                                                                propertiesInstance4.Format = formatInstance;
                                                            }
                                                        }
                                                        
                                                        JToken typeValue5 = serializationValue4["type"];
                                                        if (typeValue5 != null && typeValue5.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance5 = ((string)typeValue5);
                                                            jsonSerializationInstance.Type = typeInstance5;
                                                        }
                                                        referenceInputPropertiesInstance.Serialization = jsonSerializationInstance;
                                                    }
                                                    if (typeName3 == "Avro")
                                                    {
                                                        AvroSerialization avroSerializationInstance = new AvroSerialization();
                                                        
                                                        JToken propertiesValue23 = serializationValue4["properties"];
                                                        if (propertiesValue23 != null && propertiesValue23.Type != JTokenType.Null)
                                                        {
                                                            AvroSerializationProperties propertiesInstance5 = new AvroSerializationProperties();
                                                            avroSerializationInstance.Properties = propertiesInstance5;
                                                        }
                                                        
                                                        JToken typeValue6 = serializationValue4["type"];
                                                        if (typeValue6 != null && typeValue6.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance6 = ((string)typeValue6);
                                                            avroSerializationInstance.Type = typeInstance6;
                                                        }
                                                        referenceInputPropertiesInstance.Serialization = avroSerializationInstance;
                                                    }
                                                }
                                                
                                                JToken diagnosticsValue4 = propertiesValue19["diagnostics"];
                                                if (diagnosticsValue4 != null && diagnosticsValue4.Type != JTokenType.Null)
                                                {
                                                    Diagnostics diagnosticsInstance = new Diagnostics();
                                                    referenceInputPropertiesInstance.Diagnostics = diagnosticsInstance;
                                                    
                                                    JToken conditionsArray4 = diagnosticsValue4["conditions"];
                                                    if (conditionsArray4 != null && conditionsArray4.Type != JTokenType.Null)
                                                    {
                                                        foreach (JToken conditionsValue in ((JArray)conditionsArray4))
                                                        {
                                                            DiagnosticCondition diagnosticConditionInstance = new DiagnosticCondition();
                                                            diagnosticsInstance.Conditions.Add(diagnosticConditionInstance);
                                                            
                                                            JToken sinceValue = conditionsValue["since"];
                                                            if (sinceValue != null && sinceValue.Type != JTokenType.Null)
                                                            {
                                                                DateTime sinceInstance = ((DateTime)sinceValue);
                                                                diagnosticConditionInstance.Since = sinceInstance;
                                                            }
                                                            
                                                            JToken codeValue = conditionsValue["code"];
                                                            if (codeValue != null && codeValue.Type != JTokenType.Null)
                                                            {
                                                                string codeInstance = ((string)codeValue);
                                                                diagnosticConditionInstance.Code = codeInstance;
                                                            }
                                                            
                                                            JToken messageValue = conditionsValue["message"];
                                                            if (messageValue != null && messageValue.Type != JTokenType.Null)
                                                            {
                                                                string messageInstance = ((string)messageValue);
                                                                diagnosticConditionInstance.Message = messageInstance;
                                                            }
                                                        }
                                                    }
                                                }
                                                inputInstance.Properties = referenceInputPropertiesInstance;
                                            }
                                            if (typeName == "Stream")
                                            {
                                                StreamInputProperties streamInputPropertiesInstance = new StreamInputProperties();
                                                
                                                JToken datasourceValue5 = propertiesValue19["datasource"];
                                                if (datasourceValue5 != null && datasourceValue5.Type != JTokenType.Null)
                                                {
                                                    string typeName4 = ((string)datasourceValue5["type"]);
                                                    if (typeName4 == "Microsoft.Storage/Blob")
                                                    {
                                                        BlobStreamInputDataSource blobStreamInputDataSourceInstance = new BlobStreamInputDataSource();
                                                        
                                                        JToken propertiesValue24 = datasourceValue5["properties"];
                                                        if (propertiesValue24 != null && propertiesValue24.Type != JTokenType.Null)
                                                        {
                                                            BlobStreamInputDataSourceProperties propertiesInstance6 = new BlobStreamInputDataSourceProperties();
                                                            blobStreamInputDataSourceInstance.Properties = propertiesInstance6;
                                                            
                                                            JToken storageAccountsArray5 = propertiesValue24["storageAccounts"];
                                                            if (storageAccountsArray5 != null && storageAccountsArray5.Type != JTokenType.Null)
                                                            {
                                                                foreach (JToken storageAccountsValue2 in ((JArray)storageAccountsArray5))
                                                                {
                                                                    StorageAccount storageAccountInstance2 = new StorageAccount();
                                                                    propertiesInstance6.StorageAccounts.Add(storageAccountInstance2);
                                                                    
                                                                    JToken accountNameValue2 = storageAccountsValue2["accountName"];
                                                                    if (accountNameValue2 != null && accountNameValue2.Type != JTokenType.Null)
                                                                    {
                                                                        string accountNameInstance2 = ((string)accountNameValue2);
                                                                        storageAccountInstance2.AccountName = accountNameInstance2;
                                                                    }
                                                                    
                                                                    JToken accountKeyValue2 = storageAccountsValue2["accountKey"];
                                                                    if (accountKeyValue2 != null && accountKeyValue2.Type != JTokenType.Null)
                                                                    {
                                                                        string accountKeyInstance2 = ((string)accountKeyValue2);
                                                                        storageAccountInstance2.AccountKey = accountKeyInstance2;
                                                                    }
                                                                }
                                                            }
                                                            
                                                            JToken containerValue2 = propertiesValue24["container"];
                                                            if (containerValue2 != null && containerValue2.Type != JTokenType.Null)
                                                            {
                                                                string containerInstance2 = ((string)containerValue2);
                                                                propertiesInstance6.Container = containerInstance2;
                                                            }
                                                            
                                                            JToken pathPatternValue2 = propertiesValue24["pathPattern"];
                                                            if (pathPatternValue2 != null && pathPatternValue2.Type != JTokenType.Null)
                                                            {
                                                                string pathPatternInstance2 = ((string)pathPatternValue2);
                                                                propertiesInstance6.PathPattern = pathPatternInstance2;
                                                            }
                                                            
                                                            JToken dateFormatValue2 = propertiesValue24["dateFormat"];
                                                            if (dateFormatValue2 != null && dateFormatValue2.Type != JTokenType.Null)
                                                            {
                                                                string dateFormatInstance2 = ((string)dateFormatValue2);
                                                                propertiesInstance6.DateFormat = dateFormatInstance2;
                                                            }
                                                            
                                                            JToken timeFormatValue2 = propertiesValue24["timeFormat"];
                                                            if (timeFormatValue2 != null && timeFormatValue2.Type != JTokenType.Null)
                                                            {
                                                                string timeFormatInstance2 = ((string)timeFormatValue2);
                                                                propertiesInstance6.TimeFormat = timeFormatInstance2;
                                                            }
                                                            
                                                            JToken sourcePartitionCountValue = propertiesValue24["sourcePartitionCount"];
                                                            if (sourcePartitionCountValue != null && sourcePartitionCountValue.Type != JTokenType.Null)
                                                            {
                                                                int sourcePartitionCountInstance = ((int)sourcePartitionCountValue);
                                                                propertiesInstance6.SourcePartitionCount = sourcePartitionCountInstance;
                                                            }
                                                        }
                                                        
                                                        JToken typeValue7 = datasourceValue5["type"];
                                                        if (typeValue7 != null && typeValue7.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance7 = ((string)typeValue7);
                                                            blobStreamInputDataSourceInstance.Type = typeInstance7;
                                                        }
                                                        streamInputPropertiesInstance.DataSource = blobStreamInputDataSourceInstance;
                                                    }
                                                    if (typeName4 == "Microsoft.ServiceBus/EventHub")
                                                    {
                                                        EventHubStreamInputDataSource eventHubStreamInputDataSourceInstance = new EventHubStreamInputDataSource();
                                                        
                                                        JToken propertiesValue25 = datasourceValue5["properties"];
                                                        if (propertiesValue25 != null && propertiesValue25.Type != JTokenType.Null)
                                                        {
                                                            EventHubStreamInputDataSourceProperties propertiesInstance7 = new EventHubStreamInputDataSourceProperties();
                                                            eventHubStreamInputDataSourceInstance.Properties = propertiesInstance7;
                                                            
                                                            JToken serviceBusNamespaceValue = propertiesValue25["serviceBusNamespace"];
                                                            if (serviceBusNamespaceValue != null && serviceBusNamespaceValue.Type != JTokenType.Null)
                                                            {
                                                                string serviceBusNamespaceInstance = ((string)serviceBusNamespaceValue);
                                                                propertiesInstance7.ServiceBusNamespace = serviceBusNamespaceInstance;
                                                            }
                                                            
                                                            JToken sharedAccessPolicyNameValue = propertiesValue25["sharedAccessPolicyName"];
                                                            if (sharedAccessPolicyNameValue != null && sharedAccessPolicyNameValue.Type != JTokenType.Null)
                                                            {
                                                                string sharedAccessPolicyNameInstance = ((string)sharedAccessPolicyNameValue);
                                                                propertiesInstance7.SharedAccessPolicyName = sharedAccessPolicyNameInstance;
                                                            }
                                                            
                                                            JToken sharedAccessPolicyKeyValue = propertiesValue25["sharedAccessPolicyKey"];
                                                            if (sharedAccessPolicyKeyValue != null && sharedAccessPolicyKeyValue.Type != JTokenType.Null)
                                                            {
                                                                string sharedAccessPolicyKeyInstance = ((string)sharedAccessPolicyKeyValue);
                                                                propertiesInstance7.SharedAccessPolicyKey = sharedAccessPolicyKeyInstance;
                                                            }
                                                            
                                                            JToken eventHubNameValue = propertiesValue25["eventHubName"];
                                                            if (eventHubNameValue != null && eventHubNameValue.Type != JTokenType.Null)
                                                            {
                                                                string eventHubNameInstance = ((string)eventHubNameValue);
                                                                propertiesInstance7.EventHubName = eventHubNameInstance;
                                                            }
                                                            
                                                            JToken consumerGroupNameValue = propertiesValue25["consumerGroupName"];
                                                            if (consumerGroupNameValue != null && consumerGroupNameValue.Type != JTokenType.Null)
                                                            {
                                                                string consumerGroupNameInstance = ((string)consumerGroupNameValue);
                                                                propertiesInstance7.ConsumerGroupName = consumerGroupNameInstance;
                                                            }
                                                        }
                                                        
                                                        JToken typeValue8 = datasourceValue5["type"];
                                                        if (typeValue8 != null && typeValue8.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance8 = ((string)typeValue8);
                                                            eventHubStreamInputDataSourceInstance.Type = typeInstance8;
                                                        }
                                                        streamInputPropertiesInstance.DataSource = eventHubStreamInputDataSourceInstance;
                                                    }
                                                }
                                                
                                                JToken etagValue3 = propertiesValue19["etag"];
                                                if (etagValue3 != null && etagValue3.Type != JTokenType.Null)
                                                {
                                                    string etagInstance3 = ((string)etagValue3);
                                                    streamInputPropertiesInstance.Etag = etagInstance3;
                                                }
                                                
                                                JToken typeValue9 = propertiesValue19["type"];
                                                if (typeValue9 != null && typeValue9.Type != JTokenType.Null)
                                                {
                                                    string typeInstance9 = ((string)typeValue9);
                                                    streamInputPropertiesInstance.Type = typeInstance9;
                                                }
                                                
                                                JToken serializationValue5 = propertiesValue19["serialization"];
                                                if (serializationValue5 != null && serializationValue5.Type != JTokenType.Null)
                                                {
                                                    string typeName5 = ((string)serializationValue5["type"]);
                                                    if (typeName5 == "Csv")
                                                    {
                                                        CsvSerialization csvSerializationInstance2 = new CsvSerialization();
                                                        
                                                        JToken propertiesValue26 = serializationValue5["properties"];
                                                        if (propertiesValue26 != null && propertiesValue26.Type != JTokenType.Null)
                                                        {
                                                            CsvSerializationProperties propertiesInstance8 = new CsvSerializationProperties();
                                                            csvSerializationInstance2.Properties = propertiesInstance8;
                                                            
                                                            JToken fieldDelimiterValue2 = propertiesValue26["fieldDelimiter"];
                                                            if (fieldDelimiterValue2 != null && fieldDelimiterValue2.Type != JTokenType.Null)
                                                            {
                                                                string fieldDelimiterInstance2 = ((string)fieldDelimiterValue2);
                                                                propertiesInstance8.FieldDelimiter = fieldDelimiterInstance2;
                                                            }
                                                            
                                                            JToken encodingValue3 = propertiesValue26["encoding"];
                                                            if (encodingValue3 != null && encodingValue3.Type != JTokenType.Null)
                                                            {
                                                                string encodingInstance3 = ((string)encodingValue3);
                                                                propertiesInstance8.Encoding = encodingInstance3;
                                                            }
                                                        }
                                                        
                                                        JToken typeValue10 = serializationValue5["type"];
                                                        if (typeValue10 != null && typeValue10.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance10 = ((string)typeValue10);
                                                            csvSerializationInstance2.Type = typeInstance10;
                                                        }
                                                        streamInputPropertiesInstance.Serialization = csvSerializationInstance2;
                                                    }
                                                    if (typeName5 == "Json")
                                                    {
                                                        JsonSerialization jsonSerializationInstance2 = new JsonSerialization();
                                                        
                                                        JToken propertiesValue27 = serializationValue5["properties"];
                                                        if (propertiesValue27 != null && propertiesValue27.Type != JTokenType.Null)
                                                        {
                                                            JsonSerializationProperties propertiesInstance9 = new JsonSerializationProperties();
                                                            jsonSerializationInstance2.Properties = propertiesInstance9;
                                                            
                                                            JToken encodingValue4 = propertiesValue27["encoding"];
                                                            if (encodingValue4 != null && encodingValue4.Type != JTokenType.Null)
                                                            {
                                                                string encodingInstance4 = ((string)encodingValue4);
                                                                propertiesInstance9.Encoding = encodingInstance4;
                                                            }
                                                            
                                                            JToken formatValue2 = propertiesValue27["format"];
                                                            if (formatValue2 != null && formatValue2.Type != JTokenType.Null)
                                                            {
                                                                string formatInstance2 = ((string)formatValue2);
                                                                propertiesInstance9.Format = formatInstance2;
                                                            }
                                                        }
                                                        
                                                        JToken typeValue11 = serializationValue5["type"];
                                                        if (typeValue11 != null && typeValue11.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance11 = ((string)typeValue11);
                                                            jsonSerializationInstance2.Type = typeInstance11;
                                                        }
                                                        streamInputPropertiesInstance.Serialization = jsonSerializationInstance2;
                                                    }
                                                    if (typeName5 == "Avro")
                                                    {
                                                        AvroSerialization avroSerializationInstance2 = new AvroSerialization();
                                                        
                                                        JToken propertiesValue28 = serializationValue5["properties"];
                                                        if (propertiesValue28 != null && propertiesValue28.Type != JTokenType.Null)
                                                        {
                                                            AvroSerializationProperties propertiesInstance10 = new AvroSerializationProperties();
                                                            avroSerializationInstance2.Properties = propertiesInstance10;
                                                        }
                                                        
                                                        JToken typeValue12 = serializationValue5["type"];
                                                        if (typeValue12 != null && typeValue12.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance12 = ((string)typeValue12);
                                                            avroSerializationInstance2.Type = typeInstance12;
                                                        }
                                                        streamInputPropertiesInstance.Serialization = avroSerializationInstance2;
                                                    }
                                                }
                                                
                                                JToken diagnosticsValue5 = propertiesValue19["diagnostics"];
                                                if (diagnosticsValue5 != null && diagnosticsValue5.Type != JTokenType.Null)
                                                {
                                                    Diagnostics diagnosticsInstance2 = new Diagnostics();
                                                    streamInputPropertiesInstance.Diagnostics = diagnosticsInstance2;
                                                    
                                                    JToken conditionsArray5 = diagnosticsValue5["conditions"];
                                                    if (conditionsArray5 != null && conditionsArray5.Type != JTokenType.Null)
                                                    {
                                                        foreach (JToken conditionsValue2 in ((JArray)conditionsArray5))
                                                        {
                                                            DiagnosticCondition diagnosticConditionInstance2 = new DiagnosticCondition();
                                                            diagnosticsInstance2.Conditions.Add(diagnosticConditionInstance2);
                                                            
                                                            JToken sinceValue2 = conditionsValue2["since"];
                                                            if (sinceValue2 != null && sinceValue2.Type != JTokenType.Null)
                                                            {
                                                                DateTime sinceInstance2 = ((DateTime)sinceValue2);
                                                                diagnosticConditionInstance2.Since = sinceInstance2;
                                                            }
                                                            
                                                            JToken codeValue2 = conditionsValue2["code"];
                                                            if (codeValue2 != null && codeValue2.Type != JTokenType.Null)
                                                            {
                                                                string codeInstance2 = ((string)codeValue2);
                                                                diagnosticConditionInstance2.Code = codeInstance2;
                                                            }
                                                            
                                                            JToken messageValue2 = conditionsValue2["message"];
                                                            if (messageValue2 != null && messageValue2.Type != JTokenType.Null)
                                                            {
                                                                string messageInstance2 = ((string)messageValue2);
                                                                diagnosticConditionInstance2.Message = messageInstance2;
                                                            }
                                                        }
                                                    }
                                                }
                                                inputInstance.Properties = streamInputPropertiesInstance;
                                            }
                                        }
                                    }
                                }
                                
                                JToken transformationValue2 = propertiesValue18["transformation"];
                                if (transformationValue2 != null && transformationValue2.Type != JTokenType.Null)
                                {
                                    Transformation transformationInstance = new Transformation();
                                    propertiesInstance.Transformation = transformationInstance;
                                    
                                    JToken nameValue4 = transformationValue2["name"];
                                    if (nameValue4 != null && nameValue4.Type != JTokenType.Null)
                                    {
                                        string nameInstance4 = ((string)nameValue4);
                                        transformationInstance.Name = nameInstance4;
                                    }
                                    
                                    JToken propertiesValue29 = transformationValue2["properties"];
                                    if (propertiesValue29 != null && propertiesValue29.Type != JTokenType.Null)
                                    {
                                        TransformationProperties propertiesInstance11 = new TransformationProperties();
                                        transformationInstance.Properties = propertiesInstance11;
                                        
                                        JToken etagValue4 = propertiesValue29["etag"];
                                        if (etagValue4 != null && etagValue4.Type != JTokenType.Null)
                                        {
                                            string etagInstance4 = ((string)etagValue4);
                                            propertiesInstance11.Etag = etagInstance4;
                                        }
                                        
                                        JToken streamingUnitsValue = propertiesValue29["streamingUnits"];
                                        if (streamingUnitsValue != null && streamingUnitsValue.Type != JTokenType.Null)
                                        {
                                            int streamingUnitsInstance = ((int)streamingUnitsValue);
                                            propertiesInstance11.StreamingUnits = streamingUnitsInstance;
                                        }
                                        
                                        JToken queryValue = propertiesValue29["query"];
                                        if (queryValue != null && queryValue.Type != JTokenType.Null)
                                        {
                                            string queryInstance = ((string)queryValue);
                                            propertiesInstance11.Query = queryInstance;
                                        }
                                    }
                                }
                                
                                JToken outputsArray2 = propertiesValue18["outputs"];
                                if (outputsArray2 != null && outputsArray2.Type != JTokenType.Null)
                                {
                                    foreach (JToken outputsValue in ((JArray)outputsArray2))
                                    {
                                        Output outputInstance = new Output();
                                        propertiesInstance.Outputs.Add(outputInstance);
                                        
                                        JToken nameValue5 = outputsValue["name"];
                                        if (nameValue5 != null && nameValue5.Type != JTokenType.Null)
                                        {
                                            string nameInstance5 = ((string)nameValue5);
                                            outputInstance.Name = nameInstance5;
                                        }
                                        
                                        JToken propertiesValue30 = outputsValue["properties"];
                                        if (propertiesValue30 != null && propertiesValue30.Type != JTokenType.Null)
                                        {
                                            OutputProperties propertiesInstance12 = new OutputProperties();
                                            outputInstance.Properties = propertiesInstance12;
                                            
                                            JToken etagValue5 = propertiesValue30["etag"];
                                            if (etagValue5 != null && etagValue5.Type != JTokenType.Null)
                                            {
                                                string etagInstance5 = ((string)etagValue5);
                                                propertiesInstance12.Etag = etagInstance5;
                                            }
                                            
                                            JToken datasourceValue6 = propertiesValue30["datasource"];
                                            if (datasourceValue6 != null && datasourceValue6.Type != JTokenType.Null)
                                            {
                                                string typeName6 = ((string)datasourceValue6["type"]);
                                                if (typeName6 == "Microsoft.Storage/Blob")
                                                {
                                                    BlobOutputDataSource blobOutputDataSourceInstance = new BlobOutputDataSource();
                                                    
                                                    JToken propertiesValue31 = datasourceValue6["properties"];
                                                    if (propertiesValue31 != null && propertiesValue31.Type != JTokenType.Null)
                                                    {
                                                        BlobOutputDataSourceProperties propertiesInstance13 = new BlobOutputDataSourceProperties();
                                                        blobOutputDataSourceInstance.Properties = propertiesInstance13;
                                                        
                                                        JToken storageAccountsArray6 = propertiesValue31["storageAccounts"];
                                                        if (storageAccountsArray6 != null && storageAccountsArray6.Type != JTokenType.Null)
                                                        {
                                                            foreach (JToken storageAccountsValue3 in ((JArray)storageAccountsArray6))
                                                            {
                                                                StorageAccount storageAccountInstance3 = new StorageAccount();
                                                                propertiesInstance13.StorageAccounts.Add(storageAccountInstance3);
                                                                
                                                                JToken accountNameValue3 = storageAccountsValue3["accountName"];
                                                                if (accountNameValue3 != null && accountNameValue3.Type != JTokenType.Null)
                                                                {
                                                                    string accountNameInstance3 = ((string)accountNameValue3);
                                                                    storageAccountInstance3.AccountName = accountNameInstance3;
                                                                }
                                                                
                                                                JToken accountKeyValue3 = storageAccountsValue3["accountKey"];
                                                                if (accountKeyValue3 != null && accountKeyValue3.Type != JTokenType.Null)
                                                                {
                                                                    string accountKeyInstance3 = ((string)accountKeyValue3);
                                                                    storageAccountInstance3.AccountKey = accountKeyInstance3;
                                                                }
                                                            }
                                                        }
                                                        
                                                        JToken containerValue3 = propertiesValue31["container"];
                                                        if (containerValue3 != null && containerValue3.Type != JTokenType.Null)
                                                        {
                                                            string containerInstance3 = ((string)containerValue3);
                                                            propertiesInstance13.Container = containerInstance3;
                                                        }
                                                        
                                                        JToken blobPathPrefixValue = propertiesValue31["blobPathPrefix"];
                                                        if (blobPathPrefixValue != null && blobPathPrefixValue.Type != JTokenType.Null)
                                                        {
                                                            string blobPathPrefixInstance = ((string)blobPathPrefixValue);
                                                            propertiesInstance13.BlobPathPrefix = blobPathPrefixInstance;
                                                        }
                                                    }
                                                    
                                                    JToken typeValue13 = datasourceValue6["type"];
                                                    if (typeValue13 != null && typeValue13.Type != JTokenType.Null)
                                                    {
                                                        string typeInstance13 = ((string)typeValue13);
                                                        blobOutputDataSourceInstance.Type = typeInstance13;
                                                    }
                                                    propertiesInstance12.DataSource = blobOutputDataSourceInstance;
                                                }
                                                if (typeName6 == "Microsoft.Storage/Table")
                                                {
                                                    AzureTableOutputDataSource azureTableOutputDataSourceInstance = new AzureTableOutputDataSource();
                                                    
                                                    JToken propertiesValue32 = datasourceValue6["properties"];
                                                    if (propertiesValue32 != null && propertiesValue32.Type != JTokenType.Null)
                                                    {
                                                        AzureTableOutputDataSourceProperties propertiesInstance14 = new AzureTableOutputDataSourceProperties();
                                                        azureTableOutputDataSourceInstance.Properties = propertiesInstance14;
                                                        
                                                        JToken accountNameValue4 = propertiesValue32["accountName"];
                                                        if (accountNameValue4 != null && accountNameValue4.Type != JTokenType.Null)
                                                        {
                                                            string accountNameInstance4 = ((string)accountNameValue4);
                                                            propertiesInstance14.AccountName = accountNameInstance4;
                                                        }
                                                        
                                                        JToken accountKeyValue4 = propertiesValue32["accountKey"];
                                                        if (accountKeyValue4 != null && accountKeyValue4.Type != JTokenType.Null)
                                                        {
                                                            string accountKeyInstance4 = ((string)accountKeyValue4);
                                                            propertiesInstance14.AccountKey = accountKeyInstance4;
                                                        }
                                                        
                                                        JToken tableValue = propertiesValue32["table"];
                                                        if (tableValue != null && tableValue.Type != JTokenType.Null)
                                                        {
                                                            string tableInstance = ((string)tableValue);
                                                            propertiesInstance14.Table = tableInstance;
                                                        }
                                                        
                                                        JToken partitionKeyValue = propertiesValue32["partitionKey"];
                                                        if (partitionKeyValue != null && partitionKeyValue.Type != JTokenType.Null)
                                                        {
                                                            string partitionKeyInstance = ((string)partitionKeyValue);
                                                            propertiesInstance14.PartitionKey = partitionKeyInstance;
                                                        }
                                                        
                                                        JToken rowKeyValue = propertiesValue32["rowKey"];
                                                        if (rowKeyValue != null && rowKeyValue.Type != JTokenType.Null)
                                                        {
                                                            string rowKeyInstance = ((string)rowKeyValue);
                                                            propertiesInstance14.RowKey = rowKeyInstance;
                                                        }
                                                        
                                                        JToken columnsToRemoveArray2 = propertiesValue32["columnsToRemove"];
                                                        if (columnsToRemoveArray2 != null && columnsToRemoveArray2.Type != JTokenType.Null)
                                                        {
                                                            foreach (JToken columnsToRemoveValue in ((JArray)columnsToRemoveArray2))
                                                            {
                                                                propertiesInstance14.ColumnsToRemove.Add(((string)columnsToRemoveValue));
                                                            }
                                                        }
                                                        
                                                        JToken batchSizeValue = propertiesValue32["batchSize"];
                                                        if (batchSizeValue != null && batchSizeValue.Type != JTokenType.Null)
                                                        {
                                                            int batchSizeInstance = ((int)batchSizeValue);
                                                            propertiesInstance14.BatchSize = batchSizeInstance;
                                                        }
                                                    }
                                                    
                                                    JToken typeValue14 = datasourceValue6["type"];
                                                    if (typeValue14 != null && typeValue14.Type != JTokenType.Null)
                                                    {
                                                        string typeInstance14 = ((string)typeValue14);
                                                        azureTableOutputDataSourceInstance.Type = typeInstance14;
                                                    }
                                                    propertiesInstance12.DataSource = azureTableOutputDataSourceInstance;
                                                }
                                                if (typeName6 == "Microsoft.ServiceBus/EventHub")
                                                {
                                                    EventHubOutputDataSource eventHubOutputDataSourceInstance = new EventHubOutputDataSource();
                                                    
                                                    JToken propertiesValue33 = datasourceValue6["properties"];
                                                    if (propertiesValue33 != null && propertiesValue33.Type != JTokenType.Null)
                                                    {
                                                        EventHubOutputDataSourceProperties propertiesInstance15 = new EventHubOutputDataSourceProperties();
                                                        eventHubOutputDataSourceInstance.Properties = propertiesInstance15;
                                                        
                                                        JToken serviceBusNamespaceValue2 = propertiesValue33["serviceBusNamespace"];
                                                        if (serviceBusNamespaceValue2 != null && serviceBusNamespaceValue2.Type != JTokenType.Null)
                                                        {
                                                            string serviceBusNamespaceInstance2 = ((string)serviceBusNamespaceValue2);
                                                            propertiesInstance15.ServiceBusNamespace = serviceBusNamespaceInstance2;
                                                        }
                                                        
                                                        JToken sharedAccessPolicyNameValue2 = propertiesValue33["sharedAccessPolicyName"];
                                                        if (sharedAccessPolicyNameValue2 != null && sharedAccessPolicyNameValue2.Type != JTokenType.Null)
                                                        {
                                                            string sharedAccessPolicyNameInstance2 = ((string)sharedAccessPolicyNameValue2);
                                                            propertiesInstance15.SharedAccessPolicyName = sharedAccessPolicyNameInstance2;
                                                        }
                                                        
                                                        JToken sharedAccessPolicyKeyValue2 = propertiesValue33["sharedAccessPolicyKey"];
                                                        if (sharedAccessPolicyKeyValue2 != null && sharedAccessPolicyKeyValue2.Type != JTokenType.Null)
                                                        {
                                                            string sharedAccessPolicyKeyInstance2 = ((string)sharedAccessPolicyKeyValue2);
                                                            propertiesInstance15.SharedAccessPolicyKey = sharedAccessPolicyKeyInstance2;
                                                        }
                                                        
                                                        JToken eventHubNameValue2 = propertiesValue33["eventHubName"];
                                                        if (eventHubNameValue2 != null && eventHubNameValue2.Type != JTokenType.Null)
                                                        {
                                                            string eventHubNameInstance2 = ((string)eventHubNameValue2);
                                                            propertiesInstance15.EventHubName = eventHubNameInstance2;
                                                        }
                                                        
                                                        JToken partitionKeyValue2 = propertiesValue33["partitionKey"];
                                                        if (partitionKeyValue2 != null && partitionKeyValue2.Type != JTokenType.Null)
                                                        {
                                                            string partitionKeyInstance2 = ((string)partitionKeyValue2);
                                                            propertiesInstance15.PartitionKey = partitionKeyInstance2;
                                                        }
                                                    }
                                                    
                                                    JToken typeValue15 = datasourceValue6["type"];
                                                    if (typeValue15 != null && typeValue15.Type != JTokenType.Null)
                                                    {
                                                        string typeInstance15 = ((string)typeValue15);
                                                        eventHubOutputDataSourceInstance.Type = typeInstance15;
                                                    }
                                                    propertiesInstance12.DataSource = eventHubOutputDataSourceInstance;
                                                }
                                                if (typeName6 == "Microsoft.Sql/Server/Database")
                                                {
                                                    SqlAzureOutputDataSource sqlAzureOutputDataSourceInstance = new SqlAzureOutputDataSource();
                                                    
                                                    JToken propertiesValue34 = datasourceValue6["properties"];
                                                    if (propertiesValue34 != null && propertiesValue34.Type != JTokenType.Null)
                                                    {
                                                        SqlAzureOutputDataSourceProperties propertiesInstance16 = new SqlAzureOutputDataSourceProperties();
                                                        sqlAzureOutputDataSourceInstance.Properties = propertiesInstance16;
                                                        
                                                        JToken serverValue = propertiesValue34["server"];
                                                        if (serverValue != null && serverValue.Type != JTokenType.Null)
                                                        {
                                                            string serverInstance = ((string)serverValue);
                                                            propertiesInstance16.Server = serverInstance;
                                                        }
                                                        
                                                        JToken databaseValue = propertiesValue34["database"];
                                                        if (databaseValue != null && databaseValue.Type != JTokenType.Null)
                                                        {
                                                            string databaseInstance = ((string)databaseValue);
                                                            propertiesInstance16.Database = databaseInstance;
                                                        }
                                                        
                                                        JToken userValue = propertiesValue34["user"];
                                                        if (userValue != null && userValue.Type != JTokenType.Null)
                                                        {
                                                            string userInstance = ((string)userValue);
                                                            propertiesInstance16.User = userInstance;
                                                        }
                                                        
                                                        JToken passwordValue = propertiesValue34["password"];
                                                        if (passwordValue != null && passwordValue.Type != JTokenType.Null)
                                                        {
                                                            string passwordInstance = ((string)passwordValue);
                                                            propertiesInstance16.Password = passwordInstance;
                                                        }
                                                        
                                                        JToken tableValue2 = propertiesValue34["table"];
                                                        if (tableValue2 != null && tableValue2.Type != JTokenType.Null)
                                                        {
                                                            string tableInstance2 = ((string)tableValue2);
                                                            propertiesInstance16.Table = tableInstance2;
                                                        }
                                                    }
                                                    
                                                    JToken typeValue16 = datasourceValue6["type"];
                                                    if (typeValue16 != null && typeValue16.Type != JTokenType.Null)
                                                    {
                                                        string typeInstance16 = ((string)typeValue16);
                                                        sqlAzureOutputDataSourceInstance.Type = typeInstance16;
                                                    }
                                                    propertiesInstance12.DataSource = sqlAzureOutputDataSourceInstance;
                                                }
                                            }
                                            
                                            JToken serializationValue6 = propertiesValue30["serialization"];
                                            if (serializationValue6 != null && serializationValue6.Type != JTokenType.Null)
                                            {
                                                string typeName7 = ((string)serializationValue6["type"]);
                                                if (typeName7 == "Csv")
                                                {
                                                    CsvSerialization csvSerializationInstance3 = new CsvSerialization();
                                                    
                                                    JToken propertiesValue35 = serializationValue6["properties"];
                                                    if (propertiesValue35 != null && propertiesValue35.Type != JTokenType.Null)
                                                    {
                                                        CsvSerializationProperties propertiesInstance17 = new CsvSerializationProperties();
                                                        csvSerializationInstance3.Properties = propertiesInstance17;
                                                        
                                                        JToken fieldDelimiterValue3 = propertiesValue35["fieldDelimiter"];
                                                        if (fieldDelimiterValue3 != null && fieldDelimiterValue3.Type != JTokenType.Null)
                                                        {
                                                            string fieldDelimiterInstance3 = ((string)fieldDelimiterValue3);
                                                            propertiesInstance17.FieldDelimiter = fieldDelimiterInstance3;
                                                        }
                                                        
                                                        JToken encodingValue5 = propertiesValue35["encoding"];
                                                        if (encodingValue5 != null && encodingValue5.Type != JTokenType.Null)
                                                        {
                                                            string encodingInstance5 = ((string)encodingValue5);
                                                            propertiesInstance17.Encoding = encodingInstance5;
                                                        }
                                                    }
                                                    
                                                    JToken typeValue17 = serializationValue6["type"];
                                                    if (typeValue17 != null && typeValue17.Type != JTokenType.Null)
                                                    {
                                                        string typeInstance17 = ((string)typeValue17);
                                                        csvSerializationInstance3.Type = typeInstance17;
                                                    }
                                                    propertiesInstance12.Serialization = csvSerializationInstance3;
                                                }
                                                if (typeName7 == "Json")
                                                {
                                                    JsonSerialization jsonSerializationInstance3 = new JsonSerialization();
                                                    
                                                    JToken propertiesValue36 = serializationValue6["properties"];
                                                    if (propertiesValue36 != null && propertiesValue36.Type != JTokenType.Null)
                                                    {
                                                        JsonSerializationProperties propertiesInstance18 = new JsonSerializationProperties();
                                                        jsonSerializationInstance3.Properties = propertiesInstance18;
                                                        
                                                        JToken encodingValue6 = propertiesValue36["encoding"];
                                                        if (encodingValue6 != null && encodingValue6.Type != JTokenType.Null)
                                                        {
                                                            string encodingInstance6 = ((string)encodingValue6);
                                                            propertiesInstance18.Encoding = encodingInstance6;
                                                        }
                                                        
                                                        JToken formatValue3 = propertiesValue36["format"];
                                                        if (formatValue3 != null && formatValue3.Type != JTokenType.Null)
                                                        {
                                                            string formatInstance3 = ((string)formatValue3);
                                                            propertiesInstance18.Format = formatInstance3;
                                                        }
                                                    }
                                                    
                                                    JToken typeValue18 = serializationValue6["type"];
                                                    if (typeValue18 != null && typeValue18.Type != JTokenType.Null)
                                                    {
                                                        string typeInstance18 = ((string)typeValue18);
                                                        jsonSerializationInstance3.Type = typeInstance18;
                                                    }
                                                    propertiesInstance12.Serialization = jsonSerializationInstance3;
                                                }
                                                if (typeName7 == "Avro")
                                                {
                                                    AvroSerialization avroSerializationInstance3 = new AvroSerialization();
                                                    
                                                    JToken propertiesValue37 = serializationValue6["properties"];
                                                    if (propertiesValue37 != null && propertiesValue37.Type != JTokenType.Null)
                                                    {
                                                        AvroSerializationProperties propertiesInstance19 = new AvroSerializationProperties();
                                                        avroSerializationInstance3.Properties = propertiesInstance19;
                                                    }
                                                    
                                                    JToken typeValue19 = serializationValue6["type"];
                                                    if (typeValue19 != null && typeValue19.Type != JTokenType.Null)
                                                    {
                                                        string typeInstance19 = ((string)typeValue19);
                                                        avroSerializationInstance3.Type = typeInstance19;
                                                    }
                                                    propertiesInstance12.Serialization = avroSerializationInstance3;
                                                }
                                            }
                                            
                                            JToken diagnosticsValue6 = propertiesValue30["diagnostics"];
                                            if (diagnosticsValue6 != null && diagnosticsValue6.Type != JTokenType.Null)
                                            {
                                                Diagnostics diagnosticsInstance3 = new Diagnostics();
                                                propertiesInstance12.Diagnostics = diagnosticsInstance3;
                                                
                                                JToken conditionsArray6 = diagnosticsValue6["conditions"];
                                                if (conditionsArray6 != null && conditionsArray6.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken conditionsValue3 in ((JArray)conditionsArray6))
                                                    {
                                                        DiagnosticCondition diagnosticConditionInstance3 = new DiagnosticCondition();
                                                        diagnosticsInstance3.Conditions.Add(diagnosticConditionInstance3);
                                                        
                                                        JToken sinceValue3 = conditionsValue3["since"];
                                                        if (sinceValue3 != null && sinceValue3.Type != JTokenType.Null)
                                                        {
                                                            DateTime sinceInstance3 = ((DateTime)sinceValue3);
                                                            diagnosticConditionInstance3.Since = sinceInstance3;
                                                        }
                                                        
                                                        JToken codeValue3 = conditionsValue3["code"];
                                                        if (codeValue3 != null && codeValue3.Type != JTokenType.Null)
                                                        {
                                                            string codeInstance3 = ((string)codeValue3);
                                                            diagnosticConditionInstance3.Code = codeInstance3;
                                                        }
                                                        
                                                        JToken messageValue3 = conditionsValue3["message"];
                                                        if (messageValue3 != null && messageValue3.Type != JTokenType.Null)
                                                        {
                                                            string messageInstance3 = ((string)messageValue3);
                                                            diagnosticConditionInstance3.Message = messageInstance3;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        
                    }
                    result.StatusCode = statusCode;
                    if (httpResponse.Headers.Contains("Date"))
                    {
                        result.Date = DateTime.Parse(httpResponse.Headers.GetValues("Date").FirstOrDefault(), CultureInfo.InvariantCulture, DateTimeStyles.AdjustToUniversal).ToLocalTime();
                    }
                    if (httpResponse.Headers.Contains("ETag"))
                    {
                        result.Job.Properties.Etag = httpResponse.Headers.GetValues("ETag").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-request-id"))
                    {
                        result.RequestId = httpResponse.Headers.GetValues("x-ms-request-id").FirstOrDefault();
                    }
                    
                    if (shouldTrace)
                    {
                        TracingAdapter.Exit(invocationId, result);
                    }
                    return result;
                }
                finally
                {
                    if (httpResponse != null)
                    {
                        httpResponse.Dispose();
                    }
                }
            }
            finally
            {
                if (httpRequest != null)
                {
                    httpRequest.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Create or update a stream analytics job. The raw json content will
        /// be used.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// Required. The name of the stream analytics job.
        /// </param>
        /// <param name='parameters'>
        /// Required. The parameters required to create or update a stream
        /// analytics job.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response of the create stream analytics job operation.
        /// </returns>
        public async Task<JobCreateOrUpdateResponse> CreateOrUpdateWithRawJsonContentAsync(string resourceGroupName, string jobName, JobCreateOrUpdateWithRawJsonContentParameters parameters, CancellationToken cancellationToken)
        {
            // Validate
            if (resourceGroupName == null)
            {
                throw new ArgumentNullException("resourceGroupName");
            }
            if (jobName == null)
            {
                throw new ArgumentNullException("jobName");
            }
            if (parameters == null)
            {
                throw new ArgumentNullException("parameters");
            }
            if (parameters.Content == null)
            {
                throw new ArgumentNullException("parameters.Content");
            }
            
            // Tracing
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("resourceGroupName", resourceGroupName);
                tracingParameters.Add("jobName", jobName);
                tracingParameters.Add("parameters", parameters);
                TracingAdapter.Enter(invocationId, this, "CreateOrUpdateWithRawJsonContentAsync", tracingParameters);
            }
            
            // Construct URL
            string url = "";
            url = url + "/subscriptions/";
            if (this.Client.Credentials.SubscriptionId != null)
            {
                url = url + Uri.EscapeDataString(this.Client.Credentials.SubscriptionId);
            }
            url = url + "/resourcegroups/";
            url = url + Uri.EscapeDataString(resourceGroupName);
            url = url + "/providers/Microsoft.StreamAnalytics/streamingjobs/";
            url = url + Uri.EscapeDataString(jobName);
            List<string> queryParameters = new List<string>();
            queryParameters.Add("api-version=2015-04-01");
            if (queryParameters.Count > 0)
            {
                url = url + "?" + string.Join("&", queryParameters);
            }
            string baseUrl = this.Client.BaseUri.AbsoluteUri;
            // Trim '/' character from the end of baseUrl and beginning of url.
            if (baseUrl[baseUrl.Length - 1] == '/')
            {
                baseUrl = baseUrl.Substring(0, baseUrl.Length - 1);
            }
            if (url[0] == '/')
            {
                url = url.Substring(1);
            }
            url = baseUrl + "/" + url;
            url = url.Replace(" ", "%20");
            
            // Create HTTP transport objects
            HttpRequestMessage httpRequest = null;
            try
            {
                httpRequest = new HttpRequestMessage();
                httpRequest.Method = HttpMethod.Put;
                httpRequest.RequestUri = new Uri(url);
                
                // Set Headers
                httpRequest.Headers.Add("If-None-Match", parameters.IfNoneMatch);
                httpRequest.Headers.Add("x-ms-client-request-id", Guid.NewGuid().ToString());
                
                // Set Credentials
                cancellationToken.ThrowIfCancellationRequested();
                await this.Client.Credentials.ProcessHttpRequestAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                
                // Serialize Request
                string requestContent = parameters.Content;
                httpRequest.Content = new StringContent(requestContent, Encoding.UTF8);
                httpRequest.Content.Headers.ContentType = MediaTypeHeaderValue.Parse("application/json");
                
                // Send Request
                HttpResponseMessage httpResponse = null;
                try
                {
                    if (shouldTrace)
                    {
                        TracingAdapter.SendRequest(invocationId, httpRequest);
                    }
                    cancellationToken.ThrowIfCancellationRequested();
                    httpResponse = await this.Client.HttpClient.SendAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                    if (shouldTrace)
                    {
                        TracingAdapter.ReceiveResponse(invocationId, httpResponse);
                    }
                    HttpStatusCode statusCode = httpResponse.StatusCode;
                    if (statusCode != HttpStatusCode.OK && statusCode != HttpStatusCode.Created)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        CloudException ex = CloudException.Create(httpRequest, requestContent, httpResponse, await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false));
                        if (shouldTrace)
                        {
                            TracingAdapter.Error(invocationId, ex);
                        }
                        throw ex;
                    }
                    
                    // Create Result
                    JobCreateOrUpdateResponse result = null;
                    // Deserialize Response
                    if (statusCode == HttpStatusCode.OK || statusCode == HttpStatusCode.Created)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        string responseContent = await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false);
                        result = new JobCreateOrUpdateResponse();
                        JToken responseDoc = null;
                        if (string.IsNullOrEmpty(responseContent) == false)
                        {
                            responseDoc = JToken.Parse(responseContent);
                        }
                        
                        if (responseDoc != null && responseDoc.Type != JTokenType.Null)
                        {
                            Job jobInstance = new Job();
                            result.Job = jobInstance;
                            
                            JToken idValue = responseDoc["id"];
                            if (idValue != null && idValue.Type != JTokenType.Null)
                            {
                                string idInstance = ((string)idValue);
                                jobInstance.Id = idInstance;
                            }
                            
                            JToken nameValue = responseDoc["name"];
                            if (nameValue != null && nameValue.Type != JTokenType.Null)
                            {
                                string nameInstance = ((string)nameValue);
                                jobInstance.Name = nameInstance;
                            }
                            
                            JToken typeValue = responseDoc["type"];
                            if (typeValue != null && typeValue.Type != JTokenType.Null)
                            {
                                string typeInstance = ((string)typeValue);
                                jobInstance.Type = typeInstance;
                            }
                            
                            JToken locationValue = responseDoc["location"];
                            if (locationValue != null && locationValue.Type != JTokenType.Null)
                            {
                                string locationInstance = ((string)locationValue);
                                jobInstance.Location = locationInstance;
                            }
                            
                            JToken tagsSequenceElement = ((JToken)responseDoc["tags"]);
                            if (tagsSequenceElement != null && tagsSequenceElement.Type != JTokenType.Null)
                            {
                                foreach (JProperty property in tagsSequenceElement)
                                {
                                    string tagsKey = ((string)property.Name);
                                    string tagsValue = ((string)property.Value);
                                    jobInstance.Tags.Add(tagsKey, tagsValue);
                                }
                            }
                            
                            JToken propertiesValue = responseDoc["properties"];
                            if (propertiesValue != null && propertiesValue.Type != JTokenType.Null)
                            {
                                JobProperties propertiesInstance = new JobProperties();
                                jobInstance.Properties = propertiesInstance;
                                
                                JToken skuValue = propertiesValue["sku"];
                                if (skuValue != null && skuValue.Type != JTokenType.Null)
                                {
                                    Sku skuInstance = new Sku();
                                    propertiesInstance.Sku = skuInstance;
                                    
                                    JToken nameValue2 = skuValue["name"];
                                    if (nameValue2 != null && nameValue2.Type != JTokenType.Null)
                                    {
                                        string nameInstance2 = ((string)nameValue2);
                                        skuInstance.Name = nameInstance2;
                                    }
                                }
                                
                                JToken eventsOutOfOrderPolicyValue = propertiesValue["eventsOutOfOrderPolicy"];
                                if (eventsOutOfOrderPolicyValue != null && eventsOutOfOrderPolicyValue.Type != JTokenType.Null)
                                {
                                    string eventsOutOfOrderPolicyInstance = ((string)eventsOutOfOrderPolicyValue);
                                    propertiesInstance.EventsOutOfOrderPolicy = eventsOutOfOrderPolicyInstance;
                                }
                                
                                JToken eventsOutOfOrderMaxDelayInSecondsValue = propertiesValue["eventsOutOfOrderMaxDelayInSeconds"];
                                if (eventsOutOfOrderMaxDelayInSecondsValue != null && eventsOutOfOrderMaxDelayInSecondsValue.Type != JTokenType.Null)
                                {
                                    int eventsOutOfOrderMaxDelayInSecondsInstance = ((int)eventsOutOfOrderMaxDelayInSecondsValue);
                                    propertiesInstance.EventsOutOfOrderMaxDelayInSeconds = eventsOutOfOrderMaxDelayInSecondsInstance;
                                }
                                
                                JToken eventsLateArrivalMaxDelayInSecondsValue = propertiesValue["eventsLateArrivalMaxDelayInSeconds"];
                                if (eventsLateArrivalMaxDelayInSecondsValue != null && eventsLateArrivalMaxDelayInSecondsValue.Type != JTokenType.Null)
                                {
                                    int eventsLateArrivalMaxDelayInSecondsInstance = ((int)eventsLateArrivalMaxDelayInSecondsValue);
                                    propertiesInstance.EventsLateArrivalMaxDelayInSeconds = eventsLateArrivalMaxDelayInSecondsInstance;
                                }
                                
                                JToken dataLocaleValue = propertiesValue["dataLocale"];
                                if (dataLocaleValue != null && dataLocaleValue.Type != JTokenType.Null)
                                {
                                    string dataLocaleInstance = ((string)dataLocaleValue);
                                    propertiesInstance.DataLocale = dataLocaleInstance;
                                }
                                
                                JToken outputStartModeValue = propertiesValue["outputStartMode"];
                                if (outputStartModeValue != null && outputStartModeValue.Type != JTokenType.Null)
                                {
                                    string outputStartModeInstance = ((string)outputStartModeValue);
                                    propertiesInstance.OutputStartMode = outputStartModeInstance;
                                }
                                
                                JToken outputStartTimeValue = propertiesValue["outputStartTime"];
                                if (outputStartTimeValue != null && outputStartTimeValue.Type != JTokenType.Null)
                                {
                                    DateTime outputStartTimeInstance = ((DateTime)outputStartTimeValue);
                                    propertiesInstance.OutputStartTime = outputStartTimeInstance;
                                }
                                
                                JToken lastOutputEventTimeValue = propertiesValue["lastOutputEventTime"];
                                if (lastOutputEventTimeValue != null && lastOutputEventTimeValue.Type != JTokenType.Null)
                                {
                                    DateTime lastOutputEventTimeInstance = ((DateTime)lastOutputEventTimeValue);
                                    propertiesInstance.LastOutputEventTime = lastOutputEventTimeInstance;
                                }
                                
                                JToken jobIdValue = propertiesValue["jobId"];
                                if (jobIdValue != null && jobIdValue.Type != JTokenType.Null)
                                {
                                    string jobIdInstance = ((string)jobIdValue);
                                    propertiesInstance.JobId = jobIdInstance;
                                }
                                
                                JToken etagValue = propertiesValue["etag"];
                                if (etagValue != null && etagValue.Type != JTokenType.Null)
                                {
                                    string etagInstance = ((string)etagValue);
                                    propertiesInstance.Etag = etagInstance;
                                }
                                
                                JToken provisioningStateValue = propertiesValue["provisioningState"];
                                if (provisioningStateValue != null && provisioningStateValue.Type != JTokenType.Null)
                                {
                                    string provisioningStateInstance = ((string)provisioningStateValue);
                                    propertiesInstance.ProvisioningState = provisioningStateInstance;
                                }
                                
                                JToken jobStateValue = propertiesValue["jobState"];
                                if (jobStateValue != null && jobStateValue.Type != JTokenType.Null)
                                {
                                    string jobStateInstance = ((string)jobStateValue);
                                    propertiesInstance.JobState = jobStateInstance;
                                }
                                
                                JToken createdDateValue = propertiesValue["createdDate"];
                                if (createdDateValue != null && createdDateValue.Type != JTokenType.Null)
                                {
                                    DateTime createdDateInstance = ((DateTime)createdDateValue);
                                    propertiesInstance.CreatedDate = createdDateInstance;
                                }
                                
                                JToken inputsArray = propertiesValue["inputs"];
                                if (inputsArray != null && inputsArray.Type != JTokenType.Null)
                                {
                                    foreach (JToken inputsValue in ((JArray)inputsArray))
                                    {
                                        Input inputInstance = new Input();
                                        propertiesInstance.Inputs.Add(inputInstance);
                                        
                                        JToken nameValue3 = inputsValue["name"];
                                        if (nameValue3 != null && nameValue3.Type != JTokenType.Null)
                                        {
                                            string nameInstance3 = ((string)nameValue3);
                                            inputInstance.Name = nameInstance3;
                                        }
                                        
                                        JToken propertiesValue2 = inputsValue["properties"];
                                        if (propertiesValue2 != null && propertiesValue2.Type != JTokenType.Null)
                                        {
                                            string typeName = ((string)propertiesValue2["type"]);
                                            if (typeName == "Reference")
                                            {
                                                ReferenceInputProperties referenceInputPropertiesInstance = new ReferenceInputProperties();
                                                
                                                JToken datasourceValue = propertiesValue2["datasource"];
                                                if (datasourceValue != null && datasourceValue.Type != JTokenType.Null)
                                                {
                                                    string typeName2 = ((string)datasourceValue["type"]);
                                                    if (typeName2 == "Microsoft.Storage/Blob")
                                                    {
                                                        BlobReferenceInputDataSource blobReferenceInputDataSourceInstance = new BlobReferenceInputDataSource();
                                                        
                                                        JToken propertiesValue3 = datasourceValue["properties"];
                                                        if (propertiesValue3 != null && propertiesValue3.Type != JTokenType.Null)
                                                        {
                                                            BlobReferenceInputDataSourceProperties propertiesInstance2 = new BlobReferenceInputDataSourceProperties();
                                                            blobReferenceInputDataSourceInstance.Properties = propertiesInstance2;
                                                            
                                                            JToken storageAccountsArray = propertiesValue3["storageAccounts"];
                                                            if (storageAccountsArray != null && storageAccountsArray.Type != JTokenType.Null)
                                                            {
                                                                foreach (JToken storageAccountsValue in ((JArray)storageAccountsArray))
                                                                {
                                                                    StorageAccount storageAccountInstance = new StorageAccount();
                                                                    propertiesInstance2.StorageAccounts.Add(storageAccountInstance);
                                                                    
                                                                    JToken accountNameValue = storageAccountsValue["accountName"];
                                                                    if (accountNameValue != null && accountNameValue.Type != JTokenType.Null)
                                                                    {
                                                                        string accountNameInstance = ((string)accountNameValue);
                                                                        storageAccountInstance.AccountName = accountNameInstance;
                                                                    }
                                                                    
                                                                    JToken accountKeyValue = storageAccountsValue["accountKey"];
                                                                    if (accountKeyValue != null && accountKeyValue.Type != JTokenType.Null)
                                                                    {
                                                                        string accountKeyInstance = ((string)accountKeyValue);
                                                                        storageAccountInstance.AccountKey = accountKeyInstance;
                                                                    }
                                                                }
                                                            }
                                                            
                                                            JToken containerValue = propertiesValue3["container"];
                                                            if (containerValue != null && containerValue.Type != JTokenType.Null)
                                                            {
                                                                string containerInstance = ((string)containerValue);
                                                                propertiesInstance2.Container = containerInstance;
                                                            }
                                                            
                                                            JToken pathPatternValue = propertiesValue3["pathPattern"];
                                                            if (pathPatternValue != null && pathPatternValue.Type != JTokenType.Null)
                                                            {
                                                                string pathPatternInstance = ((string)pathPatternValue);
                                                                propertiesInstance2.PathPattern = pathPatternInstance;
                                                            }
                                                            
                                                            JToken dateFormatValue = propertiesValue3["dateFormat"];
                                                            if (dateFormatValue != null && dateFormatValue.Type != JTokenType.Null)
                                                            {
                                                                string dateFormatInstance = ((string)dateFormatValue);
                                                                propertiesInstance2.DateFormat = dateFormatInstance;
                                                            }
                                                            
                                                            JToken timeFormatValue = propertiesValue3["timeFormat"];
                                                            if (timeFormatValue != null && timeFormatValue.Type != JTokenType.Null)
                                                            {
                                                                string timeFormatInstance = ((string)timeFormatValue);
                                                                propertiesInstance2.TimeFormat = timeFormatInstance;
                                                            }
                                                        }
                                                        
                                                        JToken typeValue2 = datasourceValue["type"];
                                                        if (typeValue2 != null && typeValue2.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance2 = ((string)typeValue2);
                                                            blobReferenceInputDataSourceInstance.Type = typeInstance2;
                                                        }
                                                        referenceInputPropertiesInstance.DataSource = blobReferenceInputDataSourceInstance;
                                                    }
                                                }
                                                
                                                JToken etagValue2 = propertiesValue2["etag"];
                                                if (etagValue2 != null && etagValue2.Type != JTokenType.Null)
                                                {
                                                    string etagInstance2 = ((string)etagValue2);
                                                    referenceInputPropertiesInstance.Etag = etagInstance2;
                                                }
                                                
                                                JToken typeValue3 = propertiesValue2["type"];
                                                if (typeValue3 != null && typeValue3.Type != JTokenType.Null)
                                                {
                                                    string typeInstance3 = ((string)typeValue3);
                                                    referenceInputPropertiesInstance.Type = typeInstance3;
                                                }
                                                
                                                JToken serializationValue = propertiesValue2["serialization"];
                                                if (serializationValue != null && serializationValue.Type != JTokenType.Null)
                                                {
                                                    string typeName3 = ((string)serializationValue["type"]);
                                                    if (typeName3 == "Csv")
                                                    {
                                                        CsvSerialization csvSerializationInstance = new CsvSerialization();
                                                        
                                                        JToken propertiesValue4 = serializationValue["properties"];
                                                        if (propertiesValue4 != null && propertiesValue4.Type != JTokenType.Null)
                                                        {
                                                            CsvSerializationProperties propertiesInstance3 = new CsvSerializationProperties();
                                                            csvSerializationInstance.Properties = propertiesInstance3;
                                                            
                                                            JToken fieldDelimiterValue = propertiesValue4["fieldDelimiter"];
                                                            if (fieldDelimiterValue != null && fieldDelimiterValue.Type != JTokenType.Null)
                                                            {
                                                                string fieldDelimiterInstance = ((string)fieldDelimiterValue);
                                                                propertiesInstance3.FieldDelimiter = fieldDelimiterInstance;
                                                            }
                                                            
                                                            JToken encodingValue = propertiesValue4["encoding"];
                                                            if (encodingValue != null && encodingValue.Type != JTokenType.Null)
                                                            {
                                                                string encodingInstance = ((string)encodingValue);
                                                                propertiesInstance3.Encoding = encodingInstance;
                                                            }
                                                        }
                                                        
                                                        JToken typeValue4 = serializationValue["type"];
                                                        if (typeValue4 != null && typeValue4.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance4 = ((string)typeValue4);
                                                            csvSerializationInstance.Type = typeInstance4;
                                                        }
                                                        referenceInputPropertiesInstance.Serialization = csvSerializationInstance;
                                                    }
                                                    if (typeName3 == "Json")
                                                    {
                                                        JsonSerialization jsonSerializationInstance = new JsonSerialization();
                                                        
                                                        JToken propertiesValue5 = serializationValue["properties"];
                                                        if (propertiesValue5 != null && propertiesValue5.Type != JTokenType.Null)
                                                        {
                                                            JsonSerializationProperties propertiesInstance4 = new JsonSerializationProperties();
                                                            jsonSerializationInstance.Properties = propertiesInstance4;
                                                            
                                                            JToken encodingValue2 = propertiesValue5["encoding"];
                                                            if (encodingValue2 != null && encodingValue2.Type != JTokenType.Null)
                                                            {
                                                                string encodingInstance2 = ((string)encodingValue2);
                                                                propertiesInstance4.Encoding = encodingInstance2;
                                                            }
                                                            
                                                            JToken formatValue = propertiesValue5["format"];
                                                            if (formatValue != null && formatValue.Type != JTokenType.Null)
                                                            {
                                                                string formatInstance = ((string)formatValue);
                                                                propertiesInstance4.Format = formatInstance;
                                                            }
                                                        }
                                                        
                                                        JToken typeValue5 = serializationValue["type"];
                                                        if (typeValue5 != null && typeValue5.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance5 = ((string)typeValue5);
                                                            jsonSerializationInstance.Type = typeInstance5;
                                                        }
                                                        referenceInputPropertiesInstance.Serialization = jsonSerializationInstance;
                                                    }
                                                    if (typeName3 == "Avro")
                                                    {
                                                        AvroSerialization avroSerializationInstance = new AvroSerialization();
                                                        
                                                        JToken propertiesValue6 = serializationValue["properties"];
                                                        if (propertiesValue6 != null && propertiesValue6.Type != JTokenType.Null)
                                                        {
                                                            AvroSerializationProperties propertiesInstance5 = new AvroSerializationProperties();
                                                            avroSerializationInstance.Properties = propertiesInstance5;
                                                        }
                                                        
                                                        JToken typeValue6 = serializationValue["type"];
                                                        if (typeValue6 != null && typeValue6.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance6 = ((string)typeValue6);
                                                            avroSerializationInstance.Type = typeInstance6;
                                                        }
                                                        referenceInputPropertiesInstance.Serialization = avroSerializationInstance;
                                                    }
                                                }
                                                
                                                JToken diagnosticsValue = propertiesValue2["diagnostics"];
                                                if (diagnosticsValue != null && diagnosticsValue.Type != JTokenType.Null)
                                                {
                                                    Diagnostics diagnosticsInstance = new Diagnostics();
                                                    referenceInputPropertiesInstance.Diagnostics = diagnosticsInstance;
                                                    
                                                    JToken conditionsArray = diagnosticsValue["conditions"];
                                                    if (conditionsArray != null && conditionsArray.Type != JTokenType.Null)
                                                    {
                                                        foreach (JToken conditionsValue in ((JArray)conditionsArray))
                                                        {
                                                            DiagnosticCondition diagnosticConditionInstance = new DiagnosticCondition();
                                                            diagnosticsInstance.Conditions.Add(diagnosticConditionInstance);
                                                            
                                                            JToken sinceValue = conditionsValue["since"];
                                                            if (sinceValue != null && sinceValue.Type != JTokenType.Null)
                                                            {
                                                                DateTime sinceInstance = ((DateTime)sinceValue);
                                                                diagnosticConditionInstance.Since = sinceInstance;
                                                            }
                                                            
                                                            JToken codeValue = conditionsValue["code"];
                                                            if (codeValue != null && codeValue.Type != JTokenType.Null)
                                                            {
                                                                string codeInstance = ((string)codeValue);
                                                                diagnosticConditionInstance.Code = codeInstance;
                                                            }
                                                            
                                                            JToken messageValue = conditionsValue["message"];
                                                            if (messageValue != null && messageValue.Type != JTokenType.Null)
                                                            {
                                                                string messageInstance = ((string)messageValue);
                                                                diagnosticConditionInstance.Message = messageInstance;
                                                            }
                                                        }
                                                    }
                                                }
                                                inputInstance.Properties = referenceInputPropertiesInstance;
                                            }
                                            if (typeName == "Stream")
                                            {
                                                StreamInputProperties streamInputPropertiesInstance = new StreamInputProperties();
                                                
                                                JToken datasourceValue2 = propertiesValue2["datasource"];
                                                if (datasourceValue2 != null && datasourceValue2.Type != JTokenType.Null)
                                                {
                                                    string typeName4 = ((string)datasourceValue2["type"]);
                                                    if (typeName4 == "Microsoft.Storage/Blob")
                                                    {
                                                        BlobStreamInputDataSource blobStreamInputDataSourceInstance = new BlobStreamInputDataSource();
                                                        
                                                        JToken propertiesValue7 = datasourceValue2["properties"];
                                                        if (propertiesValue7 != null && propertiesValue7.Type != JTokenType.Null)
                                                        {
                                                            BlobStreamInputDataSourceProperties propertiesInstance6 = new BlobStreamInputDataSourceProperties();
                                                            blobStreamInputDataSourceInstance.Properties = propertiesInstance6;
                                                            
                                                            JToken storageAccountsArray2 = propertiesValue7["storageAccounts"];
                                                            if (storageAccountsArray2 != null && storageAccountsArray2.Type != JTokenType.Null)
                                                            {
                                                                foreach (JToken storageAccountsValue2 in ((JArray)storageAccountsArray2))
                                                                {
                                                                    StorageAccount storageAccountInstance2 = new StorageAccount();
                                                                    propertiesInstance6.StorageAccounts.Add(storageAccountInstance2);
                                                                    
                                                                    JToken accountNameValue2 = storageAccountsValue2["accountName"];
                                                                    if (accountNameValue2 != null && accountNameValue2.Type != JTokenType.Null)
                                                                    {
                                                                        string accountNameInstance2 = ((string)accountNameValue2);
                                                                        storageAccountInstance2.AccountName = accountNameInstance2;
                                                                    }
                                                                    
                                                                    JToken accountKeyValue2 = storageAccountsValue2["accountKey"];
                                                                    if (accountKeyValue2 != null && accountKeyValue2.Type != JTokenType.Null)
                                                                    {
                                                                        string accountKeyInstance2 = ((string)accountKeyValue2);
                                                                        storageAccountInstance2.AccountKey = accountKeyInstance2;
                                                                    }
                                                                }
                                                            }
                                                            
                                                            JToken containerValue2 = propertiesValue7["container"];
                                                            if (containerValue2 != null && containerValue2.Type != JTokenType.Null)
                                                            {
                                                                string containerInstance2 = ((string)containerValue2);
                                                                propertiesInstance6.Container = containerInstance2;
                                                            }
                                                            
                                                            JToken pathPatternValue2 = propertiesValue7["pathPattern"];
                                                            if (pathPatternValue2 != null && pathPatternValue2.Type != JTokenType.Null)
                                                            {
                                                                string pathPatternInstance2 = ((string)pathPatternValue2);
                                                                propertiesInstance6.PathPattern = pathPatternInstance2;
                                                            }
                                                            
                                                            JToken dateFormatValue2 = propertiesValue7["dateFormat"];
                                                            if (dateFormatValue2 != null && dateFormatValue2.Type != JTokenType.Null)
                                                            {
                                                                string dateFormatInstance2 = ((string)dateFormatValue2);
                                                                propertiesInstance6.DateFormat = dateFormatInstance2;
                                                            }
                                                            
                                                            JToken timeFormatValue2 = propertiesValue7["timeFormat"];
                                                            if (timeFormatValue2 != null && timeFormatValue2.Type != JTokenType.Null)
                                                            {
                                                                string timeFormatInstance2 = ((string)timeFormatValue2);
                                                                propertiesInstance6.TimeFormat = timeFormatInstance2;
                                                            }
                                                            
                                                            JToken sourcePartitionCountValue = propertiesValue7["sourcePartitionCount"];
                                                            if (sourcePartitionCountValue != null && sourcePartitionCountValue.Type != JTokenType.Null)
                                                            {
                                                                int sourcePartitionCountInstance = ((int)sourcePartitionCountValue);
                                                                propertiesInstance6.SourcePartitionCount = sourcePartitionCountInstance;
                                                            }
                                                        }
                                                        
                                                        JToken typeValue7 = datasourceValue2["type"];
                                                        if (typeValue7 != null && typeValue7.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance7 = ((string)typeValue7);
                                                            blobStreamInputDataSourceInstance.Type = typeInstance7;
                                                        }
                                                        streamInputPropertiesInstance.DataSource = blobStreamInputDataSourceInstance;
                                                    }
                                                    if (typeName4 == "Microsoft.ServiceBus/EventHub")
                                                    {
                                                        EventHubStreamInputDataSource eventHubStreamInputDataSourceInstance = new EventHubStreamInputDataSource();
                                                        
                                                        JToken propertiesValue8 = datasourceValue2["properties"];
                                                        if (propertiesValue8 != null && propertiesValue8.Type != JTokenType.Null)
                                                        {
                                                            EventHubStreamInputDataSourceProperties propertiesInstance7 = new EventHubStreamInputDataSourceProperties();
                                                            eventHubStreamInputDataSourceInstance.Properties = propertiesInstance7;
                                                            
                                                            JToken serviceBusNamespaceValue = propertiesValue8["serviceBusNamespace"];
                                                            if (serviceBusNamespaceValue != null && serviceBusNamespaceValue.Type != JTokenType.Null)
                                                            {
                                                                string serviceBusNamespaceInstance = ((string)serviceBusNamespaceValue);
                                                                propertiesInstance7.ServiceBusNamespace = serviceBusNamespaceInstance;
                                                            }
                                                            
                                                            JToken sharedAccessPolicyNameValue = propertiesValue8["sharedAccessPolicyName"];
                                                            if (sharedAccessPolicyNameValue != null && sharedAccessPolicyNameValue.Type != JTokenType.Null)
                                                            {
                                                                string sharedAccessPolicyNameInstance = ((string)sharedAccessPolicyNameValue);
                                                                propertiesInstance7.SharedAccessPolicyName = sharedAccessPolicyNameInstance;
                                                            }
                                                            
                                                            JToken sharedAccessPolicyKeyValue = propertiesValue8["sharedAccessPolicyKey"];
                                                            if (sharedAccessPolicyKeyValue != null && sharedAccessPolicyKeyValue.Type != JTokenType.Null)
                                                            {
                                                                string sharedAccessPolicyKeyInstance = ((string)sharedAccessPolicyKeyValue);
                                                                propertiesInstance7.SharedAccessPolicyKey = sharedAccessPolicyKeyInstance;
                                                            }
                                                            
                                                            JToken eventHubNameValue = propertiesValue8["eventHubName"];
                                                            if (eventHubNameValue != null && eventHubNameValue.Type != JTokenType.Null)
                                                            {
                                                                string eventHubNameInstance = ((string)eventHubNameValue);
                                                                propertiesInstance7.EventHubName = eventHubNameInstance;
                                                            }
                                                            
                                                            JToken consumerGroupNameValue = propertiesValue8["consumerGroupName"];
                                                            if (consumerGroupNameValue != null && consumerGroupNameValue.Type != JTokenType.Null)
                                                            {
                                                                string consumerGroupNameInstance = ((string)consumerGroupNameValue);
                                                                propertiesInstance7.ConsumerGroupName = consumerGroupNameInstance;
                                                            }
                                                        }
                                                        
                                                        JToken typeValue8 = datasourceValue2["type"];
                                                        if (typeValue8 != null && typeValue8.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance8 = ((string)typeValue8);
                                                            eventHubStreamInputDataSourceInstance.Type = typeInstance8;
                                                        }
                                                        streamInputPropertiesInstance.DataSource = eventHubStreamInputDataSourceInstance;
                                                    }
                                                }
                                                
                                                JToken etagValue3 = propertiesValue2["etag"];
                                                if (etagValue3 != null && etagValue3.Type != JTokenType.Null)
                                                {
                                                    string etagInstance3 = ((string)etagValue3);
                                                    streamInputPropertiesInstance.Etag = etagInstance3;
                                                }
                                                
                                                JToken typeValue9 = propertiesValue2["type"];
                                                if (typeValue9 != null && typeValue9.Type != JTokenType.Null)
                                                {
                                                    string typeInstance9 = ((string)typeValue9);
                                                    streamInputPropertiesInstance.Type = typeInstance9;
                                                }
                                                
                                                JToken serializationValue2 = propertiesValue2["serialization"];
                                                if (serializationValue2 != null && serializationValue2.Type != JTokenType.Null)
                                                {
                                                    string typeName5 = ((string)serializationValue2["type"]);
                                                    if (typeName5 == "Csv")
                                                    {
                                                        CsvSerialization csvSerializationInstance2 = new CsvSerialization();
                                                        
                                                        JToken propertiesValue9 = serializationValue2["properties"];
                                                        if (propertiesValue9 != null && propertiesValue9.Type != JTokenType.Null)
                                                        {
                                                            CsvSerializationProperties propertiesInstance8 = new CsvSerializationProperties();
                                                            csvSerializationInstance2.Properties = propertiesInstance8;
                                                            
                                                            JToken fieldDelimiterValue2 = propertiesValue9["fieldDelimiter"];
                                                            if (fieldDelimiterValue2 != null && fieldDelimiterValue2.Type != JTokenType.Null)
                                                            {
                                                                string fieldDelimiterInstance2 = ((string)fieldDelimiterValue2);
                                                                propertiesInstance8.FieldDelimiter = fieldDelimiterInstance2;
                                                            }
                                                            
                                                            JToken encodingValue3 = propertiesValue9["encoding"];
                                                            if (encodingValue3 != null && encodingValue3.Type != JTokenType.Null)
                                                            {
                                                                string encodingInstance3 = ((string)encodingValue3);
                                                                propertiesInstance8.Encoding = encodingInstance3;
                                                            }
                                                        }
                                                        
                                                        JToken typeValue10 = serializationValue2["type"];
                                                        if (typeValue10 != null && typeValue10.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance10 = ((string)typeValue10);
                                                            csvSerializationInstance2.Type = typeInstance10;
                                                        }
                                                        streamInputPropertiesInstance.Serialization = csvSerializationInstance2;
                                                    }
                                                    if (typeName5 == "Json")
                                                    {
                                                        JsonSerialization jsonSerializationInstance2 = new JsonSerialization();
                                                        
                                                        JToken propertiesValue10 = serializationValue2["properties"];
                                                        if (propertiesValue10 != null && propertiesValue10.Type != JTokenType.Null)
                                                        {
                                                            JsonSerializationProperties propertiesInstance9 = new JsonSerializationProperties();
                                                            jsonSerializationInstance2.Properties = propertiesInstance9;
                                                            
                                                            JToken encodingValue4 = propertiesValue10["encoding"];
                                                            if (encodingValue4 != null && encodingValue4.Type != JTokenType.Null)
                                                            {
                                                                string encodingInstance4 = ((string)encodingValue4);
                                                                propertiesInstance9.Encoding = encodingInstance4;
                                                            }
                                                            
                                                            JToken formatValue2 = propertiesValue10["format"];
                                                            if (formatValue2 != null && formatValue2.Type != JTokenType.Null)
                                                            {
                                                                string formatInstance2 = ((string)formatValue2);
                                                                propertiesInstance9.Format = formatInstance2;
                                                            }
                                                        }
                                                        
                                                        JToken typeValue11 = serializationValue2["type"];
                                                        if (typeValue11 != null && typeValue11.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance11 = ((string)typeValue11);
                                                            jsonSerializationInstance2.Type = typeInstance11;
                                                        }
                                                        streamInputPropertiesInstance.Serialization = jsonSerializationInstance2;
                                                    }
                                                    if (typeName5 == "Avro")
                                                    {
                                                        AvroSerialization avroSerializationInstance2 = new AvroSerialization();
                                                        
                                                        JToken propertiesValue11 = serializationValue2["properties"];
                                                        if (propertiesValue11 != null && propertiesValue11.Type != JTokenType.Null)
                                                        {
                                                            AvroSerializationProperties propertiesInstance10 = new AvroSerializationProperties();
                                                            avroSerializationInstance2.Properties = propertiesInstance10;
                                                        }
                                                        
                                                        JToken typeValue12 = serializationValue2["type"];
                                                        if (typeValue12 != null && typeValue12.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance12 = ((string)typeValue12);
                                                            avroSerializationInstance2.Type = typeInstance12;
                                                        }
                                                        streamInputPropertiesInstance.Serialization = avroSerializationInstance2;
                                                    }
                                                }
                                                
                                                JToken diagnosticsValue2 = propertiesValue2["diagnostics"];
                                                if (diagnosticsValue2 != null && diagnosticsValue2.Type != JTokenType.Null)
                                                {
                                                    Diagnostics diagnosticsInstance2 = new Diagnostics();
                                                    streamInputPropertiesInstance.Diagnostics = diagnosticsInstance2;
                                                    
                                                    JToken conditionsArray2 = diagnosticsValue2["conditions"];
                                                    if (conditionsArray2 != null && conditionsArray2.Type != JTokenType.Null)
                                                    {
                                                        foreach (JToken conditionsValue2 in ((JArray)conditionsArray2))
                                                        {
                                                            DiagnosticCondition diagnosticConditionInstance2 = new DiagnosticCondition();
                                                            diagnosticsInstance2.Conditions.Add(diagnosticConditionInstance2);
                                                            
                                                            JToken sinceValue2 = conditionsValue2["since"];
                                                            if (sinceValue2 != null && sinceValue2.Type != JTokenType.Null)
                                                            {
                                                                DateTime sinceInstance2 = ((DateTime)sinceValue2);
                                                                diagnosticConditionInstance2.Since = sinceInstance2;
                                                            }
                                                            
                                                            JToken codeValue2 = conditionsValue2["code"];
                                                            if (codeValue2 != null && codeValue2.Type != JTokenType.Null)
                                                            {
                                                                string codeInstance2 = ((string)codeValue2);
                                                                diagnosticConditionInstance2.Code = codeInstance2;
                                                            }
                                                            
                                                            JToken messageValue2 = conditionsValue2["message"];
                                                            if (messageValue2 != null && messageValue2.Type != JTokenType.Null)
                                                            {
                                                                string messageInstance2 = ((string)messageValue2);
                                                                diagnosticConditionInstance2.Message = messageInstance2;
                                                            }
                                                        }
                                                    }
                                                }
                                                inputInstance.Properties = streamInputPropertiesInstance;
                                            }
                                        }
                                    }
                                }
                                
                                JToken transformationValue = propertiesValue["transformation"];
                                if (transformationValue != null && transformationValue.Type != JTokenType.Null)
                                {
                                    Transformation transformationInstance = new Transformation();
                                    propertiesInstance.Transformation = transformationInstance;
                                    
                                    JToken nameValue4 = transformationValue["name"];
                                    if (nameValue4 != null && nameValue4.Type != JTokenType.Null)
                                    {
                                        string nameInstance4 = ((string)nameValue4);
                                        transformationInstance.Name = nameInstance4;
                                    }
                                    
                                    JToken propertiesValue12 = transformationValue["properties"];
                                    if (propertiesValue12 != null && propertiesValue12.Type != JTokenType.Null)
                                    {
                                        TransformationProperties propertiesInstance11 = new TransformationProperties();
                                        transformationInstance.Properties = propertiesInstance11;
                                        
                                        JToken etagValue4 = propertiesValue12["etag"];
                                        if (etagValue4 != null && etagValue4.Type != JTokenType.Null)
                                        {
                                            string etagInstance4 = ((string)etagValue4);
                                            propertiesInstance11.Etag = etagInstance4;
                                        }
                                        
                                        JToken streamingUnitsValue = propertiesValue12["streamingUnits"];
                                        if (streamingUnitsValue != null && streamingUnitsValue.Type != JTokenType.Null)
                                        {
                                            int streamingUnitsInstance = ((int)streamingUnitsValue);
                                            propertiesInstance11.StreamingUnits = streamingUnitsInstance;
                                        }
                                        
                                        JToken queryValue = propertiesValue12["query"];
                                        if (queryValue != null && queryValue.Type != JTokenType.Null)
                                        {
                                            string queryInstance = ((string)queryValue);
                                            propertiesInstance11.Query = queryInstance;
                                        }
                                    }
                                }
                                
                                JToken outputsArray = propertiesValue["outputs"];
                                if (outputsArray != null && outputsArray.Type != JTokenType.Null)
                                {
                                    foreach (JToken outputsValue in ((JArray)outputsArray))
                                    {
                                        Output outputInstance = new Output();
                                        propertiesInstance.Outputs.Add(outputInstance);
                                        
                                        JToken nameValue5 = outputsValue["name"];
                                        if (nameValue5 != null && nameValue5.Type != JTokenType.Null)
                                        {
                                            string nameInstance5 = ((string)nameValue5);
                                            outputInstance.Name = nameInstance5;
                                        }
                                        
                                        JToken propertiesValue13 = outputsValue["properties"];
                                        if (propertiesValue13 != null && propertiesValue13.Type != JTokenType.Null)
                                        {
                                            OutputProperties propertiesInstance12 = new OutputProperties();
                                            outputInstance.Properties = propertiesInstance12;
                                            
                                            JToken etagValue5 = propertiesValue13["etag"];
                                            if (etagValue5 != null && etagValue5.Type != JTokenType.Null)
                                            {
                                                string etagInstance5 = ((string)etagValue5);
                                                propertiesInstance12.Etag = etagInstance5;
                                            }
                                            
                                            JToken datasourceValue3 = propertiesValue13["datasource"];
                                            if (datasourceValue3 != null && datasourceValue3.Type != JTokenType.Null)
                                            {
                                                string typeName6 = ((string)datasourceValue3["type"]);
                                                if (typeName6 == "Microsoft.Storage/Blob")
                                                {
                                                    BlobOutputDataSource blobOutputDataSourceInstance = new BlobOutputDataSource();
                                                    
                                                    JToken propertiesValue14 = datasourceValue3["properties"];
                                                    if (propertiesValue14 != null && propertiesValue14.Type != JTokenType.Null)
                                                    {
                                                        BlobOutputDataSourceProperties propertiesInstance13 = new BlobOutputDataSourceProperties();
                                                        blobOutputDataSourceInstance.Properties = propertiesInstance13;
                                                        
                                                        JToken storageAccountsArray3 = propertiesValue14["storageAccounts"];
                                                        if (storageAccountsArray3 != null && storageAccountsArray3.Type != JTokenType.Null)
                                                        {
                                                            foreach (JToken storageAccountsValue3 in ((JArray)storageAccountsArray3))
                                                            {
                                                                StorageAccount storageAccountInstance3 = new StorageAccount();
                                                                propertiesInstance13.StorageAccounts.Add(storageAccountInstance3);
                                                                
                                                                JToken accountNameValue3 = storageAccountsValue3["accountName"];
                                                                if (accountNameValue3 != null && accountNameValue3.Type != JTokenType.Null)
                                                                {
                                                                    string accountNameInstance3 = ((string)accountNameValue3);
                                                                    storageAccountInstance3.AccountName = accountNameInstance3;
                                                                }
                                                                
                                                                JToken accountKeyValue3 = storageAccountsValue3["accountKey"];
                                                                if (accountKeyValue3 != null && accountKeyValue3.Type != JTokenType.Null)
                                                                {
                                                                    string accountKeyInstance3 = ((string)accountKeyValue3);
                                                                    storageAccountInstance3.AccountKey = accountKeyInstance3;
                                                                }
                                                            }
                                                        }
                                                        
                                                        JToken containerValue3 = propertiesValue14["container"];
                                                        if (containerValue3 != null && containerValue3.Type != JTokenType.Null)
                                                        {
                                                            string containerInstance3 = ((string)containerValue3);
                                                            propertiesInstance13.Container = containerInstance3;
                                                        }
                                                        
                                                        JToken blobPathPrefixValue = propertiesValue14["blobPathPrefix"];
                                                        if (blobPathPrefixValue != null && blobPathPrefixValue.Type != JTokenType.Null)
                                                        {
                                                            string blobPathPrefixInstance = ((string)blobPathPrefixValue);
                                                            propertiesInstance13.BlobPathPrefix = blobPathPrefixInstance;
                                                        }
                                                    }
                                                    
                                                    JToken typeValue13 = datasourceValue3["type"];
                                                    if (typeValue13 != null && typeValue13.Type != JTokenType.Null)
                                                    {
                                                        string typeInstance13 = ((string)typeValue13);
                                                        blobOutputDataSourceInstance.Type = typeInstance13;
                                                    }
                                                    propertiesInstance12.DataSource = blobOutputDataSourceInstance;
                                                }
                                                if (typeName6 == "Microsoft.Storage/Table")
                                                {
                                                    AzureTableOutputDataSource azureTableOutputDataSourceInstance = new AzureTableOutputDataSource();
                                                    
                                                    JToken propertiesValue15 = datasourceValue3["properties"];
                                                    if (propertiesValue15 != null && propertiesValue15.Type != JTokenType.Null)
                                                    {
                                                        AzureTableOutputDataSourceProperties propertiesInstance14 = new AzureTableOutputDataSourceProperties();
                                                        azureTableOutputDataSourceInstance.Properties = propertiesInstance14;
                                                        
                                                        JToken accountNameValue4 = propertiesValue15["accountName"];
                                                        if (accountNameValue4 != null && accountNameValue4.Type != JTokenType.Null)
                                                        {
                                                            string accountNameInstance4 = ((string)accountNameValue4);
                                                            propertiesInstance14.AccountName = accountNameInstance4;
                                                        }
                                                        
                                                        JToken accountKeyValue4 = propertiesValue15["accountKey"];
                                                        if (accountKeyValue4 != null && accountKeyValue4.Type != JTokenType.Null)
                                                        {
                                                            string accountKeyInstance4 = ((string)accountKeyValue4);
                                                            propertiesInstance14.AccountKey = accountKeyInstance4;
                                                        }
                                                        
                                                        JToken tableValue = propertiesValue15["table"];
                                                        if (tableValue != null && tableValue.Type != JTokenType.Null)
                                                        {
                                                            string tableInstance = ((string)tableValue);
                                                            propertiesInstance14.Table = tableInstance;
                                                        }
                                                        
                                                        JToken partitionKeyValue = propertiesValue15["partitionKey"];
                                                        if (partitionKeyValue != null && partitionKeyValue.Type != JTokenType.Null)
                                                        {
                                                            string partitionKeyInstance = ((string)partitionKeyValue);
                                                            propertiesInstance14.PartitionKey = partitionKeyInstance;
                                                        }
                                                        
                                                        JToken rowKeyValue = propertiesValue15["rowKey"];
                                                        if (rowKeyValue != null && rowKeyValue.Type != JTokenType.Null)
                                                        {
                                                            string rowKeyInstance = ((string)rowKeyValue);
                                                            propertiesInstance14.RowKey = rowKeyInstance;
                                                        }
                                                        
                                                        JToken columnsToRemoveArray = propertiesValue15["columnsToRemove"];
                                                        if (columnsToRemoveArray != null && columnsToRemoveArray.Type != JTokenType.Null)
                                                        {
                                                            foreach (JToken columnsToRemoveValue in ((JArray)columnsToRemoveArray))
                                                            {
                                                                propertiesInstance14.ColumnsToRemove.Add(((string)columnsToRemoveValue));
                                                            }
                                                        }
                                                        
                                                        JToken batchSizeValue = propertiesValue15["batchSize"];
                                                        if (batchSizeValue != null && batchSizeValue.Type != JTokenType.Null)
                                                        {
                                                            int batchSizeInstance = ((int)batchSizeValue);
                                                            propertiesInstance14.BatchSize = batchSizeInstance;
                                                        }
                                                    }
                                                    
                                                    JToken typeValue14 = datasourceValue3["type"];
                                                    if (typeValue14 != null && typeValue14.Type != JTokenType.Null)
                                                    {
                                                        string typeInstance14 = ((string)typeValue14);
                                                        azureTableOutputDataSourceInstance.Type = typeInstance14;
                                                    }
                                                    propertiesInstance12.DataSource = azureTableOutputDataSourceInstance;
                                                }
                                                if (typeName6 == "Microsoft.ServiceBus/EventHub")
                                                {
                                                    EventHubOutputDataSource eventHubOutputDataSourceInstance = new EventHubOutputDataSource();
                                                    
                                                    JToken propertiesValue16 = datasourceValue3["properties"];
                                                    if (propertiesValue16 != null && propertiesValue16.Type != JTokenType.Null)
                                                    {
                                                        EventHubOutputDataSourceProperties propertiesInstance15 = new EventHubOutputDataSourceProperties();
                                                        eventHubOutputDataSourceInstance.Properties = propertiesInstance15;
                                                        
                                                        JToken serviceBusNamespaceValue2 = propertiesValue16["serviceBusNamespace"];
                                                        if (serviceBusNamespaceValue2 != null && serviceBusNamespaceValue2.Type != JTokenType.Null)
                                                        {
                                                            string serviceBusNamespaceInstance2 = ((string)serviceBusNamespaceValue2);
                                                            propertiesInstance15.ServiceBusNamespace = serviceBusNamespaceInstance2;
                                                        }
                                                        
                                                        JToken sharedAccessPolicyNameValue2 = propertiesValue16["sharedAccessPolicyName"];
                                                        if (sharedAccessPolicyNameValue2 != null && sharedAccessPolicyNameValue2.Type != JTokenType.Null)
                                                        {
                                                            string sharedAccessPolicyNameInstance2 = ((string)sharedAccessPolicyNameValue2);
                                                            propertiesInstance15.SharedAccessPolicyName = sharedAccessPolicyNameInstance2;
                                                        }
                                                        
                                                        JToken sharedAccessPolicyKeyValue2 = propertiesValue16["sharedAccessPolicyKey"];
                                                        if (sharedAccessPolicyKeyValue2 != null && sharedAccessPolicyKeyValue2.Type != JTokenType.Null)
                                                        {
                                                            string sharedAccessPolicyKeyInstance2 = ((string)sharedAccessPolicyKeyValue2);
                                                            propertiesInstance15.SharedAccessPolicyKey = sharedAccessPolicyKeyInstance2;
                                                        }
                                                        
                                                        JToken eventHubNameValue2 = propertiesValue16["eventHubName"];
                                                        if (eventHubNameValue2 != null && eventHubNameValue2.Type != JTokenType.Null)
                                                        {
                                                            string eventHubNameInstance2 = ((string)eventHubNameValue2);
                                                            propertiesInstance15.EventHubName = eventHubNameInstance2;
                                                        }
                                                        
                                                        JToken partitionKeyValue2 = propertiesValue16["partitionKey"];
                                                        if (partitionKeyValue2 != null && partitionKeyValue2.Type != JTokenType.Null)
                                                        {
                                                            string partitionKeyInstance2 = ((string)partitionKeyValue2);
                                                            propertiesInstance15.PartitionKey = partitionKeyInstance2;
                                                        }
                                                    }
                                                    
                                                    JToken typeValue15 = datasourceValue3["type"];
                                                    if (typeValue15 != null && typeValue15.Type != JTokenType.Null)
                                                    {
                                                        string typeInstance15 = ((string)typeValue15);
                                                        eventHubOutputDataSourceInstance.Type = typeInstance15;
                                                    }
                                                    propertiesInstance12.DataSource = eventHubOutputDataSourceInstance;
                                                }
                                                if (typeName6 == "Microsoft.Sql/Server/Database")
                                                {
                                                    SqlAzureOutputDataSource sqlAzureOutputDataSourceInstance = new SqlAzureOutputDataSource();
                                                    
                                                    JToken propertiesValue17 = datasourceValue3["properties"];
                                                    if (propertiesValue17 != null && propertiesValue17.Type != JTokenType.Null)
                                                    {
                                                        SqlAzureOutputDataSourceProperties propertiesInstance16 = new SqlAzureOutputDataSourceProperties();
                                                        sqlAzureOutputDataSourceInstance.Properties = propertiesInstance16;
                                                        
                                                        JToken serverValue = propertiesValue17["server"];
                                                        if (serverValue != null && serverValue.Type != JTokenType.Null)
                                                        {
                                                            string serverInstance = ((string)serverValue);
                                                            propertiesInstance16.Server = serverInstance;
                                                        }
                                                        
                                                        JToken databaseValue = propertiesValue17["database"];
                                                        if (databaseValue != null && databaseValue.Type != JTokenType.Null)
                                                        {
                                                            string databaseInstance = ((string)databaseValue);
                                                            propertiesInstance16.Database = databaseInstance;
                                                        }
                                                        
                                                        JToken userValue = propertiesValue17["user"];
                                                        if (userValue != null && userValue.Type != JTokenType.Null)
                                                        {
                                                            string userInstance = ((string)userValue);
                                                            propertiesInstance16.User = userInstance;
                                                        }
                                                        
                                                        JToken passwordValue = propertiesValue17["password"];
                                                        if (passwordValue != null && passwordValue.Type != JTokenType.Null)
                                                        {
                                                            string passwordInstance = ((string)passwordValue);
                                                            propertiesInstance16.Password = passwordInstance;
                                                        }
                                                        
                                                        JToken tableValue2 = propertiesValue17["table"];
                                                        if (tableValue2 != null && tableValue2.Type != JTokenType.Null)
                                                        {
                                                            string tableInstance2 = ((string)tableValue2);
                                                            propertiesInstance16.Table = tableInstance2;
                                                        }
                                                    }
                                                    
                                                    JToken typeValue16 = datasourceValue3["type"];
                                                    if (typeValue16 != null && typeValue16.Type != JTokenType.Null)
                                                    {
                                                        string typeInstance16 = ((string)typeValue16);
                                                        sqlAzureOutputDataSourceInstance.Type = typeInstance16;
                                                    }
                                                    propertiesInstance12.DataSource = sqlAzureOutputDataSourceInstance;
                                                }
                                            }
                                            
                                            JToken serializationValue3 = propertiesValue13["serialization"];
                                            if (serializationValue3 != null && serializationValue3.Type != JTokenType.Null)
                                            {
                                                string typeName7 = ((string)serializationValue3["type"]);
                                                if (typeName7 == "Csv")
                                                {
                                                    CsvSerialization csvSerializationInstance3 = new CsvSerialization();
                                                    
                                                    JToken propertiesValue18 = serializationValue3["properties"];
                                                    if (propertiesValue18 != null && propertiesValue18.Type != JTokenType.Null)
                                                    {
                                                        CsvSerializationProperties propertiesInstance17 = new CsvSerializationProperties();
                                                        csvSerializationInstance3.Properties = propertiesInstance17;
                                                        
                                                        JToken fieldDelimiterValue3 = propertiesValue18["fieldDelimiter"];
                                                        if (fieldDelimiterValue3 != null && fieldDelimiterValue3.Type != JTokenType.Null)
                                                        {
                                                            string fieldDelimiterInstance3 = ((string)fieldDelimiterValue3);
                                                            propertiesInstance17.FieldDelimiter = fieldDelimiterInstance3;
                                                        }
                                                        
                                                        JToken encodingValue5 = propertiesValue18["encoding"];
                                                        if (encodingValue5 != null && encodingValue5.Type != JTokenType.Null)
                                                        {
                                                            string encodingInstance5 = ((string)encodingValue5);
                                                            propertiesInstance17.Encoding = encodingInstance5;
                                                        }
                                                    }
                                                    
                                                    JToken typeValue17 = serializationValue3["type"];
                                                    if (typeValue17 != null && typeValue17.Type != JTokenType.Null)
                                                    {
                                                        string typeInstance17 = ((string)typeValue17);
                                                        csvSerializationInstance3.Type = typeInstance17;
                                                    }
                                                    propertiesInstance12.Serialization = csvSerializationInstance3;
                                                }
                                                if (typeName7 == "Json")
                                                {
                                                    JsonSerialization jsonSerializationInstance3 = new JsonSerialization();
                                                    
                                                    JToken propertiesValue19 = serializationValue3["properties"];
                                                    if (propertiesValue19 != null && propertiesValue19.Type != JTokenType.Null)
                                                    {
                                                        JsonSerializationProperties propertiesInstance18 = new JsonSerializationProperties();
                                                        jsonSerializationInstance3.Properties = propertiesInstance18;
                                                        
                                                        JToken encodingValue6 = propertiesValue19["encoding"];
                                                        if (encodingValue6 != null && encodingValue6.Type != JTokenType.Null)
                                                        {
                                                            string encodingInstance6 = ((string)encodingValue6);
                                                            propertiesInstance18.Encoding = encodingInstance6;
                                                        }
                                                        
                                                        JToken formatValue3 = propertiesValue19["format"];
                                                        if (formatValue3 != null && formatValue3.Type != JTokenType.Null)
                                                        {
                                                            string formatInstance3 = ((string)formatValue3);
                                                            propertiesInstance18.Format = formatInstance3;
                                                        }
                                                    }
                                                    
                                                    JToken typeValue18 = serializationValue3["type"];
                                                    if (typeValue18 != null && typeValue18.Type != JTokenType.Null)
                                                    {
                                                        string typeInstance18 = ((string)typeValue18);
                                                        jsonSerializationInstance3.Type = typeInstance18;
                                                    }
                                                    propertiesInstance12.Serialization = jsonSerializationInstance3;
                                                }
                                                if (typeName7 == "Avro")
                                                {
                                                    AvroSerialization avroSerializationInstance3 = new AvroSerialization();
                                                    
                                                    JToken propertiesValue20 = serializationValue3["properties"];
                                                    if (propertiesValue20 != null && propertiesValue20.Type != JTokenType.Null)
                                                    {
                                                        AvroSerializationProperties propertiesInstance19 = new AvroSerializationProperties();
                                                        avroSerializationInstance3.Properties = propertiesInstance19;
                                                    }
                                                    
                                                    JToken typeValue19 = serializationValue3["type"];
                                                    if (typeValue19 != null && typeValue19.Type != JTokenType.Null)
                                                    {
                                                        string typeInstance19 = ((string)typeValue19);
                                                        avroSerializationInstance3.Type = typeInstance19;
                                                    }
                                                    propertiesInstance12.Serialization = avroSerializationInstance3;
                                                }
                                            }
                                            
                                            JToken diagnosticsValue3 = propertiesValue13["diagnostics"];
                                            if (diagnosticsValue3 != null && diagnosticsValue3.Type != JTokenType.Null)
                                            {
                                                Diagnostics diagnosticsInstance3 = new Diagnostics();
                                                propertiesInstance12.Diagnostics = diagnosticsInstance3;
                                                
                                                JToken conditionsArray3 = diagnosticsValue3["conditions"];
                                                if (conditionsArray3 != null && conditionsArray3.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken conditionsValue3 in ((JArray)conditionsArray3))
                                                    {
                                                        DiagnosticCondition diagnosticConditionInstance3 = new DiagnosticCondition();
                                                        diagnosticsInstance3.Conditions.Add(diagnosticConditionInstance3);
                                                        
                                                        JToken sinceValue3 = conditionsValue3["since"];
                                                        if (sinceValue3 != null && sinceValue3.Type != JTokenType.Null)
                                                        {
                                                            DateTime sinceInstance3 = ((DateTime)sinceValue3);
                                                            diagnosticConditionInstance3.Since = sinceInstance3;
                                                        }
                                                        
                                                        JToken codeValue3 = conditionsValue3["code"];
                                                        if (codeValue3 != null && codeValue3.Type != JTokenType.Null)
                                                        {
                                                            string codeInstance3 = ((string)codeValue3);
                                                            diagnosticConditionInstance3.Code = codeInstance3;
                                                        }
                                                        
                                                        JToken messageValue3 = conditionsValue3["message"];
                                                        if (messageValue3 != null && messageValue3.Type != JTokenType.Null)
                                                        {
                                                            string messageInstance3 = ((string)messageValue3);
                                                            diagnosticConditionInstance3.Message = messageInstance3;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        
                    }
                    result.StatusCode = statusCode;
                    if (httpResponse.Headers.Contains("Date"))
                    {
                        result.Date = DateTime.Parse(httpResponse.Headers.GetValues("Date").FirstOrDefault(), CultureInfo.InvariantCulture, DateTimeStyles.AdjustToUniversal).ToLocalTime();
                    }
                    if (httpResponse.Headers.Contains("ETag"))
                    {
                        result.Job.Properties.Etag = httpResponse.Headers.GetValues("ETag").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-request-id"))
                    {
                        result.RequestId = httpResponse.Headers.GetValues("x-ms-request-id").FirstOrDefault();
                    }
                    
                    if (shouldTrace)
                    {
                        TracingAdapter.Exit(invocationId, result);
                    }
                    return result;
                }
                finally
                {
                    if (httpResponse != null)
                    {
                        httpResponse.Dispose();
                    }
                }
            }
            finally
            {
                if (httpRequest != null)
                {
                    httpRequest.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Delete a stream analytics job.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// Required. A unique stream analytics job name.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public async Task<LongRunningOperationResponse> DeleteAsync(string resourceGroupName, string jobName, CancellationToken cancellationToken)
        {
            StreamAnalyticsManagementClient client = this.Client;
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("resourceGroupName", resourceGroupName);
                tracingParameters.Add("jobName", jobName);
                TracingAdapter.Enter(invocationId, this, "DeleteAsync", tracingParameters);
            }
            
            cancellationToken.ThrowIfCancellationRequested();
            LongRunningOperationResponse response = await client.StreamingJobs.BeginDeleteAsync(resourceGroupName, jobName, cancellationToken).ConfigureAwait(false);
            if (response.Status == OperationStatus.Succeeded)
            {
                return response;
            }
            cancellationToken.ThrowIfCancellationRequested();
            LongRunningOperationResponse result = await client.GetLongRunningOperationStatusAsync(response.OperationStatusLink, cancellationToken).ConfigureAwait(false);
            int delayInSeconds = response.RetryAfter;
            if (delayInSeconds == 0)
            {
                delayInSeconds = 10;
            }
            if (client.LongRunningOperationInitialTimeout >= 0)
            {
                delayInSeconds = client.LongRunningOperationInitialTimeout;
            }
            while ((result.Status != OperationStatus.InProgress) == false)
            {
                cancellationToken.ThrowIfCancellationRequested();
                await TaskEx.Delay(delayInSeconds * 1000, cancellationToken).ConfigureAwait(false);
                cancellationToken.ThrowIfCancellationRequested();
                result = await client.GetLongRunningOperationStatusAsync(response.OperationStatusLink, cancellationToken).ConfigureAwait(false);
                delayInSeconds = result.RetryAfter;
                if (delayInSeconds == 0)
                {
                    delayInSeconds = 10;
                }
                if (client.LongRunningOperationRetryTimeout >= 0)
                {
                    delayInSeconds = client.LongRunningOperationRetryTimeout;
                }
            }
            
            if (shouldTrace)
            {
                TracingAdapter.Exit(invocationId, result);
            }
            
            return result;
        }
        
        /// <summary>
        /// Get a stream analytics job.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// Required. The name of the stream analytics job.
        /// </param>
        /// <param name='parameters'>
        /// Required. The parameters required to get a stream analytics job.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response of the get stream analytics job operation.
        /// </returns>
        public async Task<JobGetResponse> GetAsync(string resourceGroupName, string jobName, JobGetParameters parameters, CancellationToken cancellationToken)
        {
            // Validate
            if (resourceGroupName == null)
            {
                throw new ArgumentNullException("resourceGroupName");
            }
            if (jobName == null)
            {
                throw new ArgumentNullException("jobName");
            }
            if (parameters == null)
            {
                throw new ArgumentNullException("parameters");
            }
            if (parameters.PropertiesToExpand == null)
            {
                throw new ArgumentNullException("parameters.PropertiesToExpand");
            }
            
            // Tracing
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("resourceGroupName", resourceGroupName);
                tracingParameters.Add("jobName", jobName);
                tracingParameters.Add("parameters", parameters);
                TracingAdapter.Enter(invocationId, this, "GetAsync", tracingParameters);
            }
            
            // Construct URL
            string url = "";
            url = url + "/subscriptions/";
            if (this.Client.Credentials.SubscriptionId != null)
            {
                url = url + Uri.EscapeDataString(this.Client.Credentials.SubscriptionId);
            }
            url = url + "/resourcegroups/";
            url = url + Uri.EscapeDataString(resourceGroupName);
            url = url + "/providers/Microsoft.StreamAnalytics/streamingjobs/";
            url = url + Uri.EscapeDataString(jobName);
            List<string> queryParameters = new List<string>();
            queryParameters.Add("$expand=" + Uri.EscapeDataString(parameters.PropertiesToExpand));
            queryParameters.Add("api-version=2015-04-01");
            if (queryParameters.Count > 0)
            {
                url = url + "?" + string.Join("&", queryParameters);
            }
            string baseUrl = this.Client.BaseUri.AbsoluteUri;
            // Trim '/' character from the end of baseUrl and beginning of url.
            if (baseUrl[baseUrl.Length - 1] == '/')
            {
                baseUrl = baseUrl.Substring(0, baseUrl.Length - 1);
            }
            if (url[0] == '/')
            {
                url = url.Substring(1);
            }
            url = baseUrl + "/" + url;
            url = url.Replace(" ", "%20");
            
            // Create HTTP transport objects
            HttpRequestMessage httpRequest = null;
            try
            {
                httpRequest = new HttpRequestMessage();
                httpRequest.Method = HttpMethod.Get;
                httpRequest.RequestUri = new Uri(url);
                
                // Set Headers
                httpRequest.Headers.Add("x-ms-client-request-id", Guid.NewGuid().ToString());
                
                // Set Credentials
                cancellationToken.ThrowIfCancellationRequested();
                await this.Client.Credentials.ProcessHttpRequestAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                
                // Send Request
                HttpResponseMessage httpResponse = null;
                try
                {
                    if (shouldTrace)
                    {
                        TracingAdapter.SendRequest(invocationId, httpRequest);
                    }
                    cancellationToken.ThrowIfCancellationRequested();
                    httpResponse = await this.Client.HttpClient.SendAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                    if (shouldTrace)
                    {
                        TracingAdapter.ReceiveResponse(invocationId, httpResponse);
                    }
                    HttpStatusCode statusCode = httpResponse.StatusCode;
                    if (statusCode != HttpStatusCode.OK)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        CloudException ex = CloudException.Create(httpRequest, null, httpResponse, await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false));
                        if (shouldTrace)
                        {
                            TracingAdapter.Error(invocationId, ex);
                        }
                        throw ex;
                    }
                    
                    // Create Result
                    JobGetResponse result = null;
                    // Deserialize Response
                    if (statusCode == HttpStatusCode.OK)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        string responseContent = await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false);
                        result = new JobGetResponse();
                        JToken responseDoc = null;
                        if (string.IsNullOrEmpty(responseContent) == false)
                        {
                            responseDoc = JToken.Parse(responseContent);
                        }
                        
                        if (responseDoc != null && responseDoc.Type != JTokenType.Null)
                        {
                            Job jobInstance = new Job();
                            result.Job = jobInstance;
                            
                            JToken idValue = responseDoc["id"];
                            if (idValue != null && idValue.Type != JTokenType.Null)
                            {
                                string idInstance = ((string)idValue);
                                jobInstance.Id = idInstance;
                            }
                            
                            JToken nameValue = responseDoc["name"];
                            if (nameValue != null && nameValue.Type != JTokenType.Null)
                            {
                                string nameInstance = ((string)nameValue);
                                jobInstance.Name = nameInstance;
                            }
                            
                            JToken typeValue = responseDoc["type"];
                            if (typeValue != null && typeValue.Type != JTokenType.Null)
                            {
                                string typeInstance = ((string)typeValue);
                                jobInstance.Type = typeInstance;
                            }
                            
                            JToken locationValue = responseDoc["location"];
                            if (locationValue != null && locationValue.Type != JTokenType.Null)
                            {
                                string locationInstance = ((string)locationValue);
                                jobInstance.Location = locationInstance;
                            }
                            
                            JToken tagsSequenceElement = ((JToken)responseDoc["tags"]);
                            if (tagsSequenceElement != null && tagsSequenceElement.Type != JTokenType.Null)
                            {
                                foreach (JProperty property in tagsSequenceElement)
                                {
                                    string tagsKey = ((string)property.Name);
                                    string tagsValue = ((string)property.Value);
                                    jobInstance.Tags.Add(tagsKey, tagsValue);
                                }
                            }
                            
                            JToken propertiesValue = responseDoc["properties"];
                            if (propertiesValue != null && propertiesValue.Type != JTokenType.Null)
                            {
                                JobProperties propertiesInstance = new JobProperties();
                                jobInstance.Properties = propertiesInstance;
                                
                                JToken skuValue = propertiesValue["sku"];
                                if (skuValue != null && skuValue.Type != JTokenType.Null)
                                {
                                    Sku skuInstance = new Sku();
                                    propertiesInstance.Sku = skuInstance;
                                    
                                    JToken nameValue2 = skuValue["name"];
                                    if (nameValue2 != null && nameValue2.Type != JTokenType.Null)
                                    {
                                        string nameInstance2 = ((string)nameValue2);
                                        skuInstance.Name = nameInstance2;
                                    }
                                }
                                
                                JToken eventsOutOfOrderPolicyValue = propertiesValue["eventsOutOfOrderPolicy"];
                                if (eventsOutOfOrderPolicyValue != null && eventsOutOfOrderPolicyValue.Type != JTokenType.Null)
                                {
                                    string eventsOutOfOrderPolicyInstance = ((string)eventsOutOfOrderPolicyValue);
                                    propertiesInstance.EventsOutOfOrderPolicy = eventsOutOfOrderPolicyInstance;
                                }
                                
                                JToken eventsOutOfOrderMaxDelayInSecondsValue = propertiesValue["eventsOutOfOrderMaxDelayInSeconds"];
                                if (eventsOutOfOrderMaxDelayInSecondsValue != null && eventsOutOfOrderMaxDelayInSecondsValue.Type != JTokenType.Null)
                                {
                                    int eventsOutOfOrderMaxDelayInSecondsInstance = ((int)eventsOutOfOrderMaxDelayInSecondsValue);
                                    propertiesInstance.EventsOutOfOrderMaxDelayInSeconds = eventsOutOfOrderMaxDelayInSecondsInstance;
                                }
                                
                                JToken eventsLateArrivalMaxDelayInSecondsValue = propertiesValue["eventsLateArrivalMaxDelayInSeconds"];
                                if (eventsLateArrivalMaxDelayInSecondsValue != null && eventsLateArrivalMaxDelayInSecondsValue.Type != JTokenType.Null)
                                {
                                    int eventsLateArrivalMaxDelayInSecondsInstance = ((int)eventsLateArrivalMaxDelayInSecondsValue);
                                    propertiesInstance.EventsLateArrivalMaxDelayInSeconds = eventsLateArrivalMaxDelayInSecondsInstance;
                                }
                                
                                JToken dataLocaleValue = propertiesValue["dataLocale"];
                                if (dataLocaleValue != null && dataLocaleValue.Type != JTokenType.Null)
                                {
                                    string dataLocaleInstance = ((string)dataLocaleValue);
                                    propertiesInstance.DataLocale = dataLocaleInstance;
                                }
                                
                                JToken outputStartModeValue = propertiesValue["outputStartMode"];
                                if (outputStartModeValue != null && outputStartModeValue.Type != JTokenType.Null)
                                {
                                    string outputStartModeInstance = ((string)outputStartModeValue);
                                    propertiesInstance.OutputStartMode = outputStartModeInstance;
                                }
                                
                                JToken outputStartTimeValue = propertiesValue["outputStartTime"];
                                if (outputStartTimeValue != null && outputStartTimeValue.Type != JTokenType.Null)
                                {
                                    DateTime outputStartTimeInstance = ((DateTime)outputStartTimeValue);
                                    propertiesInstance.OutputStartTime = outputStartTimeInstance;
                                }
                                
                                JToken lastOutputEventTimeValue = propertiesValue["lastOutputEventTime"];
                                if (lastOutputEventTimeValue != null && lastOutputEventTimeValue.Type != JTokenType.Null)
                                {
                                    DateTime lastOutputEventTimeInstance = ((DateTime)lastOutputEventTimeValue);
                                    propertiesInstance.LastOutputEventTime = lastOutputEventTimeInstance;
                                }
                                
                                JToken jobIdValue = propertiesValue["jobId"];
                                if (jobIdValue != null && jobIdValue.Type != JTokenType.Null)
                                {
                                    string jobIdInstance = ((string)jobIdValue);
                                    propertiesInstance.JobId = jobIdInstance;
                                }
                                
                                JToken etagValue = propertiesValue["etag"];
                                if (etagValue != null && etagValue.Type != JTokenType.Null)
                                {
                                    string etagInstance = ((string)etagValue);
                                    propertiesInstance.Etag = etagInstance;
                                }
                                
                                JToken provisioningStateValue = propertiesValue["provisioningState"];
                                if (provisioningStateValue != null && provisioningStateValue.Type != JTokenType.Null)
                                {
                                    string provisioningStateInstance = ((string)provisioningStateValue);
                                    propertiesInstance.ProvisioningState = provisioningStateInstance;
                                }
                                
                                JToken jobStateValue = propertiesValue["jobState"];
                                if (jobStateValue != null && jobStateValue.Type != JTokenType.Null)
                                {
                                    string jobStateInstance = ((string)jobStateValue);
                                    propertiesInstance.JobState = jobStateInstance;
                                }
                                
                                JToken createdDateValue = propertiesValue["createdDate"];
                                if (createdDateValue != null && createdDateValue.Type != JTokenType.Null)
                                {
                                    DateTime createdDateInstance = ((DateTime)createdDateValue);
                                    propertiesInstance.CreatedDate = createdDateInstance;
                                }
                                
                                JToken inputsArray = propertiesValue["inputs"];
                                if (inputsArray != null && inputsArray.Type != JTokenType.Null)
                                {
                                    foreach (JToken inputsValue in ((JArray)inputsArray))
                                    {
                                        Input inputInstance = new Input();
                                        propertiesInstance.Inputs.Add(inputInstance);
                                        
                                        JToken nameValue3 = inputsValue["name"];
                                        if (nameValue3 != null && nameValue3.Type != JTokenType.Null)
                                        {
                                            string nameInstance3 = ((string)nameValue3);
                                            inputInstance.Name = nameInstance3;
                                        }
                                        
                                        JToken propertiesValue2 = inputsValue["properties"];
                                        if (propertiesValue2 != null && propertiesValue2.Type != JTokenType.Null)
                                        {
                                            string typeName = ((string)propertiesValue2["type"]);
                                            if (typeName == "Reference")
                                            {
                                                ReferenceInputProperties referenceInputPropertiesInstance = new ReferenceInputProperties();
                                                
                                                JToken datasourceValue = propertiesValue2["datasource"];
                                                if (datasourceValue != null && datasourceValue.Type != JTokenType.Null)
                                                {
                                                    string typeName2 = ((string)datasourceValue["type"]);
                                                    if (typeName2 == "Microsoft.Storage/Blob")
                                                    {
                                                        BlobReferenceInputDataSource blobReferenceInputDataSourceInstance = new BlobReferenceInputDataSource();
                                                        
                                                        JToken propertiesValue3 = datasourceValue["properties"];
                                                        if (propertiesValue3 != null && propertiesValue3.Type != JTokenType.Null)
                                                        {
                                                            BlobReferenceInputDataSourceProperties propertiesInstance2 = new BlobReferenceInputDataSourceProperties();
                                                            blobReferenceInputDataSourceInstance.Properties = propertiesInstance2;
                                                            
                                                            JToken storageAccountsArray = propertiesValue3["storageAccounts"];
                                                            if (storageAccountsArray != null && storageAccountsArray.Type != JTokenType.Null)
                                                            {
                                                                foreach (JToken storageAccountsValue in ((JArray)storageAccountsArray))
                                                                {
                                                                    StorageAccount storageAccountInstance = new StorageAccount();
                                                                    propertiesInstance2.StorageAccounts.Add(storageAccountInstance);
                                                                    
                                                                    JToken accountNameValue = storageAccountsValue["accountName"];
                                                                    if (accountNameValue != null && accountNameValue.Type != JTokenType.Null)
                                                                    {
                                                                        string accountNameInstance = ((string)accountNameValue);
                                                                        storageAccountInstance.AccountName = accountNameInstance;
                                                                    }
                                                                    
                                                                    JToken accountKeyValue = storageAccountsValue["accountKey"];
                                                                    if (accountKeyValue != null && accountKeyValue.Type != JTokenType.Null)
                                                                    {
                                                                        string accountKeyInstance = ((string)accountKeyValue);
                                                                        storageAccountInstance.AccountKey = accountKeyInstance;
                                                                    }
                                                                }
                                                            }
                                                            
                                                            JToken containerValue = propertiesValue3["container"];
                                                            if (containerValue != null && containerValue.Type != JTokenType.Null)
                                                            {
                                                                string containerInstance = ((string)containerValue);
                                                                propertiesInstance2.Container = containerInstance;
                                                            }
                                                            
                                                            JToken pathPatternValue = propertiesValue3["pathPattern"];
                                                            if (pathPatternValue != null && pathPatternValue.Type != JTokenType.Null)
                                                            {
                                                                string pathPatternInstance = ((string)pathPatternValue);
                                                                propertiesInstance2.PathPattern = pathPatternInstance;
                                                            }
                                                            
                                                            JToken dateFormatValue = propertiesValue3["dateFormat"];
                                                            if (dateFormatValue != null && dateFormatValue.Type != JTokenType.Null)
                                                            {
                                                                string dateFormatInstance = ((string)dateFormatValue);
                                                                propertiesInstance2.DateFormat = dateFormatInstance;
                                                            }
                                                            
                                                            JToken timeFormatValue = propertiesValue3["timeFormat"];
                                                            if (timeFormatValue != null && timeFormatValue.Type != JTokenType.Null)
                                                            {
                                                                string timeFormatInstance = ((string)timeFormatValue);
                                                                propertiesInstance2.TimeFormat = timeFormatInstance;
                                                            }
                                                        }
                                                        
                                                        JToken typeValue2 = datasourceValue["type"];
                                                        if (typeValue2 != null && typeValue2.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance2 = ((string)typeValue2);
                                                            blobReferenceInputDataSourceInstance.Type = typeInstance2;
                                                        }
                                                        referenceInputPropertiesInstance.DataSource = blobReferenceInputDataSourceInstance;
                                                    }
                                                }
                                                
                                                JToken etagValue2 = propertiesValue2["etag"];
                                                if (etagValue2 != null && etagValue2.Type != JTokenType.Null)
                                                {
                                                    string etagInstance2 = ((string)etagValue2);
                                                    referenceInputPropertiesInstance.Etag = etagInstance2;
                                                }
                                                
                                                JToken typeValue3 = propertiesValue2["type"];
                                                if (typeValue3 != null && typeValue3.Type != JTokenType.Null)
                                                {
                                                    string typeInstance3 = ((string)typeValue3);
                                                    referenceInputPropertiesInstance.Type = typeInstance3;
                                                }
                                                
                                                JToken serializationValue = propertiesValue2["serialization"];
                                                if (serializationValue != null && serializationValue.Type != JTokenType.Null)
                                                {
                                                    string typeName3 = ((string)serializationValue["type"]);
                                                    if (typeName3 == "Csv")
                                                    {
                                                        CsvSerialization csvSerializationInstance = new CsvSerialization();
                                                        
                                                        JToken propertiesValue4 = serializationValue["properties"];
                                                        if (propertiesValue4 != null && propertiesValue4.Type != JTokenType.Null)
                                                        {
                                                            CsvSerializationProperties propertiesInstance3 = new CsvSerializationProperties();
                                                            csvSerializationInstance.Properties = propertiesInstance3;
                                                            
                                                            JToken fieldDelimiterValue = propertiesValue4["fieldDelimiter"];
                                                            if (fieldDelimiterValue != null && fieldDelimiterValue.Type != JTokenType.Null)
                                                            {
                                                                string fieldDelimiterInstance = ((string)fieldDelimiterValue);
                                                                propertiesInstance3.FieldDelimiter = fieldDelimiterInstance;
                                                            }
                                                            
                                                            JToken encodingValue = propertiesValue4["encoding"];
                                                            if (encodingValue != null && encodingValue.Type != JTokenType.Null)
                                                            {
                                                                string encodingInstance = ((string)encodingValue);
                                                                propertiesInstance3.Encoding = encodingInstance;
                                                            }
                                                        }
                                                        
                                                        JToken typeValue4 = serializationValue["type"];
                                                        if (typeValue4 != null && typeValue4.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance4 = ((string)typeValue4);
                                                            csvSerializationInstance.Type = typeInstance4;
                                                        }
                                                        referenceInputPropertiesInstance.Serialization = csvSerializationInstance;
                                                    }
                                                    if (typeName3 == "Json")
                                                    {
                                                        JsonSerialization jsonSerializationInstance = new JsonSerialization();
                                                        
                                                        JToken propertiesValue5 = serializationValue["properties"];
                                                        if (propertiesValue5 != null && propertiesValue5.Type != JTokenType.Null)
                                                        {
                                                            JsonSerializationProperties propertiesInstance4 = new JsonSerializationProperties();
                                                            jsonSerializationInstance.Properties = propertiesInstance4;
                                                            
                                                            JToken encodingValue2 = propertiesValue5["encoding"];
                                                            if (encodingValue2 != null && encodingValue2.Type != JTokenType.Null)
                                                            {
                                                                string encodingInstance2 = ((string)encodingValue2);
                                                                propertiesInstance4.Encoding = encodingInstance2;
                                                            }
                                                            
                                                            JToken formatValue = propertiesValue5["format"];
                                                            if (formatValue != null && formatValue.Type != JTokenType.Null)
                                                            {
                                                                string formatInstance = ((string)formatValue);
                                                                propertiesInstance4.Format = formatInstance;
                                                            }
                                                        }
                                                        
                                                        JToken typeValue5 = serializationValue["type"];
                                                        if (typeValue5 != null && typeValue5.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance5 = ((string)typeValue5);
                                                            jsonSerializationInstance.Type = typeInstance5;
                                                        }
                                                        referenceInputPropertiesInstance.Serialization = jsonSerializationInstance;
                                                    }
                                                    if (typeName3 == "Avro")
                                                    {
                                                        AvroSerialization avroSerializationInstance = new AvroSerialization();
                                                        
                                                        JToken propertiesValue6 = serializationValue["properties"];
                                                        if (propertiesValue6 != null && propertiesValue6.Type != JTokenType.Null)
                                                        {
                                                            AvroSerializationProperties propertiesInstance5 = new AvroSerializationProperties();
                                                            avroSerializationInstance.Properties = propertiesInstance5;
                                                        }
                                                        
                                                        JToken typeValue6 = serializationValue["type"];
                                                        if (typeValue6 != null && typeValue6.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance6 = ((string)typeValue6);
                                                            avroSerializationInstance.Type = typeInstance6;
                                                        }
                                                        referenceInputPropertiesInstance.Serialization = avroSerializationInstance;
                                                    }
                                                }
                                                
                                                JToken diagnosticsValue = propertiesValue2["diagnostics"];
                                                if (diagnosticsValue != null && diagnosticsValue.Type != JTokenType.Null)
                                                {
                                                    Diagnostics diagnosticsInstance = new Diagnostics();
                                                    referenceInputPropertiesInstance.Diagnostics = diagnosticsInstance;
                                                    
                                                    JToken conditionsArray = diagnosticsValue["conditions"];
                                                    if (conditionsArray != null && conditionsArray.Type != JTokenType.Null)
                                                    {
                                                        foreach (JToken conditionsValue in ((JArray)conditionsArray))
                                                        {
                                                            DiagnosticCondition diagnosticConditionInstance = new DiagnosticCondition();
                                                            diagnosticsInstance.Conditions.Add(diagnosticConditionInstance);
                                                            
                                                            JToken sinceValue = conditionsValue["since"];
                                                            if (sinceValue != null && sinceValue.Type != JTokenType.Null)
                                                            {
                                                                DateTime sinceInstance = ((DateTime)sinceValue);
                                                                diagnosticConditionInstance.Since = sinceInstance;
                                                            }
                                                            
                                                            JToken codeValue = conditionsValue["code"];
                                                            if (codeValue != null && codeValue.Type != JTokenType.Null)
                                                            {
                                                                string codeInstance = ((string)codeValue);
                                                                diagnosticConditionInstance.Code = codeInstance;
                                                            }
                                                            
                                                            JToken messageValue = conditionsValue["message"];
                                                            if (messageValue != null && messageValue.Type != JTokenType.Null)
                                                            {
                                                                string messageInstance = ((string)messageValue);
                                                                diagnosticConditionInstance.Message = messageInstance;
                                                            }
                                                        }
                                                    }
                                                }
                                                inputInstance.Properties = referenceInputPropertiesInstance;
                                            }
                                            if (typeName == "Stream")
                                            {
                                                StreamInputProperties streamInputPropertiesInstance = new StreamInputProperties();
                                                
                                                JToken datasourceValue2 = propertiesValue2["datasource"];
                                                if (datasourceValue2 != null && datasourceValue2.Type != JTokenType.Null)
                                                {
                                                    string typeName4 = ((string)datasourceValue2["type"]);
                                                    if (typeName4 == "Microsoft.Storage/Blob")
                                                    {
                                                        BlobStreamInputDataSource blobStreamInputDataSourceInstance = new BlobStreamInputDataSource();
                                                        
                                                        JToken propertiesValue7 = datasourceValue2["properties"];
                                                        if (propertiesValue7 != null && propertiesValue7.Type != JTokenType.Null)
                                                        {
                                                            BlobStreamInputDataSourceProperties propertiesInstance6 = new BlobStreamInputDataSourceProperties();
                                                            blobStreamInputDataSourceInstance.Properties = propertiesInstance6;
                                                            
                                                            JToken storageAccountsArray2 = propertiesValue7["storageAccounts"];
                                                            if (storageAccountsArray2 != null && storageAccountsArray2.Type != JTokenType.Null)
                                                            {
                                                                foreach (JToken storageAccountsValue2 in ((JArray)storageAccountsArray2))
                                                                {
                                                                    StorageAccount storageAccountInstance2 = new StorageAccount();
                                                                    propertiesInstance6.StorageAccounts.Add(storageAccountInstance2);
                                                                    
                                                                    JToken accountNameValue2 = storageAccountsValue2["accountName"];
                                                                    if (accountNameValue2 != null && accountNameValue2.Type != JTokenType.Null)
                                                                    {
                                                                        string accountNameInstance2 = ((string)accountNameValue2);
                                                                        storageAccountInstance2.AccountName = accountNameInstance2;
                                                                    }
                                                                    
                                                                    JToken accountKeyValue2 = storageAccountsValue2["accountKey"];
                                                                    if (accountKeyValue2 != null && accountKeyValue2.Type != JTokenType.Null)
                                                                    {
                                                                        string accountKeyInstance2 = ((string)accountKeyValue2);
                                                                        storageAccountInstance2.AccountKey = accountKeyInstance2;
                                                                    }
                                                                }
                                                            }
                                                            
                                                            JToken containerValue2 = propertiesValue7["container"];
                                                            if (containerValue2 != null && containerValue2.Type != JTokenType.Null)
                                                            {
                                                                string containerInstance2 = ((string)containerValue2);
                                                                propertiesInstance6.Container = containerInstance2;
                                                            }
                                                            
                                                            JToken pathPatternValue2 = propertiesValue7["pathPattern"];
                                                            if (pathPatternValue2 != null && pathPatternValue2.Type != JTokenType.Null)
                                                            {
                                                                string pathPatternInstance2 = ((string)pathPatternValue2);
                                                                propertiesInstance6.PathPattern = pathPatternInstance2;
                                                            }
                                                            
                                                            JToken dateFormatValue2 = propertiesValue7["dateFormat"];
                                                            if (dateFormatValue2 != null && dateFormatValue2.Type != JTokenType.Null)
                                                            {
                                                                string dateFormatInstance2 = ((string)dateFormatValue2);
                                                                propertiesInstance6.DateFormat = dateFormatInstance2;
                                                            }
                                                            
                                                            JToken timeFormatValue2 = propertiesValue7["timeFormat"];
                                                            if (timeFormatValue2 != null && timeFormatValue2.Type != JTokenType.Null)
                                                            {
                                                                string timeFormatInstance2 = ((string)timeFormatValue2);
                                                                propertiesInstance6.TimeFormat = timeFormatInstance2;
                                                            }
                                                            
                                                            JToken sourcePartitionCountValue = propertiesValue7["sourcePartitionCount"];
                                                            if (sourcePartitionCountValue != null && sourcePartitionCountValue.Type != JTokenType.Null)
                                                            {
                                                                int sourcePartitionCountInstance = ((int)sourcePartitionCountValue);
                                                                propertiesInstance6.SourcePartitionCount = sourcePartitionCountInstance;
                                                            }
                                                        }
                                                        
                                                        JToken typeValue7 = datasourceValue2["type"];
                                                        if (typeValue7 != null && typeValue7.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance7 = ((string)typeValue7);
                                                            blobStreamInputDataSourceInstance.Type = typeInstance7;
                                                        }
                                                        streamInputPropertiesInstance.DataSource = blobStreamInputDataSourceInstance;
                                                    }
                                                    if (typeName4 == "Microsoft.ServiceBus/EventHub")
                                                    {
                                                        EventHubStreamInputDataSource eventHubStreamInputDataSourceInstance = new EventHubStreamInputDataSource();
                                                        
                                                        JToken propertiesValue8 = datasourceValue2["properties"];
                                                        if (propertiesValue8 != null && propertiesValue8.Type != JTokenType.Null)
                                                        {
                                                            EventHubStreamInputDataSourceProperties propertiesInstance7 = new EventHubStreamInputDataSourceProperties();
                                                            eventHubStreamInputDataSourceInstance.Properties = propertiesInstance7;
                                                            
                                                            JToken serviceBusNamespaceValue = propertiesValue8["serviceBusNamespace"];
                                                            if (serviceBusNamespaceValue != null && serviceBusNamespaceValue.Type != JTokenType.Null)
                                                            {
                                                                string serviceBusNamespaceInstance = ((string)serviceBusNamespaceValue);
                                                                propertiesInstance7.ServiceBusNamespace = serviceBusNamespaceInstance;
                                                            }
                                                            
                                                            JToken sharedAccessPolicyNameValue = propertiesValue8["sharedAccessPolicyName"];
                                                            if (sharedAccessPolicyNameValue != null && sharedAccessPolicyNameValue.Type != JTokenType.Null)
                                                            {
                                                                string sharedAccessPolicyNameInstance = ((string)sharedAccessPolicyNameValue);
                                                                propertiesInstance7.SharedAccessPolicyName = sharedAccessPolicyNameInstance;
                                                            }
                                                            
                                                            JToken sharedAccessPolicyKeyValue = propertiesValue8["sharedAccessPolicyKey"];
                                                            if (sharedAccessPolicyKeyValue != null && sharedAccessPolicyKeyValue.Type != JTokenType.Null)
                                                            {
                                                                string sharedAccessPolicyKeyInstance = ((string)sharedAccessPolicyKeyValue);
                                                                propertiesInstance7.SharedAccessPolicyKey = sharedAccessPolicyKeyInstance;
                                                            }
                                                            
                                                            JToken eventHubNameValue = propertiesValue8["eventHubName"];
                                                            if (eventHubNameValue != null && eventHubNameValue.Type != JTokenType.Null)
                                                            {
                                                                string eventHubNameInstance = ((string)eventHubNameValue);
                                                                propertiesInstance7.EventHubName = eventHubNameInstance;
                                                            }
                                                            
                                                            JToken consumerGroupNameValue = propertiesValue8["consumerGroupName"];
                                                            if (consumerGroupNameValue != null && consumerGroupNameValue.Type != JTokenType.Null)
                                                            {
                                                                string consumerGroupNameInstance = ((string)consumerGroupNameValue);
                                                                propertiesInstance7.ConsumerGroupName = consumerGroupNameInstance;
                                                            }
                                                        }
                                                        
                                                        JToken typeValue8 = datasourceValue2["type"];
                                                        if (typeValue8 != null && typeValue8.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance8 = ((string)typeValue8);
                                                            eventHubStreamInputDataSourceInstance.Type = typeInstance8;
                                                        }
                                                        streamInputPropertiesInstance.DataSource = eventHubStreamInputDataSourceInstance;
                                                    }
                                                }
                                                
                                                JToken etagValue3 = propertiesValue2["etag"];
                                                if (etagValue3 != null && etagValue3.Type != JTokenType.Null)
                                                {
                                                    string etagInstance3 = ((string)etagValue3);
                                                    streamInputPropertiesInstance.Etag = etagInstance3;
                                                }
                                                
                                                JToken typeValue9 = propertiesValue2["type"];
                                                if (typeValue9 != null && typeValue9.Type != JTokenType.Null)
                                                {
                                                    string typeInstance9 = ((string)typeValue9);
                                                    streamInputPropertiesInstance.Type = typeInstance9;
                                                }
                                                
                                                JToken serializationValue2 = propertiesValue2["serialization"];
                                                if (serializationValue2 != null && serializationValue2.Type != JTokenType.Null)
                                                {
                                                    string typeName5 = ((string)serializationValue2["type"]);
                                                    if (typeName5 == "Csv")
                                                    {
                                                        CsvSerialization csvSerializationInstance2 = new CsvSerialization();
                                                        
                                                        JToken propertiesValue9 = serializationValue2["properties"];
                                                        if (propertiesValue9 != null && propertiesValue9.Type != JTokenType.Null)
                                                        {
                                                            CsvSerializationProperties propertiesInstance8 = new CsvSerializationProperties();
                                                            csvSerializationInstance2.Properties = propertiesInstance8;
                                                            
                                                            JToken fieldDelimiterValue2 = propertiesValue9["fieldDelimiter"];
                                                            if (fieldDelimiterValue2 != null && fieldDelimiterValue2.Type != JTokenType.Null)
                                                            {
                                                                string fieldDelimiterInstance2 = ((string)fieldDelimiterValue2);
                                                                propertiesInstance8.FieldDelimiter = fieldDelimiterInstance2;
                                                            }
                                                            
                                                            JToken encodingValue3 = propertiesValue9["encoding"];
                                                            if (encodingValue3 != null && encodingValue3.Type != JTokenType.Null)
                                                            {
                                                                string encodingInstance3 = ((string)encodingValue3);
                                                                propertiesInstance8.Encoding = encodingInstance3;
                                                            }
                                                        }
                                                        
                                                        JToken typeValue10 = serializationValue2["type"];
                                                        if (typeValue10 != null && typeValue10.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance10 = ((string)typeValue10);
                                                            csvSerializationInstance2.Type = typeInstance10;
                                                        }
                                                        streamInputPropertiesInstance.Serialization = csvSerializationInstance2;
                                                    }
                                                    if (typeName5 == "Json")
                                                    {
                                                        JsonSerialization jsonSerializationInstance2 = new JsonSerialization();
                                                        
                                                        JToken propertiesValue10 = serializationValue2["properties"];
                                                        if (propertiesValue10 != null && propertiesValue10.Type != JTokenType.Null)
                                                        {
                                                            JsonSerializationProperties propertiesInstance9 = new JsonSerializationProperties();
                                                            jsonSerializationInstance2.Properties = propertiesInstance9;
                                                            
                                                            JToken encodingValue4 = propertiesValue10["encoding"];
                                                            if (encodingValue4 != null && encodingValue4.Type != JTokenType.Null)
                                                            {
                                                                string encodingInstance4 = ((string)encodingValue4);
                                                                propertiesInstance9.Encoding = encodingInstance4;
                                                            }
                                                            
                                                            JToken formatValue2 = propertiesValue10["format"];
                                                            if (formatValue2 != null && formatValue2.Type != JTokenType.Null)
                                                            {
                                                                string formatInstance2 = ((string)formatValue2);
                                                                propertiesInstance9.Format = formatInstance2;
                                                            }
                                                        }
                                                        
                                                        JToken typeValue11 = serializationValue2["type"];
                                                        if (typeValue11 != null && typeValue11.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance11 = ((string)typeValue11);
                                                            jsonSerializationInstance2.Type = typeInstance11;
                                                        }
                                                        streamInputPropertiesInstance.Serialization = jsonSerializationInstance2;
                                                    }
                                                    if (typeName5 == "Avro")
                                                    {
                                                        AvroSerialization avroSerializationInstance2 = new AvroSerialization();
                                                        
                                                        JToken propertiesValue11 = serializationValue2["properties"];
                                                        if (propertiesValue11 != null && propertiesValue11.Type != JTokenType.Null)
                                                        {
                                                            AvroSerializationProperties propertiesInstance10 = new AvroSerializationProperties();
                                                            avroSerializationInstance2.Properties = propertiesInstance10;
                                                        }
                                                        
                                                        JToken typeValue12 = serializationValue2["type"];
                                                        if (typeValue12 != null && typeValue12.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance12 = ((string)typeValue12);
                                                            avroSerializationInstance2.Type = typeInstance12;
                                                        }
                                                        streamInputPropertiesInstance.Serialization = avroSerializationInstance2;
                                                    }
                                                }
                                                
                                                JToken diagnosticsValue2 = propertiesValue2["diagnostics"];
                                                if (diagnosticsValue2 != null && diagnosticsValue2.Type != JTokenType.Null)
                                                {
                                                    Diagnostics diagnosticsInstance2 = new Diagnostics();
                                                    streamInputPropertiesInstance.Diagnostics = diagnosticsInstance2;
                                                    
                                                    JToken conditionsArray2 = diagnosticsValue2["conditions"];
                                                    if (conditionsArray2 != null && conditionsArray2.Type != JTokenType.Null)
                                                    {
                                                        foreach (JToken conditionsValue2 in ((JArray)conditionsArray2))
                                                        {
                                                            DiagnosticCondition diagnosticConditionInstance2 = new DiagnosticCondition();
                                                            diagnosticsInstance2.Conditions.Add(diagnosticConditionInstance2);
                                                            
                                                            JToken sinceValue2 = conditionsValue2["since"];
                                                            if (sinceValue2 != null && sinceValue2.Type != JTokenType.Null)
                                                            {
                                                                DateTime sinceInstance2 = ((DateTime)sinceValue2);
                                                                diagnosticConditionInstance2.Since = sinceInstance2;
                                                            }
                                                            
                                                            JToken codeValue2 = conditionsValue2["code"];
                                                            if (codeValue2 != null && codeValue2.Type != JTokenType.Null)
                                                            {
                                                                string codeInstance2 = ((string)codeValue2);
                                                                diagnosticConditionInstance2.Code = codeInstance2;
                                                            }
                                                            
                                                            JToken messageValue2 = conditionsValue2["message"];
                                                            if (messageValue2 != null && messageValue2.Type != JTokenType.Null)
                                                            {
                                                                string messageInstance2 = ((string)messageValue2);
                                                                diagnosticConditionInstance2.Message = messageInstance2;
                                                            }
                                                        }
                                                    }
                                                }
                                                inputInstance.Properties = streamInputPropertiesInstance;
                                            }
                                        }
                                    }
                                }
                                
                                JToken transformationValue = propertiesValue["transformation"];
                                if (transformationValue != null && transformationValue.Type != JTokenType.Null)
                                {
                                    Transformation transformationInstance = new Transformation();
                                    propertiesInstance.Transformation = transformationInstance;
                                    
                                    JToken nameValue4 = transformationValue["name"];
                                    if (nameValue4 != null && nameValue4.Type != JTokenType.Null)
                                    {
                                        string nameInstance4 = ((string)nameValue4);
                                        transformationInstance.Name = nameInstance4;
                                    }
                                    
                                    JToken propertiesValue12 = transformationValue["properties"];
                                    if (propertiesValue12 != null && propertiesValue12.Type != JTokenType.Null)
                                    {
                                        TransformationProperties propertiesInstance11 = new TransformationProperties();
                                        transformationInstance.Properties = propertiesInstance11;
                                        
                                        JToken etagValue4 = propertiesValue12["etag"];
                                        if (etagValue4 != null && etagValue4.Type != JTokenType.Null)
                                        {
                                            string etagInstance4 = ((string)etagValue4);
                                            propertiesInstance11.Etag = etagInstance4;
                                        }
                                        
                                        JToken streamingUnitsValue = propertiesValue12["streamingUnits"];
                                        if (streamingUnitsValue != null && streamingUnitsValue.Type != JTokenType.Null)
                                        {
                                            int streamingUnitsInstance = ((int)streamingUnitsValue);
                                            propertiesInstance11.StreamingUnits = streamingUnitsInstance;
                                        }
                                        
                                        JToken queryValue = propertiesValue12["query"];
                                        if (queryValue != null && queryValue.Type != JTokenType.Null)
                                        {
                                            string queryInstance = ((string)queryValue);
                                            propertiesInstance11.Query = queryInstance;
                                        }
                                    }
                                }
                                
                                JToken outputsArray = propertiesValue["outputs"];
                                if (outputsArray != null && outputsArray.Type != JTokenType.Null)
                                {
                                    foreach (JToken outputsValue in ((JArray)outputsArray))
                                    {
                                        Output outputInstance = new Output();
                                        propertiesInstance.Outputs.Add(outputInstance);
                                        
                                        JToken nameValue5 = outputsValue["name"];
                                        if (nameValue5 != null && nameValue5.Type != JTokenType.Null)
                                        {
                                            string nameInstance5 = ((string)nameValue5);
                                            outputInstance.Name = nameInstance5;
                                        }
                                        
                                        JToken propertiesValue13 = outputsValue["properties"];
                                        if (propertiesValue13 != null && propertiesValue13.Type != JTokenType.Null)
                                        {
                                            OutputProperties propertiesInstance12 = new OutputProperties();
                                            outputInstance.Properties = propertiesInstance12;
                                            
                                            JToken etagValue5 = propertiesValue13["etag"];
                                            if (etagValue5 != null && etagValue5.Type != JTokenType.Null)
                                            {
                                                string etagInstance5 = ((string)etagValue5);
                                                propertiesInstance12.Etag = etagInstance5;
                                            }
                                            
                                            JToken datasourceValue3 = propertiesValue13["datasource"];
                                            if (datasourceValue3 != null && datasourceValue3.Type != JTokenType.Null)
                                            {
                                                string typeName6 = ((string)datasourceValue3["type"]);
                                                if (typeName6 == "Microsoft.Storage/Blob")
                                                {
                                                    BlobOutputDataSource blobOutputDataSourceInstance = new BlobOutputDataSource();
                                                    
                                                    JToken propertiesValue14 = datasourceValue3["properties"];
                                                    if (propertiesValue14 != null && propertiesValue14.Type != JTokenType.Null)
                                                    {
                                                        BlobOutputDataSourceProperties propertiesInstance13 = new BlobOutputDataSourceProperties();
                                                        blobOutputDataSourceInstance.Properties = propertiesInstance13;
                                                        
                                                        JToken storageAccountsArray3 = propertiesValue14["storageAccounts"];
                                                        if (storageAccountsArray3 != null && storageAccountsArray3.Type != JTokenType.Null)
                                                        {
                                                            foreach (JToken storageAccountsValue3 in ((JArray)storageAccountsArray3))
                                                            {
                                                                StorageAccount storageAccountInstance3 = new StorageAccount();
                                                                propertiesInstance13.StorageAccounts.Add(storageAccountInstance3);
                                                                
                                                                JToken accountNameValue3 = storageAccountsValue3["accountName"];
                                                                if (accountNameValue3 != null && accountNameValue3.Type != JTokenType.Null)
                                                                {
                                                                    string accountNameInstance3 = ((string)accountNameValue3);
                                                                    storageAccountInstance3.AccountName = accountNameInstance3;
                                                                }
                                                                
                                                                JToken accountKeyValue3 = storageAccountsValue3["accountKey"];
                                                                if (accountKeyValue3 != null && accountKeyValue3.Type != JTokenType.Null)
                                                                {
                                                                    string accountKeyInstance3 = ((string)accountKeyValue3);
                                                                    storageAccountInstance3.AccountKey = accountKeyInstance3;
                                                                }
                                                            }
                                                        }
                                                        
                                                        JToken containerValue3 = propertiesValue14["container"];
                                                        if (containerValue3 != null && containerValue3.Type != JTokenType.Null)
                                                        {
                                                            string containerInstance3 = ((string)containerValue3);
                                                            propertiesInstance13.Container = containerInstance3;
                                                        }
                                                        
                                                        JToken blobPathPrefixValue = propertiesValue14["blobPathPrefix"];
                                                        if (blobPathPrefixValue != null && blobPathPrefixValue.Type != JTokenType.Null)
                                                        {
                                                            string blobPathPrefixInstance = ((string)blobPathPrefixValue);
                                                            propertiesInstance13.BlobPathPrefix = blobPathPrefixInstance;
                                                        }
                                                    }
                                                    
                                                    JToken typeValue13 = datasourceValue3["type"];
                                                    if (typeValue13 != null && typeValue13.Type != JTokenType.Null)
                                                    {
                                                        string typeInstance13 = ((string)typeValue13);
                                                        blobOutputDataSourceInstance.Type = typeInstance13;
                                                    }
                                                    propertiesInstance12.DataSource = blobOutputDataSourceInstance;
                                                }
                                                if (typeName6 == "Microsoft.Storage/Table")
                                                {
                                                    AzureTableOutputDataSource azureTableOutputDataSourceInstance = new AzureTableOutputDataSource();
                                                    
                                                    JToken propertiesValue15 = datasourceValue3["properties"];
                                                    if (propertiesValue15 != null && propertiesValue15.Type != JTokenType.Null)
                                                    {
                                                        AzureTableOutputDataSourceProperties propertiesInstance14 = new AzureTableOutputDataSourceProperties();
                                                        azureTableOutputDataSourceInstance.Properties = propertiesInstance14;
                                                        
                                                        JToken accountNameValue4 = propertiesValue15["accountName"];
                                                        if (accountNameValue4 != null && accountNameValue4.Type != JTokenType.Null)
                                                        {
                                                            string accountNameInstance4 = ((string)accountNameValue4);
                                                            propertiesInstance14.AccountName = accountNameInstance4;
                                                        }
                                                        
                                                        JToken accountKeyValue4 = propertiesValue15["accountKey"];
                                                        if (accountKeyValue4 != null && accountKeyValue4.Type != JTokenType.Null)
                                                        {
                                                            string accountKeyInstance4 = ((string)accountKeyValue4);
                                                            propertiesInstance14.AccountKey = accountKeyInstance4;
                                                        }
                                                        
                                                        JToken tableValue = propertiesValue15["table"];
                                                        if (tableValue != null && tableValue.Type != JTokenType.Null)
                                                        {
                                                            string tableInstance = ((string)tableValue);
                                                            propertiesInstance14.Table = tableInstance;
                                                        }
                                                        
                                                        JToken partitionKeyValue = propertiesValue15["partitionKey"];
                                                        if (partitionKeyValue != null && partitionKeyValue.Type != JTokenType.Null)
                                                        {
                                                            string partitionKeyInstance = ((string)partitionKeyValue);
                                                            propertiesInstance14.PartitionKey = partitionKeyInstance;
                                                        }
                                                        
                                                        JToken rowKeyValue = propertiesValue15["rowKey"];
                                                        if (rowKeyValue != null && rowKeyValue.Type != JTokenType.Null)
                                                        {
                                                            string rowKeyInstance = ((string)rowKeyValue);
                                                            propertiesInstance14.RowKey = rowKeyInstance;
                                                        }
                                                        
                                                        JToken columnsToRemoveArray = propertiesValue15["columnsToRemove"];
                                                        if (columnsToRemoveArray != null && columnsToRemoveArray.Type != JTokenType.Null)
                                                        {
                                                            foreach (JToken columnsToRemoveValue in ((JArray)columnsToRemoveArray))
                                                            {
                                                                propertiesInstance14.ColumnsToRemove.Add(((string)columnsToRemoveValue));
                                                            }
                                                        }
                                                        
                                                        JToken batchSizeValue = propertiesValue15["batchSize"];
                                                        if (batchSizeValue != null && batchSizeValue.Type != JTokenType.Null)
                                                        {
                                                            int batchSizeInstance = ((int)batchSizeValue);
                                                            propertiesInstance14.BatchSize = batchSizeInstance;
                                                        }
                                                    }
                                                    
                                                    JToken typeValue14 = datasourceValue3["type"];
                                                    if (typeValue14 != null && typeValue14.Type != JTokenType.Null)
                                                    {
                                                        string typeInstance14 = ((string)typeValue14);
                                                        azureTableOutputDataSourceInstance.Type = typeInstance14;
                                                    }
                                                    propertiesInstance12.DataSource = azureTableOutputDataSourceInstance;
                                                }
                                                if (typeName6 == "Microsoft.ServiceBus/EventHub")
                                                {
                                                    EventHubOutputDataSource eventHubOutputDataSourceInstance = new EventHubOutputDataSource();
                                                    
                                                    JToken propertiesValue16 = datasourceValue3["properties"];
                                                    if (propertiesValue16 != null && propertiesValue16.Type != JTokenType.Null)
                                                    {
                                                        EventHubOutputDataSourceProperties propertiesInstance15 = new EventHubOutputDataSourceProperties();
                                                        eventHubOutputDataSourceInstance.Properties = propertiesInstance15;
                                                        
                                                        JToken serviceBusNamespaceValue2 = propertiesValue16["serviceBusNamespace"];
                                                        if (serviceBusNamespaceValue2 != null && serviceBusNamespaceValue2.Type != JTokenType.Null)
                                                        {
                                                            string serviceBusNamespaceInstance2 = ((string)serviceBusNamespaceValue2);
                                                            propertiesInstance15.ServiceBusNamespace = serviceBusNamespaceInstance2;
                                                        }
                                                        
                                                        JToken sharedAccessPolicyNameValue2 = propertiesValue16["sharedAccessPolicyName"];
                                                        if (sharedAccessPolicyNameValue2 != null && sharedAccessPolicyNameValue2.Type != JTokenType.Null)
                                                        {
                                                            string sharedAccessPolicyNameInstance2 = ((string)sharedAccessPolicyNameValue2);
                                                            propertiesInstance15.SharedAccessPolicyName = sharedAccessPolicyNameInstance2;
                                                        }
                                                        
                                                        JToken sharedAccessPolicyKeyValue2 = propertiesValue16["sharedAccessPolicyKey"];
                                                        if (sharedAccessPolicyKeyValue2 != null && sharedAccessPolicyKeyValue2.Type != JTokenType.Null)
                                                        {
                                                            string sharedAccessPolicyKeyInstance2 = ((string)sharedAccessPolicyKeyValue2);
                                                            propertiesInstance15.SharedAccessPolicyKey = sharedAccessPolicyKeyInstance2;
                                                        }
                                                        
                                                        JToken eventHubNameValue2 = propertiesValue16["eventHubName"];
                                                        if (eventHubNameValue2 != null && eventHubNameValue2.Type != JTokenType.Null)
                                                        {
                                                            string eventHubNameInstance2 = ((string)eventHubNameValue2);
                                                            propertiesInstance15.EventHubName = eventHubNameInstance2;
                                                        }
                                                        
                                                        JToken partitionKeyValue2 = propertiesValue16["partitionKey"];
                                                        if (partitionKeyValue2 != null && partitionKeyValue2.Type != JTokenType.Null)
                                                        {
                                                            string partitionKeyInstance2 = ((string)partitionKeyValue2);
                                                            propertiesInstance15.PartitionKey = partitionKeyInstance2;
                                                        }
                                                    }
                                                    
                                                    JToken typeValue15 = datasourceValue3["type"];
                                                    if (typeValue15 != null && typeValue15.Type != JTokenType.Null)
                                                    {
                                                        string typeInstance15 = ((string)typeValue15);
                                                        eventHubOutputDataSourceInstance.Type = typeInstance15;
                                                    }
                                                    propertiesInstance12.DataSource = eventHubOutputDataSourceInstance;
                                                }
                                                if (typeName6 == "Microsoft.Sql/Server/Database")
                                                {
                                                    SqlAzureOutputDataSource sqlAzureOutputDataSourceInstance = new SqlAzureOutputDataSource();
                                                    
                                                    JToken propertiesValue17 = datasourceValue3["properties"];
                                                    if (propertiesValue17 != null && propertiesValue17.Type != JTokenType.Null)
                                                    {
                                                        SqlAzureOutputDataSourceProperties propertiesInstance16 = new SqlAzureOutputDataSourceProperties();
                                                        sqlAzureOutputDataSourceInstance.Properties = propertiesInstance16;
                                                        
                                                        JToken serverValue = propertiesValue17["server"];
                                                        if (serverValue != null && serverValue.Type != JTokenType.Null)
                                                        {
                                                            string serverInstance = ((string)serverValue);
                                                            propertiesInstance16.Server = serverInstance;
                                                        }
                                                        
                                                        JToken databaseValue = propertiesValue17["database"];
                                                        if (databaseValue != null && databaseValue.Type != JTokenType.Null)
                                                        {
                                                            string databaseInstance = ((string)databaseValue);
                                                            propertiesInstance16.Database = databaseInstance;
                                                        }
                                                        
                                                        JToken userValue = propertiesValue17["user"];
                                                        if (userValue != null && userValue.Type != JTokenType.Null)
                                                        {
                                                            string userInstance = ((string)userValue);
                                                            propertiesInstance16.User = userInstance;
                                                        }
                                                        
                                                        JToken passwordValue = propertiesValue17["password"];
                                                        if (passwordValue != null && passwordValue.Type != JTokenType.Null)
                                                        {
                                                            string passwordInstance = ((string)passwordValue);
                                                            propertiesInstance16.Password = passwordInstance;
                                                        }
                                                        
                                                        JToken tableValue2 = propertiesValue17["table"];
                                                        if (tableValue2 != null && tableValue2.Type != JTokenType.Null)
                                                        {
                                                            string tableInstance2 = ((string)tableValue2);
                                                            propertiesInstance16.Table = tableInstance2;
                                                        }
                                                    }
                                                    
                                                    JToken typeValue16 = datasourceValue3["type"];
                                                    if (typeValue16 != null && typeValue16.Type != JTokenType.Null)
                                                    {
                                                        string typeInstance16 = ((string)typeValue16);
                                                        sqlAzureOutputDataSourceInstance.Type = typeInstance16;
                                                    }
                                                    propertiesInstance12.DataSource = sqlAzureOutputDataSourceInstance;
                                                }
                                            }
                                            
                                            JToken serializationValue3 = propertiesValue13["serialization"];
                                            if (serializationValue3 != null && serializationValue3.Type != JTokenType.Null)
                                            {
                                                string typeName7 = ((string)serializationValue3["type"]);
                                                if (typeName7 == "Csv")
                                                {
                                                    CsvSerialization csvSerializationInstance3 = new CsvSerialization();
                                                    
                                                    JToken propertiesValue18 = serializationValue3["properties"];
                                                    if (propertiesValue18 != null && propertiesValue18.Type != JTokenType.Null)
                                                    {
                                                        CsvSerializationProperties propertiesInstance17 = new CsvSerializationProperties();
                                                        csvSerializationInstance3.Properties = propertiesInstance17;
                                                        
                                                        JToken fieldDelimiterValue3 = propertiesValue18["fieldDelimiter"];
                                                        if (fieldDelimiterValue3 != null && fieldDelimiterValue3.Type != JTokenType.Null)
                                                        {
                                                            string fieldDelimiterInstance3 = ((string)fieldDelimiterValue3);
                                                            propertiesInstance17.FieldDelimiter = fieldDelimiterInstance3;
                                                        }
                                                        
                                                        JToken encodingValue5 = propertiesValue18["encoding"];
                                                        if (encodingValue5 != null && encodingValue5.Type != JTokenType.Null)
                                                        {
                                                            string encodingInstance5 = ((string)encodingValue5);
                                                            propertiesInstance17.Encoding = encodingInstance5;
                                                        }
                                                    }
                                                    
                                                    JToken typeValue17 = serializationValue3["type"];
                                                    if (typeValue17 != null && typeValue17.Type != JTokenType.Null)
                                                    {
                                                        string typeInstance17 = ((string)typeValue17);
                                                        csvSerializationInstance3.Type = typeInstance17;
                                                    }
                                                    propertiesInstance12.Serialization = csvSerializationInstance3;
                                                }
                                                if (typeName7 == "Json")
                                                {
                                                    JsonSerialization jsonSerializationInstance3 = new JsonSerialization();
                                                    
                                                    JToken propertiesValue19 = serializationValue3["properties"];
                                                    if (propertiesValue19 != null && propertiesValue19.Type != JTokenType.Null)
                                                    {
                                                        JsonSerializationProperties propertiesInstance18 = new JsonSerializationProperties();
                                                        jsonSerializationInstance3.Properties = propertiesInstance18;
                                                        
                                                        JToken encodingValue6 = propertiesValue19["encoding"];
                                                        if (encodingValue6 != null && encodingValue6.Type != JTokenType.Null)
                                                        {
                                                            string encodingInstance6 = ((string)encodingValue6);
                                                            propertiesInstance18.Encoding = encodingInstance6;
                                                        }
                                                        
                                                        JToken formatValue3 = propertiesValue19["format"];
                                                        if (formatValue3 != null && formatValue3.Type != JTokenType.Null)
                                                        {
                                                            string formatInstance3 = ((string)formatValue3);
                                                            propertiesInstance18.Format = formatInstance3;
                                                        }
                                                    }
                                                    
                                                    JToken typeValue18 = serializationValue3["type"];
                                                    if (typeValue18 != null && typeValue18.Type != JTokenType.Null)
                                                    {
                                                        string typeInstance18 = ((string)typeValue18);
                                                        jsonSerializationInstance3.Type = typeInstance18;
                                                    }
                                                    propertiesInstance12.Serialization = jsonSerializationInstance3;
                                                }
                                                if (typeName7 == "Avro")
                                                {
                                                    AvroSerialization avroSerializationInstance3 = new AvroSerialization();
                                                    
                                                    JToken propertiesValue20 = serializationValue3["properties"];
                                                    if (propertiesValue20 != null && propertiesValue20.Type != JTokenType.Null)
                                                    {
                                                        AvroSerializationProperties propertiesInstance19 = new AvroSerializationProperties();
                                                        avroSerializationInstance3.Properties = propertiesInstance19;
                                                    }
                                                    
                                                    JToken typeValue19 = serializationValue3["type"];
                                                    if (typeValue19 != null && typeValue19.Type != JTokenType.Null)
                                                    {
                                                        string typeInstance19 = ((string)typeValue19);
                                                        avroSerializationInstance3.Type = typeInstance19;
                                                    }
                                                    propertiesInstance12.Serialization = avroSerializationInstance3;
                                                }
                                            }
                                            
                                            JToken diagnosticsValue3 = propertiesValue13["diagnostics"];
                                            if (diagnosticsValue3 != null && diagnosticsValue3.Type != JTokenType.Null)
                                            {
                                                Diagnostics diagnosticsInstance3 = new Diagnostics();
                                                propertiesInstance12.Diagnostics = diagnosticsInstance3;
                                                
                                                JToken conditionsArray3 = diagnosticsValue3["conditions"];
                                                if (conditionsArray3 != null && conditionsArray3.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken conditionsValue3 in ((JArray)conditionsArray3))
                                                    {
                                                        DiagnosticCondition diagnosticConditionInstance3 = new DiagnosticCondition();
                                                        diagnosticsInstance3.Conditions.Add(diagnosticConditionInstance3);
                                                        
                                                        JToken sinceValue3 = conditionsValue3["since"];
                                                        if (sinceValue3 != null && sinceValue3.Type != JTokenType.Null)
                                                        {
                                                            DateTime sinceInstance3 = ((DateTime)sinceValue3);
                                                            diagnosticConditionInstance3.Since = sinceInstance3;
                                                        }
                                                        
                                                        JToken codeValue3 = conditionsValue3["code"];
                                                        if (codeValue3 != null && codeValue3.Type != JTokenType.Null)
                                                        {
                                                            string codeInstance3 = ((string)codeValue3);
                                                            diagnosticConditionInstance3.Code = codeInstance3;
                                                        }
                                                        
                                                        JToken messageValue3 = conditionsValue3["message"];
                                                        if (messageValue3 != null && messageValue3.Type != JTokenType.Null)
                                                        {
                                                            string messageInstance3 = ((string)messageValue3);
                                                            diagnosticConditionInstance3.Message = messageInstance3;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        
                    }
                    result.StatusCode = statusCode;
                    if (httpResponse.Headers.Contains("Date"))
                    {
                        result.Date = DateTime.Parse(httpResponse.Headers.GetValues("Date").FirstOrDefault(), CultureInfo.InvariantCulture, DateTimeStyles.AdjustToUniversal).ToLocalTime();
                    }
                    if (httpResponse.Headers.Contains("ETag"))
                    {
                        result.Job.Properties.Etag = httpResponse.Headers.GetValues("ETag").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-request-id"))
                    {
                        result.RequestId = httpResponse.Headers.GetValues("x-ms-request-id").FirstOrDefault();
                    }
                    
                    if (shouldTrace)
                    {
                        TracingAdapter.Exit(invocationId, result);
                    }
                    return result;
                }
                finally
                {
                    if (httpResponse != null)
                    {
                        httpResponse.Dispose();
                    }
                }
            }
            finally
            {
                if (httpRequest != null)
                {
                    httpRequest.Dispose();
                }
            }
        }
        
        /// <summary>
        /// List all the stream analytics jobs in the given resource group.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the stream analytics job.
        /// </param>
        /// <param name='parameters'>
        /// Required. The parameters required to list all the stream analytics
        /// job in the same resource group.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response of the list stream analytics job operation.
        /// </returns>
        public async Task<JobListResponse> ListJobsInResourceGroupAsync(string resourceGroupName, JobListParameters parameters, CancellationToken cancellationToken)
        {
            // Validate
            if (resourceGroupName == null)
            {
                throw new ArgumentNullException("resourceGroupName");
            }
            if (parameters == null)
            {
                throw new ArgumentNullException("parameters");
            }
            if (parameters.PropertiesToExpand == null)
            {
                throw new ArgumentNullException("parameters.PropertiesToExpand");
            }
            
            // Tracing
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("resourceGroupName", resourceGroupName);
                tracingParameters.Add("parameters", parameters);
                TracingAdapter.Enter(invocationId, this, "ListJobsInResourceGroupAsync", tracingParameters);
            }
            
            // Construct URL
            string url = "";
            url = url + "/subscriptions/";
            if (this.Client.Credentials.SubscriptionId != null)
            {
                url = url + Uri.EscapeDataString(this.Client.Credentials.SubscriptionId);
            }
            url = url + "/resourcegroups/";
            url = url + Uri.EscapeDataString(resourceGroupName);
            url = url + "/providers/Microsoft.StreamAnalytics/streamingjobs";
            List<string> queryParameters = new List<string>();
            queryParameters.Add("$expand=" + Uri.EscapeDataString(parameters.PropertiesToExpand));
            queryParameters.Add("api-version=2015-04-01");
            if (queryParameters.Count > 0)
            {
                url = url + "?" + string.Join("&", queryParameters);
            }
            string baseUrl = this.Client.BaseUri.AbsoluteUri;
            // Trim '/' character from the end of baseUrl and beginning of url.
            if (baseUrl[baseUrl.Length - 1] == '/')
            {
                baseUrl = baseUrl.Substring(0, baseUrl.Length - 1);
            }
            if (url[0] == '/')
            {
                url = url.Substring(1);
            }
            url = baseUrl + "/" + url;
            url = url.Replace(" ", "%20");
            
            // Create HTTP transport objects
            HttpRequestMessage httpRequest = null;
            try
            {
                httpRequest = new HttpRequestMessage();
                httpRequest.Method = HttpMethod.Get;
                httpRequest.RequestUri = new Uri(url);
                
                // Set Headers
                httpRequest.Headers.Add("x-ms-client-request-id", Guid.NewGuid().ToString());
                
                // Set Credentials
                cancellationToken.ThrowIfCancellationRequested();
                await this.Client.Credentials.ProcessHttpRequestAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                
                // Send Request
                HttpResponseMessage httpResponse = null;
                try
                {
                    if (shouldTrace)
                    {
                        TracingAdapter.SendRequest(invocationId, httpRequest);
                    }
                    cancellationToken.ThrowIfCancellationRequested();
                    httpResponse = await this.Client.HttpClient.SendAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                    if (shouldTrace)
                    {
                        TracingAdapter.ReceiveResponse(invocationId, httpResponse);
                    }
                    HttpStatusCode statusCode = httpResponse.StatusCode;
                    if (statusCode != HttpStatusCode.OK)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        CloudException ex = CloudException.Create(httpRequest, null, httpResponse, await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false));
                        if (shouldTrace)
                        {
                            TracingAdapter.Error(invocationId, ex);
                        }
                        throw ex;
                    }
                    
                    // Create Result
                    JobListResponse result = null;
                    // Deserialize Response
                    if (statusCode == HttpStatusCode.OK)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        string responseContent = await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false);
                        result = new JobListResponse();
                        JToken responseDoc = null;
                        if (string.IsNullOrEmpty(responseContent) == false)
                        {
                            responseDoc = JToken.Parse(responseContent);
                        }
                        
                        if (responseDoc != null && responseDoc.Type != JTokenType.Null)
                        {
                            JToken valueArray = responseDoc["value"];
                            if (valueArray != null && valueArray.Type != JTokenType.Null)
                            {
                                foreach (JToken valueValue in ((JArray)valueArray))
                                {
                                    Job jobInstance = new Job();
                                    result.Value.Add(jobInstance);
                                    
                                    JToken idValue = valueValue["id"];
                                    if (idValue != null && idValue.Type != JTokenType.Null)
                                    {
                                        string idInstance = ((string)idValue);
                                        jobInstance.Id = idInstance;
                                    }
                                    
                                    JToken nameValue = valueValue["name"];
                                    if (nameValue != null && nameValue.Type != JTokenType.Null)
                                    {
                                        string nameInstance = ((string)nameValue);
                                        jobInstance.Name = nameInstance;
                                    }
                                    
                                    JToken typeValue = valueValue["type"];
                                    if (typeValue != null && typeValue.Type != JTokenType.Null)
                                    {
                                        string typeInstance = ((string)typeValue);
                                        jobInstance.Type = typeInstance;
                                    }
                                    
                                    JToken locationValue = valueValue["location"];
                                    if (locationValue != null && locationValue.Type != JTokenType.Null)
                                    {
                                        string locationInstance = ((string)locationValue);
                                        jobInstance.Location = locationInstance;
                                    }
                                    
                                    JToken tagsSequenceElement = ((JToken)valueValue["tags"]);
                                    if (tagsSequenceElement != null && tagsSequenceElement.Type != JTokenType.Null)
                                    {
                                        foreach (JProperty property in tagsSequenceElement)
                                        {
                                            string tagsKey = ((string)property.Name);
                                            string tagsValue = ((string)property.Value);
                                            jobInstance.Tags.Add(tagsKey, tagsValue);
                                        }
                                    }
                                    
                                    JToken propertiesValue = valueValue["properties"];
                                    if (propertiesValue != null && propertiesValue.Type != JTokenType.Null)
                                    {
                                        JobProperties propertiesInstance = new JobProperties();
                                        jobInstance.Properties = propertiesInstance;
                                        
                                        JToken skuValue = propertiesValue["sku"];
                                        if (skuValue != null && skuValue.Type != JTokenType.Null)
                                        {
                                            Sku skuInstance = new Sku();
                                            propertiesInstance.Sku = skuInstance;
                                            
                                            JToken nameValue2 = skuValue["name"];
                                            if (nameValue2 != null && nameValue2.Type != JTokenType.Null)
                                            {
                                                string nameInstance2 = ((string)nameValue2);
                                                skuInstance.Name = nameInstance2;
                                            }
                                        }
                                        
                                        JToken eventsOutOfOrderPolicyValue = propertiesValue["eventsOutOfOrderPolicy"];
                                        if (eventsOutOfOrderPolicyValue != null && eventsOutOfOrderPolicyValue.Type != JTokenType.Null)
                                        {
                                            string eventsOutOfOrderPolicyInstance = ((string)eventsOutOfOrderPolicyValue);
                                            propertiesInstance.EventsOutOfOrderPolicy = eventsOutOfOrderPolicyInstance;
                                        }
                                        
                                        JToken eventsOutOfOrderMaxDelayInSecondsValue = propertiesValue["eventsOutOfOrderMaxDelayInSeconds"];
                                        if (eventsOutOfOrderMaxDelayInSecondsValue != null && eventsOutOfOrderMaxDelayInSecondsValue.Type != JTokenType.Null)
                                        {
                                            int eventsOutOfOrderMaxDelayInSecondsInstance = ((int)eventsOutOfOrderMaxDelayInSecondsValue);
                                            propertiesInstance.EventsOutOfOrderMaxDelayInSeconds = eventsOutOfOrderMaxDelayInSecondsInstance;
                                        }
                                        
                                        JToken eventsLateArrivalMaxDelayInSecondsValue = propertiesValue["eventsLateArrivalMaxDelayInSeconds"];
                                        if (eventsLateArrivalMaxDelayInSecondsValue != null && eventsLateArrivalMaxDelayInSecondsValue.Type != JTokenType.Null)
                                        {
                                            int eventsLateArrivalMaxDelayInSecondsInstance = ((int)eventsLateArrivalMaxDelayInSecondsValue);
                                            propertiesInstance.EventsLateArrivalMaxDelayInSeconds = eventsLateArrivalMaxDelayInSecondsInstance;
                                        }
                                        
                                        JToken dataLocaleValue = propertiesValue["dataLocale"];
                                        if (dataLocaleValue != null && dataLocaleValue.Type != JTokenType.Null)
                                        {
                                            string dataLocaleInstance = ((string)dataLocaleValue);
                                            propertiesInstance.DataLocale = dataLocaleInstance;
                                        }
                                        
                                        JToken outputStartModeValue = propertiesValue["outputStartMode"];
                                        if (outputStartModeValue != null && outputStartModeValue.Type != JTokenType.Null)
                                        {
                                            string outputStartModeInstance = ((string)outputStartModeValue);
                                            propertiesInstance.OutputStartMode = outputStartModeInstance;
                                        }
                                        
                                        JToken outputStartTimeValue = propertiesValue["outputStartTime"];
                                        if (outputStartTimeValue != null && outputStartTimeValue.Type != JTokenType.Null)
                                        {
                                            DateTime outputStartTimeInstance = ((DateTime)outputStartTimeValue);
                                            propertiesInstance.OutputStartTime = outputStartTimeInstance;
                                        }
                                        
                                        JToken lastOutputEventTimeValue = propertiesValue["lastOutputEventTime"];
                                        if (lastOutputEventTimeValue != null && lastOutputEventTimeValue.Type != JTokenType.Null)
                                        {
                                            DateTime lastOutputEventTimeInstance = ((DateTime)lastOutputEventTimeValue);
                                            propertiesInstance.LastOutputEventTime = lastOutputEventTimeInstance;
                                        }
                                        
                                        JToken jobIdValue = propertiesValue["jobId"];
                                        if (jobIdValue != null && jobIdValue.Type != JTokenType.Null)
                                        {
                                            string jobIdInstance = ((string)jobIdValue);
                                            propertiesInstance.JobId = jobIdInstance;
                                        }
                                        
                                        JToken etagValue = propertiesValue["etag"];
                                        if (etagValue != null && etagValue.Type != JTokenType.Null)
                                        {
                                            string etagInstance = ((string)etagValue);
                                            propertiesInstance.Etag = etagInstance;
                                        }
                                        
                                        JToken provisioningStateValue = propertiesValue["provisioningState"];
                                        if (provisioningStateValue != null && provisioningStateValue.Type != JTokenType.Null)
                                        {
                                            string provisioningStateInstance = ((string)provisioningStateValue);
                                            propertiesInstance.ProvisioningState = provisioningStateInstance;
                                        }
                                        
                                        JToken jobStateValue = propertiesValue["jobState"];
                                        if (jobStateValue != null && jobStateValue.Type != JTokenType.Null)
                                        {
                                            string jobStateInstance = ((string)jobStateValue);
                                            propertiesInstance.JobState = jobStateInstance;
                                        }
                                        
                                        JToken createdDateValue = propertiesValue["createdDate"];
                                        if (createdDateValue != null && createdDateValue.Type != JTokenType.Null)
                                        {
                                            DateTime createdDateInstance = ((DateTime)createdDateValue);
                                            propertiesInstance.CreatedDate = createdDateInstance;
                                        }
                                        
                                        JToken inputsArray = propertiesValue["inputs"];
                                        if (inputsArray != null && inputsArray.Type != JTokenType.Null)
                                        {
                                            foreach (JToken inputsValue in ((JArray)inputsArray))
                                            {
                                                Input inputInstance = new Input();
                                                propertiesInstance.Inputs.Add(inputInstance);
                                                
                                                JToken nameValue3 = inputsValue["name"];
                                                if (nameValue3 != null && nameValue3.Type != JTokenType.Null)
                                                {
                                                    string nameInstance3 = ((string)nameValue3);
                                                    inputInstance.Name = nameInstance3;
                                                }
                                                
                                                JToken propertiesValue2 = inputsValue["properties"];
                                                if (propertiesValue2 != null && propertiesValue2.Type != JTokenType.Null)
                                                {
                                                    string typeName = ((string)propertiesValue2["type"]);
                                                    if (typeName == "Reference")
                                                    {
                                                        ReferenceInputProperties referenceInputPropertiesInstance = new ReferenceInputProperties();
                                                        
                                                        JToken datasourceValue = propertiesValue2["datasource"];
                                                        if (datasourceValue != null && datasourceValue.Type != JTokenType.Null)
                                                        {
                                                            string typeName2 = ((string)datasourceValue["type"]);
                                                            if (typeName2 == "Microsoft.Storage/Blob")
                                                            {
                                                                BlobReferenceInputDataSource blobReferenceInputDataSourceInstance = new BlobReferenceInputDataSource();
                                                                
                                                                JToken propertiesValue3 = datasourceValue["properties"];
                                                                if (propertiesValue3 != null && propertiesValue3.Type != JTokenType.Null)
                                                                {
                                                                    BlobReferenceInputDataSourceProperties propertiesInstance2 = new BlobReferenceInputDataSourceProperties();
                                                                    blobReferenceInputDataSourceInstance.Properties = propertiesInstance2;
                                                                    
                                                                    JToken storageAccountsArray = propertiesValue3["storageAccounts"];
                                                                    if (storageAccountsArray != null && storageAccountsArray.Type != JTokenType.Null)
                                                                    {
                                                                        foreach (JToken storageAccountsValue in ((JArray)storageAccountsArray))
                                                                        {
                                                                            StorageAccount storageAccountInstance = new StorageAccount();
                                                                            propertiesInstance2.StorageAccounts.Add(storageAccountInstance);
                                                                            
                                                                            JToken accountNameValue = storageAccountsValue["accountName"];
                                                                            if (accountNameValue != null && accountNameValue.Type != JTokenType.Null)
                                                                            {
                                                                                string accountNameInstance = ((string)accountNameValue);
                                                                                storageAccountInstance.AccountName = accountNameInstance;
                                                                            }
                                                                            
                                                                            JToken accountKeyValue = storageAccountsValue["accountKey"];
                                                                            if (accountKeyValue != null && accountKeyValue.Type != JTokenType.Null)
                                                                            {
                                                                                string accountKeyInstance = ((string)accountKeyValue);
                                                                                storageAccountInstance.AccountKey = accountKeyInstance;
                                                                            }
                                                                        }
                                                                    }
                                                                    
                                                                    JToken containerValue = propertiesValue3["container"];
                                                                    if (containerValue != null && containerValue.Type != JTokenType.Null)
                                                                    {
                                                                        string containerInstance = ((string)containerValue);
                                                                        propertiesInstance2.Container = containerInstance;
                                                                    }
                                                                    
                                                                    JToken pathPatternValue = propertiesValue3["pathPattern"];
                                                                    if (pathPatternValue != null && pathPatternValue.Type != JTokenType.Null)
                                                                    {
                                                                        string pathPatternInstance = ((string)pathPatternValue);
                                                                        propertiesInstance2.PathPattern = pathPatternInstance;
                                                                    }
                                                                    
                                                                    JToken dateFormatValue = propertiesValue3["dateFormat"];
                                                                    if (dateFormatValue != null && dateFormatValue.Type != JTokenType.Null)
                                                                    {
                                                                        string dateFormatInstance = ((string)dateFormatValue);
                                                                        propertiesInstance2.DateFormat = dateFormatInstance;
                                                                    }
                                                                    
                                                                    JToken timeFormatValue = propertiesValue3["timeFormat"];
                                                                    if (timeFormatValue != null && timeFormatValue.Type != JTokenType.Null)
                                                                    {
                                                                        string timeFormatInstance = ((string)timeFormatValue);
                                                                        propertiesInstance2.TimeFormat = timeFormatInstance;
                                                                    }
                                                                }
                                                                
                                                                JToken typeValue2 = datasourceValue["type"];
                                                                if (typeValue2 != null && typeValue2.Type != JTokenType.Null)
                                                                {
                                                                    string typeInstance2 = ((string)typeValue2);
                                                                    blobReferenceInputDataSourceInstance.Type = typeInstance2;
                                                                }
                                                                referenceInputPropertiesInstance.DataSource = blobReferenceInputDataSourceInstance;
                                                            }
                                                        }
                                                        
                                                        JToken etagValue2 = propertiesValue2["etag"];
                                                        if (etagValue2 != null && etagValue2.Type != JTokenType.Null)
                                                        {
                                                            string etagInstance2 = ((string)etagValue2);
                                                            referenceInputPropertiesInstance.Etag = etagInstance2;
                                                        }
                                                        
                                                        JToken typeValue3 = propertiesValue2["type"];
                                                        if (typeValue3 != null && typeValue3.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance3 = ((string)typeValue3);
                                                            referenceInputPropertiesInstance.Type = typeInstance3;
                                                        }
                                                        
                                                        JToken serializationValue = propertiesValue2["serialization"];
                                                        if (serializationValue != null && serializationValue.Type != JTokenType.Null)
                                                        {
                                                            string typeName3 = ((string)serializationValue["type"]);
                                                            if (typeName3 == "Csv")
                                                            {
                                                                CsvSerialization csvSerializationInstance = new CsvSerialization();
                                                                
                                                                JToken propertiesValue4 = serializationValue["properties"];
                                                                if (propertiesValue4 != null && propertiesValue4.Type != JTokenType.Null)
                                                                {
                                                                    CsvSerializationProperties propertiesInstance3 = new CsvSerializationProperties();
                                                                    csvSerializationInstance.Properties = propertiesInstance3;
                                                                    
                                                                    JToken fieldDelimiterValue = propertiesValue4["fieldDelimiter"];
                                                                    if (fieldDelimiterValue != null && fieldDelimiterValue.Type != JTokenType.Null)
                                                                    {
                                                                        string fieldDelimiterInstance = ((string)fieldDelimiterValue);
                                                                        propertiesInstance3.FieldDelimiter = fieldDelimiterInstance;
                                                                    }
                                                                    
                                                                    JToken encodingValue = propertiesValue4["encoding"];
                                                                    if (encodingValue != null && encodingValue.Type != JTokenType.Null)
                                                                    {
                                                                        string encodingInstance = ((string)encodingValue);
                                                                        propertiesInstance3.Encoding = encodingInstance;
                                                                    }
                                                                }
                                                                
                                                                JToken typeValue4 = serializationValue["type"];
                                                                if (typeValue4 != null && typeValue4.Type != JTokenType.Null)
                                                                {
                                                                    string typeInstance4 = ((string)typeValue4);
                                                                    csvSerializationInstance.Type = typeInstance4;
                                                                }
                                                                referenceInputPropertiesInstance.Serialization = csvSerializationInstance;
                                                            }
                                                            if (typeName3 == "Json")
                                                            {
                                                                JsonSerialization jsonSerializationInstance = new JsonSerialization();
                                                                
                                                                JToken propertiesValue5 = serializationValue["properties"];
                                                                if (propertiesValue5 != null && propertiesValue5.Type != JTokenType.Null)
                                                                {
                                                                    JsonSerializationProperties propertiesInstance4 = new JsonSerializationProperties();
                                                                    jsonSerializationInstance.Properties = propertiesInstance4;
                                                                    
                                                                    JToken encodingValue2 = propertiesValue5["encoding"];
                                                                    if (encodingValue2 != null && encodingValue2.Type != JTokenType.Null)
                                                                    {
                                                                        string encodingInstance2 = ((string)encodingValue2);
                                                                        propertiesInstance4.Encoding = encodingInstance2;
                                                                    }
                                                                    
                                                                    JToken formatValue = propertiesValue5["format"];
                                                                    if (formatValue != null && formatValue.Type != JTokenType.Null)
                                                                    {
                                                                        string formatInstance = ((string)formatValue);
                                                                        propertiesInstance4.Format = formatInstance;
                                                                    }
                                                                }
                                                                
                                                                JToken typeValue5 = serializationValue["type"];
                                                                if (typeValue5 != null && typeValue5.Type != JTokenType.Null)
                                                                {
                                                                    string typeInstance5 = ((string)typeValue5);
                                                                    jsonSerializationInstance.Type = typeInstance5;
                                                                }
                                                                referenceInputPropertiesInstance.Serialization = jsonSerializationInstance;
                                                            }
                                                            if (typeName3 == "Avro")
                                                            {
                                                                AvroSerialization avroSerializationInstance = new AvroSerialization();
                                                                
                                                                JToken propertiesValue6 = serializationValue["properties"];
                                                                if (propertiesValue6 != null && propertiesValue6.Type != JTokenType.Null)
                                                                {
                                                                    AvroSerializationProperties propertiesInstance5 = new AvroSerializationProperties();
                                                                    avroSerializationInstance.Properties = propertiesInstance5;
                                                                }
                                                                
                                                                JToken typeValue6 = serializationValue["type"];
                                                                if (typeValue6 != null && typeValue6.Type != JTokenType.Null)
                                                                {
                                                                    string typeInstance6 = ((string)typeValue6);
                                                                    avroSerializationInstance.Type = typeInstance6;
                                                                }
                                                                referenceInputPropertiesInstance.Serialization = avroSerializationInstance;
                                                            }
                                                        }
                                                        
                                                        JToken diagnosticsValue = propertiesValue2["diagnostics"];
                                                        if (diagnosticsValue != null && diagnosticsValue.Type != JTokenType.Null)
                                                        {
                                                            Diagnostics diagnosticsInstance = new Diagnostics();
                                                            referenceInputPropertiesInstance.Diagnostics = diagnosticsInstance;
                                                            
                                                            JToken conditionsArray = diagnosticsValue["conditions"];
                                                            if (conditionsArray != null && conditionsArray.Type != JTokenType.Null)
                                                            {
                                                                foreach (JToken conditionsValue in ((JArray)conditionsArray))
                                                                {
                                                                    DiagnosticCondition diagnosticConditionInstance = new DiagnosticCondition();
                                                                    diagnosticsInstance.Conditions.Add(diagnosticConditionInstance);
                                                                    
                                                                    JToken sinceValue = conditionsValue["since"];
                                                                    if (sinceValue != null && sinceValue.Type != JTokenType.Null)
                                                                    {
                                                                        DateTime sinceInstance = ((DateTime)sinceValue);
                                                                        diagnosticConditionInstance.Since = sinceInstance;
                                                                    }
                                                                    
                                                                    JToken codeValue = conditionsValue["code"];
                                                                    if (codeValue != null && codeValue.Type != JTokenType.Null)
                                                                    {
                                                                        string codeInstance = ((string)codeValue);
                                                                        diagnosticConditionInstance.Code = codeInstance;
                                                                    }
                                                                    
                                                                    JToken messageValue = conditionsValue["message"];
                                                                    if (messageValue != null && messageValue.Type != JTokenType.Null)
                                                                    {
                                                                        string messageInstance = ((string)messageValue);
                                                                        diagnosticConditionInstance.Message = messageInstance;
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        inputInstance.Properties = referenceInputPropertiesInstance;
                                                    }
                                                    if (typeName == "Stream")
                                                    {
                                                        StreamInputProperties streamInputPropertiesInstance = new StreamInputProperties();
                                                        
                                                        JToken datasourceValue2 = propertiesValue2["datasource"];
                                                        if (datasourceValue2 != null && datasourceValue2.Type != JTokenType.Null)
                                                        {
                                                            string typeName4 = ((string)datasourceValue2["type"]);
                                                            if (typeName4 == "Microsoft.Storage/Blob")
                                                            {
                                                                BlobStreamInputDataSource blobStreamInputDataSourceInstance = new BlobStreamInputDataSource();
                                                                
                                                                JToken propertiesValue7 = datasourceValue2["properties"];
                                                                if (propertiesValue7 != null && propertiesValue7.Type != JTokenType.Null)
                                                                {
                                                                    BlobStreamInputDataSourceProperties propertiesInstance6 = new BlobStreamInputDataSourceProperties();
                                                                    blobStreamInputDataSourceInstance.Properties = propertiesInstance6;
                                                                    
                                                                    JToken storageAccountsArray2 = propertiesValue7["storageAccounts"];
                                                                    if (storageAccountsArray2 != null && storageAccountsArray2.Type != JTokenType.Null)
                                                                    {
                                                                        foreach (JToken storageAccountsValue2 in ((JArray)storageAccountsArray2))
                                                                        {
                                                                            StorageAccount storageAccountInstance2 = new StorageAccount();
                                                                            propertiesInstance6.StorageAccounts.Add(storageAccountInstance2);
                                                                            
                                                                            JToken accountNameValue2 = storageAccountsValue2["accountName"];
                                                                            if (accountNameValue2 != null && accountNameValue2.Type != JTokenType.Null)
                                                                            {
                                                                                string accountNameInstance2 = ((string)accountNameValue2);
                                                                                storageAccountInstance2.AccountName = accountNameInstance2;
                                                                            }
                                                                            
                                                                            JToken accountKeyValue2 = storageAccountsValue2["accountKey"];
                                                                            if (accountKeyValue2 != null && accountKeyValue2.Type != JTokenType.Null)
                                                                            {
                                                                                string accountKeyInstance2 = ((string)accountKeyValue2);
                                                                                storageAccountInstance2.AccountKey = accountKeyInstance2;
                                                                            }
                                                                        }
                                                                    }
                                                                    
                                                                    JToken containerValue2 = propertiesValue7["container"];
                                                                    if (containerValue2 != null && containerValue2.Type != JTokenType.Null)
                                                                    {
                                                                        string containerInstance2 = ((string)containerValue2);
                                                                        propertiesInstance6.Container = containerInstance2;
                                                                    }
                                                                    
                                                                    JToken pathPatternValue2 = propertiesValue7["pathPattern"];
                                                                    if (pathPatternValue2 != null && pathPatternValue2.Type != JTokenType.Null)
                                                                    {
                                                                        string pathPatternInstance2 = ((string)pathPatternValue2);
                                                                        propertiesInstance6.PathPattern = pathPatternInstance2;
                                                                    }
                                                                    
                                                                    JToken dateFormatValue2 = propertiesValue7["dateFormat"];
                                                                    if (dateFormatValue2 != null && dateFormatValue2.Type != JTokenType.Null)
                                                                    {
                                                                        string dateFormatInstance2 = ((string)dateFormatValue2);
                                                                        propertiesInstance6.DateFormat = dateFormatInstance2;
                                                                    }
                                                                    
                                                                    JToken timeFormatValue2 = propertiesValue7["timeFormat"];
                                                                    if (timeFormatValue2 != null && timeFormatValue2.Type != JTokenType.Null)
                                                                    {
                                                                        string timeFormatInstance2 = ((string)timeFormatValue2);
                                                                        propertiesInstance6.TimeFormat = timeFormatInstance2;
                                                                    }
                                                                    
                                                                    JToken sourcePartitionCountValue = propertiesValue7["sourcePartitionCount"];
                                                                    if (sourcePartitionCountValue != null && sourcePartitionCountValue.Type != JTokenType.Null)
                                                                    {
                                                                        int sourcePartitionCountInstance = ((int)sourcePartitionCountValue);
                                                                        propertiesInstance6.SourcePartitionCount = sourcePartitionCountInstance;
                                                                    }
                                                                }
                                                                
                                                                JToken typeValue7 = datasourceValue2["type"];
                                                                if (typeValue7 != null && typeValue7.Type != JTokenType.Null)
                                                                {
                                                                    string typeInstance7 = ((string)typeValue7);
                                                                    blobStreamInputDataSourceInstance.Type = typeInstance7;
                                                                }
                                                                streamInputPropertiesInstance.DataSource = blobStreamInputDataSourceInstance;
                                                            }
                                                            if (typeName4 == "Microsoft.ServiceBus/EventHub")
                                                            {
                                                                EventHubStreamInputDataSource eventHubStreamInputDataSourceInstance = new EventHubStreamInputDataSource();
                                                                
                                                                JToken propertiesValue8 = datasourceValue2["properties"];
                                                                if (propertiesValue8 != null && propertiesValue8.Type != JTokenType.Null)
                                                                {
                                                                    EventHubStreamInputDataSourceProperties propertiesInstance7 = new EventHubStreamInputDataSourceProperties();
                                                                    eventHubStreamInputDataSourceInstance.Properties = propertiesInstance7;
                                                                    
                                                                    JToken serviceBusNamespaceValue = propertiesValue8["serviceBusNamespace"];
                                                                    if (serviceBusNamespaceValue != null && serviceBusNamespaceValue.Type != JTokenType.Null)
                                                                    {
                                                                        string serviceBusNamespaceInstance = ((string)serviceBusNamespaceValue);
                                                                        propertiesInstance7.ServiceBusNamespace = serviceBusNamespaceInstance;
                                                                    }
                                                                    
                                                                    JToken sharedAccessPolicyNameValue = propertiesValue8["sharedAccessPolicyName"];
                                                                    if (sharedAccessPolicyNameValue != null && sharedAccessPolicyNameValue.Type != JTokenType.Null)
                                                                    {
                                                                        string sharedAccessPolicyNameInstance = ((string)sharedAccessPolicyNameValue);
                                                                        propertiesInstance7.SharedAccessPolicyName = sharedAccessPolicyNameInstance;
                                                                    }
                                                                    
                                                                    JToken sharedAccessPolicyKeyValue = propertiesValue8["sharedAccessPolicyKey"];
                                                                    if (sharedAccessPolicyKeyValue != null && sharedAccessPolicyKeyValue.Type != JTokenType.Null)
                                                                    {
                                                                        string sharedAccessPolicyKeyInstance = ((string)sharedAccessPolicyKeyValue);
                                                                        propertiesInstance7.SharedAccessPolicyKey = sharedAccessPolicyKeyInstance;
                                                                    }
                                                                    
                                                                    JToken eventHubNameValue = propertiesValue8["eventHubName"];
                                                                    if (eventHubNameValue != null && eventHubNameValue.Type != JTokenType.Null)
                                                                    {
                                                                        string eventHubNameInstance = ((string)eventHubNameValue);
                                                                        propertiesInstance7.EventHubName = eventHubNameInstance;
                                                                    }
                                                                    
                                                                    JToken consumerGroupNameValue = propertiesValue8["consumerGroupName"];
                                                                    if (consumerGroupNameValue != null && consumerGroupNameValue.Type != JTokenType.Null)
                                                                    {
                                                                        string consumerGroupNameInstance = ((string)consumerGroupNameValue);
                                                                        propertiesInstance7.ConsumerGroupName = consumerGroupNameInstance;
                                                                    }
                                                                }
                                                                
                                                                JToken typeValue8 = datasourceValue2["type"];
                                                                if (typeValue8 != null && typeValue8.Type != JTokenType.Null)
                                                                {
                                                                    string typeInstance8 = ((string)typeValue8);
                                                                    eventHubStreamInputDataSourceInstance.Type = typeInstance8;
                                                                }
                                                                streamInputPropertiesInstance.DataSource = eventHubStreamInputDataSourceInstance;
                                                            }
                                                        }
                                                        
                                                        JToken etagValue3 = propertiesValue2["etag"];
                                                        if (etagValue3 != null && etagValue3.Type != JTokenType.Null)
                                                        {
                                                            string etagInstance3 = ((string)etagValue3);
                                                            streamInputPropertiesInstance.Etag = etagInstance3;
                                                        }
                                                        
                                                        JToken typeValue9 = propertiesValue2["type"];
                                                        if (typeValue9 != null && typeValue9.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance9 = ((string)typeValue9);
                                                            streamInputPropertiesInstance.Type = typeInstance9;
                                                        }
                                                        
                                                        JToken serializationValue2 = propertiesValue2["serialization"];
                                                        if (serializationValue2 != null && serializationValue2.Type != JTokenType.Null)
                                                        {
                                                            string typeName5 = ((string)serializationValue2["type"]);
                                                            if (typeName5 == "Csv")
                                                            {
                                                                CsvSerialization csvSerializationInstance2 = new CsvSerialization();
                                                                
                                                                JToken propertiesValue9 = serializationValue2["properties"];
                                                                if (propertiesValue9 != null && propertiesValue9.Type != JTokenType.Null)
                                                                {
                                                                    CsvSerializationProperties propertiesInstance8 = new CsvSerializationProperties();
                                                                    csvSerializationInstance2.Properties = propertiesInstance8;
                                                                    
                                                                    JToken fieldDelimiterValue2 = propertiesValue9["fieldDelimiter"];
                                                                    if (fieldDelimiterValue2 != null && fieldDelimiterValue2.Type != JTokenType.Null)
                                                                    {
                                                                        string fieldDelimiterInstance2 = ((string)fieldDelimiterValue2);
                                                                        propertiesInstance8.FieldDelimiter = fieldDelimiterInstance2;
                                                                    }
                                                                    
                                                                    JToken encodingValue3 = propertiesValue9["encoding"];
                                                                    if (encodingValue3 != null && encodingValue3.Type != JTokenType.Null)
                                                                    {
                                                                        string encodingInstance3 = ((string)encodingValue3);
                                                                        propertiesInstance8.Encoding = encodingInstance3;
                                                                    }
                                                                }
                                                                
                                                                JToken typeValue10 = serializationValue2["type"];
                                                                if (typeValue10 != null && typeValue10.Type != JTokenType.Null)
                                                                {
                                                                    string typeInstance10 = ((string)typeValue10);
                                                                    csvSerializationInstance2.Type = typeInstance10;
                                                                }
                                                                streamInputPropertiesInstance.Serialization = csvSerializationInstance2;
                                                            }
                                                            if (typeName5 == "Json")
                                                            {
                                                                JsonSerialization jsonSerializationInstance2 = new JsonSerialization();
                                                                
                                                                JToken propertiesValue10 = serializationValue2["properties"];
                                                                if (propertiesValue10 != null && propertiesValue10.Type != JTokenType.Null)
                                                                {
                                                                    JsonSerializationProperties propertiesInstance9 = new JsonSerializationProperties();
                                                                    jsonSerializationInstance2.Properties = propertiesInstance9;
                                                                    
                                                                    JToken encodingValue4 = propertiesValue10["encoding"];
                                                                    if (encodingValue4 != null && encodingValue4.Type != JTokenType.Null)
                                                                    {
                                                                        string encodingInstance4 = ((string)encodingValue4);
                                                                        propertiesInstance9.Encoding = encodingInstance4;
                                                                    }
                                                                    
                                                                    JToken formatValue2 = propertiesValue10["format"];
                                                                    if (formatValue2 != null && formatValue2.Type != JTokenType.Null)
                                                                    {
                                                                        string formatInstance2 = ((string)formatValue2);
                                                                        propertiesInstance9.Format = formatInstance2;
                                                                    }
                                                                }
                                                                
                                                                JToken typeValue11 = serializationValue2["type"];
                                                                if (typeValue11 != null && typeValue11.Type != JTokenType.Null)
                                                                {
                                                                    string typeInstance11 = ((string)typeValue11);
                                                                    jsonSerializationInstance2.Type = typeInstance11;
                                                                }
                                                                streamInputPropertiesInstance.Serialization = jsonSerializationInstance2;
                                                            }
                                                            if (typeName5 == "Avro")
                                                            {
                                                                AvroSerialization avroSerializationInstance2 = new AvroSerialization();
                                                                
                                                                JToken propertiesValue11 = serializationValue2["properties"];
                                                                if (propertiesValue11 != null && propertiesValue11.Type != JTokenType.Null)
                                                                {
                                                                    AvroSerializationProperties propertiesInstance10 = new AvroSerializationProperties();
                                                                    avroSerializationInstance2.Properties = propertiesInstance10;
                                                                }
                                                                
                                                                JToken typeValue12 = serializationValue2["type"];
                                                                if (typeValue12 != null && typeValue12.Type != JTokenType.Null)
                                                                {
                                                                    string typeInstance12 = ((string)typeValue12);
                                                                    avroSerializationInstance2.Type = typeInstance12;
                                                                }
                                                                streamInputPropertiesInstance.Serialization = avroSerializationInstance2;
                                                            }
                                                        }
                                                        
                                                        JToken diagnosticsValue2 = propertiesValue2["diagnostics"];
                                                        if (diagnosticsValue2 != null && diagnosticsValue2.Type != JTokenType.Null)
                                                        {
                                                            Diagnostics diagnosticsInstance2 = new Diagnostics();
                                                            streamInputPropertiesInstance.Diagnostics = diagnosticsInstance2;
                                                            
                                                            JToken conditionsArray2 = diagnosticsValue2["conditions"];
                                                            if (conditionsArray2 != null && conditionsArray2.Type != JTokenType.Null)
                                                            {
                                                                foreach (JToken conditionsValue2 in ((JArray)conditionsArray2))
                                                                {
                                                                    DiagnosticCondition diagnosticConditionInstance2 = new DiagnosticCondition();
                                                                    diagnosticsInstance2.Conditions.Add(diagnosticConditionInstance2);
                                                                    
                                                                    JToken sinceValue2 = conditionsValue2["since"];
                                                                    if (sinceValue2 != null && sinceValue2.Type != JTokenType.Null)
                                                                    {
                                                                        DateTime sinceInstance2 = ((DateTime)sinceValue2);
                                                                        diagnosticConditionInstance2.Since = sinceInstance2;
                                                                    }
                                                                    
                                                                    JToken codeValue2 = conditionsValue2["code"];
                                                                    if (codeValue2 != null && codeValue2.Type != JTokenType.Null)
                                                                    {
                                                                        string codeInstance2 = ((string)codeValue2);
                                                                        diagnosticConditionInstance2.Code = codeInstance2;
                                                                    }
                                                                    
                                                                    JToken messageValue2 = conditionsValue2["message"];
                                                                    if (messageValue2 != null && messageValue2.Type != JTokenType.Null)
                                                                    {
                                                                        string messageInstance2 = ((string)messageValue2);
                                                                        diagnosticConditionInstance2.Message = messageInstance2;
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        inputInstance.Properties = streamInputPropertiesInstance;
                                                    }
                                                }
                                            }
                                        }
                                        
                                        JToken transformationValue = propertiesValue["transformation"];
                                        if (transformationValue != null && transformationValue.Type != JTokenType.Null)
                                        {
                                            Transformation transformationInstance = new Transformation();
                                            propertiesInstance.Transformation = transformationInstance;
                                            
                                            JToken nameValue4 = transformationValue["name"];
                                            if (nameValue4 != null && nameValue4.Type != JTokenType.Null)
                                            {
                                                string nameInstance4 = ((string)nameValue4);
                                                transformationInstance.Name = nameInstance4;
                                            }
                                            
                                            JToken propertiesValue12 = transformationValue["properties"];
                                            if (propertiesValue12 != null && propertiesValue12.Type != JTokenType.Null)
                                            {
                                                TransformationProperties propertiesInstance11 = new TransformationProperties();
                                                transformationInstance.Properties = propertiesInstance11;
                                                
                                                JToken etagValue4 = propertiesValue12["etag"];
                                                if (etagValue4 != null && etagValue4.Type != JTokenType.Null)
                                                {
                                                    string etagInstance4 = ((string)etagValue4);
                                                    propertiesInstance11.Etag = etagInstance4;
                                                }
                                                
                                                JToken streamingUnitsValue = propertiesValue12["streamingUnits"];
                                                if (streamingUnitsValue != null && streamingUnitsValue.Type != JTokenType.Null)
                                                {
                                                    int streamingUnitsInstance = ((int)streamingUnitsValue);
                                                    propertiesInstance11.StreamingUnits = streamingUnitsInstance;
                                                }
                                                
                                                JToken queryValue = propertiesValue12["query"];
                                                if (queryValue != null && queryValue.Type != JTokenType.Null)
                                                {
                                                    string queryInstance = ((string)queryValue);
                                                    propertiesInstance11.Query = queryInstance;
                                                }
                                            }
                                        }
                                        
                                        JToken outputsArray = propertiesValue["outputs"];
                                        if (outputsArray != null && outputsArray.Type != JTokenType.Null)
                                        {
                                            foreach (JToken outputsValue in ((JArray)outputsArray))
                                            {
                                                Output outputInstance = new Output();
                                                propertiesInstance.Outputs.Add(outputInstance);
                                                
                                                JToken nameValue5 = outputsValue["name"];
                                                if (nameValue5 != null && nameValue5.Type != JTokenType.Null)
                                                {
                                                    string nameInstance5 = ((string)nameValue5);
                                                    outputInstance.Name = nameInstance5;
                                                }
                                                
                                                JToken propertiesValue13 = outputsValue["properties"];
                                                if (propertiesValue13 != null && propertiesValue13.Type != JTokenType.Null)
                                                {
                                                    OutputProperties propertiesInstance12 = new OutputProperties();
                                                    outputInstance.Properties = propertiesInstance12;
                                                    
                                                    JToken etagValue5 = propertiesValue13["etag"];
                                                    if (etagValue5 != null && etagValue5.Type != JTokenType.Null)
                                                    {
                                                        string etagInstance5 = ((string)etagValue5);
                                                        propertiesInstance12.Etag = etagInstance5;
                                                    }
                                                    
                                                    JToken datasourceValue3 = propertiesValue13["datasource"];
                                                    if (datasourceValue3 != null && datasourceValue3.Type != JTokenType.Null)
                                                    {
                                                        string typeName6 = ((string)datasourceValue3["type"]);
                                                        if (typeName6 == "Microsoft.Storage/Blob")
                                                        {
                                                            BlobOutputDataSource blobOutputDataSourceInstance = new BlobOutputDataSource();
                                                            
                                                            JToken propertiesValue14 = datasourceValue3["properties"];
                                                            if (propertiesValue14 != null && propertiesValue14.Type != JTokenType.Null)
                                                            {
                                                                BlobOutputDataSourceProperties propertiesInstance13 = new BlobOutputDataSourceProperties();
                                                                blobOutputDataSourceInstance.Properties = propertiesInstance13;
                                                                
                                                                JToken storageAccountsArray3 = propertiesValue14["storageAccounts"];
                                                                if (storageAccountsArray3 != null && storageAccountsArray3.Type != JTokenType.Null)
                                                                {
                                                                    foreach (JToken storageAccountsValue3 in ((JArray)storageAccountsArray3))
                                                                    {
                                                                        StorageAccount storageAccountInstance3 = new StorageAccount();
                                                                        propertiesInstance13.StorageAccounts.Add(storageAccountInstance3);
                                                                        
                                                                        JToken accountNameValue3 = storageAccountsValue3["accountName"];
                                                                        if (accountNameValue3 != null && accountNameValue3.Type != JTokenType.Null)
                                                                        {
                                                                            string accountNameInstance3 = ((string)accountNameValue3);
                                                                            storageAccountInstance3.AccountName = accountNameInstance3;
                                                                        }
                                                                        
                                                                        JToken accountKeyValue3 = storageAccountsValue3["accountKey"];
                                                                        if (accountKeyValue3 != null && accountKeyValue3.Type != JTokenType.Null)
                                                                        {
                                                                            string accountKeyInstance3 = ((string)accountKeyValue3);
                                                                            storageAccountInstance3.AccountKey = accountKeyInstance3;
                                                                        }
                                                                    }
                                                                }
                                                                
                                                                JToken containerValue3 = propertiesValue14["container"];
                                                                if (containerValue3 != null && containerValue3.Type != JTokenType.Null)
                                                                {
                                                                    string containerInstance3 = ((string)containerValue3);
                                                                    propertiesInstance13.Container = containerInstance3;
                                                                }
                                                                
                                                                JToken blobPathPrefixValue = propertiesValue14["blobPathPrefix"];
                                                                if (blobPathPrefixValue != null && blobPathPrefixValue.Type != JTokenType.Null)
                                                                {
                                                                    string blobPathPrefixInstance = ((string)blobPathPrefixValue);
                                                                    propertiesInstance13.BlobPathPrefix = blobPathPrefixInstance;
                                                                }
                                                            }
                                                            
                                                            JToken typeValue13 = datasourceValue3["type"];
                                                            if (typeValue13 != null && typeValue13.Type != JTokenType.Null)
                                                            {
                                                                string typeInstance13 = ((string)typeValue13);
                                                                blobOutputDataSourceInstance.Type = typeInstance13;
                                                            }
                                                            propertiesInstance12.DataSource = blobOutputDataSourceInstance;
                                                        }
                                                        if (typeName6 == "Microsoft.Storage/Table")
                                                        {
                                                            AzureTableOutputDataSource azureTableOutputDataSourceInstance = new AzureTableOutputDataSource();
                                                            
                                                            JToken propertiesValue15 = datasourceValue3["properties"];
                                                            if (propertiesValue15 != null && propertiesValue15.Type != JTokenType.Null)
                                                            {
                                                                AzureTableOutputDataSourceProperties propertiesInstance14 = new AzureTableOutputDataSourceProperties();
                                                                azureTableOutputDataSourceInstance.Properties = propertiesInstance14;
                                                                
                                                                JToken accountNameValue4 = propertiesValue15["accountName"];
                                                                if (accountNameValue4 != null && accountNameValue4.Type != JTokenType.Null)
                                                                {
                                                                    string accountNameInstance4 = ((string)accountNameValue4);
                                                                    propertiesInstance14.AccountName = accountNameInstance4;
                                                                }
                                                                
                                                                JToken accountKeyValue4 = propertiesValue15["accountKey"];
                                                                if (accountKeyValue4 != null && accountKeyValue4.Type != JTokenType.Null)
                                                                {
                                                                    string accountKeyInstance4 = ((string)accountKeyValue4);
                                                                    propertiesInstance14.AccountKey = accountKeyInstance4;
                                                                }
                                                                
                                                                JToken tableValue = propertiesValue15["table"];
                                                                if (tableValue != null && tableValue.Type != JTokenType.Null)
                                                                {
                                                                    string tableInstance = ((string)tableValue);
                                                                    propertiesInstance14.Table = tableInstance;
                                                                }
                                                                
                                                                JToken partitionKeyValue = propertiesValue15["partitionKey"];
                                                                if (partitionKeyValue != null && partitionKeyValue.Type != JTokenType.Null)
                                                                {
                                                                    string partitionKeyInstance = ((string)partitionKeyValue);
                                                                    propertiesInstance14.PartitionKey = partitionKeyInstance;
                                                                }
                                                                
                                                                JToken rowKeyValue = propertiesValue15["rowKey"];
                                                                if (rowKeyValue != null && rowKeyValue.Type != JTokenType.Null)
                                                                {
                                                                    string rowKeyInstance = ((string)rowKeyValue);
                                                                    propertiesInstance14.RowKey = rowKeyInstance;
                                                                }
                                                                
                                                                JToken columnsToRemoveArray = propertiesValue15["columnsToRemove"];
                                                                if (columnsToRemoveArray != null && columnsToRemoveArray.Type != JTokenType.Null)
                                                                {
                                                                    foreach (JToken columnsToRemoveValue in ((JArray)columnsToRemoveArray))
                                                                    {
                                                                        propertiesInstance14.ColumnsToRemove.Add(((string)columnsToRemoveValue));
                                                                    }
                                                                }
                                                                
                                                                JToken batchSizeValue = propertiesValue15["batchSize"];
                                                                if (batchSizeValue != null && batchSizeValue.Type != JTokenType.Null)
                                                                {
                                                                    int batchSizeInstance = ((int)batchSizeValue);
                                                                    propertiesInstance14.BatchSize = batchSizeInstance;
                                                                }
                                                            }
                                                            
                                                            JToken typeValue14 = datasourceValue3["type"];
                                                            if (typeValue14 != null && typeValue14.Type != JTokenType.Null)
                                                            {
                                                                string typeInstance14 = ((string)typeValue14);
                                                                azureTableOutputDataSourceInstance.Type = typeInstance14;
                                                            }
                                                            propertiesInstance12.DataSource = azureTableOutputDataSourceInstance;
                                                        }
                                                        if (typeName6 == "Microsoft.ServiceBus/EventHub")
                                                        {
                                                            EventHubOutputDataSource eventHubOutputDataSourceInstance = new EventHubOutputDataSource();
                                                            
                                                            JToken propertiesValue16 = datasourceValue3["properties"];
                                                            if (propertiesValue16 != null && propertiesValue16.Type != JTokenType.Null)
                                                            {
                                                                EventHubOutputDataSourceProperties propertiesInstance15 = new EventHubOutputDataSourceProperties();
                                                                eventHubOutputDataSourceInstance.Properties = propertiesInstance15;
                                                                
                                                                JToken serviceBusNamespaceValue2 = propertiesValue16["serviceBusNamespace"];
                                                                if (serviceBusNamespaceValue2 != null && serviceBusNamespaceValue2.Type != JTokenType.Null)
                                                                {
                                                                    string serviceBusNamespaceInstance2 = ((string)serviceBusNamespaceValue2);
                                                                    propertiesInstance15.ServiceBusNamespace = serviceBusNamespaceInstance2;
                                                                }
                                                                
                                                                JToken sharedAccessPolicyNameValue2 = propertiesValue16["sharedAccessPolicyName"];
                                                                if (sharedAccessPolicyNameValue2 != null && sharedAccessPolicyNameValue2.Type != JTokenType.Null)
                                                                {
                                                                    string sharedAccessPolicyNameInstance2 = ((string)sharedAccessPolicyNameValue2);
                                                                    propertiesInstance15.SharedAccessPolicyName = sharedAccessPolicyNameInstance2;
                                                                }
                                                                
                                                                JToken sharedAccessPolicyKeyValue2 = propertiesValue16["sharedAccessPolicyKey"];
                                                                if (sharedAccessPolicyKeyValue2 != null && sharedAccessPolicyKeyValue2.Type != JTokenType.Null)
                                                                {
                                                                    string sharedAccessPolicyKeyInstance2 = ((string)sharedAccessPolicyKeyValue2);
                                                                    propertiesInstance15.SharedAccessPolicyKey = sharedAccessPolicyKeyInstance2;
                                                                }
                                                                
                                                                JToken eventHubNameValue2 = propertiesValue16["eventHubName"];
                                                                if (eventHubNameValue2 != null && eventHubNameValue2.Type != JTokenType.Null)
                                                                {
                                                                    string eventHubNameInstance2 = ((string)eventHubNameValue2);
                                                                    propertiesInstance15.EventHubName = eventHubNameInstance2;
                                                                }
                                                                
                                                                JToken partitionKeyValue2 = propertiesValue16["partitionKey"];
                                                                if (partitionKeyValue2 != null && partitionKeyValue2.Type != JTokenType.Null)
                                                                {
                                                                    string partitionKeyInstance2 = ((string)partitionKeyValue2);
                                                                    propertiesInstance15.PartitionKey = partitionKeyInstance2;
                                                                }
                                                            }
                                                            
                                                            JToken typeValue15 = datasourceValue3["type"];
                                                            if (typeValue15 != null && typeValue15.Type != JTokenType.Null)
                                                            {
                                                                string typeInstance15 = ((string)typeValue15);
                                                                eventHubOutputDataSourceInstance.Type = typeInstance15;
                                                            }
                                                            propertiesInstance12.DataSource = eventHubOutputDataSourceInstance;
                                                        }
                                                        if (typeName6 == "Microsoft.Sql/Server/Database")
                                                        {
                                                            SqlAzureOutputDataSource sqlAzureOutputDataSourceInstance = new SqlAzureOutputDataSource();
                                                            
                                                            JToken propertiesValue17 = datasourceValue3["properties"];
                                                            if (propertiesValue17 != null && propertiesValue17.Type != JTokenType.Null)
                                                            {
                                                                SqlAzureOutputDataSourceProperties propertiesInstance16 = new SqlAzureOutputDataSourceProperties();
                                                                sqlAzureOutputDataSourceInstance.Properties = propertiesInstance16;
                                                                
                                                                JToken serverValue = propertiesValue17["server"];
                                                                if (serverValue != null && serverValue.Type != JTokenType.Null)
                                                                {
                                                                    string serverInstance = ((string)serverValue);
                                                                    propertiesInstance16.Server = serverInstance;
                                                                }
                                                                
                                                                JToken databaseValue = propertiesValue17["database"];
                                                                if (databaseValue != null && databaseValue.Type != JTokenType.Null)
                                                                {
                                                                    string databaseInstance = ((string)databaseValue);
                                                                    propertiesInstance16.Database = databaseInstance;
                                                                }
                                                                
                                                                JToken userValue = propertiesValue17["user"];
                                                                if (userValue != null && userValue.Type != JTokenType.Null)
                                                                {
                                                                    string userInstance = ((string)userValue);
                                                                    propertiesInstance16.User = userInstance;
                                                                }
                                                                
                                                                JToken passwordValue = propertiesValue17["password"];
                                                                if (passwordValue != null && passwordValue.Type != JTokenType.Null)
                                                                {
                                                                    string passwordInstance = ((string)passwordValue);
                                                                    propertiesInstance16.Password = passwordInstance;
                                                                }
                                                                
                                                                JToken tableValue2 = propertiesValue17["table"];
                                                                if (tableValue2 != null && tableValue2.Type != JTokenType.Null)
                                                                {
                                                                    string tableInstance2 = ((string)tableValue2);
                                                                    propertiesInstance16.Table = tableInstance2;
                                                                }
                                                            }
                                                            
                                                            JToken typeValue16 = datasourceValue3["type"];
                                                            if (typeValue16 != null && typeValue16.Type != JTokenType.Null)
                                                            {
                                                                string typeInstance16 = ((string)typeValue16);
                                                                sqlAzureOutputDataSourceInstance.Type = typeInstance16;
                                                            }
                                                            propertiesInstance12.DataSource = sqlAzureOutputDataSourceInstance;
                                                        }
                                                    }
                                                    
                                                    JToken serializationValue3 = propertiesValue13["serialization"];
                                                    if (serializationValue3 != null && serializationValue3.Type != JTokenType.Null)
                                                    {
                                                        string typeName7 = ((string)serializationValue3["type"]);
                                                        if (typeName7 == "Csv")
                                                        {
                                                            CsvSerialization csvSerializationInstance3 = new CsvSerialization();
                                                            
                                                            JToken propertiesValue18 = serializationValue3["properties"];
                                                            if (propertiesValue18 != null && propertiesValue18.Type != JTokenType.Null)
                                                            {
                                                                CsvSerializationProperties propertiesInstance17 = new CsvSerializationProperties();
                                                                csvSerializationInstance3.Properties = propertiesInstance17;
                                                                
                                                                JToken fieldDelimiterValue3 = propertiesValue18["fieldDelimiter"];
                                                                if (fieldDelimiterValue3 != null && fieldDelimiterValue3.Type != JTokenType.Null)
                                                                {
                                                                    string fieldDelimiterInstance3 = ((string)fieldDelimiterValue3);
                                                                    propertiesInstance17.FieldDelimiter = fieldDelimiterInstance3;
                                                                }
                                                                
                                                                JToken encodingValue5 = propertiesValue18["encoding"];
                                                                if (encodingValue5 != null && encodingValue5.Type != JTokenType.Null)
                                                                {
                                                                    string encodingInstance5 = ((string)encodingValue5);
                                                                    propertiesInstance17.Encoding = encodingInstance5;
                                                                }
                                                            }
                                                            
                                                            JToken typeValue17 = serializationValue3["type"];
                                                            if (typeValue17 != null && typeValue17.Type != JTokenType.Null)
                                                            {
                                                                string typeInstance17 = ((string)typeValue17);
                                                                csvSerializationInstance3.Type = typeInstance17;
                                                            }
                                                            propertiesInstance12.Serialization = csvSerializationInstance3;
                                                        }
                                                        if (typeName7 == "Json")
                                                        {
                                                            JsonSerialization jsonSerializationInstance3 = new JsonSerialization();
                                                            
                                                            JToken propertiesValue19 = serializationValue3["properties"];
                                                            if (propertiesValue19 != null && propertiesValue19.Type != JTokenType.Null)
                                                            {
                                                                JsonSerializationProperties propertiesInstance18 = new JsonSerializationProperties();
                                                                jsonSerializationInstance3.Properties = propertiesInstance18;
                                                                
                                                                JToken encodingValue6 = propertiesValue19["encoding"];
                                                                if (encodingValue6 != null && encodingValue6.Type != JTokenType.Null)
                                                                {
                                                                    string encodingInstance6 = ((string)encodingValue6);
                                                                    propertiesInstance18.Encoding = encodingInstance6;
                                                                }
                                                                
                                                                JToken formatValue3 = propertiesValue19["format"];
                                                                if (formatValue3 != null && formatValue3.Type != JTokenType.Null)
                                                                {
                                                                    string formatInstance3 = ((string)formatValue3);
                                                                    propertiesInstance18.Format = formatInstance3;
                                                                }
                                                            }
                                                            
                                                            JToken typeValue18 = serializationValue3["type"];
                                                            if (typeValue18 != null && typeValue18.Type != JTokenType.Null)
                                                            {
                                                                string typeInstance18 = ((string)typeValue18);
                                                                jsonSerializationInstance3.Type = typeInstance18;
                                                            }
                                                            propertiesInstance12.Serialization = jsonSerializationInstance3;
                                                        }
                                                        if (typeName7 == "Avro")
                                                        {
                                                            AvroSerialization avroSerializationInstance3 = new AvroSerialization();
                                                            
                                                            JToken propertiesValue20 = serializationValue3["properties"];
                                                            if (propertiesValue20 != null && propertiesValue20.Type != JTokenType.Null)
                                                            {
                                                                AvroSerializationProperties propertiesInstance19 = new AvroSerializationProperties();
                                                                avroSerializationInstance3.Properties = propertiesInstance19;
                                                            }
                                                            
                                                            JToken typeValue19 = serializationValue3["type"];
                                                            if (typeValue19 != null && typeValue19.Type != JTokenType.Null)
                                                            {
                                                                string typeInstance19 = ((string)typeValue19);
                                                                avroSerializationInstance3.Type = typeInstance19;
                                                            }
                                                            propertiesInstance12.Serialization = avroSerializationInstance3;
                                                        }
                                                    }
                                                    
                                                    JToken diagnosticsValue3 = propertiesValue13["diagnostics"];
                                                    if (diagnosticsValue3 != null && diagnosticsValue3.Type != JTokenType.Null)
                                                    {
                                                        Diagnostics diagnosticsInstance3 = new Diagnostics();
                                                        propertiesInstance12.Diagnostics = diagnosticsInstance3;
                                                        
                                                        JToken conditionsArray3 = diagnosticsValue3["conditions"];
                                                        if (conditionsArray3 != null && conditionsArray3.Type != JTokenType.Null)
                                                        {
                                                            foreach (JToken conditionsValue3 in ((JArray)conditionsArray3))
                                                            {
                                                                DiagnosticCondition diagnosticConditionInstance3 = new DiagnosticCondition();
                                                                diagnosticsInstance3.Conditions.Add(diagnosticConditionInstance3);
                                                                
                                                                JToken sinceValue3 = conditionsValue3["since"];
                                                                if (sinceValue3 != null && sinceValue3.Type != JTokenType.Null)
                                                                {
                                                                    DateTime sinceInstance3 = ((DateTime)sinceValue3);
                                                                    diagnosticConditionInstance3.Since = sinceInstance3;
                                                                }
                                                                
                                                                JToken codeValue3 = conditionsValue3["code"];
                                                                if (codeValue3 != null && codeValue3.Type != JTokenType.Null)
                                                                {
                                                                    string codeInstance3 = ((string)codeValue3);
                                                                    diagnosticConditionInstance3.Code = codeInstance3;
                                                                }
                                                                
                                                                JToken messageValue3 = conditionsValue3["message"];
                                                                if (messageValue3 != null && messageValue3.Type != JTokenType.Null)
                                                                {
                                                                    string messageInstance3 = ((string)messageValue3);
                                                                    diagnosticConditionInstance3.Message = messageInstance3;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            
                            JToken nextLinkValue = responseDoc["nextLink"];
                            if (nextLinkValue != null && nextLinkValue.Type != JTokenType.Null)
                            {
                                string nextLinkInstance = ((string)nextLinkValue);
                                result.NextLink = nextLinkInstance;
                            }
                        }
                        
                    }
                    result.StatusCode = statusCode;
                    if (httpResponse.Headers.Contains("Date"))
                    {
                        result.Date = DateTime.Parse(httpResponse.Headers.GetValues("Date").FirstOrDefault(), CultureInfo.InvariantCulture, DateTimeStyles.AdjustToUniversal).ToLocalTime();
                    }
                    if (httpResponse.Headers.Contains("x-ms-request-id"))
                    {
                        result.RequestId = httpResponse.Headers.GetValues("x-ms-request-id").FirstOrDefault();
                    }
                    
                    if (shouldTrace)
                    {
                        TracingAdapter.Exit(invocationId, result);
                    }
                    return result;
                }
                finally
                {
                    if (httpResponse != null)
                    {
                        httpResponse.Dispose();
                    }
                }
            }
            finally
            {
                if (httpRequest != null)
                {
                    httpRequest.Dispose();
                }
            }
        }
        
        /// <summary>
        /// List all the stream analytics jobs in the given subscription.
        /// </summary>
        /// <param name='parameters'>
        /// Required. The parameters required to list all the stream analytics
        /// job in the same subscription.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response of the list stream analytics job operation.
        /// </returns>
        public async Task<JobListResponse> ListJobsInSubscriptionAsync(JobListParameters parameters, CancellationToken cancellationToken)
        {
            // Validate
            if (parameters == null)
            {
                throw new ArgumentNullException("parameters");
            }
            if (parameters.PropertiesToExpand == null)
            {
                throw new ArgumentNullException("parameters.PropertiesToExpand");
            }
            
            // Tracing
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("parameters", parameters);
                TracingAdapter.Enter(invocationId, this, "ListJobsInSubscriptionAsync", tracingParameters);
            }
            
            // Construct URL
            string url = "";
            url = url + "/subscriptions/";
            if (this.Client.Credentials.SubscriptionId != null)
            {
                url = url + Uri.EscapeDataString(this.Client.Credentials.SubscriptionId);
            }
            url = url + "/providers/Microsoft.StreamAnalytics/streamingjobs";
            List<string> queryParameters = new List<string>();
            queryParameters.Add("$expand=" + Uri.EscapeDataString(parameters.PropertiesToExpand));
            queryParameters.Add("api-version=2015-04-01");
            if (queryParameters.Count > 0)
            {
                url = url + "?" + string.Join("&", queryParameters);
            }
            string baseUrl = this.Client.BaseUri.AbsoluteUri;
            // Trim '/' character from the end of baseUrl and beginning of url.
            if (baseUrl[baseUrl.Length - 1] == '/')
            {
                baseUrl = baseUrl.Substring(0, baseUrl.Length - 1);
            }
            if (url[0] == '/')
            {
                url = url.Substring(1);
            }
            url = baseUrl + "/" + url;
            url = url.Replace(" ", "%20");
            
            // Create HTTP transport objects
            HttpRequestMessage httpRequest = null;
            try
            {
                httpRequest = new HttpRequestMessage();
                httpRequest.Method = HttpMethod.Get;
                httpRequest.RequestUri = new Uri(url);
                
                // Set Headers
                httpRequest.Headers.Add("x-ms-client-request-id", Guid.NewGuid().ToString());
                
                // Set Credentials
                cancellationToken.ThrowIfCancellationRequested();
                await this.Client.Credentials.ProcessHttpRequestAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                
                // Send Request
                HttpResponseMessage httpResponse = null;
                try
                {
                    if (shouldTrace)
                    {
                        TracingAdapter.SendRequest(invocationId, httpRequest);
                    }
                    cancellationToken.ThrowIfCancellationRequested();
                    httpResponse = await this.Client.HttpClient.SendAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                    if (shouldTrace)
                    {
                        TracingAdapter.ReceiveResponse(invocationId, httpResponse);
                    }
                    HttpStatusCode statusCode = httpResponse.StatusCode;
                    if (statusCode != HttpStatusCode.OK)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        CloudException ex = CloudException.Create(httpRequest, null, httpResponse, await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false));
                        if (shouldTrace)
                        {
                            TracingAdapter.Error(invocationId, ex);
                        }
                        throw ex;
                    }
                    
                    // Create Result
                    JobListResponse result = null;
                    // Deserialize Response
                    if (statusCode == HttpStatusCode.OK)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        string responseContent = await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false);
                        result = new JobListResponse();
                        JToken responseDoc = null;
                        if (string.IsNullOrEmpty(responseContent) == false)
                        {
                            responseDoc = JToken.Parse(responseContent);
                        }
                        
                        if (responseDoc != null && responseDoc.Type != JTokenType.Null)
                        {
                            JToken valueArray = responseDoc["value"];
                            if (valueArray != null && valueArray.Type != JTokenType.Null)
                            {
                                foreach (JToken valueValue in ((JArray)valueArray))
                                {
                                    Job jobInstance = new Job();
                                    result.Value.Add(jobInstance);
                                    
                                    JToken idValue = valueValue["id"];
                                    if (idValue != null && idValue.Type != JTokenType.Null)
                                    {
                                        string idInstance = ((string)idValue);
                                        jobInstance.Id = idInstance;
                                    }
                                    
                                    JToken nameValue = valueValue["name"];
                                    if (nameValue != null && nameValue.Type != JTokenType.Null)
                                    {
                                        string nameInstance = ((string)nameValue);
                                        jobInstance.Name = nameInstance;
                                    }
                                    
                                    JToken typeValue = valueValue["type"];
                                    if (typeValue != null && typeValue.Type != JTokenType.Null)
                                    {
                                        string typeInstance = ((string)typeValue);
                                        jobInstance.Type = typeInstance;
                                    }
                                    
                                    JToken locationValue = valueValue["location"];
                                    if (locationValue != null && locationValue.Type != JTokenType.Null)
                                    {
                                        string locationInstance = ((string)locationValue);
                                        jobInstance.Location = locationInstance;
                                    }
                                    
                                    JToken tagsSequenceElement = ((JToken)valueValue["tags"]);
                                    if (tagsSequenceElement != null && tagsSequenceElement.Type != JTokenType.Null)
                                    {
                                        foreach (JProperty property in tagsSequenceElement)
                                        {
                                            string tagsKey = ((string)property.Name);
                                            string tagsValue = ((string)property.Value);
                                            jobInstance.Tags.Add(tagsKey, tagsValue);
                                        }
                                    }
                                    
                                    JToken propertiesValue = valueValue["properties"];
                                    if (propertiesValue != null && propertiesValue.Type != JTokenType.Null)
                                    {
                                        JobProperties propertiesInstance = new JobProperties();
                                        jobInstance.Properties = propertiesInstance;
                                        
                                        JToken skuValue = propertiesValue["sku"];
                                        if (skuValue != null && skuValue.Type != JTokenType.Null)
                                        {
                                            Sku skuInstance = new Sku();
                                            propertiesInstance.Sku = skuInstance;
                                            
                                            JToken nameValue2 = skuValue["name"];
                                            if (nameValue2 != null && nameValue2.Type != JTokenType.Null)
                                            {
                                                string nameInstance2 = ((string)nameValue2);
                                                skuInstance.Name = nameInstance2;
                                            }
                                        }
                                        
                                        JToken eventsOutOfOrderPolicyValue = propertiesValue["eventsOutOfOrderPolicy"];
                                        if (eventsOutOfOrderPolicyValue != null && eventsOutOfOrderPolicyValue.Type != JTokenType.Null)
                                        {
                                            string eventsOutOfOrderPolicyInstance = ((string)eventsOutOfOrderPolicyValue);
                                            propertiesInstance.EventsOutOfOrderPolicy = eventsOutOfOrderPolicyInstance;
                                        }
                                        
                                        JToken eventsOutOfOrderMaxDelayInSecondsValue = propertiesValue["eventsOutOfOrderMaxDelayInSeconds"];
                                        if (eventsOutOfOrderMaxDelayInSecondsValue != null && eventsOutOfOrderMaxDelayInSecondsValue.Type != JTokenType.Null)
                                        {
                                            int eventsOutOfOrderMaxDelayInSecondsInstance = ((int)eventsOutOfOrderMaxDelayInSecondsValue);
                                            propertiesInstance.EventsOutOfOrderMaxDelayInSeconds = eventsOutOfOrderMaxDelayInSecondsInstance;
                                        }
                                        
                                        JToken eventsLateArrivalMaxDelayInSecondsValue = propertiesValue["eventsLateArrivalMaxDelayInSeconds"];
                                        if (eventsLateArrivalMaxDelayInSecondsValue != null && eventsLateArrivalMaxDelayInSecondsValue.Type != JTokenType.Null)
                                        {
                                            int eventsLateArrivalMaxDelayInSecondsInstance = ((int)eventsLateArrivalMaxDelayInSecondsValue);
                                            propertiesInstance.EventsLateArrivalMaxDelayInSeconds = eventsLateArrivalMaxDelayInSecondsInstance;
                                        }
                                        
                                        JToken dataLocaleValue = propertiesValue["dataLocale"];
                                        if (dataLocaleValue != null && dataLocaleValue.Type != JTokenType.Null)
                                        {
                                            string dataLocaleInstance = ((string)dataLocaleValue);
                                            propertiesInstance.DataLocale = dataLocaleInstance;
                                        }
                                        
                                        JToken outputStartModeValue = propertiesValue["outputStartMode"];
                                        if (outputStartModeValue != null && outputStartModeValue.Type != JTokenType.Null)
                                        {
                                            string outputStartModeInstance = ((string)outputStartModeValue);
                                            propertiesInstance.OutputStartMode = outputStartModeInstance;
                                        }
                                        
                                        JToken outputStartTimeValue = propertiesValue["outputStartTime"];
                                        if (outputStartTimeValue != null && outputStartTimeValue.Type != JTokenType.Null)
                                        {
                                            DateTime outputStartTimeInstance = ((DateTime)outputStartTimeValue);
                                            propertiesInstance.OutputStartTime = outputStartTimeInstance;
                                        }
                                        
                                        JToken lastOutputEventTimeValue = propertiesValue["lastOutputEventTime"];
                                        if (lastOutputEventTimeValue != null && lastOutputEventTimeValue.Type != JTokenType.Null)
                                        {
                                            DateTime lastOutputEventTimeInstance = ((DateTime)lastOutputEventTimeValue);
                                            propertiesInstance.LastOutputEventTime = lastOutputEventTimeInstance;
                                        }
                                        
                                        JToken jobIdValue = propertiesValue["jobId"];
                                        if (jobIdValue != null && jobIdValue.Type != JTokenType.Null)
                                        {
                                            string jobIdInstance = ((string)jobIdValue);
                                            propertiesInstance.JobId = jobIdInstance;
                                        }
                                        
                                        JToken etagValue = propertiesValue["etag"];
                                        if (etagValue != null && etagValue.Type != JTokenType.Null)
                                        {
                                            string etagInstance = ((string)etagValue);
                                            propertiesInstance.Etag = etagInstance;
                                        }
                                        
                                        JToken provisioningStateValue = propertiesValue["provisioningState"];
                                        if (provisioningStateValue != null && provisioningStateValue.Type != JTokenType.Null)
                                        {
                                            string provisioningStateInstance = ((string)provisioningStateValue);
                                            propertiesInstance.ProvisioningState = provisioningStateInstance;
                                        }
                                        
                                        JToken jobStateValue = propertiesValue["jobState"];
                                        if (jobStateValue != null && jobStateValue.Type != JTokenType.Null)
                                        {
                                            string jobStateInstance = ((string)jobStateValue);
                                            propertiesInstance.JobState = jobStateInstance;
                                        }
                                        
                                        JToken createdDateValue = propertiesValue["createdDate"];
                                        if (createdDateValue != null && createdDateValue.Type != JTokenType.Null)
                                        {
                                            DateTime createdDateInstance = ((DateTime)createdDateValue);
                                            propertiesInstance.CreatedDate = createdDateInstance;
                                        }
                                        
                                        JToken inputsArray = propertiesValue["inputs"];
                                        if (inputsArray != null && inputsArray.Type != JTokenType.Null)
                                        {
                                            foreach (JToken inputsValue in ((JArray)inputsArray))
                                            {
                                                Input inputInstance = new Input();
                                                propertiesInstance.Inputs.Add(inputInstance);
                                                
                                                JToken nameValue3 = inputsValue["name"];
                                                if (nameValue3 != null && nameValue3.Type != JTokenType.Null)
                                                {
                                                    string nameInstance3 = ((string)nameValue3);
                                                    inputInstance.Name = nameInstance3;
                                                }
                                                
                                                JToken propertiesValue2 = inputsValue["properties"];
                                                if (propertiesValue2 != null && propertiesValue2.Type != JTokenType.Null)
                                                {
                                                    string typeName = ((string)propertiesValue2["type"]);
                                                    if (typeName == "Reference")
                                                    {
                                                        ReferenceInputProperties referenceInputPropertiesInstance = new ReferenceInputProperties();
                                                        
                                                        JToken datasourceValue = propertiesValue2["datasource"];
                                                        if (datasourceValue != null && datasourceValue.Type != JTokenType.Null)
                                                        {
                                                            string typeName2 = ((string)datasourceValue["type"]);
                                                            if (typeName2 == "Microsoft.Storage/Blob")
                                                            {
                                                                BlobReferenceInputDataSource blobReferenceInputDataSourceInstance = new BlobReferenceInputDataSource();
                                                                
                                                                JToken propertiesValue3 = datasourceValue["properties"];
                                                                if (propertiesValue3 != null && propertiesValue3.Type != JTokenType.Null)
                                                                {
                                                                    BlobReferenceInputDataSourceProperties propertiesInstance2 = new BlobReferenceInputDataSourceProperties();
                                                                    blobReferenceInputDataSourceInstance.Properties = propertiesInstance2;
                                                                    
                                                                    JToken storageAccountsArray = propertiesValue3["storageAccounts"];
                                                                    if (storageAccountsArray != null && storageAccountsArray.Type != JTokenType.Null)
                                                                    {
                                                                        foreach (JToken storageAccountsValue in ((JArray)storageAccountsArray))
                                                                        {
                                                                            StorageAccount storageAccountInstance = new StorageAccount();
                                                                            propertiesInstance2.StorageAccounts.Add(storageAccountInstance);
                                                                            
                                                                            JToken accountNameValue = storageAccountsValue["accountName"];
                                                                            if (accountNameValue != null && accountNameValue.Type != JTokenType.Null)
                                                                            {
                                                                                string accountNameInstance = ((string)accountNameValue);
                                                                                storageAccountInstance.AccountName = accountNameInstance;
                                                                            }
                                                                            
                                                                            JToken accountKeyValue = storageAccountsValue["accountKey"];
                                                                            if (accountKeyValue != null && accountKeyValue.Type != JTokenType.Null)
                                                                            {
                                                                                string accountKeyInstance = ((string)accountKeyValue);
                                                                                storageAccountInstance.AccountKey = accountKeyInstance;
                                                                            }
                                                                        }
                                                                    }
                                                                    
                                                                    JToken containerValue = propertiesValue3["container"];
                                                                    if (containerValue != null && containerValue.Type != JTokenType.Null)
                                                                    {
                                                                        string containerInstance = ((string)containerValue);
                                                                        propertiesInstance2.Container = containerInstance;
                                                                    }
                                                                    
                                                                    JToken pathPatternValue = propertiesValue3["pathPattern"];
                                                                    if (pathPatternValue != null && pathPatternValue.Type != JTokenType.Null)
                                                                    {
                                                                        string pathPatternInstance = ((string)pathPatternValue);
                                                                        propertiesInstance2.PathPattern = pathPatternInstance;
                                                                    }
                                                                    
                                                                    JToken dateFormatValue = propertiesValue3["dateFormat"];
                                                                    if (dateFormatValue != null && dateFormatValue.Type != JTokenType.Null)
                                                                    {
                                                                        string dateFormatInstance = ((string)dateFormatValue);
                                                                        propertiesInstance2.DateFormat = dateFormatInstance;
                                                                    }
                                                                    
                                                                    JToken timeFormatValue = propertiesValue3["timeFormat"];
                                                                    if (timeFormatValue != null && timeFormatValue.Type != JTokenType.Null)
                                                                    {
                                                                        string timeFormatInstance = ((string)timeFormatValue);
                                                                        propertiesInstance2.TimeFormat = timeFormatInstance;
                                                                    }
                                                                }
                                                                
                                                                JToken typeValue2 = datasourceValue["type"];
                                                                if (typeValue2 != null && typeValue2.Type != JTokenType.Null)
                                                                {
                                                                    string typeInstance2 = ((string)typeValue2);
                                                                    blobReferenceInputDataSourceInstance.Type = typeInstance2;
                                                                }
                                                                referenceInputPropertiesInstance.DataSource = blobReferenceInputDataSourceInstance;
                                                            }
                                                        }
                                                        
                                                        JToken etagValue2 = propertiesValue2["etag"];
                                                        if (etagValue2 != null && etagValue2.Type != JTokenType.Null)
                                                        {
                                                            string etagInstance2 = ((string)etagValue2);
                                                            referenceInputPropertiesInstance.Etag = etagInstance2;
                                                        }
                                                        
                                                        JToken typeValue3 = propertiesValue2["type"];
                                                        if (typeValue3 != null && typeValue3.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance3 = ((string)typeValue3);
                                                            referenceInputPropertiesInstance.Type = typeInstance3;
                                                        }
                                                        
                                                        JToken serializationValue = propertiesValue2["serialization"];
                                                        if (serializationValue != null && serializationValue.Type != JTokenType.Null)
                                                        {
                                                            string typeName3 = ((string)serializationValue["type"]);
                                                            if (typeName3 == "Csv")
                                                            {
                                                                CsvSerialization csvSerializationInstance = new CsvSerialization();
                                                                
                                                                JToken propertiesValue4 = serializationValue["properties"];
                                                                if (propertiesValue4 != null && propertiesValue4.Type != JTokenType.Null)
                                                                {
                                                                    CsvSerializationProperties propertiesInstance3 = new CsvSerializationProperties();
                                                                    csvSerializationInstance.Properties = propertiesInstance3;
                                                                    
                                                                    JToken fieldDelimiterValue = propertiesValue4["fieldDelimiter"];
                                                                    if (fieldDelimiterValue != null && fieldDelimiterValue.Type != JTokenType.Null)
                                                                    {
                                                                        string fieldDelimiterInstance = ((string)fieldDelimiterValue);
                                                                        propertiesInstance3.FieldDelimiter = fieldDelimiterInstance;
                                                                    }
                                                                    
                                                                    JToken encodingValue = propertiesValue4["encoding"];
                                                                    if (encodingValue != null && encodingValue.Type != JTokenType.Null)
                                                                    {
                                                                        string encodingInstance = ((string)encodingValue);
                                                                        propertiesInstance3.Encoding = encodingInstance;
                                                                    }
                                                                }
                                                                
                                                                JToken typeValue4 = serializationValue["type"];
                                                                if (typeValue4 != null && typeValue4.Type != JTokenType.Null)
                                                                {
                                                                    string typeInstance4 = ((string)typeValue4);
                                                                    csvSerializationInstance.Type = typeInstance4;
                                                                }
                                                                referenceInputPropertiesInstance.Serialization = csvSerializationInstance;
                                                            }
                                                            if (typeName3 == "Json")
                                                            {
                                                                JsonSerialization jsonSerializationInstance = new JsonSerialization();
                                                                
                                                                JToken propertiesValue5 = serializationValue["properties"];
                                                                if (propertiesValue5 != null && propertiesValue5.Type != JTokenType.Null)
                                                                {
                                                                    JsonSerializationProperties propertiesInstance4 = new JsonSerializationProperties();
                                                                    jsonSerializationInstance.Properties = propertiesInstance4;
                                                                    
                                                                    JToken encodingValue2 = propertiesValue5["encoding"];
                                                                    if (encodingValue2 != null && encodingValue2.Type != JTokenType.Null)
                                                                    {
                                                                        string encodingInstance2 = ((string)encodingValue2);
                                                                        propertiesInstance4.Encoding = encodingInstance2;
                                                                    }
                                                                    
                                                                    JToken formatValue = propertiesValue5["format"];
                                                                    if (formatValue != null && formatValue.Type != JTokenType.Null)
                                                                    {
                                                                        string formatInstance = ((string)formatValue);
                                                                        propertiesInstance4.Format = formatInstance;
                                                                    }
                                                                }
                                                                
                                                                JToken typeValue5 = serializationValue["type"];
                                                                if (typeValue5 != null && typeValue5.Type != JTokenType.Null)
                                                                {
                                                                    string typeInstance5 = ((string)typeValue5);
                                                                    jsonSerializationInstance.Type = typeInstance5;
                                                                }
                                                                referenceInputPropertiesInstance.Serialization = jsonSerializationInstance;
                                                            }
                                                            if (typeName3 == "Avro")
                                                            {
                                                                AvroSerialization avroSerializationInstance = new AvroSerialization();
                                                                
                                                                JToken propertiesValue6 = serializationValue["properties"];
                                                                if (propertiesValue6 != null && propertiesValue6.Type != JTokenType.Null)
                                                                {
                                                                    AvroSerializationProperties propertiesInstance5 = new AvroSerializationProperties();
                                                                    avroSerializationInstance.Properties = propertiesInstance5;
                                                                }
                                                                
                                                                JToken typeValue6 = serializationValue["type"];
                                                                if (typeValue6 != null && typeValue6.Type != JTokenType.Null)
                                                                {
                                                                    string typeInstance6 = ((string)typeValue6);
                                                                    avroSerializationInstance.Type = typeInstance6;
                                                                }
                                                                referenceInputPropertiesInstance.Serialization = avroSerializationInstance;
                                                            }
                                                        }
                                                        
                                                        JToken diagnosticsValue = propertiesValue2["diagnostics"];
                                                        if (diagnosticsValue != null && diagnosticsValue.Type != JTokenType.Null)
                                                        {
                                                            Diagnostics diagnosticsInstance = new Diagnostics();
                                                            referenceInputPropertiesInstance.Diagnostics = diagnosticsInstance;
                                                            
                                                            JToken conditionsArray = diagnosticsValue["conditions"];
                                                            if (conditionsArray != null && conditionsArray.Type != JTokenType.Null)
                                                            {
                                                                foreach (JToken conditionsValue in ((JArray)conditionsArray))
                                                                {
                                                                    DiagnosticCondition diagnosticConditionInstance = new DiagnosticCondition();
                                                                    diagnosticsInstance.Conditions.Add(diagnosticConditionInstance);
                                                                    
                                                                    JToken sinceValue = conditionsValue["since"];
                                                                    if (sinceValue != null && sinceValue.Type != JTokenType.Null)
                                                                    {
                                                                        DateTime sinceInstance = ((DateTime)sinceValue);
                                                                        diagnosticConditionInstance.Since = sinceInstance;
                                                                    }
                                                                    
                                                                    JToken codeValue = conditionsValue["code"];
                                                                    if (codeValue != null && codeValue.Type != JTokenType.Null)
                                                                    {
                                                                        string codeInstance = ((string)codeValue);
                                                                        diagnosticConditionInstance.Code = codeInstance;
                                                                    }
                                                                    
                                                                    JToken messageValue = conditionsValue["message"];
                                                                    if (messageValue != null && messageValue.Type != JTokenType.Null)
                                                                    {
                                                                        string messageInstance = ((string)messageValue);
                                                                        diagnosticConditionInstance.Message = messageInstance;
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        inputInstance.Properties = referenceInputPropertiesInstance;
                                                    }
                                                    if (typeName == "Stream")
                                                    {
                                                        StreamInputProperties streamInputPropertiesInstance = new StreamInputProperties();
                                                        
                                                        JToken datasourceValue2 = propertiesValue2["datasource"];
                                                        if (datasourceValue2 != null && datasourceValue2.Type != JTokenType.Null)
                                                        {
                                                            string typeName4 = ((string)datasourceValue2["type"]);
                                                            if (typeName4 == "Microsoft.Storage/Blob")
                                                            {
                                                                BlobStreamInputDataSource blobStreamInputDataSourceInstance = new BlobStreamInputDataSource();
                                                                
                                                                JToken propertiesValue7 = datasourceValue2["properties"];
                                                                if (propertiesValue7 != null && propertiesValue7.Type != JTokenType.Null)
                                                                {
                                                                    BlobStreamInputDataSourceProperties propertiesInstance6 = new BlobStreamInputDataSourceProperties();
                                                                    blobStreamInputDataSourceInstance.Properties = propertiesInstance6;
                                                                    
                                                                    JToken storageAccountsArray2 = propertiesValue7["storageAccounts"];
                                                                    if (storageAccountsArray2 != null && storageAccountsArray2.Type != JTokenType.Null)
                                                                    {
                                                                        foreach (JToken storageAccountsValue2 in ((JArray)storageAccountsArray2))
                                                                        {
                                                                            StorageAccount storageAccountInstance2 = new StorageAccount();
                                                                            propertiesInstance6.StorageAccounts.Add(storageAccountInstance2);
                                                                            
                                                                            JToken accountNameValue2 = storageAccountsValue2["accountName"];
                                                                            if (accountNameValue2 != null && accountNameValue2.Type != JTokenType.Null)
                                                                            {
                                                                                string accountNameInstance2 = ((string)accountNameValue2);
                                                                                storageAccountInstance2.AccountName = accountNameInstance2;
                                                                            }
                                                                            
                                                                            JToken accountKeyValue2 = storageAccountsValue2["accountKey"];
                                                                            if (accountKeyValue2 != null && accountKeyValue2.Type != JTokenType.Null)
                                                                            {
                                                                                string accountKeyInstance2 = ((string)accountKeyValue2);
                                                                                storageAccountInstance2.AccountKey = accountKeyInstance2;
                                                                            }
                                                                        }
                                                                    }
                                                                    
                                                                    JToken containerValue2 = propertiesValue7["container"];
                                                                    if (containerValue2 != null && containerValue2.Type != JTokenType.Null)
                                                                    {
                                                                        string containerInstance2 = ((string)containerValue2);
                                                                        propertiesInstance6.Container = containerInstance2;
                                                                    }
                                                                    
                                                                    JToken pathPatternValue2 = propertiesValue7["pathPattern"];
                                                                    if (pathPatternValue2 != null && pathPatternValue2.Type != JTokenType.Null)
                                                                    {
                                                                        string pathPatternInstance2 = ((string)pathPatternValue2);
                                                                        propertiesInstance6.PathPattern = pathPatternInstance2;
                                                                    }
                                                                    
                                                                    JToken dateFormatValue2 = propertiesValue7["dateFormat"];
                                                                    if (dateFormatValue2 != null && dateFormatValue2.Type != JTokenType.Null)
                                                                    {
                                                                        string dateFormatInstance2 = ((string)dateFormatValue2);
                                                                        propertiesInstance6.DateFormat = dateFormatInstance2;
                                                                    }
                                                                    
                                                                    JToken timeFormatValue2 = propertiesValue7["timeFormat"];
                                                                    if (timeFormatValue2 != null && timeFormatValue2.Type != JTokenType.Null)
                                                                    {
                                                                        string timeFormatInstance2 = ((string)timeFormatValue2);
                                                                        propertiesInstance6.TimeFormat = timeFormatInstance2;
                                                                    }
                                                                    
                                                                    JToken sourcePartitionCountValue = propertiesValue7["sourcePartitionCount"];
                                                                    if (sourcePartitionCountValue != null && sourcePartitionCountValue.Type != JTokenType.Null)
                                                                    {
                                                                        int sourcePartitionCountInstance = ((int)sourcePartitionCountValue);
                                                                        propertiesInstance6.SourcePartitionCount = sourcePartitionCountInstance;
                                                                    }
                                                                }
                                                                
                                                                JToken typeValue7 = datasourceValue2["type"];
                                                                if (typeValue7 != null && typeValue7.Type != JTokenType.Null)
                                                                {
                                                                    string typeInstance7 = ((string)typeValue7);
                                                                    blobStreamInputDataSourceInstance.Type = typeInstance7;
                                                                }
                                                                streamInputPropertiesInstance.DataSource = blobStreamInputDataSourceInstance;
                                                            }
                                                            if (typeName4 == "Microsoft.ServiceBus/EventHub")
                                                            {
                                                                EventHubStreamInputDataSource eventHubStreamInputDataSourceInstance = new EventHubStreamInputDataSource();
                                                                
                                                                JToken propertiesValue8 = datasourceValue2["properties"];
                                                                if (propertiesValue8 != null && propertiesValue8.Type != JTokenType.Null)
                                                                {
                                                                    EventHubStreamInputDataSourceProperties propertiesInstance7 = new EventHubStreamInputDataSourceProperties();
                                                                    eventHubStreamInputDataSourceInstance.Properties = propertiesInstance7;
                                                                    
                                                                    JToken serviceBusNamespaceValue = propertiesValue8["serviceBusNamespace"];
                                                                    if (serviceBusNamespaceValue != null && serviceBusNamespaceValue.Type != JTokenType.Null)
                                                                    {
                                                                        string serviceBusNamespaceInstance = ((string)serviceBusNamespaceValue);
                                                                        propertiesInstance7.ServiceBusNamespace = serviceBusNamespaceInstance;
                                                                    }
                                                                    
                                                                    JToken sharedAccessPolicyNameValue = propertiesValue8["sharedAccessPolicyName"];
                                                                    if (sharedAccessPolicyNameValue != null && sharedAccessPolicyNameValue.Type != JTokenType.Null)
                                                                    {
                                                                        string sharedAccessPolicyNameInstance = ((string)sharedAccessPolicyNameValue);
                                                                        propertiesInstance7.SharedAccessPolicyName = sharedAccessPolicyNameInstance;
                                                                    }
                                                                    
                                                                    JToken sharedAccessPolicyKeyValue = propertiesValue8["sharedAccessPolicyKey"];
                                                                    if (sharedAccessPolicyKeyValue != null && sharedAccessPolicyKeyValue.Type != JTokenType.Null)
                                                                    {
                                                                        string sharedAccessPolicyKeyInstance = ((string)sharedAccessPolicyKeyValue);
                                                                        propertiesInstance7.SharedAccessPolicyKey = sharedAccessPolicyKeyInstance;
                                                                    }
                                                                    
                                                                    JToken eventHubNameValue = propertiesValue8["eventHubName"];
                                                                    if (eventHubNameValue != null && eventHubNameValue.Type != JTokenType.Null)
                                                                    {
                                                                        string eventHubNameInstance = ((string)eventHubNameValue);
                                                                        propertiesInstance7.EventHubName = eventHubNameInstance;
                                                                    }
                                                                    
                                                                    JToken consumerGroupNameValue = propertiesValue8["consumerGroupName"];
                                                                    if (consumerGroupNameValue != null && consumerGroupNameValue.Type != JTokenType.Null)
                                                                    {
                                                                        string consumerGroupNameInstance = ((string)consumerGroupNameValue);
                                                                        propertiesInstance7.ConsumerGroupName = consumerGroupNameInstance;
                                                                    }
                                                                }
                                                                
                                                                JToken typeValue8 = datasourceValue2["type"];
                                                                if (typeValue8 != null && typeValue8.Type != JTokenType.Null)
                                                                {
                                                                    string typeInstance8 = ((string)typeValue8);
                                                                    eventHubStreamInputDataSourceInstance.Type = typeInstance8;
                                                                }
                                                                streamInputPropertiesInstance.DataSource = eventHubStreamInputDataSourceInstance;
                                                            }
                                                        }
                                                        
                                                        JToken etagValue3 = propertiesValue2["etag"];
                                                        if (etagValue3 != null && etagValue3.Type != JTokenType.Null)
                                                        {
                                                            string etagInstance3 = ((string)etagValue3);
                                                            streamInputPropertiesInstance.Etag = etagInstance3;
                                                        }
                                                        
                                                        JToken typeValue9 = propertiesValue2["type"];
                                                        if (typeValue9 != null && typeValue9.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance9 = ((string)typeValue9);
                                                            streamInputPropertiesInstance.Type = typeInstance9;
                                                        }
                                                        
                                                        JToken serializationValue2 = propertiesValue2["serialization"];
                                                        if (serializationValue2 != null && serializationValue2.Type != JTokenType.Null)
                                                        {
                                                            string typeName5 = ((string)serializationValue2["type"]);
                                                            if (typeName5 == "Csv")
                                                            {
                                                                CsvSerialization csvSerializationInstance2 = new CsvSerialization();
                                                                
                                                                JToken propertiesValue9 = serializationValue2["properties"];
                                                                if (propertiesValue9 != null && propertiesValue9.Type != JTokenType.Null)
                                                                {
                                                                    CsvSerializationProperties propertiesInstance8 = new CsvSerializationProperties();
                                                                    csvSerializationInstance2.Properties = propertiesInstance8;
                                                                    
                                                                    JToken fieldDelimiterValue2 = propertiesValue9["fieldDelimiter"];
                                                                    if (fieldDelimiterValue2 != null && fieldDelimiterValue2.Type != JTokenType.Null)
                                                                    {
                                                                        string fieldDelimiterInstance2 = ((string)fieldDelimiterValue2);
                                                                        propertiesInstance8.FieldDelimiter = fieldDelimiterInstance2;
                                                                    }
                                                                    
                                                                    JToken encodingValue3 = propertiesValue9["encoding"];
                                                                    if (encodingValue3 != null && encodingValue3.Type != JTokenType.Null)
                                                                    {
                                                                        string encodingInstance3 = ((string)encodingValue3);
                                                                        propertiesInstance8.Encoding = encodingInstance3;
                                                                    }
                                                                }
                                                                
                                                                JToken typeValue10 = serializationValue2["type"];
                                                                if (typeValue10 != null && typeValue10.Type != JTokenType.Null)
                                                                {
                                                                    string typeInstance10 = ((string)typeValue10);
                                                                    csvSerializationInstance2.Type = typeInstance10;
                                                                }
                                                                streamInputPropertiesInstance.Serialization = csvSerializationInstance2;
                                                            }
                                                            if (typeName5 == "Json")
                                                            {
                                                                JsonSerialization jsonSerializationInstance2 = new JsonSerialization();
                                                                
                                                                JToken propertiesValue10 = serializationValue2["properties"];
                                                                if (propertiesValue10 != null && propertiesValue10.Type != JTokenType.Null)
                                                                {
                                                                    JsonSerializationProperties propertiesInstance9 = new JsonSerializationProperties();
                                                                    jsonSerializationInstance2.Properties = propertiesInstance9;
                                                                    
                                                                    JToken encodingValue4 = propertiesValue10["encoding"];
                                                                    if (encodingValue4 != null && encodingValue4.Type != JTokenType.Null)
                                                                    {
                                                                        string encodingInstance4 = ((string)encodingValue4);
                                                                        propertiesInstance9.Encoding = encodingInstance4;
                                                                    }
                                                                    
                                                                    JToken formatValue2 = propertiesValue10["format"];
                                                                    if (formatValue2 != null && formatValue2.Type != JTokenType.Null)
                                                                    {
                                                                        string formatInstance2 = ((string)formatValue2);
                                                                        propertiesInstance9.Format = formatInstance2;
                                                                    }
                                                                }
                                                                
                                                                JToken typeValue11 = serializationValue2["type"];
                                                                if (typeValue11 != null && typeValue11.Type != JTokenType.Null)
                                                                {
                                                                    string typeInstance11 = ((string)typeValue11);
                                                                    jsonSerializationInstance2.Type = typeInstance11;
                                                                }
                                                                streamInputPropertiesInstance.Serialization = jsonSerializationInstance2;
                                                            }
                                                            if (typeName5 == "Avro")
                                                            {
                                                                AvroSerialization avroSerializationInstance2 = new AvroSerialization();
                                                                
                                                                JToken propertiesValue11 = serializationValue2["properties"];
                                                                if (propertiesValue11 != null && propertiesValue11.Type != JTokenType.Null)
                                                                {
                                                                    AvroSerializationProperties propertiesInstance10 = new AvroSerializationProperties();
                                                                    avroSerializationInstance2.Properties = propertiesInstance10;
                                                                }
                                                                
                                                                JToken typeValue12 = serializationValue2["type"];
                                                                if (typeValue12 != null && typeValue12.Type != JTokenType.Null)
                                                                {
                                                                    string typeInstance12 = ((string)typeValue12);
                                                                    avroSerializationInstance2.Type = typeInstance12;
                                                                }
                                                                streamInputPropertiesInstance.Serialization = avroSerializationInstance2;
                                                            }
                                                        }
                                                        
                                                        JToken diagnosticsValue2 = propertiesValue2["diagnostics"];
                                                        if (diagnosticsValue2 != null && diagnosticsValue2.Type != JTokenType.Null)
                                                        {
                                                            Diagnostics diagnosticsInstance2 = new Diagnostics();
                                                            streamInputPropertiesInstance.Diagnostics = diagnosticsInstance2;
                                                            
                                                            JToken conditionsArray2 = diagnosticsValue2["conditions"];
                                                            if (conditionsArray2 != null && conditionsArray2.Type != JTokenType.Null)
                                                            {
                                                                foreach (JToken conditionsValue2 in ((JArray)conditionsArray2))
                                                                {
                                                                    DiagnosticCondition diagnosticConditionInstance2 = new DiagnosticCondition();
                                                                    diagnosticsInstance2.Conditions.Add(diagnosticConditionInstance2);
                                                                    
                                                                    JToken sinceValue2 = conditionsValue2["since"];
                                                                    if (sinceValue2 != null && sinceValue2.Type != JTokenType.Null)
                                                                    {
                                                                        DateTime sinceInstance2 = ((DateTime)sinceValue2);
                                                                        diagnosticConditionInstance2.Since = sinceInstance2;
                                                                    }
                                                                    
                                                                    JToken codeValue2 = conditionsValue2["code"];
                                                                    if (codeValue2 != null && codeValue2.Type != JTokenType.Null)
                                                                    {
                                                                        string codeInstance2 = ((string)codeValue2);
                                                                        diagnosticConditionInstance2.Code = codeInstance2;
                                                                    }
                                                                    
                                                                    JToken messageValue2 = conditionsValue2["message"];
                                                                    if (messageValue2 != null && messageValue2.Type != JTokenType.Null)
                                                                    {
                                                                        string messageInstance2 = ((string)messageValue2);
                                                                        diagnosticConditionInstance2.Message = messageInstance2;
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        inputInstance.Properties = streamInputPropertiesInstance;
                                                    }
                                                }
                                            }
                                        }
                                        
                                        JToken transformationValue = propertiesValue["transformation"];
                                        if (transformationValue != null && transformationValue.Type != JTokenType.Null)
                                        {
                                            Transformation transformationInstance = new Transformation();
                                            propertiesInstance.Transformation = transformationInstance;
                                            
                                            JToken nameValue4 = transformationValue["name"];
                                            if (nameValue4 != null && nameValue4.Type != JTokenType.Null)
                                            {
                                                string nameInstance4 = ((string)nameValue4);
                                                transformationInstance.Name = nameInstance4;
                                            }
                                            
                                            JToken propertiesValue12 = transformationValue["properties"];
                                            if (propertiesValue12 != null && propertiesValue12.Type != JTokenType.Null)
                                            {
                                                TransformationProperties propertiesInstance11 = new TransformationProperties();
                                                transformationInstance.Properties = propertiesInstance11;
                                                
                                                JToken etagValue4 = propertiesValue12["etag"];
                                                if (etagValue4 != null && etagValue4.Type != JTokenType.Null)
                                                {
                                                    string etagInstance4 = ((string)etagValue4);
                                                    propertiesInstance11.Etag = etagInstance4;
                                                }
                                                
                                                JToken streamingUnitsValue = propertiesValue12["streamingUnits"];
                                                if (streamingUnitsValue != null && streamingUnitsValue.Type != JTokenType.Null)
                                                {
                                                    int streamingUnitsInstance = ((int)streamingUnitsValue);
                                                    propertiesInstance11.StreamingUnits = streamingUnitsInstance;
                                                }
                                                
                                                JToken queryValue = propertiesValue12["query"];
                                                if (queryValue != null && queryValue.Type != JTokenType.Null)
                                                {
                                                    string queryInstance = ((string)queryValue);
                                                    propertiesInstance11.Query = queryInstance;
                                                }
                                            }
                                        }
                                        
                                        JToken outputsArray = propertiesValue["outputs"];
                                        if (outputsArray != null && outputsArray.Type != JTokenType.Null)
                                        {
                                            foreach (JToken outputsValue in ((JArray)outputsArray))
                                            {
                                                Output outputInstance = new Output();
                                                propertiesInstance.Outputs.Add(outputInstance);
                                                
                                                JToken nameValue5 = outputsValue["name"];
                                                if (nameValue5 != null && nameValue5.Type != JTokenType.Null)
                                                {
                                                    string nameInstance5 = ((string)nameValue5);
                                                    outputInstance.Name = nameInstance5;
                                                }
                                                
                                                JToken propertiesValue13 = outputsValue["properties"];
                                                if (propertiesValue13 != null && propertiesValue13.Type != JTokenType.Null)
                                                {
                                                    OutputProperties propertiesInstance12 = new OutputProperties();
                                                    outputInstance.Properties = propertiesInstance12;
                                                    
                                                    JToken etagValue5 = propertiesValue13["etag"];
                                                    if (etagValue5 != null && etagValue5.Type != JTokenType.Null)
                                                    {
                                                        string etagInstance5 = ((string)etagValue5);
                                                        propertiesInstance12.Etag = etagInstance5;
                                                    }
                                                    
                                                    JToken datasourceValue3 = propertiesValue13["datasource"];
                                                    if (datasourceValue3 != null && datasourceValue3.Type != JTokenType.Null)
                                                    {
                                                        string typeName6 = ((string)datasourceValue3["type"]);
                                                        if (typeName6 == "Microsoft.Storage/Blob")
                                                        {
                                                            BlobOutputDataSource blobOutputDataSourceInstance = new BlobOutputDataSource();
                                                            
                                                            JToken propertiesValue14 = datasourceValue3["properties"];
                                                            if (propertiesValue14 != null && propertiesValue14.Type != JTokenType.Null)
                                                            {
                                                                BlobOutputDataSourceProperties propertiesInstance13 = new BlobOutputDataSourceProperties();
                                                                blobOutputDataSourceInstance.Properties = propertiesInstance13;
                                                                
                                                                JToken storageAccountsArray3 = propertiesValue14["storageAccounts"];
                                                                if (storageAccountsArray3 != null && storageAccountsArray3.Type != JTokenType.Null)
                                                                {
                                                                    foreach (JToken storageAccountsValue3 in ((JArray)storageAccountsArray3))
                                                                    {
                                                                        StorageAccount storageAccountInstance3 = new StorageAccount();
                                                                        propertiesInstance13.StorageAccounts.Add(storageAccountInstance3);
                                                                        
                                                                        JToken accountNameValue3 = storageAccountsValue3["accountName"];
                                                                        if (accountNameValue3 != null && accountNameValue3.Type != JTokenType.Null)
                                                                        {
                                                                            string accountNameInstance3 = ((string)accountNameValue3);
                                                                            storageAccountInstance3.AccountName = accountNameInstance3;
                                                                        }
                                                                        
                                                                        JToken accountKeyValue3 = storageAccountsValue3["accountKey"];
                                                                        if (accountKeyValue3 != null && accountKeyValue3.Type != JTokenType.Null)
                                                                        {
                                                                            string accountKeyInstance3 = ((string)accountKeyValue3);
                                                                            storageAccountInstance3.AccountKey = accountKeyInstance3;
                                                                        }
                                                                    }
                                                                }
                                                                
                                                                JToken containerValue3 = propertiesValue14["container"];
                                                                if (containerValue3 != null && containerValue3.Type != JTokenType.Null)
                                                                {
                                                                    string containerInstance3 = ((string)containerValue3);
                                                                    propertiesInstance13.Container = containerInstance3;
                                                                }
                                                                
                                                                JToken blobPathPrefixValue = propertiesValue14["blobPathPrefix"];
                                                                if (blobPathPrefixValue != null && blobPathPrefixValue.Type != JTokenType.Null)
                                                                {
                                                                    string blobPathPrefixInstance = ((string)blobPathPrefixValue);
                                                                    propertiesInstance13.BlobPathPrefix = blobPathPrefixInstance;
                                                                }
                                                            }
                                                            
                                                            JToken typeValue13 = datasourceValue3["type"];
                                                            if (typeValue13 != null && typeValue13.Type != JTokenType.Null)
                                                            {
                                                                string typeInstance13 = ((string)typeValue13);
                                                                blobOutputDataSourceInstance.Type = typeInstance13;
                                                            }
                                                            propertiesInstance12.DataSource = blobOutputDataSourceInstance;
                                                        }
                                                        if (typeName6 == "Microsoft.Storage/Table")
                                                        {
                                                            AzureTableOutputDataSource azureTableOutputDataSourceInstance = new AzureTableOutputDataSource();
                                                            
                                                            JToken propertiesValue15 = datasourceValue3["properties"];
                                                            if (propertiesValue15 != null && propertiesValue15.Type != JTokenType.Null)
                                                            {
                                                                AzureTableOutputDataSourceProperties propertiesInstance14 = new AzureTableOutputDataSourceProperties();
                                                                azureTableOutputDataSourceInstance.Properties = propertiesInstance14;
                                                                
                                                                JToken accountNameValue4 = propertiesValue15["accountName"];
                                                                if (accountNameValue4 != null && accountNameValue4.Type != JTokenType.Null)
                                                                {
                                                                    string accountNameInstance4 = ((string)accountNameValue4);
                                                                    propertiesInstance14.AccountName = accountNameInstance4;
                                                                }
                                                                
                                                                JToken accountKeyValue4 = propertiesValue15["accountKey"];
                                                                if (accountKeyValue4 != null && accountKeyValue4.Type != JTokenType.Null)
                                                                {
                                                                    string accountKeyInstance4 = ((string)accountKeyValue4);
                                                                    propertiesInstance14.AccountKey = accountKeyInstance4;
                                                                }
                                                                
                                                                JToken tableValue = propertiesValue15["table"];
                                                                if (tableValue != null && tableValue.Type != JTokenType.Null)
                                                                {
                                                                    string tableInstance = ((string)tableValue);
                                                                    propertiesInstance14.Table = tableInstance;
                                                                }
                                                                
                                                                JToken partitionKeyValue = propertiesValue15["partitionKey"];
                                                                if (partitionKeyValue != null && partitionKeyValue.Type != JTokenType.Null)
                                                                {
                                                                    string partitionKeyInstance = ((string)partitionKeyValue);
                                                                    propertiesInstance14.PartitionKey = partitionKeyInstance;
                                                                }
                                                                
                                                                JToken rowKeyValue = propertiesValue15["rowKey"];
                                                                if (rowKeyValue != null && rowKeyValue.Type != JTokenType.Null)
                                                                {
                                                                    string rowKeyInstance = ((string)rowKeyValue);
                                                                    propertiesInstance14.RowKey = rowKeyInstance;
                                                                }
                                                                
                                                                JToken columnsToRemoveArray = propertiesValue15["columnsToRemove"];
                                                                if (columnsToRemoveArray != null && columnsToRemoveArray.Type != JTokenType.Null)
                                                                {
                                                                    foreach (JToken columnsToRemoveValue in ((JArray)columnsToRemoveArray))
                                                                    {
                                                                        propertiesInstance14.ColumnsToRemove.Add(((string)columnsToRemoveValue));
                                                                    }
                                                                }
                                                                
                                                                JToken batchSizeValue = propertiesValue15["batchSize"];
                                                                if (batchSizeValue != null && batchSizeValue.Type != JTokenType.Null)
                                                                {
                                                                    int batchSizeInstance = ((int)batchSizeValue);
                                                                    propertiesInstance14.BatchSize = batchSizeInstance;
                                                                }
                                                            }
                                                            
                                                            JToken typeValue14 = datasourceValue3["type"];
                                                            if (typeValue14 != null && typeValue14.Type != JTokenType.Null)
                                                            {
                                                                string typeInstance14 = ((string)typeValue14);
                                                                azureTableOutputDataSourceInstance.Type = typeInstance14;
                                                            }
                                                            propertiesInstance12.DataSource = azureTableOutputDataSourceInstance;
                                                        }
                                                        if (typeName6 == "Microsoft.ServiceBus/EventHub")
                                                        {
                                                            EventHubOutputDataSource eventHubOutputDataSourceInstance = new EventHubOutputDataSource();
                                                            
                                                            JToken propertiesValue16 = datasourceValue3["properties"];
                                                            if (propertiesValue16 != null && propertiesValue16.Type != JTokenType.Null)
                                                            {
                                                                EventHubOutputDataSourceProperties propertiesInstance15 = new EventHubOutputDataSourceProperties();
                                                                eventHubOutputDataSourceInstance.Properties = propertiesInstance15;
                                                                
                                                                JToken serviceBusNamespaceValue2 = propertiesValue16["serviceBusNamespace"];
                                                                if (serviceBusNamespaceValue2 != null && serviceBusNamespaceValue2.Type != JTokenType.Null)
                                                                {
                                                                    string serviceBusNamespaceInstance2 = ((string)serviceBusNamespaceValue2);
                                                                    propertiesInstance15.ServiceBusNamespace = serviceBusNamespaceInstance2;
                                                                }
                                                                
                                                                JToken sharedAccessPolicyNameValue2 = propertiesValue16["sharedAccessPolicyName"];
                                                                if (sharedAccessPolicyNameValue2 != null && sharedAccessPolicyNameValue2.Type != JTokenType.Null)
                                                                {
                                                                    string sharedAccessPolicyNameInstance2 = ((string)sharedAccessPolicyNameValue2);
                                                                    propertiesInstance15.SharedAccessPolicyName = sharedAccessPolicyNameInstance2;
                                                                }
                                                                
                                                                JToken sharedAccessPolicyKeyValue2 = propertiesValue16["sharedAccessPolicyKey"];
                                                                if (sharedAccessPolicyKeyValue2 != null && sharedAccessPolicyKeyValue2.Type != JTokenType.Null)
                                                                {
                                                                    string sharedAccessPolicyKeyInstance2 = ((string)sharedAccessPolicyKeyValue2);
                                                                    propertiesInstance15.SharedAccessPolicyKey = sharedAccessPolicyKeyInstance2;
                                                                }
                                                                
                                                                JToken eventHubNameValue2 = propertiesValue16["eventHubName"];
                                                                if (eventHubNameValue2 != null && eventHubNameValue2.Type != JTokenType.Null)
                                                                {
                                                                    string eventHubNameInstance2 = ((string)eventHubNameValue2);
                                                                    propertiesInstance15.EventHubName = eventHubNameInstance2;
                                                                }
                                                                
                                                                JToken partitionKeyValue2 = propertiesValue16["partitionKey"];
                                                                if (partitionKeyValue2 != null && partitionKeyValue2.Type != JTokenType.Null)
                                                                {
                                                                    string partitionKeyInstance2 = ((string)partitionKeyValue2);
                                                                    propertiesInstance15.PartitionKey = partitionKeyInstance2;
                                                                }
                                                            }
                                                            
                                                            JToken typeValue15 = datasourceValue3["type"];
                                                            if (typeValue15 != null && typeValue15.Type != JTokenType.Null)
                                                            {
                                                                string typeInstance15 = ((string)typeValue15);
                                                                eventHubOutputDataSourceInstance.Type = typeInstance15;
                                                            }
                                                            propertiesInstance12.DataSource = eventHubOutputDataSourceInstance;
                                                        }
                                                        if (typeName6 == "Microsoft.Sql/Server/Database")
                                                        {
                                                            SqlAzureOutputDataSource sqlAzureOutputDataSourceInstance = new SqlAzureOutputDataSource();
                                                            
                                                            JToken propertiesValue17 = datasourceValue3["properties"];
                                                            if (propertiesValue17 != null && propertiesValue17.Type != JTokenType.Null)
                                                            {
                                                                SqlAzureOutputDataSourceProperties propertiesInstance16 = new SqlAzureOutputDataSourceProperties();
                                                                sqlAzureOutputDataSourceInstance.Properties = propertiesInstance16;
                                                                
                                                                JToken serverValue = propertiesValue17["server"];
                                                                if (serverValue != null && serverValue.Type != JTokenType.Null)
                                                                {
                                                                    string serverInstance = ((string)serverValue);
                                                                    propertiesInstance16.Server = serverInstance;
                                                                }
                                                                
                                                                JToken databaseValue = propertiesValue17["database"];
                                                                if (databaseValue != null && databaseValue.Type != JTokenType.Null)
                                                                {
                                                                    string databaseInstance = ((string)databaseValue);
                                                                    propertiesInstance16.Database = databaseInstance;
                                                                }
                                                                
                                                                JToken userValue = propertiesValue17["user"];
                                                                if (userValue != null && userValue.Type != JTokenType.Null)
                                                                {
                                                                    string userInstance = ((string)userValue);
                                                                    propertiesInstance16.User = userInstance;
                                                                }
                                                                
                                                                JToken passwordValue = propertiesValue17["password"];
                                                                if (passwordValue != null && passwordValue.Type != JTokenType.Null)
                                                                {
                                                                    string passwordInstance = ((string)passwordValue);
                                                                    propertiesInstance16.Password = passwordInstance;
                                                                }
                                                                
                                                                JToken tableValue2 = propertiesValue17["table"];
                                                                if (tableValue2 != null && tableValue2.Type != JTokenType.Null)
                                                                {
                                                                    string tableInstance2 = ((string)tableValue2);
                                                                    propertiesInstance16.Table = tableInstance2;
                                                                }
                                                            }
                                                            
                                                            JToken typeValue16 = datasourceValue3["type"];
                                                            if (typeValue16 != null && typeValue16.Type != JTokenType.Null)
                                                            {
                                                                string typeInstance16 = ((string)typeValue16);
                                                                sqlAzureOutputDataSourceInstance.Type = typeInstance16;
                                                            }
                                                            propertiesInstance12.DataSource = sqlAzureOutputDataSourceInstance;
                                                        }
                                                    }
                                                    
                                                    JToken serializationValue3 = propertiesValue13["serialization"];
                                                    if (serializationValue3 != null && serializationValue3.Type != JTokenType.Null)
                                                    {
                                                        string typeName7 = ((string)serializationValue3["type"]);
                                                        if (typeName7 == "Csv")
                                                        {
                                                            CsvSerialization csvSerializationInstance3 = new CsvSerialization();
                                                            
                                                            JToken propertiesValue18 = serializationValue3["properties"];
                                                            if (propertiesValue18 != null && propertiesValue18.Type != JTokenType.Null)
                                                            {
                                                                CsvSerializationProperties propertiesInstance17 = new CsvSerializationProperties();
                                                                csvSerializationInstance3.Properties = propertiesInstance17;
                                                                
                                                                JToken fieldDelimiterValue3 = propertiesValue18["fieldDelimiter"];
                                                                if (fieldDelimiterValue3 != null && fieldDelimiterValue3.Type != JTokenType.Null)
                                                                {
                                                                    string fieldDelimiterInstance3 = ((string)fieldDelimiterValue3);
                                                                    propertiesInstance17.FieldDelimiter = fieldDelimiterInstance3;
                                                                }
                                                                
                                                                JToken encodingValue5 = propertiesValue18["encoding"];
                                                                if (encodingValue5 != null && encodingValue5.Type != JTokenType.Null)
                                                                {
                                                                    string encodingInstance5 = ((string)encodingValue5);
                                                                    propertiesInstance17.Encoding = encodingInstance5;
                                                                }
                                                            }
                                                            
                                                            JToken typeValue17 = serializationValue3["type"];
                                                            if (typeValue17 != null && typeValue17.Type != JTokenType.Null)
                                                            {
                                                                string typeInstance17 = ((string)typeValue17);
                                                                csvSerializationInstance3.Type = typeInstance17;
                                                            }
                                                            propertiesInstance12.Serialization = csvSerializationInstance3;
                                                        }
                                                        if (typeName7 == "Json")
                                                        {
                                                            JsonSerialization jsonSerializationInstance3 = new JsonSerialization();
                                                            
                                                            JToken propertiesValue19 = serializationValue3["properties"];
                                                            if (propertiesValue19 != null && propertiesValue19.Type != JTokenType.Null)
                                                            {
                                                                JsonSerializationProperties propertiesInstance18 = new JsonSerializationProperties();
                                                                jsonSerializationInstance3.Properties = propertiesInstance18;
                                                                
                                                                JToken encodingValue6 = propertiesValue19["encoding"];
                                                                if (encodingValue6 != null && encodingValue6.Type != JTokenType.Null)
                                                                {
                                                                    string encodingInstance6 = ((string)encodingValue6);
                                                                    propertiesInstance18.Encoding = encodingInstance6;
                                                                }
                                                                
                                                                JToken formatValue3 = propertiesValue19["format"];
                                                                if (formatValue3 != null && formatValue3.Type != JTokenType.Null)
                                                                {
                                                                    string formatInstance3 = ((string)formatValue3);
                                                                    propertiesInstance18.Format = formatInstance3;
                                                                }
                                                            }
                                                            
                                                            JToken typeValue18 = serializationValue3["type"];
                                                            if (typeValue18 != null && typeValue18.Type != JTokenType.Null)
                                                            {
                                                                string typeInstance18 = ((string)typeValue18);
                                                                jsonSerializationInstance3.Type = typeInstance18;
                                                            }
                                                            propertiesInstance12.Serialization = jsonSerializationInstance3;
                                                        }
                                                        if (typeName7 == "Avro")
                                                        {
                                                            AvroSerialization avroSerializationInstance3 = new AvroSerialization();
                                                            
                                                            JToken propertiesValue20 = serializationValue3["properties"];
                                                            if (propertiesValue20 != null && propertiesValue20.Type != JTokenType.Null)
                                                            {
                                                                AvroSerializationProperties propertiesInstance19 = new AvroSerializationProperties();
                                                                avroSerializationInstance3.Properties = propertiesInstance19;
                                                            }
                                                            
                                                            JToken typeValue19 = serializationValue3["type"];
                                                            if (typeValue19 != null && typeValue19.Type != JTokenType.Null)
                                                            {
                                                                string typeInstance19 = ((string)typeValue19);
                                                                avroSerializationInstance3.Type = typeInstance19;
                                                            }
                                                            propertiesInstance12.Serialization = avroSerializationInstance3;
                                                        }
                                                    }
                                                    
                                                    JToken diagnosticsValue3 = propertiesValue13["diagnostics"];
                                                    if (diagnosticsValue3 != null && diagnosticsValue3.Type != JTokenType.Null)
                                                    {
                                                        Diagnostics diagnosticsInstance3 = new Diagnostics();
                                                        propertiesInstance12.Diagnostics = diagnosticsInstance3;
                                                        
                                                        JToken conditionsArray3 = diagnosticsValue3["conditions"];
                                                        if (conditionsArray3 != null && conditionsArray3.Type != JTokenType.Null)
                                                        {
                                                            foreach (JToken conditionsValue3 in ((JArray)conditionsArray3))
                                                            {
                                                                DiagnosticCondition diagnosticConditionInstance3 = new DiagnosticCondition();
                                                                diagnosticsInstance3.Conditions.Add(diagnosticConditionInstance3);
                                                                
                                                                JToken sinceValue3 = conditionsValue3["since"];
                                                                if (sinceValue3 != null && sinceValue3.Type != JTokenType.Null)
                                                                {
                                                                    DateTime sinceInstance3 = ((DateTime)sinceValue3);
                                                                    diagnosticConditionInstance3.Since = sinceInstance3;
                                                                }
                                                                
                                                                JToken codeValue3 = conditionsValue3["code"];
                                                                if (codeValue3 != null && codeValue3.Type != JTokenType.Null)
                                                                {
                                                                    string codeInstance3 = ((string)codeValue3);
                                                                    diagnosticConditionInstance3.Code = codeInstance3;
                                                                }
                                                                
                                                                JToken messageValue3 = conditionsValue3["message"];
                                                                if (messageValue3 != null && messageValue3.Type != JTokenType.Null)
                                                                {
                                                                    string messageInstance3 = ((string)messageValue3);
                                                                    diagnosticConditionInstance3.Message = messageInstance3;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            
                            JToken nextLinkValue = responseDoc["nextLink"];
                            if (nextLinkValue != null && nextLinkValue.Type != JTokenType.Null)
                            {
                                string nextLinkInstance = ((string)nextLinkValue);
                                result.NextLink = nextLinkInstance;
                            }
                        }
                        
                    }
                    result.StatusCode = statusCode;
                    if (httpResponse.Headers.Contains("Date"))
                    {
                        result.Date = DateTime.Parse(httpResponse.Headers.GetValues("Date").FirstOrDefault(), CultureInfo.InvariantCulture, DateTimeStyles.AdjustToUniversal).ToLocalTime();
                    }
                    if (httpResponse.Headers.Contains("x-ms-request-id"))
                    {
                        result.RequestId = httpResponse.Headers.GetValues("x-ms-request-id").FirstOrDefault();
                    }
                    
                    if (shouldTrace)
                    {
                        TracingAdapter.Exit(invocationId, result);
                    }
                    return result;
                }
                finally
                {
                    if (httpResponse != null)
                    {
                        httpResponse.Dispose();
                    }
                }
            }
            finally
            {
                if (httpRequest != null)
                {
                    httpRequest.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Update a stream analytics job.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// Required. The name of the stream analytics job.
        /// </param>
        /// <param name='parameters'>
        /// Required. The parameters required to update a stream analytics job.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response of the patch job operation.
        /// </returns>
        public async Task<JobPatchResponse> PatchAsync(string resourceGroupName, string jobName, JobPatchParameters parameters, CancellationToken cancellationToken)
        {
            // Validate
            if (resourceGroupName == null)
            {
                throw new ArgumentNullException("resourceGroupName");
            }
            if (jobName == null)
            {
                throw new ArgumentNullException("jobName");
            }
            if (parameters == null)
            {
                throw new ArgumentNullException("parameters");
            }
            if (parameters.JobPatchRequest == null)
            {
                throw new ArgumentNullException("parameters.JobPatchRequest");
            }
            if (parameters.JobPatchRequest.Properties != null)
            {
                if (parameters.JobPatchRequest.Properties.Inputs != null)
                {
                    foreach (Input inputsParameterItem in parameters.JobPatchRequest.Properties.Inputs)
                    {
                        if (inputsParameterItem.Name == null)
                        {
                            throw new ArgumentNullException("parameters.JobPatchRequest.Properties.Inputs.Name");
                        }
                    }
                }
                if (parameters.JobPatchRequest.Properties.Outputs != null)
                {
                    foreach (Output outputsParameterItem in parameters.JobPatchRequest.Properties.Outputs)
                    {
                        if (outputsParameterItem.Name == null)
                        {
                            throw new ArgumentNullException("parameters.JobPatchRequest.Properties.Outputs.Name");
                        }
                    }
                }
                if (parameters.JobPatchRequest.Properties.Transformation != null)
                {
                    if (parameters.JobPatchRequest.Properties.Transformation.Name == null)
                    {
                        throw new ArgumentNullException("parameters.JobPatchRequest.Properties.Transformation.Name");
                    }
                }
            }
            
            // Tracing
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("resourceGroupName", resourceGroupName);
                tracingParameters.Add("jobName", jobName);
                tracingParameters.Add("parameters", parameters);
                TracingAdapter.Enter(invocationId, this, "PatchAsync", tracingParameters);
            }
            
            // Construct URL
            string url = "";
            url = url + "/subscriptions/";
            if (this.Client.Credentials.SubscriptionId != null)
            {
                url = url + Uri.EscapeDataString(this.Client.Credentials.SubscriptionId);
            }
            url = url + "/resourcegroups/";
            url = url + Uri.EscapeDataString(resourceGroupName);
            url = url + "/providers/Microsoft.StreamAnalytics/streamingjobs/";
            url = url + Uri.EscapeDataString(jobName);
            List<string> queryParameters = new List<string>();
            queryParameters.Add("api-version=2015-04-01");
            if (queryParameters.Count > 0)
            {
                url = url + "?" + string.Join("&", queryParameters);
            }
            string baseUrl = this.Client.BaseUri.AbsoluteUri;
            // Trim '/' character from the end of baseUrl and beginning of url.
            if (baseUrl[baseUrl.Length - 1] == '/')
            {
                baseUrl = baseUrl.Substring(0, baseUrl.Length - 1);
            }
            if (url[0] == '/')
            {
                url = url.Substring(1);
            }
            url = baseUrl + "/" + url;
            url = url.Replace(" ", "%20");
            
            // Create HTTP transport objects
            HttpRequestMessage httpRequest = null;
            try
            {
                httpRequest = new HttpRequestMessage();
                httpRequest.Method = new HttpMethod("PATCH");
                httpRequest.RequestUri = new Uri(url);
                
                // Set Headers
                httpRequest.Headers.Add("x-ms-client-request-id", Guid.NewGuid().ToString());
                httpRequest.Headers.Add("x-ms-jobState-if-match", parameters.JobStateIfMatch);
                
                // Set Credentials
                cancellationToken.ThrowIfCancellationRequested();
                await this.Client.Credentials.ProcessHttpRequestAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                
                // Serialize Request
                string requestContent = null;
                JToken requestDoc = null;
                
                JObject jobPatchParametersValue = new JObject();
                requestDoc = jobPatchParametersValue;
                
                if (parameters.JobStateIfMatch != null)
                {
                    jobPatchParametersValue["JobStateIfMatch"] = JObject.Parse(parameters.JobStateIfMatch);
                }
                
                if (parameters.JobPatchRequest.Tags != null)
                {
                    if (parameters.JobPatchRequest.Tags is ILazyCollection == false || ((ILazyCollection)parameters.JobPatchRequest.Tags).IsInitialized)
                    {
                        JObject tagsDictionary = new JObject();
                        foreach (KeyValuePair<string, string> pair in parameters.JobPatchRequest.Tags)
                        {
                            string tagsKey = pair.Key;
                            string tagsValue = pair.Value;
                            tagsDictionary[tagsKey] = tagsValue;
                        }
                        jobPatchParametersValue["tags"] = tagsDictionary;
                    }
                }
                
                if (parameters.JobPatchRequest.Properties != null)
                {
                    JObject propertiesValue = new JObject();
                    jobPatchParametersValue["properties"] = propertiesValue;
                    
                    if (parameters.JobPatchRequest.Properties.Sku != null)
                    {
                        JObject skuValue = new JObject();
                        propertiesValue["sku"] = skuValue;
                        
                        if (parameters.JobPatchRequest.Properties.Sku.Name != null)
                        {
                            skuValue["name"] = parameters.JobPatchRequest.Properties.Sku.Name;
                        }
                    }
                    
                    if (parameters.JobPatchRequest.Properties.EventsOutOfOrderPolicy != null)
                    {
                        propertiesValue["eventsOutOfOrderPolicy"] = parameters.JobPatchRequest.Properties.EventsOutOfOrderPolicy;
                    }
                    
                    if (parameters.JobPatchRequest.Properties.EventsOutOfOrderMaxDelayInSeconds != null)
                    {
                        propertiesValue["eventsOutOfOrderMaxDelayInSeconds"] = parameters.JobPatchRequest.Properties.EventsOutOfOrderMaxDelayInSeconds.Value;
                    }
                    
                    if (parameters.JobPatchRequest.Properties.EventsLateArrivalMaxDelayInSeconds != null)
                    {
                        propertiesValue["eventsLateArrivalMaxDelayInSeconds"] = parameters.JobPatchRequest.Properties.EventsLateArrivalMaxDelayInSeconds.Value;
                    }
                    
                    if (parameters.JobPatchRequest.Properties.DataLocale != null)
                    {
                        propertiesValue["dataLocale"] = parameters.JobPatchRequest.Properties.DataLocale;
                    }
                    
                    if (parameters.JobPatchRequest.Properties.OutputStartMode != null)
                    {
                        propertiesValue["outputStartMode"] = parameters.JobPatchRequest.Properties.OutputStartMode;
                    }
                    
                    if (parameters.JobPatchRequest.Properties.OutputStartTime != null)
                    {
                        propertiesValue["outputStartTime"] = parameters.JobPatchRequest.Properties.OutputStartTime.Value;
                    }
                    
                    if (parameters.JobPatchRequest.Properties.LastOutputEventTime != null)
                    {
                        propertiesValue["lastOutputEventTime"] = parameters.JobPatchRequest.Properties.LastOutputEventTime.Value;
                    }
                    
                    if (parameters.JobPatchRequest.Properties.JobId != null)
                    {
                        propertiesValue["jobId"] = parameters.JobPatchRequest.Properties.JobId;
                    }
                    
                    if (parameters.JobPatchRequest.Properties.Etag != null)
                    {
                        propertiesValue["etag"] = parameters.JobPatchRequest.Properties.Etag;
                    }
                    
                    if (parameters.JobPatchRequest.Properties.ProvisioningState != null)
                    {
                        propertiesValue["provisioningState"] = parameters.JobPatchRequest.Properties.ProvisioningState;
                    }
                    
                    if (parameters.JobPatchRequest.Properties.JobState != null)
                    {
                        propertiesValue["jobState"] = parameters.JobPatchRequest.Properties.JobState;
                    }
                    
                    if (parameters.JobPatchRequest.Properties.CreatedDate != null)
                    {
                        propertiesValue["createdDate"] = parameters.JobPatchRequest.Properties.CreatedDate.Value;
                    }
                    
                    if (parameters.JobPatchRequest.Properties.Inputs != null)
                    {
                        if (parameters.JobPatchRequest.Properties.Inputs is ILazyCollection == false || ((ILazyCollection)parameters.JobPatchRequest.Properties.Inputs).IsInitialized)
                        {
                            JArray inputsArray = new JArray();
                            foreach (Input inputsItem in parameters.JobPatchRequest.Properties.Inputs)
                            {
                                JObject inputValue = new JObject();
                                inputsArray.Add(inputValue);
                                
                                inputValue["name"] = inputsItem.Name;
                                
                                if (inputsItem.Properties != null)
                                {
                                    JObject propertiesValue2 = new JObject();
                                    inputValue["properties"] = propertiesValue2;
                                    if (inputsItem.Properties is ReferenceInputProperties)
                                    {
                                        propertiesValue2["type"] = "Reference";
                                        ReferenceInputProperties derived = ((ReferenceInputProperties)inputsItem.Properties);
                                        
                                        if (derived.DataSource != null)
                                        {
                                            JObject datasourceValue = new JObject();
                                            propertiesValue2["datasource"] = datasourceValue;
                                            if (derived.DataSource is BlobReferenceInputDataSource)
                                            {
                                                datasourceValue["type"] = "Microsoft.Storage/Blob";
                                                BlobReferenceInputDataSource derived2 = ((BlobReferenceInputDataSource)derived.DataSource);
                                                
                                                if (derived2.Properties != null)
                                                {
                                                    JObject propertiesValue3 = new JObject();
                                                    datasourceValue["properties"] = propertiesValue3;
                                                    
                                                    if (derived2.Properties.StorageAccounts != null)
                                                    {
                                                        if (derived2.Properties.StorageAccounts is ILazyCollection == false || ((ILazyCollection)derived2.Properties.StorageAccounts).IsInitialized)
                                                        {
                                                            JArray storageAccountsArray = new JArray();
                                                            foreach (StorageAccount storageAccountsItem in derived2.Properties.StorageAccounts)
                                                            {
                                                                JObject storageAccountValue = new JObject();
                                                                storageAccountsArray.Add(storageAccountValue);
                                                                
                                                                if (storageAccountsItem.AccountName != null)
                                                                {
                                                                    storageAccountValue["accountName"] = storageAccountsItem.AccountName;
                                                                }
                                                                
                                                                if (storageAccountsItem.AccountKey != null)
                                                                {
                                                                    storageAccountValue["accountKey"] = storageAccountsItem.AccountKey;
                                                                }
                                                            }
                                                            propertiesValue3["storageAccounts"] = storageAccountsArray;
                                                        }
                                                    }
                                                    
                                                    if (derived2.Properties.Container != null)
                                                    {
                                                        propertiesValue3["container"] = derived2.Properties.Container;
                                                    }
                                                    
                                                    if (derived2.Properties.PathPattern != null)
                                                    {
                                                        propertiesValue3["pathPattern"] = derived2.Properties.PathPattern;
                                                    }
                                                    
                                                    if (derived2.Properties.DateFormat != null)
                                                    {
                                                        propertiesValue3["dateFormat"] = derived2.Properties.DateFormat;
                                                    }
                                                    
                                                    if (derived2.Properties.TimeFormat != null)
                                                    {
                                                        propertiesValue3["timeFormat"] = derived2.Properties.TimeFormat;
                                                    }
                                                }
                                                
                                                if (derived2.Type != null)
                                                {
                                                    datasourceValue["type"] = derived2.Type;
                                                }
                                            }
                                        }
                                        
                                        if (derived.Etag != null)
                                        {
                                            propertiesValue2["etag"] = derived.Etag;
                                        }
                                        
                                        if (derived.Type != null)
                                        {
                                            propertiesValue2["type"] = derived.Type;
                                        }
                                        
                                        if (derived.Serialization != null)
                                        {
                                            JObject serializationValue = new JObject();
                                            propertiesValue2["serialization"] = serializationValue;
                                            if (derived.Serialization is CsvSerialization)
                                            {
                                                serializationValue["type"] = "Csv";
                                                CsvSerialization derived3 = ((CsvSerialization)derived.Serialization);
                                                
                                                if (derived3.Properties != null)
                                                {
                                                    JObject propertiesValue4 = new JObject();
                                                    serializationValue["properties"] = propertiesValue4;
                                                    
                                                    if (derived3.Properties.FieldDelimiter != null)
                                                    {
                                                        propertiesValue4["fieldDelimiter"] = derived3.Properties.FieldDelimiter;
                                                    }
                                                    
                                                    if (derived3.Properties.Encoding != null)
                                                    {
                                                        propertiesValue4["encoding"] = derived3.Properties.Encoding;
                                                    }
                                                }
                                                
                                                if (derived3.Type != null)
                                                {
                                                    serializationValue["type"] = derived3.Type;
                                                }
                                            }
                                            if (derived.Serialization is JsonSerialization)
                                            {
                                                serializationValue["type"] = "Json";
                                                JsonSerialization derived4 = ((JsonSerialization)derived.Serialization);
                                                
                                                if (derived4.Properties != null)
                                                {
                                                    JObject propertiesValue5 = new JObject();
                                                    serializationValue["properties"] = propertiesValue5;
                                                    
                                                    if (derived4.Properties.Encoding != null)
                                                    {
                                                        propertiesValue5["encoding"] = derived4.Properties.Encoding;
                                                    }
                                                    
                                                    if (derived4.Properties.Format != null)
                                                    {
                                                        propertiesValue5["format"] = derived4.Properties.Format;
                                                    }
                                                }
                                                
                                                if (derived4.Type != null)
                                                {
                                                    serializationValue["type"] = derived4.Type;
                                                }
                                            }
                                            if (derived.Serialization is AvroSerialization)
                                            {
                                                serializationValue["type"] = "Avro";
                                                AvroSerialization derived5 = ((AvroSerialization)derived.Serialization);
                                                
                                                if (derived5.Properties != null)
                                                {
                                                    serializationValue["properties"] = derived5.Properties.ToString();
                                                }
                                                
                                                if (derived5.Type != null)
                                                {
                                                    serializationValue["type"] = derived5.Type;
                                                }
                                            }
                                        }
                                        
                                        if (derived.Diagnostics != null)
                                        {
                                            JObject diagnosticsValue = new JObject();
                                            propertiesValue2["diagnostics"] = diagnosticsValue;
                                            
                                            if (derived.Diagnostics.Conditions != null)
                                            {
                                                if (derived.Diagnostics.Conditions is ILazyCollection == false || ((ILazyCollection)derived.Diagnostics.Conditions).IsInitialized)
                                                {
                                                    JArray conditionsArray = new JArray();
                                                    foreach (DiagnosticCondition conditionsItem in derived.Diagnostics.Conditions)
                                                    {
                                                        JObject diagnosticConditionValue = new JObject();
                                                        conditionsArray.Add(diagnosticConditionValue);
                                                        
                                                        if (conditionsItem.Since != null)
                                                        {
                                                            diagnosticConditionValue["since"] = conditionsItem.Since.Value;
                                                        }
                                                        
                                                        if (conditionsItem.Code != null)
                                                        {
                                                            diagnosticConditionValue["code"] = conditionsItem.Code;
                                                        }
                                                        
                                                        if (conditionsItem.Message != null)
                                                        {
                                                            diagnosticConditionValue["message"] = conditionsItem.Message;
                                                        }
                                                    }
                                                    diagnosticsValue["conditions"] = conditionsArray;
                                                }
                                            }
                                        }
                                    }
                                    if (inputsItem.Properties is StreamInputProperties)
                                    {
                                        propertiesValue2["type"] = "Stream";
                                        StreamInputProperties derived6 = ((StreamInputProperties)inputsItem.Properties);
                                        
                                        if (derived6.DataSource != null)
                                        {
                                            JObject datasourceValue2 = new JObject();
                                            propertiesValue2["datasource"] = datasourceValue2;
                                            if (derived6.DataSource is BlobStreamInputDataSource)
                                            {
                                                datasourceValue2["type"] = "Microsoft.Storage/Blob";
                                                BlobStreamInputDataSource derived7 = ((BlobStreamInputDataSource)derived6.DataSource);
                                                
                                                if (derived7.Properties != null)
                                                {
                                                    JObject propertiesValue6 = new JObject();
                                                    datasourceValue2["properties"] = propertiesValue6;
                                                    
                                                    if (derived7.Properties.StorageAccounts != null)
                                                    {
                                                        if (derived7.Properties.StorageAccounts is ILazyCollection == false || ((ILazyCollection)derived7.Properties.StorageAccounts).IsInitialized)
                                                        {
                                                            JArray storageAccountsArray2 = new JArray();
                                                            foreach (StorageAccount storageAccountsItem2 in derived7.Properties.StorageAccounts)
                                                            {
                                                                JObject storageAccountValue2 = new JObject();
                                                                storageAccountsArray2.Add(storageAccountValue2);
                                                                
                                                                if (storageAccountsItem2.AccountName != null)
                                                                {
                                                                    storageAccountValue2["accountName"] = storageAccountsItem2.AccountName;
                                                                }
                                                                
                                                                if (storageAccountsItem2.AccountKey != null)
                                                                {
                                                                    storageAccountValue2["accountKey"] = storageAccountsItem2.AccountKey;
                                                                }
                                                            }
                                                            propertiesValue6["storageAccounts"] = storageAccountsArray2;
                                                        }
                                                    }
                                                    
                                                    if (derived7.Properties.Container != null)
                                                    {
                                                        propertiesValue6["container"] = derived7.Properties.Container;
                                                    }
                                                    
                                                    if (derived7.Properties.PathPattern != null)
                                                    {
                                                        propertiesValue6["pathPattern"] = derived7.Properties.PathPattern;
                                                    }
                                                    
                                                    if (derived7.Properties.DateFormat != null)
                                                    {
                                                        propertiesValue6["dateFormat"] = derived7.Properties.DateFormat;
                                                    }
                                                    
                                                    if (derived7.Properties.TimeFormat != null)
                                                    {
                                                        propertiesValue6["timeFormat"] = derived7.Properties.TimeFormat;
                                                    }
                                                    
                                                    if (derived7.Properties.SourcePartitionCount != null)
                                                    {
                                                        propertiesValue6["sourcePartitionCount"] = derived7.Properties.SourcePartitionCount.Value;
                                                    }
                                                }
                                                
                                                if (derived7.Type != null)
                                                {
                                                    datasourceValue2["type"] = derived7.Type;
                                                }
                                            }
                                            if (derived6.DataSource is EventHubStreamInputDataSource)
                                            {
                                                datasourceValue2["type"] = "Microsoft.ServiceBus/EventHub";
                                                EventHubStreamInputDataSource derived8 = ((EventHubStreamInputDataSource)derived6.DataSource);
                                                
                                                if (derived8.Properties != null)
                                                {
                                                    JObject propertiesValue7 = new JObject();
                                                    datasourceValue2["properties"] = propertiesValue7;
                                                    
                                                    if (derived8.Properties.ServiceBusNamespace != null)
                                                    {
                                                        propertiesValue7["serviceBusNamespace"] = derived8.Properties.ServiceBusNamespace;
                                                    }
                                                    
                                                    if (derived8.Properties.SharedAccessPolicyName != null)
                                                    {
                                                        propertiesValue7["sharedAccessPolicyName"] = derived8.Properties.SharedAccessPolicyName;
                                                    }
                                                    
                                                    if (derived8.Properties.SharedAccessPolicyKey != null)
                                                    {
                                                        propertiesValue7["sharedAccessPolicyKey"] = derived8.Properties.SharedAccessPolicyKey;
                                                    }
                                                    
                                                    if (derived8.Properties.EventHubName != null)
                                                    {
                                                        propertiesValue7["eventHubName"] = derived8.Properties.EventHubName;
                                                    }
                                                    
                                                    if (derived8.Properties.ConsumerGroupName != null)
                                                    {
                                                        propertiesValue7["consumerGroupName"] = derived8.Properties.ConsumerGroupName;
                                                    }
                                                }
                                                
                                                if (derived8.Type != null)
                                                {
                                                    datasourceValue2["type"] = derived8.Type;
                                                }
                                            }
                                        }
                                        
                                        if (derived6.Etag != null)
                                        {
                                            propertiesValue2["etag"] = derived6.Etag;
                                        }
                                        
                                        if (derived6.Type != null)
                                        {
                                            propertiesValue2["type"] = derived6.Type;
                                        }
                                        
                                        if (derived6.Serialization != null)
                                        {
                                            JObject serializationValue2 = new JObject();
                                            propertiesValue2["serialization"] = serializationValue2;
                                            if (derived6.Serialization is CsvSerialization)
                                            {
                                                serializationValue2["type"] = "Csv";
                                                CsvSerialization derived9 = ((CsvSerialization)derived6.Serialization);
                                                
                                                if (derived9.Properties != null)
                                                {
                                                    JObject propertiesValue8 = new JObject();
                                                    serializationValue2["properties"] = propertiesValue8;
                                                    
                                                    if (derived9.Properties.FieldDelimiter != null)
                                                    {
                                                        propertiesValue8["fieldDelimiter"] = derived9.Properties.FieldDelimiter;
                                                    }
                                                    
                                                    if (derived9.Properties.Encoding != null)
                                                    {
                                                        propertiesValue8["encoding"] = derived9.Properties.Encoding;
                                                    }
                                                }
                                                
                                                if (derived9.Type != null)
                                                {
                                                    serializationValue2["type"] = derived9.Type;
                                                }
                                            }
                                            if (derived6.Serialization is JsonSerialization)
                                            {
                                                serializationValue2["type"] = "Json";
                                                JsonSerialization derived10 = ((JsonSerialization)derived6.Serialization);
                                                
                                                if (derived10.Properties != null)
                                                {
                                                    JObject propertiesValue9 = new JObject();
                                                    serializationValue2["properties"] = propertiesValue9;
                                                    
                                                    if (derived10.Properties.Encoding != null)
                                                    {
                                                        propertiesValue9["encoding"] = derived10.Properties.Encoding;
                                                    }
                                                    
                                                    if (derived10.Properties.Format != null)
                                                    {
                                                        propertiesValue9["format"] = derived10.Properties.Format;
                                                    }
                                                }
                                                
                                                if (derived10.Type != null)
                                                {
                                                    serializationValue2["type"] = derived10.Type;
                                                }
                                            }
                                            if (derived6.Serialization is AvroSerialization)
                                            {
                                                serializationValue2["type"] = "Avro";
                                                AvroSerialization derived11 = ((AvroSerialization)derived6.Serialization);
                                                
                                                if (derived11.Properties != null)
                                                {
                                                    serializationValue2["properties"] = derived11.Properties.ToString();
                                                }
                                                
                                                if (derived11.Type != null)
                                                {
                                                    serializationValue2["type"] = derived11.Type;
                                                }
                                            }
                                        }
                                        
                                        if (derived6.Diagnostics != null)
                                        {
                                            JObject diagnosticsValue2 = new JObject();
                                            propertiesValue2["diagnostics"] = diagnosticsValue2;
                                            
                                            if (derived6.Diagnostics.Conditions != null)
                                            {
                                                if (derived6.Diagnostics.Conditions is ILazyCollection == false || ((ILazyCollection)derived6.Diagnostics.Conditions).IsInitialized)
                                                {
                                                    JArray conditionsArray2 = new JArray();
                                                    foreach (DiagnosticCondition conditionsItem2 in derived6.Diagnostics.Conditions)
                                                    {
                                                        JObject diagnosticConditionValue2 = new JObject();
                                                        conditionsArray2.Add(diagnosticConditionValue2);
                                                        
                                                        if (conditionsItem2.Since != null)
                                                        {
                                                            diagnosticConditionValue2["since"] = conditionsItem2.Since.Value;
                                                        }
                                                        
                                                        if (conditionsItem2.Code != null)
                                                        {
                                                            diagnosticConditionValue2["code"] = conditionsItem2.Code;
                                                        }
                                                        
                                                        if (conditionsItem2.Message != null)
                                                        {
                                                            diagnosticConditionValue2["message"] = conditionsItem2.Message;
                                                        }
                                                    }
                                                    diagnosticsValue2["conditions"] = conditionsArray2;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            propertiesValue["inputs"] = inputsArray;
                        }
                    }
                    
                    if (parameters.JobPatchRequest.Properties.Transformation != null)
                    {
                        JObject transformationValue = new JObject();
                        propertiesValue["transformation"] = transformationValue;
                        
                        transformationValue["name"] = parameters.JobPatchRequest.Properties.Transformation.Name;
                        
                        if (parameters.JobPatchRequest.Properties.Transformation.Properties != null)
                        {
                            JObject propertiesValue10 = new JObject();
                            transformationValue["properties"] = propertiesValue10;
                            
                            if (parameters.JobPatchRequest.Properties.Transformation.Properties.Etag != null)
                            {
                                propertiesValue10["etag"] = parameters.JobPatchRequest.Properties.Transformation.Properties.Etag;
                            }
                            
                            if (parameters.JobPatchRequest.Properties.Transformation.Properties.StreamingUnits != null)
                            {
                                propertiesValue10["streamingUnits"] = parameters.JobPatchRequest.Properties.Transformation.Properties.StreamingUnits.Value;
                            }
                            
                            if (parameters.JobPatchRequest.Properties.Transformation.Properties.Query != null)
                            {
                                propertiesValue10["query"] = parameters.JobPatchRequest.Properties.Transformation.Properties.Query;
                            }
                        }
                    }
                    
                    if (parameters.JobPatchRequest.Properties.Outputs != null)
                    {
                        if (parameters.JobPatchRequest.Properties.Outputs is ILazyCollection == false || ((ILazyCollection)parameters.JobPatchRequest.Properties.Outputs).IsInitialized)
                        {
                            JArray outputsArray = new JArray();
                            foreach (Output outputsItem in parameters.JobPatchRequest.Properties.Outputs)
                            {
                                JObject outputValue = new JObject();
                                outputsArray.Add(outputValue);
                                
                                outputValue["name"] = outputsItem.Name;
                                
                                if (outputsItem.Properties != null)
                                {
                                    JObject propertiesValue11 = new JObject();
                                    outputValue["properties"] = propertiesValue11;
                                    
                                    if (outputsItem.Properties.Etag != null)
                                    {
                                        propertiesValue11["etag"] = outputsItem.Properties.Etag;
                                    }
                                    
                                    if (outputsItem.Properties.DataSource != null)
                                    {
                                        JObject datasourceValue3 = new JObject();
                                        propertiesValue11["datasource"] = datasourceValue3;
                                        if (outputsItem.Properties.DataSource is BlobOutputDataSource)
                                        {
                                            datasourceValue3["type"] = "Microsoft.Storage/Blob";
                                            BlobOutputDataSource derived12 = ((BlobOutputDataSource)outputsItem.Properties.DataSource);
                                            
                                            if (derived12.Properties != null)
                                            {
                                                JObject propertiesValue12 = new JObject();
                                                datasourceValue3["properties"] = propertiesValue12;
                                                
                                                if (derived12.Properties.StorageAccounts != null)
                                                {
                                                    if (derived12.Properties.StorageAccounts is ILazyCollection == false || ((ILazyCollection)derived12.Properties.StorageAccounts).IsInitialized)
                                                    {
                                                        JArray storageAccountsArray3 = new JArray();
                                                        foreach (StorageAccount storageAccountsItem3 in derived12.Properties.StorageAccounts)
                                                        {
                                                            JObject storageAccountValue3 = new JObject();
                                                            storageAccountsArray3.Add(storageAccountValue3);
                                                            
                                                            if (storageAccountsItem3.AccountName != null)
                                                            {
                                                                storageAccountValue3["accountName"] = storageAccountsItem3.AccountName;
                                                            }
                                                            
                                                            if (storageAccountsItem3.AccountKey != null)
                                                            {
                                                                storageAccountValue3["accountKey"] = storageAccountsItem3.AccountKey;
                                                            }
                                                        }
                                                        propertiesValue12["storageAccounts"] = storageAccountsArray3;
                                                    }
                                                }
                                                
                                                if (derived12.Properties.Container != null)
                                                {
                                                    propertiesValue12["container"] = derived12.Properties.Container;
                                                }
                                                
                                                if (derived12.Properties.BlobPathPrefix != null)
                                                {
                                                    propertiesValue12["blobPathPrefix"] = derived12.Properties.BlobPathPrefix;
                                                }
                                            }
                                            
                                            if (derived12.Type != null)
                                            {
                                                datasourceValue3["type"] = derived12.Type;
                                            }
                                        }
                                        if (outputsItem.Properties.DataSource is AzureTableOutputDataSource)
                                        {
                                            datasourceValue3["type"] = "Microsoft.Storage/Table";
                                            AzureTableOutputDataSource derived13 = ((AzureTableOutputDataSource)outputsItem.Properties.DataSource);
                                            
                                            if (derived13.Properties != null)
                                            {
                                                JObject propertiesValue13 = new JObject();
                                                datasourceValue3["properties"] = propertiesValue13;
                                                
                                                if (derived13.Properties.AccountName != null)
                                                {
                                                    propertiesValue13["accountName"] = derived13.Properties.AccountName;
                                                }
                                                
                                                if (derived13.Properties.AccountKey != null)
                                                {
                                                    propertiesValue13["accountKey"] = derived13.Properties.AccountKey;
                                                }
                                                
                                                if (derived13.Properties.Table != null)
                                                {
                                                    propertiesValue13["table"] = derived13.Properties.Table;
                                                }
                                                
                                                if (derived13.Properties.PartitionKey != null)
                                                {
                                                    propertiesValue13["partitionKey"] = derived13.Properties.PartitionKey;
                                                }
                                                
                                                if (derived13.Properties.RowKey != null)
                                                {
                                                    propertiesValue13["rowKey"] = derived13.Properties.RowKey;
                                                }
                                                
                                                if (derived13.Properties.ColumnsToRemove != null)
                                                {
                                                    if (derived13.Properties.ColumnsToRemove is ILazyCollection == false || ((ILazyCollection)derived13.Properties.ColumnsToRemove).IsInitialized)
                                                    {
                                                        JArray columnsToRemoveArray = new JArray();
                                                        foreach (string columnsToRemoveItem in derived13.Properties.ColumnsToRemove)
                                                        {
                                                            columnsToRemoveArray.Add(columnsToRemoveItem);
                                                        }
                                                        propertiesValue13["columnsToRemove"] = columnsToRemoveArray;
                                                    }
                                                }
                                                
                                                if (derived13.Properties.BatchSize != null)
                                                {
                                                    propertiesValue13["batchSize"] = derived13.Properties.BatchSize.Value;
                                                }
                                            }
                                            
                                            if (derived13.Type != null)
                                            {
                                                datasourceValue3["type"] = derived13.Type;
                                            }
                                        }
                                        if (outputsItem.Properties.DataSource is EventHubOutputDataSource)
                                        {
                                            datasourceValue3["type"] = "Microsoft.ServiceBus/EventHub";
                                            EventHubOutputDataSource derived14 = ((EventHubOutputDataSource)outputsItem.Properties.DataSource);
                                            
                                            if (derived14.Properties != null)
                                            {
                                                JObject propertiesValue14 = new JObject();
                                                datasourceValue3["properties"] = propertiesValue14;
                                                
                                                if (derived14.Properties.ServiceBusNamespace != null)
                                                {
                                                    propertiesValue14["serviceBusNamespace"] = derived14.Properties.ServiceBusNamespace;
                                                }
                                                
                                                if (derived14.Properties.SharedAccessPolicyName != null)
                                                {
                                                    propertiesValue14["sharedAccessPolicyName"] = derived14.Properties.SharedAccessPolicyName;
                                                }
                                                
                                                if (derived14.Properties.SharedAccessPolicyKey != null)
                                                {
                                                    propertiesValue14["sharedAccessPolicyKey"] = derived14.Properties.SharedAccessPolicyKey;
                                                }
                                                
                                                if (derived14.Properties.EventHubName != null)
                                                {
                                                    propertiesValue14["eventHubName"] = derived14.Properties.EventHubName;
                                                }
                                                
                                                if (derived14.Properties.PartitionKey != null)
                                                {
                                                    propertiesValue14["partitionKey"] = derived14.Properties.PartitionKey;
                                                }
                                            }
                                            
                                            if (derived14.Type != null)
                                            {
                                                datasourceValue3["type"] = derived14.Type;
                                            }
                                        }
                                        if (outputsItem.Properties.DataSource is SqlAzureOutputDataSource)
                                        {
                                            datasourceValue3["type"] = "Microsoft.Sql/Server/Database";
                                            SqlAzureOutputDataSource derived15 = ((SqlAzureOutputDataSource)outputsItem.Properties.DataSource);
                                            
                                            if (derived15.Properties != null)
                                            {
                                                JObject propertiesValue15 = new JObject();
                                                datasourceValue3["properties"] = propertiesValue15;
                                                
                                                if (derived15.Properties.Server != null)
                                                {
                                                    propertiesValue15["server"] = derived15.Properties.Server;
                                                }
                                                
                                                if (derived15.Properties.Database != null)
                                                {
                                                    propertiesValue15["database"] = derived15.Properties.Database;
                                                }
                                                
                                                if (derived15.Properties.User != null)
                                                {
                                                    propertiesValue15["user"] = derived15.Properties.User;
                                                }
                                                
                                                if (derived15.Properties.Password != null)
                                                {
                                                    propertiesValue15["password"] = derived15.Properties.Password;
                                                }
                                                
                                                if (derived15.Properties.Table != null)
                                                {
                                                    propertiesValue15["table"] = derived15.Properties.Table;
                                                }
                                            }
                                            
                                            if (derived15.Type != null)
                                            {
                                                datasourceValue3["type"] = derived15.Type;
                                            }
                                        }
                                    }
                                    
                                    if (outputsItem.Properties.Serialization != null)
                                    {
                                        JObject serializationValue3 = new JObject();
                                        propertiesValue11["serialization"] = serializationValue3;
                                        if (outputsItem.Properties.Serialization is CsvSerialization)
                                        {
                                            serializationValue3["type"] = "Csv";
                                            CsvSerialization derived16 = ((CsvSerialization)outputsItem.Properties.Serialization);
                                            
                                            if (derived16.Properties != null)
                                            {
                                                JObject propertiesValue16 = new JObject();
                                                serializationValue3["properties"] = propertiesValue16;
                                                
                                                if (derived16.Properties.FieldDelimiter != null)
                                                {
                                                    propertiesValue16["fieldDelimiter"] = derived16.Properties.FieldDelimiter;
                                                }
                                                
                                                if (derived16.Properties.Encoding != null)
                                                {
                                                    propertiesValue16["encoding"] = derived16.Properties.Encoding;
                                                }
                                            }
                                            
                                            if (derived16.Type != null)
                                            {
                                                serializationValue3["type"] = derived16.Type;
                                            }
                                        }
                                        if (outputsItem.Properties.Serialization is JsonSerialization)
                                        {
                                            serializationValue3["type"] = "Json";
                                            JsonSerialization derived17 = ((JsonSerialization)outputsItem.Properties.Serialization);
                                            
                                            if (derived17.Properties != null)
                                            {
                                                JObject propertiesValue17 = new JObject();
                                                serializationValue3["properties"] = propertiesValue17;
                                                
                                                if (derived17.Properties.Encoding != null)
                                                {
                                                    propertiesValue17["encoding"] = derived17.Properties.Encoding;
                                                }
                                                
                                                if (derived17.Properties.Format != null)
                                                {
                                                    propertiesValue17["format"] = derived17.Properties.Format;
                                                }
                                            }
                                            
                                            if (derived17.Type != null)
                                            {
                                                serializationValue3["type"] = derived17.Type;
                                            }
                                        }
                                        if (outputsItem.Properties.Serialization is AvroSerialization)
                                        {
                                            serializationValue3["type"] = "Avro";
                                            AvroSerialization derived18 = ((AvroSerialization)outputsItem.Properties.Serialization);
                                            
                                            if (derived18.Properties != null)
                                            {
                                                serializationValue3["properties"] = derived18.Properties.ToString();
                                            }
                                            
                                            if (derived18.Type != null)
                                            {
                                                serializationValue3["type"] = derived18.Type;
                                            }
                                        }
                                    }
                                    
                                    if (outputsItem.Properties.Diagnostics != null)
                                    {
                                        JObject diagnosticsValue3 = new JObject();
                                        propertiesValue11["diagnostics"] = diagnosticsValue3;
                                        
                                        if (outputsItem.Properties.Diagnostics.Conditions != null)
                                        {
                                            if (outputsItem.Properties.Diagnostics.Conditions is ILazyCollection == false || ((ILazyCollection)outputsItem.Properties.Diagnostics.Conditions).IsInitialized)
                                            {
                                                JArray conditionsArray3 = new JArray();
                                                foreach (DiagnosticCondition conditionsItem3 in outputsItem.Properties.Diagnostics.Conditions)
                                                {
                                                    JObject diagnosticConditionValue3 = new JObject();
                                                    conditionsArray3.Add(diagnosticConditionValue3);
                                                    
                                                    if (conditionsItem3.Since != null)
                                                    {
                                                        diagnosticConditionValue3["since"] = conditionsItem3.Since.Value;
                                                    }
                                                    
                                                    if (conditionsItem3.Code != null)
                                                    {
                                                        diagnosticConditionValue3["code"] = conditionsItem3.Code;
                                                    }
                                                    
                                                    if (conditionsItem3.Message != null)
                                                    {
                                                        diagnosticConditionValue3["message"] = conditionsItem3.Message;
                                                    }
                                                }
                                                diagnosticsValue3["conditions"] = conditionsArray3;
                                            }
                                        }
                                    }
                                }
                            }
                            propertiesValue["outputs"] = outputsArray;
                        }
                    }
                }
                
                requestContent = requestDoc.ToString(Newtonsoft.Json.Formatting.Indented);
                httpRequest.Content = new StringContent(requestContent, Encoding.UTF8);
                httpRequest.Content.Headers.ContentType = MediaTypeHeaderValue.Parse("application/json");
                
                // Send Request
                HttpResponseMessage httpResponse = null;
                try
                {
                    if (shouldTrace)
                    {
                        TracingAdapter.SendRequest(invocationId, httpRequest);
                    }
                    cancellationToken.ThrowIfCancellationRequested();
                    httpResponse = await this.Client.HttpClient.SendAsync(httpRequest, cancellationToken).ConfigureAwait(false);
                    if (shouldTrace)
                    {
                        TracingAdapter.ReceiveResponse(invocationId, httpResponse);
                    }
                    HttpStatusCode statusCode = httpResponse.StatusCode;
                    if (statusCode != HttpStatusCode.OK)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        CloudException ex = CloudException.Create(httpRequest, requestContent, httpResponse, await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false));
                        if (shouldTrace)
                        {
                            TracingAdapter.Error(invocationId, ex);
                        }
                        throw ex;
                    }
                    
                    // Create Result
                    JobPatchResponse result = null;
                    // Deserialize Response
                    if (statusCode == HttpStatusCode.OK)
                    {
                        cancellationToken.ThrowIfCancellationRequested();
                        string responseContent = await httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false);
                        result = new JobPatchResponse();
                        JToken responseDoc = null;
                        if (string.IsNullOrEmpty(responseContent) == false)
                        {
                            responseDoc = JToken.Parse(responseContent);
                        }
                        
                        if (responseDoc != null && responseDoc.Type != JTokenType.Null)
                        {
                            Job jobInstance = new Job();
                            result.Job = jobInstance;
                            
                            JToken idValue = responseDoc["id"];
                            if (idValue != null && idValue.Type != JTokenType.Null)
                            {
                                string idInstance = ((string)idValue);
                                jobInstance.Id = idInstance;
                            }
                            
                            JToken nameValue = responseDoc["name"];
                            if (nameValue != null && nameValue.Type != JTokenType.Null)
                            {
                                string nameInstance = ((string)nameValue);
                                jobInstance.Name = nameInstance;
                            }
                            
                            JToken typeValue = responseDoc["type"];
                            if (typeValue != null && typeValue.Type != JTokenType.Null)
                            {
                                string typeInstance = ((string)typeValue);
                                jobInstance.Type = typeInstance;
                            }
                            
                            JToken locationValue = responseDoc["location"];
                            if (locationValue != null && locationValue.Type != JTokenType.Null)
                            {
                                string locationInstance = ((string)locationValue);
                                jobInstance.Location = locationInstance;
                            }
                            
                            JToken tagsSequenceElement = ((JToken)responseDoc["tags"]);
                            if (tagsSequenceElement != null && tagsSequenceElement.Type != JTokenType.Null)
                            {
                                foreach (JProperty property in tagsSequenceElement)
                                {
                                    string tagsKey2 = ((string)property.Name);
                                    string tagsValue2 = ((string)property.Value);
                                    jobInstance.Tags.Add(tagsKey2, tagsValue2);
                                }
                            }
                            
                            JToken propertiesValue18 = responseDoc["properties"];
                            if (propertiesValue18 != null && propertiesValue18.Type != JTokenType.Null)
                            {
                                JobProperties propertiesInstance = new JobProperties();
                                jobInstance.Properties = propertiesInstance;
                                
                                JToken skuValue2 = propertiesValue18["sku"];
                                if (skuValue2 != null && skuValue2.Type != JTokenType.Null)
                                {
                                    Sku skuInstance = new Sku();
                                    propertiesInstance.Sku = skuInstance;
                                    
                                    JToken nameValue2 = skuValue2["name"];
                                    if (nameValue2 != null && nameValue2.Type != JTokenType.Null)
                                    {
                                        string nameInstance2 = ((string)nameValue2);
                                        skuInstance.Name = nameInstance2;
                                    }
                                }
                                
                                JToken eventsOutOfOrderPolicyValue = propertiesValue18["eventsOutOfOrderPolicy"];
                                if (eventsOutOfOrderPolicyValue != null && eventsOutOfOrderPolicyValue.Type != JTokenType.Null)
                                {
                                    string eventsOutOfOrderPolicyInstance = ((string)eventsOutOfOrderPolicyValue);
                                    propertiesInstance.EventsOutOfOrderPolicy = eventsOutOfOrderPolicyInstance;
                                }
                                
                                JToken eventsOutOfOrderMaxDelayInSecondsValue = propertiesValue18["eventsOutOfOrderMaxDelayInSeconds"];
                                if (eventsOutOfOrderMaxDelayInSecondsValue != null && eventsOutOfOrderMaxDelayInSecondsValue.Type != JTokenType.Null)
                                {
                                    int eventsOutOfOrderMaxDelayInSecondsInstance = ((int)eventsOutOfOrderMaxDelayInSecondsValue);
                                    propertiesInstance.EventsOutOfOrderMaxDelayInSeconds = eventsOutOfOrderMaxDelayInSecondsInstance;
                                }
                                
                                JToken eventsLateArrivalMaxDelayInSecondsValue = propertiesValue18["eventsLateArrivalMaxDelayInSeconds"];
                                if (eventsLateArrivalMaxDelayInSecondsValue != null && eventsLateArrivalMaxDelayInSecondsValue.Type != JTokenType.Null)
                                {
                                    int eventsLateArrivalMaxDelayInSecondsInstance = ((int)eventsLateArrivalMaxDelayInSecondsValue);
                                    propertiesInstance.EventsLateArrivalMaxDelayInSeconds = eventsLateArrivalMaxDelayInSecondsInstance;
                                }
                                
                                JToken dataLocaleValue = propertiesValue18["dataLocale"];
                                if (dataLocaleValue != null && dataLocaleValue.Type != JTokenType.Null)
                                {
                                    string dataLocaleInstance = ((string)dataLocaleValue);
                                    propertiesInstance.DataLocale = dataLocaleInstance;
                                }
                                
                                JToken outputStartModeValue = propertiesValue18["outputStartMode"];
                                if (outputStartModeValue != null && outputStartModeValue.Type != JTokenType.Null)
                                {
                                    string outputStartModeInstance = ((string)outputStartModeValue);
                                    propertiesInstance.OutputStartMode = outputStartModeInstance;
                                }
                                
                                JToken outputStartTimeValue = propertiesValue18["outputStartTime"];
                                if (outputStartTimeValue != null && outputStartTimeValue.Type != JTokenType.Null)
                                {
                                    DateTime outputStartTimeInstance = ((DateTime)outputStartTimeValue);
                                    propertiesInstance.OutputStartTime = outputStartTimeInstance;
                                }
                                
                                JToken lastOutputEventTimeValue = propertiesValue18["lastOutputEventTime"];
                                if (lastOutputEventTimeValue != null && lastOutputEventTimeValue.Type != JTokenType.Null)
                                {
                                    DateTime lastOutputEventTimeInstance = ((DateTime)lastOutputEventTimeValue);
                                    propertiesInstance.LastOutputEventTime = lastOutputEventTimeInstance;
                                }
                                
                                JToken jobIdValue = propertiesValue18["jobId"];
                                if (jobIdValue != null && jobIdValue.Type != JTokenType.Null)
                                {
                                    string jobIdInstance = ((string)jobIdValue);
                                    propertiesInstance.JobId = jobIdInstance;
                                }
                                
                                JToken etagValue = propertiesValue18["etag"];
                                if (etagValue != null && etagValue.Type != JTokenType.Null)
                                {
                                    string etagInstance = ((string)etagValue);
                                    propertiesInstance.Etag = etagInstance;
                                }
                                
                                JToken provisioningStateValue = propertiesValue18["provisioningState"];
                                if (provisioningStateValue != null && provisioningStateValue.Type != JTokenType.Null)
                                {
                                    string provisioningStateInstance = ((string)provisioningStateValue);
                                    propertiesInstance.ProvisioningState = provisioningStateInstance;
                                }
                                
                                JToken jobStateValue = propertiesValue18["jobState"];
                                if (jobStateValue != null && jobStateValue.Type != JTokenType.Null)
                                {
                                    string jobStateInstance = ((string)jobStateValue);
                                    propertiesInstance.JobState = jobStateInstance;
                                }
                                
                                JToken createdDateValue = propertiesValue18["createdDate"];
                                if (createdDateValue != null && createdDateValue.Type != JTokenType.Null)
                                {
                                    DateTime createdDateInstance = ((DateTime)createdDateValue);
                                    propertiesInstance.CreatedDate = createdDateInstance;
                                }
                                
                                JToken inputsArray2 = propertiesValue18["inputs"];
                                if (inputsArray2 != null && inputsArray2.Type != JTokenType.Null)
                                {
                                    foreach (JToken inputsValue in ((JArray)inputsArray2))
                                    {
                                        Input inputInstance = new Input();
                                        propertiesInstance.Inputs.Add(inputInstance);
                                        
                                        JToken nameValue3 = inputsValue["name"];
                                        if (nameValue3 != null && nameValue3.Type != JTokenType.Null)
                                        {
                                            string nameInstance3 = ((string)nameValue3);
                                            inputInstance.Name = nameInstance3;
                                        }
                                        
                                        JToken propertiesValue19 = inputsValue["properties"];
                                        if (propertiesValue19 != null && propertiesValue19.Type != JTokenType.Null)
                                        {
                                            string typeName = ((string)propertiesValue19["type"]);
                                            if (typeName == "Reference")
                                            {
                                                ReferenceInputProperties referenceInputPropertiesInstance = new ReferenceInputProperties();
                                                
                                                JToken datasourceValue4 = propertiesValue19["datasource"];
                                                if (datasourceValue4 != null && datasourceValue4.Type != JTokenType.Null)
                                                {
                                                    string typeName2 = ((string)datasourceValue4["type"]);
                                                    if (typeName2 == "Microsoft.Storage/Blob")
                                                    {
                                                        BlobReferenceInputDataSource blobReferenceInputDataSourceInstance = new BlobReferenceInputDataSource();
                                                        
                                                        JToken propertiesValue20 = datasourceValue4["properties"];
                                                        if (propertiesValue20 != null && propertiesValue20.Type != JTokenType.Null)
                                                        {
                                                            BlobReferenceInputDataSourceProperties propertiesInstance2 = new BlobReferenceInputDataSourceProperties();
                                                            blobReferenceInputDataSourceInstance.Properties = propertiesInstance2;
                                                            
                                                            JToken storageAccountsArray4 = propertiesValue20["storageAccounts"];
                                                            if (storageAccountsArray4 != null && storageAccountsArray4.Type != JTokenType.Null)
                                                            {
                                                                foreach (JToken storageAccountsValue in ((JArray)storageAccountsArray4))
                                                                {
                                                                    StorageAccount storageAccountInstance = new StorageAccount();
                                                                    propertiesInstance2.StorageAccounts.Add(storageAccountInstance);
                                                                    
                                                                    JToken accountNameValue = storageAccountsValue["accountName"];
                                                                    if (accountNameValue != null && accountNameValue.Type != JTokenType.Null)
                                                                    {
                                                                        string accountNameInstance = ((string)accountNameValue);
                                                                        storageAccountInstance.AccountName = accountNameInstance;
                                                                    }
                                                                    
                                                                    JToken accountKeyValue = storageAccountsValue["accountKey"];
                                                                    if (accountKeyValue != null && accountKeyValue.Type != JTokenType.Null)
                                                                    {
                                                                        string accountKeyInstance = ((string)accountKeyValue);
                                                                        storageAccountInstance.AccountKey = accountKeyInstance;
                                                                    }
                                                                }
                                                            }
                                                            
                                                            JToken containerValue = propertiesValue20["container"];
                                                            if (containerValue != null && containerValue.Type != JTokenType.Null)
                                                            {
                                                                string containerInstance = ((string)containerValue);
                                                                propertiesInstance2.Container = containerInstance;
                                                            }
                                                            
                                                            JToken pathPatternValue = propertiesValue20["pathPattern"];
                                                            if (pathPatternValue != null && pathPatternValue.Type != JTokenType.Null)
                                                            {
                                                                string pathPatternInstance = ((string)pathPatternValue);
                                                                propertiesInstance2.PathPattern = pathPatternInstance;
                                                            }
                                                            
                                                            JToken dateFormatValue = propertiesValue20["dateFormat"];
                                                            if (dateFormatValue != null && dateFormatValue.Type != JTokenType.Null)
                                                            {
                                                                string dateFormatInstance = ((string)dateFormatValue);
                                                                propertiesInstance2.DateFormat = dateFormatInstance;
                                                            }
                                                            
                                                            JToken timeFormatValue = propertiesValue20["timeFormat"];
                                                            if (timeFormatValue != null && timeFormatValue.Type != JTokenType.Null)
                                                            {
                                                                string timeFormatInstance = ((string)timeFormatValue);
                                                                propertiesInstance2.TimeFormat = timeFormatInstance;
                                                            }
                                                        }
                                                        
                                                        JToken typeValue2 = datasourceValue4["type"];
                                                        if (typeValue2 != null && typeValue2.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance2 = ((string)typeValue2);
                                                            blobReferenceInputDataSourceInstance.Type = typeInstance2;
                                                        }
                                                        referenceInputPropertiesInstance.DataSource = blobReferenceInputDataSourceInstance;
                                                    }
                                                }
                                                
                                                JToken etagValue2 = propertiesValue19["etag"];
                                                if (etagValue2 != null && etagValue2.Type != JTokenType.Null)
                                                {
                                                    string etagInstance2 = ((string)etagValue2);
                                                    referenceInputPropertiesInstance.Etag = etagInstance2;
                                                }
                                                
                                                JToken typeValue3 = propertiesValue19["type"];
                                                if (typeValue3 != null && typeValue3.Type != JTokenType.Null)
                                                {
                                                    string typeInstance3 = ((string)typeValue3);
                                                    referenceInputPropertiesInstance.Type = typeInstance3;
                                                }
                                                
                                                JToken serializationValue4 = propertiesValue19["serialization"];
                                                if (serializationValue4 != null && serializationValue4.Type != JTokenType.Null)
                                                {
                                                    string typeName3 = ((string)serializationValue4["type"]);
                                                    if (typeName3 == "Csv")
                                                    {
                                                        CsvSerialization csvSerializationInstance = new CsvSerialization();
                                                        
                                                        JToken propertiesValue21 = serializationValue4["properties"];
                                                        if (propertiesValue21 != null && propertiesValue21.Type != JTokenType.Null)
                                                        {
                                                            CsvSerializationProperties propertiesInstance3 = new CsvSerializationProperties();
                                                            csvSerializationInstance.Properties = propertiesInstance3;
                                                            
                                                            JToken fieldDelimiterValue = propertiesValue21["fieldDelimiter"];
                                                            if (fieldDelimiterValue != null && fieldDelimiterValue.Type != JTokenType.Null)
                                                            {
                                                                string fieldDelimiterInstance = ((string)fieldDelimiterValue);
                                                                propertiesInstance3.FieldDelimiter = fieldDelimiterInstance;
                                                            }
                                                            
                                                            JToken encodingValue = propertiesValue21["encoding"];
                                                            if (encodingValue != null && encodingValue.Type != JTokenType.Null)
                                                            {
                                                                string encodingInstance = ((string)encodingValue);
                                                                propertiesInstance3.Encoding = encodingInstance;
                                                            }
                                                        }
                                                        
                                                        JToken typeValue4 = serializationValue4["type"];
                                                        if (typeValue4 != null && typeValue4.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance4 = ((string)typeValue4);
                                                            csvSerializationInstance.Type = typeInstance4;
                                                        }
                                                        referenceInputPropertiesInstance.Serialization = csvSerializationInstance;
                                                    }
                                                    if (typeName3 == "Json")
                                                    {
                                                        JsonSerialization jsonSerializationInstance = new JsonSerialization();
                                                        
                                                        JToken propertiesValue22 = serializationValue4["properties"];
                                                        if (propertiesValue22 != null && propertiesValue22.Type != JTokenType.Null)
                                                        {
                                                            JsonSerializationProperties propertiesInstance4 = new JsonSerializationProperties();
                                                            jsonSerializationInstance.Properties = propertiesInstance4;
                                                            
                                                            JToken encodingValue2 = propertiesValue22["encoding"];
                                                            if (encodingValue2 != null && encodingValue2.Type != JTokenType.Null)
                                                            {
                                                                string encodingInstance2 = ((string)encodingValue2);
                                                                propertiesInstance4.Encoding = encodingInstance2;
                                                            }
                                                            
                                                            JToken formatValue = propertiesValue22["format"];
                                                            if (formatValue != null && formatValue.Type != JTokenType.Null)
                                                            {
                                                                string formatInstance = ((string)formatValue);
                                                                propertiesInstance4.Format = formatInstance;
                                                            }
                                                        }
                                                        
                                                        JToken typeValue5 = serializationValue4["type"];
                                                        if (typeValue5 != null && typeValue5.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance5 = ((string)typeValue5);
                                                            jsonSerializationInstance.Type = typeInstance5;
                                                        }
                                                        referenceInputPropertiesInstance.Serialization = jsonSerializationInstance;
                                                    }
                                                    if (typeName3 == "Avro")
                                                    {
                                                        AvroSerialization avroSerializationInstance = new AvroSerialization();
                                                        
                                                        JToken propertiesValue23 = serializationValue4["properties"];
                                                        if (propertiesValue23 != null && propertiesValue23.Type != JTokenType.Null)
                                                        {
                                                            AvroSerializationProperties propertiesInstance5 = new AvroSerializationProperties();
                                                            avroSerializationInstance.Properties = propertiesInstance5;
                                                        }
                                                        
                                                        JToken typeValue6 = serializationValue4["type"];
                                                        if (typeValue6 != null && typeValue6.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance6 = ((string)typeValue6);
                                                            avroSerializationInstance.Type = typeInstance6;
                                                        }
                                                        referenceInputPropertiesInstance.Serialization = avroSerializationInstance;
                                                    }
                                                }
                                                
                                                JToken diagnosticsValue4 = propertiesValue19["diagnostics"];
                                                if (diagnosticsValue4 != null && diagnosticsValue4.Type != JTokenType.Null)
                                                {
                                                    Diagnostics diagnosticsInstance = new Diagnostics();
                                                    referenceInputPropertiesInstance.Diagnostics = diagnosticsInstance;
                                                    
                                                    JToken conditionsArray4 = diagnosticsValue4["conditions"];
                                                    if (conditionsArray4 != null && conditionsArray4.Type != JTokenType.Null)
                                                    {
                                                        foreach (JToken conditionsValue in ((JArray)conditionsArray4))
                                                        {
                                                            DiagnosticCondition diagnosticConditionInstance = new DiagnosticCondition();
                                                            diagnosticsInstance.Conditions.Add(diagnosticConditionInstance);
                                                            
                                                            JToken sinceValue = conditionsValue["since"];
                                                            if (sinceValue != null && sinceValue.Type != JTokenType.Null)
                                                            {
                                                                DateTime sinceInstance = ((DateTime)sinceValue);
                                                                diagnosticConditionInstance.Since = sinceInstance;
                                                            }
                                                            
                                                            JToken codeValue = conditionsValue["code"];
                                                            if (codeValue != null && codeValue.Type != JTokenType.Null)
                                                            {
                                                                string codeInstance = ((string)codeValue);
                                                                diagnosticConditionInstance.Code = codeInstance;
                                                            }
                                                            
                                                            JToken messageValue = conditionsValue["message"];
                                                            if (messageValue != null && messageValue.Type != JTokenType.Null)
                                                            {
                                                                string messageInstance = ((string)messageValue);
                                                                diagnosticConditionInstance.Message = messageInstance;
                                                            }
                                                        }
                                                    }
                                                }
                                                inputInstance.Properties = referenceInputPropertiesInstance;
                                            }
                                            if (typeName == "Stream")
                                            {
                                                StreamInputProperties streamInputPropertiesInstance = new StreamInputProperties();
                                                
                                                JToken datasourceValue5 = propertiesValue19["datasource"];
                                                if (datasourceValue5 != null && datasourceValue5.Type != JTokenType.Null)
                                                {
                                                    string typeName4 = ((string)datasourceValue5["type"]);
                                                    if (typeName4 == "Microsoft.Storage/Blob")
                                                    {
                                                        BlobStreamInputDataSource blobStreamInputDataSourceInstance = new BlobStreamInputDataSource();
                                                        
                                                        JToken propertiesValue24 = datasourceValue5["properties"];
                                                        if (propertiesValue24 != null && propertiesValue24.Type != JTokenType.Null)
                                                        {
                                                            BlobStreamInputDataSourceProperties propertiesInstance6 = new BlobStreamInputDataSourceProperties();
                                                            blobStreamInputDataSourceInstance.Properties = propertiesInstance6;
                                                            
                                                            JToken storageAccountsArray5 = propertiesValue24["storageAccounts"];
                                                            if (storageAccountsArray5 != null && storageAccountsArray5.Type != JTokenType.Null)
                                                            {
                                                                foreach (JToken storageAccountsValue2 in ((JArray)storageAccountsArray5))
                                                                {
                                                                    StorageAccount storageAccountInstance2 = new StorageAccount();
                                                                    propertiesInstance6.StorageAccounts.Add(storageAccountInstance2);
                                                                    
                                                                    JToken accountNameValue2 = storageAccountsValue2["accountName"];
                                                                    if (accountNameValue2 != null && accountNameValue2.Type != JTokenType.Null)
                                                                    {
                                                                        string accountNameInstance2 = ((string)accountNameValue2);
                                                                        storageAccountInstance2.AccountName = accountNameInstance2;
                                                                    }
                                                                    
                                                                    JToken accountKeyValue2 = storageAccountsValue2["accountKey"];
                                                                    if (accountKeyValue2 != null && accountKeyValue2.Type != JTokenType.Null)
                                                                    {
                                                                        string accountKeyInstance2 = ((string)accountKeyValue2);
                                                                        storageAccountInstance2.AccountKey = accountKeyInstance2;
                                                                    }
                                                                }
                                                            }
                                                            
                                                            JToken containerValue2 = propertiesValue24["container"];
                                                            if (containerValue2 != null && containerValue2.Type != JTokenType.Null)
                                                            {
                                                                string containerInstance2 = ((string)containerValue2);
                                                                propertiesInstance6.Container = containerInstance2;
                                                            }
                                                            
                                                            JToken pathPatternValue2 = propertiesValue24["pathPattern"];
                                                            if (pathPatternValue2 != null && pathPatternValue2.Type != JTokenType.Null)
                                                            {
                                                                string pathPatternInstance2 = ((string)pathPatternValue2);
                                                                propertiesInstance6.PathPattern = pathPatternInstance2;
                                                            }
                                                            
                                                            JToken dateFormatValue2 = propertiesValue24["dateFormat"];
                                                            if (dateFormatValue2 != null && dateFormatValue2.Type != JTokenType.Null)
                                                            {
                                                                string dateFormatInstance2 = ((string)dateFormatValue2);
                                                                propertiesInstance6.DateFormat = dateFormatInstance2;
                                                            }
                                                            
                                                            JToken timeFormatValue2 = propertiesValue24["timeFormat"];
                                                            if (timeFormatValue2 != null && timeFormatValue2.Type != JTokenType.Null)
                                                            {
                                                                string timeFormatInstance2 = ((string)timeFormatValue2);
                                                                propertiesInstance6.TimeFormat = timeFormatInstance2;
                                                            }
                                                            
                                                            JToken sourcePartitionCountValue = propertiesValue24["sourcePartitionCount"];
                                                            if (sourcePartitionCountValue != null && sourcePartitionCountValue.Type != JTokenType.Null)
                                                            {
                                                                int sourcePartitionCountInstance = ((int)sourcePartitionCountValue);
                                                                propertiesInstance6.SourcePartitionCount = sourcePartitionCountInstance;
                                                            }
                                                        }
                                                        
                                                        JToken typeValue7 = datasourceValue5["type"];
                                                        if (typeValue7 != null && typeValue7.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance7 = ((string)typeValue7);
                                                            blobStreamInputDataSourceInstance.Type = typeInstance7;
                                                        }
                                                        streamInputPropertiesInstance.DataSource = blobStreamInputDataSourceInstance;
                                                    }
                                                    if (typeName4 == "Microsoft.ServiceBus/EventHub")
                                                    {
                                                        EventHubStreamInputDataSource eventHubStreamInputDataSourceInstance = new EventHubStreamInputDataSource();
                                                        
                                                        JToken propertiesValue25 = datasourceValue5["properties"];
                                                        if (propertiesValue25 != null && propertiesValue25.Type != JTokenType.Null)
                                                        {
                                                            EventHubStreamInputDataSourceProperties propertiesInstance7 = new EventHubStreamInputDataSourceProperties();
                                                            eventHubStreamInputDataSourceInstance.Properties = propertiesInstance7;
                                                            
                                                            JToken serviceBusNamespaceValue = propertiesValue25["serviceBusNamespace"];
                                                            if (serviceBusNamespaceValue != null && serviceBusNamespaceValue.Type != JTokenType.Null)
                                                            {
                                                                string serviceBusNamespaceInstance = ((string)serviceBusNamespaceValue);
                                                                propertiesInstance7.ServiceBusNamespace = serviceBusNamespaceInstance;
                                                            }
                                                            
                                                            JToken sharedAccessPolicyNameValue = propertiesValue25["sharedAccessPolicyName"];
                                                            if (sharedAccessPolicyNameValue != null && sharedAccessPolicyNameValue.Type != JTokenType.Null)
                                                            {
                                                                string sharedAccessPolicyNameInstance = ((string)sharedAccessPolicyNameValue);
                                                                propertiesInstance7.SharedAccessPolicyName = sharedAccessPolicyNameInstance;
                                                            }
                                                            
                                                            JToken sharedAccessPolicyKeyValue = propertiesValue25["sharedAccessPolicyKey"];
                                                            if (sharedAccessPolicyKeyValue != null && sharedAccessPolicyKeyValue.Type != JTokenType.Null)
                                                            {
                                                                string sharedAccessPolicyKeyInstance = ((string)sharedAccessPolicyKeyValue);
                                                                propertiesInstance7.SharedAccessPolicyKey = sharedAccessPolicyKeyInstance;
                                                            }
                                                            
                                                            JToken eventHubNameValue = propertiesValue25["eventHubName"];
                                                            if (eventHubNameValue != null && eventHubNameValue.Type != JTokenType.Null)
                                                            {
                                                                string eventHubNameInstance = ((string)eventHubNameValue);
                                                                propertiesInstance7.EventHubName = eventHubNameInstance;
                                                            }
                                                            
                                                            JToken consumerGroupNameValue = propertiesValue25["consumerGroupName"];
                                                            if (consumerGroupNameValue != null && consumerGroupNameValue.Type != JTokenType.Null)
                                                            {
                                                                string consumerGroupNameInstance = ((string)consumerGroupNameValue);
                                                                propertiesInstance7.ConsumerGroupName = consumerGroupNameInstance;
                                                            }
                                                        }
                                                        
                                                        JToken typeValue8 = datasourceValue5["type"];
                                                        if (typeValue8 != null && typeValue8.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance8 = ((string)typeValue8);
                                                            eventHubStreamInputDataSourceInstance.Type = typeInstance8;
                                                        }
                                                        streamInputPropertiesInstance.DataSource = eventHubStreamInputDataSourceInstance;
                                                    }
                                                }
                                                
                                                JToken etagValue3 = propertiesValue19["etag"];
                                                if (etagValue3 != null && etagValue3.Type != JTokenType.Null)
                                                {
                                                    string etagInstance3 = ((string)etagValue3);
                                                    streamInputPropertiesInstance.Etag = etagInstance3;
                                                }
                                                
                                                JToken typeValue9 = propertiesValue19["type"];
                                                if (typeValue9 != null && typeValue9.Type != JTokenType.Null)
                                                {
                                                    string typeInstance9 = ((string)typeValue9);
                                                    streamInputPropertiesInstance.Type = typeInstance9;
                                                }
                                                
                                                JToken serializationValue5 = propertiesValue19["serialization"];
                                                if (serializationValue5 != null && serializationValue5.Type != JTokenType.Null)
                                                {
                                                    string typeName5 = ((string)serializationValue5["type"]);
                                                    if (typeName5 == "Csv")
                                                    {
                                                        CsvSerialization csvSerializationInstance2 = new CsvSerialization();
                                                        
                                                        JToken propertiesValue26 = serializationValue5["properties"];
                                                        if (propertiesValue26 != null && propertiesValue26.Type != JTokenType.Null)
                                                        {
                                                            CsvSerializationProperties propertiesInstance8 = new CsvSerializationProperties();
                                                            csvSerializationInstance2.Properties = propertiesInstance8;
                                                            
                                                            JToken fieldDelimiterValue2 = propertiesValue26["fieldDelimiter"];
                                                            if (fieldDelimiterValue2 != null && fieldDelimiterValue2.Type != JTokenType.Null)
                                                            {
                                                                string fieldDelimiterInstance2 = ((string)fieldDelimiterValue2);
                                                                propertiesInstance8.FieldDelimiter = fieldDelimiterInstance2;
                                                            }
                                                            
                                                            JToken encodingValue3 = propertiesValue26["encoding"];
                                                            if (encodingValue3 != null && encodingValue3.Type != JTokenType.Null)
                                                            {
                                                                string encodingInstance3 = ((string)encodingValue3);
                                                                propertiesInstance8.Encoding = encodingInstance3;
                                                            }
                                                        }
                                                        
                                                        JToken typeValue10 = serializationValue5["type"];
                                                        if (typeValue10 != null && typeValue10.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance10 = ((string)typeValue10);
                                                            csvSerializationInstance2.Type = typeInstance10;
                                                        }
                                                        streamInputPropertiesInstance.Serialization = csvSerializationInstance2;
                                                    }
                                                    if (typeName5 == "Json")
                                                    {
                                                        JsonSerialization jsonSerializationInstance2 = new JsonSerialization();
                                                        
                                                        JToken propertiesValue27 = serializationValue5["properties"];
                                                        if (propertiesValue27 != null && propertiesValue27.Type != JTokenType.Null)
                                                        {
                                                            JsonSerializationProperties propertiesInstance9 = new JsonSerializationProperties();
                                                            jsonSerializationInstance2.Properties = propertiesInstance9;
                                                            
                                                            JToken encodingValue4 = propertiesValue27["encoding"];
                                                            if (encodingValue4 != null && encodingValue4.Type != JTokenType.Null)
                                                            {
                                                                string encodingInstance4 = ((string)encodingValue4);
                                                                propertiesInstance9.Encoding = encodingInstance4;
                                                            }
                                                            
                                                            JToken formatValue2 = propertiesValue27["format"];
                                                            if (formatValue2 != null && formatValue2.Type != JTokenType.Null)
                                                            {
                                                                string formatInstance2 = ((string)formatValue2);
                                                                propertiesInstance9.Format = formatInstance2;
                                                            }
                                                        }
                                                        
                                                        JToken typeValue11 = serializationValue5["type"];
                                                        if (typeValue11 != null && typeValue11.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance11 = ((string)typeValue11);
                                                            jsonSerializationInstance2.Type = typeInstance11;
                                                        }
                                                        streamInputPropertiesInstance.Serialization = jsonSerializationInstance2;
                                                    }
                                                    if (typeName5 == "Avro")
                                                    {
                                                        AvroSerialization avroSerializationInstance2 = new AvroSerialization();
                                                        
                                                        JToken propertiesValue28 = serializationValue5["properties"];
                                                        if (propertiesValue28 != null && propertiesValue28.Type != JTokenType.Null)
                                                        {
                                                            AvroSerializationProperties propertiesInstance10 = new AvroSerializationProperties();
                                                            avroSerializationInstance2.Properties = propertiesInstance10;
                                                        }
                                                        
                                                        JToken typeValue12 = serializationValue5["type"];
                                                        if (typeValue12 != null && typeValue12.Type != JTokenType.Null)
                                                        {
                                                            string typeInstance12 = ((string)typeValue12);
                                                            avroSerializationInstance2.Type = typeInstance12;
                                                        }
                                                        streamInputPropertiesInstance.Serialization = avroSerializationInstance2;
                                                    }
                                                }
                                                
                                                JToken diagnosticsValue5 = propertiesValue19["diagnostics"];
                                                if (diagnosticsValue5 != null && diagnosticsValue5.Type != JTokenType.Null)
                                                {
                                                    Diagnostics diagnosticsInstance2 = new Diagnostics();
                                                    streamInputPropertiesInstance.Diagnostics = diagnosticsInstance2;
                                                    
                                                    JToken conditionsArray5 = diagnosticsValue5["conditions"];
                                                    if (conditionsArray5 != null && conditionsArray5.Type != JTokenType.Null)
                                                    {
                                                        foreach (JToken conditionsValue2 in ((JArray)conditionsArray5))
                                                        {
                                                            DiagnosticCondition diagnosticConditionInstance2 = new DiagnosticCondition();
                                                            diagnosticsInstance2.Conditions.Add(diagnosticConditionInstance2);
                                                            
                                                            JToken sinceValue2 = conditionsValue2["since"];
                                                            if (sinceValue2 != null && sinceValue2.Type != JTokenType.Null)
                                                            {
                                                                DateTime sinceInstance2 = ((DateTime)sinceValue2);
                                                                diagnosticConditionInstance2.Since = sinceInstance2;
                                                            }
                                                            
                                                            JToken codeValue2 = conditionsValue2["code"];
                                                            if (codeValue2 != null && codeValue2.Type != JTokenType.Null)
                                                            {
                                                                string codeInstance2 = ((string)codeValue2);
                                                                diagnosticConditionInstance2.Code = codeInstance2;
                                                            }
                                                            
                                                            JToken messageValue2 = conditionsValue2["message"];
                                                            if (messageValue2 != null && messageValue2.Type != JTokenType.Null)
                                                            {
                                                                string messageInstance2 = ((string)messageValue2);
                                                                diagnosticConditionInstance2.Message = messageInstance2;
                                                            }
                                                        }
                                                    }
                                                }
                                                inputInstance.Properties = streamInputPropertiesInstance;
                                            }
                                        }
                                    }
                                }
                                
                                JToken transformationValue2 = propertiesValue18["transformation"];
                                if (transformationValue2 != null && transformationValue2.Type != JTokenType.Null)
                                {
                                    Transformation transformationInstance = new Transformation();
                                    propertiesInstance.Transformation = transformationInstance;
                                    
                                    JToken nameValue4 = transformationValue2["name"];
                                    if (nameValue4 != null && nameValue4.Type != JTokenType.Null)
                                    {
                                        string nameInstance4 = ((string)nameValue4);
                                        transformationInstance.Name = nameInstance4;
                                    }
                                    
                                    JToken propertiesValue29 = transformationValue2["properties"];
                                    if (propertiesValue29 != null && propertiesValue29.Type != JTokenType.Null)
                                    {
                                        TransformationProperties propertiesInstance11 = new TransformationProperties();
                                        transformationInstance.Properties = propertiesInstance11;
                                        
                                        JToken etagValue4 = propertiesValue29["etag"];
                                        if (etagValue4 != null && etagValue4.Type != JTokenType.Null)
                                        {
                                            string etagInstance4 = ((string)etagValue4);
                                            propertiesInstance11.Etag = etagInstance4;
                                        }
                                        
                                        JToken streamingUnitsValue = propertiesValue29["streamingUnits"];
                                        if (streamingUnitsValue != null && streamingUnitsValue.Type != JTokenType.Null)
                                        {
                                            int streamingUnitsInstance = ((int)streamingUnitsValue);
                                            propertiesInstance11.StreamingUnits = streamingUnitsInstance;
                                        }
                                        
                                        JToken queryValue = propertiesValue29["query"];
                                        if (queryValue != null && queryValue.Type != JTokenType.Null)
                                        {
                                            string queryInstance = ((string)queryValue);
                                            propertiesInstance11.Query = queryInstance;
                                        }
                                    }
                                }
                                
                                JToken outputsArray2 = propertiesValue18["outputs"];
                                if (outputsArray2 != null && outputsArray2.Type != JTokenType.Null)
                                {
                                    foreach (JToken outputsValue in ((JArray)outputsArray2))
                                    {
                                        Output outputInstance = new Output();
                                        propertiesInstance.Outputs.Add(outputInstance);
                                        
                                        JToken nameValue5 = outputsValue["name"];
                                        if (nameValue5 != null && nameValue5.Type != JTokenType.Null)
                                        {
                                            string nameInstance5 = ((string)nameValue5);
                                            outputInstance.Name = nameInstance5;
                                        }
                                        
                                        JToken propertiesValue30 = outputsValue["properties"];
                                        if (propertiesValue30 != null && propertiesValue30.Type != JTokenType.Null)
                                        {
                                            OutputProperties propertiesInstance12 = new OutputProperties();
                                            outputInstance.Properties = propertiesInstance12;
                                            
                                            JToken etagValue5 = propertiesValue30["etag"];
                                            if (etagValue5 != null && etagValue5.Type != JTokenType.Null)
                                            {
                                                string etagInstance5 = ((string)etagValue5);
                                                propertiesInstance12.Etag = etagInstance5;
                                            }
                                            
                                            JToken datasourceValue6 = propertiesValue30["datasource"];
                                            if (datasourceValue6 != null && datasourceValue6.Type != JTokenType.Null)
                                            {
                                                string typeName6 = ((string)datasourceValue6["type"]);
                                                if (typeName6 == "Microsoft.Storage/Blob")
                                                {
                                                    BlobOutputDataSource blobOutputDataSourceInstance = new BlobOutputDataSource();
                                                    
                                                    JToken propertiesValue31 = datasourceValue6["properties"];
                                                    if (propertiesValue31 != null && propertiesValue31.Type != JTokenType.Null)
                                                    {
                                                        BlobOutputDataSourceProperties propertiesInstance13 = new BlobOutputDataSourceProperties();
                                                        blobOutputDataSourceInstance.Properties = propertiesInstance13;
                                                        
                                                        JToken storageAccountsArray6 = propertiesValue31["storageAccounts"];
                                                        if (storageAccountsArray6 != null && storageAccountsArray6.Type != JTokenType.Null)
                                                        {
                                                            foreach (JToken storageAccountsValue3 in ((JArray)storageAccountsArray6))
                                                            {
                                                                StorageAccount storageAccountInstance3 = new StorageAccount();
                                                                propertiesInstance13.StorageAccounts.Add(storageAccountInstance3);
                                                                
                                                                JToken accountNameValue3 = storageAccountsValue3["accountName"];
                                                                if (accountNameValue3 != null && accountNameValue3.Type != JTokenType.Null)
                                                                {
                                                                    string accountNameInstance3 = ((string)accountNameValue3);
                                                                    storageAccountInstance3.AccountName = accountNameInstance3;
                                                                }
                                                                
                                                                JToken accountKeyValue3 = storageAccountsValue3["accountKey"];
                                                                if (accountKeyValue3 != null && accountKeyValue3.Type != JTokenType.Null)
                                                                {
                                                                    string accountKeyInstance3 = ((string)accountKeyValue3);
                                                                    storageAccountInstance3.AccountKey = accountKeyInstance3;
                                                                }
                                                            }
                                                        }
                                                        
                                                        JToken containerValue3 = propertiesValue31["container"];
                                                        if (containerValue3 != null && containerValue3.Type != JTokenType.Null)
                                                        {
                                                            string containerInstance3 = ((string)containerValue3);
                                                            propertiesInstance13.Container = containerInstance3;
                                                        }
                                                        
                                                        JToken blobPathPrefixValue = propertiesValue31["blobPathPrefix"];
                                                        if (blobPathPrefixValue != null && blobPathPrefixValue.Type != JTokenType.Null)
                                                        {
                                                            string blobPathPrefixInstance = ((string)blobPathPrefixValue);
                                                            propertiesInstance13.BlobPathPrefix = blobPathPrefixInstance;
                                                        }
                                                    }
                                                    
                                                    JToken typeValue13 = datasourceValue6["type"];
                                                    if (typeValue13 != null && typeValue13.Type != JTokenType.Null)
                                                    {
                                                        string typeInstance13 = ((string)typeValue13);
                                                        blobOutputDataSourceInstance.Type = typeInstance13;
                                                    }
                                                    propertiesInstance12.DataSource = blobOutputDataSourceInstance;
                                                }
                                                if (typeName6 == "Microsoft.Storage/Table")
                                                {
                                                    AzureTableOutputDataSource azureTableOutputDataSourceInstance = new AzureTableOutputDataSource();
                                                    
                                                    JToken propertiesValue32 = datasourceValue6["properties"];
                                                    if (propertiesValue32 != null && propertiesValue32.Type != JTokenType.Null)
                                                    {
                                                        AzureTableOutputDataSourceProperties propertiesInstance14 = new AzureTableOutputDataSourceProperties();
                                                        azureTableOutputDataSourceInstance.Properties = propertiesInstance14;
                                                        
                                                        JToken accountNameValue4 = propertiesValue32["accountName"];
                                                        if (accountNameValue4 != null && accountNameValue4.Type != JTokenType.Null)
                                                        {
                                                            string accountNameInstance4 = ((string)accountNameValue4);
                                                            propertiesInstance14.AccountName = accountNameInstance4;
                                                        }
                                                        
                                                        JToken accountKeyValue4 = propertiesValue32["accountKey"];
                                                        if (accountKeyValue4 != null && accountKeyValue4.Type != JTokenType.Null)
                                                        {
                                                            string accountKeyInstance4 = ((string)accountKeyValue4);
                                                            propertiesInstance14.AccountKey = accountKeyInstance4;
                                                        }
                                                        
                                                        JToken tableValue = propertiesValue32["table"];
                                                        if (tableValue != null && tableValue.Type != JTokenType.Null)
                                                        {
                                                            string tableInstance = ((string)tableValue);
                                                            propertiesInstance14.Table = tableInstance;
                                                        }
                                                        
                                                        JToken partitionKeyValue = propertiesValue32["partitionKey"];
                                                        if (partitionKeyValue != null && partitionKeyValue.Type != JTokenType.Null)
                                                        {
                                                            string partitionKeyInstance = ((string)partitionKeyValue);
                                                            propertiesInstance14.PartitionKey = partitionKeyInstance;
                                                        }
                                                        
                                                        JToken rowKeyValue = propertiesValue32["rowKey"];
                                                        if (rowKeyValue != null && rowKeyValue.Type != JTokenType.Null)
                                                        {
                                                            string rowKeyInstance = ((string)rowKeyValue);
                                                            propertiesInstance14.RowKey = rowKeyInstance;
                                                        }
                                                        
                                                        JToken columnsToRemoveArray2 = propertiesValue32["columnsToRemove"];
                                                        if (columnsToRemoveArray2 != null && columnsToRemoveArray2.Type != JTokenType.Null)
                                                        {
                                                            foreach (JToken columnsToRemoveValue in ((JArray)columnsToRemoveArray2))
                                                            {
                                                                propertiesInstance14.ColumnsToRemove.Add(((string)columnsToRemoveValue));
                                                            }
                                                        }
                                                        
                                                        JToken batchSizeValue = propertiesValue32["batchSize"];
                                                        if (batchSizeValue != null && batchSizeValue.Type != JTokenType.Null)
                                                        {
                                                            int batchSizeInstance = ((int)batchSizeValue);
                                                            propertiesInstance14.BatchSize = batchSizeInstance;
                                                        }
                                                    }
                                                    
                                                    JToken typeValue14 = datasourceValue6["type"];
                                                    if (typeValue14 != null && typeValue14.Type != JTokenType.Null)
                                                    {
                                                        string typeInstance14 = ((string)typeValue14);
                                                        azureTableOutputDataSourceInstance.Type = typeInstance14;
                                                    }
                                                    propertiesInstance12.DataSource = azureTableOutputDataSourceInstance;
                                                }
                                                if (typeName6 == "Microsoft.ServiceBus/EventHub")
                                                {
                                                    EventHubOutputDataSource eventHubOutputDataSourceInstance = new EventHubOutputDataSource();
                                                    
                                                    JToken propertiesValue33 = datasourceValue6["properties"];
                                                    if (propertiesValue33 != null && propertiesValue33.Type != JTokenType.Null)
                                                    {
                                                        EventHubOutputDataSourceProperties propertiesInstance15 = new EventHubOutputDataSourceProperties();
                                                        eventHubOutputDataSourceInstance.Properties = propertiesInstance15;
                                                        
                                                        JToken serviceBusNamespaceValue2 = propertiesValue33["serviceBusNamespace"];
                                                        if (serviceBusNamespaceValue2 != null && serviceBusNamespaceValue2.Type != JTokenType.Null)
                                                        {
                                                            string serviceBusNamespaceInstance2 = ((string)serviceBusNamespaceValue2);
                                                            propertiesInstance15.ServiceBusNamespace = serviceBusNamespaceInstance2;
                                                        }
                                                        
                                                        JToken sharedAccessPolicyNameValue2 = propertiesValue33["sharedAccessPolicyName"];
                                                        if (sharedAccessPolicyNameValue2 != null && sharedAccessPolicyNameValue2.Type != JTokenType.Null)
                                                        {
                                                            string sharedAccessPolicyNameInstance2 = ((string)sharedAccessPolicyNameValue2);
                                                            propertiesInstance15.SharedAccessPolicyName = sharedAccessPolicyNameInstance2;
                                                        }
                                                        
                                                        JToken sharedAccessPolicyKeyValue2 = propertiesValue33["sharedAccessPolicyKey"];
                                                        if (sharedAccessPolicyKeyValue2 != null && sharedAccessPolicyKeyValue2.Type != JTokenType.Null)
                                                        {
                                                            string sharedAccessPolicyKeyInstance2 = ((string)sharedAccessPolicyKeyValue2);
                                                            propertiesInstance15.SharedAccessPolicyKey = sharedAccessPolicyKeyInstance2;
                                                        }
                                                        
                                                        JToken eventHubNameValue2 = propertiesValue33["eventHubName"];
                                                        if (eventHubNameValue2 != null && eventHubNameValue2.Type != JTokenType.Null)
                                                        {
                                                            string eventHubNameInstance2 = ((string)eventHubNameValue2);
                                                            propertiesInstance15.EventHubName = eventHubNameInstance2;
                                                        }
                                                        
                                                        JToken partitionKeyValue2 = propertiesValue33["partitionKey"];
                                                        if (partitionKeyValue2 != null && partitionKeyValue2.Type != JTokenType.Null)
                                                        {
                                                            string partitionKeyInstance2 = ((string)partitionKeyValue2);
                                                            propertiesInstance15.PartitionKey = partitionKeyInstance2;
                                                        }
                                                    }
                                                    
                                                    JToken typeValue15 = datasourceValue6["type"];
                                                    if (typeValue15 != null && typeValue15.Type != JTokenType.Null)
                                                    {
                                                        string typeInstance15 = ((string)typeValue15);
                                                        eventHubOutputDataSourceInstance.Type = typeInstance15;
                                                    }
                                                    propertiesInstance12.DataSource = eventHubOutputDataSourceInstance;
                                                }
                                                if (typeName6 == "Microsoft.Sql/Server/Database")
                                                {
                                                    SqlAzureOutputDataSource sqlAzureOutputDataSourceInstance = new SqlAzureOutputDataSource();
                                                    
                                                    JToken propertiesValue34 = datasourceValue6["properties"];
                                                    if (propertiesValue34 != null && propertiesValue34.Type != JTokenType.Null)
                                                    {
                                                        SqlAzureOutputDataSourceProperties propertiesInstance16 = new SqlAzureOutputDataSourceProperties();
                                                        sqlAzureOutputDataSourceInstance.Properties = propertiesInstance16;
                                                        
                                                        JToken serverValue = propertiesValue34["server"];
                                                        if (serverValue != null && serverValue.Type != JTokenType.Null)
                                                        {
                                                            string serverInstance = ((string)serverValue);
                                                            propertiesInstance16.Server = serverInstance;
                                                        }
                                                        
                                                        JToken databaseValue = propertiesValue34["database"];
                                                        if (databaseValue != null && databaseValue.Type != JTokenType.Null)
                                                        {
                                                            string databaseInstance = ((string)databaseValue);
                                                            propertiesInstance16.Database = databaseInstance;
                                                        }
                                                        
                                                        JToken userValue = propertiesValue34["user"];
                                                        if (userValue != null && userValue.Type != JTokenType.Null)
                                                        {
                                                            string userInstance = ((string)userValue);
                                                            propertiesInstance16.User = userInstance;
                                                        }
                                                        
                                                        JToken passwordValue = propertiesValue34["password"];
                                                        if (passwordValue != null && passwordValue.Type != JTokenType.Null)
                                                        {
                                                            string passwordInstance = ((string)passwordValue);
                                                            propertiesInstance16.Password = passwordInstance;
                                                        }
                                                        
                                                        JToken tableValue2 = propertiesValue34["table"];
                                                        if (tableValue2 != null && tableValue2.Type != JTokenType.Null)
                                                        {
                                                            string tableInstance2 = ((string)tableValue2);
                                                            propertiesInstance16.Table = tableInstance2;
                                                        }
                                                    }
                                                    
                                                    JToken typeValue16 = datasourceValue6["type"];
                                                    if (typeValue16 != null && typeValue16.Type != JTokenType.Null)
                                                    {
                                                        string typeInstance16 = ((string)typeValue16);
                                                        sqlAzureOutputDataSourceInstance.Type = typeInstance16;
                                                    }
                                                    propertiesInstance12.DataSource = sqlAzureOutputDataSourceInstance;
                                                }
                                            }
                                            
                                            JToken serializationValue6 = propertiesValue30["serialization"];
                                            if (serializationValue6 != null && serializationValue6.Type != JTokenType.Null)
                                            {
                                                string typeName7 = ((string)serializationValue6["type"]);
                                                if (typeName7 == "Csv")
                                                {
                                                    CsvSerialization csvSerializationInstance3 = new CsvSerialization();
                                                    
                                                    JToken propertiesValue35 = serializationValue6["properties"];
                                                    if (propertiesValue35 != null && propertiesValue35.Type != JTokenType.Null)
                                                    {
                                                        CsvSerializationProperties propertiesInstance17 = new CsvSerializationProperties();
                                                        csvSerializationInstance3.Properties = propertiesInstance17;
                                                        
                                                        JToken fieldDelimiterValue3 = propertiesValue35["fieldDelimiter"];
                                                        if (fieldDelimiterValue3 != null && fieldDelimiterValue3.Type != JTokenType.Null)
                                                        {
                                                            string fieldDelimiterInstance3 = ((string)fieldDelimiterValue3);
                                                            propertiesInstance17.FieldDelimiter = fieldDelimiterInstance3;
                                                        }
                                                        
                                                        JToken encodingValue5 = propertiesValue35["encoding"];
                                                        if (encodingValue5 != null && encodingValue5.Type != JTokenType.Null)
                                                        {
                                                            string encodingInstance5 = ((string)encodingValue5);
                                                            propertiesInstance17.Encoding = encodingInstance5;
                                                        }
                                                    }
                                                    
                                                    JToken typeValue17 = serializationValue6["type"];
                                                    if (typeValue17 != null && typeValue17.Type != JTokenType.Null)
                                                    {
                                                        string typeInstance17 = ((string)typeValue17);
                                                        csvSerializationInstance3.Type = typeInstance17;
                                                    }
                                                    propertiesInstance12.Serialization = csvSerializationInstance3;
                                                }
                                                if (typeName7 == "Json")
                                                {
                                                    JsonSerialization jsonSerializationInstance3 = new JsonSerialization();
                                                    
                                                    JToken propertiesValue36 = serializationValue6["properties"];
                                                    if (propertiesValue36 != null && propertiesValue36.Type != JTokenType.Null)
                                                    {
                                                        JsonSerializationProperties propertiesInstance18 = new JsonSerializationProperties();
                                                        jsonSerializationInstance3.Properties = propertiesInstance18;
                                                        
                                                        JToken encodingValue6 = propertiesValue36["encoding"];
                                                        if (encodingValue6 != null && encodingValue6.Type != JTokenType.Null)
                                                        {
                                                            string encodingInstance6 = ((string)encodingValue6);
                                                            propertiesInstance18.Encoding = encodingInstance6;
                                                        }
                                                        
                                                        JToken formatValue3 = propertiesValue36["format"];
                                                        if (formatValue3 != null && formatValue3.Type != JTokenType.Null)
                                                        {
                                                            string formatInstance3 = ((string)formatValue3);
                                                            propertiesInstance18.Format = formatInstance3;
                                                        }
                                                    }
                                                    
                                                    JToken typeValue18 = serializationValue6["type"];
                                                    if (typeValue18 != null && typeValue18.Type != JTokenType.Null)
                                                    {
                                                        string typeInstance18 = ((string)typeValue18);
                                                        jsonSerializationInstance3.Type = typeInstance18;
                                                    }
                                                    propertiesInstance12.Serialization = jsonSerializationInstance3;
                                                }
                                                if (typeName7 == "Avro")
                                                {
                                                    AvroSerialization avroSerializationInstance3 = new AvroSerialization();
                                                    
                                                    JToken propertiesValue37 = serializationValue6["properties"];
                                                    if (propertiesValue37 != null && propertiesValue37.Type != JTokenType.Null)
                                                    {
                                                        AvroSerializationProperties propertiesInstance19 = new AvroSerializationProperties();
                                                        avroSerializationInstance3.Properties = propertiesInstance19;
                                                    }
                                                    
                                                    JToken typeValue19 = serializationValue6["type"];
                                                    if (typeValue19 != null && typeValue19.Type != JTokenType.Null)
                                                    {
                                                        string typeInstance19 = ((string)typeValue19);
                                                        avroSerializationInstance3.Type = typeInstance19;
                                                    }
                                                    propertiesInstance12.Serialization = avroSerializationInstance3;
                                                }
                                            }
                                            
                                            JToken diagnosticsValue6 = propertiesValue30["diagnostics"];
                                            if (diagnosticsValue6 != null && diagnosticsValue6.Type != JTokenType.Null)
                                            {
                                                Diagnostics diagnosticsInstance3 = new Diagnostics();
                                                propertiesInstance12.Diagnostics = diagnosticsInstance3;
                                                
                                                JToken conditionsArray6 = diagnosticsValue6["conditions"];
                                                if (conditionsArray6 != null && conditionsArray6.Type != JTokenType.Null)
                                                {
                                                    foreach (JToken conditionsValue3 in ((JArray)conditionsArray6))
                                                    {
                                                        DiagnosticCondition diagnosticConditionInstance3 = new DiagnosticCondition();
                                                        diagnosticsInstance3.Conditions.Add(diagnosticConditionInstance3);
                                                        
                                                        JToken sinceValue3 = conditionsValue3["since"];
                                                        if (sinceValue3 != null && sinceValue3.Type != JTokenType.Null)
                                                        {
                                                            DateTime sinceInstance3 = ((DateTime)sinceValue3);
                                                            diagnosticConditionInstance3.Since = sinceInstance3;
                                                        }
                                                        
                                                        JToken codeValue3 = conditionsValue3["code"];
                                                        if (codeValue3 != null && codeValue3.Type != JTokenType.Null)
                                                        {
                                                            string codeInstance3 = ((string)codeValue3);
                                                            diagnosticConditionInstance3.Code = codeInstance3;
                                                        }
                                                        
                                                        JToken messageValue3 = conditionsValue3["message"];
                                                        if (messageValue3 != null && messageValue3.Type != JTokenType.Null)
                                                        {
                                                            string messageInstance3 = ((string)messageValue3);
                                                            diagnosticConditionInstance3.Message = messageInstance3;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        
                    }
                    result.StatusCode = statusCode;
                    if (httpResponse.Headers.Contains("Date"))
                    {
                        result.Date = DateTime.Parse(httpResponse.Headers.GetValues("Date").FirstOrDefault(), CultureInfo.InvariantCulture, DateTimeStyles.AdjustToUniversal).ToLocalTime();
                    }
                    if (httpResponse.Headers.Contains("ETag"))
                    {
                        result.Job.Properties.Etag = httpResponse.Headers.GetValues("ETag").FirstOrDefault();
                    }
                    if (httpResponse.Headers.Contains("x-ms-request-id"))
                    {
                        result.RequestId = httpResponse.Headers.GetValues("x-ms-request-id").FirstOrDefault();
                    }
                    
                    if (shouldTrace)
                    {
                        TracingAdapter.Exit(invocationId, result);
                    }
                    return result;
                }
                finally
                {
                    if (httpResponse != null)
                    {
                        httpResponse.Dispose();
                    }
                }
            }
            finally
            {
                if (httpRequest != null)
                {
                    httpRequest.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Start a stream analytics job.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// Required. The name of the stream analytics job.
        /// </param>
        /// <param name='parameters'>
        /// Optional. Parameters for a job start operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public async Task<LongRunningOperationResponse> StartAsync(string resourceGroupName, string jobName, JobStartParameters parameters, CancellationToken cancellationToken)
        {
            StreamAnalyticsManagementClient client = this.Client;
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("resourceGroupName", resourceGroupName);
                tracingParameters.Add("jobName", jobName);
                tracingParameters.Add("parameters", parameters);
                TracingAdapter.Enter(invocationId, this, "StartAsync", tracingParameters);
            }
            
            cancellationToken.ThrowIfCancellationRequested();
            LongRunningOperationResponse response = await client.StreamingJobs.BeginStartAsync(resourceGroupName, jobName, parameters, cancellationToken).ConfigureAwait(false);
            if (response.Status == OperationStatus.Succeeded)
            {
                return response;
            }
            cancellationToken.ThrowIfCancellationRequested();
            LongRunningOperationResponse result = await client.GetLongRunningOperationStatusAsync(response.OperationStatusLink, cancellationToken).ConfigureAwait(false);
            int delayInSeconds = response.RetryAfter;
            if (delayInSeconds == 0)
            {
                delayInSeconds = 10;
            }
            if (client.LongRunningOperationInitialTimeout >= 0)
            {
                delayInSeconds = client.LongRunningOperationInitialTimeout;
            }
            while ((result.Status != OperationStatus.InProgress) == false)
            {
                cancellationToken.ThrowIfCancellationRequested();
                await TaskEx.Delay(delayInSeconds * 1000, cancellationToken).ConfigureAwait(false);
                cancellationToken.ThrowIfCancellationRequested();
                result = await client.GetLongRunningOperationStatusAsync(response.OperationStatusLink, cancellationToken).ConfigureAwait(false);
                delayInSeconds = result.RetryAfter;
                if (delayInSeconds == 0)
                {
                    delayInSeconds = 10;
                }
                if (client.LongRunningOperationRetryTimeout >= 0)
                {
                    delayInSeconds = client.LongRunningOperationRetryTimeout;
                }
            }
            
            if (shouldTrace)
            {
                TracingAdapter.Exit(invocationId, result);
            }
            
            return result;
        }
        
        /// <summary>
        /// Stop a stream analytics job.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// Required. The name of the stream analytics job.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public async Task<LongRunningOperationResponse> StopAsync(string resourceGroupName, string jobName, CancellationToken cancellationToken)
        {
            StreamAnalyticsManagementClient client = this.Client;
            bool shouldTrace = TracingAdapter.IsEnabled;
            string invocationId = null;
            if (shouldTrace)
            {
                invocationId = TracingAdapter.NextInvocationId.ToString();
                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();
                tracingParameters.Add("resourceGroupName", resourceGroupName);
                tracingParameters.Add("jobName", jobName);
                TracingAdapter.Enter(invocationId, this, "StopAsync", tracingParameters);
            }
            
            cancellationToken.ThrowIfCancellationRequested();
            LongRunningOperationResponse response = await client.StreamingJobs.BeginStopAsync(resourceGroupName, jobName, cancellationToken).ConfigureAwait(false);
            if (response.Status == OperationStatus.Succeeded)
            {
                return response;
            }
            cancellationToken.ThrowIfCancellationRequested();
            LongRunningOperationResponse result = await client.GetLongRunningOperationStatusAsync(response.OperationStatusLink, cancellationToken).ConfigureAwait(false);
            int delayInSeconds = response.RetryAfter;
            if (delayInSeconds == 0)
            {
                delayInSeconds = 10;
            }
            if (client.LongRunningOperationInitialTimeout >= 0)
            {
                delayInSeconds = client.LongRunningOperationInitialTimeout;
            }
            while ((result.Status != OperationStatus.InProgress) == false)
            {
                cancellationToken.ThrowIfCancellationRequested();
                await TaskEx.Delay(delayInSeconds * 1000, cancellationToken).ConfigureAwait(false);
                cancellationToken.ThrowIfCancellationRequested();
                result = await client.GetLongRunningOperationStatusAsync(response.OperationStatusLink, cancellationToken).ConfigureAwait(false);
                delayInSeconds = result.RetryAfter;
                if (delayInSeconds == 0)
                {
                    delayInSeconds = 10;
                }
                if (client.LongRunningOperationRetryTimeout >= 0)
                {
                    delayInSeconds = client.LongRunningOperationRetryTimeout;
                }
            }
            
            if (shouldTrace)
            {
                TracingAdapter.Exit(invocationId, result);
            }
            
            return result;
        }
    }
}
