// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using Azure;
    using Management;
    using WebSites;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Information regarding availbility of a resource name.
    /// </summary>
    public partial class ResourceNameAvailability
    {
        /// <summary>
        /// Initializes a new instance of the ResourceNameAvailability class.
        /// </summary>
        public ResourceNameAvailability() { }

        /// <summary>
        /// Initializes a new instance of the ResourceNameAvailability class.
        /// </summary>
        /// <param name="nameAvailable">&lt;code&gt;true&lt;/code&gt; indicates
        /// name is valid and available. &lt;code&gt;false&lt;/code&gt;
        /// indicates the name is invalid, unavailable, or both.</param>
        /// <param name="reason">&lt;code&gt;Invalid&lt;/code&gt; indicates the
        /// name provided does not match Azure App Service naming requirements.
        /// &lt;code&gt;AlreadyExists&lt;/code&gt; indicates that the name is
        /// already in use and is therefore unavailable. Possible values
        /// include: 'Invalid', 'AlreadyExists'</param>
        /// <param name="message">If reason == invalid, provide the user with
        /// the reason why the given name is invalid, and provide the resource
        /// naming requirements so that the user can select a valid name. If
        /// reason == AlreadyExists, explain that resource name is already in
        /// use, and direct them to select a different name.</param>
        public ResourceNameAvailability(bool? nameAvailable = default(bool?), string reason = default(string), string message = default(string))
        {
            NameAvailable = nameAvailable;
            Reason = reason;
            Message = message;
        }

        /// <summary>
        /// Gets or sets &amp;lt;code&amp;gt;true&amp;lt;/code&amp;gt;
        /// indicates name is valid and available.
        /// &amp;lt;code&amp;gt;false&amp;lt;/code&amp;gt; indicates the name
        /// is invalid, unavailable, or both.
        /// </summary>
        [JsonProperty(PropertyName = "nameAvailable")]
        public bool? NameAvailable { get; set; }

        /// <summary>
        /// Gets or sets &amp;lt;code&amp;gt;Invalid&amp;lt;/code&amp;gt;
        /// indicates the name provided does not match Azure App Service naming
        /// requirements.
        /// &amp;lt;code&amp;gt;AlreadyExists&amp;lt;/code&amp;gt; indicates
        /// that the name is already in use and is therefore unavailable.
        /// Possible values include: 'Invalid', 'AlreadyExists'
        /// </summary>
        [JsonProperty(PropertyName = "reason")]
        public string Reason { get; set; }

        /// <summary>
        /// Gets or sets if reason == invalid, provide the user with the reason
        /// why the given name is invalid, and provide the resource naming
        /// requirements so that the user can select a valid name. If reason ==
        /// AlreadyExists, explain that resource name is already in use, and
        /// direct them to select a different name.
        /// </summary>
        [JsonProperty(PropertyName = "message")]
        public string Message { get; set; }

    }
}

