// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using Azure;
    using Management;
    using WebSites;
    using Rest;
    using Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The Virtual Network gateway contract. This is used to give the Virtual
    /// Network gateway access to the VPN package.
    /// </summary>
    [JsonTransformation]
    public partial class VnetGateway : Resource
    {
        /// <summary>
        /// Initializes a new instance of the VnetGateway class.
        /// </summary>
        public VnetGateway() { }

        /// <summary>
        /// Initializes a new instance of the VnetGateway class.
        /// </summary>
        /// <param name="location">Resource Location.</param>
        /// <param name="id">Resource Id.</param>
        /// <param name="name">Resource Name.</param>
        /// <param name="kind">Kind of resource.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="vnetName">The Virtual Network name.</param>
        /// <param name="vpnPackageUri">The URI where the VPN package can be
        /// downloaded.</param>
        public VnetGateway(string location, string id = default(string), string name = default(string), string kind = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string vnetName = default(string), string vpnPackageUri = default(string))
            : base(location, id, name, kind, type, tags)
        {
            VnetName = vnetName;
            VpnPackageUri = vpnPackageUri;
        }

        /// <summary>
        /// Gets or sets the Virtual Network name.
        /// </summary>
        [JsonProperty(PropertyName = "properties.vnetName")]
        public string VnetName { get; set; }

        /// <summary>
        /// Gets or sets the URI where the VPN package can be downloaded.
        /// </summary>
        [JsonProperty(PropertyName = "properties.vpnPackageUri")]
        public string VpnPackageUri { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}

