// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using Azure;
    using Management;
    using WebSites;
    using Rest;
    using Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// User crendentials used for publishing activity.
    /// </summary>
    [JsonTransformation]
    public partial class Deployment : Resource
    {
        /// <summary>
        /// Initializes a new instance of the Deployment class.
        /// </summary>
        public Deployment() { }

        /// <summary>
        /// Initializes a new instance of the Deployment class.
        /// </summary>
        /// <param name="location">Resource Location.</param>
        /// <param name="id">Resource Id.</param>
        /// <param name="name">Resource Name.</param>
        /// <param name="kind">Kind of resource.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="deploymentId">ID.</param>
        /// <param name="status">Status.</param>
        /// <param name="message">Message.</param>
        /// <param name="author">Author.</param>
        /// <param name="deployer">Deployer.</param>
        /// <param name="authorEmail">Author email.</param>
        /// <param name="startTime">Start time.</param>
        /// <param name="endTime">End time.</param>
        /// <param name="active">Active.</param>
        /// <param name="details">Detail.</param>
        public Deployment(string location, string id = default(string), string name = default(string), string kind = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string deploymentId = default(string), int? status = default(int?), string message = default(string), string author = default(string), string deployer = default(string), string authorEmail = default(string), System.DateTime? startTime = default(System.DateTime?), System.DateTime? endTime = default(System.DateTime?), bool? active = default(bool?), string details = default(string))
            : base(location, id, name, kind, type, tags)
        {
            DeploymentId = deploymentId;
            Status = status;
            Message = message;
            Author = author;
            Deployer = deployer;
            AuthorEmail = authorEmail;
            StartTime = startTime;
            EndTime = endTime;
            Active = active;
            Details = details;
        }

        /// <summary>
        /// Gets or sets ID.
        /// </summary>
        [JsonProperty(PropertyName = "properties.id")]
        public string DeploymentId { get; set; }

        /// <summary>
        /// Gets or sets status.
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public int? Status { get; set; }

        /// <summary>
        /// Gets or sets message.
        /// </summary>
        [JsonProperty(PropertyName = "properties.message")]
        public string Message { get; set; }

        /// <summary>
        /// Gets or sets author.
        /// </summary>
        [JsonProperty(PropertyName = "properties.author")]
        public string Author { get; set; }

        /// <summary>
        /// Gets or sets deployer.
        /// </summary>
        [JsonProperty(PropertyName = "properties.deployer")]
        public string Deployer { get; set; }

        /// <summary>
        /// Gets or sets author email.
        /// </summary>
        [JsonProperty(PropertyName = "properties.author_email")]
        public string AuthorEmail { get; set; }

        /// <summary>
        /// Gets or sets start time.
        /// </summary>
        [JsonProperty(PropertyName = "properties.start_time")]
        public System.DateTime? StartTime { get; set; }

        /// <summary>
        /// Gets or sets end time.
        /// </summary>
        [JsonProperty(PropertyName = "properties.end_time")]
        public System.DateTime? EndTime { get; set; }

        /// <summary>
        /// Gets or sets active.
        /// </summary>
        [JsonProperty(PropertyName = "properties.active")]
        public bool? Active { get; set; }

        /// <summary>
        /// Gets or sets detail.
        /// </summary>
        [JsonProperty(PropertyName = "properties.details")]
        public string Details { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}

