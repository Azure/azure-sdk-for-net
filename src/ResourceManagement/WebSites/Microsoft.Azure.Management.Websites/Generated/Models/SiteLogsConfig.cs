// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using Azure;
    using Management;
    using WebSites;
    using Rest;
    using Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Configuration of App Service site logs.
    /// </summary>
    [JsonTransformation]
    public partial class SiteLogsConfig : Resource
    {
        /// <summary>
        /// Initializes a new instance of the SiteLogsConfig class.
        /// </summary>
        public SiteLogsConfig() { }

        /// <summary>
        /// Initializes a new instance of the SiteLogsConfig class.
        /// </summary>
        /// <param name="location">Resource Location.</param>
        /// <param name="id">Resource Id.</param>
        /// <param name="name">Resource Name.</param>
        /// <param name="kind">Kind of resource.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="applicationLogs">Application logs
        /// configuration.</param>
        /// <param name="httpLogs">HTTP logs configuration.</param>
        /// <param name="failedRequestsTracing">Failed requests tracing
        /// configuration.</param>
        /// <param name="detailedErrorMessages">Detailed error messages
        /// configuration.</param>
        public SiteLogsConfig(string location, string id = default(string), string name = default(string), string kind = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), ApplicationLogsConfig applicationLogs = default(ApplicationLogsConfig), HttpLogsConfig httpLogs = default(HttpLogsConfig), EnabledConfig failedRequestsTracing = default(EnabledConfig), EnabledConfig detailedErrorMessages = default(EnabledConfig))
            : base(location, id, name, kind, type, tags)
        {
            ApplicationLogs = applicationLogs;
            HttpLogs = httpLogs;
            FailedRequestsTracing = failedRequestsTracing;
            DetailedErrorMessages = detailedErrorMessages;
        }

        /// <summary>
        /// Gets or sets application logs configuration.
        /// </summary>
        [JsonProperty(PropertyName = "properties.applicationLogs")]
        public ApplicationLogsConfig ApplicationLogs { get; set; }

        /// <summary>
        /// Gets or sets HTTP logs configuration.
        /// </summary>
        [JsonProperty(PropertyName = "properties.httpLogs")]
        public HttpLogsConfig HttpLogs { get; set; }

        /// <summary>
        /// Gets or sets failed requests tracing configuration.
        /// </summary>
        [JsonProperty(PropertyName = "properties.failedRequestsTracing")]
        public EnabledConfig FailedRequestsTracing { get; set; }

        /// <summary>
        /// Gets or sets detailed error messages configuration.
        /// </summary>
        [JsonProperty(PropertyName = "properties.detailedErrorMessages")]
        public EnabledConfig DetailedErrorMessages { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (ApplicationLogs != null)
            {
                ApplicationLogs.Validate();
            }
            if (HttpLogs != null)
            {
                HttpLogs.Validate();
            }
        }
    }
}

