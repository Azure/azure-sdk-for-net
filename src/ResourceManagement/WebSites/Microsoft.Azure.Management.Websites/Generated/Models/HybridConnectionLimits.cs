// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using Azure;
    using Management;
    using WebSites;
    using Rest;
    using Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Hybrid Connection limits contract. This is used to return the plan
    /// limits of Hybrid Connections.
    /// </summary>
    [JsonTransformation]
    public partial class HybridConnectionLimits : Resource
    {
        /// <summary>
        /// Initializes a new instance of the HybridConnectionLimits class.
        /// </summary>
        public HybridConnectionLimits() { }

        /// <summary>
        /// Initializes a new instance of the HybridConnectionLimits class.
        /// </summary>
        /// <param name="location">Resource Location.</param>
        /// <param name="id">Resource Id.</param>
        /// <param name="name">Resource Name.</param>
        /// <param name="kind">Kind of resource.</param>
        /// <param name="type">Resource type.</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="current">The current number of Hybrid
        /// Connections.</param>
        /// <param name="maximum">The maximum number of Hybrid Connections
        /// allowed.</param>
        public HybridConnectionLimits(string location, string id = default(string), string name = default(string), string kind = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), int? current = default(int?), int? maximum = default(int?))
            : base(location, id, name, kind, type, tags)
        {
            Current = current;
            Maximum = maximum;
        }

        /// <summary>
        /// Gets the current number of Hybrid Connections.
        /// </summary>
        [JsonProperty(PropertyName = "properties.current")]
        public int? Current { get; protected set; }

        /// <summary>
        /// Gets the maximum number of Hybrid Connections allowed.
        /// </summary>
        [JsonProperty(PropertyName = "properties.maximum")]
        public int? Maximum { get; protected set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}

