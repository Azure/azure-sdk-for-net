// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using Azure;
    using Management;
    using WebSites;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Http logs configuration.
    /// </summary>
    public partial class HttpLogsConfig
    {
        /// <summary>
        /// Initializes a new instance of the HttpLogsConfig class.
        /// </summary>
        public HttpLogsConfig() { }

        /// <summary>
        /// Initializes a new instance of the HttpLogsConfig class.
        /// </summary>
        /// <param name="fileSystem">Http logs to file system
        /// configuration.</param>
        /// <param name="azureBlobStorage">Http logs to azure blob storage
        /// configuration.</param>
        public HttpLogsConfig(FileSystemHttpLogsConfig fileSystem = default(FileSystemHttpLogsConfig), AzureBlobStorageHttpLogsConfig azureBlobStorage = default(AzureBlobStorageHttpLogsConfig))
        {
            FileSystem = fileSystem;
            AzureBlobStorage = azureBlobStorage;
        }

        /// <summary>
        /// Gets or sets http logs to file system configuration.
        /// </summary>
        [JsonProperty(PropertyName = "fileSystem")]
        public FileSystemHttpLogsConfig FileSystem { get; set; }

        /// <summary>
        /// Gets or sets http logs to azure blob storage configuration.
        /// </summary>
        [JsonProperty(PropertyName = "azureBlobStorage")]
        public AzureBlobStorageHttpLogsConfig AzureBlobStorage { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (FileSystem != null)
            {
                FileSystem.Validate();
            }
        }
    }
}

