// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.ServiceFabric.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.ServiceFabric;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Cluster upgrade policy
    /// </summary>
    public partial class ClusterUpgradePolicy
    {
        /// <summary>
        /// Initializes a new instance of the ClusterUpgradePolicy class.
        /// </summary>
        public ClusterUpgradePolicy() { }

        /// <summary>
        /// Initializes a new instance of the ClusterUpgradePolicy class.
        /// </summary>
        /// <param name="overrideUserUpgradePolicy">Use the user defined
        /// upgrade policy or not</param>
        /// <param name="forceRestart">Force node to restart or not</param>
        /// <param name="upgradeReplicaSetCheckTimeout">Timeout for replica set
        /// upgrade to complete</param>
        /// <param name="healthCheckWaitDuration">The length of time to wait
        /// after completing an upgrade domain before performing health
        /// checks.</param>
        /// <param name="healthCheckStableDuration">The length of time that
        /// health checks must pass continuously.</param>
        /// <param name="healthCheckRetryTimeout">The length of time that
        /// health checks can fail continuously</param>
        /// <param name="upgradeTimeout">The upgrade timeout.</param>
        /// <param name="upgradeDomainTimeout">The timeout for any upgrade
        /// domain.</param>
        /// <param name="healthPolicy">Cluster health Policy</param>
        /// <param name="deltaHealthPolicy">Delta  health policy</param>
        public ClusterUpgradePolicy(bool? overrideUserUpgradePolicy = default(bool?), bool? forceRestart = default(bool?), string upgradeReplicaSetCheckTimeout = default(string), string healthCheckWaitDuration = default(string), string healthCheckStableDuration = default(string), string healthCheckRetryTimeout = default(string), string upgradeTimeout = default(string), string upgradeDomainTimeout = default(string), ClusterUpgradeHealthPolicy healthPolicy = default(ClusterUpgradeHealthPolicy), ClusterUpgradeDeltaHealthPolicy deltaHealthPolicy = default(ClusterUpgradeDeltaHealthPolicy))
        {
            OverrideUserUpgradePolicy = overrideUserUpgradePolicy;
            ForceRestart = forceRestart;
            UpgradeReplicaSetCheckTimeout = upgradeReplicaSetCheckTimeout;
            HealthCheckWaitDuration = healthCheckWaitDuration;
            HealthCheckStableDuration = healthCheckStableDuration;
            HealthCheckRetryTimeout = healthCheckRetryTimeout;
            UpgradeTimeout = upgradeTimeout;
            UpgradeDomainTimeout = upgradeDomainTimeout;
            HealthPolicy = healthPolicy;
            DeltaHealthPolicy = deltaHealthPolicy;
        }

        /// <summary>
        /// Gets or sets use the user defined upgrade policy or not
        /// </summary>
        [JsonProperty(PropertyName = "overrideUserUpgradePolicy")]
        public bool? OverrideUserUpgradePolicy { get; set; }

        /// <summary>
        /// Gets or sets force node to restart or not
        /// </summary>
        [JsonProperty(PropertyName = "forceRestart")]
        public bool? ForceRestart { get; set; }

        /// <summary>
        /// Gets or sets timeout for replica set upgrade to complete
        /// </summary>
        [JsonProperty(PropertyName = "upgradeReplicaSetCheckTimeout")]
        public string UpgradeReplicaSetCheckTimeout { get; set; }

        /// <summary>
        /// Gets or sets the length of time to wait after completing an upgrade
        /// domain before performing health checks.
        /// </summary>
        [JsonProperty(PropertyName = "healthCheckWaitDuration")]
        public string HealthCheckWaitDuration { get; set; }

        /// <summary>
        /// Gets or sets the length of time that health checks must pass
        /// continuously.
        /// </summary>
        [JsonProperty(PropertyName = "healthCheckStableDuration")]
        public string HealthCheckStableDuration { get; set; }

        /// <summary>
        /// Gets or sets the length of time that health checks can fail
        /// continuously
        /// </summary>
        [JsonProperty(PropertyName = "healthCheckRetryTimeout")]
        public string HealthCheckRetryTimeout { get; set; }

        /// <summary>
        /// Gets or sets the upgrade timeout.
        /// </summary>
        [JsonProperty(PropertyName = "upgradeTimeout")]
        public string UpgradeTimeout { get; set; }

        /// <summary>
        /// Gets or sets the timeout for any upgrade domain.
        /// </summary>
        [JsonProperty(PropertyName = "upgradeDomainTimeout")]
        public string UpgradeDomainTimeout { get; set; }

        /// <summary>
        /// Gets or sets cluster health Policy
        /// </summary>
        [JsonProperty(PropertyName = "healthPolicy")]
        public ClusterUpgradeHealthPolicy HealthPolicy { get; set; }

        /// <summary>
        /// Gets or sets delta  health policy
        /// </summary>
        [JsonProperty(PropertyName = "deltaHealthPolicy")]
        public ClusterUpgradeDeltaHealthPolicy DeltaHealthPolicy { get; set; }

    }
}
