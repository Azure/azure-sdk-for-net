// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.ServiceFabric.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// NodeType description
    /// </summary>
    public partial class NodeTypeDescription
    {
        /// <summary>
        /// Initializes a new instance of the NodeTypeDescription class.
        /// </summary>
        public NodeTypeDescription() { }

        /// <summary>
        /// Initializes a new instance of the NodeTypeDescription class.
        /// </summary>
        public NodeTypeDescription(string name = default(string), IDictionary<string, string> placementProperties = default(IDictionary<string, string>), IDictionary<string, string> capacities = default(IDictionary<string, string>), int? clientConnectionEndpointPort = default(int?), int? httpGatewayEndpointPort = default(int?), string durabilityLevel = default(string), EndpointRangeDescription applicationPorts = default(EndpointRangeDescription), EndpointRangeDescription ephemeralPorts = default(EndpointRangeDescription), bool? isPrimary = default(bool?), int? vmInstanceCount = default(int?), int? reverseProxyEndpointPort = default(int?))
        {
            Name = name;
            PlacementProperties = placementProperties;
            Capacities = capacities;
            ClientConnectionEndpointPort = clientConnectionEndpointPort;
            HttpGatewayEndpointPort = httpGatewayEndpointPort;
            DurabilityLevel = durabilityLevel;
            ApplicationPorts = applicationPorts;
            EphemeralPorts = ephemeralPorts;
            IsPrimary = isPrimary;
            VmInstanceCount = vmInstanceCount;
            ReverseProxyEndpointPort = reverseProxyEndpointPort;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "placementProperties")]
        public IDictionary<string, string> PlacementProperties { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "capacities")]
        public IDictionary<string, string> Capacities { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "clientConnectionEndpointPort")]
        public int? ClientConnectionEndpointPort { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "httpGatewayEndpointPort")]
        public int? HttpGatewayEndpointPort { get; set; }

        /// <summary>
        /// Possible values include: 'Bronze', 'Silver', 'Gold', 'Platimun'
        /// </summary>
        [JsonProperty(PropertyName = "durabilityLevel")]
        public string DurabilityLevel { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "applicationPorts")]
        public EndpointRangeDescription ApplicationPorts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ephemeralPorts")]
        public EndpointRangeDescription EphemeralPorts { get; set; }

        /// <summary>
        /// Is primary or not
        /// </summary>
        [JsonProperty(PropertyName = "isPrimary")]
        public bool? IsPrimary { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "vmInstanceCount")]
        public int? VmInstanceCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "reverseProxyEndpointPort")]
        public int? ReverseProxyEndpointPort { get; set; }

    }
}
