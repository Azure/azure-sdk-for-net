// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.ServiceFabric.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.ServiceFabric;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Defines a health policy used to evaluate the health of an application
    /// or one of its children entities.
    /// </summary>
    public partial class ApplicationHealthPolicy
    {
        /// <summary>
        /// Initializes a new instance of the ApplicationHealthPolicy class.
        /// </summary>
        public ApplicationHealthPolicy()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApplicationHealthPolicy class.
        /// </summary>
        /// <param name="defaultServiceTypeHealthPolicy">the health policy used
        /// by default to evaluate the health of a service type.</param>
        /// <param name="serivceTypeHealthPolicies"> Defines a
        /// ServiceTypeHealthPolicy per service type name,the key is the name
        /// of the application</param>
        public ApplicationHealthPolicy(ServiceTypeHealthPolicy defaultServiceTypeHealthPolicy = default(ServiceTypeHealthPolicy), IDictionary<string, ServiceTypeHealthPolicy> serivceTypeHealthPolicies = default(IDictionary<string, ServiceTypeHealthPolicy>))
        {
            DefaultServiceTypeHealthPolicy = defaultServiceTypeHealthPolicy;
            SerivceTypeHealthPolicies = serivceTypeHealthPolicies;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the health policy used by default to evaluate the
        /// health of a service type.
        /// </summary>
        [JsonProperty(PropertyName = "defaultServiceTypeHealthPolicy")]
        public ServiceTypeHealthPolicy DefaultServiceTypeHealthPolicy { get; set; }

        /// <summary>
        /// Gets or sets  Defines a ServiceTypeHealthPolicy per service type
        /// name,the key is the name of the application
        /// </summary>
        [JsonProperty(PropertyName = "serivceTypeHealthPolicies")]
        public IDictionary<string, ServiceTypeHealthPolicy> SerivceTypeHealthPolicies { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (DefaultServiceTypeHealthPolicy != null)
            {
                DefaultServiceTypeHealthPolicy.Validate();
            }
            if (SerivceTypeHealthPolicies != null)
            {
                foreach (var valueElement in SerivceTypeHealthPolicies.Values)
                {
                    if (valueElement != null)
                    {
                        valueElement.Validate();
                    }
                }
            }
        }
    }
}
