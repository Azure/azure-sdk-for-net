// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// </auto-generated>

namespace Microsoft.Azure.Management.StorSimple.Fluent.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.StorSimple;
    using Microsoft.Azure.Management.StorSimple.Fluent;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The metadata of the volume container, that is being considered as part
    /// of a failover set.
    /// </summary>
    public partial class VolumeContainerFailoverMetadata
    {
        /// <summary>
        /// Initializes a new instance of the VolumeContainerFailoverMetadata
        /// class.
        /// </summary>
        public VolumeContainerFailoverMetadata()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VolumeContainerFailoverMetadata
        /// class.
        /// </summary>
        /// <param name="volumeContainerId">The path ID of the volume
        /// container.</param>
        /// <param name="volumes">The list of metadata of volumes inside the
        /// volume container, which contains valid cloud snapshots.</param>
        public VolumeContainerFailoverMetadata(string volumeContainerId = default(string), IList<VolumeFailoverMetadata> volumes = default(IList<VolumeFailoverMetadata>))
        {
            VolumeContainerId = volumeContainerId;
            Volumes = volumes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the path ID of the volume container.
        /// </summary>
        [JsonProperty(PropertyName = "volumeContainerId")]
        public string VolumeContainerId { get; set; }

        /// <summary>
        /// Gets or sets the list of metadata of volumes inside the volume
        /// container, which contains valid cloud snapshots.
        /// </summary>
        [JsonProperty(PropertyName = "volumes")]
        public IList<VolumeFailoverMetadata> Volumes { get; set; }

    }
}
