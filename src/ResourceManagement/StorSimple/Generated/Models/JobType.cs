// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// </auto-generated>

namespace Microsoft.Azure.Management.StorSimple.Fluent.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.StorSimple;
    using Microsoft.Azure.Management.StorSimple.Fluent;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for JobType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum JobType
    {
        [EnumMember(Value = "ScheduledBackup")]
        ScheduledBackup,
        [EnumMember(Value = "ManualBackup")]
        ManualBackup,
        [EnumMember(Value = "RestoreBackup")]
        RestoreBackup,
        [EnumMember(Value = "CloneVolume")]
        CloneVolume,
        [EnumMember(Value = "FailoverVolumeContainers")]
        FailoverVolumeContainers,
        [EnumMember(Value = "CreateLocallyPinnedVolume")]
        CreateLocallyPinnedVolume,
        [EnumMember(Value = "ModifyVolume")]
        ModifyVolume,
        [EnumMember(Value = "InstallUpdates")]
        InstallUpdates,
        [EnumMember(Value = "SupportPackageLogs")]
        SupportPackageLogs,
        [EnumMember(Value = "CreateCloudAppliance")]
        CreateCloudAppliance
    }
    internal static class JobTypeEnumExtension
    {
        internal static string ToSerializedValue(this JobType? value)
        {
            return value == null ? null : ((JobType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this JobType value)
        {
            switch( value )
            {
                case JobType.ScheduledBackup:
                    return "ScheduledBackup";
                case JobType.ManualBackup:
                    return "ManualBackup";
                case JobType.RestoreBackup:
                    return "RestoreBackup";
                case JobType.CloneVolume:
                    return "CloneVolume";
                case JobType.FailoverVolumeContainers:
                    return "FailoverVolumeContainers";
                case JobType.CreateLocallyPinnedVolume:
                    return "CreateLocallyPinnedVolume";
                case JobType.ModifyVolume:
                    return "ModifyVolume";
                case JobType.InstallUpdates:
                    return "InstallUpdates";
                case JobType.SupportPackageLogs:
                    return "SupportPackageLogs";
                case JobType.CreateCloudAppliance:
                    return "CreateCloudAppliance";
            }
            return null;
        }

        internal static JobType? ParseJobType(this string value)
        {
            switch( value )
            {
                case "ScheduledBackup":
                    return JobType.ScheduledBackup;
                case "ManualBackup":
                    return JobType.ManualBackup;
                case "RestoreBackup":
                    return JobType.RestoreBackup;
                case "CloneVolume":
                    return JobType.CloneVolume;
                case "FailoverVolumeContainers":
                    return JobType.FailoverVolumeContainers;
                case "CreateLocallyPinnedVolume":
                    return JobType.CreateLocallyPinnedVolume;
                case "ModifyVolume":
                    return JobType.ModifyVolume;
                case "InstallUpdates":
                    return JobType.InstallUpdates;
                case "SupportPackageLogs":
                    return JobType.SupportPackageLogs;
                case "CreateCloudAppliance":
                    return JobType.CreateCloudAppliance;
            }
            return null;
        }
    }
}
