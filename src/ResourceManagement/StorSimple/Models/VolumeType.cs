// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// </auto-generated>

namespace Microsoft.Azure.Management.StorSimple.Fluent.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.StorSimple;
    using Microsoft.Azure.Management.StorSimple.Fluent;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for VolumeType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum VolumeType
    {
        [EnumMember(Value = "Tiered")]
        Tiered,
        [EnumMember(Value = "Archival")]
        Archival,
        [EnumMember(Value = "LocallyPinned")]
        LocallyPinned
    }
    internal static class VolumeTypeEnumExtension
    {
        internal static string ToSerializedValue(this VolumeType? value)
        {
            return value == null ? null : ((VolumeType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this VolumeType value)
        {
            switch( value )
            {
                case VolumeType.Tiered:
                    return "Tiered";
                case VolumeType.Archival:
                    return "Archival";
                case VolumeType.LocallyPinned:
                    return "LocallyPinned";
            }
            return null;
        }

        internal static VolumeType? ParseVolumeType(this string value)
        {
            switch( value )
            {
                case "Tiered":
                    return VolumeType.Tiered;
                case "Archival":
                    return VolumeType.Archival;
                case "LocallyPinned":
                    return VolumeType.LocallyPinned;
            }
            return null;
        }
    }
}
