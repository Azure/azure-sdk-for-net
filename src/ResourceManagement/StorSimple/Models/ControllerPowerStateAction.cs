// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// </auto-generated>

namespace Microsoft.Azure.Management.StorSimple.Fluent.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.StorSimple;
    using Microsoft.Azure.Management.StorSimple.Fluent;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for ControllerPowerStateAction.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ControllerPowerStateAction
    {
        [EnumMember(Value = "Start")]
        Start,
        [EnumMember(Value = "Restart")]
        Restart,
        [EnumMember(Value = "Shutdown")]
        Shutdown
    }
    internal static class ControllerPowerStateActionEnumExtension
    {
        internal static string ToSerializedValue(this ControllerPowerStateAction? value)
        {
            return value == null ? null : ((ControllerPowerStateAction)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this ControllerPowerStateAction value)
        {
            switch( value )
            {
                case ControllerPowerStateAction.Start:
                    return "Start";
                case ControllerPowerStateAction.Restart:
                    return "Restart";
                case ControllerPowerStateAction.Shutdown:
                    return "Shutdown";
            }
            return null;
        }

        internal static ControllerPowerStateAction? ParseControllerPowerStateAction(this string value)
        {
            switch( value )
            {
                case "Start":
                    return ControllerPowerStateAction.Start;
                case "Restart":
                    return ControllerPowerStateAction.Restart;
                case "Shutdown":
                    return ControllerPowerStateAction.Shutdown;
            }
            return null;
        }
    }
}
