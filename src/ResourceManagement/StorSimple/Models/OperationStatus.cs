// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// </auto-generated>

namespace Microsoft.Azure.Management.StorSimple.Fluent.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.StorSimple;
    using Microsoft.Azure.Management.StorSimple.Fluent;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for OperationStatus.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum OperationStatus
    {
        [EnumMember(Value = "None")]
        None,
        [EnumMember(Value = "Updating")]
        Updating,
        [EnumMember(Value = "Deleting")]
        Deleting,
        [EnumMember(Value = "Restoring")]
        Restoring
    }
    internal static class OperationStatusEnumExtension
    {
        internal static string ToSerializedValue(this OperationStatus? value)
        {
            return value == null ? null : ((OperationStatus)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this OperationStatus value)
        {
            switch( value )
            {
                case OperationStatus.None:
                    return "None";
                case OperationStatus.Updating:
                    return "Updating";
                case OperationStatus.Deleting:
                    return "Deleting";
                case OperationStatus.Restoring:
                    return "Restoring";
            }
            return null;
        }

        internal static OperationStatus? ParseOperationStatus(this string value)
        {
            switch( value )
            {
                case "None":
                    return OperationStatus.None;
                case "Updating":
                    return OperationStatus.Updating;
                case "Deleting":
                    return OperationStatus.Deleting;
                case "Restoring":
                    return OperationStatus.Restoring;
            }
            return null;
        }
    }
}
