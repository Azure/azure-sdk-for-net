// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// </auto-generated>

namespace Microsoft.Azure.Management.StorSimple.Fluent.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.StorSimple;
    using Microsoft.Azure.Management.StorSimple.Fluent;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The request object for fetching the list of failover targets (eligible
    /// devices for failover).
    /// </summary>
    public partial class ListFailoverTargetsRequest
    {
        /// <summary>
        /// Initializes a new instance of the ListFailoverTargetsRequest class.
        /// </summary>
        public ListFailoverTargetsRequest()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ListFailoverTargetsRequest class.
        /// </summary>
        /// <param name="volumeContainers">The list of path IDs of the volume
        /// containers that needs to be failed-over, for which we want to fetch
        /// the eligible targets.</param>
        public ListFailoverTargetsRequest(IList<string> volumeContainers = default(IList<string>))
        {
            VolumeContainers = volumeContainers;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the list of path IDs of the volume containers that
        /// needs to be failed-over, for which we want to fetch the eligible
        /// targets.
        /// </summary>
        [JsonProperty(PropertyName = "volumeContainers")]
        public IList<string> VolumeContainers { get; set; }

    }
}
