// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure;
using Microsoft.Azure.Management.Automation;
using Microsoft.Azure.Management.Automation.Models;

namespace Microsoft.Azure.Management.Automation
{
    public static partial class WebhookOperationsExtensions
    {
        /// <summary>
        /// Create the webhook identified by webhook name.  (see
        /// http://aka.ms/azureautomationsdk/webhookoperations for more
        /// information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Automation.IWebhookOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group
        /// </param>
        /// <param name='automationAccount'>
        /// Required. The automation account name.
        /// </param>
        /// <param name='parameters'>
        /// Required. The create or update parameters for webhook.
        /// </param>
        /// <returns>
        /// The response model for the create or update webhook operation.
        /// </returns>
        public static WebhookCreateOrUpdateResponse CreateOrUpdate(this IWebhookOperations operations, string resourceGroupName, string automationAccount, WebhookCreateOrUpdateParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IWebhookOperations)s).CreateOrUpdateAsync(resourceGroupName, automationAccount, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Create the webhook identified by webhook name.  (see
        /// http://aka.ms/azureautomationsdk/webhookoperations for more
        /// information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Automation.IWebhookOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group
        /// </param>
        /// <param name='automationAccount'>
        /// Required. The automation account name.
        /// </param>
        /// <param name='parameters'>
        /// Required. The create or update parameters for webhook.
        /// </param>
        /// <returns>
        /// The response model for the create or update webhook operation.
        /// </returns>
        public static Task<WebhookCreateOrUpdateResponse> CreateOrUpdateAsync(this IWebhookOperations operations, string resourceGroupName, string automationAccount, WebhookCreateOrUpdateParameters parameters)
        {
            return operations.CreateOrUpdateAsync(resourceGroupName, automationAccount, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Delete the webhook by name.  (see
        /// http://aka.ms/azureautomationsdk/webhookoperations for more
        /// information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Automation.IWebhookOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group
        /// </param>
        /// <param name='automationAccount'>
        /// Required. The automation account name.
        /// </param>
        /// <param name='webhookName'>
        /// Required. The webhook name.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static AzureOperationResponse Delete(this IWebhookOperations operations, string resourceGroupName, string automationAccount, string webhookName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IWebhookOperations)s).DeleteAsync(resourceGroupName, automationAccount, webhookName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Delete the webhook by name.  (see
        /// http://aka.ms/azureautomationsdk/webhookoperations for more
        /// information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Automation.IWebhookOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group
        /// </param>
        /// <param name='automationAccount'>
        /// Required. The automation account name.
        /// </param>
        /// <param name='webhookName'>
        /// Required. The webhook name.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<AzureOperationResponse> DeleteAsync(this IWebhookOperations operations, string resourceGroupName, string automationAccount, string webhookName)
        {
            return operations.DeleteAsync(resourceGroupName, automationAccount, webhookName, CancellationToken.None);
        }
        
        /// <summary>
        /// Generates a Uri for use in creating a webhook.  (see
        /// http://aka.ms/azureautomationsdk/webhookoperations for more
        /// information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Automation.IWebhookOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='automationAccount'>
        /// Required. The automation account name.
        /// </param>
        /// <returns>
        /// The response model for the webhook get uri response.
        /// </returns>
        public static WebhookGenerateUriResponse GenerateUri(this IWebhookOperations operations, string resourceGroupName, string automationAccount)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IWebhookOperations)s).GenerateUriAsync(resourceGroupName, automationAccount);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Generates a Uri for use in creating a webhook.  (see
        /// http://aka.ms/azureautomationsdk/webhookoperations for more
        /// information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Automation.IWebhookOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='automationAccount'>
        /// Required. The automation account name.
        /// </param>
        /// <returns>
        /// The response model for the webhook get uri response.
        /// </returns>
        public static Task<WebhookGenerateUriResponse> GenerateUriAsync(this IWebhookOperations operations, string resourceGroupName, string automationAccount)
        {
            return operations.GenerateUriAsync(resourceGroupName, automationAccount, CancellationToken.None);
        }
        
        /// <summary>
        /// Retrieve the webhook identified by webhook name.  (see
        /// http://aka.ms/azureautomationsdk/webhookoperations for more
        /// information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Automation.IWebhookOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group
        /// </param>
        /// <param name='automationAccount'>
        /// Required. The automation account name.
        /// </param>
        /// <param name='webhookName'>
        /// Required. The webhook name.
        /// </param>
        /// <returns>
        /// The response model for the get webhook operation.
        /// </returns>
        public static WebhookGetResponse Get(this IWebhookOperations operations, string resourceGroupName, string automationAccount, string webhookName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IWebhookOperations)s).GetAsync(resourceGroupName, automationAccount, webhookName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Retrieve the webhook identified by webhook name.  (see
        /// http://aka.ms/azureautomationsdk/webhookoperations for more
        /// information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Automation.IWebhookOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group
        /// </param>
        /// <param name='automationAccount'>
        /// Required. The automation account name.
        /// </param>
        /// <param name='webhookName'>
        /// Required. The webhook name.
        /// </param>
        /// <returns>
        /// The response model for the get webhook operation.
        /// </returns>
        public static Task<WebhookGetResponse> GetAsync(this IWebhookOperations operations, string resourceGroupName, string automationAccount, string webhookName)
        {
            return operations.GetAsync(resourceGroupName, automationAccount, webhookName, CancellationToken.None);
        }
        
        /// <summary>
        /// Retrieve a list of webhooks.  (see
        /// http://aka.ms/azureautomationsdk/webhookoperations for more
        /// information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Automation.IWebhookOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group
        /// </param>
        /// <param name='automationAccount'>
        /// Required. The automation account name.
        /// </param>
        /// <param name='runbookName'>
        /// Optional. The automation runbook name.
        /// </param>
        /// <returns>
        /// The response model for the list webhook operation.
        /// </returns>
        public static WebhookListResponse List(this IWebhookOperations operations, string resourceGroupName, string automationAccount, string runbookName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IWebhookOperations)s).ListAsync(resourceGroupName, automationAccount, runbookName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Retrieve a list of webhooks.  (see
        /// http://aka.ms/azureautomationsdk/webhookoperations for more
        /// information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Automation.IWebhookOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group
        /// </param>
        /// <param name='automationAccount'>
        /// Required. The automation account name.
        /// </param>
        /// <param name='runbookName'>
        /// Optional. The automation runbook name.
        /// </param>
        /// <returns>
        /// The response model for the list webhook operation.
        /// </returns>
        public static Task<WebhookListResponse> ListAsync(this IWebhookOperations operations, string resourceGroupName, string automationAccount, string runbookName)
        {
            return operations.ListAsync(resourceGroupName, automationAccount, runbookName, CancellationToken.None);
        }
        
        /// <summary>
        /// Retrieve next list of webhooks.  (see
        /// http://aka.ms/azureautomationsdk/webhookoperations for more
        /// information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Automation.IWebhookOperations.
        /// </param>
        /// <param name='nextLink'>
        /// Required. The link to retrieve next set of items.
        /// </param>
        /// <returns>
        /// The response model for the list webhook operation.
        /// </returns>
        public static WebhookListResponse ListNext(this IWebhookOperations operations, string nextLink)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IWebhookOperations)s).ListNextAsync(nextLink);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Retrieve next list of webhooks.  (see
        /// http://aka.ms/azureautomationsdk/webhookoperations for more
        /// information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Automation.IWebhookOperations.
        /// </param>
        /// <param name='nextLink'>
        /// Required. The link to retrieve next set of items.
        /// </param>
        /// <returns>
        /// The response model for the list webhook operation.
        /// </returns>
        public static Task<WebhookListResponse> ListNextAsync(this IWebhookOperations operations, string nextLink)
        {
            return operations.ListNextAsync(nextLink, CancellationToken.None);
        }
        
        /// <summary>
        /// Patch the webhook identified by webhook name.  (see
        /// http://aka.ms/azureautomationsdk/webhookoperations for more
        /// information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Automation.IWebhookOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group
        /// </param>
        /// <param name='automationAccount'>
        /// Required. The automation account name.
        /// </param>
        /// <param name='parameters'>
        /// Required. The patch parameters for webhook.
        /// </param>
        /// <returns>
        /// The response model for the get webhook operation.
        /// </returns>
        public static WebhookGetResponse Patch(this IWebhookOperations operations, string resourceGroupName, string automationAccount, WebhookPatchParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IWebhookOperations)s).PatchAsync(resourceGroupName, automationAccount, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Patch the webhook identified by webhook name.  (see
        /// http://aka.ms/azureautomationsdk/webhookoperations for more
        /// information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Automation.IWebhookOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group
        /// </param>
        /// <param name='automationAccount'>
        /// Required. The automation account name.
        /// </param>
        /// <param name='parameters'>
        /// Required. The patch parameters for webhook.
        /// </param>
        /// <returns>
        /// The response model for the get webhook operation.
        /// </returns>
        public static Task<WebhookGetResponse> PatchAsync(this IWebhookOperations operations, string resourceGroupName, string automationAccount, WebhookPatchParameters parameters)
        {
            return operations.PatchAsync(resourceGroupName, automationAccount, parameters, CancellationToken.None);
        }
    }
}
