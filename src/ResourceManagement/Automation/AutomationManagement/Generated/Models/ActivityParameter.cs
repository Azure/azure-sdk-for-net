// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;

namespace Microsoft.Azure.Management.Automation.Models
{
    /// <summary>
    /// Definition of the activity parameter.
    /// </summary>
    public partial class ActivityParameter
    {
        private bool _isDynamic;
        
        /// <summary>
        /// Optional. Gets or sets a Boolean value that indicates true if the
        /// parameter is dynamic.
        /// </summary>
        public bool IsDynamic
        {
            get { return this._isDynamic; }
            set { this._isDynamic = value; }
        }
        
        private bool _isMandatory;
        
        /// <summary>
        /// Optional. Gets or sets a Boolean value that indicates true if the
        /// parameter is required. If the value is false, the parameter is
        /// optional.
        /// </summary>
        public bool IsMandatory
        {
            get { return this._isMandatory; }
            set { this._isMandatory = value; }
        }
        
        private string _name;
        
        /// <summary>
        /// Optional. Gets or sets the name of the activity parameter.
        /// </summary>
        public string Name
        {
            get { return this._name; }
            set { this._name = value; }
        }
        
        private bool _position;
        
        /// <summary>
        /// Optional. Gets or sets the position of the activity parameter.
        /// </summary>
        public bool Position
        {
            get { return this._position; }
            set { this._position = value; }
        }
        
        private string _type;
        
        /// <summary>
        /// Optional. Gets or sets the type of the activity parameter.
        /// </summary>
        public string Type
        {
            get { return this._type; }
            set { this._type = value; }
        }
        
        private bool _valueFromPipeline;
        
        /// <summary>
        /// Optional. Gets or sets a Boolean value that indicates true if the
        /// parameter can take values from the incoming pipeline objects. This
        /// setting is used if the cmdlet must access the complete input
        /// object. false indicates that the parameter cannot take values from
        /// the complete input object.
        /// </summary>
        public bool ValueFromPipeline
        {
            get { return this._valueFromPipeline; }
            set { this._valueFromPipeline = value; }
        }
        
        private bool _valueFromPipelineByPropertyName;
        
        /// <summary>
        /// Optional. Gets or sets a Boolean value that indicates true if the
        /// parameter can be filled from a property of the incoming pipeline
        /// object that has the same name as this parameter. false indicates
        /// that the parameter cannot be filled from the incoming pipeline
        /// object property with the same name.
        /// </summary>
        public bool ValueFromPipelineByPropertyName
        {
            get { return this._valueFromPipelineByPropertyName; }
            set { this._valueFromPipelineByPropertyName = value; }
        }
        
        private bool _valueFromRemainingArguments;
        
        /// <summary>
        /// Optional. Gets or sets a Boolean value that indicates true if the
        /// cmdlet parameter accepts all the remaining command-line arguments
        /// that are associated with this parameter in the form of an array.
        /// false if the cmdlet parameter does not accept all the remaining
        /// argument values.
        /// </summary>
        public bool ValueFromRemainingArguments
        {
            get { return this._valueFromRemainingArguments; }
            set { this._valueFromRemainingArguments = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the ActivityParameter class.
        /// </summary>
        public ActivityParameter()
        {
        }
    }
}
