// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;

namespace Microsoft.Azure.Management.Automation.Models
{
    /// <summary>
    /// Definition of the connection fields.
    /// </summary>
    public partial class FieldDefinition
    {
        private bool _isEncrypted;
        
        /// <summary>
        /// Optional. Gets or sets the isEncrypted flag of the connection field
        /// definition.
        /// </summary>
        public bool IsEncrypted
        {
            get { return this._isEncrypted; }
            set { this._isEncrypted = value; }
        }
        
        private bool _isOptional;
        
        /// <summary>
        /// Optional. Gets or sets the isOptional flag of the connection field
        /// definition.
        /// </summary>
        public bool IsOptional
        {
            get { return this._isOptional; }
            set { this._isOptional = value; }
        }
        
        private string _type;
        
        /// <summary>
        /// Required. Gets or sets the type of the connection field definition.
        /// </summary>
        public string Type
        {
            get { return this._type; }
            set { this._type = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the FieldDefinition class.
        /// </summary>
        public FieldDefinition()
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the FieldDefinition class with
        /// required arguments.
        /// </summary>
        public FieldDefinition(string type)
            : this()
        {
            if (type == null)
            {
                throw new ArgumentNullException("type");
            }
            this.Type = type;
        }
    }
}
