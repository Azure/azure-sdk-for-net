// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.ServerManagement.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// Expanded gateway status information
    /// </summary>
    public partial class GatewayStatus
    {
        /// <summary>
        /// Initializes a new instance of the GatewayStatus class.
        /// </summary>
        public GatewayStatus() { }

        /// <summary>
        /// Initializes a new instance of the GatewayStatus class.
        /// </summary>
        public GatewayStatus(double? availableMemoryMByte = default(double?), double? gatewayCpuPercent = default(double?), double? gatewayWorkingSetMByte = default(double?), DateTime? statusUpdated = default(DateTime?))
        {
            AvailableMemoryMByte = availableMemoryMByte;
            GatewayCpuPercent = gatewayCpuPercent;
            GatewayWorkingSetMByte = gatewayWorkingSetMByte;
            StatusUpdated = statusUpdated;
        }

        /// <summary>
        /// The available memory on the gateway host machine in megabytes.
        /// </summary>
        [JsonProperty(PropertyName = "availableMemoryMByte")]
        public double? AvailableMemoryMByte { get; set; }

        /// <summary>
        /// The CPU utilization of the gateway process (numeric value between
        /// 0 and 100).
        /// </summary>
        [JsonProperty(PropertyName = "gatewayCpuPercent")]
        public double? GatewayCpuPercent { get; set; }

        /// <summary>
        /// The working set size of the gateway process in megabytes.
        /// </summary>
        [JsonProperty(PropertyName = "gatewayWorkingSetMByte")]
        public double? GatewayWorkingSetMByte { get; set; }

        /// <summary>
        /// UTC date and time when gateway status was last updated
        /// </summary>
        [JsonProperty(PropertyName = "statusUpdated")]
        public DateTime? StatusUpdated { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (this.GatewayCpuPercent > 100)
            {
                throw new ValidationException(ValidationRules.InclusiveMaximum, "GatewayCpuPercent", 100);
            }
            if (this.GatewayCpuPercent < 0)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "GatewayCpuPercent", 0);
            }
        }
    }
}
