// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.EventHub.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    public partial class EventHubProperties
    {
        /// <summary>
        /// Initializes a new instance of the EventHubProperties class.
        /// </summary>
        public EventHubProperties() { }

        /// <summary>
        /// Initializes a new instance of the EventHubProperties class.
        /// </summary>
        public EventHubProperties(DateTime? createdAt = default(DateTime?), long? messageRetentionInDays = default(long?), long? partitionCount = default(long?), IList<int?> partitionIds = default(IList<int?>), EntityStatus? status = default(EntityStatus?), DateTime? updatedAt = default(DateTime?))
        {
            CreatedAt = createdAt;
            MessageRetentionInDays = messageRetentionInDays;
            PartitionCount = partitionCount;
            PartitionIds = partitionIds;
            Status = status;
            UpdatedAt = updatedAt;
        }

        /// <summary>
        /// Exact time the Event was created.
        /// </summary>
        [JsonProperty(PropertyName = "createdAt")]
        public DateTime? CreatedAt { get; set; }

        /// <summary>
        /// Number of days to retain the events for this Event Hub.
        /// </summary>
        [JsonProperty(PropertyName = "messageRetentionInDays")]
        public long? MessageRetentionInDays { get; set; }

        /// <summary>
        /// Number of partitions created for EventHub.
        /// </summary>
        [JsonProperty(PropertyName = "partitionCount")]
        public long? PartitionCount { get; set; }

        /// <summary>
        /// Current number of shards on the Event Hub.
        /// </summary>
        [JsonProperty(PropertyName = "partitionIds")]
        public IList<int?> PartitionIds { get; set; }

        /// <summary>
        /// Enumerates the possible values for the status of the EventHub.
        /// Possible values include: 'Active', 'Disabled', 'Restoring',
        /// 'SendDisabled', 'ReceiveDisabled', 'Creating', 'Deleting',
        /// 'Renaming', 'Unknown'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public EntityStatus? Status { get; set; }

        /// <summary>
        /// The exact time the message has been updated.
        /// </summary>
        [JsonProperty(PropertyName = "updatedAt")]
        public DateTime? UpdatedAt { get; set; }

    }
}
