// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.DataLake.Analytics.Models
{
    using Azure;
    using Management;
    using DataLake;
    using Analytics;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A Data Lake Analytics catalog U-SQL table partition item.
    /// </summary>
    public partial class USqlTablePartition : CatalogItem
    {
        /// <summary>
        /// Initializes a new instance of the USqlTablePartition class.
        /// </summary>
        public USqlTablePartition() { }

        /// <summary>
        /// Initializes a new instance of the USqlTablePartition class.
        /// </summary>
        /// <param name="computeAccountName">the name of the Data Lake
        /// Analytics account.</param>
        /// <param name="version">the version of the catalog item.</param>
        /// <param name="databaseName">the name of the database.</param>
        /// <param name="schemaName">the name of the schema associated with
        /// this table partition and database.</param>
        /// <param name="name">the name of the table partition.</param>
        /// <param name="parentName">the Ddl object of the partition's
        /// parent.</param>
        /// <param name="indexId">the index ID for this partition.</param>
        /// <param name="label">the list of labels associated with this
        /// partition.</param>
        /// <param name="createDate">the creation time of the partition</param>
        public USqlTablePartition(string computeAccountName = default(string), System.Guid? version = default(System.Guid?), string databaseName = default(string), string schemaName = default(string), string name = default(string), DdlName parentName = default(DdlName), int? indexId = default(int?), IList<string> label = default(IList<string>), System.DateTimeOffset? createDate = default(System.DateTimeOffset?))
            : base(computeAccountName, version)
        {
            DatabaseName = databaseName;
            SchemaName = schemaName;
            Name = name;
            ParentName = parentName;
            IndexId = indexId;
            Label = label;
            CreateDate = createDate;
        }

        /// <summary>
        /// Gets or sets the name of the database.
        /// </summary>
        [JsonProperty(PropertyName = "databaseName")]
        public string DatabaseName { get; set; }

        /// <summary>
        /// Gets or sets the name of the schema associated with this table
        /// partition and database.
        /// </summary>
        [JsonProperty(PropertyName = "schemaName")]
        public string SchemaName { get; set; }

        /// <summary>
        /// Gets or sets the name of the table partition.
        /// </summary>
        [JsonProperty(PropertyName = "partitionName")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the Ddl object of the partition's parent.
        /// </summary>
        [JsonProperty(PropertyName = "parentName")]
        public DdlName ParentName { get; set; }

        /// <summary>
        /// Gets or sets the index ID for this partition.
        /// </summary>
        [JsonProperty(PropertyName = "indexId")]
        public int? IndexId { get; set; }

        /// <summary>
        /// Gets or sets the list of labels associated with this partition.
        /// </summary>
        [JsonProperty(PropertyName = "label")]
        public IList<string> Label { get; set; }

        /// <summary>
        /// Gets or sets the creation time of the partition
        /// </summary>
        [JsonProperty(PropertyName = "createDate")]
        public System.DateTimeOffset? CreateDate { get; set; }

    }
}

