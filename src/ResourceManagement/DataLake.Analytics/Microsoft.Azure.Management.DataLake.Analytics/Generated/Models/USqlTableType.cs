// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.DataLake.Analytics.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// A Data Lake Analytics catalog U-SQL table type item.
    /// </summary>
    public partial class USqlTableType : USqlType
    {
        /// <summary>
        /// Initializes a new instance of the USqlTableType class.
        /// </summary>
        public USqlTableType() { }

        /// <summary>
        /// Initializes a new instance of the USqlTableType class.
        /// </summary>
        public USqlTableType(string computeAccountName = default(string), Guid? version = default(Guid?), string databaseName = default(string), string schemaName = default(string), string name = default(string), string typeFamily = default(string), string cSharpName = default(string), string fullCSharpName = default(string), int? systemTypeId = default(int?), int? userTypeId = default(int?), int? schemaId = default(int?), int? principalId = default(int?), bool? isNullable = default(bool?), bool? isUserDefined = default(bool?), bool? isAssemblyType = default(bool?), bool? isTableType = default(bool?), bool? isComplexType = default(bool?), TypeFieldInfo columns = default(TypeFieldInfo))
            : base(computeAccountName, version, databaseName, schemaName, name, typeFamily, cSharpName, fullCSharpName, systemTypeId, userTypeId, schemaId, principalId, isNullable, isUserDefined, isAssemblyType, isTableType, isComplexType)
        {
            Columns = columns;
        }

        /// <summary>
        /// Gets or sets the type field information associated with this table
        /// type.
        /// </summary>
        [JsonProperty(PropertyName = "columns")]
        public TypeFieldInfo Columns { get; set; }

    }
}
