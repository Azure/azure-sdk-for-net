// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.DataLake.Analytics.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// A Data Lake Analytics catalog U-SQL credential item.
    /// </summary>
    public partial class USqlCredential : CatalogItem
    {
        /// <summary>
        /// Initializes a new instance of the USqlCredential class.
        /// </summary>
        public USqlCredential() { }

        /// <summary>
        /// Initializes a new instance of the USqlCredential class.
        /// </summary>
        /// <param name="computeAccountName">the name of the Data Lake Analytics account.</param>
        /// <param name="version">the version of the catalog item.</param>
        /// <param name="databaseName">the name of the database the credential is in.</param>
        /// <param name="identity">the name of the secret associated with the credential.</param>
        /// <param name="name">the name of the credential.</param>
        /// <param name="userName">the user name associated with the credential.</param>
        public USqlCredential(string computeAccountName = default(string), Guid? version = default(Guid?), string databaseName = default(string), string identity = default(string), string name = default(string), string userName = default(string))
            : base(computeAccountName, version)
        {
            DatabaseName = databaseName;
            Identity = identity;
            Name = name;
            UserName = userName;
        }

        /// <summary>
        /// Gets or sets the name of the database the credential is in.
        /// </summary>
        [JsonProperty(PropertyName = "databaseName")]
        public string DatabaseName { get; set; }

        /// <summary>
        /// Gets or sets the name of the secret associated with the credential.
        /// </summary>
        [JsonProperty(PropertyName = "identity")]
        public string Identity { get; set; }

        /// <summary>
        /// Gets or sets the name of the credential.
        /// </summary>
        [JsonProperty(PropertyName = "credentialName")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the user name associated with the credential.
        /// </summary>
        [JsonProperty(PropertyName = "userName")]
        public string UserName { get; set; }

    }
}
