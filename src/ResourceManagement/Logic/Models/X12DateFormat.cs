// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// </auto-generated>

namespace Microsoft.Azure.Management.Logic.Fluent.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.Logic;
    using Microsoft.Azure.Management.Logic.Fluent;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for X12DateFormat.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum X12DateFormat
    {
        [EnumMember(Value = "NotSpecified")]
        NotSpecified,
        [EnumMember(Value = "CCYYMMDD")]
        CCYYMMDD,
        [EnumMember(Value = "YYMMDD")]
        YYMMDD
    }
    internal static class X12DateFormatEnumExtension
    {
        internal static string ToSerializedValue(this X12DateFormat? value)
        {
            return value == null ? null : ((X12DateFormat)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this X12DateFormat value)
        {
            switch( value )
            {
                case X12DateFormat.NotSpecified:
                    return "NotSpecified";
                case X12DateFormat.CCYYMMDD:
                    return "CCYYMMDD";
                case X12DateFormat.YYMMDD:
                    return "YYMMDD";
            }
            return null;
        }

        internal static X12DateFormat? ParseX12DateFormat(this string value)
        {
            switch( value )
            {
                case "NotSpecified":
                    return X12DateFormat.NotSpecified;
                case "CCYYMMDD":
                    return X12DateFormat.CCYYMMDD;
                case "YYMMDD":
                    return X12DateFormat.YYMMDD;
            }
            return null;
        }
    }
}
