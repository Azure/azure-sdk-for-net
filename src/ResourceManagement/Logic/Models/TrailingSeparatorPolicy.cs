// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// </auto-generated>

namespace Microsoft.Azure.Management.Logic.Fluent.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.Logic;
    using Microsoft.Azure.Management.Logic.Fluent;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for TrailingSeparatorPolicy.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum TrailingSeparatorPolicy
    {
        [EnumMember(Value = "NotSpecified")]
        NotSpecified,
        [EnumMember(Value = "NotAllowed")]
        NotAllowed,
        [EnumMember(Value = "Optional")]
        Optional,
        [EnumMember(Value = "Mandatory")]
        Mandatory
    }
    internal static class TrailingSeparatorPolicyEnumExtension
    {
        internal static string ToSerializedValue(this TrailingSeparatorPolicy? value)
        {
            return value == null ? null : ((TrailingSeparatorPolicy)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this TrailingSeparatorPolicy value)
        {
            switch( value )
            {
                case TrailingSeparatorPolicy.NotSpecified:
                    return "NotSpecified";
                case TrailingSeparatorPolicy.NotAllowed:
                    return "NotAllowed";
                case TrailingSeparatorPolicy.Optional:
                    return "Optional";
                case TrailingSeparatorPolicy.Mandatory:
                    return "Mandatory";
            }
            return null;
        }

        internal static TrailingSeparatorPolicy? ParseTrailingSeparatorPolicy(this string value)
        {
            switch( value )
            {
                case "NotSpecified":
                    return TrailingSeparatorPolicy.NotSpecified;
                case "NotAllowed":
                    return TrailingSeparatorPolicy.NotAllowed;
                case "Optional":
                    return TrailingSeparatorPolicy.Optional;
                case "Mandatory":
                    return TrailingSeparatorPolicy.Mandatory;
            }
            return null;
        }
    }
}
