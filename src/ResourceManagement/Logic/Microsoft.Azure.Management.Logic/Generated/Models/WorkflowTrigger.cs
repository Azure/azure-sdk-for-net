// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Logic.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    [JsonTransformation]
    public partial class WorkflowTrigger : SubResource
    {
        /// <summary>
        /// Initializes a new instance of the WorkflowTrigger class.
        /// </summary>
        public WorkflowTrigger() { }

        /// <summary>
        /// Initializes a new instance of the WorkflowTrigger class.
        /// </summary>
        public WorkflowTrigger(string id = default(string), WorkflowTriggerProvisioningState? provisioningState = default(WorkflowTriggerProvisioningState?), DateTime? createdTime = default(DateTime?), DateTime? changedTime = default(DateTime?), WorkflowState? state = default(WorkflowState?), WorkflowStatus? status = default(WorkflowStatus?), DateTime? lastExecutionTime = default(DateTime?), DateTime? nextExecutionTime = default(DateTime?), WorkflowTriggerRecurrence recurrence = default(WorkflowTriggerRecurrence), ResourceReference workflow = default(ResourceReference), string name = default(string), string type = default(string))
            : base(id)
        {
            ProvisioningState = provisioningState;
            CreatedTime = createdTime;
            ChangedTime = changedTime;
            State = state;
            Status = status;
            LastExecutionTime = lastExecutionTime;
            NextExecutionTime = nextExecutionTime;
            Recurrence = recurrence;
            Workflow = workflow;
            Name = name;
            Type = type;
        }

        /// <summary>
        /// Gets gets the provisioning state. Possible values include:
        /// 'NotSpecified', 'Accepted', 'Running', 'Ready', 'Creating',
        /// 'Created', 'Deleting', 'Deleted', 'Canceled', 'Failed',
        /// 'Succeeded', 'Moving', 'Updating', 'Registering', 'Registered',
        /// 'Unregistering', 'Unregistered', 'Completed'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public WorkflowTriggerProvisioningState? ProvisioningState { get; private set; }

        /// <summary>
        /// Gets gets the created time.
        /// </summary>
        [JsonProperty(PropertyName = "properties.createdTime")]
        public DateTime? CreatedTime { get; private set; }

        /// <summary>
        /// Gets gets the changed time.
        /// </summary>
        [JsonProperty(PropertyName = "properties.changedTime")]
        public DateTime? ChangedTime { get; private set; }

        /// <summary>
        /// Gets gets the state. Possible values include: 'NotSpecified',
        /// 'Completed', 'Enabled', 'Disabled', 'Deleted', 'Suspended'
        /// </summary>
        [JsonProperty(PropertyName = "properties.state")]
        public WorkflowState? State { get; private set; }

        /// <summary>
        /// Gets gets the status. Possible values include: 'NotSpecified',
        /// 'Paused', 'Running', 'Waiting', 'Succeeded', 'Skipped',
        /// 'Suspended', 'Cancelled', 'Failed', 'Faulted', 'TimedOut',
        /// 'Aborted', 'Ignored'
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public WorkflowStatus? Status { get; private set; }

        /// <summary>
        /// Gets gets the last execution time.
        /// </summary>
        [JsonProperty(PropertyName = "properties.lastExecutionTime")]
        public DateTime? LastExecutionTime { get; private set; }

        /// <summary>
        /// Gets gets the next execution time.
        /// </summary>
        [JsonProperty(PropertyName = "properties.nextExecutionTime")]
        public DateTime? NextExecutionTime { get; private set; }

        /// <summary>
        /// Gets gets the workflow trigger recurrence.
        /// </summary>
        [JsonProperty(PropertyName = "properties.recurrence")]
        public WorkflowTriggerRecurrence Recurrence { get; private set; }

        /// <summary>
        /// Gets gets the reference to workflow.
        /// </summary>
        [JsonProperty(PropertyName = "properties.workflow")]
        public ResourceReference Workflow { get; private set; }

        /// <summary>
        /// Gets gets the workflow trigger name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets gets the workflow trigger type.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

    }
}
