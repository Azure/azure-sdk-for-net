// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Logic.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// The workflow run.
    /// </summary>
    [JsonTransformation]
    public partial class WorkflowRun : SubResource
    {
        /// <summary>
        /// Initializes a new instance of the WorkflowRun class.
        /// </summary>
        public WorkflowRun() { }

        /// <summary>
        /// Initializes a new instance of the WorkflowRun class.
        /// </summary>
        public WorkflowRun(string id = default(string), DateTime? startTime = default(DateTime?), DateTime? endTime = default(DateTime?), WorkflowStatus? status = default(WorkflowStatus?), string code = default(string), object error = default(object), string correlationId = default(string), Correlation correlation = default(Correlation), ResourceReference workflow = default(ResourceReference), WorkflowRunTrigger trigger = default(WorkflowRunTrigger), IDictionary<string, WorkflowOutputParameter> outputs = default(IDictionary<string, WorkflowOutputParameter>), WorkflowRunTrigger response = default(WorkflowRunTrigger), string name = default(string), string type = default(string))
            : base(id)
        {
            StartTime = startTime;
            EndTime = endTime;
            Status = status;
            Code = code;
            Error = error;
            CorrelationId = correlationId;
            Correlation = correlation;
            Workflow = workflow;
            Trigger = trigger;
            Outputs = outputs;
            Response = response;
            Name = name;
            Type = type;
        }

        /// <summary>
        /// Gets gets the start time.
        /// </summary>
        [JsonProperty(PropertyName = "properties.startTime")]
        public DateTime? StartTime { get; private set; }

        /// <summary>
        /// Gets gets the end time.
        /// </summary>
        [JsonProperty(PropertyName = "properties.endTime")]
        public DateTime? EndTime { get; private set; }

        /// <summary>
        /// Gets gets the status. Possible values include: 'NotSpecified',
        /// 'Paused', 'Running', 'Waiting', 'Succeeded', 'Skipped',
        /// 'Suspended', 'Cancelled', 'Failed', 'Faulted', 'TimedOut',
        /// 'Aborted', 'Ignored'
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public WorkflowStatus? Status { get; private set; }

        /// <summary>
        /// Gets gets the code.
        /// </summary>
        [JsonProperty(PropertyName = "properties.code")]
        public string Code { get; private set; }

        /// <summary>
        /// Gets gets the error.
        /// </summary>
        [JsonProperty(PropertyName = "properties.error")]
        public object Error { get; private set; }

        /// <summary>
        /// Gets gets the correlation id.
        /// </summary>
        [JsonProperty(PropertyName = "properties.correlationId")]
        public string CorrelationId { get; private set; }

        /// <summary>
        /// Gets or sets the run correlation.
        /// </summary>
        [JsonProperty(PropertyName = "properties.correlation")]
        public Correlation Correlation { get; set; }

        /// <summary>
        /// Gets gets the reference to workflow version.
        /// </summary>
        [JsonProperty(PropertyName = "properties.workflow")]
        public ResourceReference Workflow { get; private set; }

        /// <summary>
        /// Gets gets the fired trigger.
        /// </summary>
        [JsonProperty(PropertyName = "properties.trigger")]
        public WorkflowRunTrigger Trigger { get; private set; }

        /// <summary>
        /// Gets gets the outputs.
        /// </summary>
        [JsonProperty(PropertyName = "properties.outputs")]
        public IDictionary<string, WorkflowOutputParameter> Outputs { get; private set; }

        /// <summary>
        /// Gets gets the response of the flow run.
        /// </summary>
        [JsonProperty(PropertyName = "properties.response")]
        public WorkflowRunTrigger Response { get; private set; }

        /// <summary>
        /// Gets gets the workflow run name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets gets the workflow run type.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

    }
}
