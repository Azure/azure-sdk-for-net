// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Logic.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    public partial class X12EnvelopeOverride
    {
        /// <summary>
        /// Initializes a new instance of the X12EnvelopeOverride class.
        /// </summary>
        public X12EnvelopeOverride() { }

        /// <summary>
        /// Initializes a new instance of the X12EnvelopeOverride class.
        /// </summary>
        public X12EnvelopeOverride(string targetNamespace = default(string), string protocolVersion = default(string), string messageId = default(string), int? responsibleAgencyCode = default(int?), string headerVersion = default(string), string senderApplicationId = default(string), string receiverApplicationId = default(string), string functionalIdentifierCode = default(string), X12DateFormat? dateFormat = default(X12DateFormat?), X12TimeFormat? timeFormat = default(X12TimeFormat?))
        {
            TargetNamespace = targetNamespace;
            ProtocolVersion = protocolVersion;
            MessageId = messageId;
            ResponsibleAgencyCode = responsibleAgencyCode;
            HeaderVersion = headerVersion;
            SenderApplicationId = senderApplicationId;
            ReceiverApplicationId = receiverApplicationId;
            FunctionalIdentifierCode = functionalIdentifierCode;
            DateFormat = dateFormat;
            TimeFormat = timeFormat;
        }

        /// <summary>
        /// Gets or sets the target namespace on which this envelope settings
        /// has to be applied.
        /// </summary>
        [JsonProperty(PropertyName = "targetNamespace")]
        public string TargetNamespace { get; set; }

        /// <summary>
        /// Gets or sets the protocol version on which this envelope settings
        /// has to be applied.
        /// </summary>
        [JsonProperty(PropertyName = "protocolVersion")]
        public string ProtocolVersion { get; set; }

        /// <summary>
        /// Gets or sets the message id on which this envelope settings has to
        /// be applied.
        /// </summary>
        [JsonProperty(PropertyName = "messageId")]
        public string MessageId { get; set; }

        /// <summary>
        /// Gets or sets the responsible agency code.
        /// </summary>
        [JsonProperty(PropertyName = "responsibleAgencyCode")]
        public int? ResponsibleAgencyCode { get; set; }

        /// <summary>
        /// Gets or sets the header version.
        /// </summary>
        [JsonProperty(PropertyName = "headerVersion")]
        public string HeaderVersion { get; set; }

        /// <summary>
        /// Gets or sets the sender application id.
        /// </summary>
        [JsonProperty(PropertyName = "senderApplicationId")]
        public string SenderApplicationId { get; set; }

        /// <summary>
        /// Gets or sets the receiver application id.
        /// </summary>
        [JsonProperty(PropertyName = "receiverApplicationId")]
        public string ReceiverApplicationId { get; set; }

        /// <summary>
        /// Gets or sets the functional identifier code.
        /// </summary>
        [JsonProperty(PropertyName = "functionalIdentifierCode")]
        public string FunctionalIdentifierCode { get; set; }

        /// <summary>
        /// Gets or sets the date format. Possible values include:
        /// 'NotSpecified', 'CCYYMMDD', 'YYMMDD'
        /// </summary>
        [JsonProperty(PropertyName = "dateFormat")]
        public X12DateFormat? DateFormat { get; set; }

        /// <summary>
        /// Gets or sets the time format. Possible values include:
        /// 'NotSpecified', 'HHMM', 'HHMMSS', 'HHMMSSdd', 'HHMMSSd'
        /// </summary>
        [JsonProperty(PropertyName = "timeFormat")]
        public X12TimeFormat? TimeFormat { get; set; }

    }
}
