// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Logic.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// The AS2 agreement envelope settings.
    /// </summary>
    public partial class AS2EnvelopeSettings
    {
        /// <summary>
        /// Initializes a new instance of the AS2EnvelopeSettings class.
        /// </summary>
        public AS2EnvelopeSettings() { }

        /// <summary>
        /// Initializes a new instance of the AS2EnvelopeSettings class.
        /// </summary>
        public AS2EnvelopeSettings(string messageContentType, bool transmitFileNameInMimeHeader, string fileNameTemplate, bool suspendMessageOnFileNameGenerationError, bool autogenerateFileName)
        {
            MessageContentType = messageContentType;
            TransmitFileNameInMimeHeader = transmitFileNameInMimeHeader;
            FileNameTemplate = fileNameTemplate;
            SuspendMessageOnFileNameGenerationError = suspendMessageOnFileNameGenerationError;
            AutogenerateFileName = autogenerateFileName;
        }

        /// <summary>
        /// Gets or sets the message content type.
        /// </summary>
        [JsonProperty(PropertyName = "messageContentType")]
        public string MessageContentType { get; set; }

        /// <summary>
        /// Gets or sets the value indicating whether to transmit file name in
        /// mime header.
        /// </summary>
        [JsonProperty(PropertyName = "transmitFileNameInMimeHeader")]
        public bool TransmitFileNameInMimeHeader { get; set; }

        /// <summary>
        /// Gets or sets the template for file name.
        /// </summary>
        [JsonProperty(PropertyName = "fileNameTemplate")]
        public string FileNameTemplate { get; set; }

        /// <summary>
        /// Gets or sets the value indicating whether to suspend message on
        /// file name generation error.
        /// </summary>
        [JsonProperty(PropertyName = "suspendMessageOnFileNameGenerationError")]
        public bool SuspendMessageOnFileNameGenerationError { get; set; }

        /// <summary>
        /// Gets or sets the value indicating whether to auto generate file
        /// name.
        /// </summary>
        [JsonProperty(PropertyName = "autogenerateFileName")]
        public bool AutogenerateFileName { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (MessageContentType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "MessageContentType");
            }
            if (FileNameTemplate == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FileNameTemplate");
            }
        }
    }
}
