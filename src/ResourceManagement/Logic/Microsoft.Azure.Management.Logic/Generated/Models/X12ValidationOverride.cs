// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Logic.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    public partial class X12ValidationOverride
    {
        /// <summary>
        /// Initializes a new instance of the X12ValidationOverride class.
        /// </summary>
        public X12ValidationOverride() { }

        /// <summary>
        /// Initializes a new instance of the X12ValidationOverride class.
        /// </summary>
        public X12ValidationOverride(string messageId = default(string), bool? validateEDITypes = default(bool?), bool? validateXSDTypes = default(bool?), bool? allowLeadingAndTrailingSpacesAndZeroes = default(bool?), bool? validateCharacterSet = default(bool?), bool? trimLeadingAndTrailingSpacesAndZeroes = default(bool?), TrailingSeparatorPolicy? trailingSeparatorPolicy = default(TrailingSeparatorPolicy?))
        {
            MessageId = messageId;
            ValidateEDITypes = validateEDITypes;
            ValidateXSDTypes = validateXSDTypes;
            AllowLeadingAndTrailingSpacesAndZeroes = allowLeadingAndTrailingSpacesAndZeroes;
            ValidateCharacterSet = validateCharacterSet;
            TrimLeadingAndTrailingSpacesAndZeroes = trimLeadingAndTrailingSpacesAndZeroes;
            TrailingSeparatorPolicy = trailingSeparatorPolicy;
        }

        /// <summary>
        /// Gets or sets the message id on which the validation settings has
        /// to be applied.
        /// </summary>
        [JsonProperty(PropertyName = "messageId")]
        public string MessageId { get; set; }

        /// <summary>
        /// Gets or sets the value indicating whether to validate EDI types.
        /// </summary>
        [JsonProperty(PropertyName = "validateEDITypes")]
        public bool? ValidateEDITypes { get; set; }

        /// <summary>
        /// Gets or sets the value indicating whether to validate XSD types.
        /// </summary>
        [JsonProperty(PropertyName = "validateXSDTypes")]
        public bool? ValidateXSDTypes { get; set; }

        /// <summary>
        /// Gets or sets the value indicating whether to allow leading and
        /// trailing spaces and zeroes.
        /// </summary>
        [JsonProperty(PropertyName = "allowLeadingAndTrailingSpacesAndZeroes")]
        public bool? AllowLeadingAndTrailingSpacesAndZeroes { get; set; }

        /// <summary>
        /// Gets or sets the value indicating whether to validate character
        /// Set.
        /// </summary>
        [JsonProperty(PropertyName = "validateCharacterSet")]
        public bool? ValidateCharacterSet { get; set; }

        /// <summary>
        /// Gets or sets the value indicating whether to trim leading and
        /// trailing spaces and zeroes.
        /// </summary>
        [JsonProperty(PropertyName = "trimLeadingAndTrailingSpacesAndZeroes")]
        public bool? TrimLeadingAndTrailingSpacesAndZeroes { get; set; }

        /// <summary>
        /// Gets or sets the trailing separator policy. Possible values
        /// include: 'NotSpecified', 'NotAllowed', 'Optional', 'Mandatory'
        /// </summary>
        [JsonProperty(PropertyName = "trailingSeparatorPolicy")]
        public TrailingSeparatorPolicy? TrailingSeparatorPolicy { get; set; }

    }
}
