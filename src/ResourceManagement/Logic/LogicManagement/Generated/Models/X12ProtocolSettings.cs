// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Logic.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    public partial class X12ProtocolSettings
    {
        /// <summary>
        /// Initializes a new instance of the X12ProtocolSettings class.
        /// </summary>
        public X12ProtocolSettings() { }

        /// <summary>
        /// Initializes a new instance of the X12ProtocolSettings class.
        /// </summary>
        public X12ProtocolSettings(X12ValidationSettings validationSettings = default(X12ValidationSettings), X12FramingSettings framingSettings = default(X12FramingSettings), X12EnvelopeSettings envelopeSettings = default(X12EnvelopeSettings), X12AcknowledgementSettings acknowledgementSettings = default(X12AcknowledgementSettings), X12MessageFilter messageFilter = default(X12MessageFilter), X12SecuritySettings securitySettings = default(X12SecuritySettings), X12ProcessingSettings processingSettings = default(X12ProcessingSettings), IList<X12EnvelopeOverride> envelopeOverrides = default(IList<X12EnvelopeOverride>), IList<X12ValidationOverride> validationOverrides = default(IList<X12ValidationOverride>), IList<X12MessageIdentifier> messageFilterList = default(IList<X12MessageIdentifier>), IList<X12SchemaReference> schemaReferences = default(IList<X12SchemaReference>), IList<X12DelimiterOverrides> x12DelimiterOverrides = default(IList<X12DelimiterOverrides>))
        {
            ValidationSettings = validationSettings;
            FramingSettings = framingSettings;
            EnvelopeSettings = envelopeSettings;
            AcknowledgementSettings = acknowledgementSettings;
            MessageFilter = messageFilter;
            SecuritySettings = securitySettings;
            ProcessingSettings = processingSettings;
            EnvelopeOverrides = envelopeOverrides;
            ValidationOverrides = validationOverrides;
            MessageFilterList = messageFilterList;
            SchemaReferences = schemaReferences;
            X12DelimiterOverrides = x12DelimiterOverrides;
        }

        /// <summary>
        /// Gets or sets the X12 validation settings.
        /// </summary>
        [JsonProperty(PropertyName = "validationSettings")]
        public X12ValidationSettings ValidationSettings { get; set; }

        /// <summary>
        /// Gets or sets the X12 framing settings.
        /// </summary>
        [JsonProperty(PropertyName = "framingSettings")]
        public X12FramingSettings FramingSettings { get; set; }

        /// <summary>
        /// Gets or sets the X12 envelope settings.
        /// </summary>
        [JsonProperty(PropertyName = "envelopeSettings")]
        public X12EnvelopeSettings EnvelopeSettings { get; set; }

        /// <summary>
        /// Gets or sets the X12 acknowledgment settings.
        /// </summary>
        [JsonProperty(PropertyName = "acknowledgementSettings")]
        public X12AcknowledgementSettings AcknowledgementSettings { get; set; }

        /// <summary>
        /// Gets or sets the X12 message filter.
        /// </summary>
        [JsonProperty(PropertyName = "messageFilter")]
        public X12MessageFilter MessageFilter { get; set; }

        /// <summary>
        /// Gets or sets the X12 security settings.
        /// </summary>
        [JsonProperty(PropertyName = "securitySettings")]
        public X12SecuritySettings SecuritySettings { get; set; }

        /// <summary>
        /// Gets or sets the X12 processing settings.
        /// </summary>
        [JsonProperty(PropertyName = "processingSettings")]
        public X12ProcessingSettings ProcessingSettings { get; set; }

        /// <summary>
        /// Gets or sets the X12 envelope override settings.
        /// </summary>
        [JsonProperty(PropertyName = "envelopeOverrides")]
        public IList<X12EnvelopeOverride> EnvelopeOverrides { get; set; }

        /// <summary>
        /// Gets or sets the X12 validation override settings.
        /// </summary>
        [JsonProperty(PropertyName = "validationOverrides")]
        public IList<X12ValidationOverride> ValidationOverrides { get; set; }

        /// <summary>
        /// Gets or sets the X12 message filter list.
        /// </summary>
        [JsonProperty(PropertyName = "messageFilterList")]
        public IList<X12MessageIdentifier> MessageFilterList { get; set; }

        /// <summary>
        /// Gets or sets the X12 schema references.
        /// </summary>
        [JsonProperty(PropertyName = "schemaReferences")]
        public IList<X12SchemaReference> SchemaReferences { get; set; }

        /// <summary>
        /// Gets or sets the X12 delimiter override settings.
        /// </summary>
        [JsonProperty(PropertyName = "x12DelimiterOverrides")]
        public IList<X12DelimiterOverrides> X12DelimiterOverrides { get; set; }

    }
}
