// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.15.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Logic.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// </summary>
    public partial class EdifactProtocolSettings
    {
        /// <summary>
        /// Initializes a new instance of the EdifactProtocolSettings class.
        /// </summary>
        public EdifactProtocolSettings() { }

        /// <summary>
        /// Initializes a new instance of the EdifactProtocolSettings class.
        /// </summary>
        public EdifactProtocolSettings(EdifactValidationSettings validationSettings = default(EdifactValidationSettings), EdifactFramingSettings framingSettings = default(EdifactFramingSettings), EdifactEnvelopeSettings envelopeSettings = default(EdifactEnvelopeSettings), EdifactAcknowledgementSettings acknowledgementSettings = default(EdifactAcknowledgementSettings), EdifactMessageFilter messageFilter = default(EdifactMessageFilter), EdifactProcessingSettings processingSettings = default(EdifactProcessingSettings), IList<EdifactEnvelopeOverride> envelopeOverrides = default(IList<EdifactEnvelopeOverride>), IList<EdifactMessageIdentifier> messageFilterList = default(IList<EdifactMessageIdentifier>), IList<EdifactSchemaReference> schemaReferences = default(IList<EdifactSchemaReference>), IList<EdifactValidationOverride> validationOverrides = default(IList<EdifactValidationOverride>), IList<EdifactDelimiterOverride> edifactDelimiterOverrides = default(IList<EdifactDelimiterOverride>))
        {
            ValidationSettings = validationSettings;
            FramingSettings = framingSettings;
            EnvelopeSettings = envelopeSettings;
            AcknowledgementSettings = acknowledgementSettings;
            MessageFilter = messageFilter;
            ProcessingSettings = processingSettings;
            EnvelopeOverrides = envelopeOverrides;
            MessageFilterList = messageFilterList;
            SchemaReferences = schemaReferences;
            ValidationOverrides = validationOverrides;
            EdifactDelimiterOverrides = edifactDelimiterOverrides;
        }

        /// <summary>
        /// Gets or sets the EDIFACT validation settings.
        /// </summary>
        [JsonProperty(PropertyName = "validationSettings")]
        public EdifactValidationSettings ValidationSettings { get; set; }

        /// <summary>
        /// Gets or sets the EDIFACT framing settings.
        /// </summary>
        [JsonProperty(PropertyName = "framingSettings")]
        public EdifactFramingSettings FramingSettings { get; set; }

        /// <summary>
        /// Gets or sets the EDIFACT envelope settings.
        /// </summary>
        [JsonProperty(PropertyName = "envelopeSettings")]
        public EdifactEnvelopeSettings EnvelopeSettings { get; set; }

        /// <summary>
        /// Gets or sets the EDIFACT acknowledgement settings.
        /// </summary>
        [JsonProperty(PropertyName = "acknowledgementSettings")]
        public EdifactAcknowledgementSettings AcknowledgementSettings { get; set; }

        /// <summary>
        /// Gets or sets the EDIFACT message filter.
        /// </summary>
        [JsonProperty(PropertyName = "messageFilter")]
        public EdifactMessageFilter MessageFilter { get; set; }

        /// <summary>
        /// Gets or sets the EDIFACT processing Settings.
        /// </summary>
        [JsonProperty(PropertyName = "processingSettings")]
        public EdifactProcessingSettings ProcessingSettings { get; set; }

        /// <summary>
        /// Gets or sets the EDIFACT envelope override settings.
        /// </summary>
        [JsonProperty(PropertyName = "envelopeOverrides")]
        public IList<EdifactEnvelopeOverride> EnvelopeOverrides { get; set; }

        /// <summary>
        /// Gets or sets the EDIFACT message filter list.
        /// </summary>
        [JsonProperty(PropertyName = "messageFilterList")]
        public IList<EdifactMessageIdentifier> MessageFilterList { get; set; }

        /// <summary>
        /// Gets or sets the EDIFACT schema references.
        /// </summary>
        [JsonProperty(PropertyName = "schemaReferences")]
        public IList<EdifactSchemaReference> SchemaReferences { get; set; }

        /// <summary>
        /// Gets or sets the EDIFACT validation override settings.
        /// </summary>
        [JsonProperty(PropertyName = "validationOverrides")]
        public IList<EdifactValidationOverride> ValidationOverrides { get; set; }

        /// <summary>
        /// Gets or sets the EDIFACT delimiter override settings.
        /// </summary>
        [JsonProperty(PropertyName = "edifactDelimiterOverrides")]
        public IList<EdifactDelimiterOverride> EdifactDelimiterOverrides { get; set; }

    }
}
