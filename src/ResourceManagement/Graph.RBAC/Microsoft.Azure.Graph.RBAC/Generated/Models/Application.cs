// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Graph.RBAC.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// Active Directory user information
    /// </summary>
    public partial class Application
    {
        /// <summary>
        /// Initializes a new instance of the Application class.
        /// </summary>
        public Application() { }

        /// <summary>
        /// Initializes a new instance of the Application class.
        /// </summary>
        /// <param name="objectId">Gets or sets object Id</param>
        /// <param name="objectType">Gets or sets object type</param>
        /// <param name="appId">Gets or sets application Id</param>
        /// <param name="appPermissions">Gets or sets application permissions</param>
        /// <param name="availableToOtherTenants">Indicates if the application will be available to other tenants</param>
        /// <param name="displayName">Gets or sets the displayName</param>
        /// <param name="identifierUris">Gets or sets the application identifier Uris</param>
        /// <param name="replyUrls">Gets or sets the application reply Urls</param>
        /// <param name="homepage">Application homepage</param>
        public Application(string objectId = default(string), string objectType = default(string), string appId = default(string), IList<string> appPermissions = default(IList<string>), bool? availableToOtherTenants = default(bool?), string displayName = default(string), IList<string> identifierUris = default(IList<string>), IList<string> replyUrls = default(IList<string>), string homepage = default(string))
        {
            ObjectId = objectId;
            ObjectType = objectType;
            AppId = appId;
            AppPermissions = appPermissions;
            AvailableToOtherTenants = availableToOtherTenants;
            DisplayName = displayName;
            IdentifierUris = identifierUris;
            ReplyUrls = replyUrls;
            Homepage = homepage;
        }

        /// <summary>
        /// Gets or sets gets or sets object Id
        /// </summary>
        [JsonProperty(PropertyName = "objectId")]
        public string ObjectId { get; set; }

        /// <summary>
        /// Gets or sets gets or sets object type
        /// </summary>
        [JsonProperty(PropertyName = "objectType")]
        public string ObjectType { get; set; }

        /// <summary>
        /// Gets or sets gets or sets application Id
        /// </summary>
        [JsonProperty(PropertyName = "appId")]
        public string AppId { get; set; }

        /// <summary>
        /// Gets or sets gets or sets application permissions
        /// </summary>
        [JsonProperty(PropertyName = "appPermissions")]
        public IList<string> AppPermissions { get; set; }

        /// <summary>
        /// Gets or sets indicates if the application will be available to
        /// other tenants
        /// </summary>
        [JsonProperty(PropertyName = "availableToOtherTenants")]
        public bool? AvailableToOtherTenants { get; set; }

        /// <summary>
        /// Gets or sets gets or sets the displayName
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets gets or sets the application identifier Uris
        /// </summary>
        [JsonProperty(PropertyName = "identifierUris")]
        public IList<string> IdentifierUris { get; set; }

        /// <summary>
        /// Gets or sets gets or sets the application reply Urls
        /// </summary>
        [JsonProperty(PropertyName = "replyUrls")]
        public IList<string> ReplyUrls { get; set; }

        /// <summary>
        /// Gets or sets application homepage
        /// </summary>
        [JsonProperty(PropertyName = "homepage")]
        public string Homepage { get; set; }

    }
}
