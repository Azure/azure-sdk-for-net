// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Graph.RBAC.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// Request parameters for updating an existing work or school account user
    /// </summary>
    public partial class UserUpdateParameters
    {
        /// <summary>
        /// Initializes a new instance of the UserUpdateParameters class.
        /// </summary>
        public UserUpdateParameters() { }

        /// <summary>
        /// Initializes a new instance of the UserUpdateParameters class.
        /// </summary>
        /// <param name="accountEnabled">Enable the account. If it is enabled then true else false.</param>
        /// <param name="displayName">User display name</param>
        /// <param name="passwordProfile">Password Profile</param>
        /// <param name="mailNickname">The mail alias for the user</param>
        public UserUpdateParameters(bool? accountEnabled = default(bool?), string displayName = default(string), PasswordProfile passwordProfile = default(PasswordProfile), string mailNickname = default(string))
        {
            AccountEnabled = accountEnabled;
            DisplayName = displayName;
            PasswordProfile = passwordProfile;
            MailNickname = mailNickname;
        }

        /// <summary>
        /// Gets or sets enable the account. If it is enabled then true else
        /// false.
        /// </summary>
        [JsonProperty(PropertyName = "accountEnabled")]
        public bool? AccountEnabled { get; set; }

        /// <summary>
        /// Gets or sets user display name
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets password Profile
        /// </summary>
        [JsonProperty(PropertyName = "passwordProfile")]
        public PasswordProfile PasswordProfile { get; set; }

        /// <summary>
        /// Gets or sets the mail alias for the user
        /// </summary>
        [JsonProperty(PropertyName = "mailNickname")]
        public string MailNickname { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.PasswordProfile != null)
            {
                this.PasswordProfile.Validate();
            }
        }
    }
}
