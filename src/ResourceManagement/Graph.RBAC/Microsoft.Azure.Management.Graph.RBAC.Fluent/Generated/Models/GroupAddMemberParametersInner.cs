// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Graph.RBAC.Models
{
    using System.Linq;

    /// <summary>
    /// Request parameters for adding a member to a group
    /// </summary>
    public partial class GroupAddMemberParametersInner
    {
        /// <summary>
        /// Initializes a new instance of the GroupAddMemberParametersInner
        /// class.
        /// </summary>
        public GroupAddMemberParametersInner() { }

        /// <summary>
        /// Initializes a new instance of the GroupAddMemberParametersInner
        /// class.
        /// </summary>
        /// <param name="url">Member Object Url as
        /// "https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects/f260bbc4-c254-447b-94cf-293b5ec434dd",
        /// where "0b1f9851-1bf0-433f-aec3-cb9272f093dc" is the tenantId and
        /// "f260bbc4-c254-447b-94cf-293b5ec434dd" is the objectId of the
        /// member (user, application, servicePrincipal, group) to be
        /// added.</param>
        public GroupAddMemberParametersInner(string url)
        {
            Url = url;
        }

        /// <summary>
        /// Gets or sets member Object Url as
        /// "https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects/f260bbc4-c254-447b-94cf-293b5ec434dd",
        /// where "0b1f9851-1bf0-433f-aec3-cb9272f093dc" is the tenantId and
        /// "f260bbc4-c254-447b-94cf-293b5ec434dd" is the objectId of the
        /// member (user, application, servicePrincipal, group) to be added.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "url")]
        public string Url { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Url == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Url");
            }
        }
    }
}
