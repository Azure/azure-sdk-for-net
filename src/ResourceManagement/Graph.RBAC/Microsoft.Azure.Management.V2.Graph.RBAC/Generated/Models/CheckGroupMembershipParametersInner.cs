// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Graph.RBAC.Models
{
    using System.Linq;

    /// <summary>
    /// Request parameters for IsMemberOf API call
    /// </summary>
    public partial class CheckGroupMembershipParametersInner
    {
        /// <summary>
        /// Initializes a new instance of the
        /// CheckGroupMembershipParametersInner class.
        /// </summary>
        public CheckGroupMembershipParametersInner() { }

        /// <summary>
        /// Initializes a new instance of the
        /// CheckGroupMembershipParametersInner class.
        /// </summary>
        /// <param name="groupId">The object ID of the group to check.</param>
        /// <param name="memberId">The object ID of the contact, group, user,
        /// or service principal to check for membership in the specified
        /// group.</param>
        public CheckGroupMembershipParametersInner(string groupId, string memberId)
        {
            GroupId = groupId;
            MemberId = memberId;
        }

        /// <summary>
        /// Gets or sets the object ID of the group to check.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "groupId")]
        public string GroupId { get; set; }

        /// <summary>
        /// Gets or sets the object ID of the contact, group, user, or service
        /// principal to check for membership in the specified group.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "memberId")]
        public string MemberId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (GroupId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "GroupId");
            }
            if (MemberId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "MemberId");
            }
        }
    }
}
