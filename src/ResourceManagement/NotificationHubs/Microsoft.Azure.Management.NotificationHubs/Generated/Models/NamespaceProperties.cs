// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.NotificationHubs.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// Namespace properties.
    /// </summary>
    public partial class NamespaceProperties
    {
        /// <summary>
        /// Initializes a new instance of the NamespaceProperties class.
        /// </summary>
        public NamespaceProperties() { }

        /// <summary>
        /// Initializes a new instance of the NamespaceProperties class.
        /// </summary>
        public NamespaceProperties(string name = default(string), string provisioningState = default(string), string region = default(string), string status = default(string), DateTime? createdAt = default(DateTime?), string serviceBusEndpoint = default(string), string subscriptionId = default(string), string scaleUnit = default(string), bool? enabled = default(bool?), bool? critical = default(bool?), NamespaceType? namespaceType = default(NamespaceType?))
        {
            Name = name;
            ProvisioningState = provisioningState;
            Region = region;
            Status = status;
            CreatedAt = createdAt;
            ServiceBusEndpoint = serviceBusEndpoint;
            SubscriptionId = subscriptionId;
            ScaleUnit = scaleUnit;
            Enabled = enabled;
            Critical = critical;
            NamespaceType = namespaceType;
        }

        /// <summary>
        /// The name of the namespace.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets provisioning state of the Namespace.
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Specifies the targeted region in which the namespace should be
        /// created. It can be any of the following values: Australia
        /// EastAustralia SoutheastCentral USEast USEast US 2West USNorth
        /// Central USSouth Central USEast AsiaSoutheast AsiaBrazil
        /// SouthJapan EastJapan WestNorth EuropeWest Europe
        /// </summary>
        [JsonProperty(PropertyName = "region")]
        public string Region { get; set; }

        /// <summary>
        /// Status of the namespace. It can be any of these values:1 =
        /// Created/Active2 = Creating3 = Suspended4 = Deleting
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// The time the namespace was created.
        /// </summary>
        [JsonProperty(PropertyName = "createdAt")]
        public DateTime? CreatedAt { get; set; }

        /// <summary>
        /// Endpoint you can use to perform NotificationHub operations.
        /// </summary>
        [JsonProperty(PropertyName = "serviceBusEndpoint")]
        public string ServiceBusEndpoint { get; set; }

        /// <summary>
        /// The Id of the Azure subscription associated with the namespace.
        /// </summary>
        [JsonProperty(PropertyName = "subscriptionId")]
        public string SubscriptionId { get; set; }

        /// <summary>
        /// ScaleUnit where the namespace gets created
        /// </summary>
        [JsonProperty(PropertyName = "scaleUnit")]
        public string ScaleUnit { get; set; }

        /// <summary>
        /// Whether or not the namespace is currently enabled.
        /// </summary>
        [JsonProperty(PropertyName = "enabled")]
        public bool? Enabled { get; set; }

        /// <summary>
        /// Whether or not the namespace is set as Critical.
        /// </summary>
        [JsonProperty(PropertyName = "critical")]
        public bool? Critical { get; set; }

        /// <summary>
        /// Gets or sets the namespace type. Possible values include:
        /// 'Messaging', 'NotificationHub'
        /// </summary>
        [JsonProperty(PropertyName = "namespaceType")]
        public NamespaceType? NamespaceType { get; set; }

    }
}
