// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Route resource
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class RouteInner : Microsoft.Rest.Azure.SubResource
    {
        /// <summary>
        /// Initializes a new instance of the RouteInner class.
        /// </summary>
        public RouteInner() { }

        /// <summary>
        /// Initializes a new instance of the RouteInner class.
        /// </summary>
        /// <param name="nextHopType">Gets or sets the type of Azure hop the
        /// packet should be sent to. Possible values include:
        /// 'VirtualNetworkGateway', 'VnetLocal', 'Internet',
        /// 'VirtualAppliance', 'None'</param>
        /// <param name="addressPrefix">Gets or sets the destination CIDR to
        /// which the route applies.</param>
        /// <param name="nextHopIpAddress">Gets or sets the IP address packets
        /// should be forwarded to. Next hop values are only allowed in
        /// routes where the next hop type is VirtualAppliance.</param>
        /// <param name="provisioningState">Gets provisioning state of the
        /// resource Updating/Deleting/Failed</param>
        /// <param name="name">Gets name of the resource that is unique within
        /// a resource group. This name can be used to access the
        /// resource</param>
        /// <param name="etag">A unique read-only string that changes whenever
        /// the resource is updated</param>
        public RouteInner(string nextHopType, string id = default(string), string addressPrefix = default(string), string nextHopIpAddress = default(string), string provisioningState = default(string), string name = default(string), string etag = default(string))
            : base(id)
        {
            AddressPrefix = addressPrefix;
            NextHopType = nextHopType;
            NextHopIpAddress = nextHopIpAddress;
            ProvisioningState = provisioningState;
            Name = name;
            Etag = etag;
        }

        /// <summary>
        /// Gets or sets the destination CIDR to which the route applies.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.addressPrefix")]
        public string AddressPrefix { get; set; }

        /// <summary>
        /// Gets or sets the type of Azure hop the packet should be sent to.
        /// Possible values include: 'VirtualNetworkGateway', 'VnetLocal',
        /// 'Internet', 'VirtualAppliance', 'None'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.nextHopType")]
        public string NextHopType { get; set; }

        /// <summary>
        /// Gets or sets the IP address packets should be forwarded to. Next
        /// hop values are only allowed in routes where the next hop type is
        /// VirtualAppliance.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.nextHopIpAddress")]
        public string NextHopIpAddress { get; set; }

        /// <summary>
        /// Gets provisioning state of the resource Updating/Deleting/Failed
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Gets name of the resource that is unique within a resource group.
        /// This name can be used to access the resource
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets a unique read-only string that changes whenever the
        /// resource is updated
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "etag")]
        public string Etag { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (NextHopType == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "NextHopType");
            }
        }
    }
}
