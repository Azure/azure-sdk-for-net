// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Network.Fluent.Models
{
    using System.Linq;

    /// <summary>
    /// A common class for general resource information
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class LocalNetworkGatewayInner : Microsoft.Azure.Management.Resource.Fluent.Resource
    {
        /// <summary>
        /// Initializes a new instance of the LocalNetworkGatewayInner class.
        /// </summary>
        public LocalNetworkGatewayInner() { }

        /// <summary>
        /// Initializes a new instance of the LocalNetworkGatewayInner class.
        /// </summary>
        /// <param name="localNetworkAddressSpace">Local network site Address
        /// space</param>
        /// <param name="gatewayIpAddress">IP address of local network
        /// gateway.</param>
        /// <param name="bgpSettings">Local network gateway's BGP speaker
        /// settings</param>
        /// <param name="resourceGuid">Gets or sets resource guid property of
        /// the LocalNetworkGateway resource</param>
        /// <param name="provisioningState">Gets provisioning state of the
        /// LocalNetworkGateway resource Updating/Deleting/Failed</param>
        /// <param name="etag">Gets a unique read-only string that changes
        /// whenever the resource is updated</param>
        public LocalNetworkGatewayInner(string location = default(string), string id = default(string), string name = default(string), string type = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), AddressSpace localNetworkAddressSpace = default(AddressSpace), string gatewayIpAddress = default(string), BgpSettings bgpSettings = default(BgpSettings), string resourceGuid = default(string), string provisioningState = default(string), string etag = default(string))
            : base(location, id, name, type, tags)
        {
            LocalNetworkAddressSpace = localNetworkAddressSpace;
            GatewayIpAddress = gatewayIpAddress;
            BgpSettings = bgpSettings;
            ResourceGuid = resourceGuid;
            ProvisioningState = provisioningState;
            Etag = etag;
        }

        /// <summary>
        /// Gets or sets local network site Address space
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.localNetworkAddressSpace")]
        public AddressSpace LocalNetworkAddressSpace { get; set; }

        /// <summary>
        /// Gets or sets IP address of local network gateway.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.gatewayIpAddress")]
        public string GatewayIpAddress { get; set; }

        /// <summary>
        /// Gets or sets local network gateway's BGP speaker settings
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.bgpSettings")]
        public BgpSettings BgpSettings { get; set; }

        /// <summary>
        /// Gets or sets resource guid property of the LocalNetworkGateway
        /// resource
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.resourceGuid")]
        public string ResourceGuid { get; set; }

        /// <summary>
        /// Gets provisioning state of the LocalNetworkGateway resource
        /// Updating/Deleting/Failed
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource
        /// is updated
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "etag")]
        public string Etag { get; set; }

    }
}
