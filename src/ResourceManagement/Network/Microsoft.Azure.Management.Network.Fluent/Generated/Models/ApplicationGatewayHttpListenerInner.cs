// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Network.Fluent.Models
{
    using System.Linq;

    /// <summary>
    /// Http listener of application gateway
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class ApplicationGatewayHttpListenerInner : Microsoft.Azure.Management.Resource.Fluent.SubResource
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ApplicationGatewayHttpListenerInner class.
        /// </summary>
        public ApplicationGatewayHttpListenerInner() { }

        /// <summary>
        /// Initializes a new instance of the
        /// ApplicationGatewayHttpListenerInner class.
        /// </summary>
        /// <param name="frontendIPConfiguration">Frontend IP configuration
        /// resource of application gateway </param>
        /// <param name="frontendPort">Frontend port resource of application
        /// gateway </param>
        /// <param name="protocol">Protocol. Possible values include: 'Http',
        /// 'Https'</param>
        /// <param name="hostName">Host name of http listener </param>
        /// <param name="sslCertificate">Ssl certificate resource of
        /// application gateway </param>
        /// <param
        /// name="requireServerNameIndication">RequireServerNameIndication of
        /// http listener </param>
        /// <param name="provisioningState">Provisioning state of the http
        /// listener resource Updating/Deleting/Failed</param>
        /// <param name="name">Name of the resource that is unique within a
        /// resource group. This name can be used to access the
        /// resource</param>
        /// <param name="etag">A unique read-only string that changes whenever
        /// the resource is updated</param>
        public ApplicationGatewayHttpListenerInner(string id = default(string), Microsoft.Azure.Management.Resource.Fluent.SubResource frontendIPConfiguration = default(Microsoft.Azure.Management.Resource.Fluent.SubResource), Microsoft.Azure.Management.Resource.Fluent.SubResource frontendPort = default(Microsoft.Azure.Management.Resource.Fluent.SubResource), string protocol = default(string), string hostName = default(string), Microsoft.Azure.Management.Resource.Fluent.SubResource sslCertificate = default(Microsoft.Azure.Management.Resource.Fluent.SubResource), bool? requireServerNameIndication = default(bool?), string provisioningState = default(string), string name = default(string), string etag = default(string))
            : base(id)
        {
            FrontendIPConfiguration = frontendIPConfiguration;
            FrontendPort = frontendPort;
            Protocol = protocol;
            HostName = hostName;
            SslCertificate = sslCertificate;
            RequireServerNameIndication = requireServerNameIndication;
            ProvisioningState = provisioningState;
            Name = name;
            Etag = etag;
        }

        /// <summary>
        /// Gets or sets frontend IP configuration resource of application
        /// gateway
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.frontendIPConfiguration")]
        public Microsoft.Azure.Management.Resource.Fluent.SubResource FrontendIPConfiguration { get; set; }

        /// <summary>
        /// Gets or sets frontend port resource of application gateway
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.frontendPort")]
        public Microsoft.Azure.Management.Resource.Fluent.SubResource FrontendPort { get; set; }

        /// <summary>
        /// Gets or sets protocol. Possible values include: 'Http', 'Https'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.protocol")]
        public string Protocol { get; set; }

        /// <summary>
        /// Gets or sets host name of http listener
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.hostName")]
        public string HostName { get; set; }

        /// <summary>
        /// Gets or sets ssl certificate resource of application gateway
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.sslCertificate")]
        public Microsoft.Azure.Management.Resource.Fluent.SubResource SslCertificate { get; set; }

        /// <summary>
        /// Gets or sets requireServerNameIndication of http listener
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.requireServerNameIndication")]
        public bool? RequireServerNameIndication { get; set; }

        /// <summary>
        /// Gets or sets provisioning state of the http listener resource
        /// Updating/Deleting/Failed
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Gets or sets name of the resource that is unique within a resource
        /// group. This name can be used to access the resource
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets a unique read-only string that changes whenever the
        /// resource is updated
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "etag")]
        public string Etag { get; set; }

    }
}
