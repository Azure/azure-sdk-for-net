// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Specfies the peering config
    /// </summary>
    public partial class ExpressRouteCircuitPeeringConfig
    {
        /// <summary>
        /// Initializes a new instance of the ExpressRouteCircuitPeeringConfig
        /// class.
        /// </summary>
        public ExpressRouteCircuitPeeringConfig() { }

        /// <summary>
        /// Initializes a new instance of the ExpressRouteCircuitPeeringConfig
        /// class.
        /// </summary>
        /// <param name="advertisedPublicPrefixes">Gets or sets the reference
        /// of AdvertisedPublicPrefixes</param>
        /// <param name="advertisedPublicPrefixesState">Gets or sets
        /// AdvertisedPublicPrefixState of the Peering resource . Possible
        /// values include: 'NotConfigured', 'Configuring', 'Configured',
        /// 'ValidationNeeded'</param>
        /// <param name="customerASN">Gets or Sets CustomerAsn of the
        /// peering.</param>
        /// <param name="routingRegistryName">Gets or Sets RoutingRegistryName
        /// of the config.</param>
        public ExpressRouteCircuitPeeringConfig(System.Collections.Generic.IList<string> advertisedPublicPrefixes = default(System.Collections.Generic.IList<string>), string advertisedPublicPrefixesState = default(string), int? customerASN = default(int?), string routingRegistryName = default(string))
        {
            AdvertisedPublicPrefixes = advertisedPublicPrefixes;
            AdvertisedPublicPrefixesState = advertisedPublicPrefixesState;
            CustomerASN = customerASN;
            RoutingRegistryName = routingRegistryName;
        }

        /// <summary>
        /// Gets or sets the reference of AdvertisedPublicPrefixes
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "advertisedPublicPrefixes")]
        public System.Collections.Generic.IList<string> AdvertisedPublicPrefixes { get; set; }

        /// <summary>
        /// Gets or sets AdvertisedPublicPrefixState of the Peering resource .
        /// Possible values include: 'NotConfigured', 'Configuring',
        /// 'Configured', 'ValidationNeeded'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "advertisedPublicPrefixesState")]
        public string AdvertisedPublicPrefixesState { get; set; }

        /// <summary>
        /// Gets or Sets CustomerAsn of the peering.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "customerASN")]
        public int? CustomerASN { get; set; }

        /// <summary>
        /// Gets or Sets RoutingRegistryName of the config.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "routingRegistryName")]
        public string RoutingRegistryName { get; set; }

    }
}
