// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.13.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// Subnet in a VirtualNework resource
    /// </summary>
    public partial class Subnet : SubResource
    {
        /// <summary>
        /// Initializes a new instance of the Subnet class.
        /// </summary>
        public Subnet() { }

        /// <summary>
        /// Initializes a new instance of the Subnet class.
        /// </summary>
        public Subnet(string addressPrefix, string name = default(string), string etag = default(string), SubResource networkSecurityGroup = default(SubResource), SubResource routeTable = default(SubResource), IList<SubResource> ipConfigurations = default(IList<SubResource>), string provisioningState = default(string))
        {
            Name = name;
            Etag = etag;
            AddressPrefix = addressPrefix;
            NetworkSecurityGroup = networkSecurityGroup;
            RouteTable = routeTable;
            IpConfigurations = ipConfigurations;
            ProvisioningState = provisioningState;
        }

        /// <summary>
        /// Gets name of the resource that is unique within a resource group.
        /// This name can be used to access the resource
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// A unique read-only string that changes whenever the resource is
        /// updated
        /// </summary>
        [JsonProperty(PropertyName = "etag")]
        public string Etag { get; set; }

        /// <summary>
        /// Gets or sets Address prefix for the subnet.
        /// </summary>
        [JsonProperty(PropertyName = "properties.addressPrefix")]
        public string AddressPrefix { get; set; }

        /// <summary>
        /// Gets or sets the reference of the NetworkSecurityGroup resource
        /// </summary>
        [JsonProperty(PropertyName = "properties.networkSecurityGroup")]
        public SubResource NetworkSecurityGroup { get; set; }

        /// <summary>
        /// Gets or sets the reference of the RouteTable resource
        /// </summary>
        [JsonProperty(PropertyName = "properties.routeTable")]
        public SubResource RouteTable { get; set; }

        /// <summary>
        /// Gets array of references to the network interface IP
        /// configurations using subnet
        /// </summary>
        [JsonProperty(PropertyName = "properties.ipConfigurations")]
        public IList<SubResource> IpConfigurations { get; set; }

        /// <summary>
        /// Gets or sets Provisioning state of the PublicIP resource
        /// Updating/Deleting/Failed
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Validate the object. Throws ArgumentException or ArgumentNullException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (AddressPrefix == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AddressPrefix");
            }
        }
    }
}
