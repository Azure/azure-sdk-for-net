// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Subnet in a virtual network resource.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class Subnet : SubResource
    {
        /// <summary>
        /// Initializes a new instance of the Subnet class.
        /// </summary>
        public Subnet() { }

        /// <summary>
        /// Initializes a new instance of the Subnet class.
        /// </summary>
        /// <param name="id">Resource ID.</param>
        /// <param name="addressPrefix">The address prefix for the
        /// subnet.</param>
        /// <param name="networkSecurityGroup">The reference of the
        /// NetworkSecurityGroup resource.</param>
        /// <param name="routeTable">The reference of the RouteTable
        /// resource.</param>
        /// <param name="ipConfigurations">Gets an array of references to the
        /// network interface IP configurations using subnet.</param>
        /// <param name="resourceNavigationLinks">Gets an array of references
        /// to the external resources using subnet.</param>
        /// <param name="provisioningState">The provisioning state of the
        /// resource.</param>
        /// <param name="name">The name of the resource that is unique within
        /// a resource group. This name can be used to access the
        /// resource.</param>
        /// <param name="etag">A unique read-only string that changes whenever
        /// the resource is updated.</param>
        public Subnet(string id = default(string), string addressPrefix = default(string), NetworkSecurityGroup networkSecurityGroup = default(NetworkSecurityGroup), RouteTable routeTable = default(RouteTable), System.Collections.Generic.IList<IPConfiguration> ipConfigurations = default(System.Collections.Generic.IList<IPConfiguration>), System.Collections.Generic.IList<ResourceNavigationLink> resourceNavigationLinks = default(System.Collections.Generic.IList<ResourceNavigationLink>), string provisioningState = default(string), string name = default(string), string etag = default(string))
            : base(id)
        {
            AddressPrefix = addressPrefix;
            NetworkSecurityGroup = networkSecurityGroup;
            RouteTable = routeTable;
            IpConfigurations = ipConfigurations;
            ResourceNavigationLinks = resourceNavigationLinks;
            ProvisioningState = provisioningState;
            Name = name;
            Etag = etag;
        }

        /// <summary>
        /// Gets or sets the address prefix for the subnet.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.addressPrefix")]
        public string AddressPrefix { get; set; }

        /// <summary>
        /// Gets or sets the reference of the NetworkSecurityGroup resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.networkSecurityGroup")]
        public NetworkSecurityGroup NetworkSecurityGroup { get; set; }

        /// <summary>
        /// Gets or sets the reference of the RouteTable resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.routeTable")]
        public RouteTable RouteTable { get; set; }

        /// <summary>
        /// Gets an array of references to the network interface IP
        /// configurations using subnet.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.ipConfigurations")]
        public System.Collections.Generic.IList<IPConfiguration> IpConfigurations { get; private set; }

        /// <summary>
        /// Gets an array of references to the external resources using subnet.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.resourceNavigationLinks")]
        public System.Collections.Generic.IList<ResourceNavigationLink> ResourceNavigationLinks { get; set; }

        /// <summary>
        /// Gets or sets the provisioning state of the resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Gets or sets the name of the resource that is unique within a
        /// resource group. This name can be used to access the resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets a unique read-only string that changes whenever the
        /// resource is updated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "etag")]
        public string Etag { get; set; }

    }
}
