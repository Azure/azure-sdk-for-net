// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// Application gateway backendhealth http settings.
    /// </summary>
    public partial class ApplicationGatewayBackendHealthServer
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ApplicationGatewayBackendHealthServer class.
        /// </summary>
        public ApplicationGatewayBackendHealthServer() { }

        /// <summary>
        /// Initializes a new instance of the
        /// ApplicationGatewayBackendHealthServer class.
        /// </summary>
        public ApplicationGatewayBackendHealthServer(string address = default(string), SubResource ipConfiguration = default(SubResource), string health = default(string))
        {
            Address = address;
            IpConfiguration = ipConfiguration;
            Health = health;
        }

        /// <summary>
        /// IP address or FQDN of backend server
        /// </summary>
        [JsonProperty(PropertyName = "address")]
        public string Address { get; set; }

        /// <summary>
        /// Reference of IP configuration of backend server.
        /// </summary>
        [JsonProperty(PropertyName = "ipConfiguration")]
        public SubResource IpConfiguration { get; set; }

        /// <summary>
        /// Health of backend server. Possible values include: 'Unknown',
        /// 'Up', 'Down', 'Partial'
        /// </summary>
        [JsonProperty(PropertyName = "health")]
        public string Health { get; set; }

    }
}
