// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// ExpressRouteCircuit resource
    /// </summary>
    [JsonTransformation]
    public partial class ExpressRouteCircuit : Resource
    {
        /// <summary>
        /// Initializes a new instance of the ExpressRouteCircuit class.
        /// </summary>
        public ExpressRouteCircuit() { }

        /// <summary>
        /// Initializes a new instance of the ExpressRouteCircuit class.
        /// </summary>
        public ExpressRouteCircuit(string id = default(string), string name = default(string), string type = default(string), string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), ExpressRouteCircuitSku sku = default(ExpressRouteCircuitSku), bool? allowClassicOperations = default(bool?), string circuitProvisioningState = default(string), string serviceProviderProvisioningState = default(string), IList<ExpressRouteCircuitAuthorization> authorizations = default(IList<ExpressRouteCircuitAuthorization>), IList<ExpressRouteCircuitPeering> peerings = default(IList<ExpressRouteCircuitPeering>), string serviceKey = default(string), string serviceProviderNotes = default(string), ExpressRouteCircuitServiceProviderProperties serviceProviderProperties = default(ExpressRouteCircuitServiceProviderProperties), string provisioningState = default(string), string etag = default(string))
            : base(id, name, type, location, tags)
        {
            Sku = sku;
            AllowClassicOperations = allowClassicOperations;
            CircuitProvisioningState = circuitProvisioningState;
            ServiceProviderProvisioningState = serviceProviderProvisioningState;
            Authorizations = authorizations;
            Peerings = peerings;
            ServiceKey = serviceKey;
            ServiceProviderNotes = serviceProviderNotes;
            ServiceProviderProperties = serviceProviderProperties;
            ProvisioningState = provisioningState;
            Etag = etag;
        }

        /// <summary>
        /// Gets or sets sku
        /// </summary>
        [JsonProperty(PropertyName = "sku")]
        public ExpressRouteCircuitSku Sku { get; set; }

        /// <summary>
        /// allow classic operations
        /// </summary>
        [JsonProperty(PropertyName = "properties.allowClassicOperations")]
        public bool? AllowClassicOperations { get; set; }

        /// <summary>
        /// Gets or sets CircuitProvisioningState state of the resource
        /// </summary>
        [JsonProperty(PropertyName = "properties.circuitProvisioningState")]
        public string CircuitProvisioningState { get; set; }

        /// <summary>
        /// Gets or sets ServiceProviderProvisioningState state of the
        /// resource . Possible values include: 'NotProvisioned',
        /// 'Provisioning', 'Provisioned', 'Deprovisioning'
        /// </summary>
        [JsonProperty(PropertyName = "properties.serviceProviderProvisioningState")]
        public string ServiceProviderProvisioningState { get; set; }

        /// <summary>
        /// Gets or sets list of authorizations
        /// </summary>
        [JsonProperty(PropertyName = "properties.authorizations")]
        public IList<ExpressRouteCircuitAuthorization> Authorizations { get; set; }

        /// <summary>
        /// Gets or sets list of peerings
        /// </summary>
        [JsonProperty(PropertyName = "properties.peerings")]
        public IList<ExpressRouteCircuitPeering> Peerings { get; set; }

        /// <summary>
        /// Gets or sets ServiceKey
        /// </summary>
        [JsonProperty(PropertyName = "properties.serviceKey")]
        public string ServiceKey { get; set; }

        /// <summary>
        /// Gets or sets ServiceProviderNotes
        /// </summary>
        [JsonProperty(PropertyName = "properties.serviceProviderNotes")]
        public string ServiceProviderNotes { get; set; }

        /// <summary>
        /// Gets or sets ServiceProviderProperties
        /// </summary>
        [JsonProperty(PropertyName = "properties.serviceProviderProperties")]
        public ExpressRouteCircuitServiceProviderProperties ServiceProviderProperties { get; set; }

        /// <summary>
        /// Gets provisioning state of the PublicIP resource
        /// Updating/Deleting/Failed
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource
        /// is updated
        /// </summary>
        [JsonProperty(PropertyName = "etag")]
        public string Etag { get; set; }

    }
}
