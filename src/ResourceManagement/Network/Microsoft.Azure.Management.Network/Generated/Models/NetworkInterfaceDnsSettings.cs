// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// DNS settings of a network interface.
    /// </summary>
    public partial class NetworkInterfaceDnsSettings
    {
        /// <summary>
        /// Initializes a new instance of the NetworkInterfaceDnsSettings
        /// class.
        /// </summary>
        public NetworkInterfaceDnsSettings() { }

        /// <summary>
        /// Initializes a new instance of the NetworkInterfaceDnsSettings
        /// class.
        /// </summary>
        /// <param name="dnsServers">List of DNS servers IP addresses. Use
        /// 'AzureProvidedDNS' to switch to azure provided DNS resolution.
        /// 'AzureProvidedDNS' value cannot be combined with other IPs, it
        /// must be the only value in dnsServers collection.</param>
        /// <param name="appliedDnsServers">If the VM that uses this NIC is
        /// part of an Availability Set, then this list will have the union
        /// of all DNS servers from all NICs that are part of the
        /// Availability Set. This property is what is configured on each of
        /// those VMs.</param>
        /// <param name="internalDnsNameLabel">Relative DNS name for this NIC
        /// used for internal communications between VMs in the same virtual
        /// network.</param>
        /// <param name="internalFqdn">Fully qualified DNS name supporting
        /// internal communications between VMs in the same virtual
        /// network.</param>
        /// <param name="internalDomainNameSuffix">Even if
        /// internalDnsNameLabel is not specified, a DNS entry is created for
        /// the primary NIC of the VM. This DNS name can be constructed by
        /// concatenating the VM name with the value of
        /// internalDomainNameSuffix.</param>
        public NetworkInterfaceDnsSettings(System.Collections.Generic.IList<string> dnsServers = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> appliedDnsServers = default(System.Collections.Generic.IList<string>), string internalDnsNameLabel = default(string), string internalFqdn = default(string), string internalDomainNameSuffix = default(string))
        {
            DnsServers = dnsServers;
            AppliedDnsServers = appliedDnsServers;
            InternalDnsNameLabel = internalDnsNameLabel;
            InternalFqdn = internalFqdn;
            InternalDomainNameSuffix = internalDomainNameSuffix;
        }

        /// <summary>
        /// Gets or sets list of DNS servers IP addresses. Use
        /// 'AzureProvidedDNS' to switch to azure provided DNS resolution.
        /// 'AzureProvidedDNS' value cannot be combined with other IPs, it
        /// must be the only value in dnsServers collection.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dnsServers")]
        public System.Collections.Generic.IList<string> DnsServers { get; set; }

        /// <summary>
        /// Gets or sets if the VM that uses this NIC is part of an
        /// Availability Set, then this list will have the union of all DNS
        /// servers from all NICs that are part of the Availability Set. This
        /// property is what is configured on each of those VMs.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "appliedDnsServers")]
        public System.Collections.Generic.IList<string> AppliedDnsServers { get; set; }

        /// <summary>
        /// Gets or sets relative DNS name for this NIC used for internal
        /// communications between VMs in the same virtual network.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "internalDnsNameLabel")]
        public string InternalDnsNameLabel { get; set; }

        /// <summary>
        /// Gets or sets fully qualified DNS name supporting internal
        /// communications between VMs in the same virtual network.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "internalFqdn")]
        public string InternalFqdn { get; set; }

        /// <summary>
        /// Gets or sets even if internalDnsNameLabel is not specified, a DNS
        /// entry is created for the primary NIC of the VM. This DNS name can
        /// be constructed by concatenating the VM name with the value of
        /// internalDomainNameSuffix.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "internalDomainNameSuffix")]
        public string InternalDomainNameSuffix { get; set; }

    }
}
