// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// Effective NetworkSecurityRules
    /// </summary>
    public partial class EffectiveNetworkSecurityRule
    {
        /// <summary>
        /// Initializes a new instance of the EffectiveNetworkSecurityRule
        /// class.
        /// </summary>
        public EffectiveNetworkSecurityRule() { }

        /// <summary>
        /// Initializes a new instance of the EffectiveNetworkSecurityRule
        /// class.
        /// </summary>
        public EffectiveNetworkSecurityRule(string name = default(string), string protocol = default(string), string sourcePortRange = default(string), string destinationPortRange = default(string), string sourceAddressPrefix = default(string), string destinationAddressPrefix = default(string), IList<string> expandedSourceAddressPrefix = default(IList<string>), IList<string> expandedDestinationAddressPrefix = default(IList<string>), string access = default(string), int? priority = default(int?), string direction = default(string))
        {
            Name = name;
            Protocol = protocol;
            SourcePortRange = sourcePortRange;
            DestinationPortRange = destinationPortRange;
            SourceAddressPrefix = sourceAddressPrefix;
            DestinationAddressPrefix = destinationAddressPrefix;
            ExpandedSourceAddressPrefix = expandedSourceAddressPrefix;
            ExpandedDestinationAddressPrefix = expandedDestinationAddressPrefix;
            Access = access;
            Priority = priority;
            Direction = direction;
        }

        /// <summary>
        /// Gets the name of the security rule specified by the user (if
        /// created by the user)
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets Network protocol this rule applies to. Possible values
        /// include: 'Tcp', 'Udp', '*'
        /// </summary>
        [JsonProperty(PropertyName = "protocol")]
        public string Protocol { get; set; }

        /// <summary>
        /// Gets source port or range
        /// </summary>
        [JsonProperty(PropertyName = "sourcePortRange")]
        public string SourcePortRange { get; set; }

        /// <summary>
        /// Gets destination port or range
        /// </summary>
        [JsonProperty(PropertyName = "destinationPortRange")]
        public string DestinationPortRange { get; set; }

        /// <summary>
        /// Gets source address prefix
        /// </summary>
        [JsonProperty(PropertyName = "sourceAddressPrefix")]
        public string SourceAddressPrefix { get; set; }

        /// <summary>
        /// Gets destination address prefix
        /// </summary>
        [JsonProperty(PropertyName = "destinationAddressPrefix")]
        public string DestinationAddressPrefix { get; set; }

        /// <summary>
        /// Gets expanded source address prefix
        /// </summary>
        [JsonProperty(PropertyName = "expandedSourceAddressPrefix")]
        public IList<string> ExpandedSourceAddressPrefix { get; set; }

        /// <summary>
        /// Gets expanded destination address prefix
        /// </summary>
        [JsonProperty(PropertyName = "expandedDestinationAddressPrefix")]
        public IList<string> ExpandedDestinationAddressPrefix { get; set; }

        /// <summary>
        /// Gets network traffic is allowed or denied. Possible values
        /// include: 'Allow', 'Deny'
        /// </summary>
        [JsonProperty(PropertyName = "access")]
        public string Access { get; set; }

        /// <summary>
        /// Gets the priority of the rule
        /// </summary>
        [JsonProperty(PropertyName = "priority")]
        public int? Priority { get; set; }

        /// <summary>
        /// Gets the direction of the rule. Possible values include:
        /// 'Inbound', 'Outbound'
        /// </summary>
        [JsonProperty(PropertyName = "direction")]
        public string Direction { get; set; }

    }
}
