// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Network.Fluent.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.Network;
    using Microsoft.Azure.Management.Network.Fluent;
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Virtual Network resource.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class VirtualNetworkInner : Microsoft.Azure.Management.ResourceManager.Fluent.Resource
    {
        /// <summary>
        /// Initializes a new instance of the VirtualNetworkInner class.
        /// </summary>
        public VirtualNetworkInner()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VirtualNetworkInner class.
        /// </summary>
        /// <param name="addressSpace">The AddressSpace that contains an array
        /// of IP address ranges that can be used by subnets.</param>
        /// <param name="dhcpOptions">The dhcpOptions that contains an array of
        /// DNS servers available to VMs deployed in the virtual
        /// network.</param>
        /// <param name="subnets">A list of subnets in a Virtual
        /// Network.</param>
        /// <param name="virtualNetworkPeerings">A list of peerings in a
        /// Virtual Network.</param>
        /// <param name="resourceGuid">The resourceGuid property of the Virtual
        /// Network resource.</param>
        /// <param name="provisioningState">The provisioning state of the
        /// PublicIP resource. Possible values are: 'Updating', 'Deleting', and
        /// 'Failed'.</param>
        /// <param name="etag">Gets a unique read-only string that changes
        /// whenever the resource is updated.</param>
        public VirtualNetworkInner(string location = default(string), string id = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), AddressSpace addressSpace = default(AddressSpace), DhcpOptions dhcpOptions = default(DhcpOptions), IList<SubnetInner> subnets = default(IList<SubnetInner>), IList<VirtualNetworkPeeringInner> virtualNetworkPeerings = default(IList<VirtualNetworkPeeringInner>), string resourceGuid = default(string), string provisioningState = default(string), string etag = default(string))
            : base(location, id, name, type, tags)
        {
            AddressSpace = addressSpace;
            DhcpOptions = dhcpOptions;
            Subnets = subnets;
            VirtualNetworkPeerings = virtualNetworkPeerings;
            ResourceGuid = resourceGuid;
            ProvisioningState = provisioningState;
            Etag = etag;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the AddressSpace that contains an array of IP address
        /// ranges that can be used by subnets.
        /// </summary>
        [JsonProperty(PropertyName = "properties.addressSpace")]
        public AddressSpace AddressSpace { get; set; }

        /// <summary>
        /// Gets or sets the dhcpOptions that contains an array of DNS servers
        /// available to VMs deployed in the virtual network.
        /// </summary>
        [JsonProperty(PropertyName = "properties.dhcpOptions")]
        public DhcpOptions DhcpOptions { get; set; }

        /// <summary>
        /// Gets or sets a list of subnets in a Virtual Network.
        /// </summary>
        [JsonProperty(PropertyName = "properties.subnets")]
        public IList<SubnetInner> Subnets { get; set; }

        /// <summary>
        /// Gets or sets a list of peerings in a Virtual Network.
        /// </summary>
        [JsonProperty(PropertyName = "properties.virtualNetworkPeerings")]
        public IList<VirtualNetworkPeeringInner> VirtualNetworkPeerings { get; set; }

        /// <summary>
        /// Gets or sets the resourceGuid property of the Virtual Network
        /// resource.
        /// </summary>
        [JsonProperty(PropertyName = "properties.resourceGuid")]
        public string ResourceGuid { get; set; }

        /// <summary>
        /// Gets or sets the provisioning state of the PublicIP resource.
        /// Possible values are: 'Updating', 'Deleting', and 'Failed'.
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource
        /// is updated.
        /// </summary>
        [JsonProperty(PropertyName = "etag")]
        public string Etag { get; set; }

    }
}
