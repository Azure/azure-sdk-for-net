// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Dns settings of a network interface
    /// </summary>
    public partial class NetworkInterfaceDnsSettings
    {
        /// <summary>
        /// Initializes a new instance of the NetworkInterfaceDnsSettings
        /// class.
        /// </summary>
        public NetworkInterfaceDnsSettings() { }

        /// <summary>
        /// Initializes a new instance of the NetworkInterfaceDnsSettings
        /// class.
        /// </summary>
        /// <param name="dnsServers">Gets or sets list of DNS servers IP
        /// addresses</param>
        /// <param name="appliedDnsServers">Gets or sets list of Applied DNS
        /// servers IP addresses</param>
        /// <param name="internalDnsNameLabel">Gets or sets the internal DNS
        /// name</param>
        /// <param name="internalFqdn">Gets or sets the internal fqdn.</param>
        /// <param name="internalDomainNameSuffix">Gets or sets internal
        /// domain name suffix of the NIC.</param>
        public NetworkInterfaceDnsSettings(System.Collections.Generic.IList<string> dnsServers = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> appliedDnsServers = default(System.Collections.Generic.IList<string>), string internalDnsNameLabel = default(string), string internalFqdn = default(string), string internalDomainNameSuffix = default(string))
        {
            DnsServers = dnsServers;
            AppliedDnsServers = appliedDnsServers;
            InternalDnsNameLabel = internalDnsNameLabel;
            InternalFqdn = internalFqdn;
            InternalDomainNameSuffix = internalDomainNameSuffix;
        }

        /// <summary>
        /// Gets or sets list of DNS servers IP addresses
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dnsServers")]
        public System.Collections.Generic.IList<string> DnsServers { get; set; }

        /// <summary>
        /// Gets or sets list of Applied DNS servers IP addresses
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "appliedDnsServers")]
        public System.Collections.Generic.IList<string> AppliedDnsServers { get; set; }

        /// <summary>
        /// Gets or sets the internal DNS name
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "internalDnsNameLabel")]
        public string InternalDnsNameLabel { get; set; }

        /// <summary>
        /// Gets or sets the internal fqdn.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "internalFqdn")]
        public string InternalFqdn { get; set; }

        /// <summary>
        /// Gets or sets internal domain name suffix of the NIC.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "internalDomainNameSuffix")]
        public string InternalDomainNameSuffix { get; set; }

    }
}
