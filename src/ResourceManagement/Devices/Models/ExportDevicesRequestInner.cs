// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// </auto-generated>

namespace Microsoft.Azure.Management.Devices.Fluent.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.Devices;
    using Microsoft.Azure.Management.Devices.Fluent;
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Use to provide parameters when requesting an export of all devices in
    /// the IoT hub.
    /// </summary>
    public partial class ExportDevicesRequestInner
    {
        /// <summary>
        /// Initializes a new instance of the ExportDevicesRequestInner class.
        /// </summary>
        public ExportDevicesRequestInner()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ExportDevicesRequestInner class.
        /// </summary>
        /// <param name="exportBlobContainerUri">The export blob container
        /// URI.</param>
        /// <param name="excludeKeys">The value indicating whether keys should
        /// be excluded during export.</param>
        public ExportDevicesRequestInner(string exportBlobContainerUri, bool excludeKeys)
        {
            ExportBlobContainerUri = exportBlobContainerUri;
            ExcludeKeys = excludeKeys;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the export blob container URI.
        /// </summary>
        [JsonProperty(PropertyName = "ExportBlobContainerUri")]
        public string ExportBlobContainerUri { get; set; }

        /// <summary>
        /// Gets or sets the value indicating whether keys should be excluded
        /// during export.
        /// </summary>
        [JsonProperty(PropertyName = "ExcludeKeys")]
        public bool ExcludeKeys { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ExportBlobContainerUri == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ExportBlobContainerUri");
            }
        }
    }
}
