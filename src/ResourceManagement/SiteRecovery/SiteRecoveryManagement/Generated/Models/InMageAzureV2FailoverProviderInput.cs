// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using Microsoft.Azure.Management.SiteRecovery.Models;

namespace Microsoft.Azure.Management.SiteRecovery.Models
{
    /// <summary>
    /// InMageAzureV2 provider specific input for failover.
    /// </summary>
    public partial class InMageAzureV2FailoverProviderInput : ProviderSpecificFailoverInput
    {
        private string _recoveryPointId;
        
        /// <summary>
        /// Optional. the recovery point id to be passed to failover to a
        /// particular recovery point. In case of latest recovery point, null
        /// should be passed.
        /// </summary>
        public string RecoveryPointId
        {
            get { return this._recoveryPointId; }
            set { this._recoveryPointId = value; }
        }
        
        private string _vaultLocation;
        
        /// <summary>
        /// Optional. Location of the vault.
        /// </summary>
        public string VaultLocation
        {
            get { return this._vaultLocation; }
            set { this._vaultLocation = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the
        /// InMageAzureV2FailoverProviderInput class.
        /// </summary>
        public InMageAzureV2FailoverProviderInput()
        {
        }
    }
}
