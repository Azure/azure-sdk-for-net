// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Hyak.Common;
using Microsoft.Azure.Management.SiteRecovery.Models;

namespace Microsoft.Azure.Management.SiteRecovery.Models
{
    /// <summary>
    /// The definition of Monitoring Event Properties.
    /// </summary>
    public partial class EventProperties
    {
        private string _affectedObjectFriendlyName;
        
        /// <summary>
        /// Optional. The source of the event on which it is rised (for
        /// example, VM, VMM etc).
        /// </summary>
        public string AffectedObjectFriendlyName
        {
            get { return this._affectedObjectFriendlyName; }
            set { this._affectedObjectFriendlyName = value; }
        }
        
        private string _description;
        
        /// <summary>
        /// Optional. The event name.
        /// </summary>
        public string Description
        {
            get { return this._description; }
            set { this._description = value; }
        }
        
        private string _eventCode;
        
        /// <summary>
        /// Optional. The code of the monitoring event.
        /// </summary>
        public string EventCode
        {
            get { return this._eventCode; }
            set { this._eventCode = value; }
        }
        
        private EventSpecificDetails _eventSpecificDetails;
        
        /// <summary>
        /// Optional. The event specific settings.
        /// </summary>
        public EventSpecificDetails EventSpecificDetails
        {
            get { return this._eventSpecificDetails; }
            set { this._eventSpecificDetails = value; }
        }
        
        private string _eventType;
        
        /// <summary>
        /// Optional. The type of the event. For example: VM Health, Server
        /// Health, Job Failure etc.
        /// </summary>
        public string EventType
        {
            get { return this._eventType; }
            set { this._eventType = value; }
        }
        
        private string _fabricId;
        
        /// <summary>
        /// Optional. The fabric Id.
        /// </summary>
        public string FabricId
        {
            get { return this._fabricId; }
            set { this._fabricId = value; }
        }
        
        private IList<HealthError> _healthErrors;
        
        /// <summary>
        /// Optional. The list of errors / warnings capturing details
        /// associated with the issue(s).
        /// </summary>
        public IList<HealthError> HealthErrors
        {
            get { return this._healthErrors; }
            set { this._healthErrors = value; }
        }
        
        private EventProviderSpecificDetails _providerDetails;
        
        /// <summary>
        /// Optional. The provider specific settings.
        /// </summary>
        public EventProviderSpecificDetails ProviderDetails
        {
            get { return this._providerDetails; }
            set { this._providerDetails = value; }
        }
        
        private string _severity;
        
        /// <summary>
        /// Optional. The severity of the event.
        /// </summary>
        public string Severity
        {
            get { return this._severity; }
            set { this._severity = value; }
        }
        
        private DateTime _timeOfOccurrence;
        
        /// <summary>
        /// Optional. The time of occurence of the event.
        /// </summary>
        public DateTime TimeOfOccurrence
        {
            get { return this._timeOfOccurrence; }
            set { this._timeOfOccurrence = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the EventProperties class.
        /// </summary>
        public EventProperties()
        {
            this.HealthErrors = new LazyList<HealthError>();
        }
    }
}
