// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Batch.Models
{
    using System.Linq;

    /// <summary>
    /// Contains information about an application package.
    /// </summary>
    public partial class ApplicationPackage
    {
        /// <summary>
        /// Initializes a new instance of the ApplicationPackage class.
        /// </summary>
        public ApplicationPackage() { }

        /// <summary>
        /// Initializes a new instance of the ApplicationPackage class.
        /// </summary>
        /// <param name="version">The version of the application package.
        /// </param>
        /// <param name="state">The current state of the application package.
        /// Possible values include: 'pending', 'active', 'unmapped'</param>
        /// <param name="format">The format of the application package, if the
        /// package has been activated.</param>
        /// <param name="lastActivationTime">The time at which the package was
        /// last activated, if the package is active.</param>
        public ApplicationPackage(string version = default(string), PackageState? state = default(PackageState?), string format = default(string), System.DateTime? lastActivationTime = default(System.DateTime?))
        {
            Version = version;
            State = state;
            Format = format;
            LastActivationTime = lastActivationTime;
        }

        /// <summary>
        /// Gets or sets the version of the application package.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "version")]
        public string Version { get; set; }

        /// <summary>
        /// Gets or sets the current state of the application package.
        /// Possible values include: 'pending', 'active', 'unmapped'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "state")]
        public PackageState? State { get; set; }

        /// <summary>
        /// Gets or sets the format of the application package, if the package
        /// has been activated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "format")]
        public string Format { get; set; }

        /// <summary>
        /// Gets or sets the time at which the package was last activated, if
        /// the package is active.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastActivationTime")]
        public System.DateTime? LastActivationTime { get; set; }

    }
}
