// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure;
using Microsoft.Azure.Management.Batch.Models;

namespace Microsoft.Azure.Management.Batch
{
    /// <summary>
    /// Operations for managing batch accounts
    /// </summary>
    public partial interface IAccountOperations
    {
        /// <summary>
        /// Begin creating the batch account.To determine whether the operation
        /// has finished processing the request, call
        /// GetLongRunningOperationStatus.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the new Batch account.
        /// </param>
        /// <param name='accountName'>
        /// A name for the Batch account which must be unique within Azure.
        /// Batch account names must be between 3 and 24 characters in length
        /// and must use only numbers and lower-case letters. This name is
        /// used as part of the DNS name that is used to access the batch
        /// service in the region in which the account is created. For
        /// example: http://AccountName.batch.core.windows.net/.
        /// </param>
        /// <param name='parameters'>
        /// Additional parameters for account creation
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// Values returned by the Create operation.
        /// </returns>
        Task<BatchAccountCreateResponse> BeginCreatingAsync(string resourceGroupName, string accountName, BatchAccountCreateParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// Begin deleting the batch account.To determine whether the operation
        /// has finished processing the request, call
        /// GetLongRunningOperationStatus.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the Batch account to
        /// be deleted.
        /// </param>
        /// <param name='accountName'>
        /// The name of the account to be deleted.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        Task<LongRunningOperationResponse> BeginDeletingAsync(string resourceGroupName, string accountName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Create operation creates a new Batch account in the specified
        /// resource group and datacenter location.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the new Batch account.
        /// </param>
        /// <param name='accountName'>
        /// A name for the Batch account which must be unique within Azure.
        /// Batch account names must be between 3 and 24 characters in length
        /// and must use only numbers and lower-case letters. This name is
        /// used as part of the DNS name that is used to access the batch
        /// service in the region in which the account is created. For
        /// example: http://AccountName.batch.core.windows.net/.
        /// </param>
        /// <param name='parameters'>
        /// Additional parameters for account creation
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// Values returned by the Create operation.
        /// </returns>
        Task<BatchAccountCreateResponse> CreateAsync(string resourceGroupName, string accountName, BatchAccountCreateParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Delete operation deletes an existing Batch account. The
        /// operation will return NoContent if the requested account does not
        /// exist.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the Batch account.
        /// </param>
        /// <param name='accountName'>
        /// The name of the account to be deleted.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        Task<LongRunningOperationResponse> DeleteAsync(string resourceGroupName, string accountName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Get operation gets detailed information about the specified
        /// Batch account.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the Batch account.
        /// </param>
        /// <param name='accountName'>
        /// The name of the account.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// Values returned by the Get operation.
        /// </returns>
        Task<BatchAccountGetResponse> GetAsync(string resourceGroupName, string accountName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The List operation gets information about the Batch accounts
        /// associated either with the subscription if no resource group is
        /// specified or within the specified resource group.
        /// </summary>
        /// <param name='parameters'>
        /// An optional argument which specifies the name of the resource group
        /// that constrains the set of accounts that are returned.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// Values returned by the List operation.
        /// </returns>
        Task<BatchAccountListResponse> ListAsync(AccountListParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The ListActions operation gets information about non-standard
        /// actions for the provider.
        /// </summary>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// Values returned by the ListActions operation.
        /// </returns>
        Task<BatchAccountListActionsResponse> ListActionsAsync(CancellationToken cancellationToken);
        
        /// <summary>
        /// The ListKeys operation gets the account keys for the given Batch
        /// account.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the Batch account.
        /// </param>
        /// <param name='accountName'>
        /// The name of the account.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// Values returned by the GetKeys operation.
        /// </returns>
        Task<BatchAccountListKeyResponse> ListKeysAsync(string resourceGroupName, string accountName, CancellationToken cancellationToken);
        
        /// <summary>
        /// Get the next set of accounts based on the previously returned
        /// NextLink value.
        /// </summary>
        /// <param name='nextLink'>
        /// NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// Values returned by the List operation.
        /// </returns>
        Task<BatchAccountListResponse> ListNextAsync(string nextLink, CancellationToken cancellationToken);
        
        /// <summary>
        /// The RegenerateKey operation regenerates the specified account key
        /// for the given Batch account.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the Batch account.
        /// </param>
        /// <param name='accountName'>
        /// The name of the account.
        /// </param>
        /// <param name='parameters'>
        /// The type of key to regenerate
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// Values returned by the RegenerateKey operation.
        /// </returns>
        Task<BatchAccountRegenerateKeyResponse> RegenerateKeyAsync(string resourceGroupName, string accountName, BatchAccountRegenerateKeyParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The SyncAutoStorageKeys operation synchronizes access keys for the
        /// auto storage account configured for the specified Batch account.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the Batch account.
        /// </param>
        /// <param name='accountName'>
        /// The name of the Batch account.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<AzureOperationResponse> SyncAutoStorageKeysAsync(string resourceGroupName, string accountName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Update operation updates the properties of an existing Batch
        /// account in the specified resource group.
        /// </summary>
        /// <param name='resourceGroupName'>
        /// The name of the resource group that contains the Batch account.
        /// </param>
        /// <param name='accountName'>
        /// The name of the account.
        /// </param>
        /// <param name='parameters'>
        /// Additional parameters for account update
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// Values returned by the Update operation.
        /// </returns>
        Task<BatchAccountUpdateResponse> UpdateAsync(string resourceGroupName, string accountName, BatchAccountUpdateParameters parameters, CancellationToken cancellationToken);
    }
}
