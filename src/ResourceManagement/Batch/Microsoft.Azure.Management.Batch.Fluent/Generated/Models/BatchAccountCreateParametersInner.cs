// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Batch.Fluent.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.Batch;
    using Microsoft.Azure.Management.Batch.Fluent;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Parameters supplied to the Create operation.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class BatchAccountCreateParametersInner
    {
        /// <summary>
        /// Initializes a new instance of the BatchAccountCreateParametersInner
        /// class.
        /// </summary>
        public BatchAccountCreateParametersInner()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BatchAccountCreateParametersInner
        /// class.
        /// </summary>
        /// <param name="location">The region in which to create the
        /// account.</param>
        /// <param name="tags">The user specified tags associated with the
        /// account.</param>
        /// <param name="autoStorage">The properties related to auto storage
        /// account.</param>
        public BatchAccountCreateParametersInner(string location, IDictionary<string, string> tags = default(IDictionary<string, string>), AutoStorageBaseProperties autoStorage = default(AutoStorageBaseProperties))
        {
            Location = location;
            Tags = tags;
            AutoStorage = autoStorage;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the region in which to create the account.
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public string Location { get; set; }

        /// <summary>
        /// Gets or sets the user specified tags associated with the account.
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

        /// <summary>
        /// Gets or sets the properties related to auto storage account.
        /// </summary>
        [JsonProperty(PropertyName = "properties.autoStorage")]
        public AutoStorageBaseProperties AutoStorage { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Location == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Location");
            }
            if (AutoStorage != null)
            {
                AutoStorage.Validate();
            }
        }
    }
}
