// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models;

namespace Microsoft.Azure.Management.DataLake.AnalyticsCatalog.Models
{
    /// <summary>
    /// A Data Lake Analytics catalog U-SQL type item.
    /// </summary>
    public partial class USqlType : CatalogItem
    {
        private string _cSharpName;
        
        /// <summary>
        /// Optional. Gets or sets the C# name for this type.
        /// </summary>
        public string CSharpName
        {
            get { return this._cSharpName; }
            set { this._cSharpName = value; }
        }
        
        private string _databaseName;
        
        /// <summary>
        /// Optional. Gets or sets the name of the database.
        /// </summary>
        public string DatabaseName
        {
            get { return this._databaseName; }
            set { this._databaseName = value; }
        }
        
        private string _fullCSharpName;
        
        /// <summary>
        /// Optional. Gets or sets the fully qualified C# name for this type.
        /// </summary>
        public string FullCSharpName
        {
            get { return this._fullCSharpName; }
            set { this._fullCSharpName = value; }
        }
        
        private bool _isAssemblyType;
        
        /// <summary>
        /// Optional. Gets or sets the the switch indicating if this type is an
        /// assembly type.
        /// </summary>
        public bool IsAssemblyType
        {
            get { return this._isAssemblyType; }
            set { this._isAssemblyType = value; }
        }
        
        private bool _isComplexType;
        
        /// <summary>
        /// Optional. Gets or sets the the switch indicating if this type is a
        /// complex type.
        /// </summary>
        public bool IsComplexType
        {
            get { return this._isComplexType; }
            set { this._isComplexType = value; }
        }
        
        private bool _isNullable;
        
        /// <summary>
        /// Optional. Gets or sets the the switch indicating if this type is
        /// nullable.
        /// </summary>
        public bool IsNullable
        {
            get { return this._isNullable; }
            set { this._isNullable = value; }
        }
        
        private bool _isTableType;
        
        /// <summary>
        /// Optional. Gets or sets the the switch indicating if this type is a
        /// table type.
        /// </summary>
        public bool IsTableType
        {
            get { return this._isTableType; }
            set { this._isTableType = value; }
        }
        
        private bool _isUserDefined;
        
        /// <summary>
        /// Optional. Gets or sets the the switch indicating if this type is
        /// user defined.
        /// </summary>
        public bool IsUserDefined
        {
            get { return this._isUserDefined; }
            set { this._isUserDefined = value; }
        }
        
        private string _name;
        
        /// <summary>
        /// Optional. Gets or sets the name of type for this type.
        /// </summary>
        public string Name
        {
            get { return this._name; }
            set { this._name = value; }
        }
        
        private int? _principalId;
        
        /// <summary>
        /// Optional. Gets or sets the principal ID for this type.
        /// </summary>
        public int? PrincipalId
        {
            get { return this._principalId; }
            set { this._principalId = value; }
        }
        
        private int _schemaId;
        
        /// <summary>
        /// Optional. Gets or sets the schema ID for this type.
        /// </summary>
        public int SchemaId
        {
            get { return this._schemaId; }
            set { this._schemaId = value; }
        }
        
        private string _schemaName;
        
        /// <summary>
        /// Optional. Gets or sets the name of the schema associated with this
        /// table and database.
        /// </summary>
        public string SchemaName
        {
            get { return this._schemaName; }
            set { this._schemaName = value; }
        }
        
        private int _systemTypeId;
        
        /// <summary>
        /// Optional. Gets or sets the system type ID for this type.
        /// </summary>
        public int SystemTypeId
        {
            get { return this._systemTypeId; }
            set { this._systemTypeId = value; }
        }
        
        private string _typeFamily;
        
        /// <summary>
        /// Optional. Gets or sets the type family for this type.
        /// </summary>
        public string TypeFamily
        {
            get { return this._typeFamily; }
            set { this._typeFamily = value; }
        }
        
        private int _userTypeId;
        
        /// <summary>
        /// Optional. Gets or sets the user type ID for this type.
        /// </summary>
        public int UserTypeId
        {
            get { return this._userTypeId; }
            set { this._userTypeId = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the USqlType class.
        /// </summary>
        public USqlType()
        {
        }
    }
}
