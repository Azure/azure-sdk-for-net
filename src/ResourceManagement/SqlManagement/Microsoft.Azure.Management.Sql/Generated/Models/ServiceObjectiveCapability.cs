// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Sql.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.Sql;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Represents the Service Objectives capabilities.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ServiceObjectiveCapability
    {
        /// <summary>
        /// Initializes a new instance of the ServiceObjectiveCapability class.
        /// </summary>
        public ServiceObjectiveCapability() { }

        /// <summary>
        /// Initializes a new instance of the ServiceObjectiveCapability class.
        /// </summary>
        /// <param name="name">The Service Objective name.</param>
        /// <param name="status">The status of the Service Objective. Possible
        /// values include: 'Visible', 'Available', 'Default'</param>
        /// <param name="unit">Unit type used to measure SLO performance level.
        /// Possible values include: 'DTU'</param>
        /// <param name="value">Performance level value.</param>
        /// <param name="id">The unique ID of the Service Objective.</param>
        /// <param name="supportedMaxSizes">The list of supported maximum Azure
        /// SQL Database sizes for this Service Objective.</param>
        public ServiceObjectiveCapability(string name = default(string), string status = default(string), PerformanceLevelUnit? unit = default(PerformanceLevelUnit?), int? value = default(int?), string id = default(string), IList<MaxSizeCapability> supportedMaxSizes = default(IList<MaxSizeCapability>))
        {
            Name = name;
            Status = status;
            Unit = unit;
            Value = value;
            Id = id;
            SupportedMaxSizes = supportedMaxSizes;
        }

        /// <summary>
        /// Gets the Service Objective name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets the status of the Service Objective. Possible values include:
        /// 'Visible', 'Available', 'Default'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; private set; }

        /// <summary>
        /// Gets or sets unit type used to measure SLO performance level.
        /// Possible values include: 'DTU'
        /// </summary>
        [JsonProperty(PropertyName = "performanceLevel.unit")]
        public PerformanceLevelUnit? Unit { get; set; }

        /// <summary>
        /// Gets or sets performance level value.
        /// </summary>
        [JsonProperty(PropertyName = "performanceLevel.value")]
        public int? Value { get; set; }

        /// <summary>
        /// Gets the unique ID of the Service Objective.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets the list of supported maximum Azure SQL Database sizes for
        /// this Service Objective.
        /// </summary>
        [JsonProperty(PropertyName = "supportedMaxSizes")]
        public IList<MaxSizeCapability> SupportedMaxSizes { get; private set; }

    }
}
