// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Sql.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.Sql;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Represents a server firewall rule.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class FirewallRule : SubResource
    {
        /// <summary>
        /// Initializes a new instance of the FirewallRule class.
        /// </summary>
        public FirewallRule()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FirewallRule class.
        /// </summary>
        /// <param name="startIpAddress">The start IP address of the firewall
        /// rule. Must be IPv4 format. Use value '0.0.0.0' to represent all
        /// Azure-internal IP addresses.</param>
        /// <param name="endIpAddress">The end IP address of the firewall rule.
        /// Must be IPv4 format. Must be greater than or equal to
        /// startIpAddress. Use value '0.0.0.0' to represent all Azure-internal
        /// IP addresses.</param>
        /// <param name="name">Resource name</param>
        /// <param name="id">The resource ID.</param>
        /// <param name="kind">Kind of server that contains this firewall
        /// rule.</param>
        /// <param name="location">Location of the server that contains this
        /// firewall rule.</param>
        /// <param name="type">Type of resource this is.</param>
        public FirewallRule(string startIpAddress, string endIpAddress, string name = default(string), string id = default(string), string kind = default(string), string location = default(string), string type = default(string))
            : base(name, id)
        {
            Kind = kind;
            Location = location;
            Type = type;
            StartIpAddress = startIpAddress;
            EndIpAddress = endIpAddress;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets kind of server that contains this firewall rule.
        /// </summary>
        [JsonProperty(PropertyName = "kind")]
        public string Kind { get; private set; }

        /// <summary>
        /// Gets location of the server that contains this firewall rule.
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public string Location { get; private set; }

        /// <summary>
        /// Gets type of resource this is.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

        /// <summary>
        /// Gets or sets the start IP address of the firewall rule. Must be
        /// IPv4 format. Use value '0.0.0.0' to represent all Azure-internal IP
        /// addresses.
        /// </summary>
        [JsonProperty(PropertyName = "properties.startIpAddress")]
        public string StartIpAddress { get; set; }

        /// <summary>
        /// Gets or sets the end IP address of the firewall rule. Must be IPv4
        /// format. Must be greater than or equal to startIpAddress. Use value
        /// '0.0.0.0' to represent all Azure-internal IP addresses.
        /// </summary>
        [JsonProperty(PropertyName = "properties.endIpAddress")]
        public string EndIpAddress { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (StartIpAddress == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "StartIpAddress");
            }
            if (EndIpAddress == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "EndIpAddress");
            }
        }
    }
}
