// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Insights.Models
{
    using System.Linq;

    /// <summary>
    /// The number of instances that can be used during this profile.
    /// </summary>
    public partial class ScaleCapacity
    {
        /// <summary>
        /// Initializes a new instance of the ScaleCapacity class.
        /// </summary>
        public ScaleCapacity() { }

        /// <summary>
        /// Initializes a new instance of the ScaleCapacity class.
        /// </summary>
        /// <param name="minimum">the minimum number of instances for the
        /// resource.</param>
        /// <param name="maximum">the maximum number of instances for the
        /// resource. The actual maximum number may be limited by the cores
        /// that are available.</param>
        /// <param name="defaultProperty">the number of instances that will be
        /// set if metrics are not available for evaluation. The default is
        /// only used if the current instance count is lower than the
        /// default.</param>
        public ScaleCapacity(string minimum, string maximum, string defaultProperty)
        {
            Minimum = minimum;
            Maximum = maximum;
            DefaultProperty = defaultProperty;
        }

        /// <summary>
        /// Gets or sets the minimum number of instances for the resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "minimum")]
        public string Minimum { get; set; }

        /// <summary>
        /// Gets or sets the maximum number of instances for the resource. The
        /// actual maximum number may be limited by the cores that are
        /// available.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "maximum")]
        public string Maximum { get; set; }

        /// <summary>
        /// Gets or sets the number of instances that will be set if metrics
        /// are not available for evaluation. The default is only used if the
        /// current instance count is lower than the default.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "default")]
        public string DefaultProperty { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Minimum == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Minimum");
            }
            if (Maximum == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Maximum");
            }
            if (DefaultProperty == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "DefaultProperty");
            }
        }
    }
}
