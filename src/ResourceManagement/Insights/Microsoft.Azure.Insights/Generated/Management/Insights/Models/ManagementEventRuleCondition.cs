// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Insights.Models
{
    using System.Linq;

    /// <summary>
    /// A management event rule condition.
    /// </summary>
    [Newtonsoft.Json.JsonObject("Microsoft.Azure.Management.Insights.Models.ManagementEventRuleCondition")]
    public partial class ManagementEventRuleCondition : RuleCondition
    {
        /// <summary>
        /// Initializes a new instance of the ManagementEventRuleCondition
        /// class.
        /// </summary>
        public ManagementEventRuleCondition() { }

        /// <summary>
        /// Initializes a new instance of the ManagementEventRuleCondition
        /// class.
        /// </summary>
        /// <param name="dataSource">the resource from which the rule collects
        /// its data.</param>
        /// <param name="aggregation">the aggregation condition.</param>
        public ManagementEventRuleCondition(RuleDataSource dataSource = default(RuleDataSource), ManagementEventAggregationCondition aggregation = default(ManagementEventAggregationCondition))
        {
            DataSource = dataSource;
            Aggregation = aggregation;
        }

        /// <summary>
        /// Gets or sets the resource from which the rule collects its data.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dataSource")]
        public RuleDataSource DataSource { get; set; }

        /// <summary>
        /// Gets or sets the aggregation condition.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "aggregation")]
        public ManagementEventAggregationCondition Aggregation { get; set; }

    }
}
