// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Insights.Models
{
    using System.Linq;

    /// <summary>
    /// The autoscale setting resource.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class AutoscaleSettingResource : Resource
    {
        /// <summary>
        /// Initializes a new instance of the AutoscaleSettingResource class.
        /// </summary>
        public AutoscaleSettingResource() { }

        /// <summary>
        /// Initializes a new instance of the AutoscaleSettingResource class.
        /// </summary>
        /// <param name="location">Resource location</param>
        /// <param name="profiles">the collection of automatic scaling
        /// profiles that specify different scaling parameters for different
        /// time periods. A maximum of 20 profiles can be specified.</param>
        /// <param name="autoscaleSettingResourceName">the name of the
        /// autoscale setting.</param>
        /// <param name="id">Azure resource Id</param>
        /// <param name="name">Azure resource name</param>
        /// <param name="type">Azure resource type</param>
        /// <param name="tags">Resource tags</param>
        /// <param name="notifications">the collection of
        /// notifications.</param>
        /// <param name="enabled">the enabled flag. Specifies whether
        /// automatic scaling is enabled for the resource.</param>
        /// <param name="targetResourceUri">the resource identifier of the
        /// resource that the autoscale setting should be added to.</param>
        public AutoscaleSettingResource(string location, System.Collections.Generic.IList<AutoscaleProfile> profiles, string autoscaleSettingResourceName, string id = default(string), string name = default(string), string type = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), System.Collections.Generic.IList<AutoscaleNotification> notifications = default(System.Collections.Generic.IList<AutoscaleNotification>), bool? enabled = default(bool?), string targetResourceUri = default(string))
            : base(location, id, name, type, tags)
        {
            Profiles = profiles;
            Notifications = notifications;
            Enabled = enabled;
            AutoscaleSettingResourceName = autoscaleSettingResourceName;
            TargetResourceUri = targetResourceUri;
        }

        /// <summary>
        /// Gets or sets the collection of automatic scaling profiles that
        /// specify different scaling parameters for different time periods.
        /// A maximum of 20 profiles can be specified.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.profiles")]
        public System.Collections.Generic.IList<AutoscaleProfile> Profiles { get; set; }

        /// <summary>
        /// Gets or sets the collection of notifications.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.notifications")]
        public System.Collections.Generic.IList<AutoscaleNotification> Notifications { get; set; }

        /// <summary>
        /// Gets or sets the enabled flag. Specifies whether automatic scaling
        /// is enabled for the resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.enabled")]
        public bool? Enabled { get; set; }

        /// <summary>
        /// Gets or sets the name of the autoscale setting.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.name")]
        public string AutoscaleSettingResourceName { get; set; }

        /// <summary>
        /// Gets or sets the resource identifier of the resource that the
        /// autoscale setting should be added to.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.targetResourceUri")]
        public string TargetResourceUri { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (Profiles == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Profiles");
            }
            if (AutoscaleSettingResourceName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "AutoscaleSettingResourceName");
            }
            if (this.Profiles != null)
            {
                if (this.Profiles.Count > 20)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxItems, "Profiles", 20);
                }
                foreach (var element in this.Profiles)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
