// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Hyak.Common;

namespace Microsoft.Azure.Insights.Models
{
    /// <summary>
    /// Represents a metric value.
    /// </summary>
    public partial class MetricValue
    {
        private double? _average;
        
        /// <summary>
        /// Optional. Specifies the average value in the time range.
        /// </summary>
        public double? Average
        {
            get { return this._average; }
            set { this._average = value; }
        }
        
        private long? _count;
        
        /// <summary>
        /// Optional. Specifies the number of samples in the time range. Can be
        /// used to determine the number of values that contributed to the
        /// average value.
        /// </summary>
        public long? Count
        {
            get { return this._count; }
            set { this._count = value; }
        }
        
        private double? _last;
        
        /// <summary>
        /// Optional. Specifies the last sample in the time range.
        /// </summary>
        public double? Last
        {
            get { return this._last; }
            set { this._last = value; }
        }
        
        private double? _maximum;
        
        /// <summary>
        /// Optional. Specifies the greatest value in the time range.
        /// </summary>
        public double? Maximum
        {
            get { return this._maximum; }
            set { this._maximum = value; }
        }
        
        private double? _minimum;
        
        /// <summary>
        /// Optional. Specifies the least value in the time range.
        /// </summary>
        public double? Minimum
        {
            get { return this._minimum; }
            set { this._minimum = value; }
        }
        
        private IDictionary<string, string> _properties;
        
        /// <summary>
        /// Optional. Collection of extended properties.
        /// </summary>
        public IDictionary<string, string> Properties
        {
            get { return this._properties; }
            set { this._properties = value; }
        }
        
        private DateTime _timestamp;
        
        /// <summary>
        /// Optional. The timestamp for the metric value.
        /// </summary>
        public DateTime Timestamp
        {
            get { return this._timestamp; }
            set { this._timestamp = value; }
        }
        
        private double? _total;
        
        /// <summary>
        /// Optional. Specifies the sum of all of the values in the time range.
        /// </summary>
        public double? Total
        {
            get { return this._total; }
            set { this._total = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the MetricValue class.
        /// </summary>
        public MetricValue()
        {
            this.Properties = new LazyDictionary<string, string>();
        }
    }
}
