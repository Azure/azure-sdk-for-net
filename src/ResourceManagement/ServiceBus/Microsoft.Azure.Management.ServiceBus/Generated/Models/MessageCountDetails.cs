// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.ServiceBus.Models
{
    using Azure;
    using Management;
    using ServiceBus;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Message Count Details.
    /// </summary>
    public partial class MessageCountDetails
    {
        /// <summary>
        /// Initializes a new instance of the MessageCountDetails class.
        /// </summary>
        public MessageCountDetails() { }

        /// <summary>
        /// Initializes a new instance of the MessageCountDetails class.
        /// </summary>
        /// <param name="activeMessageCount">Number of active messages in the
        /// queue, topic, or subscription.</param>
        /// <param name="deadLetterMessageCount">Number of messages that are
        /// dead lettered.</param>
        /// <param name="scheduledMessageCount">Number of scheduled
        /// messages.</param>
        /// <param name="transferDeadLetterMessageCount">Number of messages
        /// transferred into dead letters.</param>
        /// <param name="transferMessageCount">Number of messages transferred
        /// to another queue, topic, or subscription.</param>
        public MessageCountDetails(long? activeMessageCount = default(long?), long? deadLetterMessageCount = default(long?), long? scheduledMessageCount = default(long?), long? transferDeadLetterMessageCount = default(long?), long? transferMessageCount = default(long?))
        {
            ActiveMessageCount = activeMessageCount;
            DeadLetterMessageCount = deadLetterMessageCount;
            ScheduledMessageCount = scheduledMessageCount;
            TransferDeadLetterMessageCount = transferDeadLetterMessageCount;
            TransferMessageCount = transferMessageCount;
        }

        /// <summary>
        /// Gets or sets number of active messages in the queue, topic, or
        /// subscription.
        /// </summary>
        [JsonProperty(PropertyName = "activeMessageCount")]
        public long? ActiveMessageCount { get; set; }

        /// <summary>
        /// Gets or sets number of messages that are dead lettered.
        /// </summary>
        [JsonProperty(PropertyName = "deadLetterMessageCount")]
        public long? DeadLetterMessageCount { get; set; }

        /// <summary>
        /// Gets or sets number of scheduled messages.
        /// </summary>
        [JsonProperty(PropertyName = "scheduledMessageCount")]
        public long? ScheduledMessageCount { get; set; }

        /// <summary>
        /// Gets or sets number of messages transferred into dead letters.
        /// </summary>
        [JsonProperty(PropertyName = "transferDeadLetterMessageCount")]
        public long? TransferDeadLetterMessageCount { get; set; }

        /// <summary>
        /// Gets or sets number of messages transferred to another queue,
        /// topic, or subscription.
        /// </summary>
        [JsonProperty(PropertyName = "transferMessageCount")]
        public long? TransferMessageCount { get; set; }

    }
}

