// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Analysis.Models
{
    using System.Linq;

    /// <summary>
    /// Represents an instance of Analysis Services resource
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class AnalysisServicesServer : Resource
    {
        /// <summary>
        /// Initializes a new instance of the AnalysisServicesServer class.
        /// </summary>
        public AnalysisServicesServer() { }

        /// <summary>
        /// Initializes a new instance of the AnalysisServicesServer class.
        /// </summary>
        /// <param name="location">Location of the Analysis Services
        /// resource</param>
        /// <param name="sku">Sku of the Analysis Services resource</param>
        /// <param name="id">Identifier that represents the Analysis Services
        /// resource</param>
        /// <param name="name">Name of the Analysis Services resource</param>
        /// <param name="type">Specifies the type of Analysis Services
        /// resource</param>
        /// <param name="tags">Key value pairs of additional properties that
        /// can ebe specified</param>
        /// <param name="provisioningState">The current deployment state of
        /// Analysis Services resource</param>
        /// <param name="serverFullName">Full name of the Analysis Services
        /// resource</param>
        public AnalysisServicesServer(string location, ResourceSku sku, string id = default(string), string name = default(string), string type = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), ServerAdministrators asAdministrators = default(ServerAdministrators), string provisioningState = default(string), string serverFullName = default(string))
            : base(location, sku, id, name, type, tags)
        {
            AsAdministrators = asAdministrators;
            ProvisioningState = provisioningState;
            ServerFullName = serverFullName;
        }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.asAdministrators")]
        public ServerAdministrators AsAdministrators { get; set; }

        /// <summary>
        /// Gets the current deployment state of Analysis Services resource
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets full name of the Analysis Services resource
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.serverFullName")]
        public string ServerFullName { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
