// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure.Management.StreamAnalytics;
using Microsoft.Azure.Management.StreamAnalytics.Models;

namespace Microsoft.Azure.Management.StreamAnalytics
{
    public static partial class JobOperationsExtensions
    {
        /// <summary>
        /// Delete a stream analytics job.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.StreamAnalytics.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// Required. The name of the stream analytics job.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public static LongRunningOperationResponse BeginDelete(this IJobOperations operations, string resourceGroupName, string jobName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IJobOperations)s).BeginDeleteAsync(resourceGroupName, jobName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Delete a stream analytics job.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.StreamAnalytics.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// Required. The name of the stream analytics job.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public static Task<LongRunningOperationResponse> BeginDeleteAsync(this IJobOperations operations, string resourceGroupName, string jobName)
        {
            return operations.BeginDeleteAsync(resourceGroupName, jobName, CancellationToken.None);
        }
        
        /// <summary>
        /// Start a stream analytics job. Asynchronous call.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.StreamAnalytics.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// Required. The name of the stream analytics job.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public static LongRunningOperationResponse BeginStart(this IJobOperations operations, string resourceGroupName, string jobName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IJobOperations)s).BeginStartAsync(resourceGroupName, jobName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Start a stream analytics job. Asynchronous call.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.StreamAnalytics.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// Required. The name of the stream analytics job.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public static Task<LongRunningOperationResponse> BeginStartAsync(this IJobOperations operations, string resourceGroupName, string jobName)
        {
            return operations.BeginStartAsync(resourceGroupName, jobName, CancellationToken.None);
        }
        
        /// <summary>
        /// Stop a stream analytics job. Asynchronous call.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.StreamAnalytics.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// Required. The name of the stream analytics job.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public static LongRunningOperationResponse BeginStop(this IJobOperations operations, string resourceGroupName, string jobName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IJobOperations)s).BeginStopAsync(resourceGroupName, jobName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Stop a stream analytics job. Asynchronous call.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.StreamAnalytics.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// Required. The name of the stream analytics job.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public static Task<LongRunningOperationResponse> BeginStopAsync(this IJobOperations operations, string resourceGroupName, string jobName)
        {
            return operations.BeginStopAsync(resourceGroupName, jobName, CancellationToken.None);
        }
        
        /// <summary>
        /// Create or update a stream analytics job.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.StreamAnalytics.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// Required. The name of the stream analytics job.
        /// </param>
        /// <param name='parameters'>
        /// Required. The parameters required to create or update a stream
        /// analytics job.
        /// </param>
        /// <returns>
        /// The response of the create stream analytics job operation.
        /// </returns>
        public static JobCreateOrUpdateResponse CreateOrUpdate(this IJobOperations operations, string resourceGroupName, string jobName, JobCreateOrUpdateParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IJobOperations)s).CreateOrUpdateAsync(resourceGroupName, jobName, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Create or update a stream analytics job.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.StreamAnalytics.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// Required. The name of the stream analytics job.
        /// </param>
        /// <param name='parameters'>
        /// Required. The parameters required to create or update a stream
        /// analytics job.
        /// </param>
        /// <returns>
        /// The response of the create stream analytics job operation.
        /// </returns>
        public static Task<JobCreateOrUpdateResponse> CreateOrUpdateAsync(this IJobOperations operations, string resourceGroupName, string jobName, JobCreateOrUpdateParameters parameters)
        {
            return operations.CreateOrUpdateAsync(resourceGroupName, jobName, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Create or update a stream analytics job.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.StreamAnalytics.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// Required. The name of the stream analytics job.
        /// </param>
        /// <param name='parameters'>
        /// Required. The parameters required to create or update a stream
        /// analytics job.
        /// </param>
        /// <returns>
        /// The response of the create stream analytics job operation.
        /// </returns>
        public static JobCreateOrUpdateResponse CreateOrUpdateWithRawJsonContent(this IJobOperations operations, string resourceGroupName, string jobName, JobCreateOrUpdateWithRawJsonContentParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IJobOperations)s).CreateOrUpdateWithRawJsonContentAsync(resourceGroupName, jobName, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Create or update a stream analytics job.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.StreamAnalytics.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// Required. The name of the stream analytics job.
        /// </param>
        /// <param name='parameters'>
        /// Required. The parameters required to create or update a stream
        /// analytics job.
        /// </param>
        /// <returns>
        /// The response of the create stream analytics job operation.
        /// </returns>
        public static Task<JobCreateOrUpdateResponse> CreateOrUpdateWithRawJsonContentAsync(this IJobOperations operations, string resourceGroupName, string jobName, JobCreateOrUpdateWithRawJsonContentParameters parameters)
        {
            return operations.CreateOrUpdateWithRawJsonContentAsync(resourceGroupName, jobName, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Delete a stream analytics job.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.StreamAnalytics.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// Required. A unique stream analytics job name.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public static LongRunningOperationResponse Delete(this IJobOperations operations, string resourceGroupName, string jobName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IJobOperations)s).DeleteAsync(resourceGroupName, jobName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Delete a stream analytics job.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.StreamAnalytics.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// Required. A unique stream analytics job name.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public static Task<LongRunningOperationResponse> DeleteAsync(this IJobOperations operations, string resourceGroupName, string jobName)
        {
            return operations.DeleteAsync(resourceGroupName, jobName, CancellationToken.None);
        }
        
        /// <summary>
        /// Get a stream analytics job.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.StreamAnalytics.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// Required. The name of the stream analytics job.
        /// </param>
        /// <param name='parameters'>
        /// Required. The parameters required to get a stream analytics job.
        /// </param>
        /// <returns>
        /// The response of the get stream analytics job operation.
        /// </returns>
        public static JobGetResponse Get(this IJobOperations operations, string resourceGroupName, string jobName, JobGetParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IJobOperations)s).GetAsync(resourceGroupName, jobName, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Get a stream analytics job.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.StreamAnalytics.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// Required. The name of the stream analytics job.
        /// </param>
        /// <param name='parameters'>
        /// Required. The parameters required to get a stream analytics job.
        /// </param>
        /// <returns>
        /// The response of the get stream analytics job operation.
        /// </returns>
        public static Task<JobGetResponse> GetAsync(this IJobOperations operations, string resourceGroupName, string jobName, JobGetParameters parameters)
        {
            return operations.GetAsync(resourceGroupName, jobName, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// List all the stream analytics jobs in the same resource group.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.StreamAnalytics.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the stream analytics job.
        /// </param>
        /// <param name='parameters'>
        /// Required. The parameters required to list all the stream analytics
        /// job in the same resource group.
        /// </param>
        /// <returns>
        /// The response of the list stream analytics job operation.
        /// </returns>
        public static JobListResponse ListJobsInResourceGroup(this IJobOperations operations, string resourceGroupName, JobListParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IJobOperations)s).ListJobsInResourceGroupAsync(resourceGroupName, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// List all the stream analytics jobs in the same resource group.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.StreamAnalytics.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the stream analytics job.
        /// </param>
        /// <param name='parameters'>
        /// Required. The parameters required to list all the stream analytics
        /// job in the same resource group.
        /// </param>
        /// <returns>
        /// The response of the list stream analytics job operation.
        /// </returns>
        public static Task<JobListResponse> ListJobsInResourceGroupAsync(this IJobOperations operations, string resourceGroupName, JobListParameters parameters)
        {
            return operations.ListJobsInResourceGroupAsync(resourceGroupName, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// List all the stream analytics jobs in the same subscription.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.StreamAnalytics.IJobOperations.
        /// </param>
        /// <param name='parameters'>
        /// Required. The parameters required to list all the stream analytics
        /// job in the same subscription.
        /// </param>
        /// <returns>
        /// The response of the list stream analytics job operation.
        /// </returns>
        public static JobListResponse ListJobsInSubscription(this IJobOperations operations, JobListParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IJobOperations)s).ListJobsInSubscriptionAsync(parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// List all the stream analytics jobs in the same subscription.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.StreamAnalytics.IJobOperations.
        /// </param>
        /// <param name='parameters'>
        /// Required. The parameters required to list all the stream analytics
        /// job in the same subscription.
        /// </param>
        /// <returns>
        /// The response of the list stream analytics job operation.
        /// </returns>
        public static Task<JobListResponse> ListJobsInSubscriptionAsync(this IJobOperations operations, JobListParameters parameters)
        {
            return operations.ListJobsInSubscriptionAsync(parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Start a stream analytics job.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.StreamAnalytics.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// Required. The name of the stream analytics job.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public static LongRunningOperationResponse Start(this IJobOperations operations, string resourceGroupName, string jobName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IJobOperations)s).StartAsync(resourceGroupName, jobName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Start a stream analytics job.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.StreamAnalytics.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// Required. The name of the stream analytics job.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public static Task<LongRunningOperationResponse> StartAsync(this IJobOperations operations, string resourceGroupName, string jobName)
        {
            return operations.StartAsync(resourceGroupName, jobName, CancellationToken.None);
        }
        
        /// <summary>
        /// Stop a stream analytics job.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.StreamAnalytics.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// Required. The name of the stream analytics job.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public static LongRunningOperationResponse Stop(this IJobOperations operations, string resourceGroupName, string jobName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IJobOperations)s).StopAsync(resourceGroupName, jobName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Stop a stream analytics job.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.StreamAnalytics.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// Required. The name of the stream analytics job.
        /// </param>
        /// <returns>
        /// A standard service response for long running operations.
        /// </returns>
        public static Task<LongRunningOperationResponse> StopAsync(this IJobOperations operations, string resourceGroupName, string jobName)
        {
            return operations.StopAsync(resourceGroupName, jobName, CancellationToken.None);
        }
        
        /// <summary>
        /// Update a stream analytics job.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.StreamAnalytics.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// Required. The name of the stream analytics job.
        /// </param>
        /// <param name='parameters'>
        /// Required. The parameters required to update a stream analytics job.
        /// </param>
        /// <returns>
        /// The response of the patch job operation.
        /// </returns>
        public static JobPatchResponse Update(this IJobOperations operations, string resourceGroupName, string jobName, JobPatchParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IJobOperations)s).UpdateAsync(resourceGroupName, jobName, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Update a stream analytics job.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.StreamAnalytics.IJobOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The resource group name of the stream analytics job.
        /// </param>
        /// <param name='jobName'>
        /// Required. The name of the stream analytics job.
        /// </param>
        /// <param name='parameters'>
        /// Required. The parameters required to update a stream analytics job.
        /// </param>
        /// <returns>
        /// The response of the patch job operation.
        /// </returns>
        public static Task<JobPatchResponse> UpdateAsync(this IJobOperations operations, string resourceGroupName, string jobName, JobPatchParameters parameters)
        {
            return operations.UpdateAsync(resourceGroupName, jobName, parameters, CancellationToken.None);
        }
    }
}
