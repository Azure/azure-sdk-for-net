// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;

namespace Microsoft.Azure.Management.StreamAnalytics.Models
{
    /// <summary>
    /// The properties of the transformation.
    /// </summary>
    public partial class TransformationProperties
    {
        private string _etag;
        
        /// <summary>
        /// Optional. The etag of the transformation in DSL.
        /// </summary>
        public string Etag
        {
            get { return this._etag; }
            set { this._etag = value; }
        }
        
        private string _query;
        
        /// <summary>
        /// Required. The query of the transformation.
        /// </summary>
        public string Query
        {
            get { return this._query; }
            set { this._query = value; }
        }
        
        private int? _streamingUnits;
        
        /// <summary>
        /// Optional. The number of the streaming units of the transformation.
        /// </summary>
        public int? StreamingUnits
        {
            get { return this._streamingUnits; }
            set { this._streamingUnits = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the TransformationProperties class.
        /// </summary>
        public TransformationProperties()
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the TransformationProperties class
        /// with required arguments.
        /// </summary>
        public TransformationProperties(string query)
            : this()
        {
            if (query == null)
            {
                throw new ArgumentNullException("query");
            }
            this.Query = query;
        }
    }
}
