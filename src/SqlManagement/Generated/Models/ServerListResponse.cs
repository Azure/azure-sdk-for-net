// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.WindowsAzure.Management.Sql;
using Microsoft.WindowsAzure.Management.Sql.Models;

namespace Microsoft.WindowsAzure.Management.Sql.Models
{
    /// <summary>
    /// The response structure for the Server List operation
    /// </summary>
    public partial class ServerListResponse : OperationResponse, IEnumerable<ServerListResponse.Server>
    {
        private IList<ServerListResponse.Server> _servers;
        
        /// <summary>
        /// The SQL Servers that are valid for your subscription.
        /// </summary>
        public IList<ServerListResponse.Server> Servers
        {
            get { return this._servers; }
            set { this._servers = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the ServerListResponse class.
        /// </summary>
        public ServerListResponse()
        {
            this._servers = new List<ServerListResponse.Server>();
        }
        
        /// <summary>
        /// Gets the sequence of Servers.
        /// </summary>
        public IEnumerator<ServerListResponse.Server> GetEnumerator()
        {
            return this.Servers.GetEnumerator();
        }
        
        /// <summary>
        /// Gets the sequence of Servers.
        /// </summary>
        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return this.GetEnumerator();
        }
        
        /// <summary>
        /// An individual server in your Windows Azure subscription.
        /// </summary>
        public partial class Server
        {
            private string _administratorUserName;
            
            /// <summary>
            /// The name of an administrator for this server.
            /// </summary>
            public string AdministratorUserName
            {
                get { return this._administratorUserName; }
                set { this._administratorUserName = value; }
            }
            
            private IDictionary<string, string> _features;
            
            /// <summary>
            /// The list of features and the type of database server for an
            /// individual server.
            /// </summary>
            public IDictionary<string, string> Features
            {
                get { return this._features; }
                set { this._features = value; }
            }
            
            private string _location;
            
            /// <summary>
            /// The name of a data center location that is valid for your
            /// subscription.
            /// </summary>
            public string Location
            {
                get { return this._location; }
                set { this._location = value; }
            }
            
            private string _name;
            
            /// <summary>
            /// The name of a SQL Server running in your subscription.
            /// </summary>
            public string Name
            {
                get { return this._name; }
                set { this._name = value; }
            }
            
            /// <summary>
            /// Initializes a new instance of the Server class.
            /// </summary>
            public Server()
            {
                this._features = new Dictionary<string, string>();
            }
        }
    }
}
