// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.WindowsAzure.Management.Sql;
using Microsoft.WindowsAzure.Management.Sql.Models;

namespace Microsoft.WindowsAzure.Management.Sql
{
    /// <summary>
    /// The SQL Database Management API includes operations for managing SQL
    /// Databases for a subscription.
    /// </summary>
    public partial interface IDatabaseOperations
    {
        /// <summary>
        /// The Create Database operation creates a database in a SQL Server
        /// database server.
        /// </summary>
        /// <param name='serverName'>
        /// The name of the SQL Server where the database will be created
        /// </param>
        /// <param name='parameters'>
        /// The parameters for the create database operation
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<DatabaseCreateResponse> CreateAsync(string serverName, DatabaseCreateParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Drop Server operation drops a SQL Database server from a
        /// subscription.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/gg715285.aspx
        /// for more information)
        /// </summary>
        /// <param name='serverName'>
        /// The name of the server on which the database is found.
        /// </param>
        /// <param name='databaseName'>
        /// The name of the database to be deleted.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<OperationResponse> DeleteAsync(string serverName, string databaseName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Get Database operation retrieves information about a SQL Server
        /// database.
        /// </summary>
        /// <param name='serverName'>
        /// The name of the SQL Server on which the database is housed.
        /// </param>
        /// <param name='databaseName'>
        /// The name of the SQL Server database to be obtained.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<DatabaseGetResponse> GetAsync(string serverName, string databaseName, CancellationToken cancellationToken);
        
        /// <param name='serverName'>
        /// The name of the database server to be queried.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// Response containing the list of databases for a given server.
        /// </returns>
        Task<DatabaseListResponse> ListAsync(string serverName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Get Database operation retrieves information about a SQL Server
        /// database.
        /// </summary>
        /// <param name='serverName'>
        /// The name of the SQL Server where the database is housed.
        /// </param>
        /// <param name='databaseName'>
        /// The name of the SQL Server database to be obtained.
        /// </param>
        /// <param name='parameters'>
        /// The parameters for the update database operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<DatabaseUpdateResponse> UpdateAsync(string serverName, string databaseName, DatabaseUpdateParameters parameters, CancellationToken cancellationToken);
    }
}
