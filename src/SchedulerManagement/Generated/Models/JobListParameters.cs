// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using Microsoft.WindowsAzure.Scheduler.Models;

namespace Microsoft.WindowsAzure.Scheduler.Models
{
    /// <summary>
    /// Parameters supplied to the List Jobs operation.
    /// </summary>
    public partial class JobListParameters
    {
        private int? _skip;
        
        /// <summary>
        /// By default the top 1000 jobs will be returned in a call to GET
        /// jobs. A maximum of 1000 jobs can be returned in any call.  To get
        /// jobs beyond 1000 entries use $skip.
        /// </summary>
        public int? Skip
        {
            get { return this._skip; }
            set { this._skip = value; }
        }
        
        private Microsoft.WindowsAzure.Scheduler.Models.JobState? _state;
        
        /// <summary>
        /// To filter the jobs to have it only return jobs of a particular
        /// state use the $filter OData operation with the ‘state’ keyword.
        /// </summary>
        public Microsoft.WindowsAzure.Scheduler.Models.JobState? State
        {
            get { return this._state; }
            set { this._state = value; }
        }
        
        private int? _top;
        
        /// <summary>
        /// To receive more or less than the default number of jobs in a call
        /// then use the $top OData operation.
        /// </summary>
        public int? Top
        {
            get { return this._top; }
            set { this._top = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the JobListParameters class.
        /// </summary>
        public JobListParameters()
        {
        }
    }
}
