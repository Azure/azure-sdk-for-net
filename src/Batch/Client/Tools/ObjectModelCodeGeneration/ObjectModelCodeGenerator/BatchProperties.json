{
  "Types": [
    {
      "Name": "AddTaskResult",
      "ProtocolName": "Models.TaskAddResult",
      "IsConstructorPublic": false,
      "Comment": "Result for a single task added as part of a collection of tasks.",
      "Properties": [
        {
          "Key": {
            "Type": "Common.AddTaskStatus",
            "Name": "Status",
            "SummaryComment": "The status of the add task request.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.TaskAddStatus",
            "Name": "Status"
          }
        },
        {
          "Key": {
            "Type": "string",
            "Name": "TaskId",
            "SummaryComment": "The id of the task which this result applies to.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "ETag",
            "SummaryComment": "An ETag associated with a successfully added task.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "LastModified",
            "SummaryComment": "The last modified time associated with a successfully added task.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Location",
            "SummaryComment": "The URL of a successfully added task.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "BatchError",
            "Name": "Error",
            "SummaryComment": "The error caught while attempting to add the task.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "AffinityInformation",
      "ProtocolName": "Models.AffinityInformation",
      "Comment": "A locality hint that can be used by the Batch service to select a compute node on which to start a new task.",
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "AffinityId",
            "SummaryComment": "An opaque string that represents a previously run task or compute node.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required",
            "HideSetter": true
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "ApplicationPackageReference",
      "ProtocolName": "Models.ApplicationPackageReference",
      "Comment": "A reference to an application package to be deployed to compute nodes.",
      "IsUsedInCollections": true,
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "ApplicationId",
            "SummaryComment": "The id of the application to be deployed on compute nodes.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Version",
            "SummaryComment": "The version of the application to be deployed on compute nodes.",
            "RemarksComment": "If not specified, the default version of the application, as defined in the application settings, is deployed. If no default version is defined in the application settings, you must specify a version in the <see cref=\"ApplicationPackageReference\"/>.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "ApplicationSummary",
      "ProtocolName": "Models.ApplicationSummary",
      "Comment": "Contains information about an application in an Azure Batch account.",
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "DisplayName",
            "SummaryComment": "The display name of the application.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Id",
            "SummaryComment": "The id of the application.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "IReadOnlyList<string>",
            "Name": "Versions",
            "SummaryComment": "A readonly list of available versions of the application.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "AutoPoolSpecification",
      "ProtocolName": "Models.AutoPoolSpecification",
      "Comment": "Specifies characteristics for a temporary 'auto pool'. The Batch service will create this auto pool, run all the tasks for the job on it, and by default delete the pool once the job has completed.",
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "AutoPoolIdPrefix",
            "SummaryComment": "A prefix to be added to the unique identifier when a pool is automatically created.",
            "RemarksComment": "The prefix is optional. If present, it can be up to 20 characters long and must adhere to the usual rules for ids (alphanumeric characters, hyphens and underscores only).",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "bool?",
            "Name": "KeepAlive",
            "SummaryComment": "Whether to keep the auto pool alive after its <see cref=\"PoolLifetimeOption\"/> expires.",
            "RemarksComment": "The default value is false.",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "PoolSpecification",
            "Name": "PoolSpecification",
            "SummaryComment": "The pool specification for the auto pool.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "Models.PoolSpecification",
            "Name": "Pool"
          }
        },
        {
          "Key": {
            "Type": "Common.PoolLifetimeOption",
            "Name": "PoolLifetimeOption",
            "SummaryComment": "The minimum lifetime of created auto pools, and how multiple jobs on a schedule are assigned to pools.",
            "RemarksComment": "An auto pool may live longer than its PoolLifetimeOption if <see cref=\"KeepAlive\"/> is set.",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "Models.PoolLifetimeOption",
            "Name": "PoolLifetimeOption"
          }
        }
      ]
    },
    {
      "Name": "AutoScaleRunError",
      "ProtocolName": "Models.AutoScaleRunError",
      "Comment": "An error that occurred when executing or evaluating a pool autoscale formula.",
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "Code",
            "SummaryComment": "A code for the autoscale error. See <see cref=\"Common.BatchErrorCodeStrings\"/> for possible values.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Message",
            "SummaryComment": "A message describing the autoscale error, intended to be suitable for display in a user interface.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "IReadOnlyList<NameValuePair>",
            "Name": "Values",
            "SummaryComment": "A list of additional error details related to the autoscale error.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "AutoScaleRun",
      "ProtocolName": "Models.AutoScaleRun",
      "Comment": "The results and errors from an evaluation or execution of a pool autoscale formula.",
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "DateTime",
            "Name": "Timestamp",
            "SummaryComment": "The time at which the autoscale formula was last evaluated.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Results",
            "SummaryComment": "The final values of all variables used in the evaluation of the autoscale formula. Each variable value is returned in the form $variable=value, and variables are separated by semicolons.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "AutoScaleRunError",
            "Name": "Error",
            "SummaryComment": "Details of the error encountered evaluating the autoscale formula on the pool, if the evaluation was unsuccessful.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "BatchError",
      "ProtocolName": "Models.BatchError",
      "Comment": "An error received from the Azure Batch service.",
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "Code",
            "SummaryComment": "A code for the error. See <see cref=\"Common.BatchErrorCodeStrings\"/> for possible values.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "ErrorMessage",
            "Name": "Message",
            "SummaryComment": "A message describing the error, intended to be suitable for display in a user interface.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "IReadOnlyList<BatchErrorDetail>",
            "Name": "Values",
            "SummaryComment": "A collection of key-value pairs containing additional details about the error.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "BatchErrorDetail",
      "ProtocolName": "Models.BatchErrorDetail",
      "Comment": "An item of additional information included in a <see cref=\"BatchError\"/>.",
      "IsConstructorPublic": false,
      "IsUsedInCollections": true,
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "Key",
            "SummaryComment": "An identifier specifying the meaning of the <see cref=\"Value\"/> property.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Value",
            "SummaryComment": "The additional information included with the <see cref=\"BatchError\"/>.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "Certificate",
      "ProtocolName": "Models.Certificate",
      "TransportProtocolName": "Models.CertificateAddParameter",
      "Comment": "A certificate that can be installed on compute nodes and can be used to authenticate operations on a node.",
      "IsTopLevelObject": true,
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "Data",
            "SummaryComment": "The base64-encoded raw certificate data (contents of the .pfx or .cer file or data from which the <see cref=\"Certificate\"/> was created).",
            "RemarksComment": "<para>This property is set when creating a new <see cref=\"Certificate\"/>. It is not defined for certificates retrieved from the Batch service.</para> <para>The maximum size is 10 KB.</para>",
            "BoundAccess": "none",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required",
            "HideSetter": true
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Thumbprint",
            "SummaryComment": "The thumbprint of the certificate. This is a sequence of up to 40 hex digits.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required",
            "HideSetter": true
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "ThumbprintAlgorithm",
            "SummaryComment": "The algorithm used to derive the thumbprint.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required",
            "HideSetter": true
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Url",
            "SummaryComment": "The URL of the certificate.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "Common.CertificateState?",
            "Name": "State",
            "SummaryComment": "The current state of the certificate.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.CertificateState?",
            "Name": "State"
          }
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "StateTransitionTime",
            "SummaryComment": "The time at which the certificate entered its current state.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "Common.CertificateState?",
            "Name": "PreviousState",
            "SummaryComment": "The previous state of the certificate.",
            "RemarksComment": "If the certificate is in its initial <see cref=\"Common.CertificateState.Active\"/> state, the PreviousState property is not defined.",
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.CertificateState?",
            "Name": "PreviousState"
          }
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "PreviousStateTransitionTime",
            "SummaryComment": "The time at which the certificate entered its previous state.",
            "RemarksComment": "If the certificate is in its initial <see cref=\"Common.CertificateState.Active\"/> state, the PreviousStateTransitionTime property is not defined.",
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "Common.CertificateFormat?",
            "Name": "CertificateFormat",
            "SummaryComment": "The format of the certificate data.",
            "RemarksComment": null,
            "BoundAccess": "none",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Optional",
            "HideSetter": true
          },
          "Value": {
            "Type": "Models.CertificateFormat?",
            "Name": "CertificateFormat"
          }
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Password",
            "SummaryComment": "The password to access the certificate private key.",
            "RemarksComment": "This property is set when creating a new <see cref=\"Certificate\"/> from .pfx format data (see <see cref=\"CertificateOperations.CreateCertificate(byte[], string)\"/> and <see cref=\"CertificateOperations.CreateCertificate(string, string)\"/>). It is not defined for certificates retrieved from the Batch service.",
            "BoundAccess": "none",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Optional",
            "HideSetter": true
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "PublicData",
            "SummaryComment": "The public part of the certificate as a string containing base-64 encoded .cer format data.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DeleteCertificateError",
            "Name": "DeleteCertificateError",
            "SummaryComment": "The error that occurred on the last attempt to delete this certificate.",
            "RemarksComment": "This property is null unless the certificate is in the <see cref=\"Common.CertificateState.DeleteFailed\"/> state.",
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "CertificateReference",
      "ProtocolName": "Models.CertificateReference",
      "Comment": "Represents a certificate object of the Azure Batch service.",
      "IsUsedInCollections": true,
      "Properties": [
        {
          "Key": {
            "Type": "Common.CertStoreLocation?",
            "Name": "StoreLocation",
            "SummaryComment": "The <see cref=\"Common.CertStoreLocation\"/> for the certificate.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "Models.CertificateStoreLocation?",
            "Name": "StoreLocation"
          }

        },
        {
          "Key": {
            "Type": "string",
            "Name": "StoreName",
            "SummaryComment": "The name of the name of the certificate store. Besides <see cref=\"System.Security.Cryptography.X509Certificates.StoreName\"/> the value can have a custom store name.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Thumbprint",
            "SummaryComment": "The certificate thumbprint property of the certificate.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "ThumbprintAlgorithm",
            "SummaryComment": "The certificate thumbprint algorithm. Currently sha1 is the only supported algorithm.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "Common.CertificateVisibility?",
            "Name": "Visibility",
            "SummaryComment": "The set of users that can get to the private data of the installed certificate. ",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write",
            "ProtocolToObjectModelMethod": "UtilitiesInternal.ParseCertificateVisibility",
            "ObjectModelToProtocolMethod": "UtilitiesInternal.CertificateVisibilityToList"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "CloudJob",
      "ProtocolName": "Models.CloudJob",
      "TransportProtocolName": "Models.JobAddParameter",
      "Comment": "An Azure Batch job.",
      "IsTopLevelObject": true,
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "IList<EnvironmentSetting>",
            "Name": "CommonEnvironmentSettings",
            "SummaryComment": "A list of common environment variable settings. These environment variables are set for all tasks in this <see cref=\"CloudJob\"/> (including the Job Manager, Job Preparation and Job Release tasks).",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "CreationTime",
            "SummaryComment": "The creation time of the job.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "DisplayName",
            "SummaryComment": "The display name of the job.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "ETag",
            "SummaryComment": "The ETag for the job.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "JobExecutionInformation",
            "Name": "ExecutionInformation",
            "SummaryComment": "The execution information for the job.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.JobExecutionInformation",
            "Name": "ExecutionInfo"
          }
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Id",
            "SummaryComment": "The id of the job.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "JobConstraints",
            "Name": "Constraints",
            "SummaryComment": "The execution constraints for the job.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "JobManagerTask",
            "Name": "JobManagerTask",
            "SummaryComment": "The Job Manager task. The Job Manager task is launched when the <see cref=\"CloudJob\"/> is started.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "JobPreparationTask",
            "Name": "JobPreparationTask",
            "SummaryComment": "The Job Preparation task. The Batch service will run the Job Preparation task on a compute node before starting any tasks of that job on that compute node.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "JobReleaseTask",
            "Name": "JobReleaseTask",
            "SummaryComment": "The Job Release task. The Batch service runs the Job Release task when the job ends, on each compute node where any task of the job has run.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "LastModified",
            "SummaryComment": "The last modified time of the job.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "IList<MetadataItem>",
            "Name": "Metadata",
            "SummaryComment": "A list of name-value pairs associated with the job as metadata.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "PoolInformation",
            "Name": "PoolInformation",
            "SummaryComment": "The pool on which the Batch service runs the job's tasks.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "Models.PoolInformation",
            "Name": "PoolInfo"
          }
        },
        {
          "Key": {
            "Type": "Common.JobState?",
            "Name": "PreviousState",
            "SummaryComment": "The previous state of the job.",
            "RemarksComment": "If the job is in its initial <see cref=\"Common.JobState.Active\"/> state, the PreviousState property is not defined.",
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.JobState?",
            "Name": "PreviousState"
          }
        },
        {
          "Key": {
            "Type": "Common.OnAllTasksComplete?",
            "Name": "OnAllTasksComplete",
            "SummaryComment": "The action the Batch service should take when all tasks in the job are in the <see cref=\"Common.JobState.Completed\"/> state.",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "Models.OnAllTasksComplete?",
            "Name": "OnAllTasksComplete",
          }
        },
        {
          "Key": {
            "Type": "Common.OnTaskFailure?",
            "Name": "OnTaskFailure",
            "SummaryComment": "The action the Batch service should take when any task in the job fails.",
            "remarkComment": "A task is considered to have failed if it completes with a non-zero exit code and has exhausted its retry count, or if it had a scheduling error.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "Models.OnTaskFailure?",
            "Name": "OnTaskFailure",
          }
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "PreviousStateTransitionTime",
            "SummaryComment": "The time at which the job entered its previous state.",
            "RemarksComment": "If the job is in its initial <see cref=\"Common.JobState.Active\"/> state, the PreviousStateTransitionTime property is not defined.",
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "int?",
            "Name": "Priority",
            "SummaryComment": "The priority of the job. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority.",
            "RemarksComment": "The default value is 0.",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "Common.JobState?",
            "Name": "State",
            "SummaryComment": "The current state of the job.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.JobState?",
            "Name": "State"
          }
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "StateTransitionTime",
            "SummaryComment": "The time at which the job entered its current state.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "JobStatistics",
            "Name": "Statistics",
            "SummaryComment": "Resource usage statistics for the entire lifetime of the job.",
            "RemarksComment": "This property is populated only if the <see cref=\"CloudJob\"/> was retrieved with an <see cref=\"ODATADetailLevel.ExpandClause\"/> including the 'stats' attribute; otherwise it is null.",
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.JobStatistics",
            "Name": "Stats"
          }
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Url",
            "SummaryComment": "The URL of the job.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "bool?",
            "Name": "UsesTaskDependencies",
            "SummaryComment": "Whether tasks in the job can define dependencies on each other.",
            "RemarksComment": "The default value is false.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "CloudJobSchedule",
      "ProtocolName": "Models.CloudJobSchedule",
      "TransportProtocolName": "Models.JobScheduleAddParameter",
      "Comment": "A job schedule that allows recurring jobs by specifying when to run jobs and a specification used to create each job.",
      "IsTopLevelObject": true,
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "CreationTime",
            "SummaryComment": "The creation time of the job schedule.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "DisplayName",
            "SummaryComment": "The display name of the job schedule.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "ETag",
            "SummaryComment": "The ETag of the job schedule.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "JobScheduleExecutionInformation",
            "Name": "ExecutionInformation",
            "SummaryComment": "The execution information for the job schedule.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.JobScheduleExecutionInformation",
            "Name": "ExecutionInfo"
          }
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Id",
            "SummaryComment": "The id of the job schedule.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "JobSpecification",
            "Name": "JobSpecification",
            "SummaryComment": "A <see cref=\"JobSpecification\" /> containing details of the jobs to be created according to the <see cref=\"Schedule\"/>.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "LastModified",
            "SummaryComment": "The last modified time of the job schedule.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "IList<MetadataItem>",
            "Name": "Metadata",
            "SummaryComment": "A list of name-value pairs associated with the schedule as metadata.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "Common.JobScheduleState?",
            "Name": "PreviousState",
            "SummaryComment": "The previous state of the job schedule.",
            "RemarksComment": "If the schedule is in its initial <see cref=\"Common.JobScheduleState.Active\"/> state, the PreviousState property is not defined.",
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.JobScheduleState?",
            "Name": "PreviousState"
          }
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "PreviousStateTransitionTime",
            "SummaryComment": "The time at which the job schedule entered its previous state.",
            "RemarksComment": "If the schedule is in its initial <see cref=\"Common.JobScheduleState.Active\"/> state, the PreviousStateTransitionTime property is not defined.",
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "Schedule",
            "Name": "Schedule",
            "SummaryComment": "The schedule that determines when jobs will be created.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "Common.JobScheduleState?",
            "Name": "State",
            "SummaryComment": "The current state of the job schedule.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.JobScheduleState?",
            "Name": "State"
          }
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "StateTransitionTime",
            "SummaryComment": "The time at which the <see cref=\"CloudJobSchedule\"/> entered its current state.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "JobScheduleStatistics",
            "Name": "Statistics",
            "SummaryComment": "A <see cref=\"JobScheduleStatistics\" /> containing resource usage statistics for the entire lifetime of the job schedule.",
            "RemarksComment": "This property is populated only if the <see cref=\"CloudJobSchedule\"/> was retrieved with an <see cref=\"ODATADetailLevel.ExpandClause\"/> including the 'stats' attribute; otherwise it is null.",
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.JobScheduleStatistics",
            "Name": "Stats"
          }
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Url",
            "SummaryComment": "The URL of the job schedule.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "CloudPool",
      "ProtocolName": "Models.CloudPool",
      "TransportProtocolName": "Models.PoolAddParameter",
      "Comment": "A pool in the Azure Batch service.",
      "IsTopLevelObject": true,
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "Common.AllocationState?",
            "Name": "AllocationState",
            "SummaryComment": "An <see cref=\"Common.AllocationState\"/> which indicates what node allocation activity is occurring on the pool.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.AllocationState?",
            "Name": "AllocationState"
          }
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "AllocationStateTransitionTime",
            "SummaryComment": "The time at which the pool entered its current <see cref=\"AllocationState\"/>.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "IList<ApplicationPackageReference>",
            "Name": "ApplicationPackageReferences",
            "SummaryComment": "A list of application packages to be installed on each compute node in the pool.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "bool?",
            "Name": "AutoScaleEnabled",
            "SummaryComment": "Whether the pool size should automatically adjust according to the <see cref=\"AutoScaleFormula\"/>.",
            "RemarksComment": "<para>If false, the <see cref=\"TargetDedicated\"/> property is required, and <see cref=\"AutoScaleFormula\"/> must be null.</para> <para>If true, the <see cref=\"AutoScaleFormula\"/> property is required, and <see cref=\"TargetDedicated\"/> must be null. The pool automatically resizes according to the formula.</para><para>The default value is false.</para>",
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "bool?",
            "Name": "EnableAutoScale"
          }
        },
        {
          "Key": {
            "Type": "TimeSpan?",
            "Name": "AutoScaleEvaluationInterval",
            "SummaryComment": "A time interval at which to automatically adjust the pool size according to the <see cref=\"AutoScaleFormula\"/>.",
            "RemarksComment": "The default value is 15 minutes. The minimum allowed value is 5 minutes.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "AutoScaleFormula",
            "SummaryComment": "A formula for the desired number of compute nodes in the pool.",
            "RemarksComment": "<para>For how to write autoscale formulas, see https://azure.microsoft.com/documentation/articles/batch-automatic-scaling/. This property is required if <see cref=\"AutoScaleEnabled\"/> is set to true. It must be null if AutoScaleEnabled is false.</para><para>The formula is checked for validity before the pool is created. If the formula is not valid, an exception is thrown when you try to commit the <see cref=\"CloudPool\"/>.</para>",
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "AutoScaleRun",
            "Name": "AutoScaleRun",
            "SummaryComment": "The results and errors from the last execution of the <see cref=\"AutoScaleFormula\"/>.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "IList<CertificateReference>",
            "Name": "CertificateReferences",
            "SummaryComment": "A list of certificates to be installed on each compute node in the pool.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "CloudServiceConfiguration",
            "Name": "CloudServiceConfiguration",
            "SummaryComment": "The <see cref=\"CloudServiceConfiguration\"/> for the pool.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "CreationTime",
            "SummaryComment": "The creation time for the pool.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "int?",
            "Name": "CurrentDedicated",
            "SummaryComment": "The number of compute nodes currently in the pool.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "DisplayName",
            "SummaryComment": "The display name of the pool.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "ETag",
            "SummaryComment": "The ETag for the pool.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Id",
            "SummaryComment": "The id of the pool.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "bool?",
            "Name": "InterComputeNodeCommunicationEnabled",
            "SummaryComment": "Whether the pool permits direct communication between its compute nodes.",
            "RemarksComment": "Enabling inter-node communication limits the maximum size of the pool due to deployment restrictions on the nodes of the pool. This may result in the pool not reaching its desired size.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "bool?",
            "Name": "EnableInterNodeCommunication"
          }
        },
        {
          "Key": {
            "Type": "NetworkConfiguration",
            "Name": "NetworkConfiguration",
            "SummaryComment": "The network configuration of the pool.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "LastModified",
            "SummaryComment": "The last modified time of the pool.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "int?",
            "Name": "MaxTasksPerComputeNode",
            "SummaryComment": "The maximum number of tasks that can run concurrently on a single compute node in the pool.",
            "RemarksComment": "The default value is 1. The maximum value of this setting depends on the size of the compute nodes in the pool (the <see cref=\"VirtualMachineSize\"/> property).",
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "int?",
            "Name": "MaxTasksPerNode"
          }
        },
        {
          "Key": {
            "Type": "IList<MetadataItem>",
            "Name": "Metadata",
            "SummaryComment": "A list of name-value pairs associated with the pool as metadata.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "ResizeError",
            "Name": "ResizeError",
            "SummaryComment": "The resize error encountered while performing the last resize on the <see cref=\"CloudPool\"/>. This error is returned only when the Batch service encountered an error while resizing the pool, and when the pool's <see cref=\"CloudPool.AllocationState\"/> is <see cref=\"AllocationState\">Steady</see>.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "TimeSpan?",
            "Name": "ResizeTimeout",
            "SummaryComment": "The timeout for allocation of compute nodes to the pool.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "TaskSchedulingPolicy",
            "Name": "TaskSchedulingPolicy",
            "SummaryComment": "How tasks are distributed among compute nodes in the pool.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "StartTask",
            "Name": "StartTask",
            "SummaryComment": "A task to run on each compute node as it joins the pool. The task runs when the node is added to the pool or when the node is restarted.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "Common.PoolState?",
            "Name": "State",
            "SummaryComment": "The current state of the pool.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.PoolState?",
            "Name": "State"
          }
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "StateTransitionTime",
            "SummaryComment": "The time at which the pool entered its current state.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "PoolStatistics",
            "Name": "Statistics",
            "SummaryComment": "The resource usage statistics for the pool.",
            "RemarksComment": "This property is populated only if the <see cref=\"CloudPool\"/> was retrieved with an <see cref=\"ODATADetailLevel.ExpandClause\"/> including the 'stats' attribute; otherwise it is null.",
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.PoolStatistics",
            "Name": "Stats"
          }
        },
        {
          "Key": {
            "Type": "int?",
            "Name": "TargetDedicated",
            "SummaryComment": "The desired number of compute nodes in the pool.",
            "RemarksComment": "This property must be null if <see cref=\"AutoScaleEnabled\"/> is set to true. It is required if AutoScaleEnabled is set to false.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Url",
            "SummaryComment": "The URL of the pool.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "VirtualMachineConfiguration",
            "Name": "VirtualMachineConfiguration",
            "SummaryComment": "The <see cref=\"VirtualMachineConfiguration\"/> of the pool.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "VirtualMachineSize",
            "SummaryComment": "The size of the virtual machines in the pool.  All virtual machines in a pool are the same size.",
            "RemarksComment": "<para>For information about available sizes of virtual machines for Cloud Services pools (pools created with a <see cref=\"CloudServiceConfiguration\"/>), see https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/. Batch supports all Cloud Services VM sizes except ExtraSmall.</para><para>For information about available VM sizes for pools using images from the Virtual Machines Marketplace (pools created with a <see cref=\"VirtualMachineConfiguration\"/>) see https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/ or https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/. Batch supports all Azure VM sizes except STANDARD_A0 and those with premium storage (for example STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).</para>",
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "string",
            "Name": "VmSize"
          }
        }
      ]
    },
    {
      "Name": "CloudTask",
      "ProtocolName": "Models.CloudTask",
      "TransportProtocolName": "Models.TaskAddParameter",
      "Comment": "An Azure Batch task. A task is a piece of work that is associated with a job and runs on a compute node.",
      "ParentPathVariables": [ "parentJobId" ],
      "CustomIncludes": [ "FileStaging" ],
      "IsTopLevelObject": true,
      "IsConstructorPublic": false,
      "HideCustomConstructor": true,
      "Properties": [
        {
          "Key": {
            "Type": "AffinityInformation",
            "Name": "AffinityInformation",
            "SummaryComment": "A locality hint that can be used by the Batch service to select a node on which to start the task.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "Models.AffinityInformation",
            "Name": "AffinityInfo"
          }
        },
        {
          "Key": {
            "Type": "string",
            "Name": "CommandLine",
            "SummaryComment": "The command line of the task.",
            "RemarksComment": "The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "ComputeNodeInformation",
            "Name": "ComputeNodeInformation",
            "SummaryComment": "Information about the compute node on which the task ran.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.NodeInformation",
            "Name": "NodeInfo"
          }
        },
        {
          "Key": {
            "Type": "MultiInstanceSettings",
            "Name": "MultiInstanceSettings",
            "SummaryComment": "Information about how to run the multi-instance task.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "CreationTime",
            "SummaryComment": "The creation time of the task.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "TaskDependencies",
            "Name": "DependsOn",
            "SummaryComment": "Any other tasks that this <see cref=\"CloudTask\"/> depends on. The task will not be scheduled until all depended-on tasks have completed successfully.",
            "RemarksComment": "The job must set <see cref=\"CloudJob.UsesTaskDependencies\"/> to true in order to use task dependencies. If UsesTaskDependencies is false (the default), adding a task with dependencies will fail with an error.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "DisplayName",
            "SummaryComment": "The display name of the task.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "ExitConditions",
            "Name": "ExitConditions",
            "SummaryComment": "How the Batch service should respond when the task completes.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
           },
           "Value": {
              "Type": "Models.ExitConditions",
              "Name": "ExitConditions",
            }
         },
         {
          "Key": {
            "Type": "IList<EnvironmentSetting>",
            "Name": "EnvironmentSettings",
            "SummaryComment": "A list of environment variable settings for the task.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "ETag",
            "SummaryComment": "The ETag for the task.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "IList<IFileStagingProvider>",
            "Name": "FilesToStage",
            "SummaryComment": "A list of files to be staged for the task.",
            "RemarksComment": null,
            "BoundAccess": "none",
            "UnboundAccess": "read,write",
            "IsClientOnly": true
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "TaskExecutionInformation",
            "Name": "ExecutionInformation",
            "SummaryComment": "The execution information for the task.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.TaskExecutionInformation",
            "Name": "ExecutionInfo"
          }
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Id",
            "SummaryComment": "The id of the task.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "LastModified",
            "SummaryComment": "The last modified time of the task.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "Common.TaskState?",
            "Name": "PreviousState",
            "SummaryComment": "The previous state of the task.",
            "RemarksComment": "If the task is in its initial <see cref=\"Common.TaskState.Active\"/> state, the PreviousState property is not defined.",
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.TaskState?",
            "Name": "PreviousState"
          }
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "PreviousStateTransitionTime",
            "SummaryComment": "The time at which the task entered its previous state.",
            "RemarksComment": "If the task is in its initial <see cref=\"Common.TaskState.Active\"/> state, the PreviousStateTransitionTime property is not defined.",
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "IList<ResourceFile>",
            "Name": "ResourceFiles",
            "SummaryComment": "A list of files that the Batch service will download to the compute node before running the command line.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "bool?",
            "Name": "RunElevated",
            "SummaryComment": "Whether to run the task in elevated mode.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "Common.TaskState?",
            "Name": "State",
            "SummaryComment": "The current state of the task.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.TaskState?",
            "Name": "State"
          }
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "StateTransitionTime",
            "SummaryComment": "The time at which the task entered its current state.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "TaskStatistics",
            "Name": "Statistics",
            "SummaryComment": "Resource usage statistics for the task.",
            "RemarksComment": "This property is populated only if the <see cref=\"CloudTask\"/> was retrieved with an <see cref=\"ODATADetailLevel.ExpandClause\"/> including the 'stats' attribute; otherwise it is null.",
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.TaskStatistics",
            "Name": "Stats"
          }
        },
        {
          "Key": {
            "Type": "TaskConstraints",
            "Name": "Constraints",
            "SummaryComment": "The execution constraints that apply to this task.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Url",
            "SummaryComment": "The URL of the task.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "IList<ApplicationPackageReference>",
            "Name": "ApplicationPackageReferences",
            "SummaryComment": "A list of application packages that the Batch service will deploy to the compute node before running the command line.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "IList<Models.ApplicationPackageReference>",
            "Name": "ApplicationPackageReferences",
          },
        },
      ]
    },
    {
      "Name": "CloudServiceConfiguration",
      "ProtocolName": "Models.CloudServiceConfiguration",
      "Comment": "The configuration for compute nodes in a pool based on the Azure Cloud Services platform.",
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "OSFamily",
            "SummaryComment": "The Azure Guest OS family to be installed on the virtual machines in the pool.",
            "RemarksComment": "For more information about Guest OS families, see https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/.",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required"
          },
          "Value": {
            "Name": "OsFamily"
          }
        },
        {
          "Key": {
            "Type": "string",
            "Name": "TargetOSVersion",
            "SummaryComment": "The Azure Guest OS version to be installed on the virtual machines in the pool. If no value is provided, the Batch service will default to \"'*\", which specifies the latest operating system version for the <see cref=\"OSFamily\"/>.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Optional"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "CurrentOSVersion",
            "SummaryComment": "The Azure Guest OS version currently installed on the virtual machines in the pool. This may differ from <see cref=\"TargetOSVersion\"/> if the pool state is <see cref=\"Common.PoolState.Upgrading\"/>.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "ComputeNode",
      "ProtocolName": "Models.ComputeNode",
      "Comment": "Summarizes the state of a compute node.",
      "ParentPathVariables": [ "parentPoolId" ],
      "IsTopLevelObject": true,
      "IsConstructorPublic": false,
      "HideCustomConstructor": true,
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "Id",
            "SummaryComment": "The id of compute node.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Url",
            "SummaryComment": "The URL of compute node.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "Common.SchedulingState?",
            "Name": "SchedulingState",
            "SummaryComment": "Whether the node is available for task scheduling.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.SchedulingState?",
            "Name": "SchedulingState"
          }
        },
        {
          "Key": {
            "Type": "Common.ComputeNodeState?",
            "Name": "State",
            "SummaryComment": "The current state of the compute node.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.ComputeNodeState?",
            "Name": "State"
          }
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "StateTransitionTime",
            "SummaryComment": "The time at which the compute node entered the current state.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "LastBootTime",
            "SummaryComment": "The time at which the compute node was started.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "AllocationTime",
            "SummaryComment": "The time at which this compute node was allocated to the pool.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "IPAddress",
            "SummaryComment": "The IP address associated with the compute node.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "string",
            "Name": "IpAddress"
          }
        },
        {
          "Key": {
            "Type": "string",
            "Name": "AffinityId",
            "SummaryComment": "An opaque string that contains information about the location of the compute node.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "VirtualMachineSize",
            "SummaryComment": "The size of the virtual machine hosting the compute node.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "string",
            "Name": "VmSize"
          }
        },
        {
          "Key": {
            "Type": "int?",
            "Name": "TotalTasksRun",
            "SummaryComment": "The number of tasks that have been run on this compute node from the time it was allocated to this pool. This includes Job Preparation, Job Release, and Job Manager tasks, but not the pool start task.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "int?",
            "Name": "TotalTasksSucceeded",
            "SummaryComment": "The total number of tasks which completed successfully (with exitCode 0) on the compute node. This includes Job Preparation, Job Release, and Job Manager tasks, but not the pool start task.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "int?",
            "Name": "RunningTasksCount",
            "SummaryComment": "The total number of currently running tasks on the compute node. This includes Job Preparation, Job Release, and Job Manager tasks, but not the pool start task.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "StartTaskInformation",
            "Name": "StartTaskInformation",
            "SummaryComment": "The detailed runtime information of the start task, including current state, error details, exit code, start time, end time, etc.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "StartTaskInformation",
            "Name": "StartTaskInfo"
          }
        },
        {
          "Key": {
            "Type": "IReadOnlyList<TaskInformation>",
            "Name": "RecentTasks",
            "SummaryComment": "The execution information for the most recent tasks that ran on this compute node. Note that this element is only returned if at least one task was run on this compute node since the time it was assigned to its current pool.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "StartTask",
            "Name": "StartTask",
            "SummaryComment": "The start task associated with all compute nodes in this pool.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "IReadOnlyList<CertificateReference>",
            "Name": "CertificateReferences",
            "SummaryComment": "the list of certificates installed on this compute node. ",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "IReadOnlyList<ComputeNodeError>",
            "Name": "Errors",
            "SummaryComment": "The list of errors that are currently being encountered by the compute node.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "ComputeNodeError",
      "ProtocolName": "Models.ComputeNodeError",
      "Comment": "An error encountered by an Azure Batch compute node.",
      "IsConstructorPublic": false,
      "IsUsedInCollections": true,
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "Code",
            "SummaryComment": "A code for the compute node error. See <see cref=\"Common.BatchErrorCodeStrings\"/> for possible values.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Message",
            "SummaryComment": "A message describing the compute node error, intended to be suitable for display in a user interface.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "IReadOnlyList<NameValuePair>",
            "Name": "ErrorDetails",
            "SummaryComment": "A list of additional error details related to the compute node error.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "ComputeNodeInformation",
      "ProtocolName": "Models.ComputeNodeInformation",
      "Comment": "The compute node information class.",
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "AffinityId",
            "SummaryComment": "An opaque string that contains information about the location of the compute node.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "ComputeNodeId",
            "SummaryComment": "The compute node id.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "string",
            "Name": "NodeId"
          }
        },
        {
          "Key": {
            "Type": "string",
            "Name": "ComputeNodeUrl",
            "SummaryComment": "The URL of the compute node.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "string",
            "Name": "NodeUrl"
          }
        },
        {
          "Key": {
            "Type": "string",
            "Name": "PoolId",
            "SummaryComment": "The pool id.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "TaskRootDirectory",
            "SummaryComment": "The root directory of the current task on the compute node. You can use this path to retrieve files created by the task such as log files.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "TaskRootDirectoryUrl",
            "SummaryComment": "The URL to the root directory of the current task on the compute node.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "ComputeNodeUser",
      "ProtocolName": "Models.ComputeNodeUser",
      "Comment": "A user for a specific Azure Batch compute node.",
      "ParentPathVariables": [ "parentPoolId", "parentNodeId" ],
      "IsTopLevelObject": true,
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "Name",
            "SummaryComment": "The name. If AddUser is specified for the commit operation, the value of this property is the name of the local Windows account created. If UpdateUser is specified for the commit operation, the value of this property selects the local Windows account to modify. Changing this property does not rename the local Windows account on the compute node.",
            "RemarksComment": null,
            "BoundAccess": "none",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "bool?",
            "Name": "IsAdmin",
            "SummaryComment": "The administrative privilege level of the user account. The value of this property is ignored when UpdateUser is specified for the commit operation.",
            "RemarksComment": null,
            "BoundAccess": "none",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime",
            "Name": "ExpiryTime",
            "SummaryComment": "The expiry time.",
            "RemarksComment": null,
            "BoundAccess": "none",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Password",
            "SummaryComment": "The password.",
            "RemarksComment": null,
            "BoundAccess": "none",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "SshPublicKey",
            "SummaryComment": "The SSH public key that can be used for remote login to the compute node.",
            "RemarksComment": "<para>The public key should be compatible with Open SSH encoding and should be base 64 encoded. This property can be specified only for Linux nodes. The Batch service will return an error if this property is set for pools created with <see cref=\"Microsoft.Azure.Batch.CloudServiceConfiguration\"/> or <see cref=\"Microsoft.Azure.Batch.VirtualMachineConfiguration\"/> with Windows compute nodes.</para>",
            "BoundAccess": "none",
            "UnboundAccess": "read,write"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "DeleteCertificateError",
      "ProtocolName": "Models.DeleteCertificateError",
      "Comment": "An error encountered by the Batch service when deleting a certificate.",
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "Code",
            "SummaryComment": "A code for the certificate deletion error. See <see cref=\"Common.BatchErrorCodeStrings\"/> for possible values.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Message",
            "SummaryComment": "A message describing the certificagte deletion error, intended to be suitable for display in a user interface.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "IReadOnlyList<NameValuePair>",
            "Name": "Values",
            "SummaryComment": "A list of additional error details related to the certificate deletion error.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "EnvironmentSetting",
      "ProtocolName": "Models.EnvironmentSetting",
      "Comment": "An environment variable to be set on a task process, such as a job task, start task, job manager task, or job preparation or release task.",
      "IsUsedInCollections": true,
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "Name",
            "SummaryComment": "The name of the environment variable.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required",
            "HideSetter": true
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Value",
            "SummaryComment": "The value of the environment variable.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required",
            "HideSetter": true
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "ExitConditions",
      "ProtocolName": "Models.ExitConditions",
      "Comment": "How the Batch service should respond when a task completes.",
      "IsUsedInCollections": true,
      "Properties": [
        {
          "Key": {
            "Type": "IList<ExitCodeMapping>",
            "Name": "ExitCodes",
            "SummaryComment": "A list of task exit codes and how the Batch service should respond to them.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "IList<Models.ExitCodeMapping>",
            "Name": "ExitCodes",
          }
        },
        {
          "Key": {
            "Type": "IList<ExitCodeRangeMapping>",
            "Name": "ExitCodeRanges",
            "SummaryComment": "A list of task exit code ranges and how the Batch service should respond to them.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "IList<Models.ExitCodeRangeMapping>",
            "Name": "ExitCodeRanges",
          }
        },
        { 
          "Key": {
            "Type": "ExitOptions",
            "Name": "SchedulingError",
            "SummaryComment": "How the Batch service should respond if the task fails with a scheduling error.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null,
        },
        {
          "Key": {
            "Type": "ExitOptions",
            "Name": "Default",
            "SummaryComment": "How the Batch service should respond if the task fails with an exit condition not covered by any of the other properties.",
            "RemarksComment": "This value is used if the task exits with any nonzero exit code not listed in the <see cref=\"ExitCodes\"/> or <see cref=\"ExitCodeRanges\"/> collection, or with a scheduling error if the <see cref=\"SchedulingError\"/> property is not present.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "Models.ExitOptions",
            "Name": "DefaultProperty",
          }
        },
      ]
    },
    {
      "Name": "ExitCodeMapping",
      "ProtocolName": "Models.ExitCodeMapping",
      "Comment": "A process exit code and how the Batch service should respond if a task exits with that exit code.",
      "IsUsedInCollections": true,
      "Properties": [
        {
          "Key": {
            "Type": "int",
            "Name": "Code",
            "SummaryComment": "The process exit code.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required",
            "HideSetter": true
          },
          "Value": null,
        },
        {
          "Key": {
            "Type": "ExitOptions",
            "Name": "ExitOptions",
            "SummaryComment": "How the Batch service should respond if the task exits with this exit code.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required",
            "HideSetter": true
          },
          "Value": null,
        },
      ]
    },
    {
      "Name": "ExitCodeRangeMapping",
      "ProtocolName": "Models.ExitCodeRangeMapping",
      "Comment": "A range of exit codes and how the Batch service should respond if a task exits with an exit code within that range.",
      "IsUsedInCollections": true,
      "ForceConstructorOrder": true,
      "Properties": [
        {
          "Key": {
            "Type": "int",
            "Name": "Start",
            "SummaryComment": "The first exit code in the range.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required",
            "HideSetter": true
          },
          "Value": null,
        },
        {
          "Key": {
            "Type": "int",
            "Name": "End",
            "SummaryComment": "The last exit code in the range.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required",
            "HideSetter": true
          },
          "Value": null,
        },
        {
          "Key": {
            "Type": "ExitOptions",
            "Name": "ExitOptions",
            "SummaryComment": "An <see cref=\"ExitOptions\" /> specifying how the Batch service should respond if the task exits with an exit code in the range <see cref=\"Start\"/> to <see cref=\"End\"/>.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required",
            "HideSetter": true
          },
          "Value": {
            "Type": "Models.ExitOptions",
            "Name": "ExitOptions",
          } 
        },
      ]
    },
    {
      "Name": "ExitOptions",
      "ProtocolName": "Models.ExitOptions",
      "Comment": "How the Batch service should respond to a particular exit condition.",
      "IsUsedInCollections": true,
      "Properties": [
        {
          "Key": {
            "Type": "Common.JobAction?",
            "Name": "JobAction",
            "SummaryComment": "An action to take on the job containing the task, if the task completes with the given exit condition and the job's <see cref=\"CloudJob.OnTaskFailure\"/> property is <see cref=\"Common.OnTaskFailure.PerformExitOptionsJobAction\"/>.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write",
          },
          "Value": {
            "Type": "Models.JobAction?",
            "Name": "JobAction",
          }
        },
      ]
    },
    {
      "Name": "ExitConditions",
      "ProtocolName": "Models.ExitConditions",
      "Comment": "How the Batch service should respond when a task completes.",
      "IsUsedInCollections": true,
      "Properties": [
        {
          "Key": {
            "Type": "IList<ExitCodeMapping>",
            "Name": "ExitCodes",
            "SummaryComment": "A list of task exit codes and how the Batch service should respond to them.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "IList<Models.ExitCodeMapping>",
            "Name": "ExitCodes",
          }
        },
        {
          "Key": {
            "Type": "IList<ExitCodeRangeMapping>",
            "Name": "ExitCodeRanges",
            "SummaryComment": "A list of task exit code ranges and how the Batch service should respond to them.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "IList<Models.ExitCodeRangeMapping>",
            "Name": "ExitCodeRanges",
          }
        },
        { 
          "Key": {
            "Type": "ExitOptions",
            "Name": "SchedulingError",
            "SummaryComment": "How the Batch service should respond if the task fails with a scheduling error.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null,
        },
        {
          "Key": {
            "Type": "ExitOptions",
            "Name": "Default",
            "SummaryComment": "How the Batch service should respond if the task fails with an exit condition not covered by any of the other properties.",
            "RemarksComment": "This value is used if the task exits with any nonzero exit code not listed in the <see cref=\"ExitCodes\"/> or <see cref=\"ExitCodeRanges\"/> collection, or with a scheduling error if the <see cref=\"SchedulingError\"/> property is not present.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "Models.ExitOptions",
            "Name": "DefaultProperty",
          }
        },
      ]
    },
    {
      "Name": "ExitCodeMapping",
      "ProtocolName": "Models.ExitCodeMapping",
      "Comment": "A process exit code and how the Batch service should respond if a task exits with that exit code.",
      "IsUsedInCollections": true,
      "Properties": [
        {
          "Key": {
            "Type": "int",
            "Name": "Code",
            "SummaryComment": "The process exit code.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required",
            "HideSetter": true
          },
          "Value": null,
        },
        {
          "Key": {
            "Type": "ExitOptions",
            "Name": "ExitOptions",
            "SummaryComment": "How the Batch service should respond if the task exits with this exit code.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required",
            "HideSetter": true
          },
          "Value": null,
        },
      ]
    },
    {
      "Name": "ExitCodeRangeMapping",
      "ProtocolName": "Models.ExitCodeRangeMapping",
      "Comment": "A range of exit codes and how the Batch service should respond if a task exits with an exit code within that range.",
      "IsUsedInCollections": true,
      "ForceConstructorOrder": true,
      "Properties": [
        {
          "Key": {
            "Type": "int",
            "Name": "Start",
            "SummaryComment": "The first exit code in the range.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required",
            "HideSetter": true
          },
          "Value": null,
        },
        {
          "Key": {
            "Type": "int",
            "Name": "End",
            "SummaryComment": "The last exit code in the range.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required",
            "HideSetter": true
          },
          "Value": null,
        },
        {
          "Key": {
            "Type": "ExitOptions",
            "Name": "ExitOptions",
            "SummaryComment": "An <see cref=\"ExitOptions\" /> specifying how the Batch service should respond if the task exits with an exit code in the range <see cref=\"Start\"/> to <see cref=\"End\"/>.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required",
            "HideSetter": true
          },
          "Value": {
            "Type": "Models.ExitOptions",
            "Name": "ExitOptions",
          } 
        },
      ]
    },
    {
      "Name": "ExitOptions",
      "ProtocolName": "Models.ExitOptions",
      "Comment": "How the Batch service should respond to a particular exit condition.",
      "IsUsedInCollections": true,
      "Properties": [
        {
          "Key": {
            "Type": "Common.JobAction?",
            "Name": "JobAction",
            "SummaryComment": "An action to take on the job containing the task, if the task completes with the given exit condition and the job's <see cref=\"CloudJob.OnTaskFailure\"/> property is <see cref=\"Common.OnTaskFailure.PerformExitOptionsJobAction\"/>.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write",
          },
          "Value": {
            "Type": "Models.JobAction?",
            "Name": "JobAction",
          }
        },
      ]
    },
    {
      "Name": "ErrorMessage",
      "ProtocolName": "Models.ErrorMessage",
      "Comment": "An error message received in an Azure Batch error response.",
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "Language",
            "SummaryComment": "The language code of the error message.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "string",
            "Name": "Lang"
          }
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Value",
            "SummaryComment": "The text of the message.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "FileProperties",
      "ProtocolName": "Models.FileProperties",
      "Comment": "The properties of a file on a compute node.",
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "CreationTime",
            "SummaryComment": "The file creation time.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "FileMode",
            "SummaryComment": "The permission attribute for the file.",
            "RemarksComment": "This property will be returned only for Linux nodes.",
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime",
            "Name": "LastModified",
            "SummaryComment": "The time at which the file was last modified.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "long",
            "Name": "ContentLength",
            "SummaryComment": "The length of the file.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "ContentType",
            "SummaryComment": "The content type of the file.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "ImageReference",
      "ProtocolName": "Models.ImageReference",
      "Comment": "A reference to an Azure Virtual Machines Marketplace image. To retrieve a list of images supported by the Batch service, see <see cref=\"PoolOperations.ListNodeAgentSkus\"/> and <see cref=\"NodeAgentSku.VerifiedImageReferences\"/>.",
      "IsUsedInCollections": true,
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "Offer",
            "SummaryComment": "The offer type of the Azure Virtual Machines Marketplace image.",
            "RemarksComment": "For example, UbuntuServer or WindowsServer.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required",
            "HideSetter": true
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Publisher",
            "SummaryComment": "The publisher of the Azure Virtual Machines Marketplace image.",
            "RemarksComment": "For example, Canonical or MicrosoftWindowsServer.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required",
            "HideSetter": true
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Sku",
            "SummaryComment": "The SKU of the Azure Virtual Machines Marketplace image.",
            "RemarksComment": "For example, 14.04.0-LTS or 2012-R2-Datacenter.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required",
            "HideSetter": true
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Version",
            "SummaryComment": "The version of the Azure Virtual Machines Marketplace image.",
            "RemarksComment": "If this property is not specified, it defaults to 'latest', which is the latest version of the image.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Optional",
            "HideSetter": true
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "JobConstraints",
      "ProtocolName": "Models.JobConstraints",
      "Comment": "Specifies the execution constraints for a job.",
      "Properties": [
        {
          "Key": {
            "Type": "TimeSpan?",
            "Name": "MaxWallClockTime",
            "SummaryComment": "The maximum elapsed time that the job may run, measured from the time the job is created.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Optional"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "int?",
            "Name": "MaxTaskRetryCount",
            "SummaryComment": "The maximum number of times each task may be retried.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Optional"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "JobExecutionInformation",
      "ProtocolName": "Models.JobExecutionInformation",
      "Comment": "Information about the execution of an Azure Batch job.",
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "DateTime",
            "Name": "StartTime",
            "SummaryComment": "The creation time of the job.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "EndTime",
            "SummaryComment": "The completion time of this job.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "PoolId",
            "SummaryComment": "The pool Id of this job.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "JobSchedulingError",
            "Name": "SchedulingError",
            "SummaryComment": "The error encountered by the Batch service in scheduling the job.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "TerminateReason",
            "SummaryComment": "The reason for job moving to completed state.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "JobManagerTask",
      "ProtocolName": "Models.JobManagerTask",
      "Comment": "Represents an Azure Batch JobManager task. ",
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "Id",
            "SummaryComment": "The id of the task.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "CommandLine",
            "SummaryComment": "The command line of the task.",
            "RemarksComment": "The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux.",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "DisplayName",
            "SummaryComment": "The display name of the JobManager task.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "IList<EnvironmentSetting>",
            "Name": "EnvironmentSettings",
            "SummaryComment": "A set of environment settings for the JobManager task.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "IList<Models.EnvironmentSetting>",
            "Name": "EnvironmentSettings"
          }
        },
        {
          "Key": {
            "Type": "bool?",
            "Name": "KillJobOnCompletion",
            "SummaryComment": "A value that indicates whether to terminate all tasks in the job and complete the job when the job manager task completes.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "IList<ResourceFile>",
            "Name": "ResourceFiles",
            "SummaryComment": "A list of files that the Batch service will download to the compute node before running the command line.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "IList<Models.ResourceFile>",
            "Name": "ResourceFiles"
          }
        },
        {
          "Key": {
            "Type": "bool?",
            "Name": "RunElevated",
            "SummaryComment": "Whether to run the task in elevated mode.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "bool?",
            "Name": "RunExclusive",
            "SummaryComment": "whether the Job Manager task requires exclusive use of the compute node where it runs.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "TaskConstraints",
            "Name": "Constraints",
            "SummaryComment": "The execution constraints for this JobManager task.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "IList<ApplicationPackageReference>",
            "Name": "ApplicationPackageReferences",
            "SummaryComment": "A list of application packages that the Batch service will deploy to the compute node before running the command line.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "IList<Models.ApplicationPackageReference>",
            "Name": "ApplicationPackageReferences",
          },
        },
      ]
    },
    {
      "Name": "JobPreparationAndReleaseTaskExecutionInformation",
      "ProtocolName": "Models.JobPreparationAndReleaseTaskExecutionInformation",
      "Comment": "The status of the Job Preparation task and Job Release task on a compute node.",
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "ComputeNodeId",
            "SummaryComment": "The id of the compute node.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "string",
            "Name": "NodeId"
          }
        },
        {
          "Key": {
            "Type": "string",
            "Name": "ComputeNodeUrl",
            "SummaryComment": "The URL of the compute node.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "string",
            "Name": "NodeUrl"
          }
        },
        {
          "Key": {
            "Type": "JobPreparationTaskExecutionInformation",
            "Name": "JobPreparationTaskExecutionInformation",
            "SummaryComment": "Details of the <see cref=\"CloudJob.JobPreparationTask\">Job Preparation task</see> on this compute node.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.JobPreparationTaskExecutionInformation",
            "Name": "JobPreparationTaskExecutionInfo"
          }
        },
        {
          "Key": {
            "Type": "JobReleaseTaskExecutionInformation",
            "Name": "JobReleaseTaskExecutionInformation",
            "SummaryComment": "Details of the <see cref=\"CloudJob.JobReleaseTask\">Job Release task</see> on this compute node.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.JobReleaseTaskExecutionInformation",
            "Name": "JobReleaseTaskExecutionInfo"
          }
        },
        {
          "Key": {
            "Type": "string",
            "Name": "PoolId",
            "SummaryComment": "The id of the pool containing the compute node.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "JobPreparationTask",
      "ProtocolName": "Models.JobPreparationTask",
      "Comment": "A Job Preparation task to run before any tasks of the job on any given compute node.",
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "Id",
            "SummaryComment": "The id of the task.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "CommandLine",
            "SummaryComment": "The command line of the task.",
            "RemarksComment": "The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux.",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "IList<ResourceFile>",
            "Name": "ResourceFiles",
            "SummaryComment": "A list of files that the Batch service will download to the compute node before running the command line.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "IList<Models.ResourceFile>",
            "Name": "ResourceFiles"
          }
        },
        {
          "Key": {
            "Type": "IList<EnvironmentSetting>",
            "Name": "EnvironmentSettings",
            "SummaryComment": "The collection of EnvironmentSetting instances.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "IList<Models.EnvironmentSetting>",
            "Name": "EnvironmentSettings"
          }
        },
        {
          "Key": {
            "Type": "bool?",
            "Name": "RunElevated",
            "SummaryComment": "Whether to run the task in elevated mode.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "TaskConstraints",
            "Name": "Constraints",
            "SummaryComment": "The execution constraints provided by the user for this Job Preparation task.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "bool?",
            "Name": "WaitForSuccess",
            "SummaryComment": "Whether the Batch service should wait for the successful completion of the Job Preparation task before scheduling any tasks on the compute node.",
            "RemarksComment": "A Job Preparation task execution is considered successful if its ExitCode is 0. If this property is not specified, a default value of true is assigned by the Batch service.",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "bool?",
            "Name": "RerunOnComputeNodeRebootAfterSuccess",
            "SummaryComment": "Whether the Batch service should rerun the Job Preparation task after a compute node reboots.",
            "RemarksComment": "The Job Preparation task is always rerun if a compute node is reimaged, or if the Job Preparation task did not complete (e.g. because the reboot occurred while the task was running). Therefore, you should always write a Job Preparation task to be idempotent and to behave correctly if run multiple times. If this property is not specified, a default value of true is assigned by the Batch service.",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "bool?",
            "Name": "RerunOnNodeRebootAfterSuccess"
          }
        }
      ]
    },
    {
      "Name": "JobPreparationTaskExecutionInformation",
      "ProtocolName": "Models.JobPreparationTaskExecutionInformation",
      "Comment": "Details about the execution of a <see cref=\"CloudJob.JobPreparationTask\">Job Preparation task</see> on a compute node.",
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "EndTime",
            "SummaryComment": "The time at which the task completed.",
            "RemarksComment": "This property is only returned if the task is in the <see cref=\"Common.JobPreparationTaskState.Completed\"/> state.",
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "int?",
            "Name": "ExitCode",
            "SummaryComment": "The exit code of the task.",
            "RemarksComment": "This property is only returned if the task is in the <see cref=\"Common.JobPreparationTaskState.Completed\"/> state.",
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "LastRetryTime",
            "SummaryComment": "The most recent time at which this task's execution was retried by the Batch service.",
            "RemarksComment": "This is only returned if the <see cref=\"RetryCount\"/> is not 0.",
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "int",
            "Name": "RetryCount",
            "SummaryComment": "The number of times the task has been retried by the Batch service. Every time the task exits with a non-zero exit code, it is deemed a task failure. The Batch service will retry the task up to the limit specified by the <see cref=\"JobPreparationTask.Constraints\"/>.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "TaskSchedulingError",
            "Name": "SchedulingError",
            "SummaryComment": "The TaskSchedulingError encountered by the service when starting the task.",
            "RemarksComment": "This property is only returned if there was an error when scheduling the task, and it is now in the <see cref=\"Common.JobPreparationTaskState.Completed\"/> state.",
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime",
            "Name": "StartTime",
            "SummaryComment": "The time at which the task started running. Note that every time the task is restarted, this value is updated.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "Common.JobPreparationTaskState",
            "Name": "State",
            "SummaryComment": "The current state of the task.",
            "RemarksComment": "Running means the task is currently running. Completed means the task has completed. The Completed state includes the case where the task exits successfully with exit code 0 and the cases where the system fails to start the task process due to scheduling errors or the retry limit has reached after numerous task failures.",
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.JobPreparationTaskState",
            "Name": "State"
          }
        },
        {
          "Key": {
            "Type": "string",
            "Name": "TaskRootDirectory",
            "SummaryComment": "The root directory of the Job Preparation task on the compute node. You can use this path to retrieve files created by the task, such as log files.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "TaskRootDirectoryUrl",
            "SummaryComment": "The URL to the root directory of the Job Preparation task on the compute node.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "JobReleaseTask",
      "ProtocolName": "Models.JobReleaseTask",
      "Comment": "A Job Release task to run on job completion on any compute node where the job has run.",
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "Id",
            "SummaryComment": "The id of the task.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "CommandLine",
            "SummaryComment": "The command line of the task.",
            "RemarksComment": "The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux.",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "IList<ResourceFile>",
            "Name": "ResourceFiles",
            "SummaryComment": "A list of files that the Batch service will download to the compute node before running the command line.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "IList<Models.ResourceFile>",
            "Name": "ResourceFiles"
          }
        },
        {
          "Key": {
            "Type": "IList<EnvironmentSetting>",
            "Name": "EnvironmentSettings",
            "SummaryComment": "The collection of EnvironmentSetting instances.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "IList<Models.EnvironmentSetting>",
            "Name": "EnvironmentSettings"
          }
        },
        {
          "Key": {
            "Type": "bool?",
            "Name": "RunElevated",
            "SummaryComment": "Whether to run the task in elevated mode.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "TimeSpan?",
            "Name": "MaxWallClockTime",
            "SummaryComment": "The maximum duration of time for which a task is allowed to run from the time it is created.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "TimeSpan?",
            "Name": "RetentionTime",
            "SummaryComment": "The duration of time for which files in the task's working directory are retained, from the time it completes execution. After this duration, the task's working directory is reclaimed.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "JobReleaseTaskExecutionInformation",
      "ProtocolName": "Models.JobReleaseTaskExecutionInformation",
      "Comment": "Details about the execution of a <see cref=\"CloudJob.JobReleaseTask\">Job Release task</see> on a compute node.",
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "EndTime",
            "SummaryComment": "The time at which the task completed.",
            "RemarksComment": "This property is only returned if the task is in the <see cref=\"Common.JobReleaseTaskState.Completed\"/> state.",
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "int?",
            "Name": "ExitCode",
            "SummaryComment": "The exit code of the task.",
            "RemarksComment": "This property is only returned if the task is in the <see cref=\"Common.JobReleaseTaskState.Completed\"/> state.",
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "TaskSchedulingError",
            "Name": "SchedulingError",
            "SummaryComment": "The scheduling error encountered by the service when starting the task.",
            "RemarksComment": "This property is only returned if there was an error when scheduling the task and it is now in the <see cref=\"Common.JobReleaseTaskState.Completed\"/> state.",
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime",
            "Name": "StartTime",
            "SummaryComment": "The time at which the task started running. Note that every time the task is restarted, this value is updated.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "Common.JobReleaseTaskState",
            "Name": "State",
            "SummaryComment": "The current state of the task.",
            "RemarksComment": "Running means the task is currently running. Completed means the task has completed. The Completed state includes the case where the task exits successfully with exit code 0 and the cases where the system fails to start the task process due to scheduling errors or the retry limit has reached after numerous task failures. ",
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.JobReleaseTaskState",
            "Name": "State"
          }
        },
        {
          "Key": {
            "Type": "string",
            "Name": "TaskRootDirectory",
            "SummaryComment": "The root directory of the Job Release task on the compute node. You can use this path to retrieve files created by the task, such as log files.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "TaskRootDirectoryUrl",
            "SummaryComment": "The URL to the root directory of the Job Release task on the compute node.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "JobScheduleExecutionInformation",
      "ProtocolName": "Models.JobScheduleExecutionInformation",
      "Comment": "The execution information for a job schedule.",
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "NextRunTime",
            "SummaryComment": "The time at which the next job will be scheduled under this job schedule. This property is only returned for active job schedules.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "EndTime",
            "SummaryComment": "The completion time of the job schedule. This property is only returned for completed job schedules.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "RecentJob",
            "Name": "RecentJob",
            "SummaryComment": "The information about the most recent job under the job schedule. Note that this element is only returned if the job schedule contains at least one job under it.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "JobSchedulingError",
      "ProtocolName": "Models.JobSchedulingError",
      "Comment": "An error encountered by the Batch service when scheduling a job.",
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "Common.SchedulingErrorCategory",
            "Name": "Category",
            "SummaryComment": "The category of the job scheduling error.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.SchedulingErrorCategory",
            "Name": "Category"
          }
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Code",
            "SummaryComment": "A code for the job scheduling error. See <see cref=\"Common.JobSchedulingErrorCodes\"/> for possible values.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Message",
            "SummaryComment": "A message describing the job scheduling error, intended to be suitable for display in a user interface.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "IReadOnlyList<NameValuePair>",
            "Name": "Details",
            "SummaryComment": "A list of additional error details related to the scheduling error.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "JobSpecification",
      "ProtocolName": "Models.JobSpecification",
      "Comment": "The <see cref=\"CloudJobSchedule.JobSpecification\"/> of a <see cref=\"CloudJobSchedule\"/>.",
      "Properties": [
        {
          "Key": {
            "Type": "IList<EnvironmentSetting>",
            "Name": "CommonEnvironmentSettings",
            "SummaryComment": "A list of common environment variable settings.",
            "RemarksComment": "These environment variables are set for all tasks in jobs created under this <see cref=\"CloudJobSchedule\"/> (including the Job Manager, Job Preparation and Job Release tasks).",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "IList<Models.EnvironmentSetting>",
            "Name": "CommonEnvironmentSettings"
          }
        },
        {
          "Key": {
            "Type": "JobConstraints",
            "Name": "Constraints",
            "SummaryComment": "The execution constraints for jobs created via this <see cref=\"JobSpecification\"/>.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "DisplayName",
            "SummaryComment": "A display name for all jobs created via this <see cref=\"JobSpecification\"/>.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "JobManagerTask",
            "Name": "JobManagerTask",
            "SummaryComment": "Details of a Job Manager task to be launched when a job is created via this <see cref=\"JobSpecification\"/>.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "JobPreparationTask",
            "Name": "JobPreparationTask",
            "SummaryComment": "The Job Preparation task for jobs created via this <see cref=\"JobSpecification\"/>.",
            "RemarksComment": "The Batch service will run the Job Preparation task on a compute node before starting any tasks of that job on that compute node.",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "JobReleaseTask",
            "Name": "JobReleaseTask",
            "SummaryComment": "The Job Release task for jobs created via this <see cref=\"JobSpecification\"/>. ",
            "RemarksComment": "The Batch service runs the Job Release task when the job ends, on each compute node where any task of the job has run.",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "PoolInformation",
            "Name": "PoolInformation",
            "SummaryComment": "The pool on which the Batch service runs the tasks of jobs created via this <see cref=\"JobSpecification\"/>.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required"
          },
          "Value": {
            "Type": "Models.PoolInformation",
            "Name": "PoolInfo"
          }
        },
        {
          "Key": {
            "Type": "IList<MetadataItem>",
            "Name": "Metadata",
            "SummaryComment": "A list of name-value pairs associated with jobs created via this <see cref=\"JobSpecification\"/> as metadata.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "IList<Models.MetadataItem>",
            "Name": "Metadata"
          }
        },
        {
          "Key": {
            "Type": "int?",
            "Name": "Priority",
            "SummaryComment": "The priority of jobs created via this <see cref=\"JobSpecification\"/>.",
            "RemarksComment": " Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority.",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "bool?",
            "Name": "UsesTaskDependencies",
            "SummaryComment": "Whether tasks in jobs created under this <see cref=\"CloudJobSchedule\"/> can define dependencies on each other.",
            "RemarksComment": "The default value is false.",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "JobScheduleStatistics",
      "ProtocolName": "Models.JobScheduleStatistics",
      "Comment": "Resource usage statistics for a <see cref=\"CloudJobSchedule\"/>.",
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "Url",
            "SummaryComment": "The URL of the statistics.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime",
            "Name": "StartTime",
            "SummaryComment": "The start time of the time range covered by the statistics.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime",
            "Name": "LastUpdateTime",
            "SummaryComment": "The time at which the statistics were last updated. All statistics are limited to the range between <see cref=\"StartTime\"/> and this value.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "TimeSpan",
            "Name": "UserCpuTime",
            "SummaryComment": "The total user mode CPU time (per core) consumed by all tasks in the job schedule.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "TimeSpan",
            "Name": "UserCPUTime"
          }
        },
        {
          "Key": {
            "Type": "TimeSpan",
            "Name": "KernelCpuTime",
            "SummaryComment": "The total kernel mode CPU time (per core) consumed by all tasks in the job schedule.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "TimeSpan",
            "Name": "KernelCPUTime"
          }
        },
        {
          "Key": {
            "Type": "TimeSpan",
            "Name": "WallClockTime",
            "SummaryComment": "The total wall clock time of all tasks in the job schedule. Note that if any task was retried multiple times, this includes the wall clock time of all the task retries.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "long",
            "Name": "ReadIOps",
            "SummaryComment": "The total number of disk read operations made by all tasks in the job schedule.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "long",
            "Name": "WriteIOps",
            "SummaryComment": "The total number of disk write operations made by all tasks in the job schedule.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "double",
            "Name": "ReadIOGiB",
            "SummaryComment": "The total gibibytes of I/O read from disk by all tasks in the job schedule.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "double",
            "Name": "WriteIOGiB",
            "SummaryComment": "The total gibibytes of I/O written to disk by all tasks in the job schedule.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "long",
            "Name": "SucceededTaskCount",
            "SummaryComment": "The total number of tasks successfully completed in the job schedule.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "long",
            "Name": "NumSucceededTasks"
          }
        },
        {
          "Key": {
            "Type": "long",
            "Name": "FailedTaskCount",
            "SummaryComment": "The total number of tasks in the job that failed during the given time range.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "long",
            "Name": "NumFailedTasks"
          }
        },
        {
          "Key": {
            "Type": "long",
            "Name": "TaskRetryCount",
            "SummaryComment": "The total number of retries that occurred on all tasks in the job schedule.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "long",
            "Name": "NumTaskRetries"
          }
        },
        {
          "Key": {
            "Type": "TimeSpan",
            "Name": "WaitTime",
            "SummaryComment": "The total wait time of all tasks in jobs created under the schedule. The wait time for a task is defined as the elapsed time between the creation of the task and the start of task execution. (If the task is retried due to failures, the wait time is the time to the most recent task execution.)",
            "RemarksComment": "This value is only reported in the account lifetime statistics.",
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "JobStatistics",
      "ProtocolName": "Models.JobStatistics",
      "Comment": "Resource usage statistics for the job.",
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "Url",
            "SummaryComment": "The URL of the job statistics.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime",
            "Name": "StartTime",
            "SummaryComment": "The start time of the time range covered by the statistics.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime",
            "Name": "LastUpdateTime",
            "SummaryComment": "The time at which the statistics were last updated. All statistics are limited to the range between <see cref=\"StartTime\"/> and this value.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "TimeSpan",
            "Name": "UserCpuTime",
            "SummaryComment": "The total user mode CPU time (per core) consumed by all tasks in the job.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "TimeSpan",
            "Name": "UserCPUTime"
          }
        },
        {
          "Key": {
            "Type": "TimeSpan",
            "Name": "KernelCpuTime",
            "SummaryComment": "The total kernel mode CPU time (per core) consumed by all tasks in the job.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "TimeSpan",
            "Name": "KernelCPUTime"
          }
        },
        {
          "Key": {
            "Type": "TimeSpan",
            "Name": "WallClockTime",
            "SummaryComment": "The total elapsed time.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "long",
            "Name": "ReadIOps",
            "SummaryComment": "The total number of disk read operations made by all tasks in the job.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "long",
            "Name": "WriteIOps",
            "SummaryComment": "The total number of disk write operations made by all tasks in the job.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "double",
            "Name": "ReadIOGiB",
            "SummaryComment": "The total gibibytes of I/O read from disk by all tasks in the job.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "double",
            "Name": "WriteIOGiB",
            "SummaryComment": "The total gibibytes of I/O written to disk by all tasks in the job.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "long",
            "Name": "SucceededTaskCount",
            "SummaryComment": "The total number of tasks successfully completed in the job during the given time range.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "long",
            "Name": "NumSucceededTasks"
          }
        },
        {
          "Key": {
            "Type": "long",
            "Name": "FailedTaskCount",
            "SummaryComment": "The total number of task failures in the job.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "long",
            "Name": "NumFailedTasks"
          }
        },
        {
          "Key": {
            "Type": "long",
            "Name": "TaskRetryCount",
            "SummaryComment": "The total number of task retries in the job.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "long",
            "Name": "NumTaskRetries"
          }
        },
        {
          "Key": {
            "Type": "TimeSpan",
            "Name": "WaitTime",
            "SummaryComment": "The total wait time of all tasks in the job. The wait time for a task is defined as the elapsed time between the creation of the task and the start of task execution. (If the task is retried due to failures, the wait time is the time to the most recent task execution.)",
            "RemarksComment": "This value is only reported in the account lifetime statistics.",
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "MetadataItem",
      "ProtocolName": "Models.MetadataItem",
      "Comment": "A name-value pair associated with a Batch service resource. The Batch service does not assign any meaning to this metadata; it is solely for the use of user code.",
      "IsUsedInCollections": true,
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "Name",
            "SummaryComment": "The name of the <see cref=\"MetadataItem\"/>.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required",
            "HideSetter": true
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Value",
            "SummaryComment": "The value of the <see cref=\"MetadataItem\"/>.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required",
            "HideSetter": true
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "MultiInstanceSettings",
      "ProtocolName": "Models.MultiInstanceSettings",
      "Comment": "Settings which specify how to run a multi-instance task. Multi-instance tasks are commonly used to support MPI tasks. For more information see https://azure.microsoft.com/documentation/articles/batch-mpi/.",
      "Properties": [
        {
          "Key": {
            "Type": "IList<ResourceFile>",
            "Name": "CommonResourceFiles",
            "SummaryComment": "A list of files that the Batch service will download before running the coordination command line.",
            "RemarksComment": "The difference between common resource files and task resource files is that common resource files are downloaded for all subtasks including the primary, whereas task resource files are downloaded only for the primary.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "IList<Models.ResourceFile>",
            "Name": "CommonResourceFiles"
          }
        },
        {
          "Key": {
            "Type": "string",
            "Name": "CoordinationCommandLine",
            "SummaryComment": "The command to run on the compute node instances for coordinating among the subtasks.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "int",
            "Name": "NumberOfInstances",
            "SummaryComment": "The number of compute nodes required by the multi-instance task.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "NameValuePair",
      "ProtocolName": "Models.NameValuePair",
      "Comment": "Represents a name-value pair.",
      "IsUsedInCollections": true,
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "Name",
            "SummaryComment": "The name in the name-value pair.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Value",
            "SummaryComment": "The value in the name-value pair.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "NetworkConfiguration",
      "ProtocolName": "Models.NetworkConfiguration",
      "Comment": "The network configuration for a pool.",
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "SubnetId",
            "SummaryComment": "The ARM resource identifier of the virtual network subnet which the compute nodes of the pool will join.",
            "RemarksComment": "The virtual network must be in the same region and subscription as the Azure Batch account, and the specified subnet should have enough spare IP addresses to accommodate the number of nodes in the pool. This property can only be specified for pools created with a <see cref=\"CloudPool.CloudServiceConfiguration\"/>.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "NodeAgentSku",
      "ProtocolName": "Models.NodeAgentSku",
      "Comment": "A node agent SKU supported by the Batch service. The Batch node agent is a program that runs on each node in the pool, and provides the command-and-control interface between the node and the Batch service. There are different implementations of the node agent, known as SKUs, for different operating systems.",
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "Id",
            "SummaryComment": "The id of the node agent SKU.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "IReadOnlyList<ImageReference>",
            "Name": "VerifiedImageReferences",
            "SummaryComment": "The list of images verified to be compatible with this node agent SKU. This collection is not exhaustive (the node agent may be compatible with other images).",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "Common.OSType?",
            "Name": "OSType",
            "SummaryComment": "The type of operating system compatible with the node agent SKU.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.OSType?",
            "Name": "OsType"
          }
        }
      ]
    },
    {
      "Name": "PoolInformation",
      "ProtocolName": "Models.PoolInformation",
      "Comment": "Specifies how a job should be assigned to a pool.",
      "Properties": [
        {
          "Key": {
            "Type": "AutoPoolSpecification",
            "Name": "AutoPoolSpecification",
            "SummaryComment": "The properties for the auto pool that will be created.",
            "RemarksComment": "If this property is set, then <see cref=\"PoolId\"/> must be left unset.",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "PoolId",
            "SummaryComment": "The name of an existing pool that can be used for running tasks.",
            "RemarksComment": "If this property is set, then <see cref=\"AutoPoolSpecification\"/> must be left unset.",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "PoolSpecification",
      "ProtocolName": "Models.PoolSpecification",
      "Comment": "The specification for a pool.",
      "Properties": [
        {
          "Key": {
            "Type": "bool?",
            "Name": "AutoScaleEnabled",
            "SummaryComment": "Whether the pool size should automatically adjust over time.",
            "RemarksComment": "<para>If false, the <see cref=\"TargetDedicated\"/> property is required.</para> <para>If true, the <see cref=\"AutoScaleFormula\"/> property is required. The pool automatically resizes according to the formula.</para> <para>The default value is false.</para>",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "bool?",
            "Name": "EnableAutoScale"
          }
        },
        {
          "Key": {
            "Type": "IList<ApplicationPackageReference>",
            "Name": "ApplicationPackageReferences",
            "SummaryComment": "A list of application package references to be installed on each compute node in the pool.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "IList<Models.ApplicationPackageReference>",
            "Name": "ApplicationPackageReferences"
          }
        },
        {
          "Key": {
            "Type": "TimeSpan?",
            "Name": "AutoScaleEvaluationInterval",
            "SummaryComment": "A time interval at which to automatically adjust the pool size according to the <see cref=\"AutoScaleFormula\"/>.",
            "RemarksComment": "The default value is 15 minutes. The minimum allowed value is 5 minutes.",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "AutoScaleFormula",
            "SummaryComment": "A formula for the desired number of compute nodes in the pool.",
            "RemarksComment": "<para>For how to write autoscale formulas, see https://azure.microsoft.com/documentation/articles/batch-automatic-scaling/. This property is required if <see cref=\"AutoScaleEnabled\"/> is set to true. It must be null if AutoScaleEnabled is false.</para><para>The formula is checked for validity before the pool is created. If the formula is not valid, an exception is thrown when you try to commit the <see cref=\"PoolSpecification\"/>.</para>",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "CloudServiceConfiguration",
            "Name": "CloudServiceConfiguration",
            "SummaryComment": "The <see cref=\"CloudServiceConfiguration\"/> for the pool.",
            "RemarksComment": "This property is mutually exclusive with <see cref=\"VirtualMachineConfiguration\"/>.",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "IList<CertificateReference>",
            "Name": "CertificateReferences",
            "SummaryComment": "A list of certificates to be installed on each compute node in the pool.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "IList<Models.CertificateReference>",
            "Name": "CertificateReferences"
          }
        },
        {
          "Key": {
            "Type": "string",
            "Name": "DisplayName",
            "SummaryComment": "The display name for the pool.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "bool?",
            "Name": "InterComputeNodeCommunicationEnabled",
            "SummaryComment": "Whether the pool permits direct communication between its compute nodes.",
            "RemarksComment": "Enabling inter-node communication limits the maximum size of the pool due to deployment restrictions on the nodes of the pool. This may result in the pool not reaching its desired size.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "bool?",
            "Name": "EnableInterNodeCommunication"
          }
        },
        {
          "Key": {
            "Type": "NetworkConfiguration",
            "Name": "NetworkConfiguration",
            "SummaryComment": "The network configuration of the pool.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "int?",
            "Name": "MaxTasksPerComputeNode",
            "SummaryComment": "The maximum number of tasks that can run concurrently on a single compute node in the pool.",
            "RemarksComment": "The default value is 1. The maximum value of this setting depends on the size of the compute nodes in the pool (the <see cref=\"VirtualMachineSize\"/> property).",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "int?",
            "Name": "MaxTasksPerNode"
          }
        },
        {
          "Key": {
            "Type": "IList<MetadataItem>",
            "Name": "Metadata",
            "SummaryComment": "A list of name-value pairs associated with the pool as metadata.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "IList<Models.MetadataItem>",
            "Name": "Metadata"
          }
        },
        {
          "Key": {
            "Type": "TimeSpan?",
            "Name": "ResizeTimeout",
            "SummaryComment": "The timeout for allocation of compute nodes to the pool.",
            "RemarksComment": "<para>This timeout applies only to manual scaling; it has no effect when <see cref=\"AutoScaleEnabled\"/> is set to true.</para><para>The default value is 15 minutes. The minimum value is 5 minutes.</para>",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "TaskSchedulingPolicy",
            "Name": "TaskSchedulingPolicy",
            "SummaryComment": "How tasks are distributed among compute nodes in the pool.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "StartTask",
            "Name": "StartTask",
            "SummaryComment": "A task to run on each compute node as it joins the pool. The task runs when the node is added to the pool or when the node is restarted.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "int?",
            "Name": "TargetDedicated",
            "SummaryComment": "The desired number of compute nodes in the pool.",
            "RemarksComment": "This setting cannot be specified if <see cref=\"AutoScaleEnabled\"/> is set to true. It is required if AutoScaleEnabled is set to false.",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "VirtualMachineConfiguration",
            "Name": "VirtualMachineConfiguration",
            "SummaryComment": "The <see cref=\"VirtualMachineConfiguration\"/> of the pool.",
            "RemarksComment": "This property is mutually exclusive with <see cref=\"CloudServiceConfiguration\"/>.",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "VirtualMachineSize",
            "SummaryComment": "The size of the virtual machines in the pool.  All virtual machines in a pool are the same size.",
            "RemarksComment": "<para>For information about available sizes of virtual machines for Cloud Services pools (pools created with a <see cref=\"CloudServiceConfiguration\"/>), see https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/. Batch supports all Cloud Services VM sizes except ExtraSmall.</para><para>For information about available VM sizes for pools using images from the Virtual Machines Marketplace (pools created with a <see cref=\"VirtualMachineConfiguration\"/>) see https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/ or https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/. Batch supports all Azure VM sizes except STANDARD_A0 and those with premium storage (for example STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).</para>",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "string",
            "Name": "VmSize"
          }
        }
      ]
    },
    {
      "Name": "PoolStatistics",
      "ProtocolName": "Models.PoolStatistics",
      "Comment": "Contains utilization and resource usage statistics for the lifetime of a pool.",
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "Url",
            "SummaryComment": "The URL for the statistics.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime",
            "Name": "StartTime",
            "SummaryComment": "The start time of the time range covered by the statistics.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime",
            "Name": "LastUpdateTime",
            "SummaryComment": "The time at which the statistics were last updated. All statistics are limited to the range between <see cref=\"StartTime\"/> and this value.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "UsageStatistics",
            "Name": "UsageStatistics",
            "SummaryComment": "Statistics related to pool usage, such as the amount of core-time used.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.UsageStatistics",
            "Name": "UsageStats"
          }
        },
        {
          "Key": {
            "Type": "ResourceStatistics",
            "Name": "ResourceStatistics",
            "SummaryComment": "Statistics related to resource consumption by compute nodes in the pool, such as average CPU utilization.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.ResourceStatistics",
            "Name": "ResourceStats"
          }
        }
      ]
    },
    {
      "Name": "PoolUsageMetrics",
      "ProtocolName": "Models.PoolUsageMetrics",
      "Comment": "The usage metrics for a single pool in a certain time range.",
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "double",
            "Name": "DataEgressGiB",
            "SummaryComment": "The cross data center network egress from the pool during this interval, in gibibytes.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "double",
            "Name": "DataEgressGiB"
          }
        },
        {
          "Key": {
            "Type": "double",
            "Name": "DataIngressGiB",
            "SummaryComment": "The cross data center network ingress to the pool during this interval, in gibibytes.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "double",
            "Name": "DataIngressGiB"
          }
        },
        {
          "Key": {
            "Type": "DateTime",
            "Name": "EndTime",
            "SummaryComment": "The end time of the aggregation interval for this entry.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "DateTime",
            "Name": "EndTime"
          }
        },
        {
          "Key": {
            "Type": "string",
            "Name": "PoolId",
            "SummaryComment": "The id of the pool whose metrics are aggregated in this entry.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime",
            "Name": "StartTime",
            "SummaryComment": "The start time of the aggregation interval covered by this entry.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "DateTime",
            "Name": "StartTime"
          }
        },
        {
          "Key": {
            "Type": "double",
            "Name": "TotalCoreHours",
            "SummaryComment": "The total core hours used in the pool during this aggregation interval.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "double",
            "Name": "TotalCoreHours"
          }
        },
        {
          "Key": {
            "Type": "string",
            "Name": "VirtualMachineSize",
            "SummaryComment": "The size of virtual machine in the pool. All virtual machines in a pool are the same size. Azure Batch supports all Azure virtual machine sizes except ExtraSmall.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "string",
            "Name": "VmSize"
          }
        }
      ]
    },
    {
      "Name": "RecentJob",
      "ProtocolName": "Models.RecentJob",
      "Comment": "Information about the most recent job under a job schedule.",
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "Url",
            "SummaryComment": "The URL of the job.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Id",
            "SummaryComment": "The id of the job.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "RemoteLoginSettings",
      "ProtocolName": "Models.ComputeNodeGetRemoteLoginSettingsResult",
      "Comment": "Gets the settings required for remote login to a compute node.",
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "IPAddress",
            "SummaryComment": "The IP address used for remote login to the compute node.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "string",
            "Name": "RemoteLoginIPAddress"
          }
        },
        {
          "Key": {
            "Type": "int",
            "Name": "Port",
            "SummaryComment": "The port used for remote login to the compute node.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "int",
            "Name": "RemoteLoginPort"
          }
        }
      ]
    },
    {
      "Name": "ResizeError",
      "ProtocolName": "Models.ResizeError",
      "Comment": "An error that occurred when resizing a pool.",
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "Code",
            "SummaryComment": "A code for the pool resize error. See <see cref=\"Common.PoolResizeErrorCodes\"/> for possible values.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Message",
            "SummaryComment": "A message describing the pool resize error, intended to be suitable for display in a user interface.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "IReadOnlyList<NameValuePair>",
            "Name": "Values",
            "SummaryComment": "A list of additional error details related to the pool resize error.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "ResourceFile",
      "ProtocolName": "Models.ResourceFile",
      "Comment": "A file to be downloaded to a compute node from Azure Blob Storage, such as task executables and task input data files.",
      "IsUsedInCollections": true,
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "BlobSource",
            "SummaryComment": "The URL of the file within Azure Blob Storage.",
            "RemarksComment": "This URL should include a shared access signature if the blob is not publicly readable.",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required",
            "HideSetter": true
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "FileMode",
            "SummaryComment": "The file permission mode attribute in octal format.",
            "RemarksComment": "<para>This property is applicable only if the resource file is downloaded to a Linux node. This property will be ignored if it is specified for a <see cref=\"ResourceFile\"/> which will be downloaded to a Windows node. If this property is not specified for a Linux node, then the default value is 0770.</para>",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Optional",
            "HideSetter": true
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "FilePath",
            "SummaryComment": "The location to which to download the file, relative to the task's working directory.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required",
            "HideSetter": true
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "ResourceStatistics",
      "ProtocolName": "Models.ResourceStatistics",
      "Comment": "The resource statistics data for the pool.",
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "DateTime",
            "Name": "StartTime",
            "SummaryComment": "The start time of the time range covered by the statistics.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime",
            "Name": "LastUpdateTime",
            "SummaryComment": "The time at which the statistics were last updated. All statistics are limited to the range between <see cref=\"StartTime\"/> and this value.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "double",
            "Name": "AverageCpuPercentage",
            "SummaryComment": "The average CPU usage across all compute nodes in the pool (percentage per compute node).",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "double",
            "Name": "AvgCPUPercentage"
          }
        },
        {
          "Key": {
            "Type": "double",
            "Name": "AverageMemoryGiB",
            "SummaryComment": "The average memory usage in gibibytes across all compute nodes in the pool.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "double",
            "Name": "AvgMemoryGiB"
          }
        },
        {
          "Key": {
            "Type": "double",
            "Name": "PeakMemoryGiB",
            "SummaryComment": "The peak memory usage in gibibytes across all compute nodes in the pool.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "double",
            "Name": "AverageDiskGiB",
            "SummaryComment": "The average used disk space in gibibytes across all compute nodes in the pool.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "double",
            "Name": "AvgDiskGiB"
          }
        },
        {
          "Key": {
            "Type": "double",
            "Name": "PeakDiskGiB",
            "SummaryComment": "The peak used disk space in gibibytes across all compute nodes in the pool.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "long",
            "Name": "DiskReadIOps",
            "SummaryComment": "The total number of disk read operations across all compute nodes in the pool.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "long",
            "Name": "DiskWriteIOps",
            "SummaryComment": "The total number of disk write operations across all compute nodes in the pool.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "double",
            "Name": "DiskReadGiB",
            "SummaryComment": "The total amount of data in gibibytes of disk reads across all compute nodes in the pool.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "double",
            "Name": "DiskWriteGiB",
            "SummaryComment": "The total amount of data in gibibytes of disk writes across all compute nodes in the pool.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "double",
            "Name": "NetworkReadGiB",
            "SummaryComment": "The total amount of data in gibibytes of network reads across all compute nodes in the pool.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "double",
            "Name": "NetworkWriteGiB",
            "SummaryComment": "The total amount of data in gibibytes of network writes across all compute nodes in the pool.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "Schedule",
      "ProtocolName": "Models.Schedule",
      "Comment": "A schedule.",
      "Properties": [
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "DoNotRunAfter",
            "SummaryComment": "The wall clock time after which no job will be scheduled under this job schedule.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "DoNotRunUntil",
            "SummaryComment": "The earliest wall clock time at which to schedule the first job under this job schedule",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "TimeSpan?",
            "Name": "RecurrenceInterval",
            "SummaryComment": "The time interval between the start times of two successive jobs under the job schedule.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "TimeSpan?",
            "Name": "StartWindow",
            "SummaryComment": "The window of time within which a job must be started from the time the job schedule is ready to be scheduled.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "StartTask",
      "ProtocolName": "Models.StartTask",
      "Comment": "A task which is run when a compute node joins a pool in the Azure Batch service, or when the compute node is rebooted or reimaged.",
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "CommandLine",
            "SummaryComment": "The command line of the task.",
            "RemarksComment": "The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux.",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "IList<EnvironmentSetting>",
            "Name": "EnvironmentSettings",
            "SummaryComment": "A set of environment settings for the start task.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "IList<Models.EnvironmentSetting>",
            "Name": "EnvironmentSettings"
          }
        },
        {
          "Key": {
            "Type": "int?",
            "Name": "MaxTaskRetryCount",
            "SummaryComment": "The maximum number of retries for the task.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "IList<ResourceFile>",
            "Name": "ResourceFiles",
            "SummaryComment": "A list of files that the Batch service will download to the compute node before running the command line.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": {
            "Type": "IList<Models.ResourceFile>",
            "Name": "ResourceFiles"
          }
        },
        {
          "Key": {
            "Type": "bool?",
            "Name": "RunElevated",
            "SummaryComment": "Whether to run the task in elevated mode.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "bool?",
            "Name": "WaitForSuccess",
            "SummaryComment": "A value indicating whether the Batch service should wait for the start task to complete before scheduling any tasks on the compute node.",
            "RemarksComment": "If this is not specified, the default is false.",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "Schedule",
      "ProtocolName": "Models.Schedule",
      "Comment": "A schedule.",
      "Properties": [
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "DoNotRunAfter",
            "SummaryComment": "The wall clock time after which no job will be scheduled under this job schedule.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "DoNotRunUntil",
            "SummaryComment": "The earliest wall clock time at which to schedule the first job under this job schedule",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "TimeSpan?",
            "Name": "RecurrenceInterval",
            "SummaryComment": "The time interval between the start times of two successive jobs under the job schedule.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "TimeSpan?",
            "Name": "StartWindow",
            "SummaryComment": "The window of time within which a job must be started from the time the job schedule is ready to be scheduled.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "StartTaskInformation",
      "ProtocolName": "Models.StartTaskInformation",
      "Comment": "Specifies the detailed runtime information of the start task, including current state, error details, exit code, start time, end time, etc.",
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "Common.StartTaskState",
            "Name": "State",
            "SummaryComment": "The current running state of the start task.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.StartTaskState",
            "Name": "State"
          }
        },
        {
          "Key": {
            "Type": "DateTime",
            "Name": "StartTime",
            "SummaryComment": "The time at which the task started running.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "EndTime",
            "SummaryComment": "The time at which the task completed.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "int?",
            "Name": "ExitCode",
            "SummaryComment": "The exit code of the task.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "TaskSchedulingError",
            "Name": "SchedulingError",
            "SummaryComment": "The error encountered by the service when scheduling the task.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "int",
            "Name": "RetryCount",
            "SummaryComment": "The number of times the start task has been retried by the Batch system.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "LastRetryTime",
            "SummaryComment": "The most recent time at which execution of the start task was retried by the Batch service.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "SubtaskInformation",
      "ProtocolName": "Models.SubtaskInformation",
      "Comment": "Information about an Azure Batch subtask.",
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "ComputeNodeInformation",
            "Name": "ComputeNodeInformation",
            "SummaryComment": "The information about the compute node on which the subtask ran.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "ComputeNodeInformation",
            "Name": "NodeInfo"
          }
        },
        {
          "Key": {
            "Type": "Common.TaskState?",
            "Name": "State",
            "SummaryComment": "The current state of the subtask.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.TaskState?",
            "Name": "State"
          }
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "StateTransitionTime",
            "SummaryComment": "The time at which the subtask entered its current state.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "StartTime",
            "SummaryComment": "The time at which the subtask started running. If the subtask has been restarted or retried, this is the most recent time at which the subtask started running.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "EndTime",
            "SummaryComment": "The time at which the subtask completed. This property is set only if the subtask is in the Completed state.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "int?",
            "Name": "ExitCode",
            "SummaryComment": "The exit code of the subtask. This property is set only if the subtask is in Completed state.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "TaskSchedulingError",
            "Name": "SchedulingError",
            "SummaryComment": "The details of any error encountered scheduling the subtask.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "int?",
            "Name": "Id",
            "SummaryComment": "The id of the subtask.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "Common.TaskState?",
            "Name": "PreviousState",
            "SummaryComment": "The previous state of the subtask. This property is not set if the subtask is in its initial active state.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.TaskState?",
            "Name": "PreviousState"
          }
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "PreviousStateTransitionTime",
            "SummaryComment": "The time at which the subtask entered its previous state. This property is not set if the subtask is in its initial active state.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "TaskConstraints",
      "ProtocolName": "Models.TaskConstraints",
      "Comment": "Defines the constraints on a particular Azure Batch task.",
      "Properties": [
        {
          "Key": {
            "Type": "TimeSpan?",
            "Name": "MaxWallClockTime",
            "SummaryComment": "The maximum elapsed time that the task may run, measured from the time the task starts.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Optional"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "TimeSpan?",
            "Name": "RetentionTime",
            "SummaryComment": "The minimum time to retain the working directory for the task on the compute node where it ran, from the time it completes execution. After this time, the Batch service may delete the working directory and all its contents.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Optional"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "int?",
            "Name": "MaxTaskRetryCount",
            "SummaryComment": "The maximum number of retries for the task.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Optional"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "TaskDependencies",
      "ProtocolName": "Models.TaskDependencies",
      "Comment": "Specifies the tasks that a <see cref=\"CloudTask\"/> depends on. The task will not be scheduled until all depended-on tasks have completed successfully.",
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "IReadOnlyList<TaskIdRange>",
            "Name": "TaskIdRanges",
            "SummaryComment": "The list of task ranges that must complete before this task can be scheduled.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write",
            "HideSetter": true
          },
          "Value": {
            "Type": "IList<Models.TaskIdRange>",
            "Name": "TaskIdRanges"
          }
        },
        {
          "Key": {
            "Type": "IReadOnlyList<string>",
            "Name": "TaskIds",
            "SummaryComment": "The list of task ids that must complete before this task can be scheduled.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write",
            "HideSetter": true
          },
          "Value": {
            "Type": "IList<string>",
            "Name": "TaskIds"
          }
        }
      ]
    },
    {
      "Name": "TaskExecutionInformation",
      "ProtocolName": "Models.TaskExecutionInformation",
      "Comment": "Task execution information.",
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "StartTime",
            "SummaryComment": "The time at which the task started running.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "EndTime",
            "SummaryComment": "The time at which the task completed.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "int?",
            "Name": "ExitCode",
            "SummaryComment": "The exit code of the task. This parameter is only returned if the task is in completed state.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "TaskSchedulingError",
            "Name": "SchedulingError",
            "SummaryComment": "The error encountered by the service in starting the task. This parameter is only returned if there was an error in scheduling the task and it is now in completed state.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "int",
            "Name": "RetryCount",
            "SummaryComment": "The number of times the task has been retried by the Batch service. Every time the task exits with a non-zero code, it is deemed as an application failure. The Batch service will retry the task up to the specified MaxTaskRetryCount.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "LastRetryTime",
            "SummaryComment": "The most recent time at which this task's execution was retried by the Batch service.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "int",
            "Name": "RequeueCount",
            "SummaryComment": "The number of times this task's execution was re-queued by the Batch service per user request.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime?",
            "Name": "LastRequeueTime",
            "SummaryComment": "The most recent time at which this task's execution was re-queued by the Batch service per user request.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "TaskIdRange",
      "ProtocolName": "Models.TaskIdRange",
      "Comment": "A range of task ids that a <see cref=\"CloudTask\"/> depends on. All tasks with ids in the range must complete successfully before the dependent task can be scheduled.",
      "IsConstructorPublic": false,
      "IsUsedInCollections": true,
      "Properties": [
        {
          "Key": {
            "Type": "int",
            "Name": "Start",
            "SummaryComment": "The first task id in the range.",
            "RemarksComment": "Ranges are inclusive. For example, if a task depends on a range with Start 8, then task \"8\" must complete before the task can be scheduled.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write",
            "HideSetter": true
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "int",
            "Name": "End",
            "SummaryComment": "The last task id in the range.",
            "RemarksComment": "Ranges are inclusive. For example, if a task depends on a range with End 12, then task \"12\" must complete before the task can be scheduled.",
            "BoundAccess": "read",
            "UnboundAccess": "read,write",
            "HideSetter": true
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "TaskInformation",
      "ProtocolName": "Models.TaskInformation",
      "Comment": "The compute node's task info class.",
      "IsConstructorPublic": false,
      "IsUsedInCollections": true,
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "TaskUrl",
            "SummaryComment": "The task URL.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "JobId",
            "SummaryComment": "The job id.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "TaskId",
            "SummaryComment": "The task id.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "int?",
            "Name": "SubtaskId",
            "SummaryComment": "The subtask id.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "Common.TaskState",
            "Name": "TaskState",
            "SummaryComment": "The task state.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.TaskState",
            "Name": "TaskState"
          }
        },
        {
          "Key": {
            "Type": "TaskExecutionInformation",
            "Name": "ExecutionInformation",
            "SummaryComment": "The execution information for the task.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "TaskExecutionInformation",
            "Name": "ExecutionInfo"
          }
        }
      ]
    },
    {
      "Name": "TaskSchedulingError",
      "ProtocolName": "Models.TaskSchedulingError",
      "Comment": "Information about an error when scheduling a task.",
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "Common.SchedulingErrorCategory",
            "Name": "Category",
            "SummaryComment": "The category of the task scheduling error.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "Models.SchedulingErrorCategory",
            "Name": "Category"
          }
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Code",
            "SummaryComment": "A code for the task scheduling error. See <see cref=\"Common.TaskSchedulingErrorCodes\"/> for possible values.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "Message",
            "SummaryComment": "A message describing the task scheduling error, intended to be suitable for display in a user interface.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "IReadOnlyList<NameValuePair>",
            "Name": "Details",
            "SummaryComment": "A list of additional error details related to the scheduling error.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "TaskSchedulingPolicy",
      "ProtocolName": "Models.TaskSchedulingPolicy",
      "Comment": "A scheduling policy for a compute node.",
      "Properties": [
        {
          "Key": {
            "Type": "Common.ComputeNodeFillType",
            "Name": "ComputeNodeFillType",
            "SummaryComment": "The fill type of scheduling policy.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write",
            "HideSetter": true,
            "ConstructorArgumentType": "Required"
          },
          "Value": {
            "Type": "Models.ComputeNodeFillType",
            "Name": "NodeFillType"
          }
        }
      ]
    },
    {
      "Name": "TaskStatistics",
      "ProtocolName": "Models.TaskStatistics",
      "Comment": "Resource usage statistics for the task.",
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "string",
            "Name": "Url",
            "SummaryComment": "The URL of the task statistics.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime",
            "Name": "StartTime",
            "SummaryComment": "The start time of the time range covered by the statistics.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime",
            "Name": "LastUpdateTime",
            "SummaryComment": "The time at which the statistics were last updated. All statistics are limited to the range between <see cref=\"StartTime\"/> and this value.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "TimeSpan",
            "Name": "UserCpuTime",
            "SummaryComment": "The total user mode CPU time (per core) consumed by the task.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "TimeSpan",
            "Name": "UserCPUTime"
          }
        },
        {
          "Key": {
            "Type": "TimeSpan",
            "Name": "KernelCpuTime",
            "SummaryComment": "The total kernel mode CPU time (per core) consumed by the task.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": {
            "Type": "TimeSpan",
            "Name": "KernelCPUTime"
          }
        },
        {
          "Key": {
            "Type": "TimeSpan",
            "Name": "WallClockTime",
            "SummaryComment": "The wall clock time of the task execution.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "long",
            "Name": "ReadIOps",
            "SummaryComment": "The total number of disk read operations made by the task.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "long",
            "Name": "WriteIOps",
            "SummaryComment": "The total number of disk write operations made by the task.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "double",
            "Name": "ReadIOGiB",
            "SummaryComment": "The total gibibytes of I/O read from disk by the task.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "double",
            "Name": "WriteIOGiB",
            "SummaryComment": "The total gibibytes of I/O written to disk by the task.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "TimeSpan",
            "Name": "WaitTime",
            "SummaryComment": "The total wait time of the task. The wait time for a task is defined as the elapsed time between the creation of the task and the start of task execution. (If the task is retried due to failures, the wait time is the time to the most recent task execution.)",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "UsageStatistics",
      "ProtocolName": "Models.UsageStatistics",
      "Comment": "Statistics related to pool usage data.",
      "IsConstructorPublic": false,
      "Properties": [
        {
          "Key": {
            "Type": "DateTime",
            "Name": "StartTime",
            "SummaryComment": "The start time of the time range covered by the statistics.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "DateTime",
            "Name": "LastUpdateTime",
            "SummaryComment": "The time at which the statistics were last updated. All statistics are limited to the range between <see cref=\"StartTime\"/> and this value.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "TimeSpan",
            "Name": "DedicatedCoreTime",
            "SummaryComment": "The aggregated wall-clock time of the dedicated compute nodes being part of the pool.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "none"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "VirtualMachineConfiguration",
      "ProtocolName": "Models.VirtualMachineConfiguration",
      "Comment": "The configuration for compute nodes in a pool based on the Azure Virtual Machines infrastructure.",
      "Properties": [
        {
          "Key": {
            "Type": "ImageReference",
            "Name": "ImageReference",
            "SummaryComment": "A reference to the Azure Virtual Machines Marketplace image to use.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required"
          },
          "Value": null
        },
        {
          "Key": {
            "Type": "string",
            "Name": "NodeAgentSkuId",
            "SummaryComment": "The SKU of Batch Node Agent to be provisioned on the compute node.",
            "RemarksComment": "The Batch node agent is a program that runs on each node in the pool, and provides the command-and-control interface between the node and the Batch service. There are different implementations of the node agent, known as SKUs, for different operating systems.",
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Required"
          },
          "Value": {
            "Type": "string",
            "Name": "NodeAgentSKUId"
          }
        },
        {
          "Key": {
            "Type": "WindowsConfiguration",
            "Name": "WindowsConfiguration",
            "SummaryComment": "Windows operating system settings on the virtual machine. This property must not be specified if the ImageReference property specifies a Linux OS image.",
            "RemarksComment": null,
            "BoundAccess": "read,write",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Optional"
          },
          "Value": null
        }
      ]
    },
    {
      "Name": "WindowsConfiguration",
      "ProtocolName": "Models.WindowsConfiguration",
      "Comment": "Windows operating system settings to apply to the virtual machine.",
      "Properties": [
        {
          "Key": {
            "Type": "bool?",
            "Name": "EnableAutomaticUpdates",
            "SummaryComment": "Whether automatic updates are enabled on the virtual machine. If unspecified, the default value is true.",
            "RemarksComment": null,
            "BoundAccess": "read",
            "UnboundAccess": "read,write",
            "ConstructorArgumentType": "Optional",
            "HideSetter": true
          },
          "Value": null
        }
      ]
    }
  ]
}