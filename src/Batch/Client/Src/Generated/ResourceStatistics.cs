//****************************************
// This file was autogenerated by a tool.
// Do not modify it.
//****************************************
namespace Microsoft.Azure.Batch
{
    using Models = Microsoft.Azure.Batch.Protocol.Models;
    using System;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The resource statistics data for the pool.
    /// </summary>
    public partial class ResourceStatistics : IPropertyMetadata
    {
        private readonly double averageCpuPercentage;
        private readonly double averageDiskGiB;
        private readonly double averageMemoryGiB;
        private readonly double diskReadGiB;
        private readonly long diskReadIOps;
        private readonly double diskWriteGiB;
        private readonly long diskWriteIOps;
        private readonly DateTime lastUpdateTime;
        private readonly double networkReadGiB;
        private readonly double networkWriteGiB;
        private readonly double peakDiskGiB;
        private readonly double peakMemoryGiB;
        private readonly DateTime startTime;

        #region Constructors

        internal ResourceStatistics(Models.ResourceStatistics protocolObject)
        {
            this.averageCpuPercentage = protocolObject.AvgCPUPercentage;
            this.averageDiskGiB = protocolObject.AvgDiskGiB;
            this.averageMemoryGiB = protocolObject.AvgMemoryGiB;
            this.diskReadGiB = protocolObject.DiskReadGiB;
            this.diskReadIOps = protocolObject.DiskReadIOps;
            this.diskWriteGiB = protocolObject.DiskWriteGiB;
            this.diskWriteIOps = protocolObject.DiskWriteIOps;
            this.lastUpdateTime = protocolObject.LastUpdateTime;
            this.networkReadGiB = protocolObject.NetworkReadGiB;
            this.networkWriteGiB = protocolObject.NetworkWriteGiB;
            this.peakDiskGiB = protocolObject.PeakDiskGiB;
            this.peakMemoryGiB = protocolObject.PeakMemoryGiB;
            this.startTime = protocolObject.StartTime;
        }

        #endregion Constructors

        #region ResourceStatistics

        /// <summary>
        /// Gets the average CPU usage across all compute nodes in the pool (percentage per compute node).
        /// </summary>
        public double AverageCpuPercentage
        {
            get { return this.averageCpuPercentage; }
        }

        /// <summary>
        /// Gets the average used disk space in gibibytes across all compute nodes in the pool.
        /// </summary>
        public double AverageDiskGiB
        {
            get { return this.averageDiskGiB; }
        }

        /// <summary>
        /// Gets the average memory usage in gibibytes across all compute nodes in the pool.
        /// </summary>
        public double AverageMemoryGiB
        {
            get { return this.averageMemoryGiB; }
        }

        /// <summary>
        /// Gets the total amount of data in gibibytes of disk reads across all compute nodes in the pool.
        /// </summary>
        public double DiskReadGiB
        {
            get { return this.diskReadGiB; }
        }

        /// <summary>
        /// Gets the total number of disk read operations across all compute nodes in the pool.
        /// </summary>
        public long DiskReadIOps
        {
            get { return this.diskReadIOps; }
        }

        /// <summary>
        /// Gets the total amount of data in gibibytes of disk writes across all compute nodes in the pool.
        /// </summary>
        public double DiskWriteGiB
        {
            get { return this.diskWriteGiB; }
        }

        /// <summary>
        /// Gets the total number of disk write operations across all compute nodes in the pool.
        /// </summary>
        public long DiskWriteIOps
        {
            get { return this.diskWriteIOps; }
        }

        /// <summary>
        /// Gets the time at which the statistics were last updated. All statistics are limited to the range between <see 
        /// cref="StartTime"/> and this value.
        /// </summary>
        public DateTime LastUpdateTime
        {
            get { return this.lastUpdateTime; }
        }

        /// <summary>
        /// Gets the total amount of data in gibibytes of network reads across all compute nodes in the pool.
        /// </summary>
        public double NetworkReadGiB
        {
            get { return this.networkReadGiB; }
        }

        /// <summary>
        /// Gets the total amount of data in gibibytes of network writes across all compute nodes in the pool.
        /// </summary>
        public double NetworkWriteGiB
        {
            get { return this.networkWriteGiB; }
        }

        /// <summary>
        /// Gets the peak used disk space in gibibytes across all compute nodes in the pool.
        /// </summary>
        public double PeakDiskGiB
        {
            get { return this.peakDiskGiB; }
        }

        /// <summary>
        /// Gets the peak memory usage in gibibytes across all compute nodes in the pool.
        /// </summary>
        public double PeakMemoryGiB
        {
            get { return this.peakMemoryGiB; }
        }

        /// <summary>
        /// Gets the start time of the time range covered by the statistics.
        /// </summary>
        public DateTime StartTime
        {
            get { return this.startTime; }
        }

        #endregion // ResourceStatistics

        #region IPropertyMetadata

        bool IModifiable.HasBeenModified
        {
            //This class is compile time readonly so it cannot have been modified
            get { return false; }
        }

        bool IReadOnly.IsReadOnly
        {
            get { return true; }
            set
            {
                // This class is compile time readonly already
            }
        }

        #endregion // IPropertyMetadata
    }
}