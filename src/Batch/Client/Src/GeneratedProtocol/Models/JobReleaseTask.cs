// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Batch.Protocol.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// A Job Release task to run on job completion on any compute node where
    /// the job has run.
    /// </summary>
    public partial class JobReleaseTask
    {
        /// <summary>
        /// Initializes a new instance of the JobReleaseTask class.
        /// </summary>
        public JobReleaseTask() { }

        /// <summary>
        /// Initializes a new instance of the JobReleaseTask class.
        /// </summary>
        public JobReleaseTask(string id = default(string), string commandLine = default(string), IList<ResourceFile> resourceFiles = default(IList<ResourceFile>), IList<EnvironmentSetting> environmentSettings = default(IList<EnvironmentSetting>), TimeSpan? maxWallClockTime = default(TimeSpan?), TimeSpan? retentionTime = default(TimeSpan?), bool? runElevated = default(bool?))
        {
            Id = id;
            CommandLine = commandLine;
            ResourceFiles = resourceFiles;
            EnvironmentSettings = environmentSettings;
            MaxWallClockTime = maxWallClockTime;
            RetentionTime = retentionTime;
            RunElevated = runElevated;
        }

        /// <summary>
        /// Gets or sets a string that uniquely identifies the Job Release
        /// task within the job. The id can contain any combination of
        /// alphanumeric characters including hyphens and underscores and
        /// cannot contain more than 64 characters.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets the command line of the Job Release task.
        /// </summary>
        [JsonProperty(PropertyName = "commandLine")]
        public string CommandLine { get; set; }

        /// <summary>
        /// Gets or sets a list of files that the Batch service will download
        /// to the compute node before running the command line.
        /// </summary>
        [JsonProperty(PropertyName = "resourceFiles")]
        public IList<ResourceFile> ResourceFiles { get; set; }

        /// <summary>
        /// Gets or sets a list of environment variable settings for the Job
        /// Release task.
        /// </summary>
        [JsonProperty(PropertyName = "environmentSettings")]
        public IList<EnvironmentSetting> EnvironmentSettings { get; set; }

        /// <summary>
        /// Gets or sets the maximum elapsed time that the Job Release task
        /// may run on a given compute node, measured from the time the task
        /// starts. If the task does not complete within the time limit, the
        /// Batch service terminates it. The default value is 15 minutes.
        /// </summary>
        [JsonProperty(PropertyName = "maxWallClockTime")]
        public TimeSpan? MaxWallClockTime { get; set; }

        /// <summary>
        /// Gets or sets the minimum time to retain the working directory for
        /// the Job Release task on the compute node. After this time, the
        /// Batch service may delete the working directory and all its
        /// contents. The default is infinite.
        /// </summary>
        [JsonProperty(PropertyName = "retentionTime")]
        public TimeSpan? RetentionTime { get; set; }

        /// <summary>
        /// Gets or sets whether to run the Job Release task in elevated mode.
        /// The default value is false.
        /// </summary>
        [JsonProperty(PropertyName = "runElevated")]
        public bool? RunElevated { get; set; }

    }
}
