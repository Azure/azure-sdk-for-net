// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Batch.Protocol.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// Statistics related to pool usage information.
    /// </summary>
    public partial class UsageStatistics
    {
        /// <summary>
        /// Initializes a new instance of the UsageStatistics class.
        /// </summary>
        public UsageStatistics() { }

        /// <summary>
        /// Initializes a new instance of the UsageStatistics class.
        /// </summary>
        /// <param name="startTime">The start time of the time range covered by the statistics.</param>
        /// <param name="lastUpdateTime">The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.</param>
        /// <param name="dedicatedCoreTime">The aggregated wall-clock time of the dedicated compute node cores being part of the pool.</param>
        public UsageStatistics(DateTime startTime, DateTime lastUpdateTime, TimeSpan dedicatedCoreTime)
        {
            StartTime = startTime;
            LastUpdateTime = lastUpdateTime;
            DedicatedCoreTime = dedicatedCoreTime;
        }

        /// <summary>
        /// Gets or sets the start time of the time range covered by the
        /// statistics.
        /// </summary>
        [JsonProperty(PropertyName = "startTime")]
        public DateTime StartTime { get; set; }

        /// <summary>
        /// Gets or sets the time at which the statistics were last updated.
        /// All statistics are limited to the range between startTime and
        /// lastUpdateTime.
        /// </summary>
        [JsonProperty(PropertyName = "lastUpdateTime")]
        public DateTime LastUpdateTime { get; set; }

        /// <summary>
        /// Gets or sets the aggregated wall-clock time of the dedicated
        /// compute node cores being part of the pool.
        /// </summary>
        [JsonProperty(PropertyName = "dedicatedCoreTime")]
        public TimeSpan DedicatedCoreTime { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
