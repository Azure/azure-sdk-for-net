// Copyright (c) Microsoft and contributors.  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Batch.Protocol.Models
{
    using System.Linq;

    /// <summary>
    /// The properties of a file on a compute node.
    /// </summary>
    public partial class FileProperties
    {
        /// <summary>
        /// Initializes a new instance of the FileProperties class.
        /// </summary>
        public FileProperties() { }

        /// <summary>
        /// Initializes a new instance of the FileProperties class.
        /// </summary>
        /// <param name="lastModified">The time at which the file was last
        /// modified.</param>
        /// <param name="contentLength">The length of the file.</param>
        /// <param name="creationTime">The file creation time.</param>
        /// <param name="contentType">The content type of the file.</param>
        /// <param name="fileMode">The file mode attribute in octal
        /// format.</param>
        public FileProperties(System.DateTime lastModified, long contentLength, System.DateTime? creationTime = default(System.DateTime?), string contentType = default(string), string fileMode = default(string))
        {
            CreationTime = creationTime;
            LastModified = lastModified;
            ContentLength = contentLength;
            ContentType = contentType;
            FileMode = fileMode;
        }

        /// <summary>
        /// Gets or sets the file creation time.
        /// </summary>
        /// <remarks>
        /// The creation time is not returned for files on Linux compute nodes.
        /// </remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName = "creationTime")]
        public System.DateTime? CreationTime { get; set; }

        /// <summary>
        /// Gets or sets the time at which the file was last modified.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastModified")]
        public System.DateTime LastModified { get; set; }

        /// <summary>
        /// Gets or sets the length of the file.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "contentLength")]
        public long ContentLength { get; set; }

        /// <summary>
        /// Gets or sets the content type of the file.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "contentType")]
        public string ContentType { get; set; }

        /// <summary>
        /// Gets or sets the file mode attribute in octal format.
        /// </summary>
        /// <remarks>
        /// The file mode is returned only for files on Linux compute nodes.
        /// </remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName = "fileMode")]
        public string FileMode { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
