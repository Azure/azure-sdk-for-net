// Copyright (c) Microsoft and contributors.  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Batch.Protocol.Models
{

    /// <summary>
    /// Defines values for DisableComputeNodeSchedulingOption.
    /// </summary>
    [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
    public enum DisableComputeNodeSchedulingOption
    {
        [System.Runtime.Serialization.EnumMember(Value = "requeue")]
        Requeue,
        [System.Runtime.Serialization.EnumMember(Value = "terminate")]
        Terminate,
        [System.Runtime.Serialization.EnumMember(Value = "taskcompletion")]
        Taskcompletion
    }
    internal static class DisableComputeNodeSchedulingOptionEnumExtension
    {
        internal static string ToSerializedValue(this DisableComputeNodeSchedulingOption? value )  =>
            value == null ? null : (( DisableComputeNodeSchedulingOption )value).ToSerializedValue();

        internal static string ToSerializedValue(this DisableComputeNodeSchedulingOption value )
        {
            switch( value )
            {
                case DisableComputeNodeSchedulingOption.Requeue:
                    return "requeue";
                case DisableComputeNodeSchedulingOption.Terminate:
                    return "terminate";
                case DisableComputeNodeSchedulingOption.Taskcompletion:
                    return "taskcompletion";
            }
            return null;
        }

        internal static DisableComputeNodeSchedulingOption? ParseDisableComputeNodeSchedulingOption( this string value )
        {
            switch( value )
            {
                case "requeue":
                    return DisableComputeNodeSchedulingOption.Requeue;
                case "terminate":
                    return DisableComputeNodeSchedulingOption.Terminate;
                case "taskcompletion":
                    return DisableComputeNodeSchedulingOption.Taskcompletion;
            }
            return null;
        }
    }
}
