// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Batch.Protocol.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// Specifies the execution constraints for jobs created on a schedule.
    /// </summary>
    public partial class JobConstraints
    {
        /// <summary>
        /// Initializes a new instance of the JobConstraints class.
        /// </summary>
        public JobConstraints() { }

        /// <summary>
        /// Initializes a new instance of the JobConstraints class.
        /// </summary>
        /// <param name="maxWallClockTime">The maximum elapsed time that the job may run, measured from the time the job starts. If the job does not complete within the time limit, the Batch service terminates it and any tasks that are still running.</param>
        /// <param name="maxTaskRetryCount">The maximum number of times each task may be retried. The Batch service retries a task if its exit code is nonzero.</param>
        public JobConstraints(TimeSpan? maxWallClockTime = default(TimeSpan?), int? maxTaskRetryCount = default(int?))
        {
            MaxWallClockTime = maxWallClockTime;
            MaxTaskRetryCount = maxTaskRetryCount;
        }

        /// <summary>
        /// Gets or sets the maximum elapsed time that the job may run,
        /// measured from the time the job starts. If the job does not
        /// complete within the time limit, the Batch service terminates it
        /// and any tasks that are still running.
        /// </summary>
        [JsonProperty(PropertyName = "maxWallClockTime")]
        public TimeSpan? MaxWallClockTime { get; set; }

        /// <summary>
        /// Gets or sets the maximum number of times each task may be retried.
        /// The Batch service retries a task if its exit code is nonzero.
        /// </summary>
        [JsonProperty(PropertyName = "maxTaskRetryCount")]
        public int? MaxTaskRetryCount { get; set; }

    }
}
