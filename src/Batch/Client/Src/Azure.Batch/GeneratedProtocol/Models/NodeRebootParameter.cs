// Copyright (c) Microsoft and contributors.  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Batch.Protocol.Models
{
    using System.Linq;

    /// <summary>
    /// Options for rebooting a compute node.
    /// </summary>
    public partial class NodeRebootParameter
    {
        /// <summary>
        /// Initializes a new instance of the NodeRebootParameter class.
        /// </summary>
        public NodeRebootParameter() { }

        /// <summary>
        /// Initializes a new instance of the NodeRebootParameter class.
        /// </summary>
        /// <param name="nodeRebootOption">When to reboot the compute node and
        /// what to do with currently running tasks.</param>
        public NodeRebootParameter(ComputeNodeRebootOption? nodeRebootOption = default(ComputeNodeRebootOption?))
        {
            NodeRebootOption = nodeRebootOption;
        }

        /// <summary>
        /// Gets or sets when to reboot the compute node and what to do with
        /// currently running tasks.
        /// </summary>
        /// <remarks>
        /// The default value is requeue. Possible values include: 'requeue',
        /// 'terminate', 'taskCompletion', 'retainedData'
        /// </remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName = "nodeRebootOption")]
        public ComputeNodeRebootOption? NodeRebootOption { get; set; }

    }
}
