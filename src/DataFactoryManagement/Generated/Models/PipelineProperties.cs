// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.Azure.Management.DataFactories.Models;
using Microsoft.WindowsAzure.Common.Internals;

namespace Microsoft.Azure.Management.DataFactories.Models
{
    /// <summary>
    /// Pipeline properties.
    /// </summary>
    public partial class PipelineProperties
    {
        private IList<BaseActivity> _activities;
        
        /// <summary>
        /// Required. Activities that belong to the pipeline.
        /// </summary>
        public IList<BaseActivity> Activities
        {
            get { return this._activities; }
            set { this._activities = value; }
        }
        
        private string _description;
        
        /// <summary>
        /// Optional. Item description.
        /// </summary>
        public string Description
        {
            get { return this._description; }
            set { this._description = value; }
        }
        
        private System.DateTime? _end;
        
        /// <summary>
        /// Optional. The end time of the pipeline.
        /// </summary>
        public System.DateTime? End
        {
            get { return this._end; }
            set { this._end = value; }
        }
        
        private string _errorMessage;
        
        /// <summary>
        /// Optional. Error in processing pipeline request.
        /// </summary>
        public string ErrorMessage
        {
            get { return this._errorMessage; }
            set { this._errorMessage = value; }
        }
        
        private string _hubName;
        
        /// <summary>
        /// Optional. The name of the Hub that this pipeline belongs to.
        /// </summary>
        public string HubName
        {
            get { return this._hubName; }
            set { this._hubName = value; }
        }
        
        private bool? _isPaused;
        
        /// <summary>
        /// Optional. The status of the pipline. Pipeline is paused when
        /// boolean is set to true.
        /// </summary>
        public bool? IsPaused
        {
            get { return this._isPaused; }
            set { this._isPaused = value; }
        }
        
        private string _provisioningState;
        
        /// <summary>
        /// Optional. The provisioning state of the pipeline.
        /// </summary>
        public string ProvisioningState
        {
            get { return this._provisioningState; }
            set { this._provisioningState = value; }
        }
        
        private PipelineRuntimeInfo _runtimeInfo;
        
        /// <summary>
        /// Optional. Pipeline runtime information.
        /// </summary>
        public PipelineRuntimeInfo RuntimeInfo
        {
            get { return this._runtimeInfo; }
            set { this._runtimeInfo = value; }
        }
        
        private System.DateTime? _start;
        
        /// <summary>
        /// Optional. The start time of the pipeline.
        /// </summary>
        public System.DateTime? Start
        {
            get { return this._start; }
            set { this._start = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the PipelineProperties class.
        /// </summary>
        public PipelineProperties()
        {
            this.Activities = new LazyList<BaseActivity>();
        }
        
        /// <summary>
        /// Initializes a new instance of the PipelineProperties class with
        /// required arguments.
        /// </summary>
        public PipelineProperties(IList<BaseActivity> activities)
            : this()
        {
            if (activities == null)
            {
                throw new ArgumentNullException("activities");
            }
            this.Activities = activities;
        }
    }
}
