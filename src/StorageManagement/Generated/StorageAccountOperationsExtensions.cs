// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.WindowsAzure;
using Microsoft.WindowsAzure.Management.Storage;
using Microsoft.WindowsAzure.Management.Storage.Models;

namespace Microsoft.WindowsAzure.Management.Storage
{
    /// <summary>
    /// The Service Management API includes operations for managing the storage
    /// accounts beneath your subscription.  (see
    /// http://msdn.microsoft.com/en-us/library/windowsazure/ee460790.aspx for
    /// more information)
    /// </summary>
    public static partial class StorageAccountOperationsExtensions
    {
        /// <summary>
        /// The Create Storage Account operation creates a new storage account
        /// in Windows Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/hh264518.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Storage.IStorageAccountOperations.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Create Storage Account operation.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static OperationResponse BeginCreating(this IStorageAccountOperations operations, StorageAccountCreateParameters parameters)
        {
            try
            {
                return operations.BeginCreatingAsync(parameters).Result;
            }
            catch (AggregateException ex)
            {
                if (ex.InnerExceptions.Count > 1)
                {
                    throw;
                }
                else
                {
                    throw ex.InnerException;
                }
            }
        }
        
        /// <summary>
        /// The Create Storage Account operation creates a new storage account
        /// in Windows Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/hh264518.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Storage.IStorageAccountOperations.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Create Storage Account operation.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<OperationResponse> BeginCreatingAsync(this IStorageAccountOperations operations, StorageAccountCreateParameters parameters)
        {
            return operations.BeginCreatingAsync(parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// The Check Name Availability operation checks if a storage account
        /// name is available for use in Windows Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154125.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Storage.IStorageAccountOperations.
        /// </param>
        /// <param name='serviceName'>
        /// The desired storage account name to check for availability.
        /// </param>
        /// <returns>
        /// The response to a storage account check name availability request
        /// </returns>
        public static CheckNameAvailabilityResponse CheckNameAvailability(this IStorageAccountOperations operations, string serviceName)
        {
            try
            {
                return operations.CheckNameAvailabilityAsync(serviceName).Result;
            }
            catch (AggregateException ex)
            {
                if (ex.InnerExceptions.Count > 1)
                {
                    throw;
                }
                else
                {
                    throw ex.InnerException;
                }
            }
        }
        
        /// <summary>
        /// The Check Name Availability operation checks if a storage account
        /// name is available for use in Windows Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154125.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Storage.IStorageAccountOperations.
        /// </param>
        /// <param name='serviceName'>
        /// The desired storage account name to check for availability.
        /// </param>
        /// <returns>
        /// The response to a storage account check name availability request
        /// </returns>
        public static Task<CheckNameAvailabilityResponse> CheckNameAvailabilityAsync(this IStorageAccountOperations operations, string serviceName)
        {
            return operations.CheckNameAvailabilityAsync(serviceName, CancellationToken.None);
        }
        
        /// <summary>
        /// The Create Storage Account operation creates a new storage account
        /// in Windows Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/hh264518.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Storage.IStorageAccountOperations.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Create Storage Account operation.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself.  If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request.  If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        public static StorageOperationStatusResponse Create(this IStorageAccountOperations operations, StorageAccountCreateParameters parameters)
        {
            try
            {
                return operations.CreateAsync(parameters).Result;
            }
            catch (AggregateException ex)
            {
                if (ex.InnerExceptions.Count > 1)
                {
                    throw;
                }
                else
                {
                    throw ex.InnerException;
                }
            }
        }
        
        /// <summary>
        /// The Create Storage Account operation creates a new storage account
        /// in Windows Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/hh264518.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Storage.IStorageAccountOperations.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Create Storage Account operation.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself.  If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request.  If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        public static Task<StorageOperationStatusResponse> CreateAsync(this IStorageAccountOperations operations, StorageAccountCreateParameters parameters)
        {
            return operations.CreateAsync(parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// The Delete Storage Account operation deletes the specifiedstorage
        /// account from Windows Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/hh264517.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Storage.IStorageAccountOperations.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the storage account.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static OperationResponse Delete(this IStorageAccountOperations operations, string serviceName)
        {
            try
            {
                return operations.DeleteAsync(serviceName).Result;
            }
            catch (AggregateException ex)
            {
                if (ex.InnerExceptions.Count > 1)
                {
                    throw;
                }
                else
                {
                    throw ex.InnerException;
                }
            }
        }
        
        /// <summary>
        /// The Delete Storage Account operation deletes the specifiedstorage
        /// account from Windows Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/hh264517.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Storage.IStorageAccountOperations.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the storage account.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<OperationResponse> DeleteAsync(this IStorageAccountOperations operations, string serviceName)
        {
            return operations.DeleteAsync(serviceName, CancellationToken.None);
        }
        
        /// <summary>
        /// The Get Storage Account Properties operation returns system
        /// properties for the specified storage account.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/ee460802.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Storage.IStorageAccountOperations.
        /// </param>
        /// <param name='serviceName'>
        /// Name of the storage account to get.
        /// </param>
        /// <returns>
        /// The Get Storage Account Properties operation response.
        /// </returns>
        public static StorageServiceGetResponse Get(this IStorageAccountOperations operations, string serviceName)
        {
            try
            {
                return operations.GetAsync(serviceName).Result;
            }
            catch (AggregateException ex)
            {
                if (ex.InnerExceptions.Count > 1)
                {
                    throw;
                }
                else
                {
                    throw ex.InnerException;
                }
            }
        }
        
        /// <summary>
        /// The Get Storage Account Properties operation returns system
        /// properties for the specified storage account.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/ee460802.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Storage.IStorageAccountOperations.
        /// </param>
        /// <param name='serviceName'>
        /// Name of the storage account to get.
        /// </param>
        /// <returns>
        /// The Get Storage Account Properties operation response.
        /// </returns>
        public static Task<StorageServiceGetResponse> GetAsync(this IStorageAccountOperations operations, string serviceName)
        {
            return operations.GetAsync(serviceName, CancellationToken.None);
        }
        
        /// <summary>
        /// The Get Storage Keys operation returns the primary and secondary
        /// access keys for the specified storage account.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/ee460785.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Storage.IStorageAccountOperations.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the desired storage account.
        /// </param>
        /// <returns>
        /// The primary and secondary access keys for a storage account.
        /// </returns>
        public static StorageAccountGetKeysResponse GetKeys(this IStorageAccountOperations operations, string serviceName)
        {
            try
            {
                return operations.GetKeysAsync(serviceName).Result;
            }
            catch (AggregateException ex)
            {
                if (ex.InnerExceptions.Count > 1)
                {
                    throw;
                }
                else
                {
                    throw ex.InnerException;
                }
            }
        }
        
        /// <summary>
        /// The Get Storage Keys operation returns the primary and secondary
        /// access keys for the specified storage account.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/ee460785.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Storage.IStorageAccountOperations.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the desired storage account.
        /// </param>
        /// <returns>
        /// The primary and secondary access keys for a storage account.
        /// </returns>
        public static Task<StorageAccountGetKeysResponse> GetKeysAsync(this IStorageAccountOperations operations, string serviceName)
        {
            return operations.GetKeysAsync(serviceName, CancellationToken.None);
        }
        
        /// <summary>
        /// The List Storage Accounts operation lists the storage accounts
        /// available under the current subscription.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/ee460787.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Storage.IStorageAccountOperations.
        /// </param>
        /// <returns>
        /// The List Storage Accounts operation response.
        /// </returns>
        public static StorageServiceListResponse List(this IStorageAccountOperations operations)
        {
            try
            {
                return operations.ListAsync().Result;
            }
            catch (AggregateException ex)
            {
                if (ex.InnerExceptions.Count > 1)
                {
                    throw;
                }
                else
                {
                    throw ex.InnerException;
                }
            }
        }
        
        /// <summary>
        /// The List Storage Accounts operation lists the storage accounts
        /// available under the current subscription.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/ee460787.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Storage.IStorageAccountOperations.
        /// </param>
        /// <returns>
        /// The List Storage Accounts operation response.
        /// </returns>
        public static Task<StorageServiceListResponse> ListAsync(this IStorageAccountOperations operations)
        {
            return operations.ListAsync(CancellationToken.None);
        }
        
        /// <summary>
        /// The Regenerate Keys operation regenerates the primary or secondary
        /// access key for the specified storage account.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/ee460795.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Storage.IStorageAccountOperations.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Regenerate Keys operation.
        /// </param>
        /// <returns>
        /// The primary and secondary access keys for a storage account.
        /// </returns>
        public static StorageAccountRegenerateKeysResponse RegenerateKeys(this IStorageAccountOperations operations, StorageAccountRegenerateKeysParameters parameters)
        {
            try
            {
                return operations.RegenerateKeysAsync(parameters).Result;
            }
            catch (AggregateException ex)
            {
                if (ex.InnerExceptions.Count > 1)
                {
                    throw;
                }
                else
                {
                    throw ex.InnerException;
                }
            }
        }
        
        /// <summary>
        /// The Regenerate Keys operation regenerates the primary or secondary
        /// access key for the specified storage account.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/ee460795.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Storage.IStorageAccountOperations.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Regenerate Keys operation.
        /// </param>
        /// <returns>
        /// The primary and secondary access keys for a storage account.
        /// </returns>
        public static Task<StorageAccountRegenerateKeysResponse> RegenerateKeysAsync(this IStorageAccountOperations operations, StorageAccountRegenerateKeysParameters parameters)
        {
            return operations.RegenerateKeysAsync(parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// The Update Storage Account operation updates the label, the
        /// description, and enables or disables the geo-replication status
        /// for a storage account in Windows Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/hh264516.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Storage.IStorageAccountOperations.
        /// </param>
        /// <param name='serviceName'>
        /// Name of the storage account to update.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Update Storage Account operation.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static OperationResponse Update(this IStorageAccountOperations operations, string serviceName, StorageAccountUpdateParameters parameters)
        {
            try
            {
                return operations.UpdateAsync(serviceName, parameters).Result;
            }
            catch (AggregateException ex)
            {
                if (ex.InnerExceptions.Count > 1)
                {
                    throw;
                }
                else
                {
                    throw ex.InnerException;
                }
            }
        }
        
        /// <summary>
        /// The Update Storage Account operation updates the label, the
        /// description, and enables or disables the geo-replication status
        /// for a storage account in Windows Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/hh264516.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Storage.IStorageAccountOperations.
        /// </param>
        /// <param name='serviceName'>
        /// Name of the storage account to update.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Update Storage Account operation.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<OperationResponse> UpdateAsync(this IStorageAccountOperations operations, string serviceName, StorageAccountUpdateParameters parameters)
        {
            return operations.UpdateAsync(serviceName, parameters, CancellationToken.None);
        }
    }
}
