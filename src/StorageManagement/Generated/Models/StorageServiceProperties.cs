// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.WindowsAzure.Management.Storage.Models;

namespace Microsoft.WindowsAzure.Management.Storage.Models
{
    /// <summary>
    /// Details about a storage account.
    /// </summary>
    public partial class StorageServiceProperties
    {
        private string _affinityGroup;
        
        /// <summary>
        /// The affinity group with which this storage account is associated.
        /// </summary>
        public string AffinityGroup
        {
            get { return this._affinityGroup; }
            set { this._affinityGroup = value; }
        }
        
        private string _description;
        
        /// <summary>
        /// The user supplied description of the storage account.
        /// </summary>
        public string Description
        {
            get { return this._description; }
            set { this._description = value; }
        }
        
        private IList<Uri> _endpoints;
        
        /// <summary>
        /// The URLs that are used to perform a retrieval of a public blob,
        /// queue, or table object.
        /// </summary>
        public IList<Uri> Endpoints
        {
            get { return this._endpoints; }
            set { this._endpoints = value; }
        }
        
        private string _geoPrimaryRegion;
        
        /// <summary>
        /// Indicates the primary geographical region in which the storage
        /// account exists at this time.
        /// </summary>
        public string GeoPrimaryRegion
        {
            get { return this._geoPrimaryRegion; }
            set { this._geoPrimaryRegion = value; }
        }
        
        private bool _geoReplicationEnabled;
        
        /// <summary>
        /// Indicates whether the data in the storage account is replicated
        /// across more than one geographic location so as to enable
        /// resilience in the face of catastrophic service loss. The value is
        /// true if geo-replication is enabled; otherwise false.
        /// </summary>
        public bool GeoReplicationEnabled
        {
            get { return this._geoReplicationEnabled; }
            set { this._geoReplicationEnabled = value; }
        }
        
        private string _geoSecondaryRegion;
        
        /// <summary>
        /// Indicates the geographical region in which the storage account is
        /// being replicated.  The GeoSecondaryRegion element is not returned
        /// if geo-replication is “off” for this account.
        /// </summary>
        public string GeoSecondaryRegion
        {
            get { return this._geoSecondaryRegion; }
            set { this._geoSecondaryRegion = value; }
        }
        
        private string _label;
        
        /// <summary>
        /// The user supplied name of the storage account returned as a base-64
        /// encoded string. This name can be used identify the storage account
        /// for your tracking purposes.
        /// </summary>
        public string Label
        {
            get { return this._label; }
            set { this._label = value; }
        }
        
        private System.DateTime? _lastGeoFailoverTime;
        
        /// <summary>
        /// A timestamp that indicates the most recent instance of a failover
        /// to the secondary region. In case of multiple failovers only the
        /// latest failover date and time maintained. The format of the
        /// returned timestamp is:
        /// [4DigitYear]-[2DigitMonth]-[2DigitDay]T[2DigitMinute]:[2DigitSecond]:[7DigitsOfPrecision]Z.
        /// LastGeoFailoverTime is not returned if there has not been an
        /// instance of a failover.
        /// </summary>
        public System.DateTime? LastGeoFailoverTime
        {
            get { return this._lastGeoFailoverTime; }
            set { this._lastGeoFailoverTime = value; }
        }
        
        private string _location;
        
        /// <summary>
        /// The geo-location specified when the storage account was created.
        /// This property is only returned if the storage account is not
        /// associated with an affinity group.
        /// </summary>
        public string Location
        {
            get { return this._location; }
            set { this._location = value; }
        }
        
        private StorageServiceStatus _status;
        
        /// <summary>
        /// The status of the storage account at the time the operation was
        /// called.
        /// </summary>
        public StorageServiceStatus Status
        {
            get { return this._status; }
            set { this._status = value; }
        }
        
        private Microsoft.WindowsAzure.Management.Storage.Models.GeoRegionStatus? _statusOfGeoPrimaryRegion;
        
        /// <summary>
        /// Indicates whether the primary storage region is available.
        /// </summary>
        public Microsoft.WindowsAzure.Management.Storage.Models.GeoRegionStatus? StatusOfGeoPrimaryRegion
        {
            get { return this._statusOfGeoPrimaryRegion; }
            set { this._statusOfGeoPrimaryRegion = value; }
        }
        
        private Microsoft.WindowsAzure.Management.Storage.Models.GeoRegionStatus? _statusOfGeoSecondaryRegion;
        
        /// <summary>
        /// Indicates whether the secondary storage region is available.
        /// </summary>
        public Microsoft.WindowsAzure.Management.Storage.Models.GeoRegionStatus? StatusOfGeoSecondaryRegion
        {
            get { return this._statusOfGeoSecondaryRegion; }
            set { this._statusOfGeoSecondaryRegion = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the StorageServiceProperties class.
        /// </summary>
        public StorageServiceProperties()
        {
            this._endpoints = new List<Uri>();
        }
    }
}
