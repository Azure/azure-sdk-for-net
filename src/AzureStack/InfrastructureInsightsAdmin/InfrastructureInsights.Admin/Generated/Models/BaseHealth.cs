// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.AzureStack.Management.InfrastructureInsights.Admin.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Models the base properties for health resource.
    /// </summary>
    public partial class BaseHealth
    {
        /// <summary>
        /// Initializes a new instance of the BaseHealth class.
        /// </summary>
        public BaseHealth()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BaseHealth class.
        /// </summary>
        /// <param name="alertSummary">Alert summary.</param>
        /// <param name="healthState">Health state.</param>
        /// <param name="namespaceProperty">Namespace of the health
        /// resource.</param>
        /// <param name="registrationId">Registration ID.</param>
        /// <param name="routePrefix">Route prefix.</param>
        public BaseHealth(AlertSummary alertSummary = default(AlertSummary), string healthState = default(string), string namespaceProperty = default(string), string registrationId = default(string), string routePrefix = default(string))
        {
            AlertSummary = alertSummary;
            HealthState = healthState;
            NamespaceProperty = namespaceProperty;
            RegistrationId = registrationId;
            RoutePrefix = routePrefix;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets alert summary.
        /// </summary>
        [JsonProperty(PropertyName = "alertSummary")]
        public AlertSummary AlertSummary { get; set; }

        /// <summary>
        /// Gets or sets health state.
        /// </summary>
        [JsonProperty(PropertyName = "healthState")]
        public string HealthState { get; set; }

        /// <summary>
        /// Gets or sets namespace of the health resource.
        /// </summary>
        [JsonProperty(PropertyName = "namespace")]
        public string NamespaceProperty { get; set; }

        /// <summary>
        /// Gets or sets registration ID.
        /// </summary>
        [JsonProperty(PropertyName = "registrationId")]
        public string RegistrationId { get; set; }

        /// <summary>
        /// Gets or sets route prefix.
        /// </summary>
        [JsonProperty(PropertyName = "routePrefix")]
        public string RoutePrefix { get; set; }

    }
}
