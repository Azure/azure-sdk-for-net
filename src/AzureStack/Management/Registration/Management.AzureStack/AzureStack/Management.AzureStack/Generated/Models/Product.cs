// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.AzureStack.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Product information.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class Product : Resource
    {
        /// <summary>
        /// Initializes a new instance of the Product class.
        /// </summary>
        public Product()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Product class.
        /// </summary>
        /// <param name="id">ID of the resource.</param>
        /// <param name="name">Name of the resource.</param>
        /// <param name="type">Type of Resource.</param>
        /// <param name="etag">The entity tag used for optimistic concurrency
        /// when modifying the resource.</param>
        /// <param name="displayName">The display name of the product.</param>
        /// <param name="description">The description of the product.</param>
        /// <param name="publisherDisplayName">The user-friendly name of the
        /// product publisher.</param>
        /// <param name="publisherIdentifier">Publisher identifier.</param>
        /// <param name="offer">The offer representing the product.</param>
        /// <param name="offerVersion">The version of the product
        /// offer.</param>
        /// <param name="sku">The product SKU.</param>
        /// <param name="billingPartNumber">The part number used for billing
        /// purposes.</param>
        /// <param name="vmExtensionType">The type of the Virtual Machine
        /// Extension.</param>
        /// <param name="galleryItemIdentity">The identifier of the gallery
        /// item corresponding to the product.</param>
        /// <param name="iconUris">Additional links available for this
        /// product.</param>
        /// <param name="links">Additional links available for this
        /// product.</param>
        /// <param name="legalTerms">The legal terms.</param>
        /// <param name="privacyPolicy">The privacy policy.</param>
        /// <param name="payloadLength">The length of product content.</param>
        /// <param name="productKind">The kind of the product (virtualMachine
        /// or virtualMachineExtension)</param>
        /// <param name="productProperties">Additional properties for the
        /// product.</param>
        public Product(string id = default(string), string name = default(string), string type = default(string), string etag = default(string), string displayName = default(string), string description = default(string), string publisherDisplayName = default(string), string publisherIdentifier = default(string), string offer = default(string), string offerVersion = default(string), string sku = default(string), string billingPartNumber = default(string), string vmExtensionType = default(string), string galleryItemIdentity = default(string), IconUris iconUris = default(IconUris), IList<ProductLink> links = default(IList<ProductLink>), string legalTerms = default(string), string privacyPolicy = default(string), long? payloadLength = default(long?), string productKind = default(string), ProductProperties productProperties = default(ProductProperties))
            : base(id, name, type, etag)
        {
            DisplayName = displayName;
            Description = description;
            PublisherDisplayName = publisherDisplayName;
            PublisherIdentifier = publisherIdentifier;
            Offer = offer;
            OfferVersion = offerVersion;
            Sku = sku;
            BillingPartNumber = billingPartNumber;
            VmExtensionType = vmExtensionType;
            GalleryItemIdentity = galleryItemIdentity;
            IconUris = iconUris;
            Links = links;
            LegalTerms = legalTerms;
            PrivacyPolicy = privacyPolicy;
            PayloadLength = payloadLength;
            ProductKind = productKind;
            ProductProperties = productProperties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the display name of the product.
        /// </summary>
        [JsonProperty(PropertyName = "properties.displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets the description of the product.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the user-friendly name of the product publisher.
        /// </summary>
        [JsonProperty(PropertyName = "properties.publisherDisplayName")]
        public string PublisherDisplayName { get; set; }

        /// <summary>
        /// Gets or sets publisher identifier.
        /// </summary>
        [JsonProperty(PropertyName = "properties.publisherIdentifier")]
        public string PublisherIdentifier { get; set; }

        /// <summary>
        /// Gets or sets the offer representing the product.
        /// </summary>
        [JsonProperty(PropertyName = "properties.offer")]
        public string Offer { get; set; }

        /// <summary>
        /// Gets or sets the version of the product offer.
        /// </summary>
        [JsonProperty(PropertyName = "properties.offerVersion")]
        public string OfferVersion { get; set; }

        /// <summary>
        /// Gets or sets the product SKU.
        /// </summary>
        [JsonProperty(PropertyName = "properties.sku")]
        public string Sku { get; set; }

        /// <summary>
        /// Gets or sets the part number used for billing purposes.
        /// </summary>
        [JsonProperty(PropertyName = "properties.billingPartNumber")]
        public string BillingPartNumber { get; set; }

        /// <summary>
        /// Gets or sets the type of the Virtual Machine Extension.
        /// </summary>
        [JsonProperty(PropertyName = "properties.vmExtensionType")]
        public string VmExtensionType { get; set; }

        /// <summary>
        /// Gets or sets the identifier of the gallery item corresponding to
        /// the product.
        /// </summary>
        [JsonProperty(PropertyName = "properties.galleryItemIdentity")]
        public string GalleryItemIdentity { get; set; }

        /// <summary>
        /// Gets or sets additional links available for this product.
        /// </summary>
        [JsonProperty(PropertyName = "properties.iconUris")]
        public IconUris IconUris { get; set; }

        /// <summary>
        /// Gets or sets additional links available for this product.
        /// </summary>
        [JsonProperty(PropertyName = "properties.links")]
        public IList<ProductLink> Links { get; set; }

        /// <summary>
        /// Gets or sets the legal terms.
        /// </summary>
        [JsonProperty(PropertyName = "properties.legalTerms")]
        public string LegalTerms { get; set; }

        /// <summary>
        /// Gets or sets the privacy policy.
        /// </summary>
        [JsonProperty(PropertyName = "properties.privacyPolicy")]
        public string PrivacyPolicy { get; set; }

        /// <summary>
        /// Gets or sets the length of product content.
        /// </summary>
        [JsonProperty(PropertyName = "properties.payloadLength")]
        public long? PayloadLength { get; set; }

        /// <summary>
        /// Gets or sets the kind of the product (virtualMachine or
        /// virtualMachineExtension)
        /// </summary>
        [JsonProperty(PropertyName = "properties.productKind")]
        public string ProductKind { get; set; }

        /// <summary>
        /// Gets or sets additional properties for the product.
        /// </summary>
        [JsonProperty(PropertyName = "properties.productProperties")]
        public ProductProperties ProductProperties { get; set; }

    }
}
