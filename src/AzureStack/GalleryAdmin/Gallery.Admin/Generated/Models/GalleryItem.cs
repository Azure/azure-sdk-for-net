// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.AzureStack.Management.Gallery.Admin.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Properties of a gallery item.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class GalleryItem : Resource
    {
        /// <summary>
        /// Initializes a new instance of the GalleryItem class.
        /// </summary>
        public GalleryItem()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GalleryItem class.
        /// </summary>
        /// <param name="id">URI of the resource.</param>
        /// <param name="name">Name of the resource.</param>
        /// <param name="type">Type of the resource.</param>
        /// <param name="location">Location of the resource.</param>
        /// <param name="tags">List of key-value pairs.</param>
        /// <param name="identity">Identity of the gallery item.</param>
        /// <param name="publisher">The publisher of the gallery item.</param>
        /// <param name="publisherDisplayName">Display name of the
        /// publisher.</param>
        /// <param name="itemName">The display name for the gallery item, for
        /// the locale of the request.</param>
        /// <param name="itemDisplayName">Displayed name in the portal.</param>
        /// <param name="version">The version identifier of the gallery item,
        /// in Major.Minor.Build format.</param>
        /// <param name="summary">Short summary of the gallery item.</param>
        /// <param name="longSummary">Long summary of the gallery item.</param>
        /// <param name="description">The description of the gallery
        /// item.</param>
        /// <param name="uiDefinitionUri">The URL of the view definition object
        /// that defines the UI information that is used when an instance of
        /// the gallery item resource definition is created.</param>
        /// <param name="createdTime">The date and time that the gallery item
        /// was created.</param>
        /// <param name="changedTime">Last update time of gallery item.</param>
        /// <param name="marketingMaterial">Marketing materials for the gallery
        /// item.</param>
        /// <param name="itemType">Describes the type of the gallery item,
        /// either GalleryItem or ItemGroup. Possible values include:
        /// 'GalleryItem', 'ItemGroup'</param>
        /// <param name="categoryIds">List of category IDs the gallery item
        /// belongs to.</param>
        /// <param name="screenshotUris">List of screenshot image URIs provided
        /// for the item.</param>
        /// <param name="links">Links provided for the item.</param>
        /// <param name="filters">List of filters for the gallery item.</param>
        /// <param name="iconFileUris">URIs to icon files.</param>
        /// <param name="artifacts">List of artifacts for the gallery
        /// item.</param>
        /// <param name="metadata">Custom item metdata.</param>
        /// <param name="properties">List of properties provided for the
        /// gallery item.</param>
        /// <param name="images">List of images.</param>
        /// <param name="products">List of products.</param>
        /// <param name="resourceGroupName">Resource group name the gallery
        /// item belongs too.</param>
        /// <param name="definitionTemplates">Definition template for gallery
        /// item.</param>
        /// <param name="additionalProperties">List of additional properties
        /// provided for the item.</param>
        public GalleryItem(string id = default(string), string name = default(string), string type = default(string), string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string identity = default(string), string publisher = default(string), string publisherDisplayName = default(string), string itemName = default(string), string itemDisplayName = default(string), string version = default(string), string summary = default(string), string longSummary = default(string), string description = default(string), string uiDefinitionUri = default(string), System.DateTime? createdTime = default(System.DateTime?), System.DateTime? changedTime = default(System.DateTime?), MarketingMaterial marketingMaterial = default(MarketingMaterial), string itemType = default(string), IList<string> categoryIds = default(IList<string>), IList<string> screenshotUris = default(IList<string>), IList<LinkProperties> links = default(IList<LinkProperties>), IList<Filter> filters = default(IList<Filter>), GalleryItemPropertiesIconFileUris iconFileUris = default(GalleryItemPropertiesIconFileUris), IList<Artifact> artifacts = default(IList<Artifact>), OpenProperty metadata = default(OpenProperty), IDictionary<string, string> properties = default(IDictionary<string, string>), IList<ImageGroup> images = default(IList<ImageGroup>), IList<Product> products = default(IList<Product>), string resourceGroupName = default(string), DefinitionTemplates definitionTemplates = default(DefinitionTemplates), IDictionary<string, string> additionalProperties = default(IDictionary<string, string>))
            : base(id, name, type, location, tags)
        {
            Identity = identity;
            Publisher = publisher;
            PublisherDisplayName = publisherDisplayName;
            ItemName = itemName;
            ItemDisplayName = itemDisplayName;
            Version = version;
            Summary = summary;
            LongSummary = longSummary;
            Description = description;
            UiDefinitionUri = uiDefinitionUri;
            CreatedTime = createdTime;
            ChangedTime = changedTime;
            MarketingMaterial = marketingMaterial;
            ItemType = itemType;
            CategoryIds = categoryIds;
            ScreenshotUris = screenshotUris;
            Links = links;
            Filters = filters;
            IconFileUris = iconFileUris;
            Artifacts = artifacts;
            Metadata = metadata;
            Properties = properties;
            Images = images;
            Products = products;
            ResourceGroupName = resourceGroupName;
            DefinitionTemplates = definitionTemplates;
            AdditionalProperties = additionalProperties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets identity of the gallery item.
        /// </summary>
        [JsonProperty(PropertyName = "properties.identity")]
        public string Identity { get; set; }

        /// <summary>
        /// Gets or sets the publisher of the gallery item.
        /// </summary>
        [JsonProperty(PropertyName = "properties.publisher")]
        public string Publisher { get; set; }

        /// <summary>
        /// Gets or sets display name of the publisher.
        /// </summary>
        [JsonProperty(PropertyName = "properties.publisherDisplayName")]
        public string PublisherDisplayName { get; set; }

        /// <summary>
        /// Gets or sets the display name for the gallery item, for the locale
        /// of the request.
        /// </summary>
        [JsonProperty(PropertyName = "properties.itemName")]
        public string ItemName { get; set; }

        /// <summary>
        /// Gets or sets displayed name in the portal.
        /// </summary>
        [JsonProperty(PropertyName = "properties.itemDisplayName")]
        public string ItemDisplayName { get; set; }

        /// <summary>
        /// Gets or sets the version identifier of the gallery item, in
        /// Major.Minor.Build format.
        /// </summary>
        [JsonProperty(PropertyName = "properties.version")]
        public string Version { get; set; }

        /// <summary>
        /// Gets or sets short summary of the gallery item.
        /// </summary>
        [JsonProperty(PropertyName = "properties.summary")]
        public string Summary { get; set; }

        /// <summary>
        /// Gets or sets long summary of the gallery item.
        /// </summary>
        [JsonProperty(PropertyName = "properties.longSummary")]
        public string LongSummary { get; set; }

        /// <summary>
        /// Gets or sets the description of the gallery item.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the URL of the view definition object that defines the
        /// UI information that is used when an instance of the gallery item
        /// resource definition is created.
        /// </summary>
        [JsonProperty(PropertyName = "properties.uiDefinitionUri")]
        public string UiDefinitionUri { get; set; }

        /// <summary>
        /// Gets or sets the date and time that the gallery item was created.
        /// </summary>
        [JsonProperty(PropertyName = "properties.createdTime")]
        public System.DateTime? CreatedTime { get; set; }

        /// <summary>
        /// Gets or sets last update time of gallery item.
        /// </summary>
        [JsonProperty(PropertyName = "properties.changedTime")]
        public System.DateTime? ChangedTime { get; set; }

        /// <summary>
        /// Gets or sets marketing materials for the gallery item.
        /// </summary>
        [JsonProperty(PropertyName = "properties.marketingMaterial")]
        public MarketingMaterial MarketingMaterial { get; set; }

        /// <summary>
        /// Gets or sets describes the type of the gallery item, either
        /// GalleryItem or ItemGroup. Possible values include: 'GalleryItem',
        /// 'ItemGroup'
        /// </summary>
        [JsonProperty(PropertyName = "properties.itemType")]
        public string ItemType { get; set; }

        /// <summary>
        /// Gets list of category IDs the gallery item belongs to.
        /// </summary>
        [JsonProperty(PropertyName = "properties.categoryIds")]
        public IList<string> CategoryIds { get; private set; }

        /// <summary>
        /// Gets list of screenshot image URIs provided for the item.
        /// </summary>
        [JsonProperty(PropertyName = "properties.screenshotUris")]
        public IList<string> ScreenshotUris { get; private set; }

        /// <summary>
        /// Gets links provided for the item.
        /// </summary>
        [JsonProperty(PropertyName = "properties.links")]
        public IList<LinkProperties> Links { get; private set; }

        /// <summary>
        /// Gets list of filters for the gallery item.
        /// </summary>
        [JsonProperty(PropertyName = "properties.filters")]
        public IList<Filter> Filters { get; private set; }

        /// <summary>
        /// Gets uRIs to icon files.
        /// </summary>
        [JsonProperty(PropertyName = "properties.iconFileUris")]
        public GalleryItemPropertiesIconFileUris IconFileUris { get; private set; }

        /// <summary>
        /// Gets list of artifacts for the gallery item.
        /// </summary>
        [JsonProperty(PropertyName = "properties.artifacts")]
        public IList<Artifact> Artifacts { get; private set; }

        /// <summary>
        /// Gets custom item metdata.
        /// </summary>
        [JsonProperty(PropertyName = "properties.metadata")]
        public OpenProperty Metadata { get; private set; }

        /// <summary>
        /// Gets list of properties provided for the gallery item.
        /// </summary>
        [JsonProperty(PropertyName = "properties.properties")]
        public IDictionary<string, string> Properties { get; private set; }

        /// <summary>
        /// Gets list of images.
        /// </summary>
        [JsonProperty(PropertyName = "properties.images")]
        public IList<ImageGroup> Images { get; private set; }

        /// <summary>
        /// Gets list of products.
        /// </summary>
        [JsonProperty(PropertyName = "properties.products")]
        public IList<Product> Products { get; private set; }

        /// <summary>
        /// Gets or sets resource group name the gallery item belongs too.
        /// </summary>
        [JsonProperty(PropertyName = "properties.resourceGroupName")]
        public string ResourceGroupName { get; set; }

        /// <summary>
        /// Gets definition template for gallery item.
        /// </summary>
        [JsonProperty(PropertyName = "properties.definitionTemplates")]
        public DefinitionTemplates DefinitionTemplates { get; private set; }

        /// <summary>
        /// Gets list of additional properties provided for the item.
        /// </summary>
        [JsonProperty(PropertyName = "properties.additionalProperties")]
        public IDictionary<string, string> AdditionalProperties { get; private set; }

    }
}
