// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.AzureStack.Management.Gallery.Admin.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Represents gallery item artifacts.
    /// </summary>
    public partial class Artifact
    {
        /// <summary>
        /// Initializes a new instance of the Artifact class.
        /// </summary>
        public Artifact()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Artifact class.
        /// </summary>
        /// <param name="name">Name of the artifact.</param>
        /// <param name="uri">URI to the artifact.</param>
        /// <param name="type">Artifact type. Possible values include:
        /// 'template', 'fragment', 'custom', 'metadata'</param>
        public Artifact(string name = default(string), string uri = default(string), string type = default(string))
        {
            Name = name;
            Uri = uri;
            Type = type;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the artifact.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets URI to the artifact.
        /// </summary>
        [JsonProperty(PropertyName = "uri")]
        public string Uri { get; set; }

        /// <summary>
        /// Gets or sets artifact type. Possible values include: 'template',
        /// 'fragment', 'custom', 'metadata'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

    }
}
