// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.AzureStack.Management.Update.Admin.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Representation of a update run resource.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class UpdateRun : Resource
    {
        /// <summary>
        /// Initializes a new instance of the UpdateRun class.
        /// </summary>
        public UpdateRun()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UpdateRun class.
        /// </summary>
        /// <param name="id">URI of the resource.</param>
        /// <param name="name">Name of the resource.</param>
        /// <param name="type">Type of resource.</param>
        /// <param name="location">Region location of resource.</param>
        /// <param name="tags">List of key-value pairs.</param>
        /// <param name="progress">Current progress of the update run.</param>
        /// <param name="timeStarted">Update start time.</param>
        /// <param name="duration">Duration of the update.</param>
        /// <param name="state">State of the update run. Possible values
        /// include: 'Unknown', 'Succeeded', 'InProgress', 'Failed'</param>
        public UpdateRun(string id = default(string), string name = default(string), string type = default(string), string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), Step progress = default(Step), System.DateTime? timeStarted = default(System.DateTime?), string duration = default(string), string state = default(string))
            : base(id, name, type, location, tags)
        {
            Progress = progress;
            TimeStarted = timeStarted;
            Duration = duration;
            State = state;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets current progress of the update run.
        /// </summary>
        [JsonProperty(PropertyName = "properties.progress")]
        public Step Progress { get; set; }

        /// <summary>
        /// Gets or sets update start time.
        /// </summary>
        [JsonProperty(PropertyName = "properties.timeStarted")]
        public System.DateTime? TimeStarted { get; set; }

        /// <summary>
        /// Gets or sets duration of the update.
        /// </summary>
        [JsonProperty(PropertyName = "properties.duration")]
        public string Duration { get; set; }

        /// <summary>
        /// Gets or sets state of the update run. Possible values include:
        /// 'Unknown', 'Succeeded', 'InProgress', 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "properties.state")]
        public string State { get; set; }

    }
}
