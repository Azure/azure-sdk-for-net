// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.AzureStack.Management.Backup.Admin.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Information related to a backup.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class Backup : Resource
    {
        /// <summary>
        /// Initializes a new instance of the Backup class.
        /// </summary>
        public Backup()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Backup class.
        /// </summary>
        /// <param name="id">URI of the resource.</param>
        /// <param name="name">Name of the resource.</param>
        /// <param name="type">Type of resource.</param>
        /// <param name="location">Location of the resource.</param>
        /// <param name="tags">List of key value pairs.</param>
        /// <param name="backupDataVersion">Version of the backup data.</param>
        /// <param name="backupId">Unique GUID for the backup.</param>
        /// <param name="roleStatus">Backup status for each role.</param>
        /// <param name="status">Current status of the backup. Possible values
        /// include: 'Creating', 'Queued', 'Running', 'Deleted', 'Failed',
        /// 'PartialSucceeded', 'Succeeded'</param>
        /// <param name="createdDateTime">Creation time of the backup.</param>
        /// <param name="timeTakenToCreate">Duration to create the
        /// backup.</param>
        /// <param name="deploymentID">Deployment Id of the stamp.</param>
        /// <param name="stampVersion">Azure Stack stamp version of the
        /// backup.</param>
        /// <param name="oemVersion">OEM version.</param>
        /// <param name="encryptionCertThumbprint">The thumbprint of the
        /// certificate used to encrypt the backup encryption key.</param>
        public Backup(string id = default(string), string name = default(string), string type = default(string), string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string backupDataVersion = default(string), string backupId = default(string), IList<RoleOperationStatus> roleStatus = default(IList<RoleOperationStatus>), OperationStatus? status = default(OperationStatus?), System.DateTime? createdDateTime = default(System.DateTime?), string timeTakenToCreate = default(string), string deploymentID = default(string), string stampVersion = default(string), string oemVersion = default(string), string encryptionCertThumbprint = default(string))
            : base(id, name, type, location, tags)
        {
            BackupDataVersion = backupDataVersion;
            BackupId = backupId;
            RoleStatus = roleStatus;
            Status = status;
            CreatedDateTime = createdDateTime;
            TimeTakenToCreate = timeTakenToCreate;
            DeploymentID = deploymentID;
            StampVersion = stampVersion;
            OemVersion = oemVersion;
            EncryptionCertThumbprint = encryptionCertThumbprint;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets version of the backup data.
        /// </summary>
        [JsonProperty(PropertyName = "properties.backupInfo.backupDataVersion")]
        public string BackupDataVersion { get; private set; }

        /// <summary>
        /// Gets unique GUID for the backup.
        /// </summary>
        [JsonProperty(PropertyName = "properties.backupInfo.backupId")]
        public string BackupId { get; private set; }

        /// <summary>
        /// Gets backup status for each role.
        /// </summary>
        [JsonProperty(PropertyName = "properties.backupInfo.roleStatus")]
        public IList<RoleOperationStatus> RoleStatus { get; private set; }

        /// <summary>
        /// Gets current status of the backup. Possible values include:
        /// 'Creating', 'Queued', 'Running', 'Deleted', 'Failed',
        /// 'PartialSucceeded', 'Succeeded'
        /// </summary>
        [JsonProperty(PropertyName = "properties.backupInfo.status")]
        public OperationStatus? Status { get; private set; }

        /// <summary>
        /// Gets creation time of the backup.
        /// </summary>
        [JsonProperty(PropertyName = "properties.backupInfo.createdDateTime")]
        public System.DateTime? CreatedDateTime { get; private set; }

        /// <summary>
        /// Gets duration to create the backup.
        /// </summary>
        [JsonProperty(PropertyName = "properties.backupInfo.timeTakenToCreate")]
        public string TimeTakenToCreate { get; private set; }

        /// <summary>
        /// Gets deployment Id of the stamp.
        /// </summary>
        [JsonProperty(PropertyName = "properties.backupInfo.deploymentID")]
        public string DeploymentID { get; private set; }

        /// <summary>
        /// Gets azure Stack stamp version of the backup.
        /// </summary>
        [JsonProperty(PropertyName = "properties.backupInfo.stampVersion")]
        public string StampVersion { get; private set; }

        /// <summary>
        /// Gets OEM version.
        /// </summary>
        [JsonProperty(PropertyName = "properties.backupInfo.oemVersion")]
        public string OemVersion { get; private set; }

        /// <summary>
        /// Gets the thumbprint of the certificate used to encrypt the backup
        /// encryption key.
        /// </summary>
        [JsonProperty(PropertyName = "properties.backupInfo.encryptionCertThumbprint")]
        public string EncryptionCertThumbprint { get; private set; }

    }
}
