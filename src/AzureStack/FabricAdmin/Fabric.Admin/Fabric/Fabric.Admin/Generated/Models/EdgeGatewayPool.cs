// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.AzureStack.Management.Fabric.Admin.Models
{
    using Microsoft.AzureStack;
    using Microsoft.AzureStack.Management;
    using Microsoft.AzureStack.Management.Fabric;
    using Microsoft.AzureStack.Management.Fabric.Admin;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// This resource represents an edge gateway pool, which contains an array
    /// of gateways.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class EdgeGatewayPool : Resource
    {
        /// <summary>
        /// Initializes a new instance of the EdgeGatewayPool class.
        /// </summary>
        public EdgeGatewayPool()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EdgeGatewayPool class.
        /// </summary>
        /// <param name="id">URI of the resource.</param>
        /// <param name="name">Name of the resource.</param>
        /// <param name="type">Type of resource.</param>
        /// <param name="location">Region Location of resource.</param>
        /// <param name="tags">List of key value pairs.</param>
        /// <param name="gatewayType">The gateway type (S2sIPsec, S2sGre,
        /// etc).</param>
        /// <param name="numberOfGateways">The number of gateways in the
        /// pool.</param>
        /// <param name="redundantGatewayCount">The number of redundant
        /// gateways.</param>
        /// <param name="gatewayCapacityKiloBitsPerSecond">Gateway capacity in
        /// kilobits per second.</param>
        /// <param name="publicIpAddress">The public IP address.</param>
        /// <param name="greVipSubnet">The GRE VIP subnet.</param>
        /// <param name="edgeGateways">List of the edge gateways in this
        /// pool.</param>
        public EdgeGatewayPool(string id = default(string), string name = default(string), string type = default(string), string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string gatewayType = default(string), int? numberOfGateways = default(int?), long? redundantGatewayCount = default(long?), int? gatewayCapacityKiloBitsPerSecond = default(int?), string publicIpAddress = default(string), string greVipSubnet = default(string), IList<string> edgeGateways = default(IList<string>))
            : base(id, name, type, location, tags)
        {
            GatewayType = gatewayType;
            NumberOfGateways = numberOfGateways;
            RedundantGatewayCount = redundantGatewayCount;
            GatewayCapacityKiloBitsPerSecond = gatewayCapacityKiloBitsPerSecond;
            PublicIpAddress = publicIpAddress;
            GreVipSubnet = greVipSubnet;
            EdgeGateways = edgeGateways;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the gateway type (S2sIPsec, S2sGre, etc).
        /// </summary>
        [JsonProperty(PropertyName = "properties.gatewayType")]
        public string GatewayType { get; set; }

        /// <summary>
        /// Gets or sets the number of gateways in the pool.
        /// </summary>
        [JsonProperty(PropertyName = "properties.numberOfGateways")]
        public int? NumberOfGateways { get; set; }

        /// <summary>
        /// Gets or sets the number of redundant gateways.
        /// </summary>
        [JsonProperty(PropertyName = "properties.redundantGatewayCount")]
        public long? RedundantGatewayCount { get; set; }

        /// <summary>
        /// Gets or sets gateway capacity in kilobits per second.
        /// </summary>
        [JsonProperty(PropertyName = "properties.gatewayCapacityKiloBitsPerSecond")]
        public int? GatewayCapacityKiloBitsPerSecond { get; set; }

        /// <summary>
        /// Gets or sets the public IP address.
        /// </summary>
        [JsonProperty(PropertyName = "properties.publicIpAddress")]
        public string PublicIpAddress { get; set; }

        /// <summary>
        /// Gets or sets the GRE VIP subnet.
        /// </summary>
        [JsonProperty(PropertyName = "properties.greVipSubnet")]
        public string GreVipSubnet { get; set; }

        /// <summary>
        /// Gets or sets list of the edge gateways in this pool.
        /// </summary>
        [JsonProperty(PropertyName = "properties.edgeGateways")]
        public IList<string> EdgeGateways { get; set; }

    }
}
