// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Search.Models
{
    using System.Linq;

    /// <summary>
    /// Input of check name availability API.
    /// </summary>
    public partial class CheckNameAvailabilityInput
    {
        /// <summary>
        /// Initializes a new instance of the CheckNameAvailabilityInput class.
        /// </summary>
        public CheckNameAvailabilityInput() { }

        /// <summary>
        /// Initializes a new instance of the CheckNameAvailabilityInput class.
        /// </summary>
        /// <param name="name">The Search service name to validate. Search
        /// service names must only contain lowercase letters, digits or
        /// dashes, cannot use dash as the first two or last one characters,
        /// cannot contain consecutive dashes, and must be between 2 and 60
        /// characters in length.</param>
        public CheckNameAvailabilityInput(string name)
        {
            Name = name;
        }
        /// <summary>
        /// Static constructor for CheckNameAvailabilityInput class.
        /// </summary>
        static CheckNameAvailabilityInput()
        {
            Type = "searchServices";
        }

        /// <summary>
        /// Gets or sets the Search service name to validate. Search service
        /// names must only contain lowercase letters, digits or dashes,
        /// cannot use dash as the first two or last one characters, cannot
        /// contain consecutive dashes, and must be between 2 and 60
        /// characters in length.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// The type of the resource whose name is to be validated. This value
        /// must always be 'searchServices'.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public static string Type { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Name");
            }
        }
    }
}
