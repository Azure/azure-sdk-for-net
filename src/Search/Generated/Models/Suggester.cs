// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Hyak.Common;
using Microsoft.Azure.Search.Models;

namespace Microsoft.Azure.Search.Models
{
    /// <summary>
    /// Defines how the Suggest API should apply to a group of fields in the
    /// index.
    /// </summary>
    public partial class Suggester
    {
        private string _name;
        
        /// <summary>
        /// Required. Gets or sets the name of the suggester.
        /// </summary>
        public string Name
        {
            get { return this._name; }
            set { this._name = value; }
        }
        
        private SuggesterSearchMode _searchMode;
        
        /// <summary>
        /// Required. Gets or sets a value indicating the capabilities of the
        /// suggester.
        /// </summary>
        public SuggesterSearchMode SearchMode
        {
            get { return this._searchMode; }
            set { this._searchMode = value; }
        }
        
        private IList<string> _sourceFields;
        
        /// <summary>
        /// Required. Gets the list of field names to which the suggester
        /// applies. Each field must be searchable.
        /// </summary>
        public IList<string> SourceFields
        {
            get { return this._sourceFields; }
            set { this._sourceFields = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the Suggester class.
        /// </summary>
        public Suggester()
        {
            this.SourceFields = new LazyList<string>();
        }
        
        /// <summary>
        /// Initializes a new instance of the Suggester class with required
        /// arguments.
        /// </summary>
        public Suggester(string name, SuggesterSearchMode searchMode, IList<string> sourceFields)
            : this()
        {
            if (name == null)
            {
                throw new ArgumentNullException("name");
            }
            if (sourceFields == null)
            {
                throw new ArgumentNullException("sourceFields");
            }
            this.Name = name;
            this.SearchMode = searchMode;
            this.SourceFields = sourceFields;
        }
    }
}
