// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure;
using Microsoft.Azure.Search;
using Microsoft.Azure.Search.Models;

namespace Microsoft.Azure.Search
{
    /// <summary>
    /// Client that can be used to manage and query indexes and documents on an
    /// Azure Search service.  (see
    /// https://msdn.microsoft.com/library/azure/dn798935.aspx for more
    /// information)
    /// </summary>
    public static partial class DataSourceOperationsExtensions
    {
        /// <summary>
        /// Creates a new Azure Search datasource.  (see
        /// https://msdn.microsoft.com/library/azure/dn946876.aspx for more
        /// information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the Microsoft.Azure.Search.IDataSourceOperations.
        /// </param>
        /// <param name='dataSource'>
        /// Required. The definition of the datasource to create.
        /// </param>
        /// <returns>
        /// Response from a Create, Update, or Get DataSource request. If
        /// successful, it includes the full definition of the datasource that
        /// was created, updated, or retrieved.
        /// </returns>
        public static DataSourceDefinitionResponse Create(this IDataSourceOperations operations, DataSource dataSource)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IDataSourceOperations)s).CreateAsync(dataSource);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Creates a new Azure Search datasource.  (see
        /// https://msdn.microsoft.com/library/azure/dn946876.aspx for more
        /// information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the Microsoft.Azure.Search.IDataSourceOperations.
        /// </param>
        /// <param name='dataSource'>
        /// Required. The definition of the datasource to create.
        /// </param>
        /// <returns>
        /// Response from a Create, Update, or Get DataSource request. If
        /// successful, it includes the full definition of the datasource that
        /// was created, updated, or retrieved.
        /// </returns>
        public static Task<DataSourceDefinitionResponse> CreateAsync(this IDataSourceOperations operations, DataSource dataSource)
        {
            return operations.CreateAsync(dataSource, CancellationToken.None);
        }
        
        /// <summary>
        /// Creates a new Azure Search datasource or updates a datasource if it
        /// already exists.  (see
        /// https://msdn.microsoft.com/library/azure/dn946900.aspx for more
        /// information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the Microsoft.Azure.Search.IDataSourceOperations.
        /// </param>
        /// <param name='dataSource'>
        /// Required. The definition of the datasource to create or update.
        /// </param>
        /// <returns>
        /// Response from a Create, Update, or Get DataSource request. If
        /// successful, it includes the full definition of the datasource that
        /// was created, updated, or retrieved.
        /// </returns>
        public static DataSourceDefinitionResponse CreateOrUpdate(this IDataSourceOperations operations, DataSource dataSource)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IDataSourceOperations)s).CreateOrUpdateAsync(dataSource);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Creates a new Azure Search datasource or updates a datasource if it
        /// already exists.  (see
        /// https://msdn.microsoft.com/library/azure/dn946900.aspx for more
        /// information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the Microsoft.Azure.Search.IDataSourceOperations.
        /// </param>
        /// <param name='dataSource'>
        /// Required. The definition of the datasource to create or update.
        /// </param>
        /// <returns>
        /// Response from a Create, Update, or Get DataSource request. If
        /// successful, it includes the full definition of the datasource that
        /// was created, updated, or retrieved.
        /// </returns>
        public static Task<DataSourceDefinitionResponse> CreateOrUpdateAsync(this IDataSourceOperations operations, DataSource dataSource)
        {
            return operations.CreateOrUpdateAsync(dataSource, CancellationToken.None);
        }
        
        /// <summary>
        /// Deletes an Azure Search datasource.  (see
        /// https://msdn.microsoft.com/library/azure/dn946881.aspx for more
        /// information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the Microsoft.Azure.Search.IDataSourceOperations.
        /// </param>
        /// <param name='dataSourceName'>
        /// Required. The name of the datasource to delete.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static AzureOperationResponse Delete(this IDataSourceOperations operations, string dataSourceName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IDataSourceOperations)s).DeleteAsync(dataSourceName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Deletes an Azure Search datasource.  (see
        /// https://msdn.microsoft.com/library/azure/dn946881.aspx for more
        /// information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the Microsoft.Azure.Search.IDataSourceOperations.
        /// </param>
        /// <param name='dataSourceName'>
        /// Required. The name of the datasource to delete.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<AzureOperationResponse> DeleteAsync(this IDataSourceOperations operations, string dataSourceName)
        {
            return operations.DeleteAsync(dataSourceName, CancellationToken.None);
        }
        
        /// <summary>
        /// Retrieves a datasource definition from Azure Search.  (see
        /// https://msdn.microsoft.com/library/azure/dn946893.aspx for more
        /// information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the Microsoft.Azure.Search.IDataSourceOperations.
        /// </param>
        /// <param name='dataSourceName'>
        /// Required. The name of the datasource to retrieve.
        /// </param>
        /// <returns>
        /// Response from a Create, Update, or Get DataSource request. If
        /// successful, it includes the full definition of the datasource that
        /// was created, updated, or retrieved.
        /// </returns>
        public static DataSourceDefinitionResponse Get(this IDataSourceOperations operations, string dataSourceName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IDataSourceOperations)s).GetAsync(dataSourceName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Retrieves a datasource definition from Azure Search.  (see
        /// https://msdn.microsoft.com/library/azure/dn946893.aspx for more
        /// information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the Microsoft.Azure.Search.IDataSourceOperations.
        /// </param>
        /// <param name='dataSourceName'>
        /// Required. The name of the datasource to retrieve.
        /// </param>
        /// <returns>
        /// Response from a Create, Update, or Get DataSource request. If
        /// successful, it includes the full definition of the datasource that
        /// was created, updated, or retrieved.
        /// </returns>
        public static Task<DataSourceDefinitionResponse> GetAsync(this IDataSourceOperations operations, string dataSourceName)
        {
            return operations.GetAsync(dataSourceName, CancellationToken.None);
        }
        
        /// <summary>
        /// Lists all datasources available for an Azure Search service.  (see
        /// https://msdn.microsoft.com/library/azure/dn946878.aspx for more
        /// information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the Microsoft.Azure.Search.IDataSourceOperations.
        /// </param>
        /// <returns>
        /// Response from a List Datasources request. If successful, it
        /// includes the full definitions of all datasources.
        /// </returns>
        public static DataSourceListResponse List(this IDataSourceOperations operations)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IDataSourceOperations)s).ListAsync();
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Lists all datasources available for an Azure Search service.  (see
        /// https://msdn.microsoft.com/library/azure/dn946878.aspx for more
        /// information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the Microsoft.Azure.Search.IDataSourceOperations.
        /// </param>
        /// <returns>
        /// Response from a List Datasources request. If successful, it
        /// includes the full definitions of all datasources.
        /// </returns>
        public static Task<DataSourceListResponse> ListAsync(this IDataSourceOperations operations)
        {
            return operations.ListAsync(CancellationToken.None);
        }
    }
}
