// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Search.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for StemmerTokenFilterLanguage.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum StemmerTokenFilterLanguage
    {
        [EnumMember(Value = "arabic")]
        Arabic,
        [EnumMember(Value = "armenian")]
        Armenian,
        [EnumMember(Value = "basque")]
        Basque,
        [EnumMember(Value = "brazilian")]
        Brazilian,
        [EnumMember(Value = "bulgarian")]
        Bulgarian,
        [EnumMember(Value = "catalan")]
        Catalan,
        [EnumMember(Value = "czech")]
        Czech,
        [EnumMember(Value = "danish")]
        Danish,
        [EnumMember(Value = "dutch")]
        Dutch,
        [EnumMember(Value = "dutchKp")]
        DutchKp,
        [EnumMember(Value = "english")]
        English,
        [EnumMember(Value = "lightEnglish")]
        LightEnglish,
        [EnumMember(Value = "minimalEnglish")]
        MinimalEnglish,
        [EnumMember(Value = "possessiveEnglish")]
        PossessiveEnglish,
        [EnumMember(Value = "porter2")]
        Porter2,
        [EnumMember(Value = "lovins")]
        Lovins,
        [EnumMember(Value = "finnish")]
        Finnish,
        [EnumMember(Value = "lightFinnish")]
        LightFinnish,
        [EnumMember(Value = "french")]
        French,
        [EnumMember(Value = "lightFrench")]
        LightFrench,
        [EnumMember(Value = "minimalFrench")]
        MinimalFrench,
        [EnumMember(Value = "galician")]
        Galician,
        [EnumMember(Value = "minimalGalician")]
        MinimalGalician,
        [EnumMember(Value = "german")]
        German,
        [EnumMember(Value = "german2")]
        German2,
        [EnumMember(Value = "lightGerman")]
        LightGerman,
        [EnumMember(Value = "minimalGerman")]
        MinimalGerman,
        [EnumMember(Value = "greek")]
        Greek,
        [EnumMember(Value = "hindi")]
        Hindi,
        [EnumMember(Value = "hungarian")]
        Hungarian,
        [EnumMember(Value = "lightHungarian")]
        LightHungarian,
        [EnumMember(Value = "indonesian")]
        Indonesian,
        [EnumMember(Value = "irish")]
        Irish,
        [EnumMember(Value = "italian")]
        Italian,
        [EnumMember(Value = "light_italian")]
        LightItalian,
        [EnumMember(Value = "sorani")]
        Sorani,
        [EnumMember(Value = "latvian")]
        Latvian,
        [EnumMember(Value = "norwegian")]
        Norwegian,
        [EnumMember(Value = "lightNorwegian")]
        LightNorwegian,
        [EnumMember(Value = "minimalNorwegian")]
        MinimalNorwegian,
        [EnumMember(Value = "lightNynorsk")]
        LightNynorsk,
        [EnumMember(Value = "minimalNynorsk")]
        MinimalNynorsk,
        [EnumMember(Value = "portuguese")]
        Portuguese,
        [EnumMember(Value = "lightPortuguese")]
        LightPortuguese,
        [EnumMember(Value = "minimalPortuguese")]
        MinimalPortuguese,
        [EnumMember(Value = "portugueseRslp")]
        PortugueseRslp,
        [EnumMember(Value = "romanian")]
        Romanian,
        [EnumMember(Value = "russian")]
        Russian,
        [EnumMember(Value = "lightRussian")]
        LightRussian,
        [EnumMember(Value = "spanish")]
        Spanish,
        [EnumMember(Value = "lightSpanish")]
        LightSpanish,
        [EnumMember(Value = "swedish")]
        Swedish,
        [EnumMember(Value = "lightSwedish")]
        LightSwedish,
        [EnumMember(Value = "turkish")]
        Turkish
    }
}
