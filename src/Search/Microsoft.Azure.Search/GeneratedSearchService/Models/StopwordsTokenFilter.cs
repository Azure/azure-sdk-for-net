// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Search.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// Removes stop words from a token stream. This token filter is
    /// implemented using Apache Lucene.
    /// <see href="http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/StopFilter.html" />
    /// </summary>
    [JsonObject("#Microsoft.Azure.Search.StopwordsTokenFilter")]
    public partial class StopwordsTokenFilter : TokenFilter
    {
        /// <summary>
        /// Initializes a new instance of the StopwordsTokenFilter class.
        /// </summary>
        public StopwordsTokenFilter() { }

        /// <summary>
        /// Initializes a new instance of the StopwordsTokenFilter class.
        /// </summary>
        public StopwordsTokenFilter(string name, IList<string> stopwords = default(IList<string>), StopwordsList? stopwordsList = default(StopwordsList?), bool? ignoreCase = default(bool?), bool? removeTrailingStopWords = default(bool?))
            : base(name)
        {
            Stopwords = stopwords;
            StopwordsList = stopwordsList;
            IgnoreCase = ignoreCase;
            RemoveTrailingStopWords = removeTrailingStopWords;
        }

        /// <summary>
        /// Gets or sets the list of stopwords. This property and the
        /// stopwords list property cannot both be set.
        /// </summary>
        [JsonProperty(PropertyName = "stopwords")]
        public IList<string> Stopwords { get; set; }

        /// <summary>
        /// Gets or sets a predefined list of stopwords to use. This property
        /// and the stopwords property cannot both be set. Default is
        /// English. Possible values include: 'arabic', 'armenian', 'basque',
        /// 'brazilian', 'bulgarian', 'catalan', 'czech', 'danish', 'dutch',
        /// 'english', 'finnish', 'french', 'galician', 'german', 'greek',
        /// 'hindi', 'hungarian', 'indonesian', 'irish', 'italian',
        /// 'latvian', 'norwegian', 'persian', 'portuguese', 'romanian',
        /// 'russian', 'sorani', 'spanish', 'swedish', 'thai', 'turkish'
        /// </summary>
        [JsonProperty(PropertyName = "stopwordsList")]
        public StopwordsList? StopwordsList { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether to ignore case. If true,
        /// all words are converted to lower case first. Default is false.
        /// </summary>
        [JsonProperty(PropertyName = "ignoreCase")]
        public bool? IgnoreCase { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether to ignore the last search
        /// term if it's a stop word. Default is true.
        /// </summary>
        [JsonProperty(PropertyName = "removeTrailing")]
        public bool? RemoveTrailingStopWords { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
