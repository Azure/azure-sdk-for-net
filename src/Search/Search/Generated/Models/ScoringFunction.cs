// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using Microsoft.Azure.Search.Models;

namespace Microsoft.Azure.Search.Models
{
    /// <summary>
    /// Abstract base class for functions that can modify document scores
    /// during ranking.  (see
    /// https://msdn.microsoft.com/library/azure/dn798928.aspx for more
    /// information)
    /// </summary>
    public abstract partial class ScoringFunction
    {
        private double _boost;
        
        /// <summary>
        /// Required. Gets or sets a multiplier for the raw score. Must be a
        /// positive number not equal to 1.0.
        /// </summary>
        public double Boost
        {
            get { return this._boost; }
            set { this._boost = value; }
        }
        
        private string _fieldName;
        
        /// <summary>
        /// Required. Gets or sets the name of the field used as input to the
        /// scoring function.
        /// </summary>
        public string FieldName
        {
            get { return this._fieldName; }
            set { this._fieldName = value; }
        }
        
        private ScoringFunctionInterpolation _interpolation;
        
        /// <summary>
        /// Optional. Gets or sets a value indicating how boosting will be
        /// interpolated across document scores; defaults to "Linear".
        /// </summary>
        public ScoringFunctionInterpolation Interpolation
        {
            get { return this._interpolation; }
            set { this._interpolation = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the ScoringFunction class.
        /// </summary>
        public ScoringFunction()
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the ScoringFunction class with
        /// required arguments.
        /// </summary>
        public ScoringFunction(string fieldName, double boost)
            : this()
        {
            if (fieldName == null)
            {
                throw new ArgumentNullException("fieldName");
            }
            this.FieldName = fieldName;
            this.Boost = boost;
        }
    }
}
