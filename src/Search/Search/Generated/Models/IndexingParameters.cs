// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;

namespace Microsoft.Azure.Search.Models
{
    /// <summary>
    /// Represents parameters for indexer execution.
    /// </summary>
    public partial class IndexingParameters
    {
        private bool _base64EncodeKeys;
        
        /// <summary>
        /// Optional. Gets or sets whether indexer will base64-encode all
        /// values that are inserted into key field of the target index. This
        /// is needed if keys can contain characters that are invalid in keys
        /// (such as dot '.'). Default is false.
        /// </summary>
        public bool Base64EncodeKeys
        {
            get { return this._base64EncodeKeys; }
            set { this._base64EncodeKeys = value; }
        }
        
        private int _maxFailedItems;
        
        /// <summary>
        /// Optional. Gets or sets the maximum number of items that can fail
        /// indexing for indexer execution to still be considered successful.
        /// -1 means no limit. Default is 0.
        /// </summary>
        public int MaxFailedItems
        {
            get { return this._maxFailedItems; }
            set { this._maxFailedItems = value; }
        }
        
        private int _maxFailedItemsPerBatch;
        
        /// <summary>
        /// Optional. Gets or sets the maximum number of items in a single
        /// batch that can fail indexing for the batch to still be considered
        /// successful. -1 means no limit. Default is 0.
        /// </summary>
        public int MaxFailedItemsPerBatch
        {
            get { return this._maxFailedItemsPerBatch; }
            set { this._maxFailedItemsPerBatch = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the IndexingParameters class.
        /// </summary>
        public IndexingParameters()
        {
            this.MaxFailedItems = 0;
            this.MaxFailedItemsPerBatch = 0;
            this.Base64EncodeKeys = false;
        }
    }
}
