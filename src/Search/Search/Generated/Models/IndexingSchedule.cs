// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;

namespace Microsoft.Azure.Search.Models
{
    /// <summary>
    /// Represents a schedule for indexer execution.
    /// </summary>
    public partial class IndexingSchedule
    {
        private TimeSpan _interval;
        
        /// <summary>
        /// Required. Gets or sets the interval of time between indexer
        /// executions.
        /// </summary>
        public TimeSpan Interval
        {
            get { return this._interval; }
            set { this._interval = value; }
        }
        
        private DateTimeOffset _startTime;
        
        /// <summary>
        /// Required. Gets or sets the time when an indexer should start
        /// running.
        /// </summary>
        public DateTimeOffset StartTime
        {
            get { return this._startTime; }
            set { this._startTime = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the IndexingSchedule class.
        /// </summary>
        public IndexingSchedule()
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the IndexingSchedule class with
        /// required arguments.
        /// </summary>
        public IndexingSchedule(TimeSpan interval, DateTimeOffset startTime)
            : this()
        {
            this.Interval = interval;
            this.StartTime = startTime;
        }
    }
}
