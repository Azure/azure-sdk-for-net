// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;

namespace Microsoft.Azure.Search.Models
{
    /// <summary>
    /// Provides parameter values to a tag scoring function.
    /// </summary>
    public partial class TagScoringParameters
    {
        private string _tagsParameter;
        
        /// <summary>
        /// Required. Gets or sets the name of the parameter passed in search
        /// queries to specify the list of tags to compare against the target
        /// field.
        /// </summary>
        public string TagsParameter
        {
            get { return this._tagsParameter; }
            set { this._tagsParameter = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the TagScoringParameters class.
        /// </summary>
        public TagScoringParameters()
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the TagScoringParameters class with
        /// required arguments.
        /// </summary>
        public TagScoringParameters(string tagsParameter)
            : this()
        {
            if (tagsParameter == null)
            {
                throw new ArgumentNullException("tagsParameter");
            }
            this.TagsParameter = tagsParameter;
        }
    }
}
