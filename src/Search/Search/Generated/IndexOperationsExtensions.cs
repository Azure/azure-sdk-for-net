// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure;
using Microsoft.Azure.Search;
using Microsoft.Azure.Search.Models;

namespace Microsoft.Azure.Search
{
    /// <summary>
    /// Client that can be used to manage and query indexes and documents on an
    /// Azure Search service.  (see
    /// https://msdn.microsoft.com/library/azure/dn798935.aspx for more
    /// information)
    /// </summary>
    public static partial class IndexOperationsExtensions
    {
        /// <summary>
        /// Creates a new Azure Search index.  (see
        /// https://msdn.microsoft.com/library/azure/dn798941.aspx for more
        /// information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the Microsoft.Azure.Search.IIndexOperations.
        /// </param>
        /// <param name='index'>
        /// Required. The definition of the index to create.
        /// </param>
        /// <returns>
        /// Response from a Create, Update, or Get Index request. If
        /// successful, it includes the full definition of the index that was
        /// created, updated, or retrieved.
        /// </returns>
        public static IndexDefinitionResponse Create(this IIndexOperations operations, Index index)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IIndexOperations)s).CreateAsync(index);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Creates a new Azure Search index.  (see
        /// https://msdn.microsoft.com/library/azure/dn798941.aspx for more
        /// information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the Microsoft.Azure.Search.IIndexOperations.
        /// </param>
        /// <param name='index'>
        /// Required. The definition of the index to create.
        /// </param>
        /// <returns>
        /// Response from a Create, Update, or Get Index request. If
        /// successful, it includes the full definition of the index that was
        /// created, updated, or retrieved.
        /// </returns>
        public static Task<IndexDefinitionResponse> CreateAsync(this IIndexOperations operations, Index index)
        {
            return operations.CreateAsync(index, CancellationToken.None);
        }
        
        /// <summary>
        /// Creates a new Azure Search index or updates an index if it already
        /// exists.  (see
        /// https://msdn.microsoft.com/library/azure/dn800964.aspx for more
        /// information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the Microsoft.Azure.Search.IIndexOperations.
        /// </param>
        /// <param name='index'>
        /// Required. The definition of the index to create or update.
        /// </param>
        /// <returns>
        /// Response from a Create, Update, or Get Index request. If
        /// successful, it includes the full definition of the index that was
        /// created, updated, or retrieved.
        /// </returns>
        public static IndexDefinitionResponse CreateOrUpdate(this IIndexOperations operations, Index index)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IIndexOperations)s).CreateOrUpdateAsync(index);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Creates a new Azure Search index or updates an index if it already
        /// exists.  (see
        /// https://msdn.microsoft.com/library/azure/dn800964.aspx for more
        /// information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the Microsoft.Azure.Search.IIndexOperations.
        /// </param>
        /// <param name='index'>
        /// Required. The definition of the index to create or update.
        /// </param>
        /// <returns>
        /// Response from a Create, Update, or Get Index request. If
        /// successful, it includes the full definition of the index that was
        /// created, updated, or retrieved.
        /// </returns>
        public static Task<IndexDefinitionResponse> CreateOrUpdateAsync(this IIndexOperations operations, Index index)
        {
            return operations.CreateOrUpdateAsync(index, CancellationToken.None);
        }
        
        /// <summary>
        /// Deletes an Azure Search index and all the documents it contains.
        /// (see https://msdn.microsoft.com/library/azure/dn798926.aspx for
        /// more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the Microsoft.Azure.Search.IIndexOperations.
        /// </param>
        /// <param name='indexName'>
        /// Required. The name of the index to delete.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static AzureOperationResponse Delete(this IIndexOperations operations, string indexName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IIndexOperations)s).DeleteAsync(indexName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Deletes an Azure Search index and all the documents it contains.
        /// (see https://msdn.microsoft.com/library/azure/dn798926.aspx for
        /// more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the Microsoft.Azure.Search.IIndexOperations.
        /// </param>
        /// <param name='indexName'>
        /// Required. The name of the index to delete.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<AzureOperationResponse> DeleteAsync(this IIndexOperations operations, string indexName)
        {
            return operations.DeleteAsync(indexName, CancellationToken.None);
        }
        
        /// <summary>
        /// Retrieves an index definition from Azure Search.  (see
        /// https://msdn.microsoft.com/library/azure/dn798939.aspx for more
        /// information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the Microsoft.Azure.Search.IIndexOperations.
        /// </param>
        /// <param name='indexName'>
        /// Required. The name of the index to retrieve.
        /// </param>
        /// <returns>
        /// Response from a Create, Update, or Get Index request. If
        /// successful, it includes the full definition of the index that was
        /// created, updated, or retrieved.
        /// </returns>
        public static IndexDefinitionResponse Get(this IIndexOperations operations, string indexName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IIndexOperations)s).GetAsync(indexName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Retrieves an index definition from Azure Search.  (see
        /// https://msdn.microsoft.com/library/azure/dn798939.aspx for more
        /// information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the Microsoft.Azure.Search.IIndexOperations.
        /// </param>
        /// <param name='indexName'>
        /// Required. The name of the index to retrieve.
        /// </param>
        /// <returns>
        /// Response from a Create, Update, or Get Index request. If
        /// successful, it includes the full definition of the index that was
        /// created, updated, or retrieved.
        /// </returns>
        public static Task<IndexDefinitionResponse> GetAsync(this IIndexOperations operations, string indexName)
        {
            return operations.GetAsync(indexName, CancellationToken.None);
        }
        
        /// <summary>
        /// Returns statistics for the given index, including a document count
        /// and storage usage.  (see
        /// https://msdn.microsoft.com/library/azure/dn798942.aspx for more
        /// information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the Microsoft.Azure.Search.IIndexOperations.
        /// </param>
        /// <param name='indexName'>
        /// Required. The name of the index for which to retrieve statistics.
        /// </param>
        /// <returns>
        /// Statistics for a given index. Statistics are collected periodically
        /// and are not guaranteed to always be up-to-date.
        /// </returns>
        public static IndexGetStatisticsResponse GetStatistics(this IIndexOperations operations, string indexName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IIndexOperations)s).GetStatisticsAsync(indexName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Returns statistics for the given index, including a document count
        /// and storage usage.  (see
        /// https://msdn.microsoft.com/library/azure/dn798942.aspx for more
        /// information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the Microsoft.Azure.Search.IIndexOperations.
        /// </param>
        /// <param name='indexName'>
        /// Required. The name of the index for which to retrieve statistics.
        /// </param>
        /// <returns>
        /// Statistics for a given index. Statistics are collected periodically
        /// and are not guaranteed to always be up-to-date.
        /// </returns>
        public static Task<IndexGetStatisticsResponse> GetStatisticsAsync(this IIndexOperations operations, string indexName)
        {
            return operations.GetStatisticsAsync(indexName, CancellationToken.None);
        }
        
        /// <summary>
        /// Lists all indexes available for an Azure Search service.  (see
        /// https://msdn.microsoft.com/library/azure/dn798923.aspx for more
        /// information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the Microsoft.Azure.Search.IIndexOperations.
        /// </param>
        /// <returns>
        /// Response from a List Indexes request. If successful, it includes
        /// the full definitions of all indexes.
        /// </returns>
        public static IndexListResponse List(this IIndexOperations operations)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IIndexOperations)s).ListAsync();
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Lists all indexes available for an Azure Search service.  (see
        /// https://msdn.microsoft.com/library/azure/dn798923.aspx for more
        /// information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the Microsoft.Azure.Search.IIndexOperations.
        /// </param>
        /// <returns>
        /// Response from a List Indexes request. If successful, it includes
        /// the full definitions of all indexes.
        /// </returns>
        public static Task<IndexListResponse> ListAsync(this IIndexOperations operations)
        {
            return operations.ListAsync(CancellationToken.None);
        }
    }
}
