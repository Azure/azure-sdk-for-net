// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;

namespace Microsoft.WindowsAzure.Management.ExpressRoute.Models
{
    /// <summary>
    /// Update Border Gateway Protocol Peering Operation Parameters.
    /// </summary>
    public partial class BorderGatewayProtocolPeeringUpdateParameters
    {
        private string _advertisedPublicPrefixes;
        
        /// <summary>
        /// Optional. Specifies a comma separated list of public prefixes that
        /// the customer would like to announce over the peering.
        /// </summary>
        public string AdvertisedPublicPrefixes
        {
            get { return this._advertisedPublicPrefixes; }
            set { this._advertisedPublicPrefixes = value; }
        }
        
        private string _advertisedPublicPrefixesIpv6;
        
        /// <summary>
        /// Optional. Specifies a comma separated list of Ipv6 public prefixes
        /// that the customer would like to announce over the peering.
        /// </summary>
        public string AdvertisedPublicPrefixesIpv6
        {
            get { return this._advertisedPublicPrefixesIpv6; }
            set { this._advertisedPublicPrefixesIpv6 = value; }
        }
        
        private uint _customerAutonomousSystemNumber;
        
        /// <summary>
        /// Optional. Specifies the numeric identifier of the public autonomous
        /// system (AS) in which the device of the customer is configured.
        /// </summary>
        public uint CustomerAutonomousSystemNumber
        {
            get { return this._customerAutonomousSystemNumber; }
            set { this._customerAutonomousSystemNumber = value; }
        }
        
        private uint _customerAutonomousSystemNumberIpv6;
        
        /// <summary>
        /// Optional. Specifies the numeric identifier of the public autonomous
        /// system (AS) in which the device of the customer is configured for
        /// Ipv6.
        /// </summary>
        public uint CustomerAutonomousSystemNumberIpv6
        {
            get { return this._customerAutonomousSystemNumberIpv6; }
            set { this._customerAutonomousSystemNumberIpv6 = value; }
        }
        
        private uint _peerAutonomousSystemNumber;
        
        /// <summary>
        /// Optional. Specifies the numeric identifier of the public autonomous
        /// system (AS) in which the device of the service provider is
        /// configured.
        /// </summary>
        public uint PeerAutonomousSystemNumber
        {
            get { return this._peerAutonomousSystemNumber; }
            set { this._peerAutonomousSystemNumber = value; }
        }
        
        private string _primaryPeerSubnet;
        
        /// <summary>
        /// Optional. Specifies the subnet addresses of the interface to be
        /// used for establishing the BGP session on the primary port.
        /// </summary>
        public string PrimaryPeerSubnet
        {
            get { return this._primaryPeerSubnet; }
            set { this._primaryPeerSubnet = value; }
        }
        
        private string _primaryPeerSubnetIpv6;
        
        /// <summary>
        /// Optional. Specifies the subnet addresses of the interface to be
        /// used for establishing the Ipv6 BGP session on the primary port.
        /// </summary>
        public string PrimaryPeerSubnetIpv6
        {
            get { return this._primaryPeerSubnetIpv6; }
            set { this._primaryPeerSubnetIpv6 = value; }
        }
        
        private string _routingRegistryName;
        
        /// <summary>
        /// Optional. Specifies the Routing Registry to look up to validate the
        /// prefixes specified in AdvertisedPublicPrefixes
        /// </summary>
        public string RoutingRegistryName
        {
            get { return this._routingRegistryName; }
            set { this._routingRegistryName = value; }
        }
        
        private string _routingRegistryNameIpv6;
        
        /// <summary>
        /// Optional. Specifies the Routing Registry to look up to validate the
        /// prefixes specified in AdvertisedPublicPrefixesIpv6
        /// </summary>
        public string RoutingRegistryNameIpv6
        {
            get { return this._routingRegistryNameIpv6; }
            set { this._routingRegistryNameIpv6 = value; }
        }
        
        private string _secondaryPeerSubnet;
        
        /// <summary>
        /// Optional. Specifies the subnet addresses of the interface to be
        /// used for establishing the BGP session on the secondary port.
        /// </summary>
        public string SecondaryPeerSubnet
        {
            get { return this._secondaryPeerSubnet; }
            set { this._secondaryPeerSubnet = value; }
        }
        
        private string _secondaryPeerSubnetIpv6;
        
        /// <summary>
        /// Optional. Specifies the subnet addresses of the interface to be
        /// used for establishing the Ipv6 BGP session on the secondary port.
        /// </summary>
        public string SecondaryPeerSubnetIpv6
        {
            get { return this._secondaryPeerSubnetIpv6; }
            set { this._secondaryPeerSubnetIpv6 = value; }
        }
        
        private string _sharedKey;
        
        /// <summary>
        /// Optional. Specifies the shared MD5 key that is to be used for
        /// authorization.
        /// </summary>
        public string SharedKey
        {
            get { return this._sharedKey; }
            set { this._sharedKey = value; }
        }
        
        private uint _virtualLanId;
        
        /// <summary>
        /// Optional. Specifies the identifier that is used to identify the
        /// customer.
        /// </summary>
        public uint VirtualLanId
        {
            get { return this._virtualLanId; }
            set { this._virtualLanId = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the
        /// BorderGatewayProtocolPeeringUpdateParameters class.
        /// </summary>
        public BorderGatewayProtocolPeeringUpdateParameters()
        {
        }
    }
}
