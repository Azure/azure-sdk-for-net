// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.WindowsAzure.Management.ExpressRoute;
using Microsoft.WindowsAzure.Management.ExpressRoute.Models;

namespace Microsoft.WindowsAzure.Management.ExpressRoute
{
    /// <summary>
    /// The Express Route API provides programmatic access to the functionality
    /// needed by the customer to set up Dedicated Circuits and Dedicated
    /// Circuit Links. The Express Route Customer API is a REST API. All API
    /// operations are performed over SSL and mutually authenticated using
    /// X.509 v3 certificates.  (see
    /// http://msdn.microsoft.com/en-us/library/windowsazure/ee460799.aspx for
    /// more information)
    /// </summary>
    public static partial class BorderGatewayProtocolPeeringOperationsExtensions
    {
        /// <summary>
        /// The New Border Gateway Protocol Peering operation creates a new
        /// Border Gateway Protocol Peering
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.ExpressRoute.IBorderGatewayProtocolPeeringOperations.
        /// </param>
        /// <param name='serviceKey'>
        /// Required. The service key representing the relationship between
        /// Azure and the customer.
        /// </param>
        /// <param name='accessType'>
        /// Required. Whether the peering is private or public.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the New Border Gateway Protocol
        /// Peering operation.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static ExpressRouteOperationResponse BeginNew(this IBorderGatewayProtocolPeeringOperations operations, string serviceKey, BgpPeeringAccessType accessType, BorderGatewayProtocolPeeringNewParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IBorderGatewayProtocolPeeringOperations)s).BeginNewAsync(serviceKey, accessType, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// The New Border Gateway Protocol Peering operation creates a new
        /// Border Gateway Protocol Peering
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.ExpressRoute.IBorderGatewayProtocolPeeringOperations.
        /// </param>
        /// <param name='serviceKey'>
        /// Required. The service key representing the relationship between
        /// Azure and the customer.
        /// </param>
        /// <param name='accessType'>
        /// Required. Whether the peering is private or public.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the New Border Gateway Protocol
        /// Peering operation.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<ExpressRouteOperationResponse> BeginNewAsync(this IBorderGatewayProtocolPeeringOperations operations, string serviceKey, BgpPeeringAccessType accessType, BorderGatewayProtocolPeeringNewParameters parameters)
        {
            return operations.BeginNewAsync(serviceKey, accessType, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// The Remove Border Gateway Protocol Peering operation deletes an
        /// existing border gateway protocol peering.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.ExpressRoute.IBorderGatewayProtocolPeeringOperations.
        /// </param>
        /// <param name='serviceKey'>
        /// Required. Service Key representing the border gateway protocol
        /// peering to be deleted.
        /// </param>
        /// <param name='accessType'>
        /// Required. Whether the peering is private or public.
        /// </param>
        /// <param name='peerAddressType'>
        /// Required. Whether the BGP Peer Address Type to deleted is IPv4,
        /// IPv6 or All.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static ExpressRouteOperationResponse BeginRemove(this IBorderGatewayProtocolPeeringOperations operations, string serviceKey, BgpPeeringAccessType accessType, BgpPeerAddressType peerAddressType)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IBorderGatewayProtocolPeeringOperations)s).BeginRemoveAsync(serviceKey, accessType, peerAddressType);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// The Remove Border Gateway Protocol Peering operation deletes an
        /// existing border gateway protocol peering.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.ExpressRoute.IBorderGatewayProtocolPeeringOperations.
        /// </param>
        /// <param name='serviceKey'>
        /// Required. Service Key representing the border gateway protocol
        /// peering to be deleted.
        /// </param>
        /// <param name='accessType'>
        /// Required. Whether the peering is private or public.
        /// </param>
        /// <param name='peerAddressType'>
        /// Required. Whether the BGP Peer Address Type to deleted is IPv4,
        /// IPv6 or All.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<ExpressRouteOperationResponse> BeginRemoveAsync(this IBorderGatewayProtocolPeeringOperations operations, string serviceKey, BgpPeeringAccessType accessType, BgpPeerAddressType peerAddressType)
        {
            return operations.BeginRemoveAsync(serviceKey, accessType, peerAddressType, CancellationToken.None);
        }
        
        /// <summary>
        /// The Update Border Gateway Protocol Peering operation updates an
        /// existing bgp peering.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.ExpressRoute.IBorderGatewayProtocolPeeringOperations.
        /// </param>
        /// <param name='serviceKey'>
        /// Required. The service key representing the relationship between
        /// Azure and the customer.
        /// </param>
        /// <param name='accessType'>
        /// Required. Whether the peering is private or public.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the Update Border Gateway Protocol
        /// Peering operation.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static ExpressRouteOperationResponse BeginUpdate(this IBorderGatewayProtocolPeeringOperations operations, string serviceKey, BgpPeeringAccessType accessType, BorderGatewayProtocolPeeringUpdateParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IBorderGatewayProtocolPeeringOperations)s).BeginUpdateAsync(serviceKey, accessType, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// The Update Border Gateway Protocol Peering operation updates an
        /// existing bgp peering.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.ExpressRoute.IBorderGatewayProtocolPeeringOperations.
        /// </param>
        /// <param name='serviceKey'>
        /// Required. The service key representing the relationship between
        /// Azure and the customer.
        /// </param>
        /// <param name='accessType'>
        /// Required. Whether the peering is private or public.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the Update Border Gateway Protocol
        /// Peering operation.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<ExpressRouteOperationResponse> BeginUpdateAsync(this IBorderGatewayProtocolPeeringOperations operations, string serviceKey, BgpPeeringAccessType accessType, BorderGatewayProtocolPeeringUpdateParameters parameters)
        {
            return operations.BeginUpdateAsync(serviceKey, accessType, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// The Get Border Gateway Protocol Peering operation retrieves the bgp
        /// peering for the dedicated circuit with the specified service key.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.ExpressRoute.IBorderGatewayProtocolPeeringOperations.
        /// </param>
        /// <param name='serviceKey'>
        /// Required. The servicee key representing the dedicated circuit.
        /// </param>
        /// <param name='accessType'>
        /// Required. Whether the peering is private or public.
        /// </param>
        /// <returns>
        /// The Get Border Gateway Protocol Peering Operation Response.
        /// </returns>
        public static BorderGatewayProtocolPeeringGetResponse Get(this IBorderGatewayProtocolPeeringOperations operations, string serviceKey, BgpPeeringAccessType accessType)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IBorderGatewayProtocolPeeringOperations)s).GetAsync(serviceKey, accessType);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// The Get Border Gateway Protocol Peering operation retrieves the bgp
        /// peering for the dedicated circuit with the specified service key.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.ExpressRoute.IBorderGatewayProtocolPeeringOperations.
        /// </param>
        /// <param name='serviceKey'>
        /// Required. The servicee key representing the dedicated circuit.
        /// </param>
        /// <param name='accessType'>
        /// Required. Whether the peering is private or public.
        /// </param>
        /// <returns>
        /// The Get Border Gateway Protocol Peering Operation Response.
        /// </returns>
        public static Task<BorderGatewayProtocolPeeringGetResponse> GetAsync(this IBorderGatewayProtocolPeeringOperations operations, string serviceKey, BgpPeeringAccessType accessType)
        {
            return operations.GetAsync(serviceKey, accessType, CancellationToken.None);
        }
        
        /// <summary>
        /// The Get Express Route operation status gets information on the
        /// status of Express Route operations in Windows Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154112.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.ExpressRoute.IBorderGatewayProtocolPeeringOperations.
        /// </param>
        /// <param name='operationId'>
        /// Required. The id  of the operation.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself.  If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request.  If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        public static ExpressRouteOperationStatusResponse GetOperationStatus(this IBorderGatewayProtocolPeeringOperations operations, string operationId)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IBorderGatewayProtocolPeeringOperations)s).GetOperationStatusAsync(operationId);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// The Get Express Route operation status gets information on the
        /// status of Express Route operations in Windows Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154112.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.ExpressRoute.IBorderGatewayProtocolPeeringOperations.
        /// </param>
        /// <param name='operationId'>
        /// Required. The id  of the operation.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself.  If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request.  If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        public static Task<ExpressRouteOperationStatusResponse> GetOperationStatusAsync(this IBorderGatewayProtocolPeeringOperations operations, string operationId)
        {
            return operations.GetOperationStatusAsync(operationId, CancellationToken.None);
        }
        
        /// <summary>
        /// The New Border Gateway Protocol Peering operation creates a new
        /// border gateway protocol peering associated with the dedicated
        /// circuit specified by the service key provided.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.ExpressRoute.IBorderGatewayProtocolPeeringOperations.
        /// </param>
        /// <param name='serviceKey'>
        /// Required. The service key representing the relationship between
        /// Azure and the customer.
        /// </param>
        /// <param name='accessType'>
        /// Required. Whether the peering is private or public.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the New Bgp Peering operation.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself.  If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request.  If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        public static ExpressRouteOperationStatusResponse New(this IBorderGatewayProtocolPeeringOperations operations, string serviceKey, BgpPeeringAccessType accessType, BorderGatewayProtocolPeeringNewParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IBorderGatewayProtocolPeeringOperations)s).NewAsync(serviceKey, accessType, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// The New Border Gateway Protocol Peering operation creates a new
        /// border gateway protocol peering associated with the dedicated
        /// circuit specified by the service key provided.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.ExpressRoute.IBorderGatewayProtocolPeeringOperations.
        /// </param>
        /// <param name='serviceKey'>
        /// Required. The service key representing the relationship between
        /// Azure and the customer.
        /// </param>
        /// <param name='accessType'>
        /// Required. Whether the peering is private or public.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the New Bgp Peering operation.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself.  If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request.  If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        public static Task<ExpressRouteOperationStatusResponse> NewAsync(this IBorderGatewayProtocolPeeringOperations operations, string serviceKey, BgpPeeringAccessType accessType, BorderGatewayProtocolPeeringNewParameters parameters)
        {
            return operations.NewAsync(serviceKey, accessType, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// The Remove Border Gateway Protocol Peering operation deletes an
        /// existing border gateway protocol peering.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.ExpressRoute.IBorderGatewayProtocolPeeringOperations.
        /// </param>
        /// <param name='serviceKey'>
        /// Required. Service key associated with the border gateway protocol
        /// peering to be deleted.
        /// </param>
        /// <param name='accessType'>
        /// Required. Whether the peering is private or public.
        /// </param>
        /// <param name='peerAddressType'>
        /// Required. Whether the BGP Peer Address Type to deleted is IPv4,
        /// IPv6 or All.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself.  If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request.  If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        public static ExpressRouteOperationStatusResponse Remove(this IBorderGatewayProtocolPeeringOperations operations, string serviceKey, BgpPeeringAccessType accessType, BgpPeerAddressType peerAddressType)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IBorderGatewayProtocolPeeringOperations)s).RemoveAsync(serviceKey, accessType, peerAddressType);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// The Remove Border Gateway Protocol Peering operation deletes an
        /// existing border gateway protocol peering.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.ExpressRoute.IBorderGatewayProtocolPeeringOperations.
        /// </param>
        /// <param name='serviceKey'>
        /// Required. Service key associated with the border gateway protocol
        /// peering to be deleted.
        /// </param>
        /// <param name='accessType'>
        /// Required. Whether the peering is private or public.
        /// </param>
        /// <param name='peerAddressType'>
        /// Required. Whether the BGP Peer Address Type to deleted is IPv4,
        /// IPv6 or All.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself.  If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request.  If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        public static Task<ExpressRouteOperationStatusResponse> RemoveAsync(this IBorderGatewayProtocolPeeringOperations operations, string serviceKey, BgpPeeringAccessType accessType, BgpPeerAddressType peerAddressType)
        {
            return operations.RemoveAsync(serviceKey, accessType, peerAddressType, CancellationToken.None);
        }
        
        /// <summary>
        /// The Update Border Gateway Protocol Peering operation updates an
        /// existing border gateway protocol peering or creates a new one if
        /// one doesn't exist.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.ExpressRoute.IBorderGatewayProtocolPeeringOperations.
        /// </param>
        /// <param name='serviceKey'>
        /// Required. The service key representing the relationship between
        /// Azure and the customer.
        /// </param>
        /// <param name='accessType'>
        /// Required. Whether the peering is private or public.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the Update Border Gateway Protocol
        /// Peering operation.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself.  If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request.  If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        public static ExpressRouteOperationStatusResponse Update(this IBorderGatewayProtocolPeeringOperations operations, string serviceKey, BgpPeeringAccessType accessType, BorderGatewayProtocolPeeringUpdateParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IBorderGatewayProtocolPeeringOperations)s).UpdateAsync(serviceKey, accessType, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// The Update Border Gateway Protocol Peering operation updates an
        /// existing border gateway protocol peering or creates a new one if
        /// one doesn't exist.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.ExpressRoute.IBorderGatewayProtocolPeeringOperations.
        /// </param>
        /// <param name='serviceKey'>
        /// Required. The service key representing the relationship between
        /// Azure and the customer.
        /// </param>
        /// <param name='accessType'>
        /// Required. Whether the peering is private or public.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the Update Border Gateway Protocol
        /// Peering operation.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself.  If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request.  If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        public static Task<ExpressRouteOperationStatusResponse> UpdateAsync(this IBorderGatewayProtocolPeeringOperations operations, string serviceKey, BgpPeeringAccessType accessType, BorderGatewayProtocolPeeringUpdateParameters parameters)
        {
            return operations.UpdateAsync(serviceKey, accessType, parameters, CancellationToken.None);
        }
    }
}
