// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Hyak.Common;
using Microsoft.WindowsAzure.Management.Compute.Models;

namespace Microsoft.WindowsAzure.Management.Compute.Models
{
    /// <summary>
    /// Parameters supplied to the Create Virtual Machine VM Image operation.
    /// </summary>
    public partial class VirtualMachineVMImageCreateParameters
    {
        private IList<DataDiskConfigurationCreateParameters> _dataDiskConfigurations;
        
        /// <summary>
        /// Optional. Specifies configuration information for the data disks
        /// that are associated with the image. A VM Image might not have data
        /// disks associated with it.
        /// </summary>
        public IList<DataDiskConfigurationCreateParameters> DataDiskConfigurations
        {
            get { return this._dataDiskConfigurations; }
            set { this._dataDiskConfigurations = value; }
        }
        
        private string _description;
        
        /// <summary>
        /// Optional. Gets or sets the description of the image.
        /// </summary>
        public string Description
        {
            get { return this._description; }
            set { this._description = value; }
        }
        
        private string _eula;
        
        /// <summary>
        /// Optional. Gets or sets the End User License Agreement that is
        /// associated with the image. The value for this element is a string,
        /// but it is recommended that the value be a URL that points to a
        /// EULA.
        /// </summary>
        public string Eula
        {
            get { return this._eula; }
            set { this._eula = value; }
        }
        
        private string _iconUri;
        
        /// <summary>
        /// Optional. Gets or sets the URI to the icon that is displayed for
        /// the image in the Management Portal.
        /// </summary>
        public string IconUri
        {
            get { return this._iconUri; }
            set { this._iconUri = value; }
        }
        
        private string _imageFamily;
        
        /// <summary>
        /// Optional. Gets or sets a value that can be used to group VM Images.
        /// </summary>
        public string ImageFamily
        {
            get { return this._imageFamily; }
            set { this._imageFamily = value; }
        }
        
        private string _label;
        
        /// <summary>
        /// Required. Gets or sets an identifier for the image.
        /// </summary>
        public string Label
        {
            get { return this._label; }
            set { this._label = value; }
        }
        
        private string _language;
        
        /// <summary>
        /// Optional. Gets or sets the language of the image.
        /// </summary>
        public string Language
        {
            get { return this._language; }
            set { this._language = value; }
        }
        
        private string _name;
        
        /// <summary>
        /// Required. Gets or sets the name of the image.
        /// </summary>
        public string Name
        {
            get { return this._name; }
            set { this._name = value; }
        }
        
        private OSDiskConfigurationCreateParameters _oSDiskConfiguration;
        
        /// <summary>
        /// Required. Gets or sets configuration information for the operating
        /// system disk that is associated with the image.
        /// </summary>
        public OSDiskConfigurationCreateParameters OSDiskConfiguration
        {
            get { return this._oSDiskConfiguration; }
            set { this._oSDiskConfiguration = value; }
        }
        
        private Uri _privacyUri;
        
        /// <summary>
        /// Optional. Gets or sets the URI that points to a document that
        /// contains the privacy policy related to the image.
        /// </summary>
        public Uri PrivacyUri
        {
            get { return this._privacyUri; }
            set { this._privacyUri = value; }
        }
        
        private System.DateTime? _publishedDate;
        
        /// <summary>
        /// Optional. Gets or sets the date when the image was added to the
        /// image repository.
        /// </summary>
        public System.DateTime? PublishedDate
        {
            get { return this._publishedDate; }
            set { this._publishedDate = value; }
        }
        
        private string _recommendedVMSize;
        
        /// <summary>
        /// Optional. Gets or sets the size to use for the Virtual Machine that
        /// is created from the VM Image.
        /// </summary>
        public string RecommendedVMSize
        {
            get { return this._recommendedVMSize; }
            set { this._recommendedVMSize = value; }
        }
        
        private bool? _showInGui;
        
        /// <summary>
        /// Optional. Gets or sets whether the VM Images should be listed in
        /// the portal.
        /// </summary>
        public bool? ShowInGui
        {
            get { return this._showInGui; }
            set { this._showInGui = value; }
        }
        
        private string _smallIconUri;
        
        /// <summary>
        /// Optional. Gets or sets the URI to the small icon that is displayed
        /// for the image in the Management Portal.
        /// </summary>
        public string SmallIconUri
        {
            get { return this._smallIconUri; }
            set { this._smallIconUri = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the
        /// VirtualMachineVMImageCreateParameters class.
        /// </summary>
        public VirtualMachineVMImageCreateParameters()
        {
            this.DataDiskConfigurations = new LazyList<DataDiskConfigurationCreateParameters>();
        }
        
        /// <summary>
        /// Initializes a new instance of the
        /// VirtualMachineVMImageCreateParameters class with required
        /// arguments.
        /// </summary>
        public VirtualMachineVMImageCreateParameters(string name, string label, OSDiskConfigurationCreateParameters oSDiskConfiguration)
            : this()
        {
            if (name == null)
            {
                throw new ArgumentNullException("name");
            }
            if (label == null)
            {
                throw new ArgumentNullException("label");
            }
            if (oSDiskConfiguration == null)
            {
                throw new ArgumentNullException("oSDiskConfiguration");
            }
            this.Name = name;
            this.Label = label;
            this.OSDiskConfiguration = oSDiskConfiguration;
        }
    }
}
