// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Hyak.Common;
using Microsoft.Azure;
using Microsoft.WindowsAzure.Management.Compute.Models;

namespace Microsoft.WindowsAzure.Management.Compute.Models
{
    /// <summary>
    /// The List OS Images operation response.
    /// </summary>
    public partial class VirtualMachineOSImageListResponse : AzureOperationResponse, IEnumerable<VirtualMachineOSImageListResponse.VirtualMachineOSImage>
    {
        private IList<VirtualMachineOSImageListResponse.VirtualMachineOSImage> _images;
        
        /// <summary>
        /// Optional. The virtual machine images associated with your
        /// subscription.
        /// </summary>
        public IList<VirtualMachineOSImageListResponse.VirtualMachineOSImage> Images
        {
            get { return this._images; }
            set { this._images = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the VirtualMachineOSImageListResponse
        /// class.
        /// </summary>
        public VirtualMachineOSImageListResponse()
        {
            this.Images = new LazyList<VirtualMachineOSImageListResponse.VirtualMachineOSImage>();
        }
        
        /// <summary>
        /// Gets the sequence of Images.
        /// </summary>
        public IEnumerator<VirtualMachineOSImageListResponse.VirtualMachineOSImage> GetEnumerator()
        {
            return this.Images.GetEnumerator();
        }
        
        /// <summary>
        /// Gets the sequence of Images.
        /// </summary>
        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return this.GetEnumerator();
        }
        
        /// <summary>
        /// A virtual machine image associated with your subscription.
        /// </summary>
        public partial class VirtualMachineOSImage
        {
            private string _affinityGroup;
            
            /// <summary>
            /// Optional. The affinity in which the media is located. The
            /// AffinityGroup value is derived from storage account that
            /// contains the blob in which the media is located. If the
            /// storage account does not belong to an affinity group the value
            /// is NULL and the element is not displayed in the response.
            /// This value is NULL for platform images.
            /// </summary>
            public string AffinityGroup
            {
                get { return this._affinityGroup; }
                set { this._affinityGroup = value; }
            }
            
            private string _category;
            
            /// <summary>
            /// Optional. The repository classification of the image. All user
            /// images have the category User.
            /// </summary>
            public string Category
            {
                get { return this._category; }
                set { this._category = value; }
            }
            
            private string _description;
            
            /// <summary>
            /// Optional. Specifies the description of the image.
            /// </summary>
            public string Description
            {
                get { return this._description; }
                set { this._description = value; }
            }
            
            private string _eula;
            
            /// <summary>
            /// Optional. Specifies the End User License Agreement that is
            /// associated with the image. The value for this element is a
            /// string, but it is recommended that the value be a URL that
            /// points to a EULA.
            /// </summary>
            public string Eula
            {
                get { return this._eula; }
                set { this._eula = value; }
            }
            
            private string _iconUri;
            
            /// <summary>
            /// Optional. Gets or sets the URI to the icon for this Operating
            /// System Image.
            /// </summary>
            public string IconUri
            {
                get { return this._iconUri; }
                set { this._iconUri = value; }
            }
            
            private string _imageFamily;
            
            /// <summary>
            /// Optional. Specifies a value that can be used to group images.
            /// </summary>
            public string ImageFamily
            {
                get { return this._imageFamily; }
                set { this._imageFamily = value; }
            }
            
            private string _iOType;
            
            /// <summary>
            /// Optional. Gets or sets the IO type.
            /// </summary>
            public string IOType
            {
                get { return this._iOType; }
                set { this._iOType = value; }
            }
            
            private bool? _isPremium;
            
            /// <summary>
            /// Optional. Indicates whether the image contains software or
            /// associated services that will incur charges above the core
            /// price for the virtual machine. For additional details, see the
            /// PricingDetailLink element.
            /// </summary>
            public bool? IsPremium
            {
                get { return this._isPremium; }
                set { this._isPremium = value; }
            }
            
            private string _label;
            
            /// <summary>
            /// Optional. An identifier for the image.
            /// </summary>
            public string Label
            {
                get { return this._label; }
                set { this._label = value; }
            }
            
            private string _language;
            
            /// <summary>
            /// Optional. Specifies the language of the image.  The Language
            /// element is only available using version 2013-03-01 or higher.
            /// </summary>
            public string Language
            {
                get { return this._language; }
                set { this._language = value; }
            }
            
            private string _location;
            
            /// <summary>
            /// Optional. The geo-location in which this media is located. The
            /// Location value is derived from storage account that contains
            /// the blob in which the media is located. If the storage account
            /// belongs to an affinity group the value is NULL.  If the
            /// version is set to 2012-08-01 or later, the locations are
            /// returned for platform images; otherwise, this value is NULL
            /// for platform images.
            /// </summary>
            public string Location
            {
                get { return this._location; }
                set { this._location = value; }
            }
            
            private double _logicalSizeInGB;
            
            /// <summary>
            /// Optional. The size, in GB, of the image.
            /// </summary>
            public double LogicalSizeInGB
            {
                get { return this._logicalSizeInGB; }
                set { this._logicalSizeInGB = value; }
            }
            
            private Uri _mediaLinkUri;
            
            /// <summary>
            /// Optional. The location of the blob in Azure storage. The blob
            /// location belongs to a storage account in the subscription
            /// specified by the SubscriptionId value in the operation call.
            /// Example:
            /// http://example.blob.core.windows.net/disks/myimage.vhd
            /// </summary>
            public Uri MediaLinkUri
            {
                get { return this._mediaLinkUri; }
                set { this._mediaLinkUri = value; }
            }
            
            private string _name;
            
            /// <summary>
            /// Optional. The name of the operating system image. This is the
            /// name that is used when creating one or more virtual machines
            /// using the image.
            /// </summary>
            public string Name
            {
                get { return this._name; }
                set { this._name = value; }
            }
            
            private string _operatingSystemType;
            
            /// <summary>
            /// Optional. The operating system type of the OS image. Possible
            /// values are: Linux, Windows.
            /// </summary>
            public string OperatingSystemType
            {
                get { return this._operatingSystemType; }
                set { this._operatingSystemType = value; }
            }
            
            private Uri _pricingDetailUri;
            
            /// <summary>
            /// Optional. Specifies a URL for an image with IsPremium set to
            /// true, which contains the pricing details for a virtual machine
            /// that is created from the image.  The PricingDetailLink element
            /// is only available using version 2012-12-01 or higher.
            /// </summary>
            public Uri PricingDetailUri
            {
                get { return this._pricingDetailUri; }
                set { this._pricingDetailUri = value; }
            }
            
            private Uri _privacyUri;
            
            /// <summary>
            /// Optional. Specifies the URI that points to a document that
            /// contains the privacy policy related to the image.
            /// </summary>
            public Uri PrivacyUri
            {
                get { return this._privacyUri; }
                set { this._privacyUri = value; }
            }
            
            private DateTime _publishedDate;
            
            /// <summary>
            /// Optional. Specifies the date when the image was added to the
            /// image repository.
            /// </summary>
            public DateTime PublishedDate
            {
                get { return this._publishedDate; }
                set { this._publishedDate = value; }
            }
            
            private string _publisherName;
            
            /// <summary>
            /// Optional. The name of the publisher of this OS Image in Azure.
            /// </summary>
            public string PublisherName
            {
                get { return this._publisherName; }
                set { this._publisherName = value; }
            }
            
            private string _recommendedVMSize;
            
            /// <summary>
            /// Optional. Specifies the size to use for the virtual machine
            /// that is created from the OS image.
            /// </summary>
            public string RecommendedVMSize
            {
                get { return this._recommendedVMSize; }
                set { this._recommendedVMSize = value; }
            }
            
            private bool? _showInGui;
            
            /// <summary>
            /// Optional. Indicates whether the image should be shown in the
            /// Azure portal.
            /// </summary>
            public bool? ShowInGui
            {
                get { return this._showInGui; }
                set { this._showInGui = value; }
            }
            
            private string _smallIconUri;
            
            /// <summary>
            /// Optional. Specifies the URI to the small icon that is displayed
            /// when the image is presented in the Azure Management Portal.
            /// The SmallIconUri element is only available using version
            /// 2013-03-01 or higher.
            /// </summary>
            public string SmallIconUri
            {
                get { return this._smallIconUri; }
                set { this._smallIconUri = value; }
            }
            
            /// <summary>
            /// Initializes a new instance of the VirtualMachineOSImage class.
            /// </summary>
            public VirtualMachineOSImage()
            {
            }
        }
    }
}
