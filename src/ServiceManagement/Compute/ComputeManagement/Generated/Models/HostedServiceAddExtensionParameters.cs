// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;

namespace Microsoft.WindowsAzure.Management.Compute.Models
{
    /// <summary>
    /// Parameters supplied to the Add Extension operation.
    /// </summary>
    public partial class HostedServiceAddExtensionParameters
    {
        private string _id;
        
        /// <summary>
        /// Required. The identifier of the extension.
        /// </summary>
        public string Id
        {
            get { return this._id; }
            set { this._id = value; }
        }
        
        private string _privateConfiguration;
        
        /// <summary>
        /// Optional. The private configuration that is defined using the
        /// schema returned by the List Available Extensions operation.
        /// </summary>
        public string PrivateConfiguration
        {
            get { return this._privateConfiguration; }
            set { this._privateConfiguration = value; }
        }
        
        private string _providerNamespace;
        
        /// <summary>
        /// Optional. The provider namespace of the extension. The provider
        /// namespace for Azure extensions is
        /// Microsoft.Windows.Azure.Extensions.
        /// </summary>
        public string ProviderNamespace
        {
            get { return this._providerNamespace; }
            set { this._providerNamespace = value; }
        }
        
        private string _publicConfiguration;
        
        /// <summary>
        /// Optional. The public configuration that is defined using the schema
        /// returned by the List Available Extensions operation.
        /// </summary>
        public string PublicConfiguration
        {
            get { return this._publicConfiguration; }
            set { this._publicConfiguration = value; }
        }
        
        private string _thumbprint;
        
        /// <summary>
        /// Optional. The thumbprint of the certificate that is used to encrypt
        /// the configuration specified in PrivateConfiguration. If this
        /// element is not specified, a certificate may be automatically
        /// generated and added to the cloud service.
        /// </summary>
        public string Thumbprint
        {
            get { return this._thumbprint; }
            set { this._thumbprint = value; }
        }
        
        private string _thumbprintAlgorithm;
        
        /// <summary>
        /// Optional. The thumbprint algorithm of the certificate that is used
        /// to encrypt the configuration specified in PrivateConfiguration.
        /// </summary>
        public string ThumbprintAlgorithm
        {
            get { return this._thumbprintAlgorithm; }
            set { this._thumbprintAlgorithm = value; }
        }
        
        private string _type;
        
        /// <summary>
        /// Required. The type of the extension.
        /// </summary>
        public string Type
        {
            get { return this._type; }
            set { this._type = value; }
        }
        
        private string _version;
        
        /// <summary>
        /// Optional. Specifies the version of the extension. If this element
        /// is not specified or an asterisk (*) is used as the value, the
        /// latest version of the extension is used. If the value is specified
        /// with a major version number and an asterisk as the minor version
        /// number (X.*), the latest minor version of the specified major
        /// version is selected. If a major version number and a minor version
        /// number are specified (X.Y), the specific extension version is
        /// selected. If a version is specified, an auto-upgrade is performed
        /// on the role instance.
        /// </summary>
        public string Version
        {
            get { return this._version; }
            set { this._version = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the
        /// HostedServiceAddExtensionParameters class.
        /// </summary>
        public HostedServiceAddExtensionParameters()
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the
        /// HostedServiceAddExtensionParameters class with required arguments.
        /// </summary>
        public HostedServiceAddExtensionParameters(string type, string id)
            : this()
        {
            if (type == null)
            {
                throw new ArgumentNullException("type");
            }
            if (id == null)
            {
                throw new ArgumentNullException("id");
            }
            this.Type = type;
            this.Id = id;
        }
    }
}
