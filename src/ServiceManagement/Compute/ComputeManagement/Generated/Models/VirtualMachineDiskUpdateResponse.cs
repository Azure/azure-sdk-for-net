// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using Microsoft.Azure;

namespace Microsoft.WindowsAzure.Management.Compute.Models
{
    /// <summary>
    /// A virtual machine disk associated with your subscription.
    /// </summary>
    public partial class VirtualMachineDiskUpdateResponse : AzureOperationResponse
    {
        private string _affinityGroup;
        
        /// <summary>
        /// Optional. The affinity group in which the disk is located. The
        /// AffinityGroup value is derived from storage account that contains
        /// the blob in which the media is located. If the storage account
        /// does not belong to an affinity group the value is NULL.
        /// </summary>
        public string AffinityGroup
        {
            get { return this._affinityGroup; }
            set { this._affinityGroup = value; }
        }
        
        private string _iOType;
        
        /// <summary>
        /// Optional. Gets or sets the IO type.
        /// </summary>
        public string IOType
        {
            get { return this._iOType; }
            set { this._iOType = value; }
        }
        
        private bool? _isPremium;
        
        /// <summary>
        /// Optional. Specifies whether the contained image is a premium image.
        /// </summary>
        public bool? IsPremium
        {
            get { return this._isPremium; }
            set { this._isPremium = value; }
        }
        
        private string _label;
        
        /// <summary>
        /// Optional. The friendly name of the disk
        /// </summary>
        public string Label
        {
            get { return this._label; }
            set { this._label = value; }
        }
        
        private string _location;
        
        /// <summary>
        /// Optional. The geo-location in which the disk is located. The
        /// Location value is derived from storage account that contains the
        /// blob in which the disk is located. If the storage account belongs
        /// to an affinity group the value is NULL.
        /// </summary>
        public string Location
        {
            get { return this._location; }
            set { this._location = value; }
        }
        
        private int _logicalSizeInGB;
        
        /// <summary>
        /// Optional. The size, in GB, of the disk.
        /// </summary>
        public int LogicalSizeInGB
        {
            get { return this._logicalSizeInGB; }
            set { this._logicalSizeInGB = value; }
        }
        
        private Uri _mediaLinkUri;
        
        /// <summary>
        /// Optional. The location of the blob in the blob store in which the
        /// media for the disk is located. The blob location belongs to a
        /// storage account in the subscription specified by the
        /// SubscriptionId value in the operation call. Example:
        /// http://example.blob.core.windows.net/disks/mydisk.vhd
        /// </summary>
        public Uri MediaLinkUri
        {
            get { return this._mediaLinkUri; }
            set { this._mediaLinkUri = value; }
        }
        
        private string _name;
        
        /// <summary>
        /// Optional. The name of the disk. This is the name that is used when
        /// creating one or more virtual machines using the disk.
        /// </summary>
        public string Name
        {
            get { return this._name; }
            set { this._name = value; }
        }
        
        private string _operatingSystem;
        
        /// <summary>
        /// Optional. The Operating System type for the disk.
        /// </summary>
        public string OperatingSystem
        {
            get { return this._operatingSystem; }
            set { this._operatingSystem = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the VirtualMachineDiskUpdateResponse
        /// class.
        /// </summary>
        public VirtualMachineDiskUpdateResponse()
        {
        }
    }
}
