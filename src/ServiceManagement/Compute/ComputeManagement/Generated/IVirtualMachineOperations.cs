// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure;
using Microsoft.WindowsAzure.Management.Compute.Models;

namespace Microsoft.WindowsAzure.Management.Compute
{
    /// <summary>
    /// The Service Management API includes operations for managing the virtual
    /// machines in your subscription.  (see
    /// http://msdn.microsoft.com/en-us/library/windowsazure/jj157206.aspx for
    /// more information)
    /// </summary>
    public partial interface IVirtualMachineOperations
    {
        /// <summary>
        /// The Begin Capturing Role operation creates a copy of the operating
        /// system virtual hard disk (VHD) that is deployed in the virtual
        /// machine, saves the VHD copy in the same storage location as the
        /// operating system VHD, and registers the copy as an image in your
        /// image gallery. From the captured image, you can create additional
        /// customized virtual machines. For more information about images and
        /// disks, see Manage Disks and Images at
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj672979.aspx.
        /// For more information about capturing images, see How to Capture an
        /// Image of a Virtual Machine Running Windows Server 2008 R2 at
        /// http://www.windowsazure.com/en-us/documentation/articles/virtual-machines-capture-image-windows-server/
        /// or How to Capture an Image of a Virtual Machine Running Linux at
        /// http://www.windowsazure.com/en-us/documentation/articles/virtual-machines-linux-capture-image/.
        /// (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj157201.aspx
        /// for more information)
        /// </summary>
        /// <param name='serviceName'>
        /// The name of your service.
        /// </param>
        /// <param name='deploymentName'>
        /// The name of your deployment.
        /// </param>
        /// <param name='virtualMachineName'>
        /// The name of the virtual machine to restart.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Begin Capturing Virtual Machine
        /// operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<AzureOperationResponse> BeginCapturingOSImageAsync(string serviceName, string deploymentName, string virtualMachineName, VirtualMachineCaptureOSImageParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// Begin capturing role as VM template.
        /// </summary>
        /// <param name='serviceName'>
        /// The name of your service.
        /// </param>
        /// <param name='deploymentName'>
        /// The name of your deployment.
        /// </param>
        /// <param name='virtualMachineName'>
        /// The name of the virtual machine to restart.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Capture Virtual Machine operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<AzureOperationResponse> BeginCapturingVMImageAsync(string serviceName, string deploymentName, string virtualMachineName, VirtualMachineCaptureVMImageParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Creating Role operation adds a virtual machine to an
        /// existing deployment. You can refer to the OSDisk in the Add Role
        /// operation in the following ways: Platform/User Image - Set the
        /// SourceImageName to a platform or user image. You can optionally
        /// specify the DiskName and MediaLink values as part the operation to
        /// control the name and location of target disk. When DiskName and
        /// MediaLink are specified in this mode, they must not already exist
        /// in the system, otherwise a conflict fault is returned; UserDisk -
        /// Set DiskName to a user supplied image in image repository.
        /// SourceImageName must be set to NULL. All other properties are
        /// ignored; or Blob in a Storage Account - Set MediaLink to a blob
        /// containing the image. SourceImageName and DiskName are set to
        /// NULL.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj157186.aspx
        /// for more information)
        /// </summary>
        /// <param name='serviceName'>
        /// The name of your service.
        /// </param>
        /// <param name='deploymentName'>
        /// The name of your deployment.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Begin Creating Virtual Machine operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<AzureOperationResponse> BeginCreatingAsync(string serviceName, string deploymentName, VirtualMachineCreateParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Creating Virtual Machine Deployment operation provisions
        /// a virtual machine based on the supplied configuration. When you
        /// create a deployment of a virtual machine, you should make sure
        /// that the cloud service and the disk or image that you use are
        /// located in the same region. For example, if the cloud service was
        /// created in the West US region, the disk or image that you use
        /// should also be located in a storage account in the West US region.
        /// (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj157194.aspx
        /// for more information)
        /// </summary>
        /// <param name='serviceName'>
        /// The name of your service.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Begin Creating Virtual Machine
        /// Deployment operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<AzureOperationResponse> BeginCreatingDeploymentAsync(string serviceName, VirtualMachineCreateDeploymentParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Deleting Role operation deletes the specified virtual
        /// machine.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj157184.aspx
        /// for more information)
        /// </summary>
        /// <param name='serviceName'>
        /// The name of your service.
        /// </param>
        /// <param name='deploymentName'>
        /// The name of your deployment.
        /// </param>
        /// <param name='virtualMachineName'>
        /// The name of the virtual machine to delete.
        /// </param>
        /// <param name='deleteFromStorage'>
        /// Specifies that the source blob(s) for the virtual machine should
        /// also be deleted from storage.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<AzureOperationResponse> BeginDeletingAsync(string serviceName, string deploymentName, string virtualMachineName, bool deleteFromStorage, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Redeploying role operation redeploys the specified
        /// virtual machine.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj157197.aspx
        /// for more information)
        /// </summary>
        /// <param name='serviceName'>
        /// The name of your service.
        /// </param>
        /// <param name='deploymentName'>
        /// The name of your deployment.
        /// </param>
        /// <param name='virtualMachineName'>
        /// The name of the virtual machine to redeploy.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<AzureOperationResponse> BeginRedeployingAsync(string serviceName, string deploymentName, string virtualMachineName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Restarting role operation restarts the specified virtual
        /// machine.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj157197.aspx
        /// for more information)
        /// </summary>
        /// <param name='serviceName'>
        /// The name of your service.
        /// </param>
        /// <param name='deploymentName'>
        /// The name of your deployment.
        /// </param>
        /// <param name='virtualMachineName'>
        /// The name of the virtual machine to restart.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<AzureOperationResponse> BeginRestartingAsync(string serviceName, string deploymentName, string virtualMachineName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Shutdown Role operation shuts down the specified virtual
        /// machine.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj157195.aspx
        /// for more information)
        /// </summary>
        /// <param name='serviceName'>
        /// The name of your service.
        /// </param>
        /// <param name='deploymentName'>
        /// The name of your deployment.
        /// </param>
        /// <param name='virtualMachineName'>
        /// The name of the virtual machine to shutdown.
        /// </param>
        /// <param name='parameters'>
        /// The parameters for the shutdown vm operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<AzureOperationResponse> BeginShutdownAsync(string serviceName, string deploymentName, string virtualMachineName, VirtualMachineShutdownParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Shutting Down Roles operation stops the specified set of
        /// virtual machines.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/dn469421.aspx
        /// for more information)
        /// </summary>
        /// <param name='serviceName'>
        /// The name of your service.
        /// </param>
        /// <param name='deploymentName'>
        /// The name of your deployment.
        /// </param>
        /// <param name='parameters'>
        /// Parameters to pass to the Begin Shutting Down Roles operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<AzureOperationResponse> BeginShuttingDownRolesAsync(string serviceName, string deploymentName, VirtualMachineShutdownRolesParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Starting Role operation starts the specified virtual
        /// machine.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj157189.aspx
        /// for more information)
        /// </summary>
        /// <param name='serviceName'>
        /// The name of your service.
        /// </param>
        /// <param name='deploymentName'>
        /// The name of your deployment.
        /// </param>
        /// <param name='virtualMachineName'>
        /// The name of the virtual machine to start.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<AzureOperationResponse> BeginStartingAsync(string serviceName, string deploymentName, string virtualMachineName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Starting Roles operation starts the specified set of
        /// virtual machines.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/dn469419.aspx
        /// for more information)
        /// </summary>
        /// <param name='serviceName'>
        /// The name of your service.
        /// </param>
        /// <param name='deploymentName'>
        /// The name of your deployment.
        /// </param>
        /// <param name='parameters'>
        /// Parameters to pass to the Begin Starting Roles operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<AzureOperationResponse> BeginStartingRolesAsync(string serviceName, string deploymentName, VirtualMachineStartRolesParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Updating Role operation adds a virtual machine to an
        /// existing deployment.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj157187.aspx
        /// for more information)
        /// </summary>
        /// <param name='serviceName'>
        /// The name of your service.
        /// </param>
        /// <param name='deploymentName'>
        /// The name of your deployment.
        /// </param>
        /// <param name='virtualMachineName'>
        /// The name of your virtual machine.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Begin Updating Virtual Machine operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<AzureOperationResponse> BeginUpdatingAsync(string serviceName, string deploymentName, string virtualMachineName, VirtualMachineUpdateParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Updating Load Balanced Endpoint Set operation changes the
        /// specified load-balanced InputEndpoints on all the roles of an
        /// Infrastructure as a Service deployment. Non-load-balanced
        /// endpoints must be changed using UpdateRole.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/dn469417.aspx
        /// for more information)
        /// </summary>
        /// <param name='serviceName'>
        /// The name of your service.
        /// </param>
        /// <param name='deploymentName'>
        /// The name of your deployment.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Begin Updating Load Balanced Endpoint
        /// Set operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<AzureOperationResponse> BeginUpdatingLoadBalancedEndpointSetAsync(string serviceName, string deploymentName, VirtualMachineUpdateLoadBalancedSetParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Capture Role operation creates a copy of the operating system
        /// virtual hard disk (VHD) that is deployed in the virtual machine,
        /// saves the VHD copy in the same storage location as the operating
        /// system VHD, and registers the copy as an image in your image
        /// gallery. From the captured image, you can create additional
        /// customized virtual machines. For more information about images and
        /// disks, see Manage Disks and Images at
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj672979.aspx.
        /// For more information about capturing images, see How to Capture an
        /// Image of a Virtual Machine Running Windows Server 2008 R2 at
        /// http://www.windowsazure.com/en-us/documentation/articles/virtual-machines-capture-image-windows-server/
        /// or How to Capture an Image of a Virtual Machine Running Linux at
        /// http://www.windowsazure.com/en-us/documentation/articles/virtual-machines-linux-capture-image/.
        /// (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj157201.aspx
        /// for more information)
        /// </summary>
        /// <param name='serviceName'>
        /// The name of your service.
        /// </param>
        /// <param name='deploymentName'>
        /// The name of your deployment.
        /// </param>
        /// <param name='virtualMachineName'>
        /// The name of the virtual machine to restart.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Capture Virtual Machine operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request and error information regarding
        /// the failure.
        /// </returns>
        Task<OperationStatusResponse> CaptureOSImageAsync(string serviceName, string deploymentName, string virtualMachineName, VirtualMachineCaptureOSImageParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// Capture role as VM template.
        /// </summary>
        /// <param name='serviceName'>
        /// The name of your service.
        /// </param>
        /// <param name='deploymentName'>
        /// The name of your deployment.
        /// </param>
        /// <param name='virtualMachineName'>
        /// The name of the virtual machine to restart.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Capture Virtual Machine operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request and error information regarding
        /// the failure.
        /// </returns>
        Task<OperationStatusResponse> CaptureVMImageAsync(string serviceName, string deploymentName, string virtualMachineName, VirtualMachineCaptureVMImageParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Create Role operation adds a virtual machine to an existing
        /// deployment. You can refer to the OSDisk in the Add Role operation
        /// in the following ways: Platform/User Image - Set the
        /// SourceImageName to a platform or user image. You can optionally
        /// specify the DiskName and MediaLink values as part the operation to
        /// control the name and location of target disk. When DiskName and
        /// MediaLink are specified in this mode, they must not already exist
        /// in the system, otherwise a conflict fault is returned; UserDisk -
        /// Set DiskName to a user supplied image in image repository.
        /// SourceImageName must be set to NULL. All other properties are
        /// ignored; or Blob in a Storage Account - Set MediaLink to a blob
        /// containing the image. SourceImageName and DiskName are set to
        /// NULL.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj157186.aspx
        /// for more information)
        /// </summary>
        /// <param name='serviceName'>
        /// The name of your service.
        /// </param>
        /// <param name='deploymentName'>
        /// The name of your deployment.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Create Virtual Machine operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request and error information regarding
        /// the failure.
        /// </returns>
        Task<OperationStatusResponse> CreateAsync(string serviceName, string deploymentName, VirtualMachineCreateParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Create Virtual Machine Deployment operation provisions a
        /// virtual machine based on the supplied configuration. When you
        /// create a deployment of a virtual machine, you should make sure
        /// that the cloud service and the disk or image that you use are
        /// located in the same region. For example, if the cloud service was
        /// created in the West US region, the disk or image that you use
        /// should also be located in a storage account in the West US region.
        /// (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj157194.aspx
        /// for more information)
        /// </summary>
        /// <param name='serviceName'>
        /// The name of your service.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Create Virtual Machine Deployment
        /// operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request and error information regarding
        /// the failure.
        /// </returns>
        Task<OperationStatusResponse> CreateDeploymentAsync(string serviceName, VirtualMachineCreateDeploymentParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Delete Role operation deletes the specified virtual machine.
        /// (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj157184.aspx
        /// for more information)
        /// </summary>
        /// <param name='serviceName'>
        /// The name of your service.
        /// </param>
        /// <param name='deploymentName'>
        /// The name of your deployment.
        /// </param>
        /// <param name='virtualMachineName'>
        /// The name of the virtual machine to delete.
        /// </param>
        /// <param name='deleteFromStorage'>
        /// Specifies that the source blob(s) for the virtual machine should
        /// also be deleted from storage.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request and error information regarding
        /// the failure.
        /// </returns>
        Task<OperationStatusResponse> DeleteAsync(string serviceName, string deploymentName, string virtualMachineName, bool deleteFromStorage, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Get Role operation retrieves information about the specified
        /// virtual machine.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj157193.aspx
        /// for more information)
        /// </summary>
        /// <param name='serviceName'>
        /// The name of your service.
        /// </param>
        /// <param name='deploymentName'>
        /// The name of your deployment.
        /// </param>
        /// <param name='virtualMachineName'>
        /// The name of the virtual machine.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The Get Virtual Machine operation response.
        /// </returns>
        Task<VirtualMachineGetResponse> GetAsync(string serviceName, string deploymentName, string virtualMachineName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Download RDP file operation retrieves the Remote Desktop
        /// Protocol configuration file from the specified virtual machine.
        /// (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj157183.aspx
        /// for more information)
        /// </summary>
        /// <param name='serviceName'>
        /// The name of your service.
        /// </param>
        /// <param name='deploymentName'>
        /// The name of your deployment.
        /// </param>
        /// <param name='virtualMachineName'>
        /// The name of the virtual machine.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The Download RDP file operation response.
        /// </returns>
        Task<VirtualMachineGetRemoteDesktopFileResponse> GetRemoteDesktopFileAsync(string serviceName, string deploymentName, string virtualMachineName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Redeploy role operation redeploys the specified virtual
        /// machine.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj157197.aspx
        /// for more information)
        /// </summary>
        /// <param name='serviceName'>
        /// The name of your service.
        /// </param>
        /// <param name='deploymentName'>
        /// The name of your deployment.
        /// </param>
        /// <param name='virtualMachineName'>
        /// The name of the virtual machine to redeploy.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request and error information regarding
        /// the failure.
        /// </returns>
        Task<OperationStatusResponse> RedeployAsync(string serviceName, string deploymentName, string virtualMachineName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Restart role operation restarts the specified virtual machine.
        /// (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj157197.aspx
        /// for more information)
        /// </summary>
        /// <param name='serviceName'>
        /// The name of your service.
        /// </param>
        /// <param name='deploymentName'>
        /// The name of your deployment.
        /// </param>
        /// <param name='virtualMachineName'>
        /// The name of the virtual machine to restart.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request and error information regarding
        /// the failure.
        /// </returns>
        Task<OperationStatusResponse> RestartAsync(string serviceName, string deploymentName, string virtualMachineName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Shutdown Role operation shuts down the specified virtual
        /// machine.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj157195.aspx
        /// for more information)
        /// </summary>
        /// <param name='serviceName'>
        /// The name of your service.
        /// </param>
        /// <param name='deploymentName'>
        /// The name of your deployment.
        /// </param>
        /// <param name='virtualMachineName'>
        /// The name of the virtual machine to shutdown.
        /// </param>
        /// <param name='parameters'>
        /// The parameters for the shutdown virtual machine operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request and error information regarding
        /// the failure.
        /// </returns>
        Task<OperationStatusResponse> ShutdownAsync(string serviceName, string deploymentName, string virtualMachineName, VirtualMachineShutdownParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Shutdown Roles operation stops the specified set of virtual
        /// machines.
        /// </summary>
        /// <param name='serviceName'>
        /// The name of your service.
        /// </param>
        /// <param name='deploymentName'>
        /// The name of your deployment.
        /// </param>
        /// <param name='parameters'>
        /// Parameters to pass to the Shutdown Roles operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request and error information regarding
        /// the failure.
        /// </returns>
        Task<OperationStatusResponse> ShutdownRolesAsync(string serviceName, string deploymentName, VirtualMachineShutdownRolesParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Start Role operation starts the specified virtual machine.
        /// (see http://msdn.microsoft.com/en-us/library/windowsazure/jj157189.aspx
        /// for more information)
        /// </summary>
        /// <param name='serviceName'>
        /// The name of your service.
        /// </param>
        /// <param name='deploymentName'>
        /// The name of your deployment.
        /// </param>
        /// <param name='virtualMachineName'>
        /// The name of the virtual machine to start.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request and error information regarding
        /// the failure.
        /// </returns>
        Task<OperationStatusResponse> StartAsync(string serviceName, string deploymentName, string virtualMachineName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Start Roles operation starts the specified set of virtual
        /// machines.
        /// </summary>
        /// <param name='serviceName'>
        /// The name of your service.
        /// </param>
        /// <param name='deploymentName'>
        /// The name of your deployment.
        /// </param>
        /// <param name='parameters'>
        /// Parameters to pass to the Start Roles operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request and error information regarding
        /// the failure.
        /// </returns>
        Task<OperationStatusResponse> StartRolesAsync(string serviceName, string deploymentName, VirtualMachineStartRolesParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Update Role operation adds a virtual machine to an existing
        /// deployment.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj157187.aspx
        /// for more information)
        /// </summary>
        /// <param name='serviceName'>
        /// The name of your service.
        /// </param>
        /// <param name='deploymentName'>
        /// The name of your deployment.
        /// </param>
        /// <param name='virtualMachineName'>
        /// The name of your virtual machine.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Update Virtual Machine operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request and error information regarding
        /// the failure.
        /// </returns>
        Task<OperationStatusResponse> UpdateAsync(string serviceName, string deploymentName, string virtualMachineName, VirtualMachineUpdateParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Update Load Balanced Endpoint Set operation changes the
        /// specified load-balanced InputEndpoints on all the roles of an
        /// Infrastructure as a Service deployment. Non-load-balanced
        /// endpoints must be changed using UpdateRole.
        /// </summary>
        /// <param name='serviceName'>
        /// The name of your service.
        /// </param>
        /// <param name='deploymentName'>
        /// The name of your deployment.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Update Load Balanced Endpoint Set
        /// operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request and error information regarding
        /// the failure.
        /// </returns>
        Task<OperationStatusResponse> UpdateLoadBalancedEndpointSetAsync(string serviceName, string deploymentName, VirtualMachineUpdateLoadBalancedSetParameters parameters, CancellationToken cancellationToken);
    }
}
