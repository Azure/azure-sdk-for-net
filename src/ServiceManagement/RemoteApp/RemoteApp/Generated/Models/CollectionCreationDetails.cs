// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Hyak.Common;
using Microsoft.WindowsAzure.Management.RemoteApp.Models;

namespace Microsoft.WindowsAzure.Management.RemoteApp.Models
{
    /// <summary>
    /// The parameter for collection creation request.
    /// </summary>
    public partial class CollectionCreationDetails
    {
        private ActiveDirectoryConfig _adInfo;
        
        /// <summary>
        /// Optional. Active Directory configuration details.
        /// </summary>
        public ActiveDirectoryConfig AdInfo
        {
            get { return this._adInfo; }
            set { this._adInfo = value; }
        }
        
        private IList<SecurityPrincipal> _allowedPrincipals;
        
        /// <summary>
        /// Optional. The initial list of users to give access to after
        /// creation of the collection.
        /// </summary>
        public IList<SecurityPrincipal> AllowedPrincipals
        {
            get { return this._allowedPrincipals; }
            set { this._allowedPrincipals = value; }
        }
        
        private string _customRdpProperty;
        
        /// <summary>
        /// Optional. Customer defined Remote Desktop Protocol (RDP) properties
        /// of the collection.
        /// </summary>
        public string CustomRdpProperty
        {
            get { return this._customRdpProperty; }
            set { this._customRdpProperty = value; }
        }
        
        private string _description;
        
        /// <summary>
        /// Optional. The description of the collection.
        /// </summary>
        public string Description
        {
            get { return this._description; }
            set { this._description = value; }
        }
        
        private IList<string> _dnsServers;
        
        /// <summary>
        /// Optional. List of the DNS Servers.
        /// </summary>
        public IList<string> DnsServers
        {
            get { return this._dnsServers; }
            set { this._dnsServers = value; }
        }
        
        private CollectionMode _mode;
        
        /// <summary>
        /// Optional. The collection mode.
        /// </summary>
        public CollectionMode Mode
        {
            get { return this._mode; }
            set { this._mode = value; }
        }
        
        private string _name;
        
        /// <summary>
        /// Required. The collection name.
        /// </summary>
        public string Name
        {
            get { return this._name; }
            set { this._name = value; }
        }
        
        private string _planName;
        
        /// <summary>
        /// Required. The RemoteApp plan to use.
        /// </summary>
        public string PlanName
        {
            get { return this._planName; }
            set { this._planName = value; }
        }
        
        private IList<PublishedApplicationDetails> _publishedApplications;
        
        /// <summary>
        /// Optional. The list of applications to be initially published after
        /// creation of the collection.
        /// </summary>
        public IList<PublishedApplicationDetails> PublishedApplications
        {
            get { return this._publishedApplications; }
            set { this._publishedApplications = value; }
        }
        
        private bool _readyForPublishing;
        
        /// <summary>
        /// Optional. A flag denoting if this collection is ready for
        /// publishing operations.
        /// </summary>
        public bool ReadyForPublishing
        {
            get { return this._readyForPublishing; }
            set { this._readyForPublishing = value; }
        }
        
        private string _region;
        
        /// <summary>
        /// Optional. The location of the collection (required for cloud-only
        /// collections, optional for hybrid collections)
        /// </summary>
        public string Region
        {
            get { return this._region; }
            set { this._region = value; }
        }
        
        private string _subnetName;
        
        /// <summary>
        /// Optional. The subnet name of the customer created Azure VNet.
        /// </summary>
        public string SubnetName
        {
            get { return this._subnetName; }
            set { this._subnetName = value; }
        }
        
        private string _templateImageName;
        
        /// <summary>
        /// Optional. The name of the template image to be used to create this
        /// collection.
        /// </summary>
        public string TemplateImageName
        {
            get { return this._templateImageName; }
            set { this._templateImageName = value; }
        }
        
        private string _vNetName;
        
        /// <summary>
        /// Optional. The VNet name associated with this collection.
        /// </summary>
        public string VNetName
        {
            get { return this._vNetName; }
            set { this._vNetName = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the CollectionCreationDetails class.
        /// </summary>
        public CollectionCreationDetails()
        {
            this.AllowedPrincipals = new LazyList<SecurityPrincipal>();
            this.DnsServers = new LazyList<string>();
            this.PublishedApplications = new LazyList<PublishedApplicationDetails>();
        }
        
        /// <summary>
        /// Initializes a new instance of the CollectionCreationDetails class
        /// with required arguments.
        /// </summary>
        public CollectionCreationDetails(string name, string planName)
            : this()
        {
            if (name == null)
            {
                throw new ArgumentNullException("name");
            }
            if (planName == null)
            {
                throw new ArgumentNullException("planName");
            }
            this.Name = name;
            this.PlanName = planName;
        }
    }
}
