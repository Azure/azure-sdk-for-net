// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using Microsoft.WindowsAzure.Management.RemoteApp.Models;

namespace Microsoft.WindowsAzure.Management.RemoteApp.Models
{
    /// <summary>
    /// Properties of the virtual network.
    /// </summary>
    public partial class VNet : VNetCommonFields
    {
        private string _name;
        
        /// <summary>
        /// Optional. Virtual network name.
        /// </summary>
        public string Name
        {
            get { return this._name; }
            set { this._name = value; }
        }
        
        private string _sharedKey;
        
        /// <summary>
        /// Optional. The shared key for the VPN device to use.
        /// </summary>
        public string SharedKey
        {
            get { return this._sharedKey; }
            set { this._sharedKey = value; }
        }
        
        private VNetState _state;
        
        /// <summary>
        /// Optional. Virtual network state.
        /// </summary>
        public VNetState State
        {
            get { return this._state; }
            set { this._state = value; }
        }
        
        private string _stateInfo;
        
        /// <summary>
        /// Optional. Additional information on the virtual network state.
        /// </summary>
        public string StateInfo
        {
            get { return this._stateInfo; }
            set { this._stateInfo = value; }
        }
        
        private bool _upgradeInProgress;
        
        /// <summary>
        /// Optional. Flag indicating whether the VNet is currently being
        /// upgraded.
        /// </summary>
        public bool UpgradeInProgress
        {
            get { return this._upgradeInProgress; }
            set { this._upgradeInProgress = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the VNet class.
        /// </summary>
        public VNet()
        {
        }
    }
}
