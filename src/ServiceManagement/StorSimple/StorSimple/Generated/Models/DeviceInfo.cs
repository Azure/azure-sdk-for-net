// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using Microsoft.WindowsAzure.Management.StorSimple.Models;

namespace Microsoft.WindowsAzure.Management.StorSimple.Models
{
    /// <summary>
    /// The Device Information
    /// </summary>
    public partial class DeviceInfo
    {
        private int _aCRCount;
        
        /// <summary>
        /// Required. The Count of Access Control Records existing on the
        /// device.
        /// </summary>
        public int ACRCount
        {
            get { return this._aCRCount; }
            set { this._aCRCount = value; }
        }
        
        private string _activationTime;
        
        /// <summary>
        /// Required. The Activation Time
        /// </summary>
        public string ActivationTime
        {
            get { return this._activationTime; }
            set { this._activationTime = value; }
        }
        
        private ControllerId _activeController;
        
        /// <summary>
        /// Required. The Active Controller of the Device
        /// </summary>
        public ControllerId ActiveController
        {
            get { return this._activeController; }
            set { this._activeController = value; }
        }
        
        private long _availableStorageInBytes;
        
        /// <summary>
        /// Required. The available storage capacity in device in Bytes
        /// </summary>
        public long AvailableStorageInBytes
        {
            get { return this._availableStorageInBytes; }
            set { this._availableStorageInBytes = value; }
        }
        
        private int _cloudCredCount;
        
        /// <summary>
        /// Required. The Count of CloudCreds existing on the device.
        /// </summary>
        public int CloudCredCount
        {
            get { return this._cloudCredCount; }
            set { this._cloudCredCount = value; }
        }
        
        private string _culture;
        
        /// <summary>
        /// Required. The Culture
        /// </summary>
        public string Culture
        {
            get { return this._culture; }
            set { this._culture = value; }
        }
        
        private ControllerId _currentController;
        
        /// <summary>
        /// Required. The Current Controller of the Device
        /// </summary>
        public ControllerId CurrentController
        {
            get { return this._currentController; }
            set { this._currentController = value; }
        }
        
        private int _dataContainerCount;
        
        /// <summary>
        /// Required. The Count of DataContainers existing on the device.
        /// </summary>
        public int DataContainerCount
        {
            get { return this._dataContainerCount; }
            set { this._dataContainerCount = value; }
        }
        
        private string _description;
        
        /// <summary>
        /// Required. The Description
        /// </summary>
        public string Description
        {
            get { return this._description; }
            set { this._description = value; }
        }
        
        private string _deviceId;
        
        /// <summary>
        /// Required. The Device Id
        /// </summary>
        public string DeviceId
        {
            get { return this._deviceId; }
            set { this._deviceId = value; }
        }
        
        private string _deviceSoftwareVersion;
        
        /// <summary>
        /// Required. The version of the Device Software
        /// </summary>
        public string DeviceSoftwareVersion
        {
            get { return this._deviceSoftwareVersion; }
            set { this._deviceSoftwareVersion = value; }
        }
        
        private string _friendlyName;
        
        /// <summary>
        /// Required. The friendly name for the Device
        /// </summary>
        public string FriendlyName
        {
            get { return this._friendlyName; }
            set { this._friendlyName = value; }
        }
        
        private bool _isConfigUpdated;
        
        /// <summary>
        /// Required. This indicates that the Device is Configured Properly
        /// post Registration
        /// </summary>
        public bool IsConfigUpdated
        {
            get { return this._isConfigUpdated; }
            set { this._isConfigUpdated = value; }
        }
        
        private bool _isVirtualApplianceInterimEntry;
        
        /// <summary>
        /// Required. This signifies that this is a Virtual Appliance which is
        /// in process of provisioning.
        /// </summary>
        public bool IsVirtualApplianceInterimEntry
        {
            get { return this._isVirtualApplianceInterimEntry; }
            set { this._isVirtualApplianceInterimEntry = value; }
        }
        
        private string _location;
        
        /// <summary>
        /// Required. This is Location of the Virtual Appliance.
        /// </summary>
        public string Location
        {
            get { return this._location; }
            set { this._location = value; }
        }
        
        private string _modelDescription;
        
        /// <summary>
        /// Required. The Model Description
        /// </summary>
        public string ModelDescription
        {
            get { return this._modelDescription; }
            set { this._modelDescription = value; }
        }
        
        private int _nNicCards;
        
        /// <summary>
        /// Required. Number of Nic cards on the device.
        /// </summary>
        public int NNicCards
        {
            get { return this._nNicCards; }
            set { this._nNicCards = value; }
        }
        
        private long _provisionedStorageInBytes;
        
        /// <summary>
        /// Required. The Provisioned Storage in Bytes
        /// </summary>
        public long ProvisionedStorageInBytes
        {
            get { return this._provisionedStorageInBytes; }
            set { this._provisionedStorageInBytes = value; }
        }
        
        private string _serialNumber;
        
        /// <summary>
        /// Required. The Device Serial Number
        /// </summary>
        public string SerialNumber
        {
            get { return this._serialNumber; }
            set { this._serialNumber = value; }
        }
        
        private DeviceStatus _status;
        
        /// <summary>
        /// Required. The Device Status
        /// </summary>
        public DeviceStatus Status
        {
            get { return this._status; }
            set { this._status = value; }
        }
        
        private string _targetIQN;
        
        /// <summary>
        /// Required. The Target IQN
        /// </summary>
        public string TargetIQN
        {
            get { return this._targetIQN; }
            set { this._targetIQN = value; }
        }
        
        private string _timeZone;
        
        /// <summary>
        /// Required. The Time Zone of the Device
        /// </summary>
        public string TimeZone
        {
            get { return this._timeZone; }
            set { this._timeZone = value; }
        }
        
        private long _totalStorageInBytes;
        
        /// <summary>
        /// Required. The Total Storage Capacity of the Device in Bytes
        /// </summary>
        public long TotalStorageInBytes
        {
            get { return this._totalStorageInBytes; }
            set { this._totalStorageInBytes = value; }
        }
        
        private DeviceType _type;
        
        /// <summary>
        /// Required. The type of device
        /// </summary>
        public DeviceType Type
        {
            get { return this._type; }
            set { this._type = value; }
        }
        
        private long _usingStorageInBytes;
        
        /// <summary>
        /// Required. The used Storage in Bytes
        /// </summary>
        public long UsingStorageInBytes
        {
            get { return this._usingStorageInBytes; }
            set { this._usingStorageInBytes = value; }
        }
        
        private int _volumeCount;
        
        /// <summary>
        /// Required. The Count of Volumes existing on the device.
        /// </summary>
        public int VolumeCount
        {
            get { return this._volumeCount; }
            set { this._volumeCount = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the DeviceInfo class.
        /// </summary>
        public DeviceInfo()
        {
        }
    }
}
