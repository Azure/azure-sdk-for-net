// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;

namespace Microsoft.WindowsAzure.Management.StorSimple.Models
{
    /// <summary>
    /// This class respresents MigrationBackupElement.
    /// </summary>
    public partial class MigrationBackupElement
    {
        private string _sourceVolumeId;
        
        /// <summary>
        /// Required. Gets or sets Id of the source volume
        /// </summary>
        public string SourceVolumeId
        {
            get { return this._sourceVolumeId; }
            set { this._sourceVolumeId = value; }
        }
        
        private string _sourceVolumeName;
        
        /// <summary>
        /// Required. Gets or sets the name of source volume
        /// </summary>
        public string SourceVolumeName
        {
            get { return this._sourceVolumeName; }
            set { this._sourceVolumeName = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the MigrationBackupElement class.
        /// </summary>
        public MigrationBackupElement()
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the MigrationBackupElement class with
        /// required arguments.
        /// </summary>
        public MigrationBackupElement(string sourceVolumeId, string sourceVolumeName)
            : this()
        {
            if (sourceVolumeId == null)
            {
                throw new ArgumentNullException("sourceVolumeId");
            }
            if (sourceVolumeName == null)
            {
                throw new ArgumentNullException("sourceVolumeName");
            }
            this.SourceVolumeId = sourceVolumeId;
            this.SourceVolumeName = sourceVolumeName;
        }
    }
}
