// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.WindowsAzure.Management.StorSimple.Models;

namespace Microsoft.WindowsAzure.Management.StorSimple.Models
{
    /// <summary>
    /// This class respresents the details for backup schedules & volumes under
    /// the backup policy.
    /// </summary>
    public partial class UpdateBackupPolicyConfig
    {
        private IList<BackupScheduleBase> _backupSchedulesToBeAdded;
        
        /// <summary>
        /// Optional. The backup schedules added to the backup policy.
        /// </summary>
        public IList<BackupScheduleBase> BackupSchedulesToBeAdded
        {
            get { return this._backupSchedulesToBeAdded; }
            set { this._backupSchedulesToBeAdded = value; }
        }
        
        private IList<string> _backupSchedulesToBeDeleted;
        
        /// <summary>
        /// Optional. The backup schedules deleted from the backup policy.
        /// </summary>
        public IList<string> BackupSchedulesToBeDeleted
        {
            get { return this._backupSchedulesToBeDeleted; }
            set { this._backupSchedulesToBeDeleted = value; }
        }
        
        private IList<BackupScheduleUpdateRequest> _backupSchedulesToBeUpdated;
        
        /// <summary>
        /// Optional. The backup schedules updated in the backup policy.
        /// </summary>
        public IList<BackupScheduleUpdateRequest> BackupSchedulesToBeUpdated
        {
            get { return this._backupSchedulesToBeUpdated; }
            set { this._backupSchedulesToBeUpdated = value; }
        }
        
        private string _instanceId;
        
        /// <summary>
        /// Optional. The instance identifier
        /// </summary>
        public string InstanceId
        {
            get { return this._instanceId; }
            set { this._instanceId = value; }
        }
        
        private bool _isPolicyRenamed;
        
        /// <summary>
        /// Required. Is the policy renamed
        /// </summary>
        public bool IsPolicyRenamed
        {
            get { return this._isPolicyRenamed; }
            set { this._isPolicyRenamed = value; }
        }
        
        private string _name;
        
        /// <summary>
        /// Required. The name of the entity
        /// </summary>
        public string Name
        {
            get { return this._name; }
            set { this._name = value; }
        }
        
        private OperationInProgress _operationInProgress;
        
        /// <summary>
        /// Required. Operation In Progress
        /// </summary>
        public OperationInProgress OperationInProgress
        {
            get { return this._operationInProgress; }
            set { this._operationInProgress = value; }
        }
        
        private IList<string> _volumeIds;
        
        /// <summary>
        /// Optional. The list of volume ids under this backup policy.
        /// </summary>
        public IList<string> VolumeIds
        {
            get { return this._volumeIds; }
            set { this._volumeIds = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the UpdateBackupPolicyConfig class.
        /// </summary>
        public UpdateBackupPolicyConfig()
        {
            this.BackupSchedulesToBeAdded = new List<BackupScheduleBase>();
            this.BackupSchedulesToBeDeleted = new List<string>();
            this.BackupSchedulesToBeUpdated = new List<BackupScheduleUpdateRequest>();
            this.VolumeIds = new List<string>();
        }
        
        /// <summary>
        /// Initializes a new instance of the UpdateBackupPolicyConfig class
        /// with required arguments.
        /// </summary>
        public UpdateBackupPolicyConfig(string name, OperationInProgress operationInProgress, bool isPolicyRenamed)
            : this()
        {
            if (name == null)
            {
                throw new ArgumentNullException("name");
            }
            this.Name = name;
            this.OperationInProgress = operationInProgress;
            this.IsPolicyRenamed = isPolicyRenamed;
        }
    }
}
