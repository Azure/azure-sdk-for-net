// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.WindowsAzure.Management.StorSimple.Models;

namespace Microsoft.WindowsAzure.Management.StorSimple.Models
{
    /// <summary>
    /// Represents each row in the cloud settings grid on the portal
    /// </summary>
    public partial class DataContainerGroup
    {
        private IList<DRDataContainer> _dCGroup;
        
        /// <summary>
        /// Required. List of DR volume containers
        /// </summary>
        public IList<DRDataContainer> DCGroup
        {
            get { return this._dCGroup; }
            set { this._dCGroup = value; }
        }
        
        private string _ineligibilityMessage;
        
        /// <summary>
        /// Required. Reason why the data container group is not eligible for
        /// failover
        /// </summary>
        public string IneligibilityMessage
        {
            get { return this._ineligibilityMessage; }
            set { this._ineligibilityMessage = value; }
        }
        
        private bool _isDCGroupEligibleForDR;
        
        /// <summary>
        /// Required. Flag indicating whether this instance is eligible for DR
        /// </summary>
        public bool IsDCGroupEligibleForDR
        {
            get { return this._isDCGroupEligibleForDR; }
            set { this._isDCGroupEligibleForDR = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the DataContainerGroup class.
        /// </summary>
        public DataContainerGroup()
        {
            this.DCGroup = new List<DRDataContainer>();
        }
        
        /// <summary>
        /// Initializes a new instance of the DataContainerGroup class with
        /// required arguments.
        /// </summary>
        public DataContainerGroup(List<DRDataContainer> dCGroup, string ineligibilityMessage, bool isDCGroupEligibleForDR)
            : this()
        {
            if (dCGroup == null)
            {
                throw new ArgumentNullException("dCGroup");
            }
            if (ineligibilityMessage == null)
            {
                throw new ArgumentNullException("ineligibilityMessage");
            }
            this.DCGroup = dCGroup;
            this.IneligibilityMessage = ineligibilityMessage;
            this.IsDCGroupEligibleForDR = isDCGroupEligibleForDR;
        }
    }
}
