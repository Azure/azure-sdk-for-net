// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.WindowsAzure.Management.StorSimple.Models;

namespace Microsoft.WindowsAzure.Management.StorSimple.Models
{
    /// <summary>
    /// Info about the virtual disk
    /// </summary>
    public partial class VirtualDiskRequest
    {
        private AccessType _accessType;
        
        /// <summary>
        /// Required. AccessType
        /// </summary>
        public AccessType AccessType
        {
            get { return this._accessType; }
            set { this._accessType = value; }
        }
        
        private IList<string> _acrIdList;
        
        /// <summary>
        /// Optional. List of referenced ACR Ids
        /// </summary>
        public IList<string> AcrIdList
        {
            get { return this._acrIdList; }
            set { this._acrIdList = value; }
        }
        
        private IList<AccessControlRecord> _acrList;
        
        /// <summary>
        /// Required. List of access control record
        /// </summary>
        public IList<AccessControlRecord> AcrList
        {
            get { return this._acrList; }
            set { this._acrList = value; }
        }
        
        private AppType _appType;
        
        /// <summary>
        /// Required. Primary or Archived volume.
        /// </summary>
        public AppType AppType
        {
            get { return this._appType; }
            set { this._appType = value; }
        }
        
        private DataContainer _dataContainer;
        
        /// <summary>
        /// Required. Corresponding Data Container
        /// </summary>
        public DataContainer DataContainer
        {
            get { return this._dataContainer; }
            set { this._dataContainer = value; }
        }
        
        private string _dataContainerId;
        
        /// <summary>
        /// Optional. Data Container Id for the disk
        /// </summary>
        public string DataContainerId
        {
            get { return this._dataContainerId; }
            set { this._dataContainerId = value; }
        }
        
        private string _instanceId;
        
        /// <summary>
        /// Optional. The instance identifier
        /// </summary>
        public string InstanceId
        {
            get { return this._instanceId; }
            set { this._instanceId = value; }
        }
        
        private string _internalInstanceId;
        
        /// <summary>
        /// Optional. Internal Instance Id for the virtual disk
        /// </summary>
        public string InternalInstanceId
        {
            get { return this._internalInstanceId; }
            set { this._internalInstanceId = value; }
        }
        
        private bool _isBackupEnabled;
        
        /// <summary>
        /// Optional. True if this virtual disk is part of any backup policy
        /// </summary>
        public bool IsBackupEnabled
        {
            get { return this._isBackupEnabled; }
            set { this._isBackupEnabled = value; }
        }
        
        private bool _isDefaultBackupEnabled;
        
        /// <summary>
        /// Required. True if default backup is enabled
        /// </summary>
        public bool IsDefaultBackupEnabled
        {
            get { return this._isDefaultBackupEnabled; }
            set { this._isDefaultBackupEnabled = value; }
        }
        
        private bool _isMonitoringEnabled;
        
        /// <summary>
        /// Optional. True if monitoring is enabled for the virtual disk
        /// </summary>
        public bool IsMonitoringEnabled
        {
            get { return this._isMonitoringEnabled; }
            set { this._isMonitoringEnabled = value; }
        }
        
        private string _name;
        
        /// <summary>
        /// Required. The name of the entity
        /// </summary>
        public string Name
        {
            get { return this._name; }
            set { this._name = value; }
        }
        
        private bool _online;
        
        /// <summary>
        /// Required. True if the virtual disk is online
        /// </summary>
        public bool Online
        {
            get { return this._online; }
            set { this._online = value; }
        }
        
        private OperationInProgress _operationInProgress;
        
        /// <summary>
        /// Optional. Is operation in progress
        /// </summary>
        public OperationInProgress OperationInProgress
        {
            get { return this._operationInProgress; }
            set { this._operationInProgress = value; }
        }
        
        private long _sizeInBytes;
        
        /// <summary>
        /// Required. Size of Virtual Disk
        /// </summary>
        public long SizeInBytes
        {
            get { return this._sizeInBytes; }
            set { this._sizeInBytes = value; }
        }
        
        private string _vSN;
        
        /// <summary>
        /// Optional. Virtual Serial Number of the virtual disk
        /// </summary>
        public string VSN
        {
            get { return this._vSN; }
            set { this._vSN = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the VirtualDiskRequest class.
        /// </summary>
        public VirtualDiskRequest()
        {
            this.AcrIdList = new List<string>();
            this.AcrList = new List<AccessControlRecord>();
        }
    }
}
