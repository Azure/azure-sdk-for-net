// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;

namespace Microsoft.WindowsAzure.Management.StorSimple.Models
{
    /// <summary>
    /// Device DNS Server settings
    /// </summary>
    public partial class DnsServerSettings
    {
        private string _primaryIPv4;
        
        /// <summary>
        /// Required. Gets or sets the primary IPV4
        /// </summary>
        public string PrimaryIPv4
        {
            get { return this._primaryIPv4; }
            set { this._primaryIPv4 = value; }
        }
        
        private string _primaryIPv6;
        
        /// <summary>
        /// Required. Gets or sets the primary IPV6
        /// </summary>
        public string PrimaryIPv6
        {
            get { return this._primaryIPv6; }
            set { this._primaryIPv6 = value; }
        }
        
        private IList<string> _secondaryIPv4;
        
        /// <summary>
        /// Optional. Gets or sets the secondary IPV4.
        /// </summary>
        public IList<string> SecondaryIPv4
        {
            get { return this._secondaryIPv4; }
            set { this._secondaryIPv4 = value; }
        }
        
        private IList<string> _secondaryIPv6;
        
        /// <summary>
        /// Optional. Gets or sets the secondary IPv6.
        /// </summary>
        public IList<string> SecondaryIPv6
        {
            get { return this._secondaryIPv6; }
            set { this._secondaryIPv6 = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the DnsServerSettings class.
        /// </summary>
        public DnsServerSettings()
        {
            this.SecondaryIPv4 = new List<string>();
            this.SecondaryIPv6 = new List<string>();
        }
        
        /// <summary>
        /// Initializes a new instance of the DnsServerSettings class with
        /// required arguments.
        /// </summary>
        public DnsServerSettings(string primaryIPv4, string primaryIPv6)
            : this()
        {
            if (primaryIPv4 == null)
            {
                throw new ArgumentNullException("primaryIPv4");
            }
            if (primaryIPv6 == null)
            {
                throw new ArgumentNullException("primaryIPv6");
            }
            this.PrimaryIPv4 = primaryIPv4;
            this.PrimaryIPv6 = primaryIPv6;
        }
    }
}
