// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure;
using Microsoft.WindowsAzure.Management.StorSimple;
using Microsoft.WindowsAzure.Management.StorSimple.Models;

namespace Microsoft.WindowsAzure.Management.StorSimple
{
    /// <summary>
    /// This is an RESTFul API to manage you StorSimple Objects
    /// </summary>
    public static partial class MigrationOperationsExtensions
    {
        /// <summary>
        /// Hydra spec for update data container statusThe rest api updates the
        /// status of volume container migration from target device to service
        /// for all volume container in the specified config
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.StorSimple.IMigrationOperations.
        /// </param>
        /// <param name='configId'>
        /// Required. Unique identifier for config specified while importing
        /// the config to service
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Required. The Custom Request Headers which client must use.
        /// </param>
        /// <returns>
        /// This is the Task Response for all Async Calls
        /// </returns>
        public static TaskResponse BeginUpdateDataContainerMigrationStatus(this IMigrationOperations operations, string configId, CustomRequestHeaders customRequestHeaders)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IMigrationOperations)s).BeginUpdateDataContainerMigrationStatusAsync(configId, customRequestHeaders);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Hydra spec for update data container statusThe rest api updates the
        /// status of volume container migration from target device to service
        /// for all volume container in the specified config
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.StorSimple.IMigrationOperations.
        /// </param>
        /// <param name='configId'>
        /// Required. Unique identifier for config specified while importing
        /// the config to service
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Required. The Custom Request Headers which client must use.
        /// </param>
        /// <returns>
        /// This is the Task Response for all Async Calls
        /// </returns>
        public static Task<TaskResponse> BeginUpdateDataContainerMigrationStatusAsync(this IMigrationOperations operations, string configId, CustomRequestHeaders customRequestHeaders)
        {
            return operations.BeginUpdateDataContainerMigrationStatusAsync(configId, customRequestHeaders, CancellationToken.None);
        }
        
        /// <summary>
        /// Hydra spec for update confirm migration statusThe rest api updates
        /// the confirm (commit/rollback) status from target appliance to
        /// service for all data container in the specified config
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.StorSimple.IMigrationOperations.
        /// </param>
        /// <param name='configId'>
        /// Required. Unique identifier for config specified while importing
        /// the config to service
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Required. The Custom Request Headers which client must use.
        /// </param>
        /// <returns>
        /// This is the Task Response for all Async Calls
        /// </returns>
        public static TaskResponse BeginUpdateMigrationConfirmStatus(this IMigrationOperations operations, string configId, CustomRequestHeaders customRequestHeaders)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IMigrationOperations)s).BeginUpdateMigrationConfirmStatusAsync(configId, customRequestHeaders);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Hydra spec for update confirm migration statusThe rest api updates
        /// the confirm (commit/rollback) status from target appliance to
        /// service for all data container in the specified config
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.StorSimple.IMigrationOperations.
        /// </param>
        /// <param name='configId'>
        /// Required. Unique identifier for config specified while importing
        /// the config to service
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Required. The Custom Request Headers which client must use.
        /// </param>
        /// <returns>
        /// This is the Task Response for all Async Calls
        /// </returns>
        public static Task<TaskResponse> BeginUpdateMigrationConfirmStatusAsync(this IMigrationOperations operations, string configId, CustomRequestHeaders customRequestHeaders)
        {
            return operations.BeginUpdateMigrationConfirmStatusAsync(configId, customRequestHeaders, CancellationToken.None);
        }
        
        /// <summary>
        /// Hydra spec update migration plan rest apiThe rest api updates the
        /// migration plan from target appliance to service for all volume
        /// container(s) in the specified config
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.StorSimple.IMigrationOperations.
        /// </param>
        /// <param name='configId'>
        /// Required. Unique identifier for config specified while importing
        /// the config to service
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Required. The Custom Request Headers which client must use.
        /// </param>
        /// <returns>
        /// This is the Task Response for all Async Calls
        /// </returns>
        public static TaskResponse BeginUpdateMigrationPlan(this IMigrationOperations operations, string configId, CustomRequestHeaders customRequestHeaders)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IMigrationOperations)s).BeginUpdateMigrationPlanAsync(configId, customRequestHeaders);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Hydra spec update migration plan rest apiThe rest api updates the
        /// migration plan from target appliance to service for all volume
        /// container(s) in the specified config
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.StorSimple.IMigrationOperations.
        /// </param>
        /// <param name='configId'>
        /// Required. Unique identifier for config specified while importing
        /// the config to service
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Required. The Custom Request Headers which client must use.
        /// </param>
        /// <returns>
        /// This is the Task Response for all Async Calls
        /// </returns>
        public static Task<TaskResponse> BeginUpdateMigrationPlanAsync(this IMigrationOperations operations, string configId, CustomRequestHeaders customRequestHeaders)
        {
            return operations.BeginUpdateMigrationPlanAsync(configId, customRequestHeaders, CancellationToken.None);
        }
        
        /// <summary>
        /// Hydra spec for confirm migration rest apiThe rest api confirms the
        /// commit or rollback of the migrated data containers for all data
        /// container in the specified config
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.StorSimple.IMigrationOperations.
        /// </param>
        /// <param name='configId'>
        /// Required. Unique identifier for config specified while importing
        /// the config to service
        /// </param>
        /// <param name='confirmMigrationRequest'>
        /// Required. The confirm migration request specifies the list of
        /// volume containers and rollback/commit operation to be performed
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Required. The Custom Request Headers which client must use.
        /// </param>
        /// <returns>
        /// The response model for migration job status.
        /// </returns>
        public static MigrationJobStatus ConfirmMigration(this IMigrationOperations operations, string configId, MigrationConfirmStatusRequest confirmMigrationRequest, CustomRequestHeaders customRequestHeaders)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IMigrationOperations)s).ConfirmMigrationAsync(configId, confirmMigrationRequest, customRequestHeaders);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Hydra spec for confirm migration rest apiThe rest api confirms the
        /// commit or rollback of the migrated data containers for all data
        /// container in the specified config
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.StorSimple.IMigrationOperations.
        /// </param>
        /// <param name='configId'>
        /// Required. Unique identifier for config specified while importing
        /// the config to service
        /// </param>
        /// <param name='confirmMigrationRequest'>
        /// Required. The confirm migration request specifies the list of
        /// volume containers and rollback/commit operation to be performed
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Required. The Custom Request Headers which client must use.
        /// </param>
        /// <returns>
        /// The response model for migration job status.
        /// </returns>
        public static Task<MigrationJobStatus> ConfirmMigrationAsync(this IMigrationOperations operations, string configId, MigrationConfirmStatusRequest confirmMigrationRequest, CustomRequestHeaders customRequestHeaders)
        {
            return operations.ConfirmMigrationAsync(configId, confirmMigrationRequest, customRequestHeaders, CancellationToken.None);
        }
        
        /// <summary>
        /// Hydra spec for Get all migration rest apiThe rest api returns the
        /// config ids for all configs imported against the selected
        /// storsimple resource
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.StorSimple.IMigrationOperations.
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Required. The Custom Request Headers which client must use.
        /// </param>
        /// <returns>
        /// The response body for get migration plan rest api.
        /// </returns>
        public static MigrationPlanList GetAllMigrationPlan(this IMigrationOperations operations, CustomRequestHeaders customRequestHeaders)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IMigrationOperations)s).GetAllMigrationPlanAsync(customRequestHeaders);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Hydra spec for Get all migration rest apiThe rest api returns the
        /// config ids for all configs imported against the selected
        /// storsimple resource
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.StorSimple.IMigrationOperations.
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Required. The Custom Request Headers which client must use.
        /// </param>
        /// <returns>
        /// The response body for get migration plan rest api.
        /// </returns>
        public static Task<MigrationPlanList> GetAllMigrationPlanAsync(this IMigrationOperations operations, CustomRequestHeaders customRequestHeaders)
        {
            return operations.GetAllMigrationPlanAsync(customRequestHeaders, CancellationToken.None);
        }
        
        /// <summary>
        /// Hydra spec for Get data container migration statusThe rest api
        /// returns the status of volume container migration status from
        /// service for all volume container in the specified config
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.StorSimple.IMigrationOperations.
        /// </param>
        /// <param name='configId'>
        /// Required. Unique identifier for config specified while importing
        /// the config to service
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Required. The Custom Request Headers which client must use.
        /// </param>
        /// <returns>
        /// The response body for get data container migration status.
        /// </returns>
        public static MigrationDataContainerStatusList GetDataContainerMigrationStatus(this IMigrationOperations operations, string configId, CustomRequestHeaders customRequestHeaders)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IMigrationOperations)s).GetDataContainerMigrationStatusAsync(configId, customRequestHeaders);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Hydra spec for Get data container migration statusThe rest api
        /// returns the status of volume container migration status from
        /// service for all volume container in the specified config
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.StorSimple.IMigrationOperations.
        /// </param>
        /// <param name='configId'>
        /// Required. Unique identifier for config specified while importing
        /// the config to service
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Required. The Custom Request Headers which client must use.
        /// </param>
        /// <returns>
        /// The response body for get data container migration status.
        /// </returns>
        public static Task<MigrationDataContainerStatusList> GetDataContainerMigrationStatusAsync(this IMigrationOperations operations, string configId, CustomRequestHeaders customRequestHeaders)
        {
            return operations.GetDataContainerMigrationStatusAsync(configId, customRequestHeaders, CancellationToken.None);
        }
        
        /// <summary>
        /// Hydra spec for get confirm migration status rest apiThe rest api
        /// gets the confirm (commit/rollback) status from service for all
        /// volume container in the specified config
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.StorSimple.IMigrationOperations.
        /// </param>
        /// <param name='configId'>
        /// Required. Unique identifier for config specified while importing
        /// the config to service
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Required. The Custom Request Headers which client must use.
        /// </param>
        /// <returns>
        /// The response body of migration confirm status rest api.
        /// </returns>
        public static MigrationConfirmStatus GetMigrationConfirmStatus(this IMigrationOperations operations, string configId, CustomRequestHeaders customRequestHeaders)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IMigrationOperations)s).GetMigrationConfirmStatusAsync(configId, customRequestHeaders);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Hydra spec for get confirm migration status rest apiThe rest api
        /// gets the confirm (commit/rollback) status from service for all
        /// volume container in the specified config
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.StorSimple.IMigrationOperations.
        /// </param>
        /// <param name='configId'>
        /// Required. Unique identifier for config specified while importing
        /// the config to service
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Required. The Custom Request Headers which client must use.
        /// </param>
        /// <returns>
        /// The response body of migration confirm status rest api.
        /// </returns>
        public static Task<MigrationConfirmStatus> GetMigrationConfirmStatusAsync(this IMigrationOperations operations, string configId, CustomRequestHeaders customRequestHeaders)
        {
            return operations.GetMigrationConfirmStatusAsync(configId, customRequestHeaders, CancellationToken.None);
        }
        
        /// <summary>
        /// Hydra spec for get migration planThe rest api get the migration
        /// plan from service for all volume container(s) in the specified
        /// config
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.StorSimple.IMigrationOperations.
        /// </param>
        /// <param name='configId'>
        /// Required. Unique identifier for config specified while importing
        /// the config to service
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Required. The Custom Request Headers which client must use.
        /// </param>
        /// <returns>
        /// The response body for get migration plan rest api.
        /// </returns>
        public static MigrationPlanList GetMigrationPlan(this IMigrationOperations operations, string configId, CustomRequestHeaders customRequestHeaders)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IMigrationOperations)s).GetMigrationPlanAsync(configId, customRequestHeaders);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Hydra spec for get migration planThe rest api get the migration
        /// plan from service for all volume container(s) in the specified
        /// config
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.StorSimple.IMigrationOperations.
        /// </param>
        /// <param name='configId'>
        /// Required. Unique identifier for config specified while importing
        /// the config to service
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Required. The Custom Request Headers which client must use.
        /// </param>
        /// <returns>
        /// The response body for get migration plan rest api.
        /// </returns>
        public static Task<MigrationPlanList> GetMigrationPlanAsync(this IMigrationOperations operations, string configId, CustomRequestHeaders customRequestHeaders)
        {
            return operations.GetMigrationPlanAsync(configId, customRequestHeaders, CancellationToken.None);
        }
        
        /// <summary>
        /// Hydra spec for import legacy appliance config rest api.The rest api
        /// imports the legacy config to the service
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.StorSimple.IMigrationOperations.
        /// </param>
        /// <param name='configId'>
        /// Required. Unique id for config being imported
        /// </param>
        /// <param name='request'>
        /// Required. Legacy appliance config to be imported
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Required. The Custom Request Headers which client must use.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static AzureOperationResponse ImportLegacyApplianceConfig(this IMigrationOperations operations, string configId, LegacyApplianceConfig request, CustomRequestHeaders customRequestHeaders)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IMigrationOperations)s).ImportLegacyApplianceConfigAsync(configId, request, customRequestHeaders);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Hydra spec for import legacy appliance config rest api.The rest api
        /// imports the legacy config to the service
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.StorSimple.IMigrationOperations.
        /// </param>
        /// <param name='configId'>
        /// Required. Unique id for config being imported
        /// </param>
        /// <param name='request'>
        /// Required. Legacy appliance config to be imported
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Required. The Custom Request Headers which client must use.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<AzureOperationResponse> ImportLegacyApplianceConfigAsync(this IMigrationOperations operations, string configId, LegacyApplianceConfig request, CustomRequestHeaders customRequestHeaders)
        {
            return operations.ImportLegacyApplianceConfigAsync(configId, request, customRequestHeaders, CancellationToken.None);
        }
        
        /// <summary>
        /// Hydra spec for import data container rest apiThe rest api initiates
        /// the migration of volume containers for all/specific data
        /// container(s) in the given config
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.StorSimple.IMigrationOperations.
        /// </param>
        /// <param name='configId'>
        /// Required. Unique identifier for config specified while importing
        /// the config to service
        /// </param>
        /// <param name='importDCRequest'>
        /// Required. Import data container request which specifies the list of
        /// data containers to be migrated
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Required. The Custom Request Headers which client must use.
        /// </param>
        /// <returns>
        /// The response model for migration job status.
        /// </returns>
        public static MigrationJobStatus MigrationImportDataContainer(this IMigrationOperations operations, string configId, MigrationImportDataContainerRequest importDCRequest, CustomRequestHeaders customRequestHeaders)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IMigrationOperations)s).MigrationImportDataContainerAsync(configId, importDCRequest, customRequestHeaders);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Hydra spec for import data container rest apiThe rest api initiates
        /// the migration of volume containers for all/specific data
        /// container(s) in the given config
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.StorSimple.IMigrationOperations.
        /// </param>
        /// <param name='configId'>
        /// Required. Unique identifier for config specified while importing
        /// the config to service
        /// </param>
        /// <param name='importDCRequest'>
        /// Required. Import data container request which specifies the list of
        /// data containers to be migrated
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Required. The Custom Request Headers which client must use.
        /// </param>
        /// <returns>
        /// The response model for migration job status.
        /// </returns>
        public static Task<MigrationJobStatus> MigrationImportDataContainerAsync(this IMigrationOperations operations, string configId, MigrationImportDataContainerRequest importDCRequest, CustomRequestHeaders customRequestHeaders)
        {
            return operations.MigrationImportDataContainerAsync(configId, importDCRequest, customRequestHeaders, CancellationToken.None);
        }
        
        /// <summary>
        /// Hydra spec for start migration plan rest APIThe rest api starts the
        /// estimation of time taken by migration for all/specific volume
        /// container(s) in the given config
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.StorSimple.IMigrationOperations.
        /// </param>
        /// <param name='startPlanRequest'>
        /// Required. Start migration plan request model. The object passes the
        /// list of volume container(s) whose migration ETA needs to calculated
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Required. The Custom Request Headers which client must use.
        /// </param>
        /// <returns>
        /// The response model for migration job status.
        /// </returns>
        public static MigrationJobStatus StartMigrationPlan(this IMigrationOperations operations, MigrationPlanStartRequest startPlanRequest, CustomRequestHeaders customRequestHeaders)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IMigrationOperations)s).StartMigrationPlanAsync(startPlanRequest, customRequestHeaders);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Hydra spec for start migration plan rest APIThe rest api starts the
        /// estimation of time taken by migration for all/specific volume
        /// container(s) in the given config
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.StorSimple.IMigrationOperations.
        /// </param>
        /// <param name='startPlanRequest'>
        /// Required. Start migration plan request model. The object passes the
        /// list of volume container(s) whose migration ETA needs to calculated
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Required. The Custom Request Headers which client must use.
        /// </param>
        /// <returns>
        /// The response model for migration job status.
        /// </returns>
        public static Task<MigrationJobStatus> StartMigrationPlanAsync(this IMigrationOperations operations, MigrationPlanStartRequest startPlanRequest, CustomRequestHeaders customRequestHeaders)
        {
            return operations.StartMigrationPlanAsync(startPlanRequest, customRequestHeaders, CancellationToken.None);
        }
        
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.StorSimple.IMigrationOperations.
        /// </param>
        /// <param name='configId'>
        /// Required. configId
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Required. The Custom Request Headers which client must use.
        /// </param>
        /// <returns>
        /// Info about the async task
        /// </returns>
        public static TaskStatusInfo UpdateDataContainerMigrationStatus(this IMigrationOperations operations, string configId, CustomRequestHeaders customRequestHeaders)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IMigrationOperations)s).UpdateDataContainerMigrationStatusAsync(configId, customRequestHeaders);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.StorSimple.IMigrationOperations.
        /// </param>
        /// <param name='configId'>
        /// Required. configId
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Required. The Custom Request Headers which client must use.
        /// </param>
        /// <returns>
        /// Info about the async task
        /// </returns>
        public static Task<TaskStatusInfo> UpdateDataContainerMigrationStatusAsync(this IMigrationOperations operations, string configId, CustomRequestHeaders customRequestHeaders)
        {
            return operations.UpdateDataContainerMigrationStatusAsync(configId, customRequestHeaders, CancellationToken.None);
        }
        
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.StorSimple.IMigrationOperations.
        /// </param>
        /// <param name='configId'>
        /// Required. The legacy config id for which migration confirm status
        /// needs to be updated
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Required. The Custom Request Headers which client must use.
        /// </param>
        /// <returns>
        /// Info about the async task
        /// </returns>
        public static TaskStatusInfo UpdateMigrationConfirmStatus(this IMigrationOperations operations, string configId, CustomRequestHeaders customRequestHeaders)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IMigrationOperations)s).UpdateMigrationConfirmStatusAsync(configId, customRequestHeaders);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.StorSimple.IMigrationOperations.
        /// </param>
        /// <param name='configId'>
        /// Required. The legacy config id for which migration confirm status
        /// needs to be updated
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Required. The Custom Request Headers which client must use.
        /// </param>
        /// <returns>
        /// Info about the async task
        /// </returns>
        public static Task<TaskStatusInfo> UpdateMigrationConfirmStatusAsync(this IMigrationOperations operations, string configId, CustomRequestHeaders customRequestHeaders)
        {
            return operations.UpdateMigrationConfirmStatusAsync(configId, customRequestHeaders, CancellationToken.None);
        }
        
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.StorSimple.IMigrationOperations.
        /// </param>
        /// <param name='configId'>
        /// Required. configId
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Required. The Custom Request Headers which client must use.
        /// </param>
        /// <returns>
        /// Info about the async task
        /// </returns>
        public static TaskStatusInfo UpdateMigrationPlan(this IMigrationOperations operations, string configId, CustomRequestHeaders customRequestHeaders)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IMigrationOperations)s).UpdateMigrationPlanAsync(configId, customRequestHeaders);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.StorSimple.IMigrationOperations.
        /// </param>
        /// <param name='configId'>
        /// Required. configId
        /// </param>
        /// <param name='customRequestHeaders'>
        /// Required. The Custom Request Headers which client must use.
        /// </param>
        /// <returns>
        /// Info about the async task
        /// </returns>
        public static Task<TaskStatusInfo> UpdateMigrationPlanAsync(this IMigrationOperations operations, string configId, CustomRequestHeaders customRequestHeaders)
        {
            return operations.UpdateMigrationPlanAsync(configId, customRequestHeaders, CancellationToken.None);
        }
    }
}
